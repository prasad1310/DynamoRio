
utils.c,7081
try_except_t global_try_except;77,2679
soft_terminate(87,2917
ignore_assert(112,3498
internal_error(137,4280
external_error(191,6386
struct _thread_locks_t 213,7205
    mutex_t *last_lock;last_lock214,7230
#define DUMP_NONZERO(230,8019
#define DUMP_LOCK_INFO_ARGS(233,8176
dump_mutex_callstack(249,9099
dump_owned_locks(269,9686
thread_owns_no_locks(286,10361
thread_owns_one_lock(295,10648
thread_owns_two_locks(307,11113
thread_owns_first_or_both_locks_only(322,11696
dump_process_locks(338,12390
locks_not_closed(373,13932
locks_thread_init(419,15874
locks_thread_exit(432,16381
add_process_lock(450,17326
remove_process_lock(482,18726
mutex_collect_callstack(508,19847
enum {LOCK_NOT_OWNABLE,LOCK_NOT_OWNABLE541,20878
enum {LOCK_NOT_OWNABLE, LOCK_OWNABLE}LOCK_OWNABLE541,20878
deadlock_avoidance_lock(548,21086
deadlock_avoidance_unlock(635,25326
#define DEADLOCK_AVOIDANCE_LOCK(689,27444
#define DEADLOCK_AVOIDANCE_UNLOCK(690,27551
#  define DEADLOCK_AVOIDANCE_LOCK(692,27647
#  define DEADLOCK_AVOIDANCE_UNLOCK(693,27723
mutex_fork_reset(698,27841
static uint spinlock_count 715,28491
utils_init(720,28720
spinmutex_trylock(750,29898
spinmutex_lock(761,30264
spinmutex_lock_no_yield(773,30567
spinmutex_unlock(791,31131
spinmutex_delete(805,31627
mutex_ownable(813,31825
mutex_lock(828,32129
mutex_trylock(888,34332
mutex_unlock(912,35044
mutex_delete(936,35700
mutex_mark_as_app(958,36342
own_recursive_lock(968,36469
acquire_recursive_lock(979,36767
try_recursive_lock(995,37127
release_recursive_lock(1009,37434
self_owns_recursive_lock(1021,37693
void read_lock(1074,40020
void write_lock(1191,45256
bool write_trylock(1221,46248
void read_unlock(1243,47037
void write_unlock(1282,48640
self_owns_write_lock(1309,49539
struct _broadcast_event_t 1322,49871
    event_t event;1323,49899
    volatile int num_waiting;1324,49918
create_broadcast_event(1328,49972
destroy_broadcast_event(1338,50204
signal_broadcast_event(1349,50565
intend_wait_broadcast_event_helper(1360,50878
unintend_wait_broadcast_event_helper(1365,50985
wait_broadcast_event_helper(1370,51093
hash_value(1386,51475
hashtable_num_bits(1465,54461
bitmap_find_first_set_bit(1489,55086
bitmap_find_set_block(1521,55589
bitmap_find_set_block_sequence(1540,56121
bitmap_initialize_free(1567,56986
bitmap_allocate_blocks(1573,57124
bitmap_free_blocks(1592,57569
bitmap_are_reserved_blocks(1604,57872
bitmap_count_set_bits(1617,58185
bitmap_check_consistency(1631,58364
get_thread_private_logfile(1651,58942
do_file_write(1669,59287
divide_uint64_print(1719,61428
double_print(1759,63363
display_error(1781,64021
print_symbolic_address(1793,64261
print_file(1800,64394
vprint_to_buffer(1814,64804
print_to_buffer(1837,65767
print_log(1853,66235
do_syslog(1877,66750
notify(1894,67322
# define REPORT_MSG_MAX 1991,71388
# define REPORT_MSG_MAX 1993,71468
#define REPORT_LEN_VERSION 1995,71512
#define REPORT_LEN_OPTIONS 2004,71924
#define REPORT_NUM_STACK 2010,72291
# define REPORT_LEN_STACK_EACH 2012,72365
# define REPORT_LEN_STACK_EACH 2014,72411
#define REPORT_LEN_STACK 2017,72533
# define REPORT_LEN_PRIVLIBS 2020,72702
#define ASSERT_ROOM(2032,73342
under_internal_exception(2041,73654
# define EXCEPTION_PREFIX 2057,74145
# define EXCEPTION_PREFIX 2059,74226
#  define CLIENT_EXCEPTION_PREFIX 2063,74336
#  define CLIENT_EXCEPTION_PREFIX 2065,74423
#define REPORT_EXCEPTION_SKIP_PREFIX 2068,74510
#define REPORT_CLIENT_EXCEPTION_SKIP_PREFIX 2069,74609
report_dynamorio_problem(2078,74975
report_app_problem(2255,82237
is_readable_without_exception_try(2294,83602
is_string_readable_without_exception(2338,85169
memprot_string(2384,86578
is_region_memset_to_char(2401,87269
double_strchr(2416,87705
double_strrchr(2431,88039
our_wcsnlen(2455,88877
strcasecmp_with_wildcards(2470,89075
str_case_prefix(2495,89678
check_filter_common(2511,89991
check_filter(2544,91088
check_filter_with_wildcards(2550,91231
static char logdir[logdir2556,91387
static bool logdir_initialized 2557,91421
static char basedir[basedir2558,91461
static bool basedir_initialized 2559,91496
static char old_basedir[old_basedir2563,91711
enable_new_log_dir(2574,92322
create_log_dir(2580,92385
get_log_dir(2719,98408
open_log_file(2756,99745
close_log_file(2810,101755
get_unique_logfile(2824,102276
get_app_name_for_path(2872,104090
get_short_name(2878,104182
print_statistics(2896,104606
stats_thread_init(2945,106094
stats_thread_exit(2963,106878
dump_thread_stats(2979,107439
#define STATS_DEF(3012,109087
#undef STATS_DEF3022,109730
dump_global_stats(3034,110027
#define STATS_DEF(3046,110465
#undef STATS_DEF3055,111124
print_timestamp(3082,111808
dump_buffer_as_ascii(3103,112381
dump_buffer_as_bytes 3113,112604
is_valid_xml_char(3209,115991
is_valid_xml_string(3223,116538
is_valid_xml_cdata_string(3237,116911
is_valid_xml_body_string(3247,117194
is_valid_xml_attribute_string(3256,117488
print_xml_cdata(3272,118165
print_version_and_app_info(3294,118844
utils_exit(3311,119491
get_random_offset(3331,120059
        LCM_A 3338,120282
        LCM_Q 3339,120309
        LCM_R 3340,120329
set_random_seed(3372,121487
get_random_seed(3378,121548
static const uint days_per_month_normal[days_per_month_normal3384,121634
static const uint days_per_month_leap[days_per_month_leap3386,121735
year_is_leap_year(3390,121847
convert_millis_to_date(3399,122056
#define BASE_YEAR 3424,123015
#define DAYS_IN_400_YEARS 3426,123095
#define DAYS_IN_100_YEARS 3427,123136
#define DAYS_IN_4_YEARS 3428,123177
convert_date_to_millis(3461,124216
const uint crctab[crctab3494,125119
crc32(3563,128552
#define PUT_64BIT_LE(3597,129846
#define PUT_32BIT_LE(3607,130457
static unsigned char PADDING[PADDING3613,130788
MD5Init(3624,131162
MD5Update(3638,131442
MD5Pad(3676,132496
MD5Final(3697,133046
#define F1(3713,133438
#define F2(3714,133478
#define F3(3715,133510
#define F4(3716,133542
#define MD5STEP(3719,133631
MD5Transform(3728,133985
#undef F13822,138070
#undef F23823,138080
#undef F33824,138090
#undef F43825,138100
#undef MD5STEP3826,138110
module_digests_equal(3830,138212
read_entire_file(3851,139019
check_low_disk_threshold(3899,140558
#define MD5_FILE_READ_BUF_SIZE 3963,143654
get_md5_for_file(3972,143976
get_application_md5(4021,145820
get_md5_for_region(4081,148328
md5_digests_equal(4096,148729
region_intersection(4110,149246
typedef struct _profile_callers_t 4132,150160
    app_pc caller[caller4133,150196
    uint count;4134,150239
    struct _profile_callers_t *next;next4135,150255
} profile_callers_t;4136,150292
profile_callers(4150,150825
profile_callers_exit(4205,152673
#  undef printf4234,153518
# define printf(4236,153542
unit_test_utils(4240,153663
# define DO_TEST(4246,153741
# undef DO_TEST4262,154643
# define DO_TEST(4263,154659
# undef DO_TEST4281,155640
# undef printf4292,155922
dr_strdup(4298,155981
dr_wstrdup(4316,156475
dr_strfree(4363,158300
array_merge(4381,159006

monitor.h,1971
#define _MONITOR_H_ 42,1961
    TRACE_HEAD_YES 69,2998
    TRACE_HEAD_YES           = 0x01,x0169,2998
    TRACE_HEAD_OBTAINED_LOCK 70,3035
    TRACE_HEAD_OBTAINED_LOCK = 0x02,x0270,3035
typedef struct _trace_head_counter_t 117,5147
    app_pc tag;118,5186
    uint   counter;119,5202
    struct _trace_head_counter_t *next;next123,5314
} trace_head_counter_t;124,5354
typedef struct _trace_head_table_t 126,5379
    trace_head_counter_t **counter_table;counter_table127,5416
    uint  hash_bits;128,5458
    ptr_uint_t  hash_mask;129,5479
    uint  hash_mask_offset;130,5506
    hash_function_t hash_func;131,5534
    uint  capacity;132,5565
    uint  entries;133,5610
    uint  load_factor_percent;134,5629
    uint  resize_threshold;135,5699
} trace_head_table_t;136,5762
typedef struct _trace_bb_build_t 138,5785
    trace_bb_info_t info;139,5820
    void *vmlist;vmlist143,5960
    instr_t *end_instr;end_instr144,5978
    bool final_cti;149,6188
} trace_bb_build_t;150,6208
typedef struct _monitor_data_t 152,6229
    app_pc         trace_tag;157,6442
    uint           trace_flags;158,6502
    instrlist_t      trace;159,6570
    byte           *trace_buf;trace_buf160,6651
    uint           trace_buf_size;161,6732
    uint           trace_buf_top;162,6803
    void *         trace_vmlist;163,6886
    uint           num_blks;164,6958
    trace_bb_build_t *blk_info;blk_info165,7039
    uint           blk_info_length;166,7123
    uint           emitted_size;167,7190
    fragment_t *     last_copy;168,7273
    fragment_t *     last_fragment;171,7492
    uint           last_fragment_flags;172,7577
    trace_head_table_t thead_table;178,7842
    instrlist_t    unmangled_ilist;182,7967
    instrlist_t    *unmangled_bb_ilist;unmangled_bb_ilist183,8003
    bool           pass_to_client;185,8138
    uint           final_exit_flags;190,8291
    fragment_t     wrapper;193,8350
} monitor_data_t;195,8429

dynamo.c,3823
bool    dynamo_initialized 87,2900
bool    dynamo_heap_initialized 88,2936
bool    automatic_startup 89,2977
bool    control_all_threads 90,3012
bool    dr_early_injected 92,3064
int     dr_early_injected_location 93,3099
bool    dr_earliest_injected 94,3161
static void * dr_earliest_inject_args;95,3199
bool    dr_injected_primary_thread 103,3541
bool    dr_injected_secondary_thread 104,3585
bool    dr_late_injected_primary_thread 107,3710
bool    dr_api_entry 111,3878
bool    dr_api_exit 112,3908
bool    dr_preinjected 115,3970
static bool dynamo_exiting 118,4045
bool    dynamo_exited 120,4088
bool    dynamo_exited_and_cleaned 121,4119
bool    dynamo_exited_log_and_stats 123,4175
bool    dynamo_resetting 129,4445
bool    standalone_library 131,4542
bool    post_execve 134,4597
byte *  initstack;137,4683
#define EXCEPTION_STACK_SIZE 141,4833
END_DATA_SECTION(171,6099
const char * const DATASEC_NAMES[DATASEC_NAMES193,6763
typedef struct _protect_info_t 201,6994
    mutex_t lock;205,7124
    int num_threads_unprot;206,7142
    int num_threads_suspended;207,7197
} protect_info_t;208,7228
static protect_info_t *protect_info;protect_info209,7246
static uint starttime;228,7682
file_t main_logfile 230,7706
dr_statistics_t *stats stats234,7790
thread_record_t ** all_threads;245,8215
main_logfile_name(267,9253
thread_logfile_name(273,9338
statistics_pre_init(282,9498
statistics_init(300,10223
# define STATS_DEF(313,10569
# define RSTATS_DEF(315,10609
#undef STATS_DEF318,10672
#undef RSTATS_DEF319,10689
# define STATS_DEF(327,11003
# define RSTATS_DEF(332,11217
#undef STATS_DEF338,11454
#undef RSTATS_DEF339,11471
statistics_exit(343,11504
get_dr_stats(349,11567
dynamorio_app_init(359,11818
dynamorio_fork_init(705,25122
standalone_init(819,29259
standalone_exit(889,31513
dynamo_process_exit_with_thread_info(902,31820
dynamo_shared_exit(909,31983
dynamorio_app_exit(1090,37791
synch_with_threads_at_exit(1100,38036
dynamo_process_exit_cleanup(1153,40560
dynamo_nullcalls_exit(1235,43978
dynamo_process_exit(1258,44472
create_new_dynamo_context(1423,50486
delete_dynamo_context(1492,53602
initialize_dynamo_context(1524,54947
create_callback_dcontext(1621,58137
is_thread_initialized(1717,62327
is_thread_known(1732,62731
mark_thread_execve(1742,62973
get_num_threads(1762,63499
is_last_app_thread(1768,63591
get_list_of_threads_common(1784,64248
get_list_of_threads(1833,66161
get_list_of_threads_ex(1840,66297
thread_lookup(1850,66557
get_thread_num(1882,67335
add_thread(1892,67549
remove_thread(1953,70175
dynamo_thread_init(1997,71575
dynamo_thread_exit_pre_client(2210,79944
dynamo_thread_exit_common(2233,80732
dynamo_thread_exit(2454,88541
dynamo_other_thread_exit(2462,88795
dynamo_thread_stack_free_and_exit(2477,89415
dr_app_setup(2491,89754
dr_app_cleanup(2504,90175
dr_app_start_helper(2530,91273
dr_app_stop(2549,91870
dr_app_setup_and_start(2555,91958
dynamo_thread_under_dynamo(2567,92167
dynamo_thread_not_under_dynamo(2589,92844
#define MAX_TAKE_OVER_ATTEMPTS 2608,93398
dynamorio_take_over_threads(2613,93492
dynamorio_app_take_over_helper(2638,94324
dynamorio_app_init_and_early_takeover(2690,96351
dynamorio_earliest_init_takeover_C(2723,97950
dynamorio_protect(2770,99729
dynamorio_unprotect(2839,102477
get_data_section_name(2896,104914
check_should_be_protected(2907,105124
data_sections_enclose_region(2951,106704
get_data_section_bounds(2977,107708
DECLARE_DATA_SECTION(3012,109374
data_section_exit(3050,110546
#define DATASEC_WRITABLE_MOD(3067,111172
protect_data_section(3077,111623
entering_dynamorio(3133,114151
exiting_dynamorio(3148,114648
is_on_initstack(3165,115254
is_on_dstack(3172,115411
is_currently_on_dstack(3179,115567
pre_second_thread(3187,115713

x86/instr.c,12767
#define INSTR_INLINE 53,2567
# undef ASSERT_TRUNCATE76,3061
# undef ASSERT_BITFIELD_TRUNCATE77,3085
# undef ASSERT_NOT_REACHED78,3118
# define ASSERT_TRUNCATE 79,3145
# define ASSERT_BITFIELD_TRUNCATE 80,3214
# define ASSERT_NOT_REACHED 81,3292
#undef opnd_is_null96,3552
#undef opnd_is_immed_int97,3572
#undef opnd_is_immed_float98,3597
#undef opnd_is_near_pc99,3624
#undef opnd_is_near_instr100,3647
#undef opnd_is_reg101,3673
#undef opnd_is_base_disp102,3692
#undef opnd_is_far_pc103,3717
#undef opnd_is_far_instr104,3739
#undef opnd_is_mem_instr105,3764
#undef opnd_is_valid106,3789
bool opnd_is_null 107,3810
bool opnd_is_immed_int 108,3875
bool opnd_is_immed_float(109,3945
bool opnd_is_near_pc 110,4017
bool opnd_is_near_instr 111,4085
bool opnd_is_reg 112,4156
bool opnd_is_base_disp 113,4220
bool opnd_is_far_pc 114,4290
bool opnd_is_far_instr 115,4357
bool opnd_is_mem_instr 116,4427
bool opnd_is_valid 117,4497
#define opnd_is_null 118,4563
#define opnd_is_immed_int 119,4608
#define opnd_is_immed_float 120,4658
#define opnd_is_near_pc 121,4710
#define opnd_is_near_instr 122,4758
#define opnd_is_reg 123,4809
#define opnd_is_base_disp 124,4853
#define opnd_is_far_pc 125,4903
#define opnd_is_far_instr 126,4950
#define opnd_is_mem_instr 127,5000
#define opnd_is_valid 128,5050
# undef opnd_is_rel_addr131,5108
bool opnd_is_rel_addr(132,5133
# define opnd_is_rel_addr 133,5199
opnd_is_abs_base_disp(138,5346
bool opnd_is_abs_addr(142,5506
bool opnd_is_near_abs_addr(145,5623
bool opnd_is_far_abs_addr(148,5735
opnd_is_reg_32bit(153,5852
reg_is_32bit(161,5987
opnd_is_reg_64bit(167,6080
reg_is_64bit(175,6215
opnd_is_reg_pointer_sized(181,6308
reg_is_pointer_sized(189,6459
#undef opnd_get_reg198,6635
opnd_get_reg(200,6664
#define opnd_get_reg 204,6725
opnd_get_size(207,6772
opnd_set_size(236,7403
opnd_create_immed_int(257,7814
opnd_create_immed_float(282,8734
opnd_create_immed_float_zero(297,9165
opnd_get_immed_int(309,9493
opnd_get_immed_float(317,9729
opnd_create_far_pc(332,10150
opnd_create_instr_ex(342,10349
opnd_create_instr(353,10572
opnd_create_far_instr(359,10671
opnd_create_mem_instr(370,10894
opnd_get_pc(381,11128
opnd_get_segment_selector(393,11382
opnd_get_instr(404,11710
opnd_get_shift(413,11909
opnd_get_mem_instr_disp(420,12064
opnd_create_base_disp_ex(430,12299
opnd_create_base_disp(440,12754
opnd_create_far_base_disp_ex(448,13040
opnd_create_far_base_disp(479,14596
#undef opnd_get_base486,14892
#undef opnd_get_disp487,14913
#undef opnd_get_index488,14934
#undef opnd_get_scale489,14956
#undef opnd_get_segment490,14978
reg_id_t opnd_get_base 491,15002
int      opnd_get_disp 492,15073
reg_id_t opnd_get_index 493,15144
int      opnd_get_scale 494,15216
reg_id_t opnd_get_segment(495,15288
#define opnd_get_base 496,15362
#define opnd_get_disp 497,15399
#define opnd_get_index 498,15436
#define opnd_get_scale 499,15474
#define opnd_get_segment 500,15512
opnd_is_disp_encode_zero(503,15560
opnd_is_disp_force_full(512,15795
opnd_is_disp_short_addr(521,16027
opnd_set_disp(530,16259
opnd_set_disp_ex(539,16468
opnd_create_abs_addr(552,16993
opnd_create_far_abs_addr(558,17126
opnd_create_rel_addr(596,18641
opnd_create_far_rel_addr(608,19083
opnd_get_addr(624,19584
opnd_is_memory_reference(638,19984
opnd_is_far_memory_reference(646,20181
opnd_is_near_memory_reference(653,20355
opnd_num_regs_used(661,20571
opnd_get_reg_used(694,21353
const reg_id_t regparms[regparms757,23270
const reg_id_t dr_reg_fixer[dr_reg_fixer768,23489
reg_check_reg_fixer(795,25197
opnd_uses_reg(811,25764
opnd_replace_reg(847,26700
bool opnd_same_address(917,29113
opnd_same_sizes_ok(952,30188
bool opnd_same(970,30880
bool opnd_share_reg(1037,33700
range_overlap(1067,34510
bool opnd_defines_use(1087,35018
opnd_size_in_bytes(1148,37117
opnd_size_from_bytes(1232,39378
opnd_shrink_to_16_bits(1256,39980
opnd_shrink_to_32_bits(1276,40628
reg_get_value_helper(1294,41100
reg_get_value_priv(1308,41498
reg_get_value(1346,42812
reg_set_value_priv(1355,43142
reg_set_value(1368,43463
opnd_compute_address_priv(1381,43985
opnd_compute_address(1427,45524
get_register_name(1438,45912
reg_to_pointer_sized(1444,45985
reg_32_to_16(1450,46064
reg_32_to_8(1458,46272
reg_32_to_64(1476,46680
reg_64_to_32(1484,46888
reg_is_extended(1492,47092
reg_32_to_opsz(1508,47779
reg_resize_to_opsz(1528,48298
reg_parameter_num(1536,48539
opnd_get_reg_dcontext_offs(1547,48706
opnd_get_reg_mcontext_offs(1574,49488
reg_overlap(1580,49593
enum {REG_INVALID_BITS REG_INVALID_BITS1597,50125
enum {REG_INVALID_BITS = 0x0}x01597,50125
reg_get_bits(1599,50205
reg_get_size(1633,51659
instr_create(1674,52991
instr_destroy(1686,53432
instr_clone(1696,53740
instr_init(1746,55971
instr_free(1756,56314
instr_mem_usage(1789,57587
instr_reset(1822,58602
instr_reuse(1837,59128
instr_build(1884,60559
instr_build_bits(1893,60834
private_instr_encode(1907,61329
#define inlined_instr_get_opcode(1979,64535
instr_get_opcode(1985,64803
#define instr_get_opcode 1990,64957
instr_being_modified(1993,65027
instr_set_opcode(2004,65383
instr_valid(2025,66330
instr_get_app_pc(2033,66490
instr_opcode_valid(2044,66830
instr_get_instr_info(2051,66968
get_instr_info(2057,67078
#undef instr_get_src2062,67139
instr_get_src(2064,67167
#define instr_get_src 2068,67249
#undef instr_get_dst2070,67286
instr_get_dst(2072,67314
#define instr_get_dst 2076,67396
instr_set_num_opnds(2082,67578
instr_set_src(2113,69035
instr_set_dst(2129,69599
#undef instr_get_target2139,69991
instr_get_target(2141,70022
#define instr_get_target 2145,70095
instr_set_target(2151,70234
instr_set_prefix_flag(2164,70672
instr_get_prefix_flag(2172,70842
instr_set_prefixes(2178,70949
instr_get_prefixes(2185,71101
instr_set_x86_mode(2196,71335
instr_get_x86_mode(2209,71647
instr_branch_targets_prefix(2228,72294
instr_branch_set_prefix_target(2247,73068
instr_branch_special_exit(2258,73360
instr_branch_set_special_exit(2267,73577
instr_exit_branch_type(2278,73834
instr_exit_branch_set_type(2286,73965
instr_set_ok_to_mangle(2295,74154
instr_is_meta_may_fault(2304,74326
instr_set_meta_may_fault(2311,74504
instr_set_meta_no_translation(2321,74803
instr_set_ok_to_emit(2328,74941
instr_set_exit_stub_code(2348,75691
instr_exit_stub_code(2376,76821
instr_get_eflags(2389,77134
instr_get_opcode_eflags(2427,78636
instr_get_arith_flags(2435,78837
instr_eflags_valid(2445,79056
instr_set_eflags_valid(2451,79156
instr_arith_flags_valid(2466,79579
instr_set_arith_flags_valid(2474,79796
instr_set_operands_valid(2485,80032
instr_set_raw_bits(2495,80272
instr_shift_raw_bits(2520,81193
instr_set_raw_bits_valid(2533,81524
instr_free_raw_bits(2551,82038
instr_allocate_raw_bits(2565,82482
instr_set_translation(2596,83715
instr_get_translation(2606,83947
instr_make_persistent(2619,84439
instr_get_raw_bits(2628,84694
instr_get_raw_byte(2635,84800
instr_get_raw_word(2644,85086
instr_set_raw_byte(2657,85532
instr_set_raw_bytes(2674,86148
instr_set_raw_word(2691,86779
instr_length(2704,87252
instr_expand(2760,89534
instr_is_level_0(2863,93840
instr_get_next_expanded(2894,95143
instr_get_prev_expanded(2905,95557
instrlist_first_expanded(2916,95973
instrlist_last_expanded(2928,96375
instr_decode_cti(2947,97196
instr_decode_opcode(2977,98544
instr_decode(3009,99884
instr_decode_with_current_dcontext(3044,101307
instrlist_decode_cti(3063,102077
loginst(3142,105344
logopnd(3152,105614
logtrace(3163,105882
instr_shrink_to_16_bits(3182,106498
instr_shrink_to_32_bits(3216,107648
instr_uses_reg(3237,108328
bool instr_reg_in_dst(3242,108449
instr_reg_in_src(3252,108666
instr_reads_from_reg(3265,109003
bool instr_writes_to_reg(3282,109375
bool instr_writes_to_exact_reg(3296,109766
bool instr_replace_src_opnd(3309,110052
bool instr_same(3326,110448
bool instr_reads_memory(3363,111467
bool instr_writes_memory(3385,112014
instr_rip_rel_valid(3412,113095
instr_set_rip_rel_valid(3418,113224
instr_get_rip_rel_pos(3427,113401
instr_set_rip_rel_pos(3433,113480
instr_get_rel_addr_target(3442,113749
instr_has_rel_addr_reference(3479,114834
instr_get_rel_addr_dst_idx(3485,114939
instr_get_rel_addr_src_idx(3501,115273
instr_is_our_mangling(3518,115625
instr_set_our_mangling(3524,115724
instr_compute_address_ex_priv(3536,116021
instr_compute_address_ex(3581,117366
instr_compute_address_ex_pos(3592,117787
instr_compute_address_priv(3607,118472
instr_compute_address(3617,118683
instr_memory_reference_size(3627,119019
decode_memory_reference_size(3652,119772
instr_get_label_data_area(3668,120258
instr_branch_type(3679,120505
instr_get_branch_target_pc(3728,122506
instr_set_branch_target_pc(3738,122800
instr_is_exit_cti(3752,123294
instr_is_mov(3768,123770
opcode_is_call(3779,124018
instr_is_call(3788,124188
instr_is_call_direct(3795,124300
instr_is_near_call_direct(3802,124438
instr_is_call_indirect(3809,124559
instr_is_return(3816,124706
opcode_is_cbr(3825,124925
instr_is_cbr(3833,125118
opcode_is_mbr(3840,125264
instr_is_mbr(3852,125530
instr_is_far_cti(3859,125667
instr_is_far_abs_cti(3871,125999
opcode_is_ubr(3878,126146
instr_is_ubr(3886,126275
instr_is_near_ubr(3893,126416
instr_is_cti(3901,126595
instr_is_cti_short(3913,127031
instr_is_cti_loop(3937,127989
instr_is_cti_short_rewrite(3954,128726
instr_is_interrupt(4003,130728
instr_get_interrupt_number(4010,130875
instr_is_syscall(4031,131659
instr_is_wow64_syscall(4061,132402
instr_is_mov_constant(4090,133366
bool instr_is_prefetch(4110,133929
instr_is_floating_ex(4126,134265
instr_is_floating(4367,144024
instr_saves_float_pc(4373,144114
opcode_is_mmx(4382,144401
opcode_is_sse_or_sse2(4398,145107
type_is_sse(4423,146390
instr_is_mmx(4429,146494
instr_is_sse_or_sse2(4448,147104
instr_is_mov_imm_to_tos(4460,147314
instr_is_label(4474,147854
instr_is_undefined(4481,148038
instr_invert_cbr(4493,148355
instr_convert_short_meta_jmp_to_long(4585,152647
instr_cbr_taken(4601,153348
opc_jcc_taken(4627,154293
instr_jcc_taken(4672,156004
instr_cmovcc_to_jcc(4685,156391
instr_cmovcc_triggered(4714,157393
instr_uses_fp_reg(4722,157582
reg_is_gpr(4753,158492
reg_is_segment(4759,158574
reg_is_ymm(4765,158658
reg_is_xmm(4771,158747
reg_is_mmx(4778,158863
reg_is_fp(4784,158952
instr_create_0dst_0src(4810,159824
instr_create_0dst_1src(4817,159967
instr_create_0dst_2src(4825,160153
instr_create_0dst_3src(4835,160409
instr_create_1dst_0src(4846,160710
instr_create_1dst_1src(4854,160896
instr_create_1dst_2src(4864,161148
instr_create_1dst_3src(4875,161447
instr_create_1dst_5src(4887,161791
instr_create_2dst_0src(4902,162248
instr_create_2dst_1src(4912,162504
instr_create_2dst_2src(4923,162803
instr_create_2dst_3src(4935,163149
instr_create_2dst_4src(4948,163540
instr_create_3dst_0src(4963,163999
instr_create_3dst_3src(4974,164300
instr_create_3dst_4src(4989,164759
instr_create_3dst_5src(5005,165263
instr_create_4dst_1src(5023,165835
instr_create_4dst_4src(5037,166247
instr_create_popa(5054,166795
instr_create_pusha(5071,167480
instr_create_raw_1byte(5094,168382
instr_create_raw_2bytes(5102,168570
instr_create_raw_3bytes(5112,168833
instr_create_raw_4bytes(5123,169146
instr_create_raw_5bytes(5136,169533
instr_create_raw_6bytes(5150,169970
instr_create_raw_7bytes(5166,170481
instr_create_raw_8bytes(5183,171042
instr_create_nbyte_nop(5202,171677
instr_is_nop(5238,173115
dcontext_opnd_common(5273,174809
opnd_create_dcontext_field_sz(5300,176064
opnd_create_dcontext_field(5306,176223
opnd_create_dcontext_field_via_reg_sz(5313,176440
opnd_create_dcontext_field_via_reg(5321,176734
opnd_create_dcontext_field_byte(5327,176906
instr_create_restore_from_dcontext(5333,177058
instr_create_save_to_dcontext(5344,177455
instr_create_restore_from_dc_via_reg(5360,178107
instr_create_save_to_dc_via_reg(5378,178872
instr_create_save_immed_to_dcontext(5393,179484
instr_create_jump_via_dcontext(5402,179836
instr_create_restore_dynamo_stack(5413,180199
update_dcontext_address(5419,180348
opnd_create_tls_slot(5450,181644
opnd_create_sized_tls_slot(5456,181742
instr_raw_is_tls_spill(5467,182144
instr_check_tls_spill_restore(5502,183696
instr_is_tls_spill(5542,185083
instr_is_tls_restore(5555,185530
instr_is_tls_xcx_spill(5569,186013
instr_check_mcontext_spill_restore(5581,186412
instr_is_reg_spill_or_restore(5625,187835
instr_create_save_to_tls(5658,189018
instr_create_restore_from_tls(5665,189246
instr_create_save_to_reg(5673,189555
instr_create_restore_from_reg(5679,189735
instr_raw_is_rip_rel_lea(5690,190077
move_mm_reg_opcode(5710,190766

x86/instr_inline.h,2309
#define _INSTR_INLINE_H_ 34,1706
# define MAKE_OPNDS_VALID(42,1845
#define CLIENT_ASSERT_(48,2089
#define MAKE_OPNDS_VALID(56,2428
#define CLIENT_ASSERT(60,2608
#define IF_DEBUG(61,2641
#define IF_DEBUG_(62,2664
#define OPND_IS_NULL(73,2982
#define OPND_IS_IMMED_INT(74,3039
#define OPND_IS_IMMED_FLOAT(75,3105
#define OPND_IS_NEAR_PC(76,3169
#define OPND_IS_NEAR_INSTR(77,3224
#define OPND_IS_REG(78,3282
#define OPND_IS_BASE_DISP(79,3338
#define OPND_IS_FAR_PC(80,3400
#define OPND_IS_FAR_INSTR(81,3459
#define OPND_IS_MEM_INSTR(82,3521
#define OPND_IS_VALID(83,3583
#define opnd_is_null 85,3640
#define opnd_is_immed_int 86,3685
#define opnd_is_immed_float 87,3735
#define opnd_is_near_pc 88,3787
#define opnd_is_near_instr 89,3835
#define opnd_is_reg 90,3886
#define opnd_is_base_disp 91,3930
#define opnd_is_far_pc 92,3980
#define opnd_is_far_instr 93,4027
#define opnd_is_mem_instr 94,4077
#define opnd_is_valid 95,4127
opnd_is_immed(100,4218
opnd_is_pc(107,4339
opnd_is_instr(113,4441
opnd_is_near_base_disp(120,4552
opnd_is_far_base_disp(127,4680
# define OPND_IS_REL_ADDR(134,4801
# define opnd_is_rel_addr 135,4862
opnd_is_near_rel_addr(139,4930
opnd_is_far_rel_addr(146,5062
opnd_create_null(160,5439
opnd_create_reg(169,5548
opnd_create_pc(181,5864
#define OPND_GET_REG(191,6002
#define opnd_get_reg 194,6134
#define GET_BASE_DISP(196,6169
#define OPND_GET_BASE(201,6343
#define OPND_GET_DISP(202,6403
#define OPND_GET_INDEX(203,6459
#define OPND_GET_SCALE(204,6520
#define opnd_get_base 206,6578
#define opnd_get_disp 207,6614
#define opnd_get_index 208,6650
#define opnd_get_scale 209,6688
#define OPND_GET_SEGMENT(211,6727
#define opnd_get_segment 217,7013
instr_ok_to_mangle(223,7099
instr_operands_valid(233,7374
instr_raw_bits_valid(240,7487
instr_has_allocated_bits(247,7600
instr_needs_encoding(254,7721
instr_ok_to_emit(261,7835
instr_num_srcs(270,8018
instr_num_dsts(278,8128
#define INSTR_GET_SRC(286,8293
#define INSTR_GET_DST(292,8636
#define INSTR_GET_TARGET(301,9033
#define instr_get_src 309,9498
#define instr_get_dst 310,9534
#define instr_get_target 311,9570
instr_set_note(315,9631
instr_get_note(322,9725
instr_get_next(329,9807
instr_get_prev(336,9889
instr_set_next(343,9967
instr_set_prev(350,10060

x86/sideline.h,30
#define _SIDELINE_H_ 41,1873

x86/steal_reg.c,155
restore_state(92,3542
expand_pusha(135,4957
expand_popa(168,6063
use_edi(213,8030
use_different_reg(270,10462
use_ebx(409,16122
steal_reg(444,17269

x86/decode.h,7600
#define DECODE_H41,1961
#define PREFIX_LOCK 61,2645
#define PREFIX_JCC_NOT_TAKEN 62,2735
#define PREFIX_JCC_TAKEN 63,2819
#define PREFIX_DATA 72,3155
#define PREFIX_ADDR 73,3192
#define PREFIX_REX_W 74,3229
#define PREFIX_REX_R 75,3266
#define PREFIX_REX_X 76,3303
#define PREFIX_REX_B 77,3340
#define PREFIX_REX_GENERAL 78,3377
#define PREFIX_REX_ALL 79,3463
#define PREFIX_SIZE_SPECIFIERS 81,3599
#define PREFIX_REP 84,3749
#define PREFIX_REPNE 85,3786
#define PREFIX_SEG_FS 92,4050
#define PREFIX_SEG_GS 93,4087
#define PREFIX_VEX_2B 98,4245
#define PREFIX_VEX_3B 99,4282
#define PREFIX_VEX_L 100,4319
#define PREFIX_SIGNIFICANT 105,4511
#define SEG_JCC_NOT_TAKEN 108,4635
#define SEG_JCC_TAKEN 109,4672
    OPCODE_TWOBYTES 122,5194
    OPCODE_TWOBYTES = 0x00000010,x00000010122,5194
    OPCODE_REG 123,5228
    OPCODE_REG      = 0x00000020,x00000020123,5228
    OPCODE_MODRM 124,5262
    OPCODE_MODRM    = 0x00000040,x00000040124,5262
    OPCODE_SUFFIX 125,5296
    OPCODE_SUFFIX   = 0x00000080,x00000080125,5296
    OPCODE_THREEBYTES=126,5330
    OPCODE_THREEBYTES=0x00000008,x00000008126,5330
typedef struct instr_info_t 166,7046
    int type;167,7076
    uint opcode;192,8726
    const char *name;name193,8743
    byte dst1_type;197,8852
    byte dst1_type;  opnd_size_t dst1_size;197,8852
    byte dst2_type;198,8896
    byte dst2_type;  opnd_size_t dst2_size;198,8896
    byte src1_type;199,8940
    byte src1_type;  opnd_size_t src1_size;199,8940
    byte src2_type;200,8984
    byte src2_type;  opnd_size_t src2_size;200,8984
    byte src3_type;201,9028
    byte src3_type;  opnd_size_t src3_size;201,9028
    byte flags;202,9072
    uint eflags;203,9124
    ptr_int_t code;204,9194
} instr_info_t;209,9508
    INVALID 217,9684
    INVALID = OP_LAST 217,9684
    PREFIX,219,9733
    ESCAPE,221,9783
    FLOAT_EXT,223,9844
    EXTENSION,225,9909
    PREFIX_EXT,227,10003
    REP_EXT,229,10077
    REPNE_EXT,231,10150
    MOD_EXT,233,10226
    RM_EXT,235,10299
    SUFFIX_EXT,237,10384
    X64_EXT,239,10472
    ESCAPE_3BYTE_38,241,10547
    ESCAPE_3BYTE_3a,243,10620
    REX_B_EXT,245,10703
    REX_W_EXT,247,10780
    VEX_PREFIX_EXT,249,10866
    VEX_EXT,251,10948
    VEX_L_EXT,253,11033
    VEX_W_EXT,255,11096
#define HAS_MODRM 260,11212
#define HAS_EXTRA_OPERANDS 261,11270
#define EXTRAS_IN_CODE_FIELD 263,11369
#define X86_INVALID 267,11603
#define X64_INVALID 268,11638
#define REQUIRES_PREFIX 270,11747
#define REQUIRES_VEX 274,11905
#define REQUIRES_REX 279,12110
typedef struct decode_info_t 286,12360
    uint prefixes;293,12704
    byte seg_override;294,12723
    byte modrm;296,12807
    byte mod;297,12823
    byte reg;298,12837
    byte rm;299,12851
    bool has_sib;300,12864
    byte scale;301,12882
    byte index;302,12898
    byte base;303,12914
    bool has_disp;304,12929
    int disp;305,12948
    opnd_size_t size_immed;307,12983
    opnd_size_t size_immed2;308,13011
    bool immed_pc_relativize:immed_pc_relativize309,13040
    bool immed_subtract_length:immed_subtract_length310,13072
    bool immed_pc_rel_offs:immed_pc_rel_offs311,13106
    ushort immed_shift;312,13136
    ptr_int_t immed;313,13160
    ptr_int_t immed2;314,13181
    byte *start_pc;start_pc316,13338
    byte *final_pc;final_pc317,13358
    uint len;318,13378
    byte *disp_abs;disp_abs322,13526
    bool x86_mode;329,13830
    byte *orig_pc;orig_pc332,13919
    bool data_prefix;334,13987
    bool rep_prefix;335,14009
    bool repne_prefix;336,14030
    byte vex_vvvv;337,14053
    bool vex_encoded;338,14106
    ptr_int_t cur_note;340,14167
    bool has_instr_opnds;341,14191
} decode_info_t;342,14217
    TYPE_NONE,352,14421
    TYPE_A,353,14436
    TYPE_C,354,14489
    TYPE_D,355,14540
    TYPE_E,356,14589
    TYPE_G,358,14704
    TYPE_H,359,14752
    TYPE_I,360,14810
    TYPE_J,361,14838
    TYPE_L,362,14897
    TYPE_M,363,14965
    TYPE_O,364,15005
    TYPE_P,365,15055
    TYPE_Q,366,15098
    TYPE_R,367,15146
    TYPE_S,368,15187
    TYPE_V,369,15243
    TYPE_W,370,15286
    TYPE_X,371,15334
    TYPE_Y,372,15365
    TYPE_P_MODRM,373,15397
    TYPE_V_MODRM,374,15454
    TYPE_1,375,15511
    TYPE_FLOATCONST,376,15523
    TYPE_XLAT,377,15544
    TYPE_MASKMOVQ,378,15585
    TYPE_FLOATMEM,379,15623
    TYPE_REG,380,15642
    TYPE_VAR_REG,381,15685
    TYPE_VARZ_REG,384,15884
    TYPE_VAR_XREG,387,16066
    TYPE_VAR_ADDR_XREG,390,16273
    TYPE_REG_EX,397,16752
    TYPE_VAR_REG_EX,398,16839
    TYPE_VAR_XREG_EX,400,16984
    TYPE_VAR_REGX_EX,402,17113
    TYPE_INDIR_E,405,17301
    TYPE_INDIR_REG,406,17319
    TYPE_INDIR_VAR_XREG,407,17339
    TYPE_INDIR_VAR_REG,410,17560
    TYPE_INDIR_VAR_XIREG,413,17766
    TYPE_INDIR_VAR_XREG_OFFS_1,416,18009
    TYPE_INDIR_VAR_XREG_OFFS_8,418,18134
    TYPE_INDIR_VAR_XREG_OFFS_N,420,18287
    TYPE_INDIR_VAR_XIREG_OFFS_1,423,18508
    TYPE_INDIR_VAR_REG_OFFS_2,425,18636
    TYPE_INDIR_VAR_XREG_SIZEx8,431,19015
    TYPE_INDIR_VAR_REG_SIZEx2,433,19146
    TYPE_INDIR_VAR_REG_SIZEx3x5,435,19276
    OPSZ_NA 477,21573
    OPSZ_NA = DR_REG_INVALID+DR_REG_INVALID477,21573
    OPSZ_FIRST 478,21659
    OPSZ_FIRST = OPSZ_NA,478,21659
    OPSZ_0,479,21685
    OPSZ_1,481,21832
    OPSZ_2,482,21871
    OPSZ_4,483,21911
    OPSZ_6,484,21956
    OPSZ_8,485,22000
    OPSZ_10,486,22045
    OPSZ_16,488,22184
    OPSZ_14,489,22246
    OPSZ_28,490,22332
    OPSZ_94,491,22419
    OPSZ_108,492,22489
    OPSZ_512,493,22560
    OPSZ_2_short1,506,23412
    OPSZ_4_short2,509,23660
    OPSZ_4_rex8_short2,510,23708
    OPSZ_4_rex8,511,23763
    OPSZ_6_irex10_short4,512,23832
    OPSZ_8_short2,515,24094
    OPSZ_8_short4,516,24151
    OPSZ_28_short14,517,24214
    OPSZ_108_short94,518,24298
    OPSZ_4x8,520,24437
    OPSZ_6x10,522,24571
    OPSZ_4x8_short2,527,24797
    OPSZ_4x8_short2xi8,534,25234
    OPSZ_4_short2xi4,536,25380
    OPSZ_1_reg4,542,25631
    OPSZ_2_reg4,543,25706
    OPSZ_4_reg16,544,25781
    OPSZ_xsave,547,25943
    OPSZ_12,549,26087
    OPSZ_32,550,26133
    OPSZ_40,552,26248
    OPSZ_32_short16,553,26294
    OPSZ_8_rex16,554,26350
    OPSZ_8_rex16_short4,555,26405
    OPSZ_12_rex40_short6,556,26468
    OPSZ_16_vex32,557,26518
    OPSZ_LAST,559,26654
# define OPSZ_PTR 563,26684
# define OPSZ_STACK 564,26756
# define OPSZ_PTR 566,26848
# define OPSZ_STACK 567,26920
#define OPSZ_VARSTACK 569,27013
#define OPSZ_REXVARSTACK 571,27162
#define OPSZ_ret 574,27331
#define OPSZ_call 575,27409
#define OPSZ_lea 578,27539
#define OPSZ_invlpg 579,27623
#define OPSZ_xlat 580,27710
#define OPSZ_clflush 581,27795
#define OPSZ_prefetch 582,27883
#define OPSZ_lgdt 583,27973
#define OPSZ_sgdt 584,28058
#define OPSZ_lidt 585,28143
#define OPSZ_sidt 586,28228
#define OPSZ_bound 587,28313
#define OPSZ_maskmovq 588,28399
#define OPSZ_maskmovdqu 589,28488
#define OPSZ_fldenv 590,28579
#define OPSZ_fnstenv 591,28666
#define OPSZ_fnsave 592,28754
#define OPSZ_frstor 593,28841
#define OPSZ_fxsave 594,28928
#define OPSZ_fxrstor 595,29015
    OPSZ_4_of_8 602,29236
    OPSZ_4_of_8 = OPSZ_LAST,602,29236
    OPSZ_4_of_16,603,29313
    OPSZ_8_of_16,604,29378
    OPSZ_8_of_16_vex32,605,29443
    OPSZ_16_of_32,608,29609
    OPSZ_LAST_ENUM,609,29656
# define OPSZ_STATS 613,29724
# define OPSZ_STATS 615,29757
#define MODRM_BYTE(618,29792
#define DEFAULT_X86_MODE 647,31159
#define X64_MODE(649,31233
#define X64_MODE_DC(651,31311
#define X64_CACHE_MODE_DC(655,31528

x86/x86_to_x64.c,582
static const reg_id_t pushad_registers[pushad_registers49,2182
pre(54,2418
replace(62,2672
opnd_change_base_reg_to_64(71,2929
instr_is_string_operation(111,4436
instr_change_base_reg_to_64(130,5016
translate_indirect_jump(158,6090
translate_indirect_call(178,6817
translate_push(201,7742
translate_push_imm(275,11101
translate_pop(322,12855
translate_pusha(384,15525
translate_popa(425,17326
translate_into(466,19252
translate_load_far_pointer(480,19732
translate_leave(512,21113
translate_pushf(534,22008
translate_popf(562,23239
translate_x86_to_x64(582,24041

x86/instrument.h,9239
#define _INSTRUMENT_H_ 43,1995
#define CURRENT_API_VERSION 56,2373
    DR_EMIT_DEFAULT 109,3923
    DR_EMIT_STORE_TRANSLATIONS 121,4462
    DR_EMIT_STORE_TRANSLATIONS   = 0x01,x01121,4462
    DR_EMIT_PERSISTABLE 131,4937
    DR_EMIT_PERSISTABLE          = 0x02,x02131,4937
    DR_EMIT_MUST_END_TRACE 141,5479
    DR_EMIT_MUST_END_TRACE       = 0x04,x04141,5479
    DR_EMIT_GO_NATIVE 153,6138
    DR_EMIT_GO_NATIVE           = 0x08,x08153,6138
} dr_emit_flags_t;154,6178
    CUSTOM_TRACE_DR_DECIDES,498,24030
    CUSTOM_TRACE_END_NOW,499,24059
    CUSTOM_TRACE_CONTINUE500,24085
} dr_custom_trace_action_t;501,24111
typedef struct _dr_fault_fragment_info_t 635,30057
    void *tag;tag641,30289
    byte *cache_start_pc;cache_start_pc649,30647
    bool is_trace;651,30743
    bool app_code_consistent;659,31128
} dr_fault_fragment_info_t;660,31162
typedef struct _dr_restore_state_info_t 668,31403
    dr_mcontext_t *mcontext;mcontext675,31710
    bool raw_mcontext_valid;677,31781
    dr_mcontext_t *raw_mcontext;raw_mcontext685,32144
    dr_fault_fragment_info_t fragment_info;690,32304
} dr_restore_state_info_t;691,32348
    DR_EXIT_MULTI_THREAD 807,37156
    DR_EXIT_MULTI_THREAD           = 0x01,x01807,37156
    DR_EXIT_SKIP_THREAD_EXIT 816,37634
    DR_EXIT_SKIP_THREAD_EXIT        = 0x02,x02816,37634
} dr_exit_flags_t;817,37678
typedef struct _dr_exception_t 914,41140
    dr_mcontext_t *mcontext;mcontext919,41316
    EXCEPTION_RECORD *record;record920,41345
    dr_mcontext_t *raw_mcontext;raw_mcontext929,41770
    dr_fault_fragment_info_t fault_fragment_info;934,41929
} dr_exception_t;935,41979
typedef struct _dr_siginfo_t 1124,49935
    int sig;1126,49996
    void *drcontext;drcontext1128,50068
    dr_mcontext_t *mcontext;mcontext1134,50266
    dr_mcontext_t *raw_mcontext;raw_mcontext1143,50680
    bool raw_mcontext_valid;1145,50755
    byte *access_address;access_address1150,50917
    bool blocked;1157,51224
    dr_fault_fragment_info_t fault_fragment_info;1162,51371
} dr_siginfo_t;1163,51421
    DR_SIGNAL_DELIVER,1171,51618
    DR_SIGNAL_SUPPRESS,1173,51697
    DR_SIGNAL_BYPASS,1178,51858
    DR_SIGNAL_REDIRECT,1183,52025
} dr_signal_action_t;1184,52049
    DR_RCO_STACK_VIOLATION,1304,57713
    DR_RCO_HEAP_VIOLATION,1305,57741
    DR_RCT_RETURN_VIOLATION,1306,57768
    DR_RCT_INDIRECT_CALL_VIOLATION,1307,57797
    DR_RCT_INDIRECT_JUMP_VIOLATION,1308,57833
    DR_UNKNOWN_VIOLATION,1309,57869
} dr_security_violation_type_t;1310,57895
    DR_VIOLATION_ACTION_CONTINUE,1341,59903
    DR_VIOLATION_ACTION_CONTINUE_CHANGED_CONTEXT,1342,59937
    DR_VIOLATION_ACTION_KILL_PROCESS,1343,59987
    DR_VIOLATION_ACTION_KILL_THREAD,1344,60025
    DR_VIOLATION_ACTION_THROW_EXCEPTION,1345,60062
} dr_security_violation_action_t;1346,60103
#define GLOBAL_DCONTEXT 1575,69691
# define DR_ASSERT_MSG(1587,69968
# define DR_ASSERT_MSG(1592,70149
#define DR_ASSERT(1603,70466
    DR_WINDOWS_VERSION_8 1693,73044
    DR_WINDOWS_VERSION_7 1694,73079
    DR_WINDOWS_VERSION_VISTA 1695,73114
    DR_WINDOWS_VERSION_2003 1696,73149
    DR_WINDOWS_VERSION_XP 1697,73226
    DR_WINDOWS_VERSION_2000 1698,73261
    DR_WINDOWS_VERSION_NT 1699,73296
} dr_os_version_t;1700,73331
typedef struct _dr_os_version_info_t 1703,73403
    size_t size;1705,73524
    dr_os_version_t version;1707,73581
    uint service_pack_major;1709,73651
    uint service_pack_minor;1711,73721
} dr_os_version_info_t;1712,73750
    DR_ALLOC_NON_HEAP 1830,76881
    DR_ALLOC_NON_HEAP             = 0x0001,x00011830,76881
    DR_ALLOC_THREAD_PRIVATE 1839,77301
    DR_ALLOC_THREAD_PRIVATE       = 0x0002,x00021839,77301
    DR_ALLOC_CACHE_REACHABLE 1851,77912
    DR_ALLOC_CACHE_REACHABLE      = 0x0004,x00041851,77912
    DR_ALLOC_FIXED_LOCATION 1860,78341
    DR_ALLOC_FIXED_LOCATION       = 0x0008,x00081860,78341
    DR_ALLOC_LOW_2GB 1869,78769
    DR_ALLOC_LOW_2GB              = 0x0010,x00101869,78769
    DR_ALLOC_NON_DR 1879,79267
    DR_ALLOC_NON_DR               = 0x0020,x00201879,79267
    DR_ALLOC_RESERVE_ONLY 1888,79677
    DR_ALLOC_RESERVE_ONLY         = 0x0040,x00401888,79677
    DR_ALLOC_COMMIT_ONLY 1901,80412
    DR_ALLOC_COMMIT_ONLY          = 0x0080,x00801901,80412
} dr_alloc_flags_t;1903,80463
#define DR_TRY_EXCEPT(2229,91378
typedef void * dr_module_iterator_t;2606,102920
typedef struct _module_segment_data_t 2617,103379
    app_pc start;2618,103419
    app_pc end;2619,103498
    uint prot;2620,103574
} module_segment_data_t;2621,103637
struct _module_data_t 2633,104222
        app_pc start;2635,104258
        module_handle_t handle;2636,104320
    app_pc end;2643,104726
    app_pc entry_point;2645,104743
    uint flags;2647,104832
    module_names_t names;2649,104876
    char *full_path;full_path2653,105085
    version_number_t file_version;2656,105172
    version_number_t product_version;2657,105254
    uint checksum;2658,105342
    uint timestamp;2659,105405
    size_t module_internal_size;2660,105470
    bool contiguous;2662,105568
    uint num_segments;2663,105642
    module_segment_data_t *segments;segments2668,105829
typedef struct _dr_module_import_iterator_t dr_module_import_iterator_t;2782,109483
typedef struct _dr_module_import_desc_t dr_module_import_desc_t;2788,109673
typedef struct _dr_module_import_t 2800,110159
    const char *modname;modname2804,110269
    dr_module_import_desc_t *module_import_desc;module_import_desc2810,110441
} dr_module_import_t;2811,110490
typedef struct _dr_symbol_import_iterator_t dr_symbol_import_iterator_t;2860,111868
typedef struct _dr_symbol_import_t 2869,112223
    const char *name;name2870,112260
    const char *modname;modname2871,112335
    bool delay_load;2872,112412
    bool by_ordinal;2873,112492
    ptr_uint_t ordinal;2874,112575
} dr_symbol_import_t;2880,112830
typedef struct _dr_export_info_t 2991,116515
    generic_func_t address;2997,116744
    bool is_indirect_code;3006,117148
} dr_export_info_t;3007,117175
#define DR_FILE_READ 3138,121315
#define DR_FILE_WRITE_REQUIRE_NEW 3140,121429
#define DR_FILE_WRITE_APPEND 3145,121581
#define DR_FILE_WRITE_OVERWRITE 3150,121721
#define DR_FILE_ALLOW_LARGE 3155,121918
#define DR_FILE_CLOSE_ON_FORK 3157,122026
#define DR_SEEK_SET 3241,124702
#define DR_SEEK_CUR 3242,124747
#define DR_SEEK_END 3243,124800
    DR_MAP_PRIVATE 3292,126040
    DR_MAP_PRIVATE             = 0x0001,x00013292,126040
    DR_MAP_FIXED 3300,126388
    DR_MAP_FIXED               = 0x0002,x00023300,126388
    DR_MAP_IMAGE 3307,126601
    DR_MAP_IMAGE               = 0x0004,x00043307,126601
    DR_MAP_CACHE_REACHABLE 3314,126897
    DR_MAP_CACHE_REACHABLE     = 0x0008,x00083314,126897
#define LOG_NONE 3385,129260
#define LOG_STATS 3386,129350
#define LOG_TOP 3387,129440
#define LOG_THREADS 3388,129530
#define LOG_SYSCALLS 3389,129620
#define LOG_ASYNCH 3390,129710
#define LOG_INTERP 3391,129800
#define LOG_EMIT 3392,129890
#define LOG_LINKS 3393,129980
#define LOG_CACHE 3394,130070
#define LOG_FRAGMENT 3395,130160
#define LOG_DISPATCH 3396,130250
#define LOG_MONITOR 3397,130340
#define LOG_HEAP 3398,130430
#define LOG_VMAREAS 3399,130521
#define LOG_SYNCH 3400,130611
#define LOG_MEMSTATS 3401,130701
#define LOG_OPTS 3402,130791
#define LOG_SIDELINE 3403,130881
#define LOG_SYMBOLS 3404,130967
#define LOG_RCT 3405,131048
#define LOG_NT 3406,131136
#define LOG_HOT_PATCHING 3407,131224
#define LOG_HTABLE 3408,131306
#define LOG_MODULEDB 3409,131387
#define LOG_ALL 3410,131476
    DR_SUSPEND_NATIVE 3916,150911
    DR_SUSPEND_NATIVE = 0x0001,x00013916,150911
} dr_suspend_flags_t;3917,150943
    SPILL_SLOT_1 4101,158761
    SPILL_SLOT_2 4102,158839
    SPILL_SLOT_3 4103,158917
    SPILL_SLOT_4 4104,158995
    SPILL_SLOT_5 4105,159073
    SPILL_SLOT_6 4106,159151
    SPILL_SLOT_7 4107,159229
    SPILL_SLOT_8 4108,159307
    SPILL_SLOT_9 4109,159385
    SPILL_SLOT_10 4111,159474
    SPILL_SLOT_11 4113,159595
    SPILL_SLOT_12 4115,159716
    SPILL_SLOT_13 4117,159837
    SPILL_SLOT_14 4119,159958
    SPILL_SLOT_15 4121,160079
    SPILL_SLOT_16 4123,160200
    SPILL_SLOT_17 4125,160321
    SPILL_SLOT_MAX 4127,160442
    SPILL_SLOT_MAX = SPILL_SLOT_17 4127,160442
    SPILL_SLOT_MAX 4130,160586
    SPILL_SLOT_MAX = SPILL_SLOT_9 4130,160586
} dr_spill_slot_t;4133,160729
#define MINSERT 4296,166905
    DR_CLEANCALL_SAVE_FLOAT 4426,172124
    DR_CLEANCALL_SAVE_FLOAT             = 0x0001,x00014426,172124
    DR_CLEANCALL_NOSAVE_FLAGS 4433,172453
    DR_CLEANCALL_NOSAVE_FLAGS           = 0x0002,x00024433,172453
    DR_CLEANCALL_NOSAVE_XMM 4435,172552
    DR_CLEANCALL_NOSAVE_XMM             = 0x0004,x00044435,172552
    DR_CLEANCALL_NOSAVE_XMM_NONPARAM 4437,172685
    DR_CLEANCALL_NOSAVE_XMM_NONPARAM    = 0x0008,x00084437,172685
    DR_CLEANCALL_NOSAVE_XMM_NONRET 4439,172821
    DR_CLEANCALL_NOSAVE_XMM_NONRET      = 0x0010,x00104439,172821
    DR_CLEANCALL_INDIRECT 4444,173038
    DR_CLEANCALL_INDIRECT               = 0x0020,x00204444,173038
} dr_cleancall_save_t;4445,173088
#define SPILL_SLOT_REDIRECT_NATIVE_TGT 4823,189116

x86/x86_code.c,264
get_xmm_vals(52,2281
thread_starting(67,2690
dynamo_start(79,3011
auto_setup(121,4579
native_get_retstack_idx(209,7532
new_thread_setup(229,8271
nt_continue_setup(286,10219
safe_read_fast(335,11944
is_safe_read_pc(347,12246
safe_read_resume_pc(355,12426

x86/arch_exports.h,11998
#define _ARCH_EXPORTS_H_ 45,2094
#define XSP_SZ 48,2145
#define XMM_REG_SIZE 57,2517
#define YMM_REG_SIZE 58,2542
#define XMM_SAVED_REG_SIZE 59,2567
#define XMM_SLOTS_SIZE 60,2651
#define XMM_SAVED_SIZE 61,2710
#define YMM_ENABLED(63,2850
#define YMMH_REG_SIZE 64,2941
#define YMMH_SAVED_SIZE 65,2997
#define CLEANCALL_NUM_INLINE_SLOTS 68,3111
    IBL_NONE 71,3164
    IBL_RETURN 73,3266
    IBL_BRANCH_TYPE_START 74,3341
    IBL_BRANCH_TYPE_START = IBL_RETURN,74,3341
    IBL_INDCALL,75,3381
    IBL_INDJMP,76,3398
    IBL_GENERIC 77,3414
    IBL_GENERIC           = IBL_INDJMP,77,3414
    IBL_SHARED_SYSCALL 80,3599
    IBL_SHARED_SYSCALL    = IBL_GENERIC,80,3599
    IBL_BRANCH_TYPE_END81,3640
} ibl_branch_type_t;82,3664
#define IBL_HASH_FUNC_OFFSET_MAX 84,3686
typedef struct _lookup_table_access_t 100,4405
    ptr_uint_t hash_mask;101,4445
    struct _fragment_entry_t *lookuptable;lookuptable102,4471
} lookup_table_access_t;103,4514
typedef struct _table_stat_state_t 105,4540
    lookup_table_access_t table[table116,5091
    uint stats;121,5329
} table_stat_state_t;123,5352
typedef struct _spill_state_t 129,5551
    reg_t xax,131,5656
    reg_t xax, xbx,131,5656
    reg_t xax, xbx, xcx,131,5656
    reg_t xax, xbx, xcx, xdx;131,5656
    dcontext_t *dcontext;dcontext133,5791
} spill_state_t;134,5817
typedef struct _local_state_t 136,5835
    spill_state_t spill_space;137,5867
} local_state_t;138,5898
typedef struct _local_state_extended_t 140,5916
    spill_state_t spill_space;141,5957
    table_stat_state_t table_space;142,5988
} local_state_extended_t;143,6024
#define TLS_XAX_SLOT 149,6277
#define TLS_XBX_SLOT 150,6349
#define TLS_XCX_SLOT 151,6421
#define TLS_XDX_SLOT 152,6493
#define TLS_DCONTEXT_SLOT 153,6565
#define TABLE_OFFSET 155,6643
#define TLS_MASK_SLOT(156,6724
#define TLS_TABLE_SLOT(159,6969
# define TLS_HTABLE_STATS_SLOT 164,7247
#define TLS_NUM_SLOTS 169,7493
# define DETACH_CALLBACK_CODE_SIZE 175,7724
# define DETACH_CALLBACK_FINAL_JMP_SIZE 176,7763
typedef struct _detach_callback_stack_t 180,7981
    thread_id_t tid;181,8023
    ptr_uint_t count;182,8061
    app_pc *callback_addrs;callback_addrs183,8137
    reg_t xax_save;184,8217
    reg_t xbx_save;185,8276
    reg_t xcx_save;186,8335
    app_pc target;187,8394
    byte code_buf[code_buf189,8509
} detach_callback_stack_t;190,8560
#define PAD_JMPS_ALIGNMENT 231,10826
# define CHECK_JMP_TARGET_ALIGNMENT(235,10997
# define CHECK_JMP_TARGET_ALIGNMENT(242,11407
# define ATOMIC_4BYTE_WRITE(248,11663
#  define ATOMIC_8BYTE_WRITE(255,12039
# define ATOMIC_INC_int(271,12920
#  define ATOMIC_INC_int64(273,13050
# define ATOMIC_INC(275,13142
# define ATOMIC_DEC_int(276,13196
#  define ATOMIC_DEC_int64(278,13326
# define ATOMIC_DEC(280,13418
# define ATOMIC_ADD_int(282,13539
#  define ATOMIC_ADD_int64(285,13691
# define ATOMIC_COMPARE_EXCHANGE_int(288,13805
# define ATOMIC_COMPARE_EXCHANGE_int64(290,13944
# define ATOMIC_COMPARE_EXCHANGE 292,14090
# define ATOMIC_ADD(293,14151
#  define ATOMIC_ADD_PTR(295,14227
#  define ATOMIC_COMPARE_EXCHANGE_PTR 296,14295
#  define ATOMIC_ADD_PTR(298,14370
#  define ATOMIC_COMPARE_EXCHANGE_PTR 299,14436
# define SPINLOCK_PAUSE(301,14510
# define RDTSC_LL(302,14583
# define SERIALIZE_INSTRUCTIONS(303,14624
# define GET_FRAME_PTR(310,14893
# define GET_STACK_PTR(311,14945
static inline bool atomic_inc_and_test(314,15041
static inline bool atomic_dec_and_test(318,15191
static inline bool atomic_dec_becomes_zero(322,15340
static inline bool atomic_compare_exchange_int(326,15496
static inline bool atomic_compare_exchange_int64(330,15718
static inline int atomic_add_exchange_int(336,16051
static inline int64 atomic_add_exchange_int64(340,16236
# define atomic_add_exchange 344,16385
# define ATOMIC_4BYTE_WRITE(347,16456
#  define ATOMIC_8BYTE_WRITE(354,16853
# define ATOMIC_INC_suffix(363,17382
# define ATOMIC_INC_int(365,17500
# define ATOMIC_INC_int64(366,17557
# define ATOMIC_INC(367,17616
# define ATOMIC_DEC_suffix(368,17670
# define ATOMIC_DEC_int(370,17788
# define ATOMIC_DEC_int64(371,17845
# define ATOMIC_DEC(372,17904
# define ATOMIC_ADD_suffix(377,18099
# define ATOMIC_ADD_int(380,18293
# define ATOMIC_ADD_int64(381,18360
# define ATOMIC_ADD(382,18429
#  define ATOMIC_ADD_PTR(384,18505
#  define ATOMIC_ADD_PTR(386,18580
# define ATOMIC_ADD_EXCHANGE_suffix(389,18732
# define ATOMIC_ADD_EXCHANGE_int(392,18943
# define ATOMIC_ADD_EXCHANGE_int64(394,19044
# define ATOMIC_COMPARE_EXCHANGE_suffix(396,19147
# define ATOMIC_COMPARE_EXCHANGE_int(401,19456
# define ATOMIC_COMPARE_EXCHANGE_int64(403,19583
# define ATOMIC_COMPARE_EXCHANGE 405,19712
#  define ATOMIC_COMPARE_EXCHANGE_PTR 407,19785
#  define ATOMIC_COMPARE_EXCHANGE_PTR 409,19860
# define ATOMIC_EXCHANGE(411,19930
# define SPINLOCK_PAUSE(416,20136
# define RDTSC_LL(417,20194
# define SERIALIZE_INSTRUCTIONS(420,20323
# define GET_FRAME_PTR(423,20537
# define GET_STACK_PTR(424,20621
# define SET_FLAG(426,20706
# define SET_IF_NOT_ZERO(427,20786
# define SET_IF_NOT_LESS(428,20836
static inline bool atomic_inc_and_test(433,20999
static inline bool atomic_dec_and_test(448,21481
static inline bool atomic_dec_becomes_zero(463,21969
static inline bool atomic_compare_exchange_int(479,22457
atomic_exchange_int(494,23047
static inline bool atomic_compare_exchange_int64(505,23300
static inline int atomic_add_exchange_int(521,23956
static inline int64 atomic_add_exchange_int64(527,24120
# define atomic_add_exchange 533,24296
# undef ATOMIC_ADD_EXCHANGE_suffix534,24349
# undef ATOMIC_ADD_EXCHANGE_int535,24384
# undef ATOMIC_ADD_EXCHANGE_int64536,24416
#define atomic_compare_exchange 541,24471
# define atomic_compare_exchange_ptr(543,24542
# define ATOMIC_ADDR_WRITE 545,24672
# define atomic_compare_exchange_ptr(547,24724
# define ATOMIC_ADDR_WRITE 549,24846
#define ATOMIC_MAX_int(552,24900
# define ATOMIC_MAX_int64(567,25774
#define ATOMIC_MAX(582,26608
#define DEBUGGER_INTERRUPT_BYTE 584,26690
    TRANSLATE_IDENTICAL 633,28382
    TRANSLATE_IDENTICAL      = 0x0001,x0001633,28382
    TRANSLATE_OUR_MANGLING 634,28448
    TRANSLATE_OUR_MANGLING   = 0x0002,x0002634,28448
typedef struct _translation_entry_t 641,28775
    ushort cache_offs;643,28853
    ushort flags;645,28903
    app_pc app;646,28921
} translation_entry_t;647,28937
typedef struct _translation_info_t 657,29427
    uint num_entries;658,29464
    translation_entry_t translation[translation660,29529
} translation_info_t;661,29590
#define IS_SHARED_SYSCALL_THREAD_SHARED 664,29673
    RECREATE_FAILURE,670,29887
    RECREATE_SUCCESS_PC,671,29909
    RECREATE_SUCCESS_STATE,672,29934
} recreate_success_t;673,29962
typedef linkstub_t * (* fcache_enter_func_t)710,31754
    SYSCALL_METHOD_UNINITIALIZED,772,34638
    SYSCALL_METHOD_INT,773,34672
    SYSCALL_METHOD_SYSENTER,774,34696
    SYSCALL_METHOD_SYSCALL,775,34725
    SYSCALL_METHOD_WOW64,777,34768
enum { SYSCALL_METHOD_LONGEST_INSTR 781,34816
enum { BACK_FROM_NATIVE_RETSTUB_SIZE 848,37671
#define DYNAMO_START_XSP_ADJUST 869,38360
    CALLSTACK_USE_XML 893,39081
    CALLSTACK_USE_XML         = 0x00000001,x00000001893,39081
    CALLSTACK_ADD_HEADER 894,39125
    CALLSTACK_ADD_HEADER      = 0x00000002,x00000002894,39125
    CALLSTACK_MODULE_INFO 895,39169
    CALLSTACK_MODULE_INFO     = 0x00000004,x00000004895,39169
    CALLSTACK_MODULE_PATH 896,39213
    CALLSTACK_MODULE_PATH     = 0x00000008,x00000008896,39213
    CALLSTACK_FRAME_PTR 897,39257
    CALLSTACK_FRAME_PTR       = 0x00000010,x00000010897,39257
use_addr_prefix_on_short_disp(921,40057
#define SIZE64_MOV_XAX_TO_TLS 963,41794
#define SIZE64_MOV_XBX_TO_TLS 964,41834
#define SIZE64_MOV_PTR_IMM_TO_XAX 965,41874
#define SIZE64_MOV_PTR_IMM_TO_TLS 966,41914
#define SIZE64_MOV_R8_TO_XAX 967,41995
#define SIZE64_MOV_R9_TO_XCX 968,42035
#define SIZE32_MOV_XAX_TO_TLS 969,42075
#define SIZE32_MOV_XBX_TO_TLS 970,42115
#define SIZE32_MOV_XAX_TO_TLS_DISP32 971,42155
#define SIZE32_MOV_XBX_TO_TLS_DISP32 972,42195
#define SIZE32_MOV_XAX_TO_ABS 973,42235
#define SIZE32_MOV_XBX_TO_ABS 974,42275
#define SIZE32_MOV_PTR_IMM_TO_XAX 975,42315
#define SIZE32_MOV_PTR_IMM_TO_TLS 976,42355
# define FRAG_IS_32(979,42407
# define FRAG_IS_X86_TO_X64(980,42463
# define FRAG_IS_32(982,42537
# define FRAG_IS_X86_TO_X64(983,42569
#define SIZE_MOV_XAX_TO_TLS(986,42618
#define SIZE_MOV_XBX_TO_TLS(991,42855
#define SIZE_MOV_PTR_IMM_TO_XAX(996,43092
#define XCX_IN_TLS(1000,43247
#define FRAGMENT_BASE_PREFIX_SIZE(1001,43338
#define DIRECT_EXIT_STUB_SIZE32 1013,43866
#define DIRECT_EXIT_STUB_SIZE64 1015,43974
#define DIRECT_EXIT_STUB_SIZE(1017,44082
#define STUB_COARSE_DIRECT_SIZE32 1030,44723
#define STUB_COARSE_DIRECT_SIZE64 1031,44804
#define STUB_COARSE_DIRECT_SIZE(1032,44885
#define SET_TO_NOPS(1036,45048
#define SET_TO_DEBUG(1038,45153
#define IS_SET_TO_NOP(1040,45247
#define IS_SET_TO_DEBUG(1042,45362
#define CTI_PATCH_OFFSET 1045,45501
#define CTI_PATCH_SIZE 1047,45561
#define EXIT_STUB_PATCH_OFFSET 1050,45647
#define EXIT_STUB_PATCH_SIZE 1052,45714
#define MAX_PAD_SIZE 1055,45822
#define WITHIN_PAD_REGION(1058,45915
#define STATS_PAD_JMPS_ADD(1061,46002
    NOT_HOT_PATCHABLE=1133,48635
    NOT_HOT_PATCHABLE=false,1133,48635
    HOT_PATCHABLE=1134,48664
    HOT_PATCHABLE=true1134,48664
    MAX_INSTR_LENGTH 1213,51191
    CBR_LONG_LENGTH 1217,51309
    JMP_LONG_LENGTH 1218,51335
    JMP_SHORT_LENGTH 1219,51361
    CBR_SHORT_REWRITE_LENGTH 1220,51387
    RET_0_LENGTH 1221,51455
    PUSH_IMM32_LENGTH 1222,51481
    CTI_IND1_LENGTH 1225,51574
    CTI_IND2_LENGTH 1226,51656
    CTI_IND3_LENGTH 1227,51738
    CTI_DIRECT_LENGTH 1228,51820
    CTI_IAT_LENGTH 1229,51902
    CTI_FAR_ABS_LENGTH 1230,51984
    INT_LENGTH 1233,52149
    SYSCALL_LENGTH 1234,52169
    SYSENTER_LENGTH 1235,52193
#define REL32_REACHABLE_OFFS(1238,52222
#define REL32_REACHABLE(1240,52365
#define TRACE_CTI_MANGLE_SIZE_UPPER_BOUND 1293,54751
    app_pc region_start;1334,56462
    app_pc region_end;1335,56487
    app_pc start_pc;1336,56510
    app_pc min_pc;1337,56531
    app_pc max_pc;1338,56550
    app_pc bb_end;1339,56569
    bool contiguous;1340,56588
    bool overlap;1341,56609
} overlap_info_t;1342,56627
extract_branchtype(1539,64543
ibltype_to_linktype(1553,64940
convert_data_to_function(1577,65674
typedef struct dr_jmp_buf_t 1600,66493
    reg_t xbx;1601,66523
    reg_t xcx;1602,66538
    reg_t xdi;1603,66553
    reg_t xsi;1604,66568
    reg_t xbp;1605,66583
    reg_t xsp;1606,66598
    reg_t xip;1607,66613
    reg_t r8,1610,66727
    reg_t r8, r9,1610,66727
    reg_t r8, r9, r10,1610,66727
    reg_t r8, r9, r10, r11,1610,66727
    reg_t r8, r9, r10, r11, r12,1610,66727
    reg_t r8, r9, r10, r11, r12, r13,1610,66727
    reg_t r8, r9, r10, r11, r12, r13, r14,1610,66727
    reg_t r8, r9, r10, r11, r12, r13, r14, r15;1610,66727
    kernel_sigset_t sigmask;1617,67006
} dr_jmp_buf_t;1619,67042
#define DR_SETJMP(1643,67733
#define DR_LONGJMP(1645,67774
#  define APP_PARAM_0(1662,68368
#  define APP_PARAM_1(1663,68404
#  define APP_PARAM_2(1664,68440
#  define APP_PARAM_3(1665,68475
#  define APP_PARAM_4(1666,68510
#  define APP_PARAM_5(1667,68568
#  define APP_PARAM_6(1668,68626
#  define APP_PARAM_7(1669,68684
#  define APP_PARAM_8(1670,68742
#  define APP_PARAM_9(1671,68800
#  define APP_PARAM_10(1672,68859
#  define APP_PARAM_0(1674,68926
#  define APP_PARAM_1(1675,68962
#  define APP_PARAM_2(1676,68998
#  define APP_PARAM_3(1677,69034
#  define APP_PARAM_4(1678,69070
#  define APP_PARAM_5(1679,69105
#  define APP_PARAM_6(1680,69140
#  define APP_PARAM_7(1681,69198
#  define APP_PARAM_8(1682,69256
#  define APP_PARAM_9(1683,69314
#  define APP_PARAM_10(1684,69372
# define APP_PARAM(1687,69473
# define APP_PARAM(1690,69563

x86/retcheck.c,2601
#define SSE2_USE_STACK_POINTER 80,3119
#define USE_LOCAL_MPROT_STACK 83,3206
#define POST 91,3419
#define PRE 92,3453
emit_pextrw(107,3852
check_return_handle_call(148,5295
check_return_handle_return(226,8692
finalize_return_check(326,13238
typedef struct _call_stack_32 392,15822
    byte retaddr[retaddr393,15854
    struct _call_stack_32 *next;next394,15879
} call_stack_32_t;395,15912
check_return_too_deep(402,16065
check_return_too_shallow(496,19013
check_return_ra_mangled(569,21616
check_return_handle_call(609,23020
check_debug_regs(699,27143
check_debug(713,27727
check_return_handle_return(754,29197
finalize_return_check(894,35337
typedef struct _call_stack_32 898,35401
    byte retaddr[retaddr899,35433
    struct _call_stack_32 *next;next900,35458
} call_stack_32_t;901,35491
check_return_too_deep(908,35644
check_return_too_shallow(1004,38670
check_return_ra_mangled(1082,41342
add_call_site(1151,43727
find_call_site(1159,43951
is_observed_call_site(1169,44199
start_enforcing(1175,44340
add_return_target(1213,45634
unsigned first_ret_from[first_ret_from1251,47402
    RETURN_FROM_EXPECTED_CALLEE 1254,47484
    RETURN_FOR_FIRST_TIME 1255,47536
    RETURN_UNKNOWN_CALLEE 1260,47850
reverse_check_ret_source(1265,47912
at_iret_exception(1284,48627
at_pushregret_exception(1316,49925
at_vbjmp_exception(1349,51248
at_vbpop_exception(1384,52720
at_mso_rct_exception(1424,54624
    enum {MSO_PATTERN_SIZE MSO_PATTERN_SIZE1499,57993
          MSO_PATTERN_ADD_ESP 1500,58040
          MSO_PATTERN_ADD_ESP            = 0xc483,xc4831500,58040
          MSO_PATTERN_LEA_EBX_OFFSET 1501,58091
          MSO_PATTERN_LEA_EBX 1502,58137
          MSO_PATTERN_LEA_EBX            = 0x1d8d,x1d8d1502,58137
          MSO_PATTERN_LEA_EBX_DISP_OFFSET=1503,58188
          MSO_PATTERN_LEA_EBX_DISP_OFFSET= 2 + MSO_PATTERN_LEA_EBX_OFFSET,1503,58188
          MSO_PATTERN_POPAD_POPFD_OFFSET 1504,58263
          MSO_PATTERN_POPAD_POPFD 1505,58310
          MSO_PATTERN_POPAD_POPFD        = 0x9d61,x9d611505,58310
          MSO_PATTERN_MAX_AC_OFFSET 1506,58361
licdll_pattern_match(1609,62225
    enum {LICDLL_PATTERN_SIZE LICDLL_PATTERN_SIZE1611,62289
          LICDLL_PATTERN_MOV_EDX_ESP_24 1612,62339
          LICDLL_PATTERN_MOV_EDX_ESP_24     = 0x2424548b,x2424548b1612,62339
          LICDLL_PATTERN_24_POPFD_OFFSET 1613,62397
          LICDLL_PATTERN_24_POPFD_POPAD_RET 1614,62447
          LICDLL_PATTERN_24_POPFD_POPAD_RET = 0xc3619d24xc3619d241614,62447
at_licdll_rct_exception(1642,63195
ret_after_call_check(1685,65048

x86/loadtoconst.c,1756
fragment_t *frags_waiting_LTC[frags_waiting_LTC60,2286
int num_frags_waiting_LTC;61,2345
int safe_taken,66,2480
int safe_taken,opt_taken,66,2480
int safe_taken,opt_taken,addrs_analyzed,66,2480
int safe_taken,opt_taken,addrs_analyzed,addrs_made_const,66,2480
int safe_taken,opt_taken,addrs_analyzed,addrs_made_const,traces_analyzed,66,2480
int safe_taken,opt_taken,addrs_analyzed,addrs_made_const,traces_analyzed,addrs_seen;66,2480
#define NUM_TMP_OPNDS 69,2573
static opnd_t tmpOpnds[tmpOpnds70,2599
analyze_memrefs(73,2644
check_mem_refs(273,10114
LTC_online_optimize_and_replace(388,14390
get_mem_address(442,16545
get_mem_val(479,17448
LTC_examine_traces(508,18282
LTC_fragment_delete(548,19558
remove_mem_ref_check(573,20258
pop_instr_off_list(625,22386
ltc_trace(634,22625
do_single_LTC(779,28192
*fix_cmp_containing_constant(fix_cmp_containing_constant842,30925
safe_to_transpose_cmp(947,35112
safe_to_delete_cmp(952,35245
instr_flag_write_necessary(959,35418
safe_to_modify_cmp(994,36592
pc_reads_flags_before_writes(1092,40668
becomes_ubr_from_cmp(1116,41353
change_cbr_due_to_reversed_cmp(1140,41997
should_replace_load(1168,42778
value_to_replace(1189,43387
should_replace_load(1198,43651
value_to_replace(1239,45111
save_eflags_list(1273,46102
restore_eflags_list(1302,47156
constant_propagate(1332,48139
instr_replace_reg_with_const_in_src(1478,54895
instr_replace_reg_with_const_in_dst(1536,57277
opnd_replace_reg_with_val(1562,58127
replace_self_loop_with_opnd(1639,60424
instr_arithmatic_simplify(1680,61794
instr_replace_inplace(1871,69364
instrlist_remove_nops(1887,69749
instrlist_depends_on_reg(1920,70701
instr_add_to_exitexec_list(1943,71181
instrlist_setup_pseudo_exitstubs(1955,71547

x86/arch.c,5814
generated_code_t *shared_code shared_code69,2528
generated_code_t *shared_code_x86 shared_code_x8675,2788
generated_code_t *shared_code_x86_to_x64 shared_code_x86_to_x6479,2959
static int syscall_method 82,3016
byte *app_sysenter_instr_addr app_sysenter_instr_addr83,3074
static bool sysenter_hook_failed 85,3124
reg_spill_tls_offs(102,3677
dump_emitted_routines(117,4113
dump_emitted_routines_to_file(207,7690
code_align_forward(226,8325
move_to_start_of_cache_line(236,8531
#define GENCODE_RESERVE_SIZE 246,8922
#define GENCODE_COMMIT_SIZE 248,8966
check_size_and_cache_line(252,9090
release_final_page(267,9663
shared_gencode_init(288,10585
far_ibl_set_targets(514,20037
arch_init(538,21042
arch_extract_profile(640,25459
arch_profile_exit(728,29464
arch_exit(739,29742
emit_ibl_routine_and_template(762,30505
emit_ibl_routines(802,32180
emit_syscall_routines(862,35243
arch_thread_init(966,40382
arch_thread_profile_exit(1165,48794
arch_thread_exit(1172,48925
arch_patch_syscall_common(1205,50023
arch_patch_syscall(1217,50634
update_generated_hashtable_access(1228,51018
protect_generated_code(1234,51129
get_source_fragment_type(1260,52086
is_shared_syscall_routine(1274,52565
is_indirect_branch_lookup_routine(1296,53564
get_trace_ibl_routine(1309,54005
get_private_ibl_routine(1334,54861
get_shared_ibl_routine(1352,55451
get_alternate_ibl_routine(1369,55995
get_unlinked_type(1392,56894
get_linked_type(1405,57178
get_linked_entry(1418,57443
get_trace_cmp_entry(1443,58459
get_unlinked_entry(1456,58940
in_generated_shared_routine(1474,59665
in_generated_routine(1491,60346
in_context_switch_code(1502,60677
in_indirect_branch_lookup_code(1512,61060
fcache_enter_routine(1533,61853
get_fcache_enter_private_routine(1541,62085
get_reset_exit_stub(1547,62197
get_do_syscall_entry(1554,62353
get_fcache_enter_indirect_routine(1562,62531
get_do_callback_return_entry(1568,62743
get_do_int_syscall_entry(1576,62994
get_do_clone_syscall_entry(1583,63154
get_do_vmkuw_syscall_entry(1590,63338
fcache_return_routine(1599,63517
fcache_return_routine_ex(1606,63673
fcache_return_coarse_routine(1613,63886
trace_head_return_coarse_routine(1624,64196
get_clean_call_save(1635,64514
get_clean_call_restore(1647,64893
get_client_ibl_xfer_entry(1660,65302
get_ibl_routine_type_ex(1678,65885
get_ibl_routine_type(1775,69726
get_ibl_routine_template_type(1785,70106
get_branch_type_name(1825,71458
get_ibl_branch_type(1833,71683
get_ibl_routine_name(1852,72150
get_ibl_routine_code_internal(1947,77554
get_ibl_routine_ex(1990,79203
get_ibl_routine(2023,80345
get_ibl_routine_template(2032,80694
table_flags_to_frag_flags(2050,81455
get_target_delete_entry_pc(2078,82771
get_ibl_routine_code_ex(2105,83952
get_ibl_routine_code(2119,84450
shared_syscall_routine_ex(2140,85414
shared_syscall_routine(2152,85795
unlinked_shared_syscall_routine_ex(2158,85933
unlinked_shared_syscall_routine(2170,86332
after_shared_syscall_code(2176,86488
after_shared_syscall_code_ex(2182,86633
after_shared_syscall_addr(2190,86913
after_do_syscall_code(2204,87360
after_do_syscall_code_ex(2210,87497
after_do_syscall_addr(2218,87759
after_do_shared_syscall_addr(2229,88105
is_after_main_do_syscall_addr(2241,88609
is_after_do_syscall_addr(2250,88936
is_after_syscall_address(2263,89487
is_after_syscall_that_rets(2283,90102
get_new_thread_start(2303,90911
trace_head_incr_routine(2318,91324
get_pextrw_entry(2327,91522
get_pinsrw_entry(2334,91666
get_fcache_enter_shared_routine(2343,91856
fcache_enter_shared_routine(2349,91985
fcache_return_shared_routine(2357,92203
trace_head_incr_shared_routine(2369,92517
get_fcache_target(2382,92871
set_fcache_target(2393,93191
typedef struct _translate_walk_t 2419,94337
    priv_mcontext_t *mc;mc2421,94412
    byte *start_cache;start_cache2423,94494
    byte *end_cache;end_cache2424,94517
    bool reg_spilled[reg_spilled2428,94664
    bool reg_tls[reg_tls2429,94701
    int xsp_adjust;2434,94937
    bool unsupported_mangle;2436,95029
    bool in_mangle_region;2438,95104
    app_pc translation;2440,95201
} translate_walk_t;2441,95225
translate_walk_init(2444,95258
instr_check_xsp_mangling(2454,95528
instr_is_trace_cmp(2526,99121
instr_is_inline_syscall_jmp(2554,99990
instr_is_seg_ref_load(2566,100387
translate_walk_track(2589,101243
translate_walk_good_state(2745,108826
translate_walk_restore(2754,109154
translate_restore_clean_call(2810,111388
recreate_app_state_from_info(2834,112386
recreate_app_state_from_ilist(2969,118250
recreate_selfmod_ilist(3189,128796
recreate_app_state_internal(3235,131010
recreate_app_pc(3537,145635
recreate_app_state(3614,149143
translation_info_alloc_size(3657,150482
translation_info_alloc(3664,150721
translation_info_free(3676,151072
set_translation(3683,151284
translation_info_print(3708,152299
record_translation_info(3735,153486
#   define NUM_INITIAL_TRANSLATIONS 3776,155168
stress_test_recreate_state(3922,161720
get_global_do_syscall_entry(4027,166270
get_cleanup_and_terminate_global_do_syscall_entry(4077,167688
#define VSYS_DISPLACED_LEN 4142,170602
hook_vsyscall(4145,170644
#define CHECK(4170,171431
#undef CHECK4242,174421
unhook_vsyscall(4246,174442
check_syscall_method(4274,175336
get_syscall_method(4426,183067
does_syscall_ret_to_callsite(4433,183203
set_syscall_method(4441,183422
should_syscall_method_be_sysenter(4453,183788
get_app_sysenter_addr(4462,184032
copy_mcontext(4470,184261
dr_mcontext_to_priv_mcontext(4477,184380
priv_mcontext_to_dr_mcontext(4506,185347
dr_mcontext_as_priv_mcontext(4535,186327
dr_mcontext_init(4546,186696
dump_mcontext(4554,186831
__inline__ uint64 get_time(4623,189565
uint64 get_time(4630,189700
is_ibl_routine_type(4640,189823

x86/decode_fast.c,2814
# undef ASSERT_TRUNCATE51,2206
# undef ASSERT_BITFIELD_TRUNCATE52,2230
# undef ASSERT_NOT_REACHED53,2263
# define ASSERT_TRUNCATE 54,2290
# define ASSERT_BITFIELD_TRUNCATE 55,2359
# define ASSERT_NOT_REACHED 56,2437
static const byte fixed_length[fixed_length75,3291
static const signed char immed_adjustment[immed_adjustment105,4730
static const signed char immed_adjustment_intel64[immed_adjustment_intel64129,6102
static const signed char disp_adjustment[disp_adjustment157,7634
static const char x64_adjustment[x64_adjustment185,9196
    VARLEN_NONE,222,11223
    VARLEN_MODRM,223,11240
    VARLEN_FP_OP,224,11258
    VARLEN_ESCAPE,225,11276
    VARLEN_3BYTE_38_ESCAPE,226,11316
    VARLEN_3BYTE_3A_ESCAPE,227,11371
#define m 231,11489
#define f 232,11512
#define e 233,11535
static const byte variable_length[variable_length238,11717
#undef m261,12741
#undef f262,12750
#undef e263,12759
static const byte escape_fixed_length[escape_fixed_length272,13019
#define m 303,14375
#define e1 304,14398
#define e2 305,14432
static const byte escape_variable_length[escape_variable_length310,14632
#undef m336,15566
#undef e337,15575
static const byte threebyte_38_fixed_length[threebyte_38_fixed_length346,15928
static const byte threebyte_3a_fixed_length[threebyte_3a_fixed_length367,16926
static const byte threebyte_38_vex_extra[threebyte_38_vex_extra388,17823
decode_sizeof(415,19036
sizeof_3byte_38(607,26733
sizeof_3byte_3a(622,27249
sizeof_escape(638,27935
sizeof_modrm(678,29287
sizeof_fp_op(739,31149
static const byte interesting[interesting757,31830
#define x 787,33096
#define RC 788,33112
#define RP 789,33140
#define RZ 790,33168
#define RS 791,33196
#define RO 792,33224
#define R6 793,33252
#define RB 794,33279
#define RL 795,33324
#define RE 796,33369
#define R5O 797,33429
#define WC 798,33478
#define WZ 799,33507
#define W6 800,33536
#define W5 801,33564
#define W5O 802,33615
#define BC 803,33666
#define BA 804,33711
#define BD 805,33756
#define B6 806,33816
#define EFLAGS_6_ESCAPE 807,33860
#define EFLAGS_6_SPECIAL 808,33888
#define E 809,33916
#define S 810,33942
static const int eflags_6[eflags_6812,33970
static const int escape_eflags_6[escape_eflags_6836,35112
#undef x857,36184
#undef RC858,36193
#undef RP859,36203
#undef RZ860,36213
#undef RS861,36223
#undef RO862,36233
#undef R6863,36243
#undef RB864,36253
#undef RL865,36263
#undef RE866,36273
#undef R5O867,36283
#undef WC868,36294
#undef WZ869,36304
#undef W6870,36314
#undef W5871,36324
#undef W5O872,36334
#undef BC873,36345
#undef BA874,36355
#undef BD875,36365
#undef B6876,36375
#undef E877,36385
#undef S878,36394
convert_8bit_offset(887,36735
decode_cti(912,37895
decode_next_pc(1324,54426
decode_raw(1344,55162

x86/disassemble.c,1692
# undef ASSERT_TRUNCATE76,3202
# undef ASSERT_BITFIELD_TRUNCATE77,3226
# undef ASSERT_NOT_REACHED78,3259
# define ASSERT_TRUNCATE 79,3286
# define ASSERT_BITFIELD_TRUNCATE 80,3355
# define ASSERT_NOT_REACHED 81,3433
disassemble_set_syntax(90,3636
#define BYTES_PER_LINE 103,4016
immed_prefix(110,4221
postop_suffix(116,4325
reg_disassemble(122,4446
opnd_mem_disassemble_prefix(131,4760
opnd_base_disp_disassemble(153,5560
internal_opnd_disassemble(218,8100
opnd_disassemble(489,21795
opnd_disassemble_to_buffer(500,22224
print_bytes_to_buffer(510,22489
print_extra_bytes_to_buffer(533,23169
print_bytes_to_file(547,23671
print_extra_bytes_to_file(559,24098
internal_disassemble(575,24758
internal_disassemble_to_file(630,26543
disassemble(654,27552
disassemble_with_bytes(668,28093
disassemble_with_info(688,28838
disassemble_from_copy(705,29535
disassemble_to_buffer(713,29833
instr_implicit_reg(726,30278
opnd_disassemble_noimplicit(743,30786
instr_disassemble_opnds_noimplicit(825,33305
instr_opcode_name(888,35978
instr_opcode_name_suffix(910,36620
internal_instr_disassemble(981,39130
instr_disassemble(1125,44868
instr_disassemble_to_buffer(1149,45912
exit_stub_type_desc(1159,46198
common_disassemble_fragment(1189,47247
disassemble_fragment(1363,54347
disassemble_fragment_header(1375,54686
disassemble_fragment_body(1381,54845
disassemble_app_bb(1387,55002
instrlist_disassemble(1399,55365
callstack_dump_module_info(1511,59561
internal_dump_callstack_to_buffer(1529,60230
internal_dump_callstack(1591,62765
dump_callstack(1605,63307
dump_callstack_to_buffer(1611,63459
dump_mcontext_callstack(1620,63719
dump_dr_callstack(1630,64026

x86/proc.h,3786
#define _PROC_H_ 43,2003
#define PAGE_SIZE 56,2371
#define PAGE_START(59,2502
    VENDOR_INTEL,63,2619
    VENDOR_AMD,64,2697
    VENDOR_UNKNOWN,65,2773
#define FAMILY_IA64 90,3952
#define FAMILY_LLANO 94,4086
#define FAMILY_ITANIUM_2_DC 95,4171
#define FAMILY_K8_MOBILE 96,4259
#define FAMILY_ITANIUM_2 97,4348
#define FAMILY_K8L 98,4433
#define FAMILY_K8 99,4516
#define FAMILY_PENTIUM_4 100,4598
#define FAMILY_P4 101,4683
#define FAMILY_ITANIUM 102,4768
#define FAMILY_P6 104,4928
#define FAMILY_IVYBRIDGE 105,5013
#define FAMILY_SANDYBRIDGE 106,5098
#define FAMILY_NEHALEM 107,5185
#define FAMILY_CORE_I7 108,5268
#define FAMILY_CORE_2 109,5351
#define FAMILY_CORE 110,5433
#define FAMILY_PENTIUM_M 111,5513
#define FAMILY_PENTIUM_3 112,5598
#define FAMILY_PENTIUM_2 113,5683
#define FAMILY_PENTIUM_PRO 114,5768
#define FAMILY_ATHLON 115,5855
#define FAMILY_K7 116,5937
#define FAMILY_P5 118,6039
#define FAMILY_PENTIUM 119,6124
#define FAMILY_K6 120,6207
#define FAMILY_K5 121,6285
#define FAMILY_486 123,6373
#define MODEL_IVYBRIDGE 128,6573
#define MODEL_I7_WESTMERE_EX 129,6642
#define MODEL_SANDYBRIDGE_E 130,6721
#define MODEL_I7_WESTMERE 131,6804
#define MODEL_SANDYBRIDGE 132,6872
#define MODEL_I7_CLARKDALE 133,6943
#define MODEL_I7_HAVENDALE 134,7031
#define MODEL_I7_CLARKSFIELD 135,7119
#define MODEL_ATOM_CEDARVIEW 136,7208
#define MODEL_ATOM_LINCROFT 137,7282
#define MODEL_ATOM 138,7355
#define MODEL_I7_GAINESTOWN 139,7419
#define MODEL_CORE_PENRYN 140,7497
#define MODEL_CORE_2 141,7570
#define MODEL_CORE 142,7649
#define MODEL_PENTIUM_M 143,7719
#define MODEL_PENTIUM_M_1MB 144,7795
    uint flags_edx;151,8002
    uint flags_ecx;152,8070
    uint ext_flags_edx;153,8138
    uint ext_flags_ecx;154,8215
} features_t;155,8292
    FEATURE_FPU 163,8514
    FEATURE_VME 164,8590
    FEATURE_DE 165,8661
    FEATURE_PSE 166,8729
    FEATURE_TSC 167,8797
    FEATURE_MSR 168,8864
    FEATURE_PAE 169,8937
    FEATURE_MCE 170,9012
    FEATURE_CX8 171,9084
    FEATURE_APIC 172,9163
    FEATURE_SEP 173,9243
    FEATURE_MTRR 174,9308
    FEATURE_PGE 175,9384
    FEATURE_MCA 176,9451
    FEATURE_CMOV 177,9526
    FEATURE_PAT 178,9603
    FEATURE_PSE_36 179,9672
    FEATURE_PSN 180,9747
    FEATURE_CLFSH 181,9832
    FEATURE_DS 182,9910
    FEATURE_ACPI 183,9970
    FEATURE_MMX 184,10050
    FEATURE_FXSR 185,10123
    FEATURE_SSE 186,10196
    FEATURE_SSE2 187,10269
    FEATURE_SS 188,10343
    FEATURE_HTT 189,10402
    FEATURE_TM 190,10477
    FEATURE_IA64 191,10551
    FEATURE_PBE 192,10617
    FEATURE_SSE3 194,10721
    FEATURE_PCLMULQDQ 195,10795
    FEATURE_MONITOR 196,10866
    FEATURE_DS_CPL 197,10951
    FEATURE_VMX 198,11025
    FEATURE_EST 199,11100
    FEATURE_TM2 200,11178
    FEATURE_SSSE3 201,11244
    FEATURE_CID 202,11319
    FEATURE_FMA 203,11379
    FEATURE_CX16 204,11454
    FEATURE_xPTR 205,11535
    FEATURE_SSE41 206,11611
    FEATURE_SSE42 207,11687
    FEATURE_MOVBE 208,11763
    FEATURE_POPCNT 209,11830
    FEATURE_AES 210,11898
    FEATURE_XSAVE 211,11973
    FEATURE_OSXSAVE 212,12041
    FEATURE_AVX 213,12122
    FEATURE_SYSCALL 215,12241
    FEATURE_XD_Bit 216,12327
    FEATURE_EM64T 217,12397
    FEATURE_LAHF 219,12519
} feature_bit_t;220,12602
    CACHE_SIZE_8_KB,231,12903
    CACHE_SIZE_16_KB,232,12964
    CACHE_SIZE_32_KB,233,13026
    CACHE_SIZE_64_KB,234,13088
    CACHE_SIZE_128_KB,235,13150
    CACHE_SIZE_256_KB,236,13213
    CACHE_SIZE_512_KB,237,13276
    CACHE_SIZE_1_MB,238,13339
    CACHE_SIZE_2_MB,239,13400
    CACHE_SIZE_UNKNOWN 240,13461
} cache_size_t;241,13522
#define CACHE_LINE_SIZE(248,13632
#define XCR0_AVX 251,13713
#define XCR0_SSE 252,13732
#define XCR0_FP 253,13751

x86/interp.c,4543
enum { DIRECT_XFER_LENGTH 77,2847
#define BRANCH_LIMIT 93,3713
volatile bool bb_lock_start;112,4624
file_t bbdump_file 115,4670
interp_init(120,4739
static int num_rets_removed;133,5008
interp_exit(139,5072
    app_pc start_pc;169,5879
    bool app_interp;170,5900
    bool for_cache;172,6068
    bool record_vmlist;173,6132
    bool mangle_ilist;174,6194
    bool record_translation;175,6257
    bool has_bb_building_lock;176,6333
    file_t outf;177,6421
    bool pass_to_client;180,6598
    bool post_client;184,6863
    bool for_trace;185,6939
    overlap_info_t *overlap_info;overlap_info189,7049
    instrlist_t *ilist;ilist193,7239
    uint flags;194,7263
    void *vmlist;vmlist195,7279
    app_pc end_pc;196,7297
    bool native_exec;197,7316
    bool native_call;198,7396
    instrlist_t **unmangled_ilist;unmangled_ilist200,7477
    bool full_decode;204,7592
    bool follow_direct;205,7677
    bool check_vm_area;206,7742
    uint num_elide_jmp;207,7816
    uint num_elide_call;208,7840
    app_pc last_page;209,7865
    app_pc cur_pc;210,7887
    app_pc instr_start;211,7906
    app_pc checked_end;212,7930
    cache_pc exit_target;213,7996
    uint exit_type;214,8067
    bool invalid_instr_hack;216,8137
    instr_t *instr;instr218,8173
    int eflags;219,8229
    app_pc pretend_pc;220,8245
} build_bb_t;222,8358
init_build_bb(229,8482
reset_overlap_info(250,9203
update_overlap_info(260,9494
# define BBPRINT(282,10402
#  define BBPRINT(289,10678
#  define BBPRINT(294,10884
static bool reached_image_entry 326,11608
check_for_image_entry(329,11676
set_reached_image_entry(340,11954
reached_image_entry_yet(348,12118
must_not_be_inlined(363,12494
must_not_be_elided(396,13668
must_escape_from(424,14667
bb_add_native_direct_xfer(476,16749
check_for_stopping_point(537,19624
eflags_analysis(583,21641
check_new_page_start(656,24852
check_new_page_contig(680,25918
check_new_page_jmp(714,27424
bb_process_invalid_instr(767,29880
follow_direct_jump(846,33765
bb_process_ubr(874,34889
follow_direct_call(964,39198
bb_stop_prior_to_instr(994,40323
bb_process_call_direct(1005,40672
instr_is_call_sysenter_pattern(1068,43228
bb_verify_sysenter_pattern(1120,45359
bb_process_SEH_push(1155,46782
        typedef struct _borland_seh_frame_t 1244,52016
            EXCEPTION_REGISTRATION reg;1245,52062
            reg_t xbp;1246,52102
        } borland_seh_frame_t;1247,52146
bb_process_fs_ref_opnd(1395,60466
bb_process_fs_ref(1439,62653
bb_process_mov_seg(1547,67460
bb_process_ignorable_syscall(1604,69687
bb_process_shared_syscall(1677,72721
bb_process_non_ignorable_syscall(1714,74144
bb_process_syscall(1740,75179
bb_process_indcall_syscall(1815,77918
bb_process_interrupt(1831,78405
bb_process_convertible_indcall(1871,80021
read_from_IAT(2090,89366
is_targeting_convertible_IAT(2103,89747
bb_process_IAT_convertible_indjmp(2191,93197
bb_process_IAT_convertible_indcall(2330,98819
bb_process_float_pc(2430,102772
instr_will_be_exit_cti(2445,103389
client_check_syscall(2459,103897
client_process_bb(2504,105900
build_bb_ilist(2850,122486
bb_build_abort(3836,167029
expand_should_set_translation(3874,168703
mangle_bb_ilist(3891,169287
build_app_bb_ilist(3960,172372
decode_as_bb(3978,173112
decode_trace(4012,174506
find_app_bb_end(4046,175671
app_bb_overlaps(4058,176081
report_native_module(4078,176759
build_native_exec_bb(4099,177585
at_native_exec_gateway(4228,183154
init_interp_build_bb(4407,191801
exit_interp_build_bb(4474,195033
build_basic_block_fragment(4489,195576
recreate_bb_ilist(4612,200346
recreate_fragment_ilist(4698,204214
process_nops_for_trace(4926,214195
regenerate_custom_exit_stub(4950,215331
tracelist_add(5024,218411
tracelist_add_after(5043,219035
insert_increment_stat_counter(5063,219650
insert_restore_spilled_xcx(5097,221342
insert_transparent_comparison(5131,222756
mangle_x64_ib_in_trace(5175,224479
mangle_indirect_branch_in_trace(5257,228283
fixup_last_cti(5479,237407
append_trace_speculate_last_ibl(5694,245988
append_ib_trace_last_ibl_exit_stat(5850,252689
extend_trace(5934,256569
create_exit_jmp(6037,260920
mangle_trace(6069,262020
instr_eflags_to_fragment_eflags(6343,274420
forward_eflags_analysis(6367,275273
#define DF_LOGLEVEL(6410,277343
decode_fragment(6414,277455
#undef DF_LOGLEVEL7100,312336
decode_fragment_exact(7106,312465
copy_fragment(7127,313259
shift_ctis_in_fragment(7239,317797
add_profile_call(7356,323201
emulate(7383,324104

x86/emit_utils.c,6991
#define FRAGMENT_TAG_OFFS 69,2611
#define FRAGMENT_START_PC_OFFS 71,2747
#define FRAGMENT_COUNTER_OFFS 72,2813
#define FRAGMENT_PREFIX_SIZE_OFFS 73,2882
#define HASHLOOKUP_TAG_OFFS 75,2953
#define HASHLOOKUP_START_PC_OFFS 76,3030
#  define HASHLOOKUP_STAT_OFFS(79,3146
#  define LINKSTUB_TARGET_FRAG_OFFS 84,3294
#  define LINKSTUB_COUNT_OFFS 88,3411
#define UNPROT_OFFS(94,3603
#define POST 110,4200
#define PRE 111,4239
#define APP 112,4277
#  define FRAG_DB_SHARED(122,4598
#  define FRAG_DB_SHARED(124,4641
#define STUB_DIRECT_SIZE(194,6919
#define STUB_INDIRECT_SIZE32 200,7123
#define STUB_INDIRECT_SIZE64 202,7228
#define STUB_INDIRECT_SIZE(204,7333
#define STUB_COARSE_INDIRECT_SIZE(208,7491
#  define LINKCOUNT_INCSIZE 211,7587
#  define LINKCOUNT_INCSIZE 213,7625
#define LINKCOUNT_EFLAGS_SAVE 215,7666
#define LINKCOUNT_EFLAGS_RESTORE 216,7702
#define LINKCOUNT_FLAGSIZE 217,7741
#define LINKCOUNT_DIRECT_EXTRA(219,7820
#define LINKCOUNT_UNLINKED_ENTRY(221,7931
#define LINKCOUNT_NEVER_LINKED_SENTINEL 229,8310
exit_stub_size(235,8461
insert_relative_target(316,11781
insert_relative_jump(328,12137
insert_spill_or_restore(347,12701
insert_jmp_to_ibl(424,15874
insert_linkcount_inc(494,18687
insert_linkcount_saveflags(523,19524
insert_linkcount_restoreflags(538,19940
is_patchable_exit_stub_helper(552,20347
is_patchable_exit_stub(581,21150
is_exit_cti_stub_patchable(588,21381
bytes_for_exitstub_alignment(607,22056
extend_trace_pad_bytes(632,23062
pad_for_exitstub_alignment(659,24668
remove_nops_from_ilist(684,25742
nop_pad_ilist(714,26941
insert_inlined_ibl(828,32989
get_direct_exit_target(882,35429
insert_save_xax(898,36023
insert_restore_xax(908,36420
insert_exit_stub_other_flags(924,37102
insert_exit_stub(1085,43997
exit_cti_disp_pc(1092,44198
patch_branch(1142,45995
change_linkcount_target(1150,46221
optimize_linkcount_stub(1170,47050
patchable_exit_cti_align_offs(1256,50919
is_exit_cti_patchable(1273,51855
link_direct_exit(1324,53472
unlink_direct_exit(1418,57479
link_indirect_exit(1487,60193
linkstub_unlink_entry_offset(1568,63155
indirect_linkstub_stub_pc(1586,63704
indirect_linkstub_target(1624,65191
linkstub_cbr_disambiguate(1659,66769
cbr_fallthrough_exit_cti(1679,67354
unlink_indirect_exit(1695,68002
entrance_stub_jmp(1794,71723
coarse_is_entrance_stub(1811,72287
coarse_is_trace_head(1835,73097
entrance_stub_jmp_target(1849,73525
entrance_stub_target_tag(1860,73760
coarse_is_indirect_stub(1901,75391
coarse_cti_is_intra_fragment(1911,75667
coarse_indirect_stub_jmp_target(1943,77017
coarse_indirect_stub_size(1967,77774
entrance_stub_linked(1977,78097
patch_coarse_branch(1993,78785
link_entrance_stub(2032,80387
unlink_entrance_stub(2047,81054
entrance_stub_from_cti(2065,81715
init_patch_list(2076,81994
add_patch_entry_internal(2087,82421
add_patch_entry(2120,83768
add_patch_marker(2133,84297
remove_assembled_patch_markers(2142,84700
relocate_patch_list(2170,85511
encode_with_patch_list(2229,88161
print_patch_list(2318,91836
disassemble_with_annotations(2337,92462
patch_emitted_code(2364,93307
#define GET_IB_FTABLE(2441,96810
update_indirect_exit_stub(2450,97147
#define IBL_EFLAGS_IN_TLS(2510,99414
#define RESTORE_XAX_PREFIX(2512,99484
#define PREFIX_BASE(2515,99666
enum {PREFIX_SIZE_RESTORE_OF PREFIX_SIZE_RESTORE_OF2518,99763
      PREFIX_SIZE_FIVE_EFLAGS 2519,99819
use_ibt_prefix(2524,99932
ibl_use_target_prefix(2546,101003
fragment_prefix_size(2565,101874
insert_restore_xcx(2610,103771
insert_restore_register(2623,104339
insert_fragment_prefix(2650,105377
static uint profile_call_length 2741,109276
static int profile_call_fragment_offset 2742,109313
static int profile_call_call_offset 2743,109358
static byte profile_call_buf[profile_call_buf2744,109399
static dcontext_t *buffer_dcontext;buffer_dcontext2745,109434
profile_call_size(2749,109521
finalize_profile_call(2761,109815
insert_profile_call(2819,112250
build_profile_call_buffer(2835,112796
#define RESTORE_FROM_DC_VIA_REG(2952,117253
#define SAVE_TO_DC_VIA_REG(2957,117646
preinsert_swap_peb(3004,119998
#define RESTORE_FROM_DC(3145,127085
#define SAVE_TO_DC(3148,127270
#define OPND_TLS_FIELD(3151,127365
#define OPND_TLS_FIELD_SZ(3153,127437
#define SAVE_TO_TLS(3156,127532
#define RESTORE_FROM_TLS(3158,127613
#define SAVE_TO_REG(3161,127705
#define RESTORE_FROM_REG(3163,127788
#define OPND_DC_FIELD(3166,127882
#  define OPND_ARG1 3174,128257
#  define OPND_ARG1 3176,128310
# define OPND_ARG1 3179,128370
emit_fcache_enter_common(3293,132367
emit_fcache_enter(3521,142664
insert_shared_get_dcontext(3547,143707
insert_shared_restore_dcontext_reg(3577,145091
append_fcache_return_common(3724,150158
emit_fcache_return(3960,161005
emit_fcache_enter_shared(3978,161686
emit_fcache_return_shared(3985,161910
emit_fcache_return_coarse(4002,162552
emit_trace_head_return_coarse(4020,163275
coarse_exit_prefix_size(4051,164888
emit_coarse_exit_prefix(4070,165635
patch_coarse_exit_prefix(4219,172461
insert_save_eflags(4234,172920
insert_restore_eflags(4282,175170
append_increment_counter(4317,176854
append_empty_loop(4400,180890
instrlist_convert_to_x86(4422,181635
append_ibl_found(4436,182070
append_linkcount_incr(4591,188711
append_ibl_head(4672,193103
#define HEAD_START_PC_OFFS 4941,206128
#undef HEAD_START_PC_OFFS4948,206516
emit_inline_ibl_stub(4991,208006
#  define INSTR_CREATE_jmp_smart 5158,216060
#  define INSTR_CREATE_jmp_smart 5160,216116
emit_indirect_branch_lookup(5186,217208
update_ibl_routine(5932,253487
update_indirect_branch_lookup(5968,255218
emit_far_ibl(6052,258580
create_int_syscall_instr(6187,264708
create_syscall_instr(6208,265459
emit_shared_syscall(6400,272979
emit_dispatch_template(6937,297828
emit_shared_syscall_dispatch(6968,298819
emit_unlinked_shared_syscall_dispatch(6975,299019
link_shared_syscall_common(6990,299653
link_shared_syscall(7006,300120
unlink_shared_syscall_common(7027,300903
unlink_shared_syscall(7043,301371
emit_detach_callback_code(7143,305221
emit_detach_callback_final_jmp(7241,309808
emit_patch_syscall(7268,310666
emit_do_syscall_common(7323,313272
emit_fcache_enter_indirect(7422,316855
emit_do_callback_return(7433,317282
emit_do_clone_syscall(7465,318415
emit_do_vmkuw_syscall(7474,318797
emit_do_syscall(7487,319309
update_syscall(7499,319779
update_syscalls(7549,321523
decode_syscall_num(7567,321974
is_jmp_rel32(7617,324021
is_jmp_rel8(7632,324455
emit_new_thread_dynamo_start(7656,325129
emit_trace_head_incr(7732,328181
emit_trace_head_incr_shared(7819,332710
client_xfer_ibl_tgt(7830,332952
client_ibl_xfer_is_thread_private(7850,333947
emit_client_ibl_xfer(7861,334186
relink_client_ibl_xfer(7945,337299
link_client_ibl_xfer(7972,338311
unlink_client_ibl_xfer(7978,338414
client_clean_call_is_thread_private(7988,338671
emit_clean_call_save(7998,338829
emit_clean_call_restore(8041,340596

x86/instrument.c,14978
# undef ASSERT_TRUNCATE73,2957
# undef ASSERT_BITFIELD_TRUNCATE74,2981
# undef ASSERT_NOT_REACHED75,3014
# define ASSERT_TRUNCATE 76,3041
# define ASSERT_BITFIELD_TRUNCATE 77,3110
# define ASSERT_NOT_REACHED 78,3188
#define INSTRUMENT_INIT_NAME 85,3434
#define USES_DR_VERSION_NAME 92,3618
#define NEWEST_COMPATIBLE_VERSION 103,4136
DR_API const char *unique_build_number unique_build_number110,4447
typedef void (*callback_t)callback_t120,4904
typedef struct _callback_list_t 121,4938
    callback_t *callbacks;callbacks122,4972
    size_t num;123,5038
    size_t size;124,5107
} callback_list_t;125,5186
#define FAST_COPY_SIZE 145,6105
#define call_all_ret(146,6130
#define call_all(183,8834
static callback_list_t exit_callbacks 195,9411
static callback_list_t thread_init_callbacks 196,9457
static callback_list_t thread_exit_callbacks 197,9510
static callback_list_t fork_init_callbacks 199,9575
static callback_list_t bb_callbacks 201,9633
static callback_list_t trace_callbacks 202,9677
static callback_list_t end_trace_callbacks 204,9745
static callback_list_t fragdel_callbacks 206,9803
static callback_list_t restore_state_callbacks 207,9852
static callback_list_t restore_state_ex_callbacks 208,9907
static callback_list_t module_load_callbacks 209,9965
static callback_list_t module_unload_callbacks 210,10018
static callback_list_t filter_syscall_callbacks 211,10073
static callback_list_t pre_syscall_callbacks 212,10129
static callback_list_t post_syscall_callbacks 213,10182
static callback_list_t exception_callbacks 215,10251
static callback_list_t signal_callbacks 217,10308
static callback_list_t security_violation_callbacks 220,10390
static callback_list_t persist_ro_size_callbacks 222,10457
static callback_list_t persist_ro_callbacks 223,10514
static callback_list_t resurrect_ro_callbacks 224,10566
static callback_list_t persist_rx_size_callbacks 225,10620
static callback_list_t persist_rx_callbacks 226,10677
static callback_list_t resurrect_rx_callbacks 227,10729
static callback_list_t persist_rw_size_callbacks 228,10783
static callback_list_t persist_rw_callbacks 229,10840
static callback_list_t resurrect_rw_callbacks 230,10892
static callback_list_t persist_patch_callbacks 231,10946
typedef struct _client_lib_t 237,11163
    client_id_t id;238,11194
    char path[path239,11214
    shlib_handle_t lib;241,11306
    app_pc start;242,11330
    app_pc end;243,11348
    char options[options244,11364
    callback_list_t nudge_callbacks;249,11573
} client_lib_t;250,11610
static client_lib_t client_libs[client_libs255,11770
static size_t num_client_libs 256,11829
static void *persist_user_data[persist_user_data258,11865
static bool print_to_console;262,11983
static shlib_handle_t priv_kernel32;263,12013
typedef BOOL (WINAPI *kernel32_WriteFile_t)kernel32_WriteFile_t264,12050
static kernel32_WriteFile_t kernel32_WriteFile;266,12147
static bool block_client_nudge_threads 271,12247
static bool client_requested_exit;272,12295
static vm_area_vector_t *client_aux_libs;client_aux_libs285,12793
add_callback(296,13097
remove_callback(349,14767
add_client_lib(394,15930
instrument_load_client_libs(493,19693
init_client_aux_libs(536,20860
instrument_init(545,21065
free_callback_list(609,23700
void free_all_callback_lists(620,23984
instrument_exit(663,25494
is_in_client_lib(698,26577
get_client_bounds(718,27129
get_client_path_from_addr(731,27477
is_valid_client_id(745,27749
dr_register_exit_event(757,27946
dr_unregister_exit_event(763,28062
dr_register_bb_event(769,28190
dr_unregister_bb_event(782,28570
dr_register_trace_event(790,28826
dr_unregister_trace_event(803,29208
dr_register_end_trace_event(812,29484
dr_unregister_end_trace_event(824,29844
dr_register_delete_event(832,30077
dr_unregister_delete_event(843,30364
dr_register_restore_state_event(849,30519
dr_unregister_restore_state_event(862,30964
dr_register_restore_state_ex_event(870,31274
dr_unregister_restore_state_ex_event(882,31678
dr_register_thread_init_event(889,31946
dr_unregister_thread_init_event(895,32087
dr_register_thread_exit_event(901,32240
dr_unregister_thread_exit_event(907,32381
dr_register_fork_init_event(914,32546
dr_unregister_fork_init_event(920,32683
dr_register_module_load_event(927,32843
dr_unregister_module_load_event(934,33067
dr_register_module_unload_event(941,33305
dr_unregister_module_unload_event(948,33522
dr_register_exception_event(956,33768
dr_unregister_exception_event(962,33928
dr_register_signal_event(968,34105
dr_unregister_signal_event(975,34299
dr_register_filter_syscall_event(983,34528
dr_unregister_filter_syscall_event(989,34687
dr_register_pre_syscall_event(995,34858
dr_unregister_pre_syscall_event(1001,35011
dr_register_post_syscall_event(1007,35176
dr_unregister_post_syscall_event(1013,35331
dr_register_security_event(1020,35525
dr_unregister_security_event(1030,36000
dr_register_nudge_event(1041,36502
dr_unregister_nudge_event(1059,37121
dr_nudge_client_ex(1077,37806
dr_nudge_client(1103,38685
dr_is_nudge_thread(1111,38860
instrument_client_thread_init(1120,39090
instrument_thread_init(1146,40084
instrument_fork_init(1189,41576
instrument_thread_exit_event(1199,41817
instrument_thread_exit(1219,42526
dr_bb_hook_exists(1260,43766
dr_trace_hook_exists(1266,43835
dr_fragment_deleted_hook_exists(1272,43910
dr_end_trace_hook_exists(1278,43998
dr_thread_exit_hook_exists(1284,44081
dr_exit_hook_exists(1290,44168
dr_xl8_hook_exists(1296,44241
hide_tag_from_client(1303,44372
check_ilist_translations(1345,46345
instrument_basic_block(1388,48389
instrument_trace(1450,50619
instrument_fragment_deleted(1518,52978
instrument_restore_state(1543,53672
instrument_end_trace(1578,55196
create_and_initialize_module_data(1597,55712
copy_module_area_to_module_data(1650,57849
dr_copy_module_data(1680,59186
dr_free_module_data(1703,60079
instrument_module_load_trigger(1729,60969
instrument_module_load(1754,61850
instrument_module_unload(1777,62652
instrument_filter_syscall(1796,63155
instrument_pre_syscall(1810,63633
instrument_post_syscall(1831,64437
instrument_invoke_another_syscall(1842,64764
instrument_exception(1850,64973
instrument_signal(1865,65556
dr_signal_hook_exists(1880,66182
instrument_security_violation(1889,66363
instrument_nudge(2012,71059
get_num_client_threads(2088,74038
wait_for_outstanding_nudges(2100,74276
dr_standalone_init(2146,75883
dr_abort(2155,76038
dr_exit_process(2164,76210
dr_using_all_private_caches(2197,77465
dr_request_synchronized_exit(2204,77556
dr_set_process_exit_behavior(2212,77763
dr_get_options(2235,78630
dr_get_client_path(2251,78993
dr_get_client_base(2266,79284
dr_get_application_name(2280,79581
dr_get_process_id(2290,79755
dr_get_parent_id(2298,79861
dr_convert_handle_to_pid(2307,79959
dr_get_os_version(2319,80228
dr_is_wow64(2348,81497
dr_get_app_PEB(2355,81583
dr_get_time(2364,81687
dr_get_milliseconds(2371,81790
dr_get_random_value(2378,81865
dr_set_random_seed(2385,81954
dr_get_random_seed(2392,82028
dr_thread_alloc(2411,82541
dr_thread_free(2422,82842
dr_global_alloc(2435,83272
dr_global_free(2445,83484
dr_nonheap_alloc(2453,83657
dr_nonheap_free(2460,83784
raw_mem_alloc(2466,83899
raw_mem_free(2527,86289
dr_raw_mem_alloc(2563,87550
dr_raw_mem_free(2570,87681
custom_memory_shared(2576,87795
dr_custom_alloc(2672,92387
dr_custom_free(2680,92594
__wrap_malloc(2695,93077
__wrap_realloc(2707,93427
__wrap_calloc(2719,93793
__wrap_free(2730,94099
dr_memory_protect(2738,94170
dr_memory_is_readable(2775,95809
dr_query_memory(2783,96015
dr_query_memory_ex(2813,97054
dr_safe_read(2834,97728
dr_safe_write(2842,97971
dr_try_setup(2849,98131
dr_try_stop(2878,99327
dr_memory_is_dr_internal(2891,99840
dr_memory_is_in_client(2898,99940
instrument_client_lib_loaded(2904,100030
instrument_client_lib_unloaded(2919,100639
dr_load_aux_library(2932,100940
dr_lookup_aux_library_routine(2961,102010
dr_unload_aux_library(2970,102187
dr_load_aux_x64_library(3011,103553
dr_lookup_aux_x64_library_routine(3037,104490
dr_unload_aux_x64_library(3045,104717
dr_mutex_create(3063,105108
dr_mutex_destroy(3075,105390
dr_mutex_lock(3086,105658
dr_mutex_unlock(3107,106345
dr_mutex_trylock(3125,106919
dr_mutex_self_owns(3149,107726
dr_mutex_mark_as_app(3156,107836
dr_rwlock_create(3165,107974
dr_rwlock_destroy(3175,108270
dr_rwlock_read_lock(3184,108509
dr_rwlock_read_unlock(3191,108604
dr_rwlock_write_lock(3198,108703
dr_rwlock_write_unlock(3205,108800
dr_rwlock_write_trylock(3212,108901
dr_rwlock_self_owns_write_lock(3219,109011
dr_rwlock_mark_as_app(3226,109135
dr_recurlock_create(3235,109303
dr_recurlock_destroy(3245,109604
dr_recurlock_lock(3254,109846
dr_recurlock_unlock(3261,109953
dr_recurlock_trylock(3268,110062
dr_recurlock_self_owns(3275,110175
dr_recurlock_mark_as_app(3282,110296
dr_mark_safe_to_suspend(3291,110465
dr_atomic_add32_return_sum(3307,110910
dr_lookup_module(3320,111270
dr_get_main_module(3333,111560
dr_lookup_module_by_name(3342,111824
typedef struct _client_mod_iterator_list_t 3363,112679
    module_data_t *info;info3364,112724
    struct _client_mod_iterator_list_t *next;next3365,112749
} client_mod_iterator_list_t;3366,112795
    client_mod_iterator_list_t *current;current3369,112843
    client_mod_iterator_list_t *full_list;full_list3370,112884
} client_mod_iterator_t;3371,112927
dr_module_iterator_start(3376,113030
dr_module_iterator_hasnext(3409,114332
dr_module_iterator_next(3418,114628
dr_module_iterator_stop(3435,115166
dr_module_preferred_name(3459,115996
dr_lookup_module_section(3474,116363
dr_module_set_should_instrument(3489,116993
dr_module_should_instrument(3517,117999
dr_get_proc_address(3541,118766
dr_get_proc_address_ex(3552,118966
dr_create_dir(3572,119598
dr_directory_exists(3580,119744
dr_file_exists(3588,119882
dr_open_file(3598,120074
dr_close_file(3631,121075
dr_rename_file(3640,121226
dr_delete_file(3648,121374
dr_flush_file(3660,121609
dr_write_file(3670,121750
dr_read_file(3680,121945
dr_file_seek(3689,122165
dr_file_tell(3699,122495
dr_dup_file_handle(3706,122560
dr_file_size(3724,122967
dr_map_file(3731,123077
dr_unmap_file(3744,123578
dr_log(3766,124236
dr_get_logfile(3791,124856
dr_is_notify_on(3809,125252
dr_get_stdout_file(3816,125355
dr_get_stderr_file(3822,125431
dr_get_stdin_file(3828,125507
dr_write_forensics_report(3837,125614
dr_messagebox(3894,127521
dr_write_to_console(3915,128258
dr_using_console(3944,129267
dr_enable_console_printing(3957,129653
dr_printf(3998,131274
dr_fprintf(4012,131530
dr_snprintf(4026,131819
dr_vsnprintf(4042,132282
dr_snwprintf(4048,132408
dr_vsnwprintf(4059,132621
dr_sscanf(4065,132759
dr_get_token(4076,132954
dr_print_instr(4091,133449
dr_print_opnd(4103,133941
dr_get_current_drcontext(4121,134542
dr_get_thread_id(4129,134765
dr_get_dr_thread_handle(4141,135144
dr_get_tls_field(4152,135501
dr_set_tls_field(4162,135845
dr_get_dr_segment_base(4172,136204
dr_raw_tls_calloc(4179,136295
dr_raw_tls_cfree(4194,136777
dr_thread_yield(4202,136932
dr_sleep(4216,137392
dr_client_thread_set_suspendable(4230,137828
dr_suspend_all_other_threads_ex(4244,138219
dr_suspend_all_other_threads(4342,143218
dr_resume_all_other_threads(4351,143525
dr_is_thread_native(4381,144704
dr_retakeover_suspended_native_thread(4390,144930
dr_set_itimer(4407,145442
dr_get_itimer(4419,145887
instrlist_meta_preinsert(4432,146247
instrlist_meta_postinsert(4441,146503
instrlist_meta_append(4450,146758
instrlist_meta_fault_preinsert(4458,146909
instrlist_meta_fault_postinsert(4466,147095
instrlist_meta_fault_append(4474,147283
convert_va_list_to_opnd(4481,147440
dr_insert_call(4495,147917
dr_insert_call_ex(4519,148843
prepare_for_call_ex(4550,150077
cleanup_after_call_ex(4571,150769
dr_insert_clean_call_ex_varg(4610,152335
dr_insert_clean_call_ex(4751,158456
dr_insert_clean_call(4764,158851
dr_prepare_for_call(4783,159685
dr_cleanup_after_call(4792,160051
dr_swap_to_clean_stack(4804,160535
dr_restore_app_stack(4838,162207
#define SPILL_SLOT_TLS_MAX 4856,163002
#define NUM_TLS_SPILL_SLOTS 4857,163031
#define NUM_SPILL_SLOTS 4858,163084
static const ushort SPILL_SLOT_TLS_OFFS[SPILL_SLOT_TLS_OFFS4863,163472
static const reg_id_t SPILL_SLOT_MC_REG[SPILL_SLOT_MC_REG4867,163715
dr_save_reg(4874,163965
dr_restore_reg(4919,165842
dr_max_opnd_accessible_spill_slot(4957,167469
reg_spill_slot_opnd(4968,167726
dr_reg_spill_slot_opnd(4983,168242
dr_read_saved_reg(4998,168907
dr_write_saved_reg(5026,170189
dr_insert_read_tls_field(5058,171633
dr_insert_write_tls_field(5091,173041
dr_save_arith_flags(5123,174538
dr_restore_arith_flags(5138,175117
dr_save_arith_flags_to_xax(5153,175719
dr_restore_arith_flags_from_xax(5171,176325
dr_insert_call_instrumentation(5199,177379
dr_insert_mbr_instrumentation(5247,179741
dr_insert_cbr_instrumentation(5347,184396
dr_insert_ubr_instrumentation(5543,193750
dr_clobber_retaddr_after_read(5556,194167
dr_mcontext_xmm_fields_valid(5582,195178
dr_get_mcontext_priv(5592,195413
dr_get_mcontext(5697,199753
dr_set_mcontext(5705,199953
dr_redirect_execution(5747,201555
dr_redirect_native_target(5777,202679
dr_delete_fragment(5817,204143
dr_replace_fragment(5879,206778
void dr_flush_fragments(5938,209289
dr_flush_region(5986,211067
dr_unlink_flush_region(6026,213097
dr_delay_flush_region(6073,215675
dr_fragment_exists_at(6107,216797
dr_bb_exists_at(6123,217161
dr_fragment_size(6140,217600
dr_fragment_app_pc(6168,218510
dr_app_pc_for_decoding(6192,219299
dr_app_pc_from_cache_pc(6204,219485
dr_using_app_state(6225,220196
dr_switch_to_app_state(6233,220343
dr_switch_to_app_state_ex(6240,220456
dr_switch_to_dr_state(6248,220647
dr_switch_to_dr_state_ex(6255,220758
dr_mark_trace_head(6293,222373
dr_trace_head_at(6374,225557
dr_trace_exists_at(6402,226320
dr_add_prefixes_to_basic_blocks(6432,227250
dr_insert_get_seg_base(6454,228006
instrument_persist_ro_size(6514,230527
instrument_persist_ro(6559,232410
instrument_resurrect_ro(6586,233262
instrument_persist_rx_size(6619,234187
instrument_persist_rx(6637,234839
instrument_resurrect_rx(6651,235299
instrument_persist_rw_size(6665,235701
instrument_persist_rw(6683,236353
instrument_resurrect_rw(6697,236813
instrument_persist_patch(6710,237180
dr_register_persist_ro(6725,237647
dr_unregister_persist_ro(6742,238468
dr_register_persist_rx(6770,239527
dr_unregister_persist_rx(6787,240348
dr_register_persist_rw(6815,241407
dr_unregister_persist_rw(6832,242228
dr_register_persist_patch(6860,243287
dr_unregister_persist_patch(6872,243666
instrlist_insert_mov_immed_ptrsz(6885,244180
instrlist_insert_push_immed_ptrsz(6900,244799
instrlist_insert_mov_instr_addr(6910,245145
instrlist_insert_push_instr_addr(6928,245888

x86/decode.c,1586
# undef ASSERT_TRUNCATE73,3290
# undef ASSERT_BITFIELD_TRUNCATE74,3314
# undef ASSERT_NOT_REACHED75,3347
# define ASSERT_TRUNCATE 76,3374
# define ASSERT_BITFIELD_TRUNCATE 77,3443
# define ASSERT_NOT_REACHED 78,3521
#define xx 82,3629
static const instr_info_t escape_instr 83,3660
static const instr_info_t escape_38_instr 85,3764
static const instr_info_t escape_3a_instr 87,3880
#undef xx89,3996
static bool initexit_x86_mode 95,4138
set_x86_mode(105,4562
get_x86_mode(129,5398
is_variable_size(150,6229
resolve_var_reg_size(183,6919
resolve_variable_size(197,7344
resolve_variable_size_dc(262,10610
resolve_addr_size(271,10869
optype_is_indir_reg(280,11090
indir_var_reg_size(300,11592
indir_var_reg_offs_factor(336,12606
read_immed(354,13028
read_operand(390,14149
read_modrm(513,18797
read_vex(585,21262
read_instruction(689,24788
reg8_alternative(1081,41214
    DECODE_REG_REG,1095,41714
    DECODE_REG_BASE,1096,41734
    DECODE_REG_INDEX,1097,41755
    DECODE_REG_RM,1098,41777
} decode_reg_t;1099,41796
decode_reg(1105,41963
decode_modrm(1191,45104
get_immed(1354,52228
resolve_var_reg(1373,52868
ds_seg(1417,54379
decode_operand(1433,54873
decode_eflags_usage(1722,68813
decode_opcode(1748,69790
check_is_variable_size(1792,71587
decode_common(1814,72474
decode(1970,79030
decode_from_copy(1976,79148
get_next_instr_info(1982,79320
decode_first_opcode_byte(1988,79425
decode_opcode_name(1996,79592
unit_check_decode_ff_opcode(2011,80032
#define CHECK_ENCODE_OPCODE(2047,81255
unit_check_sse3(2058,81788
int main(2092,83629

x86/optimize.c,5563
optimize_trace(131,5733
    uint loads_removed_from_loads;219,8105
    uint loads_removed_from_stores;220,8140
    uint ctis_in_load_removal;221,8176
    int reg_overwritten;222,8207
    int val_saved_in_dead_reg;223,8232
    uint loads_examined;224,8263
    int incs_examined;226,8307
    int incs_replaced;227,8330
    int loops_unrolled;229,8373
    int vals_spilled_to_xmm;231,8414
    int loads_replaced_by_xmm;232,8443
    int xmm_saves_to_mem;233,8474
    int stores_replaced_by_xmm;234,8500
    int xmm_restored_from_memory;235,8532
    int xmm_mov_to_dead_reg;236,8566
    int loadstore_combos_replaced_by_xmm;237,8595
    int xmm_traces;238,8637
    int mmx_traces;239,8657
    int num_instrs_simplified;241,8708
    int num_fail_simplified;242,8739
    int num_opnds_simplified;243,8768
    int num_const_add_const_mem;244,8798
    int num_jmps_simplified;245,8831
    int num_jecxz_instrs_removed;246,8860
    int dead_loads_removed;248,8922
    int xors_removed;250,8990
    int num_stack_adjust_removed;252,9049
    int pre_num_instrs_seen;254,9106
    int pre_num_jmps_seen;255,9135
    int post_num_instrs_seen;256,9162
    int post_num_jmps_seen;257,9192
    int num_returns_removed;259,9251
    int num_return_instrs_removed;260,9280
    bool i64_test;262,9335
    int ia64_num_entries;263,9354
} opt_stats_t;265,9387
print_optimization_stats(271,9562
generate_antialias_check(363,14121
#define MAX_INDUCTION_VARS 388,15186
#define MAX_LCDS 389,15215
#define MAX_INVARIANTS 390,15235
identify_for_loop(393,15274
unroll_loops(824,32491
static bool have_done 1074,41765
static bool checked 1075,41796
static int test1;1076,41825
static int test2;1077,41843
static int test3;1078,41861
test_i64(1081,41893
instr_counts(1219,47613
#define PS_VALID_VAL 1248,48565
#define PS_LVALID_VAL 1249,48597
#define PS_HVALID_VAL 1250,48674
#define PS_KEEP 1251,48706
#define NUM_CONSTANT_ADDRESS 1253,48739
#define NUM_STACK_SLOTS 1254,48772
static int cp_global_aggr;1257,48803
static int cp_local_aggr;1258,48830
typedef struct _prop_state_t 1261,48906
    dcontext_t *dcontext;dcontext1262,48937
    instrlist_t *trace;trace1263,48963
    instr_t *hint;hint1264,48987
    byte reg_state[reg_state1265,49006
    int reg_vals[reg_vals1266,49029
    int addresses[addresses1268,49077
    int address_vals[address_vals1269,49118
    byte address_state[address_state1270,49162
    int cur_scope;1273,49225
    int stack_offsets_ebp[stack_offsets_ebp1275,49245
    int stack_vals[stack_vals1276,49289
    int stack_scope[stack_scope1278,49327
    byte stack_address_state[stack_address_state1279,49365
    bool lost_scope_count;1281,49454
} prop_state_t;1282,49481
set_stack_val(1286,49513
update_stack_val(1316,50511
check_stack_val(1340,51253
clear_stack_val(1359,51767
set_address_val(1378,52377
update_address_val(1407,53367
clear_address_val(1430,54052
get_immutable_value(1450,54608
opnd_is_stack_address(1497,56011
const_address_const_mem(1507,56314
propagate_address(1542,57530
propagate_opnd(1606,59400
check_flag_val(1723,63806
compare_flag_vals(1737,64271
removable_jmp(1754,64814
do_forward_check_eflags(1835,67852
forward_check_eflags(1967,74233
make_imm_store(1973,74433
make_to_imm_store(1980,74677
make_to_nop(2018,76438
calculate_zf_pf_sf(2037,77065
prop_simplify(2060,77720
get_trace_constant(2470,96102
update_prop_state(2483,96824
typedef struct _two_entry_list_element_t 2628,104273
    int disp;2629,104316
    int scope;2630,104330
    struct _two_entry_list_element_t * next;2631,104345
} two_entry_list_element_t;2632,104390
typedef struct _start_list_element_t 2634,104419
    int endscope;2635,104458
    two_entry_list_element_t * next;2636,104476
} start_list_element_t;2637,104513
handle_stack(2645,104754
constant_propagation(2715,107856
remove_unnecessary_zeroing(2864,112981
#define NUM_ADD_CACHE 2922,115125
#define ADD_KEEP 2923,115151
#define ADD_DEAD 2924,115173
static int dc_global_aggr;2926,115196
static int dc_local_aggr;2927,115223
add_address(2930,115262
address_is_dead(2951,115851
address_set_dead(2961,116100
add_init(2980,116565
add_stack_address(2993,117295
stack_address_is_dead(3017,117984
stack_address_set_dead(3029,118306
remove_dead_code(3044,118715
is_stack_adjustment(3285,129770
get_stack_adjustment(3304,130545
set_stack_adjustment(3318,130931
stack_adjust_combiner(3337,131446
check_eflags_cr(3478,138342
remove_return_no_save_eflags(3497,138902
remove_return(3585,141842
is_return(3704,146183
check_return(3751,147774
#define CALL_RETURN_STACK_SIZE 3778,148686
call_return_matching(3783,148838
peephole_optimize(3848,151450
replace_inc_with_add(3894,153309
#define MAX_DIST 3981,156793
remove_redundant_loads(3983,156820
find_dead_register_across_instrs(4235,167924
find_dead_register_across_instrs_H(4255,168386
#define MIN_PREFETCH_DISTANCE 4302,169553
prefetch_optimize_trace(4305,169598
is_store_to_ecxoff(4404,173318
is_load_from_ecxoff(4413,173667
opnd_is_constant_address(4423,174080
is_zeroing_instr(4430,174285
is_dead_register(4440,174557
find_dead_register(4462,175160
is_dead_reg(4477,175565
replace_inst(4500,176204
remove_inst(4509,176440
instruction_affects_mem_access(4517,176669
safe_write(4533,177126
instr_get_src_mem_access(4550,177532
find_next_self_loop(4567,177861
replace_self_loop_with_instr(4586,178249
get_decision_instr(4618,179458
propagate_down(4637,179883
check_down(4654,180311
is_nop(4667,180865

x86/instr.h,66717
#define _INSTR_H_ 41,2011
#define DR_REG_ENUM_COMPATIBILITY 52,2343
#define DR_FAST_IR 55,2443
# undef DR_FAST_IR62,2696
#  define INSTR_INLINE 106,4141
#  define INSTR_INLINE108,4178
    DR_REG_NULL,131,5106
    DR_REG_RAX,133,5222
    DR_REG_RAX,  DR_REG_RCX,133,5222
    DR_REG_RAX,  DR_REG_RCX,  DR_REG_RDX,133,5222
    DR_REG_RAX,  DR_REG_RCX,  DR_REG_RDX,  DR_REG_RBX,133,5222
    DR_REG_RSP,134,5277
    DR_REG_RSP,  DR_REG_RBP,134,5277
    DR_REG_RSP,  DR_REG_RBP,  DR_REG_RSI,134,5277
    DR_REG_RSP,  DR_REG_RBP,  DR_REG_RSI,  DR_REG_RDI,134,5277
    DR_REG_R8,135,5332
    DR_REG_R8,   DR_REG_R9,135,5332
    DR_REG_R8,   DR_REG_R9,   DR_REG_R10,135,5332
    DR_REG_R8,   DR_REG_R9,   DR_REG_R10,  DR_REG_R11,135,5332
    DR_REG_R12,136,5387
    DR_REG_R12,  DR_REG_R13,136,5387
    DR_REG_R12,  DR_REG_R13,  DR_REG_R14,136,5387
    DR_REG_R12,  DR_REG_R13,  DR_REG_R14,  DR_REG_R15,136,5387
    DR_REG_EAX,138,5475
    DR_REG_EAX,  DR_REG_ECX,138,5475
    DR_REG_EAX,  DR_REG_ECX,  DR_REG_EDX,138,5475
    DR_REG_EAX,  DR_REG_ECX,  DR_REG_EDX,  DR_REG_EBX,138,5475
    DR_REG_ESP,139,5530
    DR_REG_ESP,  DR_REG_EBP,139,5530
    DR_REG_ESP,  DR_REG_EBP,  DR_REG_ESI,139,5530
    DR_REG_ESP,  DR_REG_EBP,  DR_REG_ESI,  DR_REG_EDI,139,5530
    DR_REG_R8D,140,5585
    DR_REG_R8D,  DR_REG_R9D,140,5585
    DR_REG_R8D,  DR_REG_R9D,  DR_REG_R10D,140,5585
    DR_REG_R8D,  DR_REG_R9D,  DR_REG_R10D, DR_REG_R11D,140,5585
    DR_REG_R12D,141,5641
    DR_REG_R12D, DR_REG_R13D,141,5641
    DR_REG_R12D, DR_REG_R13D, DR_REG_R14D,141,5641
    DR_REG_R12D, DR_REG_R13D, DR_REG_R14D, DR_REG_R15D,141,5641
    DR_REG_AX,143,5730
    DR_REG_AX,   DR_REG_CX,143,5730
    DR_REG_AX,   DR_REG_CX,   DR_REG_DX,143,5730
    DR_REG_AX,   DR_REG_CX,   DR_REG_DX,   DR_REG_BX,143,5730
    DR_REG_SP,144,5784
    DR_REG_SP,   DR_REG_BP,144,5784
    DR_REG_SP,   DR_REG_BP,   DR_REG_SI,144,5784
    DR_REG_SP,   DR_REG_BP,   DR_REG_SI,   DR_REG_DI,144,5784
    DR_REG_R8W,145,5838
    DR_REG_R8W,  DR_REG_R9W,145,5838
    DR_REG_R8W,  DR_REG_R9W,  DR_REG_R10W,145,5838
    DR_REG_R8W,  DR_REG_R9W,  DR_REG_R10W, DR_REG_R11W,145,5838
    DR_REG_R12W,146,5894
    DR_REG_R12W, DR_REG_R13W,146,5894
    DR_REG_R12W, DR_REG_R13W, DR_REG_R14W,146,5894
    DR_REG_R12W, DR_REG_R13W, DR_REG_R14W, DR_REG_R15W,146,5894
    DR_REG_AL,148,5982
    DR_REG_AL,   DR_REG_CL,148,5982
    DR_REG_AL,   DR_REG_CL,   DR_REG_DL,148,5982
    DR_REG_AL,   DR_REG_CL,   DR_REG_DL,   DR_REG_BL,148,5982
    DR_REG_AH,149,6036
    DR_REG_AH,   DR_REG_CH,149,6036
    DR_REG_AH,   DR_REG_CH,   DR_REG_DH,149,6036
    DR_REG_AH,   DR_REG_CH,   DR_REG_DH,   DR_REG_BH,149,6036
    DR_REG_R8L,150,6090
    DR_REG_R8L,  DR_REG_R9L,150,6090
    DR_REG_R8L,  DR_REG_R9L,  DR_REG_R10L,150,6090
    DR_REG_R8L,  DR_REG_R9L,  DR_REG_R10L, DR_REG_R11L,150,6090
    DR_REG_R12L,151,6146
    DR_REG_R12L, DR_REG_R13L,151,6146
    DR_REG_R12L, DR_REG_R13L, DR_REG_R14L,151,6146
    DR_REG_R12L, DR_REG_R13L, DR_REG_R14L, DR_REG_R15L,151,6146
    DR_REG_SPL,152,6202
    DR_REG_SPL,  DR_REG_BPL,152,6202
    DR_REG_SPL,  DR_REG_BPL,  DR_REG_SIL,152,6202
    DR_REG_SPL,  DR_REG_BPL,  DR_REG_SIL,  DR_REG_DIL,152,6202
    DR_REG_MM0,154,6278
    DR_REG_MM0,  DR_REG_MM1,154,6278
    DR_REG_MM0,  DR_REG_MM1,  DR_REG_MM2,154,6278
    DR_REG_MM0,  DR_REG_MM1,  DR_REG_MM2,  DR_REG_MM3,154,6278
    DR_REG_MM4,155,6333
    DR_REG_MM4,  DR_REG_MM5,155,6333
    DR_REG_MM4,  DR_REG_MM5,  DR_REG_MM6,155,6333
    DR_REG_MM4,  DR_REG_MM5,  DR_REG_MM6,  DR_REG_MM7,155,6333
    DR_REG_XMM0,157,6410
    DR_REG_XMM0, DR_REG_XMM1,157,6410
    DR_REG_XMM0, DR_REG_XMM1, DR_REG_XMM2,157,6410
    DR_REG_XMM0, DR_REG_XMM1, DR_REG_XMM2, DR_REG_XMM3,157,6410
    DR_REG_XMM4,158,6466
    DR_REG_XMM4, DR_REG_XMM5,158,6466
    DR_REG_XMM4, DR_REG_XMM5, DR_REG_XMM6,158,6466
    DR_REG_XMM4, DR_REG_XMM5, DR_REG_XMM6, DR_REG_XMM7,158,6466
    DR_REG_XMM8,159,6522
    DR_REG_XMM8, DR_REG_XMM9,159,6522
    DR_REG_XMM8, DR_REG_XMM9, DR_REG_XMM10,159,6522
    DR_REG_XMM8, DR_REG_XMM9, DR_REG_XMM10,DR_REG_XMM11,159,6522
    DR_REG_XMM12,160,6579
    DR_REG_XMM12,DR_REG_XMM13,160,6579
    DR_REG_XMM12,DR_REG_XMM13,DR_REG_XMM14,160,6579
    DR_REG_XMM12,DR_REG_XMM13,DR_REG_XMM14,DR_REG_XMM15,160,6579
    DR_REG_ST0,162,6671
    DR_REG_ST0,  DR_REG_ST1,162,6671
    DR_REG_ST0,  DR_REG_ST1,  DR_REG_ST2,162,6671
    DR_REG_ST0,  DR_REG_ST1,  DR_REG_ST2,  DR_REG_ST3,162,6671
    DR_REG_ST4,163,6726
    DR_REG_ST4,  DR_REG_ST5,163,6726
    DR_REG_ST4,  DR_REG_ST5,  DR_REG_ST6,163,6726
    DR_REG_ST4,  DR_REG_ST5,  DR_REG_ST6,  DR_REG_ST7,163,6726
    DR_SEG_ES,165,6848
    DR_SEG_ES,   DR_SEG_CS,165,6848
    DR_SEG_ES,   DR_SEG_CS,   DR_SEG_SS,165,6848
    DR_SEG_ES,   DR_SEG_CS,   DR_SEG_SS,   DR_SEG_DS,165,6848
    DR_SEG_ES,   DR_SEG_CS,   DR_SEG_SS,   DR_SEG_DS,   DR_SEG_FS,165,6848
    DR_SEG_ES,   DR_SEG_CS,   DR_SEG_SS,   DR_SEG_DS,   DR_SEG_FS,   DR_SEG_GS,165,6848
    DR_REG_DR0,167,7017
    DR_REG_DR0,  DR_REG_DR1,167,7017
    DR_REG_DR0,  DR_REG_DR1,  DR_REG_DR2,167,7017
    DR_REG_DR0,  DR_REG_DR1,  DR_REG_DR2,  DR_REG_DR3,167,7017
    DR_REG_DR4,168,7072
    DR_REG_DR4,  DR_REG_DR5,168,7072
    DR_REG_DR4,  DR_REG_DR5,  DR_REG_DR6,168,7072
    DR_REG_DR4,  DR_REG_DR5,  DR_REG_DR6,  DR_REG_DR7,168,7072
    DR_REG_DR8,169,7127
    DR_REG_DR8,  DR_REG_DR9,169,7127
    DR_REG_DR8,  DR_REG_DR9,  DR_REG_DR10,169,7127
    DR_REG_DR8,  DR_REG_DR9,  DR_REG_DR10, DR_REG_DR11,169,7127
    DR_REG_DR12,170,7183
    DR_REG_DR12, DR_REG_DR13,170,7183
    DR_REG_DR12, DR_REG_DR13, DR_REG_DR14,170,7183
    DR_REG_DR12, DR_REG_DR13, DR_REG_DR14, DR_REG_DR15,170,7183
    DR_REG_CR0,172,7300
    DR_REG_CR0,  DR_REG_CR1,172,7300
    DR_REG_CR0,  DR_REG_CR1,  DR_REG_CR2,172,7300
    DR_REG_CR0,  DR_REG_CR1,  DR_REG_CR2,  DR_REG_CR3,172,7300
    DR_REG_CR4,173,7355
    DR_REG_CR4,  DR_REG_CR5,173,7355
    DR_REG_CR4,  DR_REG_CR5,  DR_REG_CR6,173,7355
    DR_REG_CR4,  DR_REG_CR5,  DR_REG_CR6,  DR_REG_CR7,173,7355
    DR_REG_CR8,174,7411
    DR_REG_CR8,  DR_REG_CR9,174,7411
    DR_REG_CR8,  DR_REG_CR9,  DR_REG_CR10,174,7411
    DR_REG_CR8,  DR_REG_CR9,  DR_REG_CR10, DR_REG_CR11,174,7411
    DR_REG_CR12,175,7467
    DR_REG_CR12, DR_REG_CR13,175,7467
    DR_REG_CR12, DR_REG_CR13, DR_REG_CR14,175,7467
    DR_REG_CR12, DR_REG_CR13, DR_REG_CR14, DR_REG_CR15,175,7467
    DR_REG_INVALID,176,7523
    DR_REG_YMM0,185,7841
    DR_REG_YMM0, DR_REG_YMM1,185,7841
    DR_REG_YMM0, DR_REG_YMM1, DR_REG_YMM2,185,7841
    DR_REG_YMM0, DR_REG_YMM1, DR_REG_YMM2, DR_REG_YMM3,185,7841
    DR_REG_YMM4,186,7897
    DR_REG_YMM4, DR_REG_YMM5,186,7897
    DR_REG_YMM4, DR_REG_YMM5, DR_REG_YMM6,186,7897
    DR_REG_YMM4, DR_REG_YMM5, DR_REG_YMM6, DR_REG_YMM7,186,7897
    DR_REG_YMM8,187,7953
    DR_REG_YMM8, DR_REG_YMM9,187,7953
    DR_REG_YMM8, DR_REG_YMM9, DR_REG_YMM10,187,7953
    DR_REG_YMM8, DR_REG_YMM9, DR_REG_YMM10,DR_REG_YMM11,187,7953
    DR_REG_YMM12,188,8010
    DR_REG_YMM12,DR_REG_YMM13,188,8010
    DR_REG_YMM12,DR_REG_YMM13,DR_REG_YMM14,188,8010
    DR_REG_YMM12,DR_REG_YMM13,DR_REG_YMM14,DR_REG_YMM15,188,8010
typedef byte reg_id_t;192,8149
typedef byte opnd_size_t;193,8208
# define DR_REG_XAX 197,8343
# define DR_REG_XCX 198,8429
# define DR_REG_XDX 199,8515
# define DR_REG_XBX 200,8601
# define DR_REG_XSP 201,8687
# define DR_REG_XBP 202,8773
# define DR_REG_XSI 203,8859
# define DR_REG_XDI 204,8945
# define DR_REG_XAX 206,9037
# define DR_REG_XCX 207,9123
# define DR_REG_XDX 208,9209
# define DR_REG_XBX 209,9295
# define DR_REG_XSP 210,9381
# define DR_REG_XBP 211,9467
# define DR_REG_XSI 212,9553
# define DR_REG_XDI 213,9639
#define DR_REG_START_GPR 222,9883
# define DR_REG_STOP_GPR 224,9976
# define DR_REG_STOP_GPR 226,10062
#define DR_NUM_GPR_REGS 229,10185
#define DR_REG_START_64 230,10246
#define DR_REG_STOP_64 231,10338
#define DR_REG_START_32 232,10430
#define DR_REG_STOP_32 233,10522
#define DR_REG_START_16 234,10614
#define DR_REG_STOP_16 235,10706
#define DR_REG_START_8 236,10798
#define DR_REG_STOP_8 237,10889
#define DR_REG_START_8HL 238,10980
#define DR_REG_STOP_8HL 239,11072
#define DR_REG_START_x86_8 240,11164
#define DR_REG_STOP_x86_8 241,11256
#define DR_REG_START_x64_8 242,11347
#define DR_REG_STOP_x64_8 243,11439
#define DR_REG_START_MMX 244,11530
#define DR_REG_STOP_MMX 245,11611
#define DR_REG_START_XMM 246,11692
#define DR_REG_STOP_XMM 247,11773
#define DR_REG_START_YMM 248,11854
#define DR_REG_STOP_YMM 249,11935
#define DR_REG_START_FLOAT 250,12016
#define DR_REG_STOP_FLOAT 251,12108
#define DR_REG_START_SEGMENT 252,12200
#define DR_REG_STOP_SEGMENT 253,12285
#define DR_REG_START_DR 254,12370
#define DR_REG_STOP_DR 255,12453
#define DR_REG_START_CR 256,12536
#define DR_REG_STOP_CR 257,12621
#define DR_REG_LAST_VALID_ENUM 262,12807
#define DR_REG_LAST_ENUM 263,12851
#define REG_START_SPILL 265,12952
#define REG_STOP_SPILL 266,12989
#define REG_SPILL_NUM 267,13026
# define REG_NULL 276,13408
# define REG_RAX 277,13449
# define REG_RCX 278,13489
# define REG_RDX 279,13529
# define REG_RBX 280,13569
# define REG_RSP 281,13609
# define REG_RBP 282,13649
# define REG_RSI 283,13689
# define REG_RDI 284,13729
# define REG_R8 285,13769
# define REG_R9 286,13808
# define REG_R10 287,13847
# define REG_R11 288,13887
# define REG_R12 289,13927
# define REG_R13 290,13967
# define REG_R14 291,14007
# define REG_R15 292,14047
# define REG_EAX 293,14087
# define REG_ECX 294,14127
# define REG_EDX 295,14167
# define REG_EBX 296,14207
# define REG_ESP 297,14247
# define REG_EBP 298,14287
# define REG_ESI 299,14327
# define REG_EDI 300,14367
# define REG_R8D 301,14407
# define REG_R9D 302,14447
# define REG_R10D 303,14487
# define REG_R11D 304,14528
# define REG_R12D 305,14569
# define REG_R13D 306,14610
# define REG_R14D 307,14651
# define REG_R15D 308,14692
# define REG_AX 309,14733
# define REG_CX 310,14772
# define REG_DX 311,14811
# define REG_BX 312,14850
# define REG_SP 313,14889
# define REG_BP 314,14928
# define REG_SI 315,14967
# define REG_DI 316,15006
# define REG_R8W 317,15045
# define REG_R9W 318,15085
# define REG_R10W 319,15125
# define REG_R11W 320,15166
# define REG_R12W 321,15207
# define REG_R13W 322,15248
# define REG_R14W 323,15289
# define REG_R15W 324,15330
# define REG_AL 325,15371
# define REG_CL 326,15410
# define REG_DL 327,15449
# define REG_BL 328,15488
# define REG_AH 329,15527
# define REG_CH 330,15566
# define REG_DH 331,15605
# define REG_BH 332,15644
# define REG_R8L 333,15683
# define REG_R9L 334,15723
# define REG_R10L 335,15763
# define REG_R11L 336,15804
# define REG_R12L 337,15845
# define REG_R13L 338,15886
# define REG_R14L 339,15927
# define REG_R15L 340,15968
# define REG_SPL 341,16009
# define REG_BPL 342,16049
# define REG_SIL 343,16089
# define REG_DIL 344,16129
# define REG_MM0 345,16169
# define REG_MM1 346,16209
# define REG_MM2 347,16249
# define REG_MM3 348,16289
# define REG_MM4 349,16329
# define REG_MM5 350,16369
# define REG_MM6 351,16409
# define REG_MM7 352,16449
# define REG_XMM0 353,16489
# define REG_XMM1 354,16530
# define REG_XMM2 355,16571
# define REG_XMM3 356,16612
# define REG_XMM4 357,16653
# define REG_XMM5 358,16694
# define REG_XMM6 359,16735
# define REG_XMM7 360,16776
# define REG_XMM8 361,16817
# define REG_XMM9 362,16858
# define REG_XMM10 363,16899
# define REG_XMM11 364,16941
# define REG_XMM12 365,16983
# define REG_XMM13 366,17025
# define REG_XMM14 367,17067
# define REG_XMM15 368,17109
# define REG_ST0 369,17151
# define REG_ST1 370,17191
# define REG_ST2 371,17231
# define REG_ST3 372,17271
# define REG_ST4 373,17311
# define REG_ST5 374,17351
# define REG_ST6 375,17391
# define REG_ST7 376,17431
# define SEG_ES 377,17471
# define SEG_CS 378,17510
# define SEG_SS 379,17549
# define SEG_DS 380,17588
# define SEG_FS 381,17627
# define SEG_GS 382,17666
# define REG_DR0 383,17705
# define REG_DR1 384,17745
# define REG_DR2 385,17785
# define REG_DR3 386,17825
# define REG_DR4 387,17865
# define REG_DR5 388,17905
# define REG_DR6 389,17945
# define REG_DR7 390,17985
# define REG_DR8 391,18025
# define REG_DR9 392,18065
# define REG_DR10 393,18105
# define REG_DR11 394,18146
# define REG_DR12 395,18187
# define REG_DR13 396,18228
# define REG_DR14 397,18269
# define REG_DR15 398,18310
# define REG_CR0 399,18351
# define REG_CR1 400,18391
# define REG_CR2 401,18431
# define REG_CR3 402,18471
# define REG_CR4 403,18511
# define REG_CR5 404,18551
# define REG_CR6 405,18591
# define REG_CR7 406,18631
# define REG_CR8 407,18671
# define REG_CR9 408,18711
# define REG_CR10 409,18751
# define REG_CR11 410,18792
# define REG_CR12 411,18833
# define REG_CR13 412,18874
# define REG_CR14 413,18915
# define REG_CR15 414,18956
# define REG_INVALID 415,18997
# define REG_XAX 416,19041
# define REG_XCX 417,19081
# define REG_XDX 418,19121
# define REG_XBX 419,19161
# define REG_XSP 420,19201
# define REG_XBP 421,19241
# define REG_XSI 422,19281
# define REG_XDI 423,19321
# define REG_START_64 424,19361
# define REG_STOP_64 425,19406
# define REG_START_32 426,19450
# define REG_STOP_32 427,19495
# define REG_START_16 428,19539
# define REG_STOP_16 429,19584
# define REG_START_8 430,19628
# define REG_STOP_8 431,19672
# define REG_START_8HL 432,19715
# define REG_STOP_8HL 433,19761
# define REG_START_x86_8 434,19806
# define REG_STOP_x86_8 435,19854
# define REG_START_x64_8 436,19901
# define REG_STOP_x64_8 437,19949
# define REG_START_MMX 438,19996
# define REG_STOP_MMX 439,20042
# define REG_START_YMM 440,20087
# define REG_STOP_YMM 441,20133
# define REG_START_XMM 442,20178
# define REG_STOP_XMM 443,20224
# define REG_START_FLOAT 444,20269
# define REG_STOP_FLOAT 445,20317
# define REG_START_SEGMENT 446,20364
# define REG_STOP_SEGMENT 447,20414
# define REG_START_DR 448,20463
# define REG_STOP_DR 449,20508
# define REG_START_CR 450,20552
# define REG_STOP_CR 451,20597
# define REG_LAST_VALID_ENUM 452,20641
# define REG_LAST_ENUM 453,20693
# define REG_YMM0 454,20739
# define REG_YMM1 455,20780
# define REG_YMM2 456,20821
# define REG_YMM3 457,20862
# define REG_YMM4 458,20903
# define REG_YMM5 459,20944
# define REG_YMM6 460,20985
# define REG_YMM7 461,21026
# define REG_YMM8 462,21067
# define REG_YMM9 463,21108
# define REG_YMM10 464,21149
# define REG_YMM11 465,21191
# define REG_YMM12 466,21233
# define REG_YMM13 467,21275
# define REG_YMM14 468,21317
# define REG_YMM15 469,21359
# define INT8_MIN 474,21482
# define INT8_MAX 475,21512
# define INT16_MIN 476,21542
# define INT16_MAX 477,21571
# define INT32_MIN 478,21600
# define INT32_MAX 479,21628
# define REG_SPECIFIER_BITS 490,21840
# define SCALE_SPECIFIER_BITS 491,21870
struct _opnd_t 501,22344
    byte kind;502,22361
    opnd_size_t size;509,22664
        ushort far_pc_seg_selector;514,22851
        reg_id_t segment : REG_SPECIFIER_BITS;516,23003
        ushort disp;518,23155
        ushort shift;519,23207
    } seg;520,23255
        ptr_int_t immed_int;524,23353
        float immed_float;525,23409
        app_pc pc;530,23673
        instr_t *instr;instr535,23941
        reg_id_t reg;536,24026
            int disp;538,24090
            reg_id_t base_reg : REG_SPECIFIER_BITS;539,24112
            reg_id_t index_reg : REG_SPECIFIER_BITS;540,24164
            byte scale : SCALE_SPECIFIER_BITS;544,24430
            byte/*bool*/ encode_zero_disp 545,24477
            byte/*bool*/ force_full_disp 546,24524
            byte/*bool*/ disp_short_addr 547,24612
        } base_disp;548,24700
        void *addr;addr549,24753
    } value;550,24823
struct _opnd_t 555,24906
    uint black_box_uint;557,24935
    uint64 black_box_uint64;558,24960
    uint black_box_uint[black_box_uint560,24996
#define EXPECTED_SIZEOF_OPND 573,25520
    NULL_kind,580,25756
    IMMED_INTEGER_kind,581,25771
    IMMED_FLOAT_kind,582,25795
    PC_kind,583,25817
    INSTR_kind,584,25830
    REG_kind,585,25846
    BASE_DISP_kind,586,25860
    FAR_PC_kind,587,25944
    FAR_INSTR_kind,588,26013
    REL_ADDR_kind,590,26093
    ABS_ADDR_kind,591,26149
    MEM_INSTR_kind,593,26216
    LAST_kind,594,26236
    INSTR_DIRECT_EXIT 1691,58002
    INSTR_DIRECT_EXIT           = LINK_DIRECT,1691,58002
    INSTR_INDIRECT_EXIT 1692,58049
    INSTR_INDIRECT_EXIT         = LINK_INDIRECT,1692,58049
    INSTR_RETURN_EXIT 1693,58098
    INSTR_RETURN_EXIT           = LINK_RETURN,1693,58098
    INSTR_CALL_EXIT 1697,58296
    INSTR_CALL_EXIT             = LINK_CALL,1697,58296
    INSTR_JMP_EXIT 1698,58341
    INSTR_JMP_EXIT              = LINK_JMP,1698,58341
    INSTR_IND_JMP_PLT_EXIT 1699,58385
    INSTR_IND_JMP_PLT_EXIT      = (INSTR_JMP_EXIT 1699,58385
    INSTR_IND_JMP_PLT_EXIT      = (INSTR_JMP_EXIT | INSTR_CALL_EXIT)1699,58385
    INSTR_FAR_EXIT 1700,58455
    INSTR_FAR_EXIT              = LINK_FAR,1700,58455
    INSTR_BRANCH_SPECIAL_EXIT 1701,58499
    INSTR_BRANCH_SPECIAL_EXIT   = LINK_SPECIAL_EXIT,1701,58499
    INSTR_BRANCH_TARGETS_PREFIX 1703,58575
    INSTR_BRANCH_TARGETS_PREFIX = LINK_TARGET_PREFIX,1703,58575
    INSTR_TRACE_CMP_EXIT 1709,58814
    INSTR_TRACE_CMP_EXIT        = LINK_TRACE_CMP,1709,58814
    INSTR_CALLBACK_RETURN 1712,58886
    INSTR_CALLBACK_RETURN       = LINK_CALLBACK_RETURN,1712,58886
    INSTR_NI_SYSCALL_INT 1714,58948
    INSTR_NI_SYSCALL_INT        = LINK_NI_SYSCALL_INT,1714,58948
    INSTR_NI_SYSCALL 1716,59010
    INSTR_NI_SYSCALL            = LINK_NI_SYSCALL,1716,59010
    INSTR_NI_SYSCALL_ALL 1717,59061
    INSTR_NI_SYSCALL_ALL        = LINK_NI_SYSCALL_ALL,1717,59061
    EXIT_CTI_TYPES 1719,59136
    EXIT_CTI_TYPES              = (INSTR_DIRECT_EXIT 1719,59136
    EXIT_CTI_TYPES              = (INSTR_DIRECT_EXIT | INSTR_INDIRECT_EXIT 1719,59136
                                   INSTR_RETURN_EXIT 1720,59213
                                   INSTR_RETURN_EXIT | INSTR_CALL_EXIT 1720,59213
                                   INSTR_JMP_EXIT 1721,59291
                                   INSTR_FAR_EXIT 1722,59343
                                   INSTR_BRANCH_SPECIAL_EXIT 1723,59395
                                   INSTR_BRANCH_TARGETS_PREFIX 1725,59481
                                   INSTR_TRACE_CMP_EXIT 1728,59564
                                   INSTR_CALLBACK_RETURN 1731,59644
                                   INSTR_NI_SYSCALL_INT 1733,59709
                                   INSTR_NI_SYSCALL)1735,59774
    INSTR_OPERANDS_VALID 1738,59886
    INSTR_OPERANDS_VALID        = 0x00010000,x000100001738,59886
    INSTR_FIRST_NON_LINK_SHARED_FLAG 1740,59952
    INSTR_FIRST_NON_LINK_SHARED_FLAG = INSTR_OPERANDS_VALID,1740,59952
    INSTR_EFLAGS_VALID 1741,60013
    INSTR_EFLAGS_VALID          = 0x00020000,x000200001741,60013
    INSTR_EFLAGS_6_VALID 1742,60059
    INSTR_EFLAGS_6_VALID        = 0x00040000,x000400001742,60059
    INSTR_RAW_BITS_VALID 1743,60105
    INSTR_RAW_BITS_VALID        = 0x00080000,x000800001743,60105
    INSTR_RAW_BITS_ALLOCATED 1744,60151
    INSTR_RAW_BITS_ALLOCATED    = 0x00100000,x001000001744,60151
    INSTR_DO_NOT_MANGLE 1746,60223
    INSTR_DO_NOT_MANGLE         = 0x00200000,x002000001746,60223
    INSTR_HAS_CUSTOM_STUB 1748,60293
    INSTR_HAS_CUSTOM_STUB       = 0x00400000,x004000001748,60293
    INSTR_IND_CALL_DIRECT 1750,60420
    INSTR_IND_CALL_DIRECT       = 0x00800000,x008000001750,60420
    INSTR_SHARED_SYSCALL 1753,60561
    INSTR_SHARED_SYSCALL        = 0x01000000,x010000001753,60561
    INSTR_CLOBBER_RETADDR 1757,60639
    INSTR_CLOBBER_RETADDR       = 0x02000000,x020000001757,60639
    INSTR_HOT_PATCHABLE 1764,60979
    INSTR_HOT_PATCHABLE         = 0x04000000,x040000001764,60979
    INSTR_IGNORE_INVALID 1767,61111
    INSTR_IGNORE_INVALID        = 0x08000000,x080000001767,61111
    INSTR_DO_NOT_EMIT 1772,61368
    INSTR_DO_NOT_EMIT           = 0x10000000,x100000001772,61368
    INSTR_RIP_REL_VALID 1774,61491
    INSTR_RIP_REL_VALID         = 0x20000000,x200000001774,61491
    INSTR_X86_MODE 1777,61608
    INSTR_X86_MODE              = 0x40000000,x400000001777,61608
    INSTR_OUR_MANGLING 1780,61736
    INSTR_OUR_MANGLING          = 0x80000000,x800000001780,61736
typedef struct _dr_instr_label_data_t 1790,62001
    ptr_uint_t data[data1791,62041
} dr_instr_label_data_t;1792,62121
struct _instr_t 1809,62812
    uint    flags;1811,62883
    byte    *bytes;bytes1814,62973
    uint    length;1815,62993
    app_pc  translation;1818,63058
    uint    opcode;1820,63084
    byte    rip_rel_pos;1824,63203
    byte    num_dsts;1831,63443
    byte    num_srcs;1832,63465
            opnd_t    src0;1840,63771
            opnd_t    *srcs;srcs1841,63799
            opnd_t    *dsts;dsts1842,63868
        dr_instr_label_data_t label_data;1844,63908
    uint    prefixes;1847,63958
    uint    eflags;1848,64028
    void *note;note1855,64348
    instr_t   *prev;prev1858,64431
    instr_t   *next;next1859,64452
    DR_FP_STATE,3219,104292
    DR_FP_MOVE,3220,104375
    DR_FP_CONVERT,3221,104460
    DR_FP_MATH,3222,104530
} dr_fp_type_t;3223,104604
#define EFLAGS_READ_CF 3718,121667
#define EFLAGS_READ_PF 3719,121747
#define EFLAGS_READ_AF 3720,121827
#define EFLAGS_READ_ZF 3721,121907
#define EFLAGS_READ_SF 3722,121987
#define EFLAGS_READ_TF 3723,122067
#define EFLAGS_READ_IF 3724,122147
#define EFLAGS_READ_DF 3725,122227
#define EFLAGS_READ_OF 3726,122307
#define EFLAGS_READ_NT 3727,122387
#define EFLAGS_READ_RF 3728,122467
#define EFLAGS_WRITE_CF 3729,122547
#define EFLAGS_WRITE_PF 3730,122628
#define EFLAGS_WRITE_AF 3731,122709
#define EFLAGS_WRITE_ZF 3732,122790
#define EFLAGS_WRITE_SF 3733,122871
#define EFLAGS_WRITE_TF 3734,122952
#define EFLAGS_WRITE_IF 3735,123033
#define EFLAGS_WRITE_DF 3736,123114
#define EFLAGS_WRITE_OF 3737,123195
#define EFLAGS_WRITE_NT 3738,123276
#define EFLAGS_WRITE_RF 3739,123357
#define EFLAGS_READ_ALL 3741,123439
#define EFLAGS_WRITE_ALL 3742,123504
#define EFLAGS_READ_6 3745,123703
#define EFLAGS_WRITE_6 3747,123803
#define EFLAGS_WRITE_TO_READ(3750,123922
#define EFLAGS_READ_TO_WRITE(3752,124048
    EFLAGS_CF 3760,124267
    EFLAGS_CF = 0x00000001,x000000013760,124267
    EFLAGS_PF 3761,124354
    EFLAGS_PF = 0x00000004,x000000043761,124354
    EFLAGS_AF 3762,124442
    EFLAGS_AF = 0x00000010,x000000103762,124442
    EFLAGS_ZF 3763,124533
    EFLAGS_ZF = 0x00000040,x000000403763,124533
    EFLAGS_SF 3764,124619
    EFLAGS_SF = 0x00000080,x000000803764,124619
    EFLAGS_DF 3765,124705
    EFLAGS_DF = 0x00000400,x000004003765,124705
    EFLAGS_OF 3766,124796
    EFLAGS_OF = 0x00000800,x000008003766,124796
#define PC_RELATIVE_TARGET(3772,125003
    RAW_OPCODE_nop 3775,125078
    RAW_OPCODE_nop             = 0x90,x903775,125078
    RAW_OPCODE_jmp_short 3776,125117
    RAW_OPCODE_jmp_short       = 0xeb,xeb3776,125117
    RAW_OPCODE_call 3777,125156
    RAW_OPCODE_call            = 0xe8,xe83777,125156
    RAW_OPCODE_ret 3778,125195
    RAW_OPCODE_ret             = 0xc3,xc33778,125195
    RAW_OPCODE_jmp 3779,125234
    RAW_OPCODE_jmp             = 0xe9,xe93779,125234
    RAW_OPCODE_push_imm32 3780,125273
    RAW_OPCODE_push_imm32      = 0x68,x683780,125273
    RAW_OPCODE_jcc_short_start 3781,125312
    RAW_OPCODE_jcc_short_start = 0x70,x703781,125312
    RAW_OPCODE_jcc_short_end 3782,125351
    RAW_OPCODE_jcc_short_end   = 0x7f,x7f3782,125351
    RAW_OPCODE_jcc_byte1 3783,125390
    RAW_OPCODE_jcc_byte1       = 0x0f,x0f3783,125390
    RAW_OPCODE_jcc_byte2_start 3784,125429
    RAW_OPCODE_jcc_byte2_start = 0x80,x803784,125429
    RAW_OPCODE_jcc_byte2_end 3785,125468
    RAW_OPCODE_jcc_byte2_end   = 0x8f,x8f3785,125468
    RAW_OPCODE_loop_start 3786,125507
    RAW_OPCODE_loop_start      = 0xe0,xe03786,125507
    RAW_OPCODE_loop_end 3787,125546
    RAW_OPCODE_loop_end        = 0xe3,xe33787,125546
    RAW_OPCODE_lea 3788,125585
    RAW_OPCODE_lea             = 0x8d,x8d3788,125585
    RAW_PREFIX_jcc_not_taken 3789,125624
    RAW_PREFIX_jcc_not_taken   = 0x2e,x2e3789,125624
    RAW_PREFIX_jcc_taken 3790,125663
    RAW_PREFIX_jcc_taken       = 0x3e,x3e3790,125663
    RAW_PREFIX_lock 3791,125702
    RAW_PREFIX_lock            = 0xf0,xf03791,125702
    FS_SEG_OPCODE 3795,125786
    FS_SEG_OPCODE        = 0x64,x643795,125786
    GS_SEG_OPCODE 3796,125819
    GS_SEG_OPCODE        = 0x65,x653796,125819
    TLS_SEG_OPCODE 3804,126139
    TLS_SEG_OPCODE       = GS_SEG_OPCODE,3804,126139
    TLS_SEG_OPCODE 3806,126187
    TLS_SEG_OPCODE       = FS_SEG_OPCODE,3806,126187
    DATA_PREFIX_OPCODE 3809,126237
    DATA_PREFIX_OPCODE   = 0x66,x663809,126237
    ADDR_PREFIX_OPCODE 3810,126270
    ADDR_PREFIX_OPCODE   = 0x67,x673810,126270
    REPNE_PREFIX_OPCODE 3811,126303
    REPNE_PREFIX_OPCODE  = 0xf2,xf23811,126303
    REP_PREFIX_OPCODE 3812,126336
    REP_PREFIX_OPCODE    = 0xf3,xf33812,126336
    REX_PREFIX_BASE_OPCODE 3813,126369
    REX_PREFIX_BASE_OPCODE = 0x40,x403813,126369
    REX_PREFIX_W_OPFLAG 3814,126404
    REX_PREFIX_W_OPFLAG    = 0x8,x83814,126404
    REX_PREFIX_R_OPFLAG 3815,126438
    REX_PREFIX_R_OPFLAG    = 0x4,x43815,126438
    REX_PREFIX_X_OPFLAG 3816,126472
    REX_PREFIX_X_OPFLAG    = 0x2,x23816,126472
    REX_PREFIX_B_OPFLAG 3817,126506
    REX_PREFIX_B_OPFLAG    = 0x1,x13817,126506
    REX_PREFIX_ALL_OPFLAGS 3818,126540
    REX_PREFIX_ALL_OPFLAGS = 0xf,xf3818,126540
    MOV_REG2MEM_OPCODE 3819,126574
    MOV_REG2MEM_OPCODE   = 0x89,x893819,126574
    MOV_MEM2REG_OPCODE 3820,126607
    MOV_MEM2REG_OPCODE   = 0x8b,x8b3820,126607
    MOV_XAX2MEM_OPCODE 3821,126640
    MOV_XAX2MEM_OPCODE   = 0xa3,xa33821,126640
    MOV_MEM2XAX_OPCODE 3822,126688
    MOV_MEM2XAX_OPCODE   = 0xa1,xa13822,126688
    MOV_IMM2XAX_OPCODE 3823,126736
    MOV_IMM2XAX_OPCODE   = 0xb8,xb83823,126736
    MOV_IMM2XBX_OPCODE 3824,126784
    MOV_IMM2XBX_OPCODE   = 0xbb,xbb3824,126784
    MOV_IMM2MEM_OPCODE 3825,126832
    MOV_IMM2MEM_OPCODE   = 0xc7,xc73825,126832
    JECXZ_OPCODE 3826,126881
    JECXZ_OPCODE         = 0xe3,xe33826,126881
    JMP_SHORT_OPCODE 3827,126914
    JMP_SHORT_OPCODE     = 0xeb,xeb3827,126914
    JMP_OPCODE 3828,126947
    JMP_OPCODE           = 0xe9,xe93828,126947
    JNE_OPCODE_1 3829,126980
    JNE_OPCODE_1         = 0x0f,x0f3829,126980
    SAHF_OPCODE 3830,127013
    SAHF_OPCODE          = 0x9e,x9e3830,127013
    LAHF_OPCODE 3831,127046
    LAHF_OPCODE          = 0x9f,x9f3831,127046
    SETO_OPCODE_1 3832,127079
    SETO_OPCODE_1        = 0x0f,x0f3832,127079
    SETO_OPCODE_2 3833,127112
    SETO_OPCODE_2        = 0x90,x903833,127112
    ADD_AL_OPCODE 3834,127145
    ADD_AL_OPCODE        = 0x04,x043834,127145
    INC_MEM32_OPCODE_1 3835,127178
    INC_MEM32_OPCODE_1   = 0xff,xff3835,127178
    MODRM16_DISP16 3836,127232
    MODRM16_DISP16       = 0x06,x063836,127232
    SIB_DISP32 3837,127302
    SIB_DISP32           = 0x25,x253837,127302
#define CTI_SHORT_REWRITE_LENGTH 3841,127456
    NUM_REGPARM 3848,127625
    REGPARM_0 3849,127655
    REGPARM_0            = REG_RDI,3849,127655
    REGPARM_1 3850,127691
    REGPARM_1            = REG_RSI,3850,127691
    REGPARM_2 3851,127727
    REGPARM_2            = REG_RDX,3851,127727
    REGPARM_3 3852,127763
    REGPARM_3            = REG_RCX,3852,127763
    REGPARM_4 3853,127799
    REGPARM_4            = REG_R8,3853,127799
    REGPARM_5 3854,127834
    REGPARM_5            = REG_R9,3854,127834
    REGPARM_MINSTACK 3855,127869
    REDZONE_SIZE 3856,127899
    NUM_REGPARM 3859,127983
    REGPARM_0 3860,128013
    REGPARM_0            = REG_RCX,3860,128013
    REGPARM_1 3861,128049
    REGPARM_1            = REG_RDX,3861,128049
    REGPARM_2 3862,128085
    REGPARM_2            = REG_R8,3862,128085
    REGPARM_3 3863,128120
    REGPARM_3            = REG_R9,3863,128120
    REGPARM_MINSTACK 3864,128155
    REGPARM_MINSTACK     = 4*sizeof(sizeof3864,128155
    REGPARM_MINSTACK     = 4*sizeof(XSP_SZ)3864,128155
    REDZONE_SIZE 3865,128200
    REGPARM_END_ALIGN 3872,128506
    NUM_REGPARM 3874,128543
    REGPARM_MINSTACK 3875,128573
    REDZONE_SIZE 3876,128603
    REGPARM_END_ALIGN 3877,128633
    REGPARM_END_ALIGN    = sizeof(3877,128633
    REGPARM_END_ALIGN    = sizeof(XSP_SZ)3877,128633
/*   0 */     OP_INVALID,3910,129682
/*   1 */     OP_UNDECODED,3911,129744
/*   2 */     OP_CONTD,3912,129810
/*   3 */     OP_LABEL,3913,129870
/*   4 */     OP_add,3915,129931
/*   5 */     OP_or,3916,130002
/*   6 */     OP_adc,3917,130072
/*   7 */     OP_sbb,3918,130143
/*   8 */     OP_and,3919,130214
/*   9 */     OP_daa,3920,130285
/*  10 */     OP_sub,3921,130356
/*  11 */     OP_das,3922,130427
/*  12 */     OP_xor,3923,130498
/*  13 */     OP_aaa,3924,130569
/*  14 */     OP_cmp,3925,130640
/*  15 */     OP_aas,3926,130711
/*  16 */     OP_inc,3927,130782
/*  17 */     OP_dec,3928,130857
/*  18 */     OP_push,3929,130932
/*  19 */     OP_push_imm,3930,131004
/*  20 */     OP_pop,3931,131080
/*  21 */     OP_pusha,3932,131151
/*  22 */     OP_popa,3933,131224
/*  23 */     OP_bound,3934,131296
/*  24 */     OP_arpl,3935,131369
/*  25 */     OP_imul,3936,131446
/*  26 */     OP_jo_short,3938,131520
/*  27 */     OP_jno_short,3939,131600
/*  28 */     OP_jb_short,3940,131681
/*  29 */     OP_jnb_short,3941,131761
/*  30 */     OP_jz_short,3942,131842
/*  31 */     OP_jnz_short,3943,131922
/*  32 */     OP_jbe_short,3944,132003
/*  33 */     OP_jnbe_short,3945,132084
/*  34 */     OP_js_short,3946,132166
/*  35 */     OP_jns_short,3947,132246
/*  36 */     OP_jp_short,3948,132327
/*  37 */     OP_jnp_short,3949,132407
/*  38 */     OP_jl_short,3950,132488
/*  39 */     OP_jnl_short,3951,132568
/*  40 */     OP_jle_short,3952,132649
/*  41 */     OP_jnle_short,3953,132730
/*  42 */     OP_call,3955,132813
/*  43 */     OP_call_ind,3956,132891
/*  44 */     OP_call_far,3957,132974
/*  45 */     OP_call_far_ind,3958,133056
/*  46 */     OP_jmp,3959,133143
/*  47 */     OP_jmp_short,3960,133220
/*  48 */     OP_jmp_ind,3961,133303
/*  49 */     OP_jmp_far,3962,133385
/*  50 */     OP_jmp_far_ind,3963,133466
/*  51 */     OP_loopne,3965,133553
/*  52 */     OP_loope,3966,133627
/*  53 */     OP_loop,3967,133700
/*  54 */     OP_jecxz,3968,133772
/*  55 */     OP_mov_ld,3972,133984
/*  56 */     OP_mov_st,3973,134061
/*  57 */     OP_mov_imm,3976,134297
/*  58 */     OP_mov_seg,3977,134375
/*  59 */     OP_mov_priv,3978,134453
/*  60 */     OP_test,3980,134534
/*  61 */     OP_lea,3981,134606
/*  62 */     OP_xchg,3982,134677
/*  63 */     OP_cwde,3983,134749
/*  64 */     OP_cdq,3984,134821
/*  65 */     OP_fwait,3985,134892
/*  66 */     OP_pushf,3986,134965
/*  67 */     OP_popf,3987,135038
/*  68 */     OP_sahf,3988,135110
/*  69 */     OP_lahf,3989,135182
/*  70 */     OP_ret,3991,135255
/*  71 */     OP_ret_far,3992,135327
/*  72 */     OP_les,3994,135404
/*  73 */     OP_lds,3995,135486
/*  74 */     OP_enter,3996,135568
/*  75 */     OP_leave,3997,135641
/*  76 */     OP_int3,3998,135714
/*  77 */     OP_int,3999,135786
/*  78 */     OP_into,4000,135857
/*  79 */     OP_iret,4001,135929
/*  80 */     OP_aam,4002,136001
/*  81 */     OP_aad,4003,136072
/*  82 */     OP_xlat,4004,136143
/*  83 */     OP_in,4005,136215
/*  84 */     OP_out,4006,136285
/*  85 */     OP_hlt,4007,136356
/*  86 */     OP_cmc,4008,136427
/*  87 */     OP_clc,4009,136498
/*  88 */     OP_stc,4010,136569
/*  89 */     OP_cli,4011,136640
/*  90 */     OP_sti,4012,136711
/*  91 */     OP_cld,4013,136782
/*  92 */     OP_std,4014,136853
/*  93 */     OP_lar,4017,136926
/*  94 */     OP_lsl,4018,137002
/*  95 */     OP_syscall,4019,137078
/*  96 */     OP_clts,4020,137158
/*  97 */     OP_sysret,4021,137235
/*  98 */     OP_invd,4022,137314
/*  99 */     OP_wbinvd,4023,137391
/* 100 */     OP_ud2a,4024,137470
/* 101 */     OP_nop_modrm,4025,137547
/* 102 */     OP_movntps,4026,137629
/* 103 */     OP_movntpd,4027,137716
/* 104 */     OP_wrmsr,4028,137803
/* 105 */     OP_rdtsc,4029,137881
/* 106 */     OP_rdmsr,4030,137959
/* 107 */     OP_rdpmc,4031,138037
/* 108 */     OP_sysenter,4032,138115
/* 109 */     OP_sysexit,4033,138196
/* 110 */     OP_cmovo,4035,138277
/* 111 */     OP_cmovno,4036,138355
/* 112 */     OP_cmovb,4037,138434
/* 113 */     OP_cmovnb,4038,138512
/* 114 */     OP_cmovz,4039,138591
/* 115 */     OP_cmovnz,4040,138669
/* 116 */     OP_cmovbe,4041,138748
/* 117 */     OP_cmovnbe,4042,138827
/* 118 */     OP_cmovs,4043,138907
/* 119 */     OP_cmovns,4044,138985
/* 120 */     OP_cmovp,4045,139064
/* 121 */     OP_cmovnp,4046,139142
/* 122 */     OP_cmovl,4047,139221
/* 123 */     OP_cmovnl,4048,139299
/* 124 */     OP_cmovle,4049,139378
/* 125 */     OP_cmovnle,4050,139457
/* 126 */     OP_punpcklbw,4052,139538
/* 127 */     OP_punpcklwd,4053,139627
/* 128 */     OP_punpckldq,4054,139716
/* 129 */     OP_packsswb,4055,139805
/* 130 */     OP_pcmpgtb,4056,139893
/* 131 */     OP_pcmpgtw,4057,139980
/* 132 */     OP_pcmpgtd,4058,140067
/* 133 */     OP_packuswb,4059,140154
/* 134 */     OP_punpckhbw,4060,140242
/* 135 */     OP_punpckhwd,4061,140331
/* 136 */     OP_punpckhdq,4062,140420
/* 137 */     OP_packssdw,4063,140509
/* 138 */     OP_punpcklqdq,4064,140597
/* 139 */     OP_punpckhqdq,4065,140687
/* 140 */     OP_movd,4066,140777
/* 141 */     OP_movq,4067,140861
/* 142 */     OP_movdqu,4068,140946
/* 143 */     OP_movdqa,4069,141034
/* 144 */     OP_pshufw,4070,141121
/* 145 */     OP_pshufd,4071,141207
/* 146 */     OP_pshufhw,4072,141293
/* 147 */     OP_pshuflw,4073,141380
/* 148 */     OP_pcmpeqb,4074,141467
/* 149 */     OP_pcmpeqw,4075,141554
/* 150 */     OP_pcmpeqd,4076,141641
/* 151 */     OP_emms,4077,141728
/* 152 */     OP_jo,4079,141811
/* 153 */     OP_jno,4080,141882
/* 154 */     OP_jb,4081,141954
/* 155 */     OP_jnb,4082,142025
/* 156 */     OP_jz,4083,142097
/* 157 */     OP_jnz,4084,142168
/* 158 */     OP_jbe,4085,142240
/* 159 */     OP_jnbe,4086,142312
/* 160 */     OP_js,4087,142385
/* 161 */     OP_jns,4088,142456
/* 162 */     OP_jp,4089,142528
/* 163 */     OP_jnp,4090,142599
/* 164 */     OP_jl,4091,142671
/* 165 */     OP_jnl,4092,142742
/* 166 */     OP_jle,4093,142814
/* 167 */     OP_jnle,4094,142886
/* 168 */     OP_seto,4096,142960
/* 169 */     OP_setno,4097,143037
/* 170 */     OP_setb,4098,143115
/* 171 */     OP_setnb,4099,143192
/* 172 */     OP_setz,4100,143270
/* 173 */     OP_setnz,4101,143347
/* 174 */     OP_setbe,4102,143425
/* 175 */     OP_setnbe,4103,143503
/* 176 */     OP_sets,4104,143584
/* 177 */     OP_setns,4105,143661
/* 178 */     OP_setp,4106,143739
/* 179 */     OP_setnp,4107,143816
/* 180 */     OP_setl,4108,143894
/* 181 */     OP_setnl,4109,143971
/* 182 */     OP_setle,4110,144049
/* 183 */     OP_setnle,4111,144127
/* 184 */     OP_cpuid,4113,144209
/* 185 */     OP_bt,4114,144287
/* 186 */     OP_shld,4115,144362
/* 187 */     OP_rsm,4116,144439
/* 188 */     OP_bts,4117,144515
/* 189 */     OP_shrd,4118,144591
/* 190 */     OP_cmpxchg,4119,144668
/* 191 */     OP_lss,4120,144748
/* 192 */     OP_btr,4121,144824
/* 193 */     OP_lfs,4122,144900
/* 194 */     OP_lgs,4123,144976
/* 195 */     OP_movzx,4124,145052
/* 196 */     OP_ud2b,4125,145130
/* 197 */     OP_btc,4126,145207
/* 198 */     OP_bsf,4127,145283
/* 199 */     OP_bsr,4128,145359
/* 200 */     OP_movsx,4129,145443
/* 201 */     OP_xadd,4130,145521
/* 202 */     OP_movnti,4131,145598
/* 203 */     OP_pinsrw,4132,145677
/* 204 */     OP_pextrw,4133,145763
/* 205 */     OP_bswap,4134,145849
/* 206 */     OP_psrlw,4135,145927
/* 207 */     OP_psrld,4136,146012
/* 208 */     OP_psrlq,4137,146097
/* 209 */     OP_paddq,4138,146182
/* 210 */     OP_pmullw,4139,146267
/* 211 */     OP_pmovmskb,4140,146353
/* 212 */     OP_psubusb,4141,146441
/* 213 */     OP_psubusw,4142,146528
/* 214 */     OP_pminub,4143,146615
/* 215 */     OP_pand,4144,146701
/* 216 */     OP_paddusb,4145,146785
/* 217 */     OP_paddusw,4146,146872
/* 218 */     OP_pmaxub,4147,146959
/* 219 */     OP_pandn,4148,147045
/* 220 */     OP_pavgb,4149,147130
/* 221 */     OP_psraw,4150,147215
/* 222 */     OP_psrad,4151,147300
/* 223 */     OP_pavgw,4152,147385
/* 224 */     OP_pmulhuw,4153,147470
/* 225 */     OP_pmulhw,4154,147557
/* 226 */     OP_movntq,4155,147643
/* 227 */     OP_movntdq,4156,147729
/* 228 */     OP_psubsb,4157,147816
/* 229 */     OP_psubsw,4158,147902
/* 230 */     OP_pminsw,4159,147988
/* 231 */     OP_por,4160,148074
/* 232 */     OP_paddsb,4161,148157
/* 233 */     OP_paddsw,4162,148243
/* 234 */     OP_pmaxsw,4163,148329
/* 235 */     OP_pxor,4164,148415
/* 236 */     OP_psllw,4165,148499
/* 237 */     OP_pslld,4166,148584
/* 238 */     OP_psllq,4167,148669
/* 239 */     OP_pmuludq,4168,148754
/* 240 */     OP_pmaddwd,4169,148841
/* 241 */     OP_psadbw,4170,148928
/* 242 */     OP_maskmovq,4171,149014
/* 243 */     OP_maskmovdqu,4172,149102
/* 244 */     OP_psubb,4173,149192
/* 245 */     OP_psubw,4174,149277
/* 246 */     OP_psubd,4175,149362
/* 247 */     OP_psubq,4176,149447
/* 248 */     OP_paddb,4177,149532
/* 249 */     OP_paddw,4178,149617
/* 250 */     OP_paddd,4179,149702
/* 251 */     OP_psrldq,4180,149788
/* 252 */     OP_pslldq,4181,149875
/* 253 */     OP_rol,4184,149964
/* 254 */     OP_ror,4185,150041
/* 255 */     OP_rcl,4186,150118
/* 256 */     OP_rcr,4187,150195
/* 257 */     OP_shl,4188,150272
/* 258 */     OP_shr,4189,150349
/* 259 */     OP_sar,4190,150426
/* 260 */     OP_not,4191,150503
/* 261 */     OP_neg,4192,150580
/* 262 */     OP_mul,4193,150657
/* 263 */     OP_div,4194,150734
/* 264 */     OP_idiv,4195,150811
/* 265 */     OP_sldt,4196,150889
/* 266 */     OP_str,4197,150967
/* 267 */     OP_lldt,4198,151044
/* 268 */     OP_ltr,4199,151122
/* 269 */     OP_verr,4200,151199
/* 270 */     OP_verw,4201,151277
/* 271 */     OP_sgdt,4202,151355
/* 272 */     OP_sidt,4203,151436
/* 273 */     OP_lgdt,4204,151517
/* 274 */     OP_lidt,4205,151598
/* 275 */     OP_smsw,4206,151679
/* 276 */     OP_lmsw,4207,151757
/* 277 */     OP_invlpg,4208,151835
/* 278 */     OP_cmpxchg8b,4209,151918
/* 279 */     OP_fxsave32,4210,152001
/* 280 */     OP_fxrstor32,4211,152086
/* 281 */     OP_ldmxcsr,4212,152172
/* 282 */     OP_stmxcsr,4213,152257
/* 283 */     OP_lfence,4214,152342
/* 284 */     OP_mfence,4215,152425
/* 285 */     OP_clflush,4216,152508
/* 286 */     OP_sfence,4217,152592
/* 287 */     OP_prefetchnta,4218,152675
/* 288 */     OP_prefetcht0,4219,152760
/* 289 */     OP_prefetcht1,4220,152844
/* 290 */     OP_prefetcht2,4221,152928
/* 291 */     OP_prefetch,4222,153012
/* 292 */     OP_prefetchw,4223,153094
/* 293 */     OP_movups,4226,153179
/* 294 */     OP_movss,4227,153264
/* 295 */     OP_movupd,4228,153348
/* 296 */     OP_movsd,4229,153433
/* 297 */     OP_movlps,4230,153517
/* 298 */     OP_movlpd,4231,153602
/* 299 */     OP_unpcklps,4232,153687
/* 300 */     OP_unpcklpd,4233,153774
/* 301 */     OP_unpckhps,4234,153861
/* 302 */     OP_unpckhpd,4235,153948
/* 303 */     OP_movhps,4236,154035
/* 304 */     OP_movhpd,4237,154120
/* 305 */     OP_movaps,4238,154205
/* 306 */     OP_movapd,4239,154290
/* 307 */     OP_cvtpi2ps,4240,154375
/* 308 */     OP_cvtsi2ss,4241,154462
/* 309 */     OP_cvtpi2pd,4242,154549
/* 310 */     OP_cvtsi2sd,4243,154636
/* 311 */     OP_cvttps2pi,4244,154723
/* 312 */     OP_cvttss2si,4245,154811
/* 313 */     OP_cvttpd2pi,4246,154899
/* 314 */     OP_cvttsd2si,4247,154987
/* 315 */     OP_cvtps2pi,4248,155075
/* 316 */     OP_cvtss2si,4249,155162
/* 317 */     OP_cvtpd2pi,4250,155249
/* 318 */     OP_cvtsd2si,4251,155336
/* 319 */     OP_ucomiss,4252,155423
/* 320 */     OP_ucomisd,4253,155509
/* 321 */     OP_comiss,4254,155595
/* 322 */     OP_comisd,4255,155680
/* 323 */     OP_movmskps,4256,155765
/* 324 */     OP_movmskpd,4257,155852
/* 325 */     OP_sqrtps,4258,155939
/* 326 */     OP_sqrtss,4259,156024
/* 327 */     OP_sqrtpd,4260,156109
/* 328 */     OP_sqrtsd,4261,156194
/* 329 */     OP_rsqrtps,4262,156279
/* 330 */     OP_rsqrtss,4263,156365
/* 331 */     OP_rcpps,4264,156451
/* 332 */     OP_rcpss,4265,156535
/* 333 */     OP_andps,4266,156619
/* 334 */     OP_andpd,4267,156703
/* 335 */     OP_andnps,4268,156787
/* 336 */     OP_andnpd,4269,156872
/* 337 */     OP_orps,4270,156957
/* 338 */     OP_orpd,4271,157040
/* 339 */     OP_xorps,4272,157123
/* 340 */     OP_xorpd,4273,157207
/* 341 */     OP_addps,4274,157291
/* 342 */     OP_addss,4275,157375
/* 343 */     OP_addpd,4276,157459
/* 344 */     OP_addsd,4277,157543
/* 345 */     OP_mulps,4278,157627
/* 346 */     OP_mulss,4279,157711
/* 347 */     OP_mulpd,4280,157795
/* 348 */     OP_mulsd,4281,157879
/* 349 */     OP_cvtps2pd,4282,157963
/* 350 */     OP_cvtss2sd,4283,158050
/* 351 */     OP_cvtpd2ps,4284,158137
/* 352 */     OP_cvtsd2ss,4285,158224
/* 353 */     OP_cvtdq2ps,4286,158311
/* 354 */     OP_cvttps2dq,4287,158398
/* 355 */     OP_cvtps2dq,4288,158486
/* 356 */     OP_subps,4289,158573
/* 357 */     OP_subss,4290,158657
/* 358 */     OP_subpd,4291,158741
/* 359 */     OP_subsd,4292,158825
/* 360 */     OP_minps,4293,158909
/* 361 */     OP_minss,4294,158993
/* 362 */     OP_minpd,4295,159077
/* 363 */     OP_minsd,4296,159161
/* 364 */     OP_divps,4297,159245
/* 365 */     OP_divss,4298,159329
/* 366 */     OP_divpd,4299,159413
/* 367 */     OP_divsd,4300,159497
/* 368 */     OP_maxps,4301,159581
/* 369 */     OP_maxss,4302,159665
/* 370 */     OP_maxpd,4303,159749
/* 371 */     OP_maxsd,4304,159833
/* 372 */     OP_cmpps,4305,159917
/* 373 */     OP_cmpss,4306,160001
/* 374 */     OP_cmppd,4307,160085
/* 375 */     OP_cmpsd,4308,160169
/* 376 */     OP_shufps,4309,160253
/* 377 */     OP_shufpd,4310,160338
/* 378 */     OP_cvtdq2pd,4311,160423
/* 379 */     OP_cvttpd2dq,4312,160510
/* 380 */     OP_cvtpd2dq,4313,160598
/* 381 */     OP_nop,4314,160685
/* 382 */     OP_pause,4315,160765
/* 383 */     OP_ins,4317,160851
/* 384 */     OP_rep_ins,4318,160930
/* 385 */     OP_outs,4319,161013
/* 386 */     OP_rep_outs,4320,161093
/* 387 */     OP_movs,4321,161177
/* 388 */     OP_rep_movs,4322,161257
/* 389 */     OP_stos,4323,161341
/* 390 */     OP_rep_stos,4324,161421
/* 391 */     OP_lods,4325,161505
/* 392 */     OP_rep_lods,4326,161585
/* 393 */     OP_cmps,4327,161669
/* 394 */     OP_rep_cmps,4328,161751
/* 395 */     OP_repne_cmps,4329,161837
/* 396 */     OP_scas,4330,161925
/* 397 */     OP_rep_scas,4331,162007
/* 398 */     OP_repne_scas,4332,162093
/* 399 */     OP_fadd,4335,162183
/* 400 */     OP_fmul,4336,162261
/* 401 */     OP_fcom,4337,162339
/* 402 */     OP_fcomp,4338,162417
/* 403 */     OP_fsub,4339,162496
/* 404 */     OP_fsubr,4340,162574
/* 405 */     OP_fdiv,4341,162653
/* 406 */     OP_fdivr,4342,162731
/* 407 */     OP_fld,4343,162810
/* 408 */     OP_fst,4344,162887
/* 409 */     OP_fstp,4345,162964
/* 410 */     OP_fldenv,4346,163042
/* 411 */     OP_fldcw,4347,163122
/* 412 */     OP_fnstenv,4348,163201
/* 413 */     OP_fnstcw,4349,163282
/* 414 */     OP_fiadd,4350,163362
/* 415 */     OP_fimul,4351,163441
/* 416 */     OP_ficom,4352,163520
/* 417 */     OP_ficomp,4353,163599
/* 418 */     OP_fisub,4354,163679
/* 419 */     OP_fisubr,4355,163758
/* 420 */     OP_fidiv,4356,163838
/* 421 */     OP_fidivr,4357,163917
/* 422 */     OP_fild,4358,163997
/* 423 */     OP_fist,4359,164075
/* 424 */     OP_fistp,4360,164153
/* 425 */     OP_frstor,4361,164232
/* 426 */     OP_fnsave,4362,164312
/* 427 */     OP_fnstsw,4363,164392
/* 428 */     OP_fbld,4365,164473
/* 429 */     OP_fbstp,4366,164551
/* 430 */     OP_fxch,4369,164632
/* 431 */     OP_fnop,4370,164715
/* 432 */     OP_fchs,4371,164798
/* 433 */     OP_fabs,4372,164881
/* 434 */     OP_ftst,4373,164964
/* 435 */     OP_fxam,4374,165047
/* 436 */     OP_fld1,4375,165130
/* 437 */     OP_fldl2t,4376,165213
/* 438 */     OP_fldl2e,4377,165298
/* 439 */     OP_fldpi,4378,165383
/* 440 */     OP_fldlg2,4379,165467
/* 441 */     OP_fldln2,4380,165552
/* 442 */     OP_fldz,4381,165637
/* 443 */     OP_f2xm1,4382,165720
/* 444 */     OP_fyl2x,4383,165804
/* 445 */     OP_fptan,4384,165888
/* 446 */     OP_fpatan,4385,165972
/* 447 */     OP_fxtract,4386,166057
/* 448 */     OP_fprem1,4387,166143
/* 449 */     OP_fdecstp,4388,166228
/* 450 */     OP_fincstp,4389,166314
/* 451 */     OP_fprem,4390,166400
/* 452 */     OP_fyl2xp1,4391,166484
/* 453 */     OP_fsqrt,4392,166570
/* 454 */     OP_fsincos,4393,166654
/* 455 */     OP_frndint,4394,166740
/* 456 */     OP_fscale,4395,166826
/* 457 */     OP_fsin,4396,166911
/* 458 */     OP_fcos,4397,166994
/* 459 */     OP_fcmovb,4398,167077
/* 460 */     OP_fcmove,4399,167162
/* 461 */     OP_fcmovbe,4400,167247
/* 462 */     OP_fcmovu,4401,167333
/* 463 */     OP_fucompp,4402,167418
/* 464 */     OP_fcmovnb,4403,167504
/* 465 */     OP_fcmovne,4404,167590
/* 466 */     OP_fcmovnbe,4405,167676
/* 467 */     OP_fcmovnu,4406,167763
/* 468 */     OP_fnclex,4407,167849
/* 469 */     OP_fninit,4408,167934
/* 470 */     OP_fucomi,4409,168019
/* 471 */     OP_fcomi,4410,168104
/* 472 */     OP_ffree,4411,168188
/* 473 */     OP_fucom,4412,168272
/* 474 */     OP_fucomp,4413,168356
/* 475 */     OP_faddp,4414,168441
/* 476 */     OP_fmulp,4415,168525
/* 477 */     OP_fcompp,4416,168609
/* 478 */     OP_fsubrp,4417,168694
/* 479 */     OP_fsubp,4418,168779
/* 480 */     OP_fdivrp,4419,168863
/* 481 */     OP_fdivp,4420,168948
/* 482 */     OP_fucomip,4421,169032
/* 483 */     OP_fcomip,4422,169118
/* 484 */     OP_fisttp,4425,169232
/* 485 */     OP_haddpd,4426,169315
/* 486 */     OP_haddps,4427,169402
/* 487 */     OP_hsubpd,4428,169489
/* 488 */     OP_hsubps,4429,169576
/* 489 */     OP_addsubpd,4430,169663
/* 490 */     OP_addsubps,4431,169752
/* 491 */     OP_lddqu,4432,169841
/* 492 */     OP_monitor,4433,169927
/* 493 */     OP_mwait,4434,170009
/* 494 */     OP_movsldup,4435,170089
/* 495 */     OP_movshdup,4436,170177
/* 496 */     OP_movddup,4437,170265
/* 497 */     OP_femms,4440,170384
/* 498 */     OP_unknown_3dnow,4441,170464
/* 499 */     OP_pavgusb,4442,170555
/* 500 */     OP_pfadd,4443,170640
/* 501 */     OP_pfacc,4444,170723
/* 502 */     OP_pfcmpge,4445,170806
/* 503 */     OP_pfcmpgt,4446,170891
/* 504 */     OP_pfcmpeq,4447,170976
/* 505 */     OP_pfmin,4448,171061
/* 506 */     OP_pfmax,4449,171144
/* 507 */     OP_pfmul,4450,171227
/* 508 */     OP_pfrcp,4451,171310
/* 509 */     OP_pfrcpit1,4452,171394
/* 510 */     OP_pfrcpit2,4453,171481
/* 511 */     OP_pfrsqrt,4454,171568
/* 512 */     OP_pfrsqit1,4455,171654
/* 513 */     OP_pmulhrw,4456,171741
/* 514 */     OP_pfsub,4457,171827
/* 515 */     OP_pfsubr,4458,171911
/* 516 */     OP_pi2fd,4459,171996
/* 517 */     OP_pf2id,4460,172080
/* 518 */     OP_pi2fw,4461,172164
/* 519 */     OP_pf2iw,4462,172248
/* 520 */     OP_pfnacc,4463,172332
/* 521 */     OP_pfpnacc,4464,172417
/* 522 */     OP_pswapd,4465,172503
/* 523 */     OP_pshufb,4468,172605
/* 524 */     OP_phaddw,4469,172694
/* 525 */     OP_phaddd,4470,172783
/* 526 */     OP_phaddsw,4471,172872
/* 527 */     OP_pmaddubsw,4472,172962
/* 528 */     OP_phsubw,4473,173054
/* 529 */     OP_phsubd,4474,173143
/* 530 */     OP_phsubsw,4475,173232
/* 531 */     OP_psignb,4476,173322
/* 532 */     OP_psignw,4477,173411
/* 533 */     OP_psignd,4478,173500
/* 534 */     OP_pmulhrsw,4479,173589
/* 535 */     OP_pabsb,4480,173680
/* 536 */     OP_pabsw,4481,173768
/* 537 */     OP_pabsd,4482,173856
/* 538 */     OP_palignr,4483,173944
/* 539 */     OP_popcnt,4486,174115
/* 540 */     OP_movntss,4487,174204
/* 541 */     OP_movntsd,4488,174293
/* 542 */     OP_extrq,4489,174382
/* 543 */     OP_insertq,4490,174470
/* 544 */     OP_lzcnt,4491,174560
/* 545 */     OP_pblendvb,4492,174648
/* 546 */     OP_blendvps,4493,174731
/* 547 */     OP_blendvpd,4494,174814
/* 548 */     OP_ptest,4495,174897
/* 549 */     OP_pmovsxbw,4496,174980
/* 550 */     OP_pmovsxbd,4497,175066
/* 551 */     OP_pmovsxbq,4498,175152
/* 552 */     OP_pmovsxdw,4499,175238
/* 553 */     OP_pmovsxwq,4500,175324
/* 554 */     OP_pmovsxdq,4501,175410
/* 555 */     OP_pmuldq,4502,175496
/* 556 */     OP_pcmpeqq,4503,175581
/* 557 */     OP_movntdqa,4504,175667
/* 558 */     OP_packusdw,4505,175754
/* 559 */     OP_pmovzxbw,4506,175841
/* 560 */     OP_pmovzxbd,4507,175928
/* 561 */     OP_pmovzxbq,4508,176015
/* 562 */     OP_pmovzxdw,4509,176102
/* 563 */     OP_pmovzxwq,4510,176189
/* 564 */     OP_pmovzxdq,4511,176276
/* 565 */     OP_pcmpgtq,4512,176363
/* 566 */     OP_pminsb,4513,176449
/* 567 */     OP_pminsd,4514,176534
/* 568 */     OP_pminuw,4515,176619
/* 569 */     OP_pminud,4516,176704
/* 570 */     OP_pmaxsb,4517,176789
/* 571 */     OP_pmaxsd,4518,176874
/* 572 */     OP_pmaxuw,4519,176959
/* 573 */     OP_pmaxud,4520,177044
/* 574 */     OP_pmulld,4521,177129
/* 575 */     OP_phminposuw,4522,177214
/* 576 */     OP_crc32,4523,177303
/* 577 */     OP_pextrb,4524,177391
/* 578 */     OP_pextrd,4525,177476
/* 579 */     OP_extractps,4526,177561
/* 580 */     OP_roundps,4527,177649
/* 581 */     OP_roundpd,4528,177735
/* 582 */     OP_roundss,4529,177821
/* 583 */     OP_roundsd,4530,177907
/* 584 */     OP_blendps,4531,177993
/* 585 */     OP_blendpd,4532,178079
/* 586 */     OP_pblendw,4533,178165
/* 587 */     OP_pinsrb,4534,178251
/* 588 */     OP_insertps,4535,178336
/* 589 */     OP_pinsrd,4536,178423
/* 590 */     OP_dpps,4537,178508
/* 591 */     OP_dppd,4538,178591
/* 592 */     OP_mpsadbw,4539,178674
/* 593 */     OP_pcmpestrm,4540,178760
/* 594 */     OP_pcmpestri,4541,178848
/* 595 */     OP_pcmpistrm,4542,178936
/* 596 */     OP_pcmpistri,4543,179024
/* 597 */     OP_movsxd,4546,179127
/* 598 */     OP_swapgs,4547,179212
/* 599 */     OP_vmcall,4550,179310
/* 600 */     OP_vmlaunch,4551,179393
/* 601 */     OP_vmresume,4552,179478
/* 602 */     OP_vmxoff,4553,179563
/* 603 */     OP_vmptrst,4554,179646
/* 604 */     OP_vmptrld,4555,179728
/* 605 */     OP_vmxon,4556,179818
/* 606 */     OP_vmclear,4557,179906
/* 607 */     OP_vmread,4558,179996
/* 608 */     OP_vmwrite,4559,180085
/* 609 */     OP_int1,4562,180199
/* 610 */     OP_salc,4563,180277
/* 611 */     OP_ffreep,4564,180355
/* 612 */     OP_vmrun,4567,180463
/* 613 */     OP_vmmcall,4568,180545
/* 614 */     OP_vmload,4569,180629
/* 615 */     OP_vmsave,4570,180712
/* 616 */     OP_stgi,4571,180795
/* 617 */     OP_clgi,4572,180876
/* 618 */     OP_skinit,4573,180957
/* 619 */     OP_invlpga,4574,181040
/* 620 */     OP_rdtscp,4576,181161
/* 621 */     OP_invept,4579,181275
/* 622 */     OP_invvpid,4580,181356
/* 623 */     OP_pclmulqdq,4583,181473
/* 624 */     OP_aesimc,4584,181561
/* 625 */     OP_aesenc,4585,181646
/* 626 */     OP_aesenclast,4586,181731
/* 627 */     OP_aesdec,4587,181820
/* 628 */     OP_aesdeclast,4588,181905
/* 629 */     OP_aeskeygenassist,4589,181994
/* 630 */     OP_movbe,4592,182120
/* 631 */     OP_xgetbv,4595,182247
/* 632 */     OP_xsetbv,4596,182330
/* 633 */     OP_xsave32,4597,182413
/* 634 */     OP_xrstor32,4598,182498
/* 635 */     OP_xsaveopt32,4599,182584
/* 636 */     OP_vmovss,4602,182687
/* 637 */     OP_vmovsd,4603,182772
/* 638 */     OP_vmovups,4604,182857
/* 639 */     OP_vmovupd,4605,182946
/* 640 */     OP_vmovlps,4606,183035
/* 641 */     OP_vmovsldup,4607,183124
/* 642 */     OP_vmovlpd,4608,183215
/* 643 */     OP_vmovddup,4609,183304
/* 644 */     OP_vunpcklps,4610,183394
/* 645 */     OP_vunpcklpd,4611,183485
/* 646 */     OP_vunpckhps,4612,183576
/* 647 */     OP_vunpckhpd,4613,183667
/* 648 */     OP_vmovhps,4614,183758
/* 649 */     OP_vmovshdup,4615,183847
/* 650 */     OP_vmovhpd,4616,183938
/* 651 */     OP_vmovaps,4617,184027
/* 652 */     OP_vmovapd,4618,184116
/* 653 */     OP_vcvtsi2ss,4619,184205
/* 654 */     OP_vcvtsi2sd,4620,184296
/* 655 */     OP_vmovntps,4621,184387
/* 656 */     OP_vmovntpd,4622,184477
/* 657 */     OP_vcvttss2si,4623,184567
/* 658 */     OP_vcvttsd2si,4624,184659
/* 659 */     OP_vcvtss2si,4625,184751
/* 660 */     OP_vcvtsd2si,4626,184842
/* 661 */     OP_vucomiss,4627,184933
/* 662 */     OP_vucomisd,4628,185023
/* 663 */     OP_vcomiss,4629,185113
/* 664 */     OP_vcomisd,4630,185202
/* 665 */     OP_vmovmskps,4631,185291
/* 666 */     OP_vmovmskpd,4632,185382
/* 667 */     OP_vsqrtps,4633,185473
/* 668 */     OP_vsqrtss,4634,185562
/* 669 */     OP_vsqrtpd,4635,185651
/* 670 */     OP_vsqrtsd,4636,185740
/* 671 */     OP_vrsqrtps,4637,185829
/* 672 */     OP_vrsqrtss,4638,185919
/* 673 */     OP_vrcpps,4639,186009
/* 674 */     OP_vrcpss,4640,186097
/* 675 */     OP_vandps,4641,186185
/* 676 */     OP_vandpd,4642,186273
/* 677 */     OP_vandnps,4643,186361
/* 678 */     OP_vandnpd,4644,186450
/* 679 */     OP_vorps,4645,186539
/* 680 */     OP_vorpd,4646,186626
/* 681 */     OP_vxorps,4647,186713
/* 682 */     OP_vxorpd,4648,186801
/* 683 */     OP_vaddps,4649,186889
/* 684 */     OP_vaddss,4650,186977
/* 685 */     OP_vaddpd,4651,187065
/* 686 */     OP_vaddsd,4652,187153
/* 687 */     OP_vmulps,4653,187241
/* 688 */     OP_vmulss,4654,187329
/* 689 */     OP_vmulpd,4655,187417
/* 690 */     OP_vmulsd,4656,187505
/* 691 */     OP_vcvtps2pd,4657,187593
/* 692 */     OP_vcvtss2sd,4658,187684
/* 693 */     OP_vcvtpd2ps,4659,187775
/* 694 */     OP_vcvtsd2ss,4660,187866
/* 695 */     OP_vcvtdq2ps,4661,187957
/* 696 */     OP_vcvttps2dq,4662,188048
/* 697 */     OP_vcvtps2dq,4663,188140
/* 698 */     OP_vsubps,4664,188231
/* 699 */     OP_vsubss,4665,188319
/* 700 */     OP_vsubpd,4666,188407
/* 701 */     OP_vsubsd,4667,188495
/* 702 */     OP_vminps,4668,188583
/* 703 */     OP_vminss,4669,188671
/* 704 */     OP_vminpd,4670,188759
/* 705 */     OP_vminsd,4671,188847
/* 706 */     OP_vdivps,4672,188935
/* 707 */     OP_vdivss,4673,189023
/* 708 */     OP_vdivpd,4674,189111
/* 709 */     OP_vdivsd,4675,189199
/* 710 */     OP_vmaxps,4676,189287
/* 711 */     OP_vmaxss,4677,189375
/* 712 */     OP_vmaxpd,4678,189463
/* 713 */     OP_vmaxsd,4679,189551
/* 714 */     OP_vpunpcklbw,4680,189639
/* 715 */     OP_vpunpcklwd,4681,189731
/* 716 */     OP_vpunpckldq,4682,189823
/* 717 */     OP_vpacksswb,4683,189915
/* 718 */     OP_vpcmpgtb,4684,190006
/* 719 */     OP_vpcmpgtw,4685,190096
/* 720 */     OP_vpcmpgtd,4686,190186
/* 721 */     OP_vpackuswb,4687,190276
/* 722 */     OP_vpunpckhbw,4688,190367
/* 723 */     OP_vpunpckhwd,4689,190459
/* 724 */     OP_vpunpckhdq,4690,190551
/* 725 */     OP_vpackssdw,4691,190643
/* 726 */     OP_vpunpcklqdq,4692,190734
/* 727 */     OP_vpunpckhqdq,4693,190827
/* 728 */     OP_vmovd,4694,190920
/* 729 */     OP_vpshufhw,4695,191007
/* 730 */     OP_vpshufd,4696,191097
/* 731 */     OP_vpshuflw,4697,191186
/* 732 */     OP_vpcmpeqb,4698,191276
/* 733 */     OP_vpcmpeqw,4699,191366
/* 734 */     OP_vpcmpeqd,4700,191456
/* 735 */     OP_vmovq,4701,191546
/* 736 */     OP_vcmpps,4702,191633
/* 737 */     OP_vcmpss,4703,191721
/* 738 */     OP_vcmppd,4704,191809
/* 739 */     OP_vcmpsd,4705,191897
/* 740 */     OP_vpinsrw,4706,191985
/* 741 */     OP_vpextrw,4707,192074
/* 742 */     OP_vshufps,4708,192163
/* 743 */     OP_vshufpd,4709,192252
/* 744 */     OP_vpsrlw,4710,192341
/* 745 */     OP_vpsrld,4711,192429
/* 746 */     OP_vpsrlq,4712,192517
/* 747 */     OP_vpaddq,4713,192605
/* 748 */     OP_vpmullw,4714,192693
/* 749 */     OP_vpmovmskb,4715,192782
/* 750 */     OP_vpsubusb,4716,192873
/* 751 */     OP_vpsubusw,4717,192963
/* 752 */     OP_vpminub,4718,193053
/* 753 */     OP_vpand,4719,193142
/* 754 */     OP_vpaddusb,4720,193229
/* 755 */     OP_vpaddusw,4721,193319
/* 756 */     OP_vpmaxub,4722,193409
/* 757 */     OP_vpandn,4723,193498
/* 758 */     OP_vpavgb,4724,193586
/* 759 */     OP_vpsraw,4725,193674
/* 760 */     OP_vpsrad,4726,193762
/* 761 */     OP_vpavgw,4727,193850
/* 762 */     OP_vpmulhuw,4728,193938
/* 763 */     OP_vpmulhw,4729,194028
/* 764 */     OP_vcvtdq2pd,4730,194117
/* 765 */     OP_vcvttpd2dq,4731,194208
/* 766 */     OP_vcvtpd2dq,4732,194300
/* 767 */     OP_vmovntdq,4733,194391
/* 768 */     OP_vpsubsb,4734,194481
/* 769 */     OP_vpsubsw,4735,194570
/* 770 */     OP_vpminsw,4736,194659
/* 771 */     OP_vpor,4737,194748
/* 772 */     OP_vpaddsb,4738,194834
/* 773 */     OP_vpaddsw,4739,194923
/* 774 */     OP_vpmaxsw,4740,195012
/* 775 */     OP_vpxor,4741,195101
/* 776 */     OP_vpsllw,4742,195188
/* 777 */     OP_vpslld,4743,195276
/* 778 */     OP_vpsllq,4744,195364
/* 779 */     OP_vpmuludq,4745,195452
/* 780 */     OP_vpmaddwd,4746,195542
/* 781 */     OP_vpsadbw,4747,195632
/* 782 */     OP_vmaskmovdqu,4748,195721
/* 783 */     OP_vpsubb,4749,195814
/* 784 */     OP_vpsubw,4750,195902
/* 785 */     OP_vpsubd,4751,195990
/* 786 */     OP_vpsubq,4752,196078
/* 787 */     OP_vpaddb,4753,196166
/* 788 */     OP_vpaddw,4754,196254
/* 789 */     OP_vpaddd,4755,196342
/* 790 */     OP_vpsrldq,4756,196431
/* 791 */     OP_vpslldq,4757,196521
/* 792 */     OP_vmovdqu,4758,196611
/* 793 */     OP_vmovdqa,4759,196701
/* 794 */     OP_vhaddpd,4760,196791
/* 795 */     OP_vhaddps,4761,196881
/* 796 */     OP_vhsubpd,4762,196971
/* 797 */     OP_vhsubps,4763,197061
/* 798 */     OP_vaddsubpd,4764,197151
/* 799 */     OP_vaddsubps,4765,197243
/* 800 */     OP_vlddqu,4766,197335
/* 801 */     OP_vpshufb,4767,197424
/* 802 */     OP_vphaddw,4768,197514
/* 803 */     OP_vphaddd,4769,197604
/* 804 */     OP_vphaddsw,4770,197694
/* 805 */     OP_vpmaddubsw,4771,197785
/* 806 */     OP_vphsubw,4772,197878
/* 807 */     OP_vphsubd,4773,197968
/* 808 */     OP_vphsubsw,4774,198058
/* 809 */     OP_vpsignb,4775,198149
/* 810 */     OP_vpsignw,4776,198239
/* 811 */     OP_vpsignd,4777,198329
/* 812 */     OP_vpmulhrsw,4778,198419
/* 813 */     OP_vpabsb,4779,198511
/* 814 */     OP_vpabsw,4780,198600
/* 815 */     OP_vpabsd,4781,198689
/* 816 */     OP_vpalignr,4782,198778
/* 817 */     OP_vpblendvb,4783,198869
/* 818 */     OP_vblendvps,4784,198957
/* 819 */     OP_vblendvpd,4785,199045
/* 820 */     OP_vptest,4786,199133
/* 821 */     OP_vpmovsxbw,4787,199218
/* 822 */     OP_vpmovsxbd,4788,199306
/* 823 */     OP_vpmovsxbq,4789,199394
/* 824 */     OP_vpmovsxdw,4790,199482
/* 825 */     OP_vpmovsxwq,4791,199570
/* 826 */     OP_vpmovsxdq,4792,199658
/* 827 */     OP_vpmuldq,4793,199746
/* 828 */     OP_vpcmpeqq,4794,199832
/* 829 */     OP_vmovntdqa,4795,199919
/* 830 */     OP_vpackusdw,4796,200007
/* 831 */     OP_vpmovzxbw,4797,200095
/* 832 */     OP_vpmovzxbd,4798,200183
/* 833 */     OP_vpmovzxbq,4799,200271
/* 834 */     OP_vpmovzxdw,4800,200359
/* 835 */     OP_vpmovzxwq,4801,200447
/* 836 */     OP_vpmovzxdq,4802,200535
/* 837 */     OP_vpcmpgtq,4803,200623
/* 838 */     OP_vpminsb,4804,200710
/* 839 */     OP_vpminsd,4805,200796
/* 840 */     OP_vpminuw,4806,200882
/* 841 */     OP_vpminud,4807,200968
/* 842 */     OP_vpmaxsb,4808,201054
/* 843 */     OP_vpmaxsd,4809,201140
/* 844 */     OP_vpmaxuw,4810,201226
/* 845 */     OP_vpmaxud,4811,201312
/* 846 */     OP_vpmulld,4812,201398
/* 847 */     OP_vphminposuw,4813,201484
/* 848 */     OP_vaesimc,4814,201574
/* 849 */     OP_vaesenc,4815,201660
/* 850 */     OP_vaesenclast,4816,201746
/* 851 */     OP_vaesdec,4817,201836
/* 852 */     OP_vaesdeclast,4818,201922
/* 853 */     OP_vpextrb,4819,202012
/* 854 */     OP_vpextrd,4820,202098
/* 855 */     OP_vextractps,4821,202184
/* 856 */     OP_vroundps,4822,202273
/* 857 */     OP_vroundpd,4823,202360
/* 858 */     OP_vroundss,4824,202447
/* 859 */     OP_vroundsd,4825,202534
/* 860 */     OP_vblendps,4826,202621
/* 861 */     OP_vblendpd,4827,202708
/* 862 */     OP_vpblendw,4828,202795
/* 863 */     OP_vpinsrb,4829,202882
/* 864 */     OP_vinsertps,4830,202968
/* 865 */     OP_vpinsrd,4831,203056
/* 866 */     OP_vdpps,4832,203142
/* 867 */     OP_vdppd,4833,203226
/* 868 */     OP_vmpsadbw,4834,203310
/* 869 */     OP_vpcmpestrm,4835,203397
/* 870 */     OP_vpcmpestri,4836,203486
/* 871 */     OP_vpcmpistrm,4837,203575
/* 872 */     OP_vpcmpistri,4838,203664
/* 873 */     OP_vpclmulqdq,4839,203753
/* 874 */     OP_vaeskeygenassist,4840,203842
/* 875 */     OP_vtestps,4841,203939
/* 876 */     OP_vtestpd,4842,204025
/* 877 */     OP_vzeroupper,4843,204111
/* 878 */     OP_vzeroall,4844,204201
/* 879 */     OP_vldmxcsr,4845,204289
/* 880 */     OP_vstmxcsr,4846,204376
/* 881 */     OP_vbroadcastss,4847,204463
/* 882 */     OP_vbroadcastsd,4848,204554
/* 883 */     OP_vbroadcastf128,4849,204646
/* 884 */     OP_vmaskmovps,4850,204740
/* 885 */     OP_vmaskmovpd,4851,204829
/* 886 */     OP_vpermilps,4852,204918
/* 887 */     OP_vpermilpd,4853,205006
/* 888 */     OP_vperm2f128,4854,205094
/* 889 */     OP_vinsertf128,4855,205183
/* 890 */     OP_vextractf128,4856,205273
/* 891 */     OP_vcvtph2ps,4857,205365
/* 892 */     OP_vcvtps2ph,4858,205453
/* 893 */     OP_vfmadd132ps,4861,205556
/* 894 */     OP_vfmadd132pd,4862,205648
/* 895 */     OP_vfmadd213ps,4863,205740
/* 896 */     OP_vfmadd213pd,4864,205832
/* 897 */     OP_vfmadd231ps,4865,205924
/* 898 */     OP_vfmadd231pd,4866,206016
/* 899 */     OP_vfmadd132ss,4867,206108
/* 900 */     OP_vfmadd132sd,4868,206200
/* 901 */     OP_vfmadd213ss,4869,206292
/* 902 */     OP_vfmadd213sd,4870,206384
/* 903 */     OP_vfmadd231ss,4871,206476
/* 904 */     OP_vfmadd231sd,4872,206568
/* 905 */     OP_vfmaddsub132ps,4873,206660
/* 906 */     OP_vfmaddsub132pd,4874,206755
/* 907 */     OP_vfmaddsub213ps,4875,206850
/* 908 */     OP_vfmaddsub213pd,4876,206945
/* 909 */     OP_vfmaddsub231ps,4877,207040
/* 910 */     OP_vfmaddsub231pd,4878,207135
/* 911 */     OP_vfmsubadd132ps,4879,207230
/* 912 */     OP_vfmsubadd132pd,4880,207325
/* 913 */     OP_vfmsubadd213ps,4881,207420
/* 914 */     OP_vfmsubadd213pd,4882,207515
/* 915 */     OP_vfmsubadd231ps,4883,207610
/* 916 */     OP_vfmsubadd231pd,4884,207705
/* 917 */     OP_vfmsub132ps,4885,207800
/* 918 */     OP_vfmsub132pd,4886,207892
/* 919 */     OP_vfmsub213ps,4887,207984
/* 920 */     OP_vfmsub213pd,4888,208076
/* 921 */     OP_vfmsub231ps,4889,208168
/* 922 */     OP_vfmsub231pd,4890,208260
/* 923 */     OP_vfmsub132ss,4891,208352
/* 924 */     OP_vfmsub132sd,4892,208444
/* 925 */     OP_vfmsub213ss,4893,208536
/* 926 */     OP_vfmsub213sd,4894,208628
/* 927 */     OP_vfmsub231ss,4895,208720
/* 928 */     OP_vfmsub231sd,4896,208812
/* 929 */     OP_vfnmadd132ps,4897,208904
/* 930 */     OP_vfnmadd132pd,4898,208997
/* 931 */     OP_vfnmadd213ps,4899,209090
/* 932 */     OP_vfnmadd213pd,4900,209183
/* 933 */     OP_vfnmadd231ps,4901,209276
/* 934 */     OP_vfnmadd231pd,4902,209369
/* 935 */     OP_vfnmadd132ss,4903,209462
/* 936 */     OP_vfnmadd132sd,4904,209555
/* 937 */     OP_vfnmadd213ss,4905,209648
/* 938 */     OP_vfnmadd213sd,4906,209741
/* 939 */     OP_vfnmadd231ss,4907,209834
/* 940 */     OP_vfnmadd231sd,4908,209927
/* 941 */     OP_vfnmsub132ps,4909,210020
/* 942 */     OP_vfnmsub132pd,4910,210113
/* 943 */     OP_vfnmsub213ps,4911,210206
/* 944 */     OP_vfnmsub213pd,4912,210299
/* 945 */     OP_vfnmsub231ps,4913,210392
/* 946 */     OP_vfnmsub231pd,4914,210485
/* 947 */     OP_vfnmsub132ss,4915,210578
/* 948 */     OP_vfnmsub132sd,4916,210671
/* 949 */     OP_vfnmsub213ss,4917,210764
/* 950 */     OP_vfnmsub213sd,4918,210857
/* 951 */     OP_vfnmsub231ss,4919,210950
/* 952 */     OP_vfnmsub231sd,4920,211043
/* 953 */     OP_movq2dq,4922,211137
/* 954 */     OP_movdq2q,4923,211226
/* 955 */     OP_fxsave64,4925,211316
/* 956 */     OP_fxrstor64,4926,211404
/* 957 */     OP_xsave64,4927,211493
/* 958 */     OP_xrstor64,4928,211580
/* 959 */     OP_xsaveopt64,4929,211668
/* 960 */     OP_jmpe,4933,211860
/* 961 */     OP_jmpe_abs,4934,211935
    OP_AFTER_LAST,4937,212022
    OP_FIRST 4938,212041
    OP_FIRST = OP_add,4938,212041
    OP_LAST 4939,212102
    OP_LAST  = OP_AFTER_LAST 4939,212102
#define OP_LAST 4944,212251
#define OP_cbw 4953,212514
#define OP_cwd 4954,212596
#define OP_jcxz 4955,212677
#define OP_jrcxz 4957,212808
#define OP_cmpxchg16b 4958,212895
#define OP_pextrq 4959,212982
#define OP_pinsrq 4960,213069
#define OP_movhlps 4962,213197
#define OP_movlhps 4963,213282
#define OP_jae_short 4965,213389
#define OP_jnae_short 4966,213458
#define OP_ja_short 4967,213527
#define OP_jna_short 4968,213596
#define OP_je_short 4969,213665
#define OP_jne_short 4970,213734
#define OP_jge_short 4971,213803
#define OP_jg_short 4972,213872
#define OP_jae 4973,213941
#define OP_jnae 4974,214004
#define OP_ja 4975,214067
#define OP_jna 4976,214130
#define OP_je 4977,214193
#define OP_jne 4978,214256
#define OP_jge 4979,214319
#define OP_jg 4980,214382
#define OP_setae 4981,214445
#define OP_setnae 4982,214508
#define OP_seta 4983,214571
#define OP_setna 4984,214634
#define OP_sete 4985,214697
#define OP_setne 4986,214760
#define OP_setge 4987,214823
#define OP_setg 4988,214886
#define OP_cmovae 4989,214949
#define OP_cmovnae 4990,215012
#define OP_cmova 4991,215075
#define OP_cmovna 4992,215138
#define OP_cmove 4993,215201
#define OP_cmovne 4994,215264
#define OP_cmovge 4995,215327
#define OP_cmovg 4996,215390
# define OP_fxsave 4998,215465
# define OP_fxrstor 4999,215533
# define OP_xsave 5000,215601
# define OP_xrstor 5001,215669
# define OP_xsaveopt 5002,215737
#define OP_icebp 5005,215839
#define OP_setalc 5006,215864

x86/sideline.c,2677
#    define RUN_SIG 52,2211
#    define RUN_SIG60,2519
     typedef pid_t thread_t;61,2539
#    define THREAD_STACK_SIZE 62,2568
#define OPTVERB_3 81,2995
#define VERB_3 83,3034
#define VERB_2 84,3051
#define SAMPLE_COUNT_THRESHOLD 87,3129
#define SAMPLE_TO_OPTIMIZE_RATIO 89,3236
volatile fragment_t * sideline_trace;95,3425
int num_processors;98,3508
thread_id_t pause_for_sideline;101,3593
event_t paused_for_sideline_event;102,3625
event_t resume_from_sideline_event;103,3660
file_t logfile;108,3802
typedef struct _sample_entry_t 123,4412
    ptr_uint_t    tag;124,4445
    int     counter;125,4468
    struct  _sample_entry_t * next;126,4489
} sample_entry_t;127,4555
typedef struct _sample_table_t 129,4574
    uint  hash_bits;130,4607
    uint  hash_mask;131,4628
    hash_function_t  hash_func;132,4649
    uint           hash_mask_offset;133,4681
    uint  capacity;134,4757
    uint  entries;135,4777
    mutex_t         lock;136,4796
    sample_entry_t **table;table137,4868
} sample_table_t;138,4938
#define INITIAL_HASH_BITS 140,4957
static sample_table_t table;142,4987
static fragment_t * fragment_now_optimizing;144,5103
typedef struct _remember_entry_t 151,5322
    fragment_t  *f;f152,5357
    fragment_t  *replacement;replacement154,5405
    struct _remember_entry_t * next;156,5442
} remember_entry_t;157,5479
typedef struct _remember_list_t 159,5500
    dcontext_t *dcontext;dcontext160,5534
    remember_entry_t *list;list161,5560
    struct _remember_list_t * next;162,5588
} remember_list_t;163,5624
static remember_list_t *remember;remember165,5644
static int num_samples;168,5763
static int num_optimized;171,5801
static int num_opt_with_no_synch;172,5827
static thread_id_t child_tid;178,5978
static HANDLE child_handle;180,6023
static thread_t child;182,6068
static void *stack;stack183,6091
static event_t wake_event;186,6119
static event_t asleep_event;187,6146
static event_t exited_event;188,6175
static volatile bool child_sleep;191,6265
static volatile bool child_exit;192,6299
sideline_init(218,7156
sideline_exit(298,9652
add_sideline_prefix(386,12151
finalize_sideline_prefix(396,12531
remove_sideline_profiling(409,12930
sideline_start(422,13374
sideline_stop(432,13573
sideline_run(446,13952
optimize_trace_wrapper(484,15022
sideline_sample(490,15171
sideline_examine_traces(525,16418
sideline_optimize(579,18326
sideline_cleanup_replacement(771,25649
find_hottest_entry(834,27785
update_sample_entry(854,28220
sideline_fragment_delete(887,28998
remove_sample_entry(904,29569
add_remember_entry(925,30136
create_thread(973,31715
delete_thread(1002,32589

x86/steal_reg.h,136
#define X86_STEAL_REG_H40,1913
#define EDI_VAL_IN_MEM 58,2888
#define EDI_VAL_IN_EBX 59,2913
#define EDI_VAL_IN_EBX_AND_MEM 60,2938

x86/encode.c,1555
# undef ASSERT_TRUNCATE52,2229
# undef ASSERT_BITFIELD_TRUNCATE53,2253
# undef ASSERT_NOT_REACHED54,2286
# define ASSERT_TRUNCATE 55,2313
# define ASSERT_BITFIELD_TRUNCATE 56,2382
# define ASSERT_NOT_REACHED 57,2460
#define ENC_LEVEL 61,2613
const char * const type_names[type_names63,2634
const char * const reg_names[reg_names116,4523
const char * const size_names[size_names142,5969
template_optype_is_reg(264,11041
type_instr_uses_reg_bits(299,11947
type_uses_modrm_bits(315,12186
size_ok_varsz(338,12764
resolve_var_x64_size(480,19139
size_ok(511,20675
immed_size_ok(746,30100
reg_set_ext_prefixes(772,30834
reg_size_ok(787,31351
reg_rm_selectable(831,33194
mem_size_ok(839,33442
opnd_type_ok(861,34424
instr_info_extra_opnds(1176,51278
#define TEST_OPND(1188,51655
encoding_possible_pass(1213,53086
encoding_possible(1263,55472
instr_is_encoding_possible(1304,57249
get_encoding_info(1314,57519
instr_info_opnd_type(1332,58018
encode_immed(1376,59328
encode_reg_ext_prefixes(1503,63834
encode_rel_addr(1512,63999
encode_base_disp(1543,65302
set_immed(1714,72609
get_mem_instr_addr(1728,72985
encode_operand(1736,73244
encode_vex_final_prefix_byte(2047,87015
encode_vex_prefixes(2072,87817
encode_cti(2139,90388
copy_and_re_relativize_raw_instr(2226,93635
instr_encode_common(2315,97756
instr_encode_ignore_reachability(2705,113749
instr_encode_check_reachability(2712,114002
instr_encode_to_copy(2720,114293
instr_encode(2727,114522
instrlist_encode_to_copy(2737,114843
instrlist_encode(2764,115840

x86/mangle.c,5714
#define POST 72,2768
#define PRE 73,2807
    SLOT_NONE 82,3054
    SLOT_REG,83,3073
    SLOT_LOCAL,84,3087
    SLOT_FLAGS,85,3103
typedef byte slot_kind_t;87,3122
typedef struct _slot_t 94,3312
    slot_kind_t kind;95,3337
    byte value;96,3359
} slot_t;97,3375
typedef struct _callee_info_t 100,3441
    bool bailout;101,3473
    uint num_args;102,3545
    int num_instrs;103,3616
    app_pc start;104,3695
    app_pc bwd_tgt;105,3758
    app_pc fwd_tgt;106,3826
    int num_xmms_used;107,3889
    bool xmm_used[xmm_used108,3955
    bool reg_used[reg_used109,4019
    int num_callee_save_regs;110,4091
    bool callee_save_regs[callee_save_regs111,4155
    bool has_locals;112,4223
    bool xbp_is_fp;113,4288
    bool opt_inline;114,4356
    bool write_aflags;115,4414
    bool read_aflags;116,4481
    bool tls_used;117,4558
    reg_id_t spill_reg;118,4633
    uint slots_used;119,4699
    slot_t scratch_slots[scratch_slots120,4771
    instrlist_t *ilist;ilist121,4856
} callee_info_t;122,4933
static callee_info_t     default_callee_info;123,4950
static clean_call_info_t default_clean_call_info;124,4996
static generic_table_t  *callee_info_table;callee_info_table128,5120
static bool callee_info_table_exit 130,5241
#define INIT_HTABLE_SIZE_CALLEE 131,5285
callee_info_init(134,5358
callee_info_free(158,6112
callee_info_create(170,6446
callee_info_reserve_slot(183,6756
callee_info_slot_opnd(200,7385
callee_info_table_init(220,8168
callee_info_table_destroy(232,8598
callee_info_table_lookup(239,8755
callee_info_table_add(254,9244
clean_call_info_init(279,10139
convert_to_near_rel_common(301,10931
convert_to_near_rel_meta(440,16943
convert_to_near_rel(446,17099
remangle_short_rewrite(464,17854
get_clean_call_switch_stack_size(497,19116
get_clean_call_temp_stack_size(506,19287
insert_out_of_line_context_switch(512,19401
insert_clear_eflags(539,20508
insert_push_all_registers(571,21788
insert_pop_all_registers(684,27160
insert_get_mcontext_base(797,32157
clean_call_beyond_mcontext(814,32807
#define NUM_EXTRA_SLOTS 849,34275
prepare_for_clean_call(851,34323
cleanup_after_clean_call(960,38927
parameters_stack_padded(1026,41385
shrink_reg_for_param(1032,41501
insert_parameter_preparation(1075,43338
insert_meta_call_vargs(1392,59775
insert_clean_call_with_arg_jmp_if_ret_true(1431,61378
insert_reachable_cti(1479,63458
insert_mov_immed_common(1552,66479
insert_mov_immed_ptrsz(1621,69440
insert_mov_instr_addr(1630,69757
insert_push_immed_common(1646,70338
insert_push_immed_ptrsz(1695,72256
insert_push_instr_addr(1704,72561
stack_entry_size(1714,72965
insert_push_retaddr(1752,73953
insert_mov_ptr_uint_beyond_TOS(1789,75589
insert_push_cs(1833,77420
get_call_return_address(1859,78308
#define SAVE_TO_DC_OR_TLS(1913,80667
#define SAVE_TO_DC_OR_TLS_OR_REG(1919,81064
mangle_far_direct_helper(1925,81382
mangle_direct_call(1974,83753
mangle_seg_ref_opnd(2065,87457
mangle_far_indirect_helper(2120,89490
mangle_indirect_call(2195,92801
mangle_far_return_save_selector(2304,97324
mangle_return(2326,98249
mangle_indirect_jump(2527,107668
mangle_far_direct_jump(2592,110427
cti_is_normal_elision(2608,110942
find_syscall_num(2635,111729
mangle_insert_clone_code(2709,114714
mangle_syscall(2784,117738
mangle_clone_code(3009,128096
mangle_syscall_code(3066,130105
mangle_interrupt(3148,133189
#define FNSAVE_PC_OFFS 3174,134019
#define FXSAVE_PC_OFFS 3175,134046
#define FXSAVE_SIZE 3176,134073
float_pc_update(3179,134106
mangle_float_pc(3227,136115
#define CPUID_0_EAX 3371,142656
#define CPUID_0_EBX 3372,142688
#define CPUID_0_ECX 3373,142719
#define CPUID_0_EDX 3374,142750
#define CPUID_1_EAX 3377,142921
#define CPUID_1_EBX 3378,142952
#define CPUID_1_ECX 3379,142983
#define CPUID_1_EDX 3380,143014
mangle_cpuid(3383,143058
mangle_exit_cti_prefixes(3464,145874
mangle_rel_addr(3500,147250
instr_get_seg_ref_dst_idx(3642,154049
instr_get_seg_ref_src_idx(3660,154491
static ushort tls_slots[tls_slots3677,154922
mangle_mov_seg(3684,155132
mangle_seg_ref(3783,158718
mangle(3891,162774
#undef SAVE_TO_DC_OR_TLS4114,171704
# define SAVE_TO_DC_OR_TLS(4117,171821
# define RESTORE_FROM_DC_OR_TLS(4119,171932
# define SAVE_TO_DC_OR_TLS(4122,172059
# define RESTORE_FROM_DC_OR_TLS(4124,172174
sandbox_rep_instr(4129,172319
sandbox_write(4303,179857
sandbox_top_of_bb_check_s2ro(4503,188795
sandbox_top_of_bb(4513,189202
insert_selfmod_sandbox(4796,200876
static bool selfmod_s2ro[selfmod_s2ro4915,206564
static uint selfmod_eflags[selfmod_eflags4916,206610
#define SELFMOD_NUM_S2RO 4917,206693
#define SELFMOD_NUM_EFLAGS 4918,206767
static app_pc selfmod_gt4G[selfmod_gt4G4920,206901
# define SELFMOD_NUM_GT4G 4921,206987
set_selfmod_sandbox_offsets(4929,207271
finalize_selfmod_sandbox(4990,209841
#define MAX_NUM_FUNC_INSTRS 5014,210849
#define MAX_NUM_INLINE_INSTRS 5016,210951
mangle_init(5019,210990
mangle_exit(5034,211407
decode_callee_instr(5045,211608
check_callee_instr(5079,212680
check_callee_ilist(5211,218109
decode_callee_ilist(5256,219694
analyze_callee_regs_usage(5274,220191
analyze_callee_save_reg(5391,224715
analyze_callee_tls(5528,230625
analyze_callee_pick_spill_reg(5567,232032
analyze_callee_inline(5595,233044
analyze_callee_ilist(5827,242759
analyze_clean_call_aflags(5846,243398
analyze_clean_call_regs(5880,244866
analyze_clean_call_args(5952,247892
analyze_clean_call_inline(5978,248801
analyze_clean_call(6055,251478
insert_inline_reg_save(6102,253202
insert_inline_reg_restore(6150,255107
insert_inline_arg_setup(6189,256485
insert_inline_clean_call(6283,260176
analyze_clean_call(6337,262199

x86/instr_create.h,40259
#define _INSTR_CREATE_H_ 38,1892
#define LOCK(71,2995
#define INSTR_XL8(76,3211
#define OPND_CREATE_MEM64(80,3392
#define OPND_CREATE_MEM32(83,3542
#define OPND_CREATE_MEM16(86,3692
#define OPND_CREATE_MEM8(89,3842
# define OPND_CREATE_MEMPTR 93,4009
# define OPND_CREATE_ABSMEM(98,4199
# define OPND_CREATE_MEMPTR 102,4331
# define OPND_CREATE_ABSMEM(104,4420
#define OPND_CREATE_INT64(110,4568
# define OPND_CREATE_INTPTR 112,4704
# define OPND_CREATE_INTPTR 115,4813
#define OPND_CREATE_INT32(118,4916
#define OPND_CREATE_INT16(120,5045
#define OPND_CREATE_INT8(122,5174
#define OPND_CREATE_INT_32OR8(127,5374
#define OPND_CREATE_INT_16OR8(133,5638
#define OPND_CREATE_MEM_lea(139,5926
#define OPND_CREATE_MEM_invlpg(142,6120
#define OPND_CREATE_MEM_clflush(145,6321
#define OPND_CREATE_MEM_prefetch(148,6526
#define OPND_CREATE_MEM_lgdt(151,6728
#define OPND_CREATE_MEM_sgdt(154,6922
#define OPND_CREATE_MEM_lidt(157,7116
#define OPND_CREATE_MEM_sidt(160,7310
#define OPND_CREATE_MEM_bound(163,7505
#define OPND_CREATE_MEM_fldenv(166,7703
#define OPND_CREATE_MEM_fnstenv(169,7904
#define OPND_CREATE_MEM_fnsave(172,8106
#define OPND_CREATE_MEM_frstor(175,8306
#define OPND_CREATE_MEM_fxsave(178,8520
#define OPND_CREATE_MEM_fxrstor(181,8735
#define OPND_CREATE_MEM_xsave(187,9016
#define INSTR_CREATE_fwait(213,10181
#define INSTR_CREATE_hlt(214,10254
#define INSTR_CREATE_cmc(215,10325
#define INSTR_CREATE_clc(216,10396
#define INSTR_CREATE_stc(217,10467
#define INSTR_CREATE_cli(218,10538
#define INSTR_CREATE_sti(219,10609
#define INSTR_CREATE_cld(220,10680
#define INSTR_CREATE_std(221,10751
#define INSTR_CREATE_clts(222,10822
#define INSTR_CREATE_invd(223,10894
#define INSTR_CREATE_wbinvd(224,10966
#define INSTR_CREATE_ud2a(225,11040
#define INSTR_CREATE_emms(226,11112
#define INSTR_CREATE_rsm(227,11184
#define INSTR_CREATE_ud2b(228,11255
#define INSTR_CREATE_lfence(229,11327
#define INSTR_CREATE_mfence(230,11401
#define INSTR_CREATE_sfence(231,11475
#define INSTR_CREATE_nop(232,11549
#define INSTR_CREATE_pause(233,11620
#define INSTR_CREATE_fnop(234,11693
#define INSTR_CREATE_fdecstp(235,11765
#define INSTR_CREATE_fincstp(236,11840
#define INSTR_CREATE_fnclex(237,11915
#define INSTR_CREATE_fninit(238,11989
#define INSTR_CREATE_sysret(239,12063
#define INSTR_CREATE_femms(240,12137
#define INSTR_CREATE_swapgs(241,12210
#define INSTR_CREATE_vmcall(242,12284
#define INSTR_CREATE_vmlaunch(243,12358
#define INSTR_CREATE_vmresume(244,12434
#define INSTR_CREATE_vmxoff(245,12510
#define INSTR_CREATE_vmmcall(246,12584
#define INSTR_CREATE_stgi(247,12659
#define INSTR_CREATE_clgi(248,12731
#define INSTR_CREATE_int3(249,12803
#define INSTR_CREATE_into(250,12871
#define INSTR_CREATE_int1(251,12939
#define INSTR_CREATE_vzeroupper(252,13007
#define INSTR_CREATE_vzeroall(253,13087
#define INSTR_CREATE_label(261,13469
#define INSTR_CREATE_jcc_short(276,14235
#define INSTR_CREATE_jcc(287,14759
#define INSTR_CREATE_jmp(298,15342
#define INSTR_CREATE_jmp_short(300,15420
#define INSTR_CREATE_jmp_ind(310,15912
#define INSTR_CREATE_jmp_far(319,16362
#define INSTR_CREATE_jmp_far_ind(328,16825
#define INSTR_CREATE_lldt(338,17341
#define INSTR_CREATE_ltr(340,17421
#define INSTR_CREATE_verr(342,17499
#define INSTR_CREATE_verw(344,17579
#define INSTR_CREATE_vmptrld(346,17659
#define INSTR_CREATE_vmxon(348,17745
#define INSTR_CREATE_lgdt(357,18218
#define INSTR_CREATE_lidt(366,18689
#define INSTR_CREATE_lmsw(368,18769
#define INSTR_CREATE_invlpg(377,19242
#define INSTR_CREATE_fxrstor32(386,19720
#define INSTR_CREATE_fxrstor64(395,20204
#define INSTR_CREATE_ldmxcsr(397,20294
#define INSTR_CREATE_vldmxcsr(399,20380
#define INSTR_CREATE_nop_modrm(401,20468
#define INSTR_CREATE_prefetchnta(413,21095
#define INSTR_CREATE_prefetcht0(415,21189
#define INSTR_CREATE_prefetcht1(417,21281
#define INSTR_CREATE_prefetcht2(419,21373
#define INSTR_CREATE_prefetch(421,21465
#define INSTR_CREATE_prefetchw(423,21553
#define INSTR_CREATE_clflush(433,22070
#define INSTR_CREATE_int(442,22530
#define INSTR_CREATE_jmpe(448,22656
#define INSTR_CREATE_jmpe_abs(450,22736
#define INSTR_CREATE_fldenv(462,23251
#define INSTR_CREATE_fldcw(471,23736
#define INSTR_CREATE_frstor(480,24216
#define INSTR_CREATE_fxam(491,24663
#define INSTR_CREATE_sahf(493,24764
#define INSTR_CREATE_vmrun(495,24864
#define INSTR_CREATE_vmload(497,24967
#define INSTR_CREATE_vmsave(499,25072
#define INSTR_CREATE_skinit(501,25177
#define INSTR_CREATE_cmp(515,25859
#define INSTR_CREATE_test(517,25949
#define INSTR_CREATE_ptest(519,26041
#define INSTR_CREATE_vucomiss(522,26145
#define INSTR_CREATE_vucomisd(524,26245
#define INSTR_CREATE_vcomiss(526,26345
#define INSTR_CREATE_vcomisd(528,26443
#define INSTR_CREATE_vptest(530,26541
#define INSTR_CREATE_vtestps(532,26637
#define INSTR_CREATE_vtestpd(534,26735
#define INSTR_CREATE_bound(544,27290
#define INSTR_CREATE_bt(554,27809
#define INSTR_CREATE_ucomiss(556,27895
#define INSTR_CREATE_ucomisd(558,27993
#define INSTR_CREATE_comiss(560,28091
#define INSTR_CREATE_comisd(562,28187
#define INSTR_CREATE_invept(564,28283
#define INSTR_CREATE_invvpid(566,28379
#define INSTR_CREATE_jecxz(578,28932
#define INSTR_CREATE_jcxz(587,29381
#define INSTR_CREATE_out_1(598,29863
#define INSTR_CREATE_out_4(601,29997
#define INSTR_CREATE_out_1_imm(614,30668
#define INSTR_CREATE_out_4_imm(616,30780
#define INSTR_CREATE_mwait(628,31305
#define INSTR_CREATE_invlpga(631,31445
#define INSTR_CREATE_wrmsr(635,31630
#define INSTR_CREATE_monitor(638,31797
#define INSTR_CREATE_xsetbv(641,31970
#define INSTR_CREATE_xrstor32(655,32671
#define INSTR_CREATE_xrstor64(665,33183
#define INSTR_CREATE_fcom(683,34074
#define INSTR_CREATE_fcomp(685,34183
#define INSTR_CREATE_fcomi(698,34887
#define INSTR_CREATE_fcomip(700,34998
#define INSTR_CREATE_fucomi(702,35111
#define INSTR_CREATE_fucomip(704,35224
#define INSTR_CREATE_fucom(706,35339
#define INSTR_CREATE_fucomp(708,35450
#define INSTR_CREATE_fucompp(718,35938
#define INSTR_CREATE_fcompp(721,36080
#define INSTR_CREATE_setcc(735,36643
#define INSTR_CREATE_sldt(745,37167
#define INSTR_CREATE_str(747,37247
#define INSTR_CREATE_vmptrst(749,37325
#define INSTR_CREATE_vmclear(751,37411
#define INSTR_CREATE_sgdt(760,37893
#define INSTR_CREATE_sidt(769,38369
#define INSTR_CREATE_smsw(771,38449
#define INSTR_CREATE_fxsave32(780,38927
#define INSTR_CREATE_fxsave64(789,39413
#define INSTR_CREATE_stmxcsr(791,39501
#define INSTR_CREATE_vstmxcsr(793,39587
#define INSTR_CREATE_fnstenv(814,40669
#define INSTR_CREATE_fnstcw(816,40755
#define INSTR_CREATE_fnsave(825,41237
#define INSTR_CREATE_fnstsw(827,41321
#define INSTR_CREATE_ffree(838,41810
#define INSTR_CREATE_ffreep(840,41892
#define INSTR_CREATE_lahf(851,42355
#define INSTR_CREATE_sysenter(853,42455
#define INSTR_CREATE_sysexit(855,42564
#define INSTR_CREATE_syscall(857,42671
#define INSTR_CREATE_salc(859,42778
#define INSTR_CREATE_arpl(873,43441
#define INSTR_CREATE_lea(883,43992
#define INSTR_CREATE_mov_ld(885,44078
#define INSTR_CREATE_mov_st(887,44170
#define INSTR_CREATE_mov_imm(889,44262
#define INSTR_CREATE_mov_seg(891,44356
#define INSTR_CREATE_mov_priv(893,44450
#define INSTR_CREATE_lar(895,44546
#define INSTR_CREATE_lsl(897,44632
#define INSTR_CREATE_movntps(899,44718
#define INSTR_CREATE_movntpd(901,44812
#define INSTR_CREATE_movd(903,44906
#define INSTR_CREATE_movq(905,44994
#define INSTR_CREATE_movdqu(907,45082
#define INSTR_CREATE_movdqa(909,45174
#define INSTR_CREATE_movzx(911,45266
#define INSTR_CREATE_movsx(913,45356
#define INSTR_CREATE_bsf(915,45446
#define INSTR_CREATE_bsr(917,45532
#define INSTR_CREATE_pmovmskb(919,45618
#define INSTR_CREATE_movups(921,45714
#define INSTR_CREATE_movss(923,45806
#define INSTR_CREATE_movupd(925,45896
#define INSTR_CREATE_movsd(927,45988
#define INSTR_CREATE_movlps(929,46078
#define INSTR_CREATE_movlpd(931,46170
#define INSTR_CREATE_movhps(933,46262
#define INSTR_CREATE_movhpd(935,46354
#define INSTR_CREATE_movaps(937,46446
#define INSTR_CREATE_movapd(939,46538
#define INSTR_CREATE_cvtpi2ps(941,46630
#define INSTR_CREATE_cvtsi2ss(943,46726
#define INSTR_CREATE_cvtpi2pd(945,46822
#define INSTR_CREATE_cvtsi2sd(947,46918
#define INSTR_CREATE_cvttps2pi(949,47014
#define INSTR_CREATE_cvttss2si(951,47112
#define INSTR_CREATE_cvttpd2pi(953,47210
#define INSTR_CREATE_cvttsd2si(955,47308
#define INSTR_CREATE_cvtps2pi(957,47406
#define INSTR_CREATE_cvtss2si(959,47502
#define INSTR_CREATE_cvtpd2pi(961,47598
#define INSTR_CREATE_cvtsd2si(963,47694
#define INSTR_CREATE_cvtps2pd(965,47790
#define INSTR_CREATE_cvtss2sd(967,47886
#define INSTR_CREATE_cvtpd2ps(969,47982
#define INSTR_CREATE_cvtsd2ss(971,48078
#define INSTR_CREATE_cvtdq2ps(973,48174
#define INSTR_CREATE_cvttps2dq(975,48270
#define INSTR_CREATE_cvtps2dq(977,48368
#define INSTR_CREATE_cvtdq2pd(979,48464
#define INSTR_CREATE_cvttpd2dq(981,48560
#define INSTR_CREATE_cvtpd2dq(983,48658
#define INSTR_CREATE_movmskps(985,48754
#define INSTR_CREATE_movmskpd(987,48850
#define INSTR_CREATE_sqrtps(989,48946
#define INSTR_CREATE_sqrtss(991,49038
#define INSTR_CREATE_sqrtpd(993,49130
#define INSTR_CREATE_sqrtsd(995,49222
#define INSTR_CREATE_rsqrtps(997,49314
#define INSTR_CREATE_rsqrtss(999,49408
#define INSTR_CREATE_rcpps(1001,49502
#define INSTR_CREATE_rcpss(1003,49592
#define INSTR_CREATE_lddqu(1005,49682
#define INSTR_CREATE_movsldup(1007,49772
#define INSTR_CREATE_movshdup(1009,49868
#define INSTR_CREATE_movddup(1011,49964
#define INSTR_CREATE_pshufb(1013,50058
#define INSTR_CREATE_popcnt(1015,50150
#define INSTR_CREATE_movntss(1017,50242
#define INSTR_CREATE_movntsd(1019,50336
#define INSTR_CREATE_movntq(1021,50430
#define INSTR_CREATE_movntdq(1023,50522
#define INSTR_CREATE_movnti(1025,50616
#define INSTR_CREATE_lzcnt(1027,50708
#define INSTR_CREATE_pmovsxbw(1029,50798
#define INSTR_CREATE_pmovsxbd(1031,50894
#define INSTR_CREATE_pmovsxbq(1033,50990
#define INSTR_CREATE_pmovsxdw(1035,51086
#define INSTR_CREATE_pmovsxwq(1037,51182
#define INSTR_CREATE_pmovsxdq(1039,51278
#define INSTR_CREATE_movntdqa(1041,51374
#define INSTR_CREATE_pmovzxbw(1043,51470
#define INSTR_CREATE_pmovzxbd(1045,51566
#define INSTR_CREATE_pmovzxbq(1047,51662
#define INSTR_CREATE_pmovzxdw(1049,51758
#define INSTR_CREATE_pmovzxwq(1051,51854
#define INSTR_CREATE_pmovzxdq(1053,51950
#define INSTR_CREATE_phminposuw(1055,52046
#define INSTR_CREATE_vmread(1057,52146
#define INSTR_CREATE_vmwrite(1059,52238
#define INSTR_CREATE_movsxd(1061,52332
#define INSTR_CREATE_movbe(1063,52424
#define INSTR_CREATE_aesimc(1065,52514
#define INSTR_CREATE_vmovups(1068,52616
#define INSTR_CREATE_vmovupd(1070,52710
#define INSTR_CREATE_vmovsldup(1072,52804
#define INSTR_CREATE_vmovddup(1074,52902
#define INSTR_CREATE_vmovlps(1076,52998
#define INSTR_CREATE_vmovlpd(1078,53092
#define INSTR_CREATE_vmovshdup(1080,53186
#define INSTR_CREATE_vmovhps(1082,53284
#define INSTR_CREATE_vmovhpd(1084,53378
#define INSTR_CREATE_vmovaps(1086,53472
#define INSTR_CREATE_vmovapd(1088,53566
#define INSTR_CREATE_vmovntps(1090,53660
#define INSTR_CREATE_vmovntpd(1092,53756
#define INSTR_CREATE_vcvttss2si(1094,53852
#define INSTR_CREATE_vcvttsd2si(1096,53952
#define INSTR_CREATE_vcvtss2si(1098,54052
#define INSTR_CREATE_vcvtsd2si(1100,54150
#define INSTR_CREATE_vmovmskps(1102,54248
#define INSTR_CREATE_vmovmskpd(1104,54346
#define INSTR_CREATE_vsqrtps(1106,54444
#define INSTR_CREATE_vsqrtpd(1108,54538
#define INSTR_CREATE_vrsqrtps(1110,54632
#define INSTR_CREATE_vrcpps(1112,54728
#define INSTR_CREATE_vcvtps2pd(1114,54820
#define INSTR_CREATE_vcvtpd2ps(1116,54918
#define INSTR_CREATE_vcvtdq2ps(1118,55016
#define INSTR_CREATE_vcvttps2dq(1120,55114
#define INSTR_CREATE_vcvtps2dq(1122,55214
#define INSTR_CREATE_vmovd(1124,55312
#define INSTR_CREATE_vmovq(1126,55402
#define INSTR_CREATE_vpmovmskb(1128,55492
#define INSTR_CREATE_vcvtdq2pd(1130,55590
#define INSTR_CREATE_vcvttpd2dq(1132,55688
#define INSTR_CREATE_vcvtpd2dq(1134,55788
#define INSTR_CREATE_vmovntdq(1136,55886
#define INSTR_CREATE_vmovdqu(1138,55982
#define INSTR_CREATE_vmovdqa(1140,56076
#define INSTR_CREATE_vlddqu(1142,56170
#define INSTR_CREATE_vpshufb(1144,56262
#define INSTR_CREATE_vpmovsxbw(1146,56356
#define INSTR_CREATE_vpmovsxbd(1148,56454
#define INSTR_CREATE_vpmovsxbq(1150,56552
#define INSTR_CREATE_vpmovsxdw(1152,56650
#define INSTR_CREATE_vpmovsxwq(1154,56748
#define INSTR_CREATE_vpmovsxdq(1156,56846
#define INSTR_CREATE_vmovntdqa(1158,56944
#define INSTR_CREATE_vpmovzxbw(1160,57042
#define INSTR_CREATE_vpmovzxbd(1162,57140
#define INSTR_CREATE_vpmovzxbq(1164,57238
#define INSTR_CREATE_vpmovzxdw(1166,57336
#define INSTR_CREATE_vpmovzxwq(1168,57434
#define INSTR_CREATE_vpmovzxdq(1170,57532
#define INSTR_CREATE_vphminposuw(1172,57630
#define INSTR_CREATE_vaesimc(1174,57732
#define INSTR_CREATE_vmovss(1176,57826
#define INSTR_CREATE_vmovsd(1178,57918
#define INSTR_CREATE_vcvtph2ps(1180,58010
#define INSTR_CREATE_vbroadcastss(1182,58108
#define INSTR_CREATE_vbroadcastsd(1184,58212
#define INSTR_CREATE_vbroadcastf128(1186,58316
#define INSTR_CREATE_movq2dq(1188,58424
#define INSTR_CREATE_movdq2q(1190,58518
#define INSTR_CREATE_inc(1203,59125
#define INSTR_CREATE_dec(1205,59208
#define INSTR_CREATE_bswap(1208,59334
#define INSTR_CREATE_not(1210,59421
#define INSTR_CREATE_neg(1212,59504
#define INSTR_CREATE_cdq(1224,60013
#define INSTR_CREATE_daa(1227,60147
#define INSTR_CREATE_das(1230,60279
#define INSTR_CREATE_aaa(1233,60411
#define INSTR_CREATE_aas(1236,60543
#define INSTR_CREATE_cwde(1239,60675
#define INSTR_CREATE_xlat(1242,60810
#define INSTR_CREATE_in_1(1254,61367
#define INSTR_CREATE_in_4(1257,61499
#define INSTR_CREATE_in_1_imm(1270,62151
#define INSTR_CREATE_in_4_imm(1272,62261
#define INSTR_CREATE_fcmovcc(1286,62878
#define INSTR_CREATE_fst(1299,63635
#define INSTR_CREATE_fstp(1301,63742
#define INSTR_CREATE_fld(1313,64361
#define INSTR_CREATE_fist(1324,65038
#define INSTR_CREATE_fistp(1326,65147
#define INSTR_CREATE_fisttp(1328,65258
#define INSTR_CREATE_fbstp(1330,65371
#define INSTR_CREATE_fild(1342,66055
#define INSTR_CREATE_fbld(1344,66164
#define INSTR_CREATE_fchs(1354,66664
#define INSTR_CREATE_fabs(1357,66800
#define INSTR_CREATE_ftst(1360,66936
#define INSTR_CREATE_fld1(1363,67074
#define INSTR_CREATE_fldl2t(1367,67299
#define INSTR_CREATE_fldl2e(1370,67461
#define INSTR_CREATE_fldpi(1373,67614
#define INSTR_CREATE_fldlg2(1376,67759
#define INSTR_CREATE_fldln2(1379,67921
#define INSTR_CREATE_fldz(1382,68069
#define INSTR_CREATE_f2xm1(1385,68207
#define INSTR_CREATE_fptan(1388,68345
#define INSTR_CREATE_fxtract(1391,68483
#define INSTR_CREATE_fsqrt(1394,68625
#define INSTR_CREATE_fsincos(1397,68763
#define INSTR_CREATE_frndint(1400,68905
#define INSTR_CREATE_fsin(1403,69047
#define INSTR_CREATE_fcos(1406,69183
#define INSTR_CREATE_fscale(1410,69320
#define INSTR_CREATE_fyl2x(1414,69495
#define INSTR_CREATE_fyl2xp1(1418,69697
#define INSTR_CREATE_fpatan(1422,69903
#define INSTR_CREATE_fprem(1426,70107
#define INSTR_CREATE_fprem1(1430,70309
#define INSTR_CREATE_pshufw(1448,71218
#define INSTR_CREATE_pshufd(1450,71318
#define INSTR_CREATE_pshufhw(1452,71418
#define INSTR_CREATE_pshuflw(1454,71520
#define INSTR_CREATE_pinsrw(1456,71622
#define INSTR_CREATE_pextrw(1458,71722
#define INSTR_CREATE_pextrb(1461,71833
#define INSTR_CREATE_pextrd(1463,71933
#define INSTR_CREATE_extractps(1465,72033
#define INSTR_CREATE_roundps(1467,72139
#define INSTR_CREATE_roundpd(1469,72241
#define INSTR_CREATE_roundss(1471,72343
#define INSTR_CREATE_roundsd(1473,72445
#define INSTR_CREATE_pinsrb(1475,72547
#define INSTR_CREATE_insertps(1477,72647
#define INSTR_CREATE_pinsrd(1479,72751
#define INSTR_CREATE_aeskeygenassist(1481,72851
#define INSTR_CREATE_vmovlps_NDS(1497,73709
#define INSTR_CREATE_vmovlpd_NDS(1499,73819
#define INSTR_CREATE_vunpcklps(1501,73929
#define INSTR_CREATE_vunpcklpd(1503,74039
#define INSTR_CREATE_vunpckhps(1505,74149
#define INSTR_CREATE_vunpckhpd(1507,74259
#define INSTR_CREATE_vmovhps_NDS(1509,74369
#define INSTR_CREATE_vmovhpd_NDS(1511,74479
#define INSTR_CREATE_vcvtsi2ss(1513,74589
#define INSTR_CREATE_vcvtsi2sd(1515,74699
#define INSTR_CREATE_vsqrtss(1517,74809
#define INSTR_CREATE_vsqrtsd(1519,74915
#define INSTR_CREATE_vrsqrtss(1521,75021
#define INSTR_CREATE_vrcpss(1523,75129
#define INSTR_CREATE_vandps(1525,75233
#define INSTR_CREATE_vandpd(1527,75337
#define INSTR_CREATE_vandnps(1529,75441
#define INSTR_CREATE_vandnpd(1531,75547
#define INSTR_CREATE_vorps(1533,75653
#define INSTR_CREATE_vorpd(1535,75755
#define INSTR_CREATE_vxorps(1537,75857
#define INSTR_CREATE_vxorpd(1539,75961
#define INSTR_CREATE_vaddps(1541,76065
#define INSTR_CREATE_vaddss(1543,76169
#define INSTR_CREATE_vaddpd(1545,76273
#define INSTR_CREATE_vaddsd(1547,76377
#define INSTR_CREATE_vmulps(1549,76481
#define INSTR_CREATE_vmulss(1551,76585
#define INSTR_CREATE_vmulpd(1553,76689
#define INSTR_CREATE_vmulsd(1555,76793
#define INSTR_CREATE_vcvtss2sd(1557,76897
#define INSTR_CREATE_vcvtsd2ss(1559,77007
#define INSTR_CREATE_vsubps(1561,77117
#define INSTR_CREATE_vsubss(1563,77221
#define INSTR_CREATE_vsubpd(1565,77325
#define INSTR_CREATE_vsubsd(1567,77429
#define INSTR_CREATE_vminps(1569,77533
#define INSTR_CREATE_vminss(1571,77637
#define INSTR_CREATE_vminpd(1573,77741
#define INSTR_CREATE_vminsd(1575,77845
#define INSTR_CREATE_vdivps(1577,77949
#define INSTR_CREATE_vdivss(1579,78053
#define INSTR_CREATE_vdivpd(1581,78157
#define INSTR_CREATE_vdivsd(1583,78261
#define INSTR_CREATE_vmaxps(1585,78365
#define INSTR_CREATE_vmaxss(1587,78469
#define INSTR_CREATE_vmaxpd(1589,78573
#define INSTR_CREATE_vmaxsd(1591,78677
#define INSTR_CREATE_vpunpcklbw(1593,78781
#define INSTR_CREATE_vpunpcklwd(1595,78893
#define INSTR_CREATE_vpunpckldq(1597,79005
#define INSTR_CREATE_vpacksswb(1599,79117
#define INSTR_CREATE_vpcmpgtb(1601,79227
#define INSTR_CREATE_vpcmpgtw(1603,79335
#define INSTR_CREATE_vpcmpgtd(1605,79443
#define INSTR_CREATE_vpackuswb(1607,79551
#define INSTR_CREATE_vpunpckhbw(1609,79661
#define INSTR_CREATE_vpunpckhwd(1611,79773
#define INSTR_CREATE_vpunpckhdq(1613,79885
#define INSTR_CREATE_vpackssdw(1615,79997
#define INSTR_CREATE_vpunpcklqdq(1617,80107
#define INSTR_CREATE_vpunpckhqdq(1619,80221
#define INSTR_CREATE_vpshufhw(1621,80335
#define INSTR_CREATE_vpshufd(1623,80443
#define INSTR_CREATE_vpshuflw(1625,80549
#define INSTR_CREATE_vpcmpeqb(1627,80657
#define INSTR_CREATE_vpcmpeqw(1629,80765
#define INSTR_CREATE_vpcmpeqd(1631,80873
#define INSTR_CREATE_vpextrw(1633,80981
#define INSTR_CREATE_vpsrlw(1635,81087
#define INSTR_CREATE_vpsrld(1637,81191
#define INSTR_CREATE_vpsrlq(1639,81295
#define INSTR_CREATE_vpaddq(1641,81399
#define INSTR_CREATE_vpmullw(1643,81503
#define INSTR_CREATE_vpsubusb(1645,81609
#define INSTR_CREATE_vpsubusw(1647,81717
#define INSTR_CREATE_vpminub(1649,81825
#define INSTR_CREATE_vpand(1651,81931
#define INSTR_CREATE_vpaddusb(1653,82033
#define INSTR_CREATE_vpaddusw(1655,82141
#define INSTR_CREATE_vpmaxub(1657,82249
#define INSTR_CREATE_vpandn(1659,82355
#define INSTR_CREATE_vpavgb(1661,82459
#define INSTR_CREATE_vpsraw(1663,82563
#define INSTR_CREATE_vpsrad(1665,82667
#define INSTR_CREATE_vpavgw(1667,82771
#define INSTR_CREATE_vpmulhuw(1669,82875
#define INSTR_CREATE_vpmulhw(1671,82983
#define INSTR_CREATE_vpsubsb(1673,83089
#define INSTR_CREATE_vpsubsw(1675,83195
#define INSTR_CREATE_vpminsw(1677,83301
#define INSTR_CREATE_vpor(1679,83407
#define INSTR_CREATE_vpaddsb(1681,83507
#define INSTR_CREATE_vpaddsw(1683,83613
#define INSTR_CREATE_vpmaxsw(1685,83719
#define INSTR_CREATE_vpxor(1687,83825
#define INSTR_CREATE_vpsllw(1689,83927
#define INSTR_CREATE_vpslld(1691,84031
#define INSTR_CREATE_vpsllq(1693,84135
#define INSTR_CREATE_vpmuludq(1695,84239
#define INSTR_CREATE_vpmaddwd(1697,84347
#define INSTR_CREATE_vpsadbw(1699,84455
#define INSTR_CREATE_vpsubb(1701,84561
#define INSTR_CREATE_vpsubw(1703,84665
#define INSTR_CREATE_vpsubd(1705,84769
#define INSTR_CREATE_vpsubq(1707,84873
#define INSTR_CREATE_vpaddb(1709,84977
#define INSTR_CREATE_vpaddw(1711,85081
#define INSTR_CREATE_vpaddd(1713,85185
#define INSTR_CREATE_vpsrldq(1715,85289
#define INSTR_CREATE_vpslldq(1717,85395
#define INSTR_CREATE_vhaddpd(1719,85501
#define INSTR_CREATE_vhaddps(1721,85607
#define INSTR_CREATE_vhsubpd(1723,85713
#define INSTR_CREATE_vhsubps(1725,85819
#define INSTR_CREATE_vaddsubpd(1727,85925
#define INSTR_CREATE_vaddsubps(1729,86035
#define INSTR_CREATE_vphaddw(1731,86145
#define INSTR_CREATE_vphaddd(1733,86251
#define INSTR_CREATE_vphaddsw(1735,86357
#define INSTR_CREATE_vpmaddubsw(1737,86465
#define INSTR_CREATE_vphsubw(1739,86577
#define INSTR_CREATE_vphsubd(1741,86683
#define INSTR_CREATE_vphsubsw(1743,86789
#define INSTR_CREATE_vpsignb(1745,86897
#define INSTR_CREATE_vpsignw(1747,87003
#define INSTR_CREATE_vpsignd(1749,87109
#define INSTR_CREATE_vpmulhrsw(1751,87215
#define INSTR_CREATE_vpabsb(1753,87325
#define INSTR_CREATE_vpabsw(1755,87429
#define INSTR_CREATE_vpabsd(1757,87533
#define INSTR_CREATE_vpmuldq(1759,87637
#define INSTR_CREATE_vpcmpeqq(1761,87743
#define INSTR_CREATE_vpackusdw(1763,87851
#define INSTR_CREATE_vpcmpgtq(1765,87961
#define INSTR_CREATE_vpminsb(1767,88069
#define INSTR_CREATE_vpminsd(1769,88175
#define INSTR_CREATE_vpminuw(1771,88281
#define INSTR_CREATE_vpminud(1773,88387
#define INSTR_CREATE_vpmaxsb(1775,88493
#define INSTR_CREATE_vpmaxsd(1777,88599
#define INSTR_CREATE_vpmaxuw(1779,88705
#define INSTR_CREATE_vpmaxud(1781,88811
#define INSTR_CREATE_vpmulld(1783,88917
#define INSTR_CREATE_vaesenc(1785,89023
#define INSTR_CREATE_vaesenclast(1787,89129
#define INSTR_CREATE_vaesdec(1789,89243
#define INSTR_CREATE_vaesdeclast(1791,89349
#define INSTR_CREATE_vpextrb(1793,89463
#define INSTR_CREATE_vpextrd(1795,89569
#define INSTR_CREATE_vextractps(1797,89675
#define INSTR_CREATE_vroundps(1799,89787
#define INSTR_CREATE_vroundpd(1801,89895
#define INSTR_CREATE_vaeskeygenassist(1803,90003
#define INSTR_CREATE_vmovss_NDS(1805,90127
#define INSTR_CREATE_vmovsd_NDS(1807,90235
#define INSTR_CREATE_vcvtps2ph(1809,90343
#define INSTR_CREATE_vmaskmovps(1811,90453
#define INSTR_CREATE_vmaskmovpd(1813,90565
#define INSTR_CREATE_vpermilps(1815,90677
#define INSTR_CREATE_vpermilpd(1817,90787
#define INSTR_CREATE_vextractf128(1819,90897
#define INSTR_CREATE_add(1833,91626
#define INSTR_CREATE_or(1835,91717
#define INSTR_CREATE_adc(1837,91807
#define INSTR_CREATE_sbb(1839,91898
#define INSTR_CREATE_and(1841,91989
#define INSTR_CREATE_sub(1843,92080
#define INSTR_CREATE_xor(1845,92171
#define INSTR_CREATE_punpcklbw(1847,92262
#define INSTR_CREATE_punpcklwd(1849,92365
#define INSTR_CREATE_punpckldq(1851,92468
#define INSTR_CREATE_packsswb(1853,92571
#define INSTR_CREATE_pcmpgtb(1855,92672
#define INSTR_CREATE_pcmpgtw(1857,92771
#define INSTR_CREATE_pcmpgtd(1859,92870
#define INSTR_CREATE_packuswb(1861,92969
#define INSTR_CREATE_punpckhbw(1863,93070
#define INSTR_CREATE_punpckhwd(1865,93173
#define INSTR_CREATE_punpckhdq(1867,93276
#define INSTR_CREATE_packssdw(1869,93379
#define INSTR_CREATE_punpcklqdq(1871,93480
#define INSTR_CREATE_punpckhqdq(1873,93585
#define INSTR_CREATE_pcmpeqb(1875,93690
#define INSTR_CREATE_pcmpeqw(1877,93789
#define INSTR_CREATE_pcmpeqd(1879,93888
#define INSTR_CREATE_psrlw(1881,93987
#define INSTR_CREATE_psrld(1883,94082
#define INSTR_CREATE_psrlq(1885,94177
#define INSTR_CREATE_paddq(1887,94272
#define INSTR_CREATE_pmullw(1889,94367
#define INSTR_CREATE_psubusb(1891,94464
#define INSTR_CREATE_psubusw(1893,94563
#define INSTR_CREATE_pminub(1895,94662
#define INSTR_CREATE_pand(1897,94759
#define INSTR_CREATE_paddusb(1899,94852
#define INSTR_CREATE_paddusw(1901,94951
#define INSTR_CREATE_pmaxub(1903,95050
#define INSTR_CREATE_pandn(1905,95147
#define INSTR_CREATE_pavgb(1907,95242
#define INSTR_CREATE_psraw(1909,95337
#define INSTR_CREATE_psrad(1911,95432
#define INSTR_CREATE_pavgw(1913,95527
#define INSTR_CREATE_pmulhuw(1915,95622
#define INSTR_CREATE_pmulhw(1917,95721
#define INSTR_CREATE_psubsb(1919,95818
#define INSTR_CREATE_psubsw(1921,95915
#define INSTR_CREATE_pminsw(1923,96012
#define INSTR_CREATE_por(1925,96109
#define INSTR_CREATE_paddsb(1927,96200
#define INSTR_CREATE_paddsw(1929,96297
#define INSTR_CREATE_pmaxsw(1931,96394
#define INSTR_CREATE_pxor(1933,96491
#define INSTR_CREATE_psllw(1935,96584
#define INSTR_CREATE_pslld(1937,96679
#define INSTR_CREATE_psllq(1939,96774
#define INSTR_CREATE_pmuludq(1941,96869
#define INSTR_CREATE_pmaddwd(1943,96968
#define INSTR_CREATE_psadbw(1945,97067
#define INSTR_CREATE_psubb(1947,97164
#define INSTR_CREATE_psubw(1949,97259
#define INSTR_CREATE_psubd(1951,97354
#define INSTR_CREATE_psubq(1953,97449
#define INSTR_CREATE_paddb(1955,97544
#define INSTR_CREATE_paddw(1957,97639
#define INSTR_CREATE_paddd(1959,97734
#define INSTR_CREATE_psrldq(1961,97829
#define INSTR_CREATE_pslldq(1963,97926
#define INSTR_CREATE_unpcklps(1965,98023
#define INSTR_CREATE_unpcklpd(1967,98124
#define INSTR_CREATE_unpckhps(1969,98225
#define INSTR_CREATE_unpckhpd(1971,98326
#define INSTR_CREATE_andps(1973,98427
#define INSTR_CREATE_andpd(1975,98522
#define INSTR_CREATE_andnps(1977,98617
#define INSTR_CREATE_andnpd(1979,98714
#define INSTR_CREATE_orps(1981,98811
#define INSTR_CREATE_orpd(1983,98904
#define INSTR_CREATE_xorps(1985,98997
#define INSTR_CREATE_xorpd(1987,99092
#define INSTR_CREATE_addps(1989,99187
#define INSTR_CREATE_addss(1991,99282
#define INSTR_CREATE_addpd(1993,99377
#define INSTR_CREATE_addsd(1995,99472
#define INSTR_CREATE_mulps(1997,99567
#define INSTR_CREATE_mulss(1999,99662
#define INSTR_CREATE_mulpd(2001,99757
#define INSTR_CREATE_mulsd(2003,99852
#define INSTR_CREATE_subps(2005,99947
#define INSTR_CREATE_subss(2007,100042
#define INSTR_CREATE_subpd(2009,100137
#define INSTR_CREATE_subsd(2011,100232
#define INSTR_CREATE_minps(2013,100327
#define INSTR_CREATE_minss(2015,100422
#define INSTR_CREATE_minpd(2017,100517
#define INSTR_CREATE_minsd(2019,100612
#define INSTR_CREATE_divps(2021,100707
#define INSTR_CREATE_divss(2023,100802
#define INSTR_CREATE_divpd(2025,100897
#define INSTR_CREATE_divsd(2027,100992
#define INSTR_CREATE_maxps(2029,101087
#define INSTR_CREATE_maxss(2031,101182
#define INSTR_CREATE_maxpd(2033,101277
#define INSTR_CREATE_maxsd(2035,101372
#define INSTR_CREATE_haddpd(2038,101478
#define INSTR_CREATE_haddps(2040,101575
#define INSTR_CREATE_hsubpd(2042,101672
#define INSTR_CREATE_hsubps(2044,101769
#define INSTR_CREATE_addsubpd(2046,101866
#define INSTR_CREATE_addsubps(2048,101967
#define INSTR_CREATE_pavgusb(2051,102081
#define INSTR_CREATE_pfadd(2053,102180
#define INSTR_CREATE_pfacc(2055,102275
#define INSTR_CREATE_pfcmpge(2057,102370
#define INSTR_CREATE_pfcmpgt(2059,102469
#define INSTR_CREATE_pfcmpeq(2061,102568
#define INSTR_CREATE_pfmin(2063,102667
#define INSTR_CREATE_pfmax(2065,102762
#define INSTR_CREATE_pfmul(2067,102857
#define INSTR_CREATE_pfrcp(2069,102952
#define INSTR_CREATE_pfrcpit1(2071,103047
#define INSTR_CREATE_pfrcpit2(2073,103148
#define INSTR_CREATE_pfrsqrt(2075,103249
#define INSTR_CREATE_pfrsqit1(2077,103348
#define INSTR_CREATE_pmulhrw(2079,103449
#define INSTR_CREATE_pfsub(2081,103548
#define INSTR_CREATE_pfsubr(2083,103643
#define INSTR_CREATE_pi2fd(2085,103740
#define INSTR_CREATE_pf2id(2087,103835
#define INSTR_CREATE_pi2fw(2089,103930
#define INSTR_CREATE_pf2iw(2091,104025
#define INSTR_CREATE_pfnacc(2093,104120
#define INSTR_CREATE_pfpnacc(2095,104217
#define INSTR_CREATE_pswapd(2097,104316
#define INSTR_CREATE_phaddw(2100,104425
#define INSTR_CREATE_phaddd(2102,104522
#define INSTR_CREATE_phaddsw(2104,104619
#define INSTR_CREATE_pmaddubsw(2106,104718
#define INSTR_CREATE_phsubw(2108,104821
#define INSTR_CREATE_phsubd(2110,104918
#define INSTR_CREATE_phsubsw(2112,105015
#define INSTR_CREATE_psignb(2114,105114
#define INSTR_CREATE_psignw(2116,105211
#define INSTR_CREATE_psignd(2118,105308
#define INSTR_CREATE_pmulhrsw(2120,105405
#define INSTR_CREATE_pabsb(2122,105506
#define INSTR_CREATE_pabsw(2124,105601
#define INSTR_CREATE_pabsd(2126,105696
#define INSTR_CREATE_crc32(2129,105802
#define INSTR_CREATE_packusdw(2131,105897
#define INSTR_CREATE_pcmpeqq(2133,105998
#define INSTR_CREATE_pcmpgtq(2135,106097
#define INSTR_CREATE_pminsb(2137,106196
#define INSTR_CREATE_pminsd(2139,106293
#define INSTR_CREATE_pminuw(2141,106390
#define INSTR_CREATE_pminud(2143,106487
#define INSTR_CREATE_pmaxsb(2145,106584
#define INSTR_CREATE_pmaxsd(2147,106681
#define INSTR_CREATE_pmaxuw(2149,106778
#define INSTR_CREATE_pmaxud(2151,106875
#define INSTR_CREATE_pmuldq(2153,106972
#define INSTR_CREATE_pmulld(2155,107069
#define INSTR_CREATE_aesenc(2157,107166
#define INSTR_CREATE_aesenclast(2159,107263
#define INSTR_CREATE_aesdec(2161,107368
#define INSTR_CREATE_aesdeclast(2163,107465
#define INSTR_CREATE_bts(2177,108233
#define INSTR_CREATE_btr(2179,108326
#define INSTR_CREATE_btc(2181,108419
#define INSTR_CREATE_cmovcc(2194,108983
#define INSTR_CREATE_imul_imm(2208,109720
#define INSTR_CREATE_imul(2217,110195
#define INSTR_CREATE_imul_1(2229,110900
#define INSTR_CREATE_imul_4(2232,111044
#define INSTR_CREATE_mul_1(2235,111219
#define INSTR_CREATE_mul_4(2238,111361
#define INSTR_CREATE_div_1(2241,111534
#define INSTR_CREATE_div_4(2244,111704
#define INSTR_CREATE_idiv_1(2248,111912
#define INSTR_CREATE_idiv_4(2251,112084
#define INSTR_CREATE_rol(2272,113252
#define INSTR_CREATE_ror(2274,113345
#define INSTR_CREATE_rcl(2276,113438
#define INSTR_CREATE_rcr(2278,113531
#define INSTR_CREATE_shl(2280,113624
#define INSTR_CREATE_shr(2282,113717
#define INSTR_CREATE_sar(2284,113810
#define INSTR_CREATE_maskmovq(2297,114447
#define INSTR_CREATE_maskmovdqu(2301,114642
#define INSTR_CREATE_vmaskmovdqu(2305,114844
#define INSTR_CREATE_fadd(2326,115979
#define INSTR_CREATE_fmul(2328,116072
#define INSTR_CREATE_fdiv(2330,116165
#define INSTR_CREATE_fdivr(2332,116258
#define INSTR_CREATE_fsub(2334,116353
#define INSTR_CREATE_fsubr(2336,116446
#define INSTR_CREATE_faddp(2349,117127
#define INSTR_CREATE_fmulp(2351,117243
#define INSTR_CREATE_fdivp(2353,117359
#define INSTR_CREATE_fdivrp(2355,117475
#define INSTR_CREATE_fsubp(2357,117593
#define INSTR_CREATE_fsubrp(2359,117709
#define INSTR_CREATE_fiadd(2371,118430
#define INSTR_CREATE_fimul(2374,118576
#define INSTR_CREATE_fidiv(2377,118722
#define INSTR_CREATE_fidivr(2380,118868
#define INSTR_CREATE_fisub(2383,119016
#define INSTR_CREATE_fisubr(2386,119162
#define INSTR_CREATE_ficom(2389,119310
#define INSTR_CREATE_ficomp(2392,119456
#define INSTR_CREATE_extrq(2405,120067
#define INSTR_CREATE_extrq_imm(2419,120868
#define INSTR_CREATE_insertq(2429,121403
#define INSTR_CREATE_insertq_imm(2445,122336
#define INSTR_CREATE_xsave32(2458,123026
#define INSTR_CREATE_xsave64(2461,123176
#define INSTR_CREATE_xsaveopt32(2464,123326
#define INSTR_CREATE_xsaveopt64(2467,123482
#define INSTR_CREATE_aam(2482,124261
#define INSTR_CREATE_aad(2485,124401
#define INSTR_CREATE_loopne(2498,125069
#define INSTR_CREATE_loope(2501,125217
#define INSTR_CREATE_loop(2504,125363
#define INSTR_CREATE_popf(2517,125935
#define INSTR_CREATE_ret(2521,126143
#define INSTR_CREATE_ret_far(2527,126443
#define INSTR_CREATE_iret(2533,126771
#define INSTR_CREATE_vpblendvb(2552,127743
#define INSTR_CREATE_vblendvps(2554,127863
#define INSTR_CREATE_vblendvpd(2556,127983
#define INSTR_CREATE_vcmpps(2573,128893
#define INSTR_CREATE_vcmpss(2575,129005
#define INSTR_CREATE_vcmppd(2577,129117
#define INSTR_CREATE_vcmpsd(2579,129229
#define INSTR_CREATE_vpinsrw(2581,129341
#define INSTR_CREATE_vshufps(2583,129455
#define INSTR_CREATE_vshufpd(2585,129569
#define INSTR_CREATE_vpalignr(2587,129683
#define INSTR_CREATE_vblendps(2589,129799
#define INSTR_CREATE_vblendpd(2591,129915
#define INSTR_CREATE_vpblendw(2593,130031
#define INSTR_CREATE_vpinsrb(2595,130147
#define INSTR_CREATE_vinsertps(2597,130261
#define INSTR_CREATE_vpinsrd(2599,130379
#define INSTR_CREATE_vdpps(2601,130493
#define INSTR_CREATE_vdppd(2603,130603
#define INSTR_CREATE_vmpsadbw(2605,130713
#define INSTR_CREATE_vpclmulqdq(2607,130829
#define INSTR_CREATE_vroundss(2609,130949
#define INSTR_CREATE_vroundsd(2611,131065
#define INSTR_CREATE_vperm2f128(2613,131181
#define INSTR_CREATE_vinsertf128(2615,131301
#define INSTR_CREATE_shld(2633,132244
#define INSTR_CREATE_shrd(2635,132347
#define INSTR_CREATE_pclmulqdq(2649,133144
#define INSTR_CREATE_blendps(2651,133255
#define INSTR_CREATE_blendpd(2653,133362
#define INSTR_CREATE_pblendw(2655,133469
#define INSTR_CREATE_shufps(2669,134286
#define INSTR_CREATE_shufpd(2671,134392
#define INSTR_CREATE_cmpps(2673,134497
#define INSTR_CREATE_cmpss(2675,134600
#define INSTR_CREATE_cmppd(2677,134703
#define INSTR_CREATE_cmpsd(2679,134806
#define INSTR_CREATE_palignr(2681,134909
#define INSTR_CREATE_dpps(2683,135016
#define INSTR_CREATE_dppd(2685,135117
#define INSTR_CREATE_mpsadbw(2687,135218
#define INSTR_CREATE_vfmadd132ps(2702,135995
#define INSTR_CREATE_vfmadd132pd(2704,136114
#define INSTR_CREATE_vfmadd213ps(2706,136233
#define INSTR_CREATE_vfmadd213pd(2708,136352
#define INSTR_CREATE_vfmadd231ps(2710,136471
#define INSTR_CREATE_vfmadd231pd(2712,136590
#define INSTR_CREATE_vfmadd132ss(2714,136709
#define INSTR_CREATE_vfmadd132sd(2716,136828
#define INSTR_CREATE_vfmadd213ss(2718,136947
#define INSTR_CREATE_vfmadd213sd(2720,137066
#define INSTR_CREATE_vfmadd231ss(2722,137185
#define INSTR_CREATE_vfmadd231sd(2724,137304
#define INSTR_CREATE_vfmaddsub132ps(2726,137423
#define INSTR_CREATE_vfmaddsub132pd(2728,137548
#define INSTR_CREATE_vfmaddsub213ps(2730,137673
#define INSTR_CREATE_vfmaddsub213pd(2732,137798
#define INSTR_CREATE_vfmaddsub231ps(2734,137923
#define INSTR_CREATE_vfmaddsub231pd(2736,138048
#define INSTR_CREATE_vfmsubadd132ps(2738,138173
#define INSTR_CREATE_vfmsubadd132pd(2740,138298
#define INSTR_CREATE_vfmsubadd213ps(2742,138423
#define INSTR_CREATE_vfmsubadd213pd(2744,138548
#define INSTR_CREATE_vfmsubadd231ps(2746,138673
#define INSTR_CREATE_vfmsubadd231pd(2748,138798
#define INSTR_CREATE_vfmsub132ps(2750,138923
#define INSTR_CREATE_vfmsub132pd(2752,139042
#define INSTR_CREATE_vfmsub213ps(2754,139161
#define INSTR_CREATE_vfmsub213pd(2756,139280
#define INSTR_CREATE_vfmsub231ps(2758,139399
#define INSTR_CREATE_vfmsub231pd(2760,139518
#define INSTR_CREATE_vfmsub132ss(2762,139637
#define INSTR_CREATE_vfmsub132sd(2764,139756
#define INSTR_CREATE_vfmsub213ss(2766,139875
#define INSTR_CREATE_vfmsub213sd(2768,139994
#define INSTR_CREATE_vfmsub231ss(2770,140113
#define INSTR_CREATE_vfmsub231sd(2772,140232
#define INSTR_CREATE_vfnmadd132ps(2774,140351
#define INSTR_CREATE_vfnmadd132pd(2776,140472
#define INSTR_CREATE_vfnmadd213ps(2778,140593
#define INSTR_CREATE_vfnmadd213pd(2780,140714
#define INSTR_CREATE_vfnmadd231ps(2782,140835
#define INSTR_CREATE_vfnmadd231pd(2784,140956
#define INSTR_CREATE_vfnmadd132ss(2786,141077
#define INSTR_CREATE_vfnmadd132sd(2788,141198
#define INSTR_CREATE_vfnmadd213ss(2790,141319
#define INSTR_CREATE_vfnmadd213sd(2792,141440
#define INSTR_CREATE_vfnmadd231ss(2794,141561
#define INSTR_CREATE_vfnmadd231sd(2796,141682
#define INSTR_CREATE_vfnmsub132ps(2798,141803
#define INSTR_CREATE_vfnmsub132pd(2800,141924
#define INSTR_CREATE_vfnmsub213ps(2802,142045
#define INSTR_CREATE_vfnmsub213pd(2804,142166
#define INSTR_CREATE_vfnmsub231ps(2806,142287
#define INSTR_CREATE_vfnmsub231pd(2808,142408
#define INSTR_CREATE_vfnmsub132ss(2810,142529
#define INSTR_CREATE_vfnmsub132sd(2812,142650
#define INSTR_CREATE_vfnmsub213ss(2814,142771
#define INSTR_CREATE_vfnmsub213sd(2816,142892
#define INSTR_CREATE_vfnmsub231ss(2818,143013
#define INSTR_CREATE_vfnmsub231sd(2820,143134
#define INSTR_CREATE_pblendvb(2834,143822
#define INSTR_CREATE_blendvps(2836,143953
#define INSTR_CREATE_blendvpd(2838,144084
#define INSTR_CREATE_pcmpistrm(2854,144947
#define INSTR_CREATE_pcmpistri(2856,145087
#define INSTR_CREATE_vpcmpistrm(2858,145226
#define INSTR_CREATE_vpcmpistri(2861,145374
#define INSTR_CREATE_ret_imm(2878,146253
#define INSTR_CREATE_ret_far_imm(2884,146565
#define INSTR_CREATE_pcmpestrm(2902,147564
#define INSTR_CREATE_pcmpestri(2905,147768
#define INSTR_CREATE_vpcmpestrm(2909,147981
#define INSTR_CREATE_vpcmpestri(2912,148187
#define INSTR_CREATE_rdtsc(2923,148670
#define INSTR_CREATE_lds(2937,149364
#define INSTR_CREATE_lss(2939,149478
#define INSTR_CREATE_les(2941,149592
#define INSTR_CREATE_lfs(2943,149706
#define INSTR_CREATE_lgs(2945,149820
#define INSTR_CREATE_pushf(2957,150362
#define INSTR_CREATE_rdmsr(2961,150589
#define INSTR_CREATE_rdpmc(2964,150756
#define INSTR_CREATE_xgetbv(2967,150923
#define INSTR_CREATE_pop(2979,151477
#define INSTR_CREATE_xchg(2994,152276
#define INSTR_CREATE_xadd(2996,152374
#define INSTR_CREATE_ins_1(3010,153001
#define INSTR_CREATE_ins_4(3014,153248
#define INSTR_CREATE_stos_1(3019,153515
#define INSTR_CREATE_stos_4(3023,153764
#define INSTR_CREATE_lods_1(3028,154034
#define INSTR_CREATE_lods_4(3033,154289
#define INSTR_CREATE_movs_1(3039,154566
#define INSTR_CREATE_movs_4(3045,154934
#define INSTR_CREATE_rep_ins_1(3053,155342
#define INSTR_CREATE_rep_ins_4(3058,155661
#define INSTR_CREATE_rep_stos_1(3064,156000
#define INSTR_CREATE_rep_stos_4(3069,156321
#define INSTR_CREATE_rep_lods_1(3075,156663
#define INSTR_CREATE_rep_lods_4(3081,156990
#define INSTR_CREATE_rep_movs_1(3088,157338
#define INSTR_CREATE_rep_movs_4(3095,157778
#define INSTR_CREATE_outs_1(3104,158258
#define INSTR_CREATE_outs_4(3108,158507
#define INSTR_CREATE_cmps_1(3113,158776
#define INSTR_CREATE_cmps_4(3119,159144
#define INSTR_CREATE_scas_1(3127,159552
#define INSTR_CREATE_scas_4(3131,159801
#define INSTR_CREATE_rep_outs_1(3136,160071
#define INSTR_CREATE_rep_outs_4(3141,160392
#define INSTR_CREATE_rep_cmps_1(3147,160733
#define INSTR_CREATE_rep_cmps_4(3154,161173
#define INSTR_CREATE_repne_cmps_1(3163,161653
#define INSTR_CREATE_repne_cmps_4(3170,162097
#define INSTR_CREATE_rep_scas_1(3179,162581
#define INSTR_CREATE_rep_scas_4(3184,162902
#define INSTR_CREATE_repne_scas_1(3190,163244
#define INSTR_CREATE_repne_scas_4(3195,163569
#define INSTR_CREATE_fxch(3211,164344
#define INSTR_CREATE_call(3223,164915
#define INSTR_CREATE_call_ind(3234,165517
#define INSTR_CREATE_call_far(3246,166207
#define INSTR_CREATE_call_far_ind(3258,166890
#define INSTR_CREATE_push(3268,167421
#define INSTR_CREATE_push_imm(3279,168031
#define INSTR_CREATE_cmpxchg_1(3296,169006
#define INSTR_CREATE_cmpxchg_4(3299,169169
#define INSTR_CREATE_leave(3305,169418
#define INSTR_CREATE_pusha(3319,170083
#define INSTR_CREATE_rdtscp(3322,170183
#define INSTR_CREATE_cpuid(3327,170393
#define INSTR_CREATE_cmpxchg8b(3340,171018
#define INSTR_CREATE_enter(3357,171947
#define INSTR_CREATE_popa(3369,172513
#define INSTR_CREATE_nop1byte(3384,173235
#define INSTR_CREATE_nop2byte(3385,173290
#define INSTR_CREATE_nop3byte(3386,173366
INSTR_CREATE_nop2byte_reg(3401,174162
INSTR_CREATE_nop3byte_reg(3433,175419
#define INSTR_CREATE_nopNbyte(3462,176500
#define INSTR_CREATE_RAW_pushf(3465,176634
#define INSTR_CREATE_RAW_popf(3466,176702
#define INSTR_CREATE_RAW_pusha(3467,176770
#define INSTR_CREATE_RAW_popa(3468,176838
#define INSTR_CREATE_RAW_nop(3469,176906
#define INSTR_CREATE_RAW_nop1byte(3470,176974
# define INSTR_CREATE_RAW_nop2byte(3472,177048
# define INSTR_CREATE_RAW_nop3byte(3473,177127
# define INSTR_CREATE_RAW_nop2byte(3475,177218
# define INSTR_CREATE_RAW_nop3byte(3476,177297
#define INSTR_CREATE_RAW_nopNbyte(3478,177389

x86/proc.c,1673
# undef ASSERT_TRUNCATE52,2373
# undef ASSERT_BITFIELD_TRUNCATE53,2397
# undef ASSERT_NOT_REACHED54,2430
# define ASSERT_TRUNCATE 55,2457
# define ASSERT_BITFIELD_TRUNCATE 56,2526
# define ASSERT_NOT_REACHED 57,2604
#define INTEL_EBX 61,2740
#define INTEL_EDX 62,2780
#define INTEL_ECX 63,2820
#define AMD_EBX 66,2915
#define AMD_EDX 67,2953
#define AMD_ECX 68,2991
size_t cache_line_size 75,3221
static ptr_uint_t mask;76,3250
static uint L1_icache_size 78,3328
static uint L1_dcache_size 79,3377
static uint L2_cache_size 80,3426
static uint vendor 82,3476
static uint family 83,3515
static uint type 84,3541
static uint model 85,3567
static uint stepping 86,3593
static features_t features 92,3755
static uint brand_string[brand_string98,3990
set_cache_size(101,4060
get_cache_sizes_amd(119,4743
get_cache_sizes_intel(144,5447
get_processor_specific_info(218,8509
proc_init(375,13724
proc_get_vendor(429,16117
proc_set_vendor(436,16174
proc_get_family(452,16571
uint proc_get_type(457,16617
uint proc_get_model(463,16710
uint proc_get_stepping(468,16759
proc_has_feature(474,16819
proc_get_all_feature_bits(497,17423
proc_get_brand_string(503,17489
proc_get_L1_icache_size(509,17568
proc_get_L1_dcache_size(515,17643
proc_get_L2_cache_size(521,17718
proc_get_cache_size_str(527,17791
proc_get_cache_line_size(546,18175
proc_is_cache_aligned(553,18288
proc_bump_to_end_of_cache_line(561,18498
proc_get_containing_page(571,18768
machine_cache_sync(579,18995
proc_fpstate_save_size(589,19192
proc_save_fpstate(615,20243
proc_restore_fpstate(649,21212
dr_insert_save_fpstate(679,22029
dr_insert_restore_fpstate(705,23285

x86/decodelib.c,664
options_t dynamo_options;48,2084
file_t our_stdout 52,2202
file_t our_stderr 53,2237
file_t our_stdin 54,2272
dr_get_stdout_file(59,2343
dr_get_stderr_file(65,2431
dr_get_stdin_file(71,2518
static uint vendor 77,2597
proc_get_vendor(80,2652
proc_set_vendor(87,2709
heap_alloc(99,2948
heap_free(105,3058
get_thread_private_dcontext(111,3172
external_error(117,3244
proc_save_fpstate(124,3391
proc_restore_fpstate(130,3444
dr_mcontext_as_priv_mcontext(136,3533
instrlist_meta_postinsert(144,3783
double_print(156,4173
print_to_buffer(178,4852
#undef vsnprintf181,4956
print_file(204,5641
#define MAX_PRINT_FILE_LEN 211,5886
os_write(233,6438

x86/loadtoconst.h,547
#define __LOADTOCONST_H_38,1851
#define NUM_VALUES_FOR_SPECULATION 40,1877
#define SAMPLE_PERCENT 41,1915
#define MAX_TRACES_WAITING_FOR_LTC 44,1947
struct ltc_mem_ref_data{ltc_mem_ref_data47,2005
    opnd_t opnd;48,2030
    int vals[vals49,2047
    int addresses[addresses50,2089
struct ltc_data{ltc_data52,2139
    struct ltc_mem_ref_data *mem_refs;mem_refs53,2156
    int num_mem_addresses;54,2195
    int num_mem_samples;55,2222
    bool ltc_already_optimized;56,2247
#define TRANSPOSE 95,4140
#define NO_TRANSPOSE 96,4163

x86/arch.h,10377
#define X86_ARCH_H45,2079
#define CS32_SELECTOR 55,2406
#define CS64_SELECTOR 56,2433
mixed_mode_enabled(60,2491
#define PROT_OFFS 88,3457
#define MC_OFFS 89,3515
#define XAX_OFFSET 91,3586
#define XBX_OFFSET 92,3659
#define XCX_OFFSET 93,3732
#define XDX_OFFSET 94,3805
#define XSI_OFFSET 95,3878
#define XDI_OFFSET 96,3951
#define XBP_OFFSET 97,4024
#define XSP_OFFSET 98,4097
#define XFLAGS_OFFSET 99,4170
#define PC_OFFSET 100,4246
# define R8_OFFSET 102,4329
# define R9_OFFSET 103,4401
# define R10_OFFSET 104,4473
# define R11_OFFSET 105,4546
# define R12_OFFSET 106,4619
# define R13_OFFSET 107,4692
# define R14_OFFSET 108,4765
# define R15_OFFSET 109,4838
#define XMM_OFFSET 111,4918
#define ERRNO_OFFSET 113,4992
#define AT_SYSCALL_OFFSET 114,5059
#define EXIT_REASON_OFFSET 115,5131
#define NEXT_TAG_OFFSET 117,5206
#define LAST_EXIT_OFFSET 118,5282
#define DSTACK_OFFSET 119,5359
#define FRAGMENT_FIELD_OFFSET 121,5434
#define PRIVATE_CODE_OFFSET 122,5516
#  define APP_ERRNO_OFFSET 126,5637
#  define APP_FLS_OFFSET 127,5715
#  define PRIV_FLS_OFFSET 128,5796
#  define APP_RPC_OFFSET 129,5878
#  define PRIV_RPC_OFFSET 130,5957
#  define APP_NLS_CACHE_OFFSET 131,6037
#  define PRIV_NLS_CACHE_OFFSET 132,6119
#  define APP_STACK_LIMIT_OFFSET 133,6202
# define NONSWAPPED_SCRATCH_OFFSET 135,6295
# define TRACE_HEAD_PC_OFFSET 139,6424
# define SYSENTER_STORAGE_OFFSET 143,6528
# define IGNORE_ENTEREXIT_OFFSET 144,6614
# define CLIENT_DATA_OFFSET 148,6732
#define COARSE_IB_SRC_OFFSET 151,6819
#define COARSE_DIR_EXIT_OFFSET 152,6906
#define OPSZ_SAVED_XMM 157,7034
#define REG_SAVED_XMM0 158,7093
preserve_xmm_caller_saved(163,7305
    IBL_UNLINKED,177,7901
    IBL_DELETE,178,7919
    IBL_FAR,180,7975
    IBL_FAR_UNLINKED,181,7988
    IBL_TRACE_CMP,184,8099
    IBL_TRACE_CMP_UNLINKED,185,8118
    IBL_LINKED,187,8153
    IBL_TEMPLATE,189,8174
    IBL_LINK_STATE_END190,8241
} ibl_entry_point_type_t;191,8264
    IBL_BB_SHARED,197,8526
    IBL_SOURCE_TYPE_START 198,8546
    IBL_SOURCE_TYPE_START = IBL_BB_SHARED,198,8546
    IBL_TRACE_SHARED,199,8589
    IBL_BB_PRIVATE,200,8611
    IBL_TRACE_PRIVATE,201,8631
    IBL_COARSE_SHARED,202,8654
    IBL_SOURCE_TYPE_END203,8710
} ibl_source_fragment_type_t;204,8734
#define DEFAULT_IBL_BB(206,8765
#define DEFAULT_IBL_TRACE(208,8857
#define IS_IBL_BB(210,8961
#define IS_IBL_TRACE(212,9054
#define IS_IBL_LINKED(214,9156
#define IS_IBL_UNLINKED(217,9288
#define IBL_FRAG_FLAGS(221,9443
get_ibl_entry_type(225,9589
    ibl_entry_point_type_t link_state;240,9907
    ibl_source_fragment_type_t source_fragment_type;241,9946
    ibl_branch_type_t branch_type;242,9999
} ibl_type_t;243,10034
    GENCODE_X64 251,10311
    GENCODE_X86,252,10332
    GENCODE_X86_TO_X64,253,10349
    GENCODE_FROM_DCONTEXT,254,10373
} gencode_mode_t;255,10400
# define FRAGMENT_GENCODE_MODE(256,10418
# define SHARED_GENCODE(259,10595
# define SHARED_GENCODE_MATCH_THREAD(260,10683
# define THREAD_GENCODE(261,10770
# define GENCODE_IS_X64(262,10851
# define GENCODE_IS_X86(263,10921
# define GENCODE_IS_X86_TO_X64(264,10991
# define SHARED_GENCODE(266,11081
# define THREAD_GENCODE(267,11144
# define SHARED_GENCODE_MATCH_THREAD(268,11202
#define NUM_XMM_REGS 271,11274
#define NUM_GP_REGS 272,11310
typedef struct _clean_call_info_t 275,11457
    void *callee;callee276,11493
    uint num_args;277,11511
    bool save_fpstate;278,11530
    bool opt_inline;279,11553
    bool should_align;280,11574
    bool save_all_regs;281,11597
    bool skip_save_aflags;282,11621
    bool skip_clear_eflags;283,11648
    uint num_xmms_skip;284,11676
    bool xmm_skip[xmm_skip285,11700
    uint num_regs_skip;286,11733
    bool reg_skip[reg_skip287,11757
    bool preserve_mcontext;288,11789
    void *callee_info;callee_info289,11870
    instrlist_t *ilist;ilist290,11919
} clean_call_info_t;291,11990
#define GET_IBL_TARGET_TABLE(321,13777
    FCACHE_ENTER_TARGET_SLOT 434,18681
    FCACHE_ENTER_TARGET_SLOT    = TLS_XAX_SLOT,434,18681
    MANGLE_NEXT_TAG_SLOT 442,19008
    MANGLE_NEXT_TAG_SLOT        = TLS_XAX_SLOT,442,19008
    DIRECT_STUB_SPILL_SLOT 443,19056
    DIRECT_STUB_SPILL_SLOT      = TLS_XAX_SLOT,443,19056
    MANGLE_RIPREL_SPILL_SLOT 444,19104
    MANGLE_RIPREL_SPILL_SLOT    = TLS_XAX_SLOT,444,19104
    INDIRECT_STUB_SPILL_SLOT 446,19233
    INDIRECT_STUB_SPILL_SLOT    = TLS_XBX_SLOT,446,19233
    MANGLE_FAR_SPILL_SLOT 447,19281
    MANGLE_FAR_SPILL_SLOT       = TLS_XBX_SLOT,447,19281
    FLOAT_PC_STATE_SLOT 451,19484
    FLOAT_PC_STATE_SLOT         = TLS_XBX_SLOT,451,19484
    MANGLE_XCX_SPILL_SLOT 452,19532
    MANGLE_XCX_SPILL_SLOT       = TLS_XCX_SLOT,452,19532
    DCONTEXT_BASE_SPILL_SLOT 457,19756
    DCONTEXT_BASE_SPILL_SLOT    = TLS_XDX_SLOT,457,19756
    PREFIX_XAX_SPILL_SLOT 458,19804
    PREFIX_XAX_SPILL_SLOT       = TLS_XAX_SLOT,458,19804
    HTABLE_STATS_SPILL_SLOT 460,19880
    HTABLE_STATS_SPILL_SLOT     = TLS_HTABLE_STATS_SLOT,460,19880
typedef struct patch_entry_t 471,20248
        instr_t *instr;instr473,20291
        size_t   offset;474,20364
    } where;475,20429
    ptr_uint_t value_location_offset;476,20442
    ushort patch_flags;479,20656
    short  instr_offset;480,20738
} patch_entry_t;482,20878
    MAX_PATCH_ENTRIES 485,20903
    PATCH_TAKE_ADDRESS 492,21188
    PATCH_TAKE_ADDRESS      = 0x01,x01492,21188
    PATCH_PER_THREAD 493,21286
    PATCH_PER_THREAD        = 0x02,x02493,21286
    PATCH_UNPROT_STAT 494,21387
    PATCH_UNPROT_STAT       = 0x04,x04494,21387
    PATCH_MARKER 496,21574
    PATCH_MARKER            = 0x08,x08496,21574
    PATCH_ASSEMBLE_ABSOLUTE 497,21651
    PATCH_ASSEMBLE_ABSOLUTE = 0x10,x10497,21651
    PATCH_OFFSET_VALID 499,21821
    PATCH_OFFSET_VALID      = 0x20,x20499,21821
    PATCH_UINT_SIZED 501,21972
    PATCH_UINT_SIZED        = 0x40,x40501,21972
    PATCH_TYPE_ABSOLUTE 505,22080
    PATCH_TYPE_ABSOLUTE     = 0x0,x0505,22080
    PATCH_TYPE_INDIRECT_XDI 506,22169
    PATCH_TYPE_INDIRECT_XDI = 0x1,x1506,22169
    PATCH_TYPE_INDIRECT_FS 507,22258
    PATCH_TYPE_INDIRECT_FS  = 0x2,x2507,22258
} patch_list_type_t;508,22346
typedef struct patch_list_t 510,22368
    ushort num_relocations;511,22398
    ushort /* patch_list_type_t */ type;512,22426
    patch_entry_t entry[entry513,22467
} patch_list_t;514,22511
typedef struct _far_ref_t 529,22985
    uint pc;531,23084
    ushort selector;532,23097
} far_ref_t;533,23118
typedef struct ibl_code_t 537,23222
    bool initialized:initialized538,23250
    bool thread_shared_routine:thread_shared_routine539,23317
    bool ibl_head_is_inlined:ibl_head_is_inlined540,23351
    byte *indirect_branch_lookup_routine;indirect_branch_lookup_routine541,23383
    byte *far_ibl;far_ibl543,23456
    byte *far_ibl_unlinked;far_ibl_unlinked544,23475
    byte *trace_cmp_entry;trace_cmp_entry547,23577
    byte *trace_cmp_unlinked;trace_cmp_unlinked548,23604
    bool x86_mode;549,23634
    bool x86_to_x64_mode;550,23695
    far_ref_t far_jmp_opnd;552,23862
    far_ref_t far_jmp_unlinked_opnd;553,23890
    byte *unlinked_ibl_entry;unlinked_ibl_entry555,23934
    byte *target_delete_entry;target_delete_entry556,23964
    uint ibl_routine_length;557,23995
    patch_list_t ibl_patch;559,24059
    ibl_branch_type_t branch_type;560,24087
    ibl_source_fragment_type_t source_fragment_type;561,24122
    byte *inline_ibl_stub_template;inline_ibl_stub_template564,24245
    patch_list_t ibl_stub_patch;565,24281
    uint inline_stub_length;566,24314
    uint inline_linkstub_first_offs;569,24445
    uint inline_linkstub_second_offs;570,24482
    uint inline_unlink_offs;571,24520
    uint inline_linkedjmp_offs;572,24549
    uint inline_unlinkedjmp_offs;573,24581
    uint unprot_stats_offset;577,24716
    uint hashtable_stats_offset;578,24747
    uint entry_stats_to_lookup_table_offset;581,24975
} ibl_code_t;583,25074
typedef struct _generated_code_t 593,25434
    byte *fcache_enter;fcache_enter594,25469
    byte *fcache_return;fcache_return595,25493
    byte *fcache_enter_return_end;fcache_enter_return_end597,25543
    ibl_code_t trace_ibl[trace_ibl600,25586
    ibl_code_t bb_ibl[bb_ibl601,25633
    ibl_code_t coarse_ibl[coarse_ibl602,25677
    byte *ibl_routines_end;ibl_routines_end604,25750
    ibl_code_t shared_syscall_code;609,25842
    byte *shared_syscall;shared_syscall610,25878
    byte *unlinked_shared_syscall;unlinked_shared_syscall611,25904
    byte *end_shared_syscall;end_shared_syscall612,25939
    uint sys_syscall_offs;617,26169
    uint sys_unlink_offs;619,26258
    byte *do_syscall;do_syscall621,26291
    uint do_syscall_offs;622,26313
    byte *fcache_enter_indirect;fcache_enter_indirect624,26398
    byte *do_callback_return;do_callback_return625,26431
    byte *do_int_syscall;do_int_syscall631,26684
    uint do_int_syscall_offs;632,26710
    byte *do_clone_syscall;do_clone_syscall633,26784
    uint do_clone_syscall_offs;634,26812
    byte *do_vmkuw_syscall;do_vmkuw_syscall636,26909
    uint do_vmkuw_syscall_offs;637,26937
    byte *new_thread_dynamo_start;new_thread_dynamo_start642,27115
    byte *trace_head_incr;trace_head_incr645,27186
    byte *pextrw;pextrw648,27246
    byte *pinsrw;pinsrw649,27264
    profile_t *profile;profile652,27314
    byte *reset_exit_stub;reset_exit_stub658,27538
    byte *fcache_return_coarse;fcache_return_coarse665,27865
    byte *trace_head_return_coarse;trace_head_return_coarse666,27897
    byte *client_ibl_xfer;client_ibl_xfer669,28004
    uint client_ibl_unlink_offs;670,28031
    byte *clean_call_save;clean_call_save673,28126
    byte *clean_call_restore;clean_call_restore674,28153
    bool thread_shared;676,28184
    bool writable;677,28208
    gencode_mode_t gencode_mode;679,28238
    byte *gen_start_pc;gen_start_pc687,28589
    byte *gen_end_pc;gen_end_pc688,28643
    byte *commit_end_pc;commit_end_pc689,28693
} generated_code_t;691,28817
is_shared_gencode(728,30436
get_shared_gencode(741,30774
#define USE_SHARED_GENCODE_ALWAYS(769,31811
#define USE_SHARED_GENCODE(773,32009
#define USE_SHARED_BB_IBL(777,32237
#define USE_SHARED_TRACE_IBL(780,32331
get_emitted_routines_code(786,32580

x86/decode_fast.h,30
#define DECODE_FAST_H40,1904

x86/disassemble.h,469
#define DISASSEMBLE_H41,1966
#define MAX_OPND_DIS_SZ 46,2089
#define MAX_INSTR_DIS_SZ 50,2229
#define MAX_PC_DIS_SZ 54,2447
    DR_DISASM_DR 67,2779
    DR_DISASM_DR             =  0x0,x067,2779
    DR_DISASM_INTEL 73,3016
    DR_DISASM_INTEL          =  0x1,x173,3016
    DR_DISASM_ATT 79,3250
    DR_DISASM_ATT            =  0x2,x279,3250
    DR_DISASM_STRICT_INVALID 88,3709
    DR_DISASM_STRICT_INVALID =  0x4,x488,3709
} dr_disasm_flags_t;89,3746

x86/decode_table.c,8761
const instr_info_t * const op_instr[op_instr68,3181
#undef Jb1104,53953
#define xx 1106,53964
#define Ap 1109,54060
#define Cr 1110,54148
#define Dr 1111,54177
#define Eb 1112,54206
#define Ew 1113,54233
#define Ev 1114,54260
#define Esv 1115,54299
#define Ed 1116,54377
#define Ep 1117,54404
#define Ed_q 1118,54445
#define Rd_Mb 1119,54478
#define Rd_Mw 1120,54512
#define Gb 1121,54546
#define Gw 1122,54573
#define Gv 1123,54600
#define Gz 1124,54639
#define Gd 1125,54673
#define Gd_q 1126,54700
#define Gr 1127,54733
#define Ib 1128,54762
#define Iw 1129,54789
#define Iv 1130,54816
#define Iz 1131,54855
#define Jb 1132,54889
#define Jz 1133,54916
#define Ma 1134,54953
#define Mp 1135,54987
#define Ms 1136,55028
#define Ob 1137,55058
#define Ov 1138,55085
#define Pd 1139,55124
#define Pq 1140,55151
#define Pd_q 1141,55178
#define Ppi 1142,55211
#define Nq 1143,55238
#define Qd 1144,55271
#define Qq 1145,55298
#define Qpi 1146,55325
#define Rr 1147,55352
#define Sw 1148,55381
#define Vq 1149,55408
#define Vdq 1150,55435
#define Vd_dq 1151,55463
#define Vq_dq 1152,55498
#define Vps 1153,55533
#define Vpd 1154,55561
#define Vss 1155,55589
#define Vsd 1156,55622
#define Ups 1157,55655
#define Upd 1158,55689
#define Udq 1159,55723
#define Uq_dq 1160,55757
#define Wq 1161,55798
#define Wdq 1162,55825
#define Wq_dq 1163,55853
#define Wps 1164,55888
#define Wpd 1165,55916
#define Wss 1166,55944
#define Wsd 1167,55977
#define Udq_Md 1168,56010
#define Xb 1169,56046
#define Xv 1170,56073
#define Xz 1171,56112
#define Yb 1172,56146
#define Yv 1173,56173
#define Yz 1174,56212
#define Vvs 1177,56267
#define Vvd 1178,56301
#define Vvdq 1179,56335
#define Vqq 1180,56370
#define Vdq_qq 1181,56398
#define Wvs 1182,56435
#define Wvd 1183,56469
#define Wvdq 1184,56503
#define Uvs 1185,56538
#define Uvd 1186,56578
#define Uss 1187,56618
#define Usd 1188,56657
#define Hvs 1189,56696
#define Hvd 1190,56730
#define Hss 1191,56764
#define Hsd 1192,56797
#define Hq_dq 1193,56830
#define Hdq 1194,56865
#define Hvdq 1195,56893
#define Wvq_dq 1196,56928
#define Mvs 1197,56970
#define Mvd 1198,57004
#define Mvdq 1199,57038
#define Ldq 1200,57073
#define Lvdq 1201,57138
#define Mb 1207,57350
#define Md 1208,57377
#define Md_q 1209,57404
#define Mw 1210,57438
#define Mm 1211,57465
#define Me 1212,57494
#define Mxsave 1213,57523
#define Mps 1214,57557
#define Mpd 1215,57586
#define Mss 1216,57615
#define Msd 1217,57643
#define Mq 1218,57671
#define Mdq 1219,57698
#define Mq_dq 1220,57727
#define Mv 1221,57762
#define Zb 1222,57801
#define Bq 1223,57831
#define Bdq 1224,57865
#define Kw 1225,57901
#define Kd 1226,57935
#define Kq 1227,57969
#define Kx 1228,58003
#define Ky 1229,58038
#define Kz 1230,58102
#define i_dx 1231,58167
#define i_Ev 1232,58204
#define i_Exi 1233,58251
#define i_Ep 1234,58299
#define i_xSP 1235,58348
#define i_iSP 1236,58391
#define i_xBP 1237,58435
#define i_iSPo1 1239,58523
#define i_vSPo2 1240,58576
#define i_xSPo1 1241,58627
#define i_xSPo8 1242,58679
#define i_xSPs8 1243,58731
#define i_vSPs2 1244,58783
#define i_vSPs3 1245,58834
#define i_xSPoN 1247,58914
#define c1 1248,58966
#define cF 1249,58993
#define Av 1252,59050
#define eAX 1256,59144
#define eCX 1257,59178
#define eDX 1258,59212
#define eBX 1259,59246
#define eSP 1260,59280
#define eBP 1261,59314
#define eSI 1262,59348
#define eDI 1263,59382
#define zAX 1266,59479
#define zCX 1267,59514
#define zDX 1268,59549
#define zBX 1269,59584
#define zSP 1270,59619
#define zBP 1271,59654
#define zSI 1272,59689
#define zDI 1273,59724
#define xAX 1278,59898
#define xCX 1279,59933
#define xDX 1280,59968
#define xBX 1281,60003
#define xSP 1282,60038
#define xBP 1283,60073
#define xSI 1284,60108
#define xDI 1285,60143
#define axSP 1290,60318
#define axBP 1291,60359
#define axCX 1293,60433
#define axSI 1295,60502
#define axDI 1296,60543
#define axAX 1297,60584
#define al_x 1300,60704
#define cl_x 1301,60737
#define dl_x 1302,60770
#define bl_x 1303,60803
#define ah_x 1304,60836
#define ch_x 1305,60869
#define dh_x 1306,60902
#define bh_x 1307,60935
#define eAX_x 1310,61055
#define eCX_x 1311,61094
#define eDX_x 1312,61133
#define eBX_x 1313,61172
#define eSP_x 1314,61211
#define eBP_x 1315,61250
#define eSI_x 1316,61289
#define eDI_x 1317,61328
#define xAX_x 1320,61451
#define xCX_x 1321,61491
#define xDX_x 1322,61531
#define xBX_x 1323,61571
#define xSP_x 1324,61611
#define xBP_x 1325,61651
#define xSI_x 1326,61691
#define xDI_x 1327,61731
#define uAX_x 1330,61851
#define uCX_x 1331,61891
#define uDX_x 1332,61931
#define uBX_x 1333,61971
#define uSP_x 1334,62011
#define uBP_x 1335,62051
#define uSI_x 1336,62091
#define uDI_x 1337,62131
#define ax 1339,62172
#define cx 1340,62200
#define dx 1341,62228
#define bx 1342,62256
#define sp 1343,62284
#define bp 1344,62312
#define si 1345,62340
#define di 1346,62368
#define al 1348,62397
#define cl 1349,62425
#define dl 1350,62453
#define bl 1351,62481
#define ah 1352,62509
#define ch 1353,62537
#define dh 1354,62565
#define bh 1355,62593
#define eax 1357,62622
#define ecx 1358,62652
#define edx 1359,62682
#define ebx 1360,62712
#define esp 1361,62742
#define ebp 1362,62772
#define esi 1363,62802
#define edi 1364,62832
#define xsp 1366,62863
#define xcx 1367,62893
#define cs 1369,62924
#define ss 1370,62953
#define ds 1371,62982
#define es 1372,63011
#define fs 1373,63040
#define gs 1374,63069
#define st0 1376,63099
#define st1 1377,63129
#define st2 1378,63159
#define st3 1379,63189
#define st4 1380,63219
#define st5 1381,63249
#define st6 1382,63279
#define st7 1383,63309
#define xmm0 1385,63340
#define no 1388,63385
#define mrm 1389,63404
#define xop 1390,63431
#define mrm_xop 1391,63490
#define xop_next 1392,63559
#define i64 1393,63597
#define o64 1394,63626
#define reqp 1395,63655
#define vex 1396,63688
#define rex 1397,63718
#define x 1400,63762
#define fRC 1401,63778
#define fRP 1402,63807
#define fRA 1403,63836
#define fRZ 1404,63865
#define fRS 1405,63894
#define fRT 1406,63923
#define fRI 1407,63952
#define fRD 1408,63981
#define fRO 1409,64010
#define fRN 1410,64039
#define fRR 1411,64068
#define fRX 1412,64097
#define fR6 1413,64127
#define fWC 1414,64155
#define fWP 1415,64185
#define fWA 1416,64215
#define fWZ 1417,64245
#define fWS 1418,64275
#define fWT 1419,64305
#define fWI 1420,64335
#define fWD 1421,64365
#define fWO 1422,64395
#define fWN 1423,64425
#define fWR 1424,64455
#define fWX 1425,64485
#define fW6 1426,64516
#define fINT 1430,64619
#define NA 1433,64709
#define END_LIST 1434,64722
#define tfb 1435,64742
#define tsb 1436,64777
#define tex 1437,64813
#define t38 1438,64848
#define t3a 1439,64886
#define tpe 1440,64924
#define tvex 1441,64966
#define modx 1442,65006
#define tre 1443,65046
#define tne 1444,65085
#define tfl 1445,65126
#define tfh 1446,65166
#define exop 1447,65207
#define t64e 1448,65247
#define trexb 1449,65287
#define trexw 1450,65330
#define tvex 1451,65373
const instr_info_t invalid_instr 1456,65532
const instr_info_t first_byte[first_byte1463,65772
const instr_info_t second_byte[second_byte1766,86572
const instr_info_t extensions[extensions2082,107428
const instr_info_t prefix_extensions[prefix_extensions2412,127189
const instr_info_t vex_extensions[vex_extensions3991,223762
const instr_info_t mod_extensions[mod_extensions4240,240258
const instr_info_t rm_extensions[rm_extensions4293,242806
const instr_info_t x64_extensions[x64_extensions4349,246014
const instr_info_t vex_prefix_extensions[vex_prefix_extensions4408,249616
const instr_info_t vex_L_extensions[vex_L_extensions4422,250252
const instr_info_t rex_b_extensions[rex_b_extensions4452,251674
const instr_info_t rex_w_extensions[rex_w_extensions4471,252628
const byte third_byte_38_index[third_byte_38_index4514,254647
const instr_info_t third_byte_38[third_byte_384533,255788
const byte third_byte_3a_index[third_byte_3a_index4647,264166
const instr_info_t third_byte_3a[third_byte_3a4666,265307
const instr_info_t vex_W_extensions[vex_W_extensions4713,268359
const instr_info_t rep_extensions[rep_extensions4818,275293
const instr_info_t repne_extensions[repne_extensions4884,279209
const instr_info_t float_low_modrm[float_low_modrm4928,282190
const instr_info_t float_high_modrm[float_high_modrm5007,287562
const byte suffix_index[suffix_index5571,332824
const instr_info_t suffix_extensions[suffix_extensions5590,333958
const instr_info_t extra_operands[extra_operands5630,336879

loader_shared.c,1050
static privmod_t *modlist;modlist54,2429
static privmod_t privmod_static[privmod_static71,2918
uint privmod_static_idx;73,3012
char search_paths[search_paths79,3257
uint search_paths_idx;81,3347
vm_area_vector_t *modlist_areas;modlist_areas84,3407
loader_init(99,3697
loader_exit(147,5699
loader_thread_init(164,6234
loader_thread_exit(207,8109
locate_and_load_private_library(239,9592
load_private_library(247,9842
unload_private_library(273,10524
in_private_library(286,10820
privload_lookup(294,10970
privload_lookup_by_base(318,11624
privload_insert(342,12260
privload_search_path_exists(405,14435
privload_read_drpath_file(421,14931
privload_load(475,17220
privload_unload(542,19898
# define LIB_SUBDIR 581,21438
# define LIB_SUBDIR 583,21472
#define EXT_SUBDIR 585,21507
privload_add_drext_path(587,21537
privload_load_finalize(624,23010
privload_has_thread_entry(657,23928
privload_modlist_initialized(663,24015
privload_next_module(669,24103
privload_first_module(676,24232
privload_print_modules(684,24378

hotpatch.h,260
#define _HOTPATCH_H_ 40,1831
    int vul_index;53,2284
    int set_index;56,2380
    int module_index;57,2399
    int ppoint_index;58,2471
} hotp_offset_match_t;59,2551
    CXT_TYPE_HOT_PATCH,69,3006
    CXT_TYPE_CORE_HOOK70,3030
} cxt_type_t;71,3053

fcache.c,7812
#define FCACHE_OPTION(69,2920
#define MAX_SINGLE_MULTIPLE 87,3832
#define MIN_EMPTY_HOLE(117,5192
#define MIN_UNIT_END_HOLE(127,5632
#define START_PC_ALIGNMENT 130,5744
#define SLOT_ALIGNMENT(138,6129
typedef struct _live_header_t 148,6643
    fragment_t *f;f150,6739
} live_header_t;151,6758
#define HEADER_SIZE(156,6926
#define HEADER_SIZE_FROM_CACHE(158,7021
typedef struct _empty_slot_t 186,8282
    cache_pc  start_pc;187,8313
    uint      flags;191,8515
    fragment_t  *next_fcache;next_fcache192,8536
    fragment_t  *prev_fcache;prev_fcache193,8614
    uint      fcache_size;194,8692
} empty_slot_t;197,8926
#define FRAG_EMPTY(201,9018
#define FRAG_START(203,9080
#define FRAG_START_ASSIGN(210,9437
#define FRAG_START_PADDING(219,9795
#define FRAG_HDR_START(226,10257
#define FRAG_SIZE(228,10341
#define FRAG_SIZE_ASSIGN(236,10754
#define FIFO_NEXT(248,11677
#define FIFO_NEXT_ASSIGN(252,11874
#define FIFO_PREV(261,12160
#define FIFO_PREV_ASSIGN(265,12357
#define FRAG_TAG(274,12643
# define FRAG_ID(278,12769
#define FIFO_UNIT(281,12853
#define USE_FIFO(288,13140
#define USE_FREE_LIST(289,13193
#define USE_FIFO_FOR_CACHE(291,13318
#define USE_FREE_LIST_FOR_CACHE(292,13366
static const uint FREE_LIST_SIZES[FREE_LIST_SIZES298,13631
#define FREE_LIST_SIZES_NUM 315,14407
typedef struct _free_list_header_t 336,15383
    struct _free_list_header_t *next;next337,15420
    ushort flags;350,16242
    ushort size;351,16260
    struct _free_list_header_t *prev;prev352,16277
} free_list_header_t;353,16315
typedef struct _free_list_footer_t 359,16538
    ushort size;360,16575
} free_list_footer_t;361,16592
#define MAX_FREE_ENTRY_SIZE 363,16615
#define FRAG_IS_FREE_LIST(369,16859
#define FRAG_NEXT_SLOT(374,17079
#define FRAG_NEXT_FREE(377,17207
#define MIN_FCACHE_SLOT_SIZE(384,17550
#define UNIT_RESERVED_SIZE(392,17782
typedef struct _fcache_unit_t 394,17862
    cache_pc start_pc;395,17894
    cache_pc end_pc;396,17963
    cache_pc cur_pc;397,18045
    cache_pc reserved_end_pc;398,18120
    size_t size;399,18193
    bool full;400,18273
    struct _fcache *cache;cache401,18349
    dcontext_t *dcontext;dcontext403,18465
    bool writable;405,18498
    bool was_trace;410,18717
    bool was_shared;411,18737
    profile_t *profile;profile412,18758
    bool pending_free;414,18789
    bool pending_flush;416,18884
    uint flushtime;418,18980
    struct _fcache_unit_t *next_global;next_global420,19139
    struct _fcache_unit_t *prev_global;prev_global421,19208
    struct _fcache_unit_t *next_local;next_local422,19277
} fcache_unit_t;423,19356
    HISTOGRAM_GRANULARITY 428,19431
    HISTOGRAM_MAX_SIZE 429,19462
typedef struct _fcache 437,19668
    bool is_trace:is_trace439,19766
    bool is_shared:is_shared440,19833
    bool is_local:is_local447,20097
    bool is_coarse:is_coarse450,20242
    fragment_t *fifo;fifo451,20264
    fcache_unit_t *units;units454,20488
    size_t size;457,20688
    mutex_t lock;462,20877
    const char *name;name465,20909
    bool consistent;466,20931
    coarse_info_t *coarse_info;coarse_info470,21094
    uint max_size;478,21446
    uint max_unit_size;479,21504
    uint max_quadrupled_unit_size;480,21528
    uint free_upgrade_size;481,21563
    uint init_unit_size;482,21591
    bool finite_cache;483,21616
    uint regen_param;484,21639
    uint replace_param;485,21661
    uint      num_regenerated;488,21722
    uint      num_replaced;489,21753
    int      wset_check;493,21973
    bool     record_wset;497,22120
    free_list_header_t *free_list[free_list499,22147
    uint free_stats_freed[free_stats_freed501,22216
    uint free_stats_reused[free_stats_reused502,22282
    uint free_stats_coalesced[free_stats_coalesced503,22349
    uint free_stats_split[free_stats_split504,22419
    uint free_stats_charge[free_stats_charge505,22498
} fcache_t;510,22769
typedef struct _fcache_thread_units_t 515,22862
    fcache_t *bb;bb516,22902
    fcache_t *trace;trace517,22948
    cache_pc pending_unmap_pc;519,23048
    size_t pending_unmap_size;520,23079
    bool pending_flush;522,23174
} fcache_thread_units_t;523,23198
#define ALLOC_DC(525,23224
#define PROTECT_CACHE(531,23477
#define CACHE_PROTECTED(537,23747
typedef struct _fcache_list_t 544,23994
    fcache_unit_t *units;units546,24080
    fcache_unit_t *dead;dead547,24152
    uint num_dead;551,24389
    fcache_unit_t *units_to_flush;units_to_flush559,24719
    fcache_unit_t *units_to_free;units_to_free563,24897
    fcache_unit_t *units_to_free_tail;units_to_free_tail564,24931
} fcache_list_t;565,24970
static fcache_list_t *allunits;allunits568,25037
static fcache_t *shared_cache_bb;shared_cache_bb574,25284
static fcache_t *shared_cache_trace;shared_cache_trace575,25318
vm_area_vector_t *fcache_unit_areas;fcache_unit_areas584,25703
    CACHE_BB 602,26506
    CACHE_TRACE,603,26524
    CACHE_NUM_TYPES,604,26541
#define STATS_FCACHE_ADD(609,26707
#define STATS_FCACHE_SUB(623,27406
#define STATS_FCACHE_MAX(626,27507
#define CHECK_PARAMS(666,28971
#define CHECK_WSET_PARAM(711,32318
fcache_check_option_compatibility(740,34437
fcache_reset_init(812,37781
fcache_init(837,38714
fcache_unit_profile_stop(869,39800
remove_unit_from_cache(903,40816
fcache_really_free_unit(923,41502
fcache_stats_exit(959,42737
fcache_reset_free(992,43916
fcache_exit(1054,45935
fcache_profile_exit(1089,46912
fcache_lookup_unit(1105,47273
fcache_fragment_pclookup(1114,47575
fcache_pc_in_live_unit(1176,49839
fcache_is_writable(1194,50321
fcache_change_fragment_protection(1205,50571
in_fcache(1246,52069
fcache_create_unit(1257,52349
fcache_free_unit(1390,57144
#define FCACHE_GUARDED(1462,60023
#define SET_CACHE_PARAMS(1468,60322
fcache_cache_init(1485,61390
fcache_cache_free(1557,64351
fcache_free_list_consistency(1600,65760
fcache_cache_stats(1676,69019
get_histogram_bucket(1746,72083
fcache_shift_fragments(1757,72381
cache_extend_commitment(1839,75760
fcache_increase_size(1863,76730
fcache_thread_reset_init(2063,85462
fcache_thread_init(2069,85537
fragment_lookup_deleted(2091,86336
fragment_lookup_cache_deleted(2106,86887
fcache_thread_exit_stats(2129,87714
fcache_thread_reset_free(2142,88068
fcache_thread_exit(2166,88931
print_fifo(2179,89367
verify_fifo(2193,89772
fifo_append(2220,90666
fifo_remove(2241,91356
fifo_prepend_empty(2270,92374
check_regen_replace_ratio(2331,94993
extend_unit_end(2423,99346
try_for_more_space(2467,101075
place_fragment(2638,109645
removed_fragment_stats(2686,111814
force_fragment_from_cache(2729,113524
replace_fragments(2748,114238
replace_fifo(2859,118479
find_free_list_bucket(2882,119216
free_list_footer_from_header(2893,119543
free_list_header_from_footer(2899,119725
remove_from_free_list(2905,119891
add_to_free_list(2934,120949
find_free_list_slot(3092,128351
add_fragment_common(3224,133639
fcache_shift_start_pc(3327,137762
fcache_return_extra_space(3374,139224
get_cache_for_new_fragment(3518,145783
fcache_add_fragment(3582,148382
fcache_remove_fragment(3633,150539
get_dcontext_for_fragment(3677,152132
fcache_is_flush_pending(3698,152924
append_units_to_free_list(3708,153207
chain_fragments_for_flush(3747,154576
fcache_flush_pending_units(3857,159504
fcache_free_pending_units(3965,163729
fcache_mark_units_for_free(3998,165007
fcache_flush_all_caches(4029,166148
fcache_reset_all_caches_proactively(4077,168373
schedule_reset(4314,179211
fcache_reset_cache(4327,179550
fcache_low_on_memory(4417,183061
get_fcache_coarse_info(4524,187819
fcache_coarse_cache_delete(4535,188168
coarse_frozen_cache_size(4556,189007
fcache_coarse_init_frozen(4577,189702
fcache_coarse_set_info(4598,190635

dispatch.c,601
found_client_sysenter(112,3350
dispatch(127,3963
is_stopping_point(226,8306
dispatch_enter_fcache_stats(254,9170
dispatch_enter_fcache(334,12884
enter_fcache(477,19310
handle_special_tag(516,20582
dispatch_at_stopping_point(535,21264
dispatch_enter_native(573,22609
dispatch_enter_dynamorio(626,25117
dispatch_exit_fcache(860,36661
dispatch_exit_fcache_stats(1088,47178
adjust_syscall_continuation(1577,68581
handle_system_call(1611,70106
handle_post_system_call(1867,81789
handle_callback_return(1925,83760
issue_last_system_call_from_app(1975,85950
transfer_to_dispatch(1997,86761

heap.c,10059
# define CHKLVL_MEMFILL 62,2473
static const uint BLOCK_SIZES[BLOCK_SIZES101,4441
#define BLOCK_TYPES 137,6292
#define HEADER_SIZE 155,7164
#define VARIABLE_SIZE(157,7236
#define MEMSET_HEADER(158,7292
#define GET_VARIABLE_ALLOCATION_SIZE(159,7367
#define HEAP_UNIT_MIN_SIZE 187,8908
#define HEAP_UNIT_MAX_SIZE 188,8975
#define GLOBAL_UNIT_MIN_SIZE 189,9038
#define GUARD_PAGE_ADJUSTMENT 191,9115
#define UNITROOM(194,9231
#define UNIT_RESERVED_ROOM(195,9288
#define UNIT_COMMIT_SIZE(199,9507
#define UNIT_RESERVED_SIZE(200,9571
#define UNIT_ALLOC_START(201,9647
#define UNIT_GET_START_PC(202,9711
#define UNIT_COMMIT_END(203,9787
#define UNIT_RESERVED_END(204,9826
#define UNITALLOC(207,9949
#define UNITOVERHEAD 211,10131
#define MAXROOM 214,10261
#define MAX_VALID_HEAP_ALLOCATION 217,10391
typedef struct _heap_unit_t 222,10542
    heap_pc start_pc;223,10572
    heap_pc end_pc;224,10638
    heap_pc cur_pc;225,10713
    heap_pc reserved_end_pc;226,10793
    bool in_vmarea_list;227,10883
    int      id;229,10975
    struct _heap_unit_t *next_local;next_local231,11033
    struct _heap_unit_t *next_global;next_global232,11105
    struct _heap_unit_t *prev_global;prev_global233,11172
} heap_unit_t;234,11239
typedef struct _heap_acct_t 237,11278
    size_t alloc_reuse[alloc_reuse238,11308
    size_t alloc_new[alloc_new239,11343
    size_t cur_usage[cur_usage240,11376
    size_t max_usage[max_usage241,11409
    size_t max_single[max_single242,11442
    uint num_alloc[num_alloc243,11476
} heap_acct_t;244,11507
typedef struct _thread_units_t 252,11748
    heap_unit_t *top_unit;top_unit253,11781
    heap_unit_t *cur_unit;cur_unit254,11849
    heap_pc free_list[free_list255,11908
    int num_units;257,11957
    dcontext_t *dcontext;dcontext259,12013
    bool writable;260,12068
    heap_acct_t acct;262,12156
} thread_units_t;264,12185
typedef struct _thread_heap_t 267,12232
    thread_units_t *local_heap;local_heap268,12264
    thread_units_t *nonpersistent_heap;nonpersistent_heap269,12296
} thread_heap_t;270,12336
typedef struct _heap_t 275,12473
    heap_unit_t *units;units276,12498
    heap_unit_t *dead;dead277,12560
    uint num_dead;281,12792
} heap_t;282,12811
static bool heap_exiting 285,12868
vm_area_vector_t *landing_pad_areas;landing_pad_areas317,14363
static app_pc lpad_temp_writable_start;320,14487
static size_t lpad_temp_writable_size;321,14527
safe_to_allocate_or_free_heap_units(329,14739
const char * whichheap_name[whichheap_name342,15133
# define ACCOUNT_FOR_ALLOC_HELPER(387,16368
# define ACCOUNT_FOR_ALLOC(397,16968
# define ACCOUNT_FOR_FREE(404,17326
# define ACCOUNT_FOR_ALLOC(411,17556
# define ACCOUNT_FOR_FREE(412,17618
typedef byte *vm_addr_t;vm_addr_t415,17669
static byte *heap_allowable_region_start heap_allowable_region_start419,17787
static byte *heap_allowable_region_end heap_allowable_region_end420,17850
request_region_be_heap_reachable(436,18632
vmcode_get_reachable_region(509,22274
    OOM_INIT 537,23539
    OOM_INIT    = 0x1,x1537,23539
    OOM_RESERVE 541,23671
    OOM_RESERVE = 0x2,x2541,23671
    OOM_COMMIT 550,24096
    OOM_COMMIT  = 0x4,x4550,24096
    OOM_EXTEND 559,24514
    OOM_EXTEND  = 0x8,x8559,24514
} oom_source_t;560,24537
enum {VMM_BLOCK_SIZE VMM_BLOCK_SIZE566,24706
enum {VMM_BLOCK_SIZE = IF_WINDOWS_ELSE(566,24706
    MAX_VMM_HEAP_UNIT_SIZE 582,25348
    MIN_VMM_HEAP_UNIT_SIZE 587,25590
    MIN_VMM_HEAP_UNIT_SIZE = VMM_BLOCK_SIZE 587,25590
    vm_addr_t start_addr;591,25656
    vm_addr_t end_addr;592,25717
    vm_addr_t alloc_start;593,25803
    size_t    alloc_size;594,25875
    uint    num_blocks;598,26061
    mutex_t   lock;600,26145
    uint    num_free_blocks;604,26458
} vm_heap_t;612,26943
typedef struct _heap_management_t 618,27131
    vm_heap_t vmheap;622,27332
    heap_t heap;623,27354
    thread_units_t global_units;625,27402
    thread_units_t global_nonpersistent_units;626,27435
    bool global_heap_writable;627,27482
    thread_units_t global_unprotected_units;628,27513
} heap_management_t;629,27558
static heap_management_t temp_heapmgt;634,27718
static heap_management_t *heapmgt heapmgt635,27757
static bool vmm_heap_exited 637,27843
vmm_addr_to_block(643,28082
vmm_block_to_addr(651,28296
vmm_in_same_block(658,28473
vmm_dump_map(666,28679
#define VMM_DUMP_MAP_LOG(683,29289
print_vmm_heap_data(702,30030
vmm_heap_initialize_unusable(713,30362
vmm_heap_unit_init(721,30516
vmm_heap_unit_exit(835,35397
vmm_is_reserved_unit(873,36811
is_vmm_reserved_address(890,37452
get_vmm_heap_bounds(905,37992
vmcode_get_start(917,38368
vmcode_get_end(925,38483
vmcode_unreachable_pc(933,38594
rel32_reachable_from_vmcode(944,38813
vmm_heap_reserve_blocks(965,39594
vmm_heap_free_blocks(1015,41175
at_reset_at_vmm_limit(1047,42209
vmm_heap_reserve(1060,42708
vmm_heap_commit(1171,47862
END_DATA_SECTION(1265,52920
vmm_heap_decommit(1305,54604
vmm_heap_alloc(1318,55106
vmm_heap_init_constraints(1331,55541
vmm_heap_init(1367,57170
vmm_heap_exit(1376,57373
heap_check_option_compatibility(1441,60354
heap_reset_init(1479,62103
heap_init(1489,62325
really_free_unit(1551,64985
heap_reset_free(1564,65518
heap_exit(1605,66860
heap_low_on_memory(1674,69172
get_oom_source_name(1720,71009
silent_oom_for_process(1739,71480
report_low_on_memory(1764,72345
account_for_memory(1804,74307
update_dynamo_areas_on_release(1834,75500
lockwise_safe_to_allocate_memory(1858,76452
get_real_memory(1872,76935
release_memory_and_update_areas(1914,78632
release_real_memory(1935,79553
extend_commitment(1950,80010
get_guarded_real_memory(1977,81179
release_guarded_real_memory(2033,83475
heap_mmap_ex(2060,84323
heap_mmap_reserve(2089,85563
heap_mmap_extend_commitment(2100,85942
heap_mmap_retract_commitment(2113,86355
heap_mmap_reserve_post_stack(2126,86827
heap_munmap_post_stack(2253,92680
heap_mmap(2289,94283
heap_munmap_ex(2296,94391
heap_munmap(2317,95089
# define STACK_GUARD_PAGES 2323,95198
stack_alloc(2331,95410
stack_free(2369,96643
is_stack_overflow(2386,97153
map_file(2405,97822
unmap_file(2422,98417
heap_vmareas_synch_units(2459,100058
common_global_heap_alloc(2583,106325
common_global_heap_free(2605,107084
global_heap_alloc(2631,107937
global_heap_free(2640,108207
global_heap_realloc(2653,108681
heap_create_unit(2668,109258
heap_free_unit(2758,112643
find_heap_unit(2851,116896
threadunits_init(2872,117881
#define MAX_5_DIGIT 2891,118396
print_tu_heap_statistics(2893,118434
print_heap_statistics(2923,119705
add_heapacct_to_global_stats(2958,121225
threadunits_exit(2982,122270
heap_thread_reset_init(3079,126264
heap_thread_init(3089,126556
heap_thread_reset_free(3106,127246
heap_thread_exit(3121,127740
print_free_list(3137,128355
common_heap_extend_commitment(3160,129023
heap_unit_extend_commitment(3200,130860
common_heap_alloc(3211,131217
heap_alloc(3519,145641
common_heap_free(3535,146139
heap_free(3694,152994
bool local_heap_protected(3707,153397
protect_local_units_helper(3715,153658
protect_threadunits(3728,154045
protect_local_heap(3738,154308
protect_global_heap(3750,154719
global_unprotected_heap_alloc(3793,156103
global_unprotected_heap_free(3803,156448
nonpersistent_heap_alloc(3811,156746
nonpersistent_heap_free(3832,157495
typedef struct _special_heap_unit_t 3865,158746
    heap_pc alloc_pc;3866,158784
    heap_pc start_pc;3867,158847
    heap_pc end_pc;3868,158924
    heap_pc cur_pc;3869,158995
    heap_pc reserved_end_pc;3870,159071
    profile_t *profile;profile3872,159182
    int      id;3875,159226
    struct _special_heap_unit_t *next;next3877,159284
} special_heap_unit_t;3878,159323
#define SPECIAL_UNIT_COMMIT_SIZE(3880,159347
#define SPECIAL_UNIT_RESERVED_SIZE(3881,159413
#define SPECIAL_UNIT_HEADER_INLINE(3882,159490
typedef struct _cfree_header 3885,159613
    struct _cfree_header *next_cfree;next_cfree3886,159644
    uint count;3887,159682
} cfree_header_t;3888,159698
typedef struct _special_units_t 3890,159717
    special_heap_unit_t *top_unit;top_unit3891,159751
    special_heap_unit_t *cur_unit;cur_unit3892,159827
    uint block_size;3893,159894
    heap_pc free_list;3894,159949
    cfree_header_t *cfree_list;cfree_list3895,159972
    int num_units;3897,160017
    bool writable:writable3899,160076
    bool executable:executable3900,160142
    bool use_lock:use_lock3904,160303
    bool in_iterator:in_iterator3905,160324
    bool persistent:persistent3906,160348
    mutex_t lock;3907,160371
    vm_area_vector_t *heap_areas;heap_areas3912,160526
    void *lookup_retval;lookup_retval3913,160560
    struct _special_units_t *next;next3916,160611
    heap_acct_t acct;3920,160760
} special_units_t;3922,160789
get_special_heap_header_size(3938,161479
static inline bool special_heap_profile_enabled(3945,161587
get_prot(3954,161812
special_unit_extend_commitment(3962,161983
special_heap_create_unit(3976,162571
special_heap_init_internal(4065,166117
special_heap_init(4134,168986
special_heap_pclookup_init(4143,169387
special_heap_set_vector_data(4154,169933
special_heap_set_unit_end(4174,170669
special_heap_profile_stop(4188,171067
special_heap_profile_exit(4207,171626
special_heap_exit(4229,172296
special_heap_calloc(4305,175173
special_heap_alloc(4410,179434
special_heap_cfree(4416,179522
special_heap_free(4447,180522
special_heap_iterator_start(4465,181349
special_heap_iterator_hasnext(4477,181653
special_heap_iterator_next(4494,182158
special_heap_iterator_stop(4516,182854
special_heap_delete_lock(4537,183557
    byte *start;start4587,185775
    byte *end;end4588,185830
    byte *commit_end;commit_end4589,185883
    byte *cur_ptr;cur_ptr4590,185960
    bool allocated;4591,186037
} landing_pad_area_t;4592,186105
alloc_landing_pad(4604,186597
trim_landing_pad(4805,196678
landing_pads_to_executable_areas(4827,197498
release_landing_pad_mem(4878,199441

options.h,3755
#define _OPTIONS_H_44,1923
    OPTION_ENABLED 57,2243
    OPTION_ENABLED     = 0x1,x157,2243
    OPTION_DISABLED 58,2314
    OPTION_DISABLED    = 0x0,x058,2314
    OPTION_BLOCK 75,3256
    OPTION_BLOCK       = 0x2,x275,3256
    OPTION_NO_BLOCK 76,3286
    OPTION_NO_BLOCK    = 0x0,x076,3286
    OPTION_HANDLING 79,3403
    OPTION_HANDLING    = 0x4,x479,3403
    OPTION_NO_HANDLING 80,3483
    OPTION_NO_HANDLING = 0x0,x080,3483
    OPTION_REPORT 83,3600
    OPTION_REPORT      = 0x8,x883,3600
    OPTION_NO_REPORT 84,3675
    OPTION_NO_REPORT   = 0x0,x084,3675
    OPTION_BLOCK_IGNORE_DETECT 87,3811
    OPTION_BLOCK_IGNORE_DETECT  = 0x20,x2087,3811
    OPTION_CUSTOM 90,3938
    OPTION_CUSTOM      = 0x100,x10090,3938
    OPTION_NO_CUSTOM 91,4027
    OPTION_NO_CUSTOM   = 0x0,x091,4027
} security_option_t;92,4116
    HOOKED_TRAMPOLINE_DIE 97,4231
    HOOKED_TRAMPOLINE_SQUASH 98,4302
    HOOKED_TRAMPOLINE_CHAIN 99,4387
    HOOKED_TRAMPOLINE_HOOK_DEEPER 100,4471
    HOOKED_TRAMPOLINE_MAX 101,4555
    APPFAULT_FAULT 109,4786
    APPFAULT_FAULT    = 0x0001,x0001109,4786
    APPFAULT_CRASH 110,4867
    APPFAULT_CRASH    = 0x0002,x0002110,4867
#define uint_size 118,5189
#define uint_time 119,5212
#define uint_addr 121,5306
#define ISSTRING_bool 127,5509
#define ISSTRING_uint 128,5533
#define ISSTRING_uint_size 129,5557
#define ISSTRING_uint_time 130,5586
#define ISSTRING_ptr_uint_t 131,5615
#define ISSTRING_pathstring_t 132,5645
#define ISSTRING_liststring_t 133,5677
    OP_PCACHE_NOP 137,5783
    OP_PCACHE_LOCAL 138,5836
    OP_PCACHE_GLOBAL 142,6081
} op_pcache_t;143,6158
#define OPTION_STRING(155,6762
#define EMPTY_STRING 156,6813
#define OPTION_COMMAND(157,6864
#define OPTION_COMMAND_INTERNAL(163,7229
enum option_is_internal 169,7589
#undef OPTION_COMMAND172,7643
#undef OPTION_COMMAND_INTERNAL173,7665
#undef OPTION_STRING174,7696
#undef EMPTY_STRING175,7717
#define OPTION_STRING(178,7770
#define EMPTY_STRING 179,7797
#  define OPTION_COMMAND_INTERNAL(183,7945
#  define OPTION_COMMAND_INTERNAL(187,8135
#define OPTION_COMMAND(191,8313
typedef struct _options_t 194,8496
} options_t;196,8549
#undef OPTION_COMMAND198,8563
#undef OPTION_COMMAND_INTERNAL199,8585
#  define OPTION_COMMAND(203,8705
#  define OPTION_COMMAND_INTERNAL(205,8857
typedef struct _internal_options_t 208,9046
} internal_options_t;210,9108
#  undef OPTION_COMMAND211,9130
#  undef OPTION_COMMAND_INTERNAL212,9154
#undef uint_size215,9195
#undef uint_time216,9212
#undef uint_addr217,9229
#define IS_OPTION_INTERNAL(232,9749
#define IS_OPTION_STRING(233,9810
#define DEFAULT_OPTION_VALUE(236,9995
#  define DEFAULT_INTERNAL_OPTION_VALUE 239,10182
#  define DEFAULT_INTERNAL_OPTION_VALUE(241,10249
#define SET_DEFAULT_VALUE(248,10593
#define SYNCHRONIZE_DYNAMIC_OPTION(277,11264
#define SHARED_FRAGMENTS_ENABLED(313,12496
#define SCRATCH_ALWAYS_TLS(322,12908
#define PRIVATE_TRACES_ENABLED(326,13087
#define SHARED_BB_IB_TARGETS(330,13227
#define SHARED_BB_ONLY_IB_TARGETS(340,13646
#define SHARED_IB_TARGETS(344,13791
#define SHARED_IBT_TABLES_ENABLED(348,13930
#define TRACEDUMP_ENABLED(351,14054
#define RUNNING_WITHOUT_CODE_CACHE(357,14283
# define CLIENT_OR_STANDALONE(361,14469
# define CLIENT_OR_STANDALONE(364,14582
#define IS_STRING_OPTION_EMPTY(375,14950
#define IS_LISTSTRING_OPTION_FORALL(380,15143
#  define IS_INTERNAL_STRING_OPTION_EMPTY(383,15247
#  define IS_INTERNAL_STRING_OPTION_EMPTY(385,15326
#define COARSE_FILL_IBL_MASK(389,15467
string_option_read_lock(393,15597
string_option_read_unlock(397,15678
    LIST_NO_MATCH 402,15760
    LIST_ON_DEFAULT 403,15814
    LIST_ON_APPEND 404,15839
} list_default_or_append_t;405,15864

buildmark.c,190
const char dynamorio_buildmark[dynamorio_buildmark38,1802
const char dynamorio_buildmark[dynamorio_buildmark40,1866
const char dynamorio_version_string[dynamorio_version_string43,1920

io.c,1431
#  define _EXTERNALIZE_CTYPE_INLINES_TOP_50,2199
# undef CLIENT_ASSERT59,2421
# define CLIENT_ASSERT(60,2443
#define VA_ARG_CHAR2INT63,2517
#define BUF_SIZE 64,2541
const static double pos_inf 67,2574
const static double neg_inf 68,2613
const static double zerof 74,2860
# define pos_inf 75,2893
# define neg_inf 76,2922
double2int_trunc(81,2997
double2int(94,3260
utf8_to_utf16(131,4590
utf16_to_utf8(221,8256
utf16_to_utf8_size(303,10918
#undef IOX_WIDE_CHAR314,11240
#define IOX_WIDE_CHAR317,11279
typedef enum _specifier_t 324,11441
    SPEC_INT,325,11469
    SPEC_CHAR,326,11483
    SPEC_STRING327,11498
} specifer_t;328,11514
typedef enum _int_sz_t 330,11529
    SZ_SHORT,331,11554
    SZ_INT,332,11568
    SZ_LONG,333,11580
    SZ_LONGLONG,334,11593
    SZ_PTR 336,11647
    SZ_PTR = SZ_LONGLONG336,11647
    SZ_PTR 338,11678
    SZ_PTR = SZ_LONG338,11678
} int_sz_t;340,11706
our_isspace(347,11956
parse_int(354,12093
our_vsscanf(436,14240
our_sscanf(632,21008
# define MAPS_LINE_FORMAT4 652,21556
# define MAPS_LINE_FORMAT8 653,21619
test_sscanf_maps_x86(656,21704
test_sscanf_maps_x64(685,22597
test_sscanf_all_specs(714,23524
#  define RTLD_NEXT 794,26218
typedef void (*memcpy_t)memcpy_t796,26258
test_memcpy_offset_size(799,26335
test_our_memcpy(821,27079
test_memset_offset_size(844,27700
test_our_memset(861,28189
our_memcpy_vs_libc(880,28605
unit_test_io(923,30201

hashtable.c,1867
hashtable_bits_given_entries(44,2002
#define NAME_KEY 64,2742
#define ENTRY_TYPE 65,2767
#define ENTRY_TAG(67,2849
#define ENTRY_EMPTY 68,2894
#define ENTRY_SENTINEL 70,3009
#define ENTRY_IS_EMPTY(71,3077
#define ENTRY_IS_SENTINEL(72,3125
#define ENTRY_IS_INVALID(73,3183
#define ENTRIES_ARE_EQUAL(74,3250
#define HASHTABLE_WHICH_HEAP(76,3382
#define HTLOCK_RANK 77,3431
#define HASHTABLE_SUPPORT_PERSISTENCE 78,3478
#define GENERIC_ENTRY_IS_REAL(82,3597
hashtable_generic_init_internal_custom(87,3748
hashtable_generic_resized_custom(92,3865
hashtable_generic_study_custom(101,4216
hashtable_generic_free_entry(108,4420
generic_hash_create(119,4823
generic_hash_clear(134,5511
generic_hash_destroy(140,5634
generic_hash_lookup(159,6271
generic_hash_add(168,6501
generic_hash_remove(179,6815
generic_hash_iterate_next(194,7333
generic_hash_iterate_remove(220,8057
#define NAME_KEY 247,9046
#define ENTRY_TYPE 248,9071
#define ENTRY_TAG(250,9153
#define ENTRY_EMPTY 251,9210
#define STRHASH_SENTINEL 253,9325
#define ENTRY_SENTINEL 254,9393
#define ENTRY_IS_EMPTY(255,9444
#define ENTRY_IS_SENTINEL(256,9492
#define ENTRY_IS_INVALID(257,9552
#define TAGS_ARE_EQUAL(258,9619
#define ENTRIES_ARE_EQUAL(260,9775
#define HASHTABLE_WHICH_HEAP(262,9924
#define HTLOCK_RANK 263,9973
#define HASHTABLE_SUPPORT_PERSISTENCE 264,10020
#define STRHASH_CASE_INSENSITIVE 267,10093
strhash_key_cmp(270,10176
#define STRHASH_ENTRY_IS_REAL(280,10478
hashtable_strhash_init_internal_custom(285,10614
hashtable_strhash_resized_custom(290,10731
hashtable_strhash_study_custom(299,11084
hashtable_strhash_free_entry(306,11287
strhash_hash_create(317,11690
strhash_hash_clear(333,12467
strhash_hash_destroy(339,12590
strhash_hash_lookup(358,13227
strhash_hash_add(367,13470
strhash_hash_remove(378,13785
print_hashtable_stats(398,14422

stats.c,1092
kstat_variables_t tkv;69,2965
kstat_stack_t ks;70,2988
kstat_init_variable(80,3149
kstats_evaluate_expressions(90,3398
#define KSTAT_SUM(95,3605
#define KSTAT_DEF(99,3832
#undef KSTAT_SUM101,3909
#undef KSTAT_DEF102,3926
#define KSTAT_SUM(106,4001
kstat_init_variables(109,4078
#define KSTAT_DEF(111,4124
#undef KSTAT_DEF113,4207
enum {KSTAT_OUTLIER_THRESHOLD_MS KSTAT_OUTLIER_THRESHOLD_MS123,4625
timestamp_t kstat_ignore_context_switch;124,4683
kstat_frequency_per_msec;127,4745
kstat_print_individual(131,4850
kstat_report(160,5945
#define KSTAT_DEF(165,6149
#undef KSTAT_DEF169,6374
kstats_main_logfile_name(179,6705
kstats_thread_logfile_name(185,6790
kstat_init(192,6861
kstat_exit(220,7653
kstat_calibrate(239,8076
kstat_thread_init(262,8695
kstat_merge_var(295,9912
kstat_merge(309,10453
#define KSTAT_DEF(311,10534
#undef KSTAT_DEF313,10649
dump_thread_kstats(317,10674
kstat_var_name(335,11430
#define KSTAT_DEF(338,11561
#undef KSTAT_DEF342,11668
kstats_dump_stack(348,11741
kstat_thread_exit(362,12164
kstat_test(392,13229
int main(454,14445

emit.c,334
#define STATS_FCACHE_ADD(58,2307
get_last_fragment_body_instr_pc(75,3090
stress_test_recreate(92,3618
final_exit_shares_prev_stub(140,5632
set_linkstub_fields(184,7689
emit_fragment_common(387,16772
emit_invisible_fragment(963,41424
emit_fragment(977,41998
emit_fragment_ex(991,42518
emit_fragment_as_replacement(1003,43005

perfctr.c,265
int perfctr_eventset;48,2017
struct {int num;49,2039
struct {int num;char *name;name49,2039
struct {int num;char *name;} papi_events[papi_events49,2039
void hardware_perfctr_init(82,3555
void hardware_perfctr_exit(132,4943
void perfctr_update_gui(154,5525

string.c,380
strlen(62,2642
wcslen(73,2797
strchr(87,3111
strrchr(104,3524
strncpy(121,3856
memmove(137,4271
void *__memmove_chk(__memmove_chk157,4927
void *__strncpy_chk(__strncpy_chk168,5250
strncat(183,5611
strcmp(195,5870
strncmp(209,6149
memcmp(223,6449
strstr(240,6814
tolower(255,7128
strcasecmp(264,7256
strtoul(286,7923
identity(303,8435
unit_test_string(309,8487

config.h,84
#define _CONFIG_H_ 39,1824
# define PARAM_STR(79,2705
# define PARAM_STR(90,2995

vmareas.h,2137
#define _VMAREAS_H_ 42,1931
#define EMPTY_REGION_BASE 47,2074
#define EMPTY_REGION_SIZE 48,2161
#define UNIVERSAL_REGION_BASE 49,2201
#define UNIVERSAL_REGION_SIZE 51,2297
#define UNIVERSAL_REGION_END 53,2397
    VECTOR_SHARED 60,2531
    VECTOR_SHARED        = 0x0001,x000160,2531
    VECTOR_FRAGMENT_LIST 61,2566
    VECTOR_FRAGMENT_LIST = 0x0002,x000261,2566
    VECTOR_NEVER_MERGE_ADJACENT 63,2669
    VECTOR_NEVER_MERGE_ADJACENT = 0x0004,x000463,2669
    VECTOR_NEVER_OVERLAP 65,2776
    VECTOR_NEVER_OVERLAP = 0x0008,x000865,2776
    VECTOR_NO_LOCK 69,2938
    VECTOR_NO_LOCK       = 0x0010,x001069,2938
#define VECTOR_NEVER_MERGE 72,2977
struct vm_area_vector_t 82,3462
    struct vm_area_t *buf;buf83,3488
    int size;84,3515
    int length;85,3544
    uint flags;86,3560
    read_write_lock_t lock;91,3780
    void (*free_payload_func)free_payload_func95,3875
    void *(*split_payload_func)split_payload_func99,4015
    bool (*should_merge_func)should_merge_func108,4498
    void *(*merge_payload_func)merge_payload_func113,4754
#define VMVECTOR_ALLOC_VECTOR(119,5011
typedef struct vmvector_iterator_t 125,5260
    vm_area_vector_t *vector;vector126,5297
    int index;127,5327
} vmvector_iterator_t;128,5342
vmvector_empty(170,6689
#define USING_PRETEND_WRITABLE(419,13816
    ACTION_TERMINATE_PROCESS,545,18338
    ACTION_CONTINUE,546,18368
    ACTION_TERMINATE_THREAD,547,18418
    ACTION_THROW_EXCEPTION,548,18447
} action_type_t;549,18475
#  define USING_FUTURE_EXEC_LIST 572,19340
#  define USING_FUTURE_EXEC_LIST 577,19641
    DO_APP_MEM_PROT_CHANGE,597,20292
    FAIL_APP_MEM_PROT_CHANGE,598,20365
    PRETEND_APP_MEM_PROT_CHANGE,600,20493
    SUBSET_APP_MEM_PROT_CHANGE,601,20572
    DR_MODIFY_HALT 612,21026
    DR_MODIFY_NOP 613,21105
    DR_MODIFY_FAIL 614,21187
    DR_MODIFY_ALLOW 615,21241
    DR_MODIFY_OFF 616,21325
#    define APC_API 777,27109
#    define APC_API779,27163
    APC_TARGET_NATIVE,790,27384
    APC_TARGET_WINDOWS,791,27408
    THREAD_TARGET_NATIVE,792,27433
    THREAD_TARGET_WINDOWS793,27460
} apc_thread_type_t;794,27486

unit_tests.c,14
main(51,2012

fragment.h,8348
#define _FRAGMENT_H_ 43,1990
#define FRAG_IS_FUTURE 49,2089
#define FRAG_TRACE_LINKS_SHIFTED 50,2134
#define FRAG_IS_TRACE 51,2179
#define FRAG_IS_TRACE_HEAD 52,2224
#define FRAG_LINKED_OUTGOING 53,2269
#define FRAG_LINKED_INCOMING 54,2314
#define FRAG_CANNOT_DELETE 55,2359
#define FRAG_CANNOT_BE_TRACE 56,2404
#define FRAG_FAKE 63,2731
#define FRAG_WRITES_EFLAGS_6 66,2848
#define FRAG_WRITES_EFLAGS_OF 68,2956
#define FRAG_FCACHE_FREE_LIST 76,3297
#define FRAG_HAS_SYSCALL 78,3343
#define FRAG_TRACE_BUILDING 80,3464
#define FRAG_WAS_DELETED 86,3699
#define FRAG_SELFMOD_SANDBOXED 88,3820
#define FRAG_HAS_DIRECT_CTI 90,3924
#define FRAG_IS_EMPTY_SLOT 92,4047
#define FRAG_IS_EXTRA_VMAREA 94,4170
#define FRAG_IS_EXTRA_VMAREA_INIT 95,4215
# define FRAG_DYNGEN 99,4360
#  define FRAG_DYNGEN_RESTRICTED 102,4497
# define FRAG_HAS_MOV_SEG 110,4691
# define FRAG_32_BIT 115,4796
#define FRAG_MUST_END_TRACE 118,4849
#define FRAG_SHARED 120,4895
#define FRAG_TEMP_PRIVATE 124,5025
#define FRAG_TRACE_OUTPUT 126,5071
#define FRAG_CBR_FALLTHROUGH_SHORT 128,5117
#define FRAG_COARSE_GRAIN 133,5263
#define FRAG_HAS_TRANSLATION_INFO 140,5606
# define FRAG_X86_TO_X64 144,5736
# define FRAG_DO_NOT_SIDELINE 149,5872
#define FRAG_FOLLOWS_FREE_ENTRY 153,5992
#define FUTURE_FLAGS_TRANSFER 164,6557
#define FUTURE_FLAGS_ALLOWED 166,6638
enum { MAX_FRAGMENT_SIZE 170,6864
enum { MAX_FRAGMENT_SIZE = USHRT_MAX 170,6864
struct _fragment_t 176,7058
    app_pc    tag;182,7336
    uint      flags;187,7548
    ushort       size;197,7974
    byte      prefix_size;204,8245
    byte      fcache_extra;205,8333
    cache_pc  start_pc;207,8428
        linkstub_t  *incoming_stubs;incoming_stubs215,8825
        translation_info_t *translation_info;translation_info219,8987
    } in_xlate;220,9033
    fragment_t  *next_vmarea;next_vmarea222,9050
    fragment_t  *prev_vmarea;prev_vmarea223,9128
        fragment_t  *also_vmarea;also_vmarea225,9218
        uint      flushtime;229,9459
    } also;230,9488
    int       id;233,9514
    int num_calls;237,9634
    int num_rets;238,9653
typedef struct _private_fragment_t 247,9903
    fragment_t  f;248,9940
    fragment_t  *next_fcache;next_fcache249,9959
    fragment_t  *prev_fcache;prev_fcache250,10037
} private_fragment_t;251,10115
struct _future_fragment_t 259,10409
    app_pc    tag;260,10437
    uint      flags;261,10514
    linkstub_t  *incoming_stubs;incoming_stubs262,10573
typedef struct _trace_bb_info_t 266,10709
    app_pc tag;267,10743
    uint num_exits;275,11111
} trace_bb_info_t;277,11138
typedef struct _trace_only_t 282,11300
    uint64    count;284,11352
    uint64    total_time;285,11428
    linkcount_type_t count_old_pre;289,11541
    linkcount_type_t count_old_post;290,11577
    trace_bb_info_t *bbs;bbs294,11697
    uint    num_bbs;295,11723
} trace_only_t;296,11744
struct _trace_t 299,11797
    fragment_t     f;300,11815
    trace_only_t t;301,11857
typedef struct _private_trace_t 305,11928
    private_fragment_t  f;306,11962
    trace_only_t        t;307,11989
} private_trace_t;308,12016
#define TRACE_FIELDS(311,12109
#define IS_IBL_TARGET(332,13201
#define HASHTABLE_IBL_OFFSET(338,13510
typedef struct _unprot_ht_statistics_t 344,13780
    hashtable_statistics_t trace_ibl_stats[trace_ibl_stats350,14191
    hashtable_statistics_t bb_ibl_stats[bb_ibl_stats351,14256
    hashtable_statistics_t shared_syscall_hit_stats;355,14404
} unprot_ht_statistics_t;357,14507
typedef struct _fragment_entry_t 363,14671
    app_pc    tag_fragment;364,14706
    cache_pc  start_pc_fragment;365,14783
} fragment_entry_t;366,14865
#define HASHLOOKUP_SENTINEL_START_PC 368,14886
#define FRAG_TABLE_INCLUSIVE_HIERARCHY 379,15360
#define FRAG_TABLE_IBL_TARGETED 381,15515
#define FRAG_TABLE_TARGET_SHARED 383,15663
#define FRAG_TABLE_SHARED 385,15768
#define FRAG_TABLE_PERSISTENT 387,15878
#define FRAG_TABLE_TRACE 389,15986
#define NAME_KEY 393,16173
#define ENTRY_TYPE 394,16199
#define HASHTABLEX_HEADER 396,16276
#define CUSTOM_FIELDS 397,16304
#undef HASHTABLEX_HEADER399,16361
#define NAME_KEY 404,16532
#define ENTRY_TYPE 405,16553
# define HASHTABLE_ENTRY_STATS 408,16662
# define CUSTOM_FIELDS 409,16695
# define CUSTOM_FIELDS 418,17109
#define HASHTABLEX_HEADER 421,17203
#undef HASHTABLEX_HEADER423,17255
#define NAME_KEY 428,17419
#define ENTRY_TYPE 429,17443
#define CUSTOM_FIELDS 431,17514
#define HASHTABLEX_HEADER 432,17547
#undef HASHTABLEX_HEADER434,17599
typedef struct _per_thread_t 456,18704
    ibl_table_t trace_ibt[trace_ibt457,18735
    ibl_table_t bb_ibt[bb_ibt458,18806
    fragment_table_t bb;459,18871
    fragment_table_t trace;460,18896
    fragment_table_t future;461,18924
    mutex_t fragment_delete_mutex;463,19011
    file_t tracefile;465,19053
    bool           could_be_linking;468,19140
    bool           wait_for_unlink;469,19216
    bool           about_to_exit;470,19303
    bool           flush_queue_nonempty;471,19401
    event_t        waiting_for_unlink;472,19490
    event_t        finished_with_unlink;473,19567
    event_t        finished_all_unlink;474,19620
    mutex_t          linking_lock;478,19831
    bool           soon_to_be_linking;479,19866
    uint           flushtime_last_update;481,19994
    bool           at_syscall_at_flush;486,20227
    uint tracedump_num_below_threshold;489,20293
    linkcount_type_t tracedump_count_below_threshold;490,20333
} per_thread_t;492,20394
#define FCACHE_ENTRY_PC(495,20412
#define FCACHE_PREFIX_ENTRY_PC(496,20470
#define FCACHE_IBT_ENTRY_PC(498,20579
#define FRAGMENT_STRUCT_SIZE(503,20777
#define FRAGMENT_EXIT_STUBS(509,21109
#define FRAGMENT_SELFMOD_COPY_SIZE(515,21398
#define FRAGMENT_SELFMOD_COPY_PC(518,21568
#define FRAGMENT_TRANSLATION_INFO_ADDR(522,21743
#define HAS_STORED_TRANSLATION_INFO(529,22118
#define FRAGMENT_TRANSLATION_INFO(533,22296
    FRAGDEL_ALL 614,24466
    FRAGDEL_ALL               = 0x000,x000614,24466
    FRAGDEL_NO_OUTPUT 615,24505
    FRAGDEL_NO_OUTPUT         = 0x001,x001615,24505
    FRAGDEL_NO_UNLINK 616,24544
    FRAGDEL_NO_UNLINK         = 0x002,x002616,24544
    FRAGDEL_NO_HTABLE 617,24583
    FRAGDEL_NO_HTABLE         = 0x004,x004617,24583
    FRAGDEL_NO_FCACHE 618,24622
    FRAGDEL_NO_FCACHE         = 0x008,x008618,24622
    FRAGDEL_NO_HEAP 619,24661
    FRAGDEL_NO_HEAP           = 0x010,x010619,24661
    FRAGDEL_NO_MONITOR 620,24700
    FRAGDEL_NO_MONITOR        = 0x020,x020620,24700
    FRAGDEL_NO_VMAREA 621,24739
    FRAGDEL_NO_VMAREA         = 0x040,x040621,24739
    FRAGDEL_NEED_CHLINK_LOCK 623,24779
    FRAGDEL_NEED_CHLINK_LOCK  = 0x080,x080623,24779
struct _rct_module_table_t 725,27923
    app_pc_table_t *persisted_table;persisted_table726,27952
    app_pc_table_t *live_table;live_table727,27989
    app_pc live_min;732,28236
    app_pc live_max;733,28257
typedef struct _app_to_cache_t 797,30051
    app_pc app;798,30084
    cache_pc cache;803,30325
} app_to_cache_t;804,30345
#define NAME_KEY 807,30442
#define ENTRY_TYPE 808,30466
#define CUSTOM_FIELDS 810,30545
#define HASHTABLEX_HEADER 812,30592
#undef HASHTABLEX_HEADER814,30644
#define PROTECT_FRAGMENT_ENABLED(1101,40521
get_ibl_per_type_statistics(1118,41061
typedef struct _tracedump_file_header_t 1162,42361
    int version;1163,42403
    bool x64;1164,42483
    int linkcount_size;1165,42571
} tracedump_file_header_t;1166,42657
typedef struct _tracedump_trace_header_t 1169,42752
    int frag_id;1170,42795
    app_pc tag;1171,42856
    app_pc cache_start_pc;1172,42931
    int entry_offs;1173,43004
    int num_exits;1174,43074
    int code_size;1175,43141
    uint num_bbs;1176,43215
    bool x64;1177,43306
} tracedump_trace_header_t;1178,43381
#define BB_ORIGIN_HEADER_SIZE 1181,43464
#define SEPARATE_STUB_MAX_SIZE 1184,43592
typedef struct _tracedump_stub_data 1187,43694
    int cti_offs;1188,43732
    app_pc stub_pc;1190,43874
    app_pc target;1191,43934
    bool linked;1192,43982
    int stub_size;1193,44052
        uint count32;1196,44198
        uint64 count64;1197,44257
    } count;1198,44318
    byte stub_code[stub_code1205,44678
} tracedump_stub_data_t;1206,44719
#define STUB_DATA_FIXED_SIZE 1209,44821

synch.h,1308
#define SYNCH_H39,1808
    THREAD_SYNCH_NONE=46,2007
    THREAD_SYNCH_NO_LOCKS=50,2138
    THREAD_SYNCH_NO_LOCKS_NO_XFER=58,2466
    THREAD_SYNCH_VALID_MCONTEXT_NO_XFER=65,2742
    THREAD_SYNCH_VALID_MCONTEXT=69,2933
} thread_synch_permission_t;70,2967
    THREAD_SYNCH_SUSPENDED=77,3246
    THREAD_SYNCH_SUSPENDED_AND_CLEANED=78,3276
    THREAD_SYNCH_TERMINATED_AND_CLEANED=80,3403
    THREAD_SYNCH_SUSPENDED_VALID_MCONTEXT_OR_NO_XFER=85,3555
    THREAD_SYNCH_SUSPENDED_VALID_MCONTEXT=87,3612
} thread_synch_state_t;88,3656
    THREAD_SYNCH_RESULT_SUCCESS 91,3696
    THREAD_SYNCH_RESULT_SUSPEND_FAILURE 92,3741
    THREAD_SYNCH_RESULT_NOT_SAFE 93,3786
} thread_synch_result_t;94,3831
    THREAD_SYNCH_SUSPEND_FAILURE_ABORT 105,4273
    THREAD_SYNCH_SUSPEND_FAILURE_ABORT  = 0x00000001,x00000001105,4273
    THREAD_SYNCH_SUSPEND_FAILURE_IGNORE 106,4327
    THREAD_SYNCH_SUSPEND_FAILURE_IGNORE = 0x00000002,x00000002106,4327
    THREAD_SYNCH_SUSPEND_FAILURE_RETRY 111,4599
    THREAD_SYNCH_SUSPEND_FAILURE_RETRY  = 0x00000004,x00000004111,4599
    THREAD_SYNCH_SMALL_LOOP_MAX 114,4698
    THREAD_SYNCH_SMALL_LOOP_MAX         = 0x00000008,x00000008114,4698
#define THREAD_SYNCH_IS_CLEANED(118,4781
#define THREAD_SYNCH_IS_TERMINATED(122,5007
#define THREAD_SYNCH_SAFE(127,5255

os_shared.h,11012
#define OS_SHARED_H41,1899
enum {VM_ALLOCATION_BOUNDARY VM_ALLOCATION_BOUNDARY43,1920
    HEAP_ERROR_SUCCESS 85,3468
    HEAP_ERROR_CANT_RESERVE_IN_REGION 87,3587
    HEAP_ERROR_NOT_AT_PREFERRED 89,3721
typedef uint heap_error_code_t;91,3761
    RAW_ALLOC_RESERVE_ONLY 97,3891
    RAW_ALLOC_RESERVE_ONLY = 0x0001,x000197,3891
    RAW_ALLOC_COMMIT_ONLY 98,3928
    RAW_ALLOC_COMMIT_ONLY  = 0x0002,x000298,3928
    RAW_ALLOC_32BIT 101,3984
    RAW_ALLOC_32BIT        = 0x0004,x0004101,3984
    DR_STATE_PEB 211,8133
    DR_STATE_PEB              = 0x0001,x0001211,8133
    DR_STATE_TEB_MISC 212,8205
    DR_STATE_TEB_MISC         = 0x0002,x0002212,8205
    DR_STATE_STACK_BOUNDS 213,8286
    DR_STATE_STACK_BOUNDS     = 0x0004,x0004213,8286
    DR_STATE_ALL 215,8377
    DR_STATE_ALL              =     ~0,215,8377
} dr_state_flags_t;216,8443
    TERMINATE_PROCESS 247,9129
    TERMINATE_PROCESS = 0x1,x1247,9129
    TERMINATE_THREAD 248,9158
    TERMINATE_THREAD  = 0x2,x2248,9158
    TERMINATE_CLEANUP 260,9893
    TERMINATE_CLEANUP = 0x4 x4260,9893
} terminate_flags_t;261,9977
    ILLEGAL_INSTRUCTION_EXCEPTION,267,10172
    UNREADABLE_MEMORY_EXECUTION_EXCEPTION,268,10207
    IN_PAGE_ERROR_EXCEPTION,269,10250
} exception_type_t;270,10279
    DUMPCORE_INTERNAL_EXCEPTION 278,10533
    DUMPCORE_INTERNAL_EXCEPTION = 0x0001,x0001278,10533
    DUMPCORE_SECURITY_VIOLATION 279,10575
    DUMPCORE_SECURITY_VIOLATION = 0x0002,x0002279,10575
    DUMPCORE_DEADLOCK 280,10617
    DUMPCORE_DEADLOCK           = 0x0004,x0004280,10617
    DUMPCORE_ASSERTION 281,10659
    DUMPCORE_ASSERTION          = 0x0008,x0008281,10659
    DUMPCORE_FATAL_USAGE_ERROR 282,10701
    DUMPCORE_FATAL_USAGE_ERROR  = 0x0010,x0010282,10701
    DUMPCORE_CLIENT_EXCEPTION 284,10767
    DUMPCORE_CLIENT_EXCEPTION   = 0x0020,x0020284,10767
    DUMPCORE_TIMEOUT 286,10816
    DUMPCORE_TIMEOUT            = 0x0040,x0040286,10816
    DUMPCORE_CURIOSITY 287,10858
    DUMPCORE_CURIOSITY          = 0x0080,x0080287,10858
    DUMPCORE_HOTP_FAILURE 290,11052
    DUMPCORE_HOTP_FAILURE       = 0x0100,x0100290,11052
    DUMPCORE_OUT_OF_MEM 292,11101
    DUMPCORE_OUT_OF_MEM         = 0x0200,x0200292,11101
    DUMPCORE_OUT_OF_MEM_SILENT 293,11143
    DUMPCORE_OUT_OF_MEM_SILENT  = 0x0400,x0400293,11143
    DUMPCORE_INCLUDE_STACKDUMP 295,11230
    DUMPCORE_INCLUDE_STACKDUMP  = 0x0800,x0800295,11230
    DUMPCORE_WAIT_FOR_DEBUGGER 296,11272
    DUMPCORE_WAIT_FOR_DEBUGGER  = 0x1000,x1000296,11272
    DUMPCORE_HOTP_DETECTION 299,11418
    DUMPCORE_HOTP_DETECTION     = 0x2000,x2000299,11418
    DUMPCORE_HOTP_PROTECTION 300,11493
    DUMPCORE_HOTP_PROTECTION    = 0x4000,x4000300,11493
    DUMPCORE_DR_ABORT 303,11599
    DUMPCORE_DR_ABORT           = 0x8000,x8000303,11599
    DUMPCORE_FORGE_ILLEGAL_INST 307,11793
    DUMPCORE_FORGE_ILLEGAL_INST = 0x10000,x10000307,11793
    DUMPCORE_FORGE_UNREAD_EXEC 308,11836
    DUMPCORE_FORGE_UNREAD_EXEC  = 0x20000,x20000308,11836
    DUMPCORE_APP_EXCEPTION 314,12244
    DUMPCORE_APP_EXCEPTION      = 0x40000,x40000314,12244
    DUMPCORE_TRY_EXCEPT 315,12287
    DUMPCORE_TRY_EXCEPT         = 0x80000,x80000315,12287
    DUMPCORE_UNSUPPORTED_APP 316,12367
    DUMPCORE_UNSUPPORTED_APP    = 0x100000,x100000316,12367
    DUMPCORE_OPTION_PAUSE 319,12424
    DUMPCORE_OPTION_PAUSE       = DUMPCORE_WAIT_FOR_DEBUGGER 319,12424
                                  DUMPCORE_INTERNAL_EXCEPTION 320,12488
                                  DUMPCORE_SECURITY_VIOLATION 321,12552
                                  DUMPCORE_DEADLOCK 322,12616
                                  DUMPCORE_ASSERTION 323,12680
                                  DUMPCORE_FATAL_USAGE_ERROR 324,12744
                                  DUMPCORE_CLIENT_EXCEPTION 326,12833
                                  DUMPCORE_UNSUPPORTED_APP 328,12905
                                  DUMPCORE_TIMEOUT 329,12969
                                  DUMPCORE_CURIOSITY 330,13033
                                  DUMPCORE_DR_ABORT 332,13122
                                  DUMPCORE_OUT_OF_MEM 334,13194
                                  DUMPCORE_OUT_OF_MEM_SILENT,335,13258
typedef void * dr_auxlib_handle_t;356,13898
typedef void (*dr_auxlib_routine_ptr_t)dr_auxlib_routine_ptr_t358,13998
typedef uint64 dr_auxlib64_handle_t;364,14235
typedef uint64 dr_auxlib64_routine_ptr_t;366,14344
typedef void * shlib_handle_t;375,14638
typedef void (*shlib_routine_ptr_t)shlib_routine_ptr_t376,14669
typedef uint64 dr_auxlib64_handle_t;381,14863
typedef uint64 dr_auxlib64_routine_ptr_t;382,14900
#define DR_MEMPROT_NONE 405,15658
#define DR_MEMPROT_READ 406,15735
#define DR_MEMPROT_WRITE 407,15790
#define DR_MEMPROT_EXEC 408,15846
# define DR_MEMPROT_GUARD 410,15919
#define DR_MEMPROT_PRETEND_WRITE 420,16411
    DR_MEMTYPE_FREE,426,16530
    DR_MEMTYPE_IMAGE,427,16588
    DR_MEMTYPE_DATA,428,16652
    DR_MEMTYPE_RESERVED,429,16716
} dr_mem_type_t;430,16798
typedef struct _dr_mem_info_t 435,16885
    byte          *base_pc;base_pc437,16962
    size_t        size;439,17016
    uint          prot;441,17093
    dr_mem_type_t type;443,17143
} dr_mem_info_t;444,17167
#define MEMPROT_NONE 448,17210
#define MEMPROT_READ 449,17248
#define MEMPROT_WRITE 450,17286
#define MEMPROT_EXEC 451,17325
# define MEMPROT_GUARD 453,17378
#define SAFE_READ_VAL(469,18099
    SELFPROT_DATA_RARE 527,20826
    SELFPROT_DATA_RARE   = 0x001,x001527,20826
    SELFPROT_DATA_FREQ 531,21018
    SELFPROT_DATA_FREQ   = 0x002,x002531,21018
    SELFPROT_DATA_CXTSW 535,21173
    SELFPROT_DATA_CXTSW  = 0x004,x004535,21173
    SELFPROT_GLOBAL 543,21481
    SELFPROT_GLOBAL      = 0x008,x008543,21481
    SELFPROT_DCONTEXT 544,21515
    SELFPROT_DCONTEXT    = 0x010,x010544,21515
    SELFPROT_LOCAL 546,21681
    SELFPROT_LOCAL       = 0x020,x020546,21681
    SELFPROT_CACHE 547,21715
    SELFPROT_CACHE       = 0x040,x040547,21715
    SELFPROT_STACK 548,21799
    SELFPROT_STACK       = 0x080,x080548,21799
    SELFPROT_GENCODE 551,22047
    SELFPROT_GENCODE     = 0x100,x100551,22047
    SELFPROT_ON_CXT_SWITCH 562,22513
    SELFPROT_ON_CXT_SWITCH = (SELFPROT_DATA_CXTSW 562,22513
    SELFPROT_ON_CXT_SWITCH = (SELFPROT_DATA_CXTSW | SELFPROT_GLOBAL562,22513
                              | SELFPROT_DATA_FREQ)565,22736
    SELFPROT_ANY_DATA_SECTION 566,22789
    SELFPROT_ANY_DATA_SECTION = (SELFPROT_DATA_RARE 566,22789
    SELFPROT_ANY_DATA_SECTION = (SELFPROT_DATA_RARE | SELFPROT_DATA_FREQ 566,22789
                                 SELFPROT_DATA_CXTSW)567,22864
    DATASEC_NEVER_PROT 574,23019
    DATASEC_RARELY_PROT,575,23047
    DATASEC_FREQ_PROT,576,23072
    DATASEC_CXTSW_PROT,577,23095
    DATASEC_NUM,578,23119
#define DATASEC_WRITABLE(591,23484
#define NEVER_PROTECTED_SECTION 598,23838
#define RARELY_PROTECTED_SECTION 599,23882
#define FREQ_PROTECTED_SECTION 600,23923
#define CXTSW_PROTECTED_SECTION 601,23967
#define DATASEC_PROTECTED(607,24184
#define DECLARE_FREQPROT_VAR(613,24449
#define DECLARE_CXTSWPROT_VAR(618,24666
#define DECLARE_NEVERPROT_VAR(623,24886
#define SELF_PROTECT_ON_CXT_SWITCH 628,25106
#define SELF_PROTECT_LOCAL(633,25330
#define SELF_PROTECT_GLOBAL(638,25507
#define ASSERT_LOCAL_HEAP_PROTECTED(643,25683
#define ASSERT_LOCAL_HEAP_UNPROTECTED(646,25841
#define SELF_PROTECT_DATASEC(650,26003
#define SELF_UNPROTECT_DATASEC(654,26181
#define OS_OPEN_READ 681,27082
#define OS_OPEN_WRITE 682,27115
#define OS_OPEN_APPEND 683,27148
#define OS_OPEN_REQUIRE_NEW 684,27221
#define OS_EXECUTE 685,27254
#define OS_SHARE_DELETE 686,27323
#define OS_OPEN_FORCE_OWNER 687,27392
#define OS_OPEN_ALLOW_LARGE 688,27461
#define OS_OPEN_CLOSE_ON_FORK 689,27532
#define OS_OPEN_RESERVED 690,27593
    CREATE_DIR_ALLOW_EXISTING 705,28322
    CREATE_DIR_ALLOW_EXISTING = 0x0,x0705,28322
    CREATE_DIR_REQUIRE_NEW 711,28603
    CREATE_DIR_REQUIRE_NEW    = 0x1,x1711,28603
    CREATE_DIR_FORCE_OWNER 712,28640
    CREATE_DIR_FORCE_OWNER    = 0x2,x2712,28640
} create_directory_flags_t;713,28677
#define OS_SEEK_SET 726,29270
#define OS_SEEK_CUR 727,29313
#define OS_SEEK_END 728,29364
    STACK_EXECUTION_VIOLATION 785,31858
    HEAP_EXECUTION_VIOLATION 786,31900
    RETURN_TARGET_VIOLATION 787,31942
    RETURN_DIRECT_RCT_VIOLATION 788,31985
    INDIRECT_CALL_RCT_VIOLATION 789,32055
    INDIRECT_JUMP_RCT_VIOLATION 790,32097
    HOT_PATCH_DETECTOR_VIOLATION 792,32170
    HOT_PATCH_PROTECTOR_VIOLATION 793,32212
    HOT_PATCH_FAILURE 795,32335
    ATTACK_SIMULATION_VIOLATION 798,32404
    ATTACK_SIM_NUDGE_VIOLATION 799,32447
    ASLR_TARGET_VIOLATION 802,32538
    GBOP_SOURCE_VIOLATION 804,32593
    PROCESS_CONTROL_VIOLATION 807,32677
    APC_THREAD_SHELLCODE_VIOLATION 809,32748
    INVALID_VIOLATION 811,32917
    ALLOWING_OK 816,33162
    ALLOWING_BAD 817,33204
    NO_VIOLATION_BAD_INTERNAL_STATE 819,33257
    NO_VIOLATION_OK_INTERNAL_STATE 820,33299
} security_violation_t;821,33340
    INITIAL_STACK_EMPTY 833,33770
    INITIAL_STACK_BOTTOM_REACHED 834,33812
    INITIAL_STACK_BOTTOM_NOT_REACHED 835,33854
} initial_call_stack_status_t;836,33895
typedef HANDLE event_t;855,34594
typedef struct linux_event_t *event_t;event_t857,34624
# define POST_SYSCALL_PC(911,36402
# define POST_SYSCALL_PC(918,36867
    AFTER_INTERCEPT_LET_GO,925,37052
    AFTER_INTERCEPT_LET_GO_ALT_DYN,926,37080
    AFTER_INTERCEPT_TAKE_OVER,930,37339
    AFTER_INTERCEPT_DYNAMIC_DECISION,931,37370
    AFTER_INTERCEPT_TAKE_OVER_SINGLE_SHOT,934,37513
} after_intercept_action_t;935,37598
    void *callee_arg;callee_arg945,37979
    app_pc start_pc;946,38053
    priv_mcontext_t mc;947,38118
} app_state_at_intercept_t;948,38171
typedef after_intercept_action_t intercept_function_t(952,38324
    JMP_REL32_OPCODE 958,38567
    JMP_REL32_OPCODE  = 0xe9,xe9958,38567
    JMP_REL32_SIZE 959,38597
    CALL_REL32_OPCODE 960,38667
    CALL_REL32_OPCODE = 0xe8,xe8960,38667
    JMP_ABS_IND64_OPCODE 962,38709
    JMP_ABS_IND64_OPCODE    = 0xff,xff962,38709
    JMP_ABS_IND64_SIZE 963,38745
    JMP_ABS_MEM_IND64_MODRM 964,38825
    JMP_ABS_MEM_IND64_MODRM = 0x25,x25964,38825
#define INJECT_LOCATION_IS_LDR(988,39977
#define INJECT_LOCATION_IS_LDR_NON_DEFAULT(989,40049
    INJECT_LOCATION_Invalid 991,40139
    INJECT_LOCATION_LdrpLoadDll 992,40207
    INJECT_LOCATION_LdrpLoadImportModule 993,40272
    INJECT_LOCATION_LdrCustom 994,40336
    INJECT_LOCATION_LdrLoadDll 995,40407
    INJECT_LOCATION_LdrDefault 996,40468
    INJECT_LOCATION_KiUserApc 1004,40973
    INJECT_LOCATION_KiUserException 1005,41015
    INJECT_LOCATION_MAX 1006,41088
    INJECT_LOCATION_MAX = INJECT_LOCATION_KiUserException,1006,41088
#define LANDING_PAD_AREA_SIZE 1038,42115
#define MAX_HOOK_DISPLACED_LENGTH 1039,42155
# define LANDING_PAD_SIZE 1044,42403
# define LANDING_PAD_SIZE 1049,42617

nudge.c,251
nudge_terminate_on_dstack(65,2572
generic_nudge_target(81,3183
nudge_thread_cleanup(103,3925
generic_nudge_handler(196,8697
handle_nudge(282,11894
#define VALID_THIN_CLIENT_NUDGES 311,12921
nudge_add_pending(444,18727
nudge_internal(471,19566

native_exec.h,74
#define _NATIVE_EXEC_H_ 34,1705
native_exec_is_back_from_native(96,3222

link.h,4173
#define _CORE_LINK_H_ 43,2030
    LINK_DIRECT 68,3105
    LINK_DIRECT          = 0x0001,x000168,3105
    LINK_INDIRECT 69,3140
    LINK_INDIRECT        = 0x0002,x000269,3140
    LINK_RETURN 76,3492
    LINK_RETURN          = 0x0004,x000476,3492
    LINK_CALL 78,3618
    LINK_CALL            = 0x0008,x000878,3618
    LINK_JMP 79,3653
    LINK_JMP             = 0x0010,x001079,3653
    LINK_FAR 82,3751
    LINK_FAR             = 0x0020,x002082,3751
    LINK_TARGET_PREFIX 85,3810
    LINK_TARGET_PREFIX   = 0x0040,x004085,3810
    LINK_TRACE_CMP 91,4030
    LINK_TRACE_CMP       = 0x0080,x008091,4030
    LINK_SPECIAL_EXIT 97,4243
    LINK_SPECIAL_EXIT    = 0x0100,x010097,4243
    LINK_CALLBACK_RETURN 99,4293
    LINK_CALLBACK_RETURN = 0x0200,x020099,4293
    LINK_NI_SYSCALL_INT 102,4421
    LINK_NI_SYSCALL_INT  = 0x0200,x0200102,4421
    LINK_NI_SYSCALL 105,4530
    LINK_NI_SYSCALL      = 0x0400,x0400105,4530
    LINK_FINAL_INSTR_SHARED_FLAG 106,4565
    LINK_FINAL_INSTR_SHARED_FLAG = LINK_NI_SYSCALL,106,4565
    LINK_FRAG_OFFS_AT_END=110,4715
    LINK_FRAG_OFFS_AT_END= 0x0800,x0800110,4715
    LINK_END_OF_LIST 112,4751
    LINK_END_OF_LIST     = 0x1000,x1000112,4751
    LINK_FAKE 114,4787
    LINK_FAKE            = 0x2000,x2000114,4787
    LINK_LINKED 116,4823
    LINK_LINKED          = 0x4000,x4000116,4823
    LINK_SEPARATE_STUB 118,4859
    LINK_SEPARATE_STUB   = 0x8000,x8000118,4859
# define LINK_NI_SYSCALL_ALL 124,4978
# define LINK_NI_SYSCALL_ALL 126,5053
#  define LINKCOUNT_FORMAT_STRING 131,5156
#  define LINKCOUNT_FORMAT_STRING 133,5202
struct _linkstub_t 167,6207
    ushort         flags;168,6228
    ushort         cti_offset;174,6493
    ushort         fixed_stub_offset;177,6602
    linkcount_type_t count;182,6817
typedef struct _common_direct_linkstub_t 188,6912
    linkstub_t       l;189,6955
    linkstub_t       *next_incoming;next_incoming200,7438
    fragment_t       *target_fragment;target_fragment207,7711
} common_direct_linkstub_t;209,7757
typedef struct _direct_linkstub_t 213,7836
    common_direct_linkstub_t cdl;214,7872
    app_pc         target_tag;220,8092
    cache_pc       stub_pc;226,8318
} direct_linkstub_t;227,8346
typedef struct _cbr_fallthrough_linkstub_t 239,8887
    common_direct_linkstub_t cdl;251,9481
} cbr_fallthrough_linkstub_t;252,9515
typedef struct _indirect_linkstub_t 256,9619
    linkstub_t       l;257,9657
} indirect_linkstub_t;258,9681
typedef struct _post_linkstub_t 265,9879
    ushort         fragment_offset;273,10318
    ushort         padding;279,10646
} post_linkstub_t;280,10674
typedef struct _coarse_incoming_t 287,10987
        cache_pc stub_pc;289,11035
        linkstub_t *fine_l;fine_l290,11061
    } in;291,11089
    bool coarse;292,11099
    struct _coarse_incoming_t *next;next293,11116
} coarse_incoming_t;294,11153
#define LINKSTUB_FAKE(297,11251
#define LINKSTUB_DIRECT(299,11362
#define LINKSTUB_NORMAL_DIRECT(300,11422
#define LINKSTUB_INDIRECT(302,11528
#define LINKSTUB_CBR_FALLTHROUGH(304,11629
#define EXIT_IS_CALL(308,11788
#define EXIT_IS_JMP(309,11867
#define EXIT_IS_IND_JMP_PLT(310,11945
#define LINKSTUB_FINAL(312,12020
#define LINKSTUB_COARSE_PROXY(315,12157
#define LINKSTUB_SIZE(319,12308
#define LINKSTUB_NEXT_EXIT(325,12592
#define LINKSTUB_NEXT_INCOMING(332,12820
#define CBR_FALLTHROUGH_STUB_OFFS(340,13220
#define EXIT_CTI_PC_HELPER(343,13339
#define EXIT_CTI_PC(347,13466
#define EXIT_STUB_PC_HELPER(352,13664
#define EXIT_STUB_PC(356,13800
#define EXIT_TARGET_TAG(363,14130
# define EXIT_FIXED_STUB_PC(370,14418
# define EXIT_TARGETS_SHARED_SYSCALL(374,14529
# define EXIT_TARGETS_SHARED_SYSCALL(378,14682
#define EXIT_HAS_STUB(382,14819
#define EXIT_HAS_LOCAL_STUB(389,15284
# define IS_COARSE_LINKSTUB(512,19200
# define IS_SHARED_SYSCALLS_UNLINKED_LINKSTUB(517,19401
# define IS_SHARED_SYSCALLS_LINKSTUB(522,19631
# define IS_SHARED_SYSCALLS_TRACE_LINKSTUB(526,19854
# define IS_SHARED_SYSCALLS_UNLINKED_LINKSTUB(529,19968
# define IS_SHARED_SYSCALLS_LINKSTUB(530,20023
# define IS_SHARED_SYSCALLS_TRACE_LINKSTUB(531,20069

instrlist.c,1095
# undef ASSERT 47,2118
# undef ASSERT_TRUNCATE48,2189
# undef ASSERT_BITFIELD_TRUNCATE49,2213
# undef ASSERT_NOT_REACHED50,2246
# define ASSERT 51,2273
# define ASSERT_TRUNCATE 52,2333
# define ASSERT_BITFIELD_TRUNCATE 53,2402
# define ASSERT_NOT_REACHED 54,2480
instrlist_create(59,2615
instrlist_init(70,2969
instrlist_destroy(83,3305
instrlist_clear(92,3607
instrlist_clear_and_destroy(103,3912
instrlist_set_fall_through_target(116,4330
instrlist_get_fall_through_target(123,4453
instrlist_set_return_target(134,4753
instrlist_get_return_target(141,4870
instrlist_set_translation_target(151,5122
instrlist_get_translation_target(157,5234
instrlist_set_our_mangling(163,5335
instrlist_get_our_mangling(172,5515
instrlist_first(179,5668
instrlist_last(186,5783
check_translation(192,5866
instrlist_append(203,6234
instrlist_prepend(229,6902
instrlist_preinsert(256,7581
instrlist_postinsert(291,8577
instrlist_replace(328,9633
instrlist_remove(347,10219
instrlist_clone(364,10658
instrlist_prepend_instrlist(425,12882
void instrlist_append_instrlist(436,13197

rct.c,229
find_address_references(90,3521
rct_check_ref_and_add(175,6886
is_address_taken(243,9376
is_address_after_call(249,9521
rct_ind_branch_check(262,9954
rct_known_targets_init(537,21998
rct_init(556,22571
rct_exit(569,23034

perscache.h,6395
#define _PERSCACHE_H_ 41,1871
struct _coarse_info_t 70,3262
    bool frozen:frozen71,3286
    bool persisted:persisted72,3305
    bool in_use:in_use73,3327
    bool has_persist_info:has_persist_info77,3508
    bool primary_for_module:primary_for_module82,3734
    bool stubs_readonly:stubs_readonly84,3820
    bool is_local:is_local89,4011
    void *cache;cache92,4103
    void *htable;htable98,4352
    void *th_htable;th_htable99,4431
    void *pclookup_last_htable;pclookup_last_htable102,4579
    void *stubs;stubs104,4667
    cache_pc fcache_return_prefix;106,4711
    cache_pc trace_head_return_prefix;107,4746
    cache_pc ibl_ret_prefix;108,4785
    cache_pc ibl_call_prefix;109,4814
    cache_pc ibl_jmp_prefix;110,4844
    coarse_incoming_t *incoming;incoming112,4874
    cache_pc cache_start_pc;117,5053
    cache_pc cache_end_pc;118,5082
    cache_pc stubs_start_pc;119,5149
    cache_pc stubs_end_pc;120,5206
    size_t mmap_size;125,5502
    void *pclookup_htable;pclookup_htable127,5606
    uint flags;131,5760
    cache_pc mmap_pc;132,5834
    size_t mmap_ro_size;137,6079
    file_t fd;139,6183
    size_t persisted_source_mmap_size;144,6335
    app_pc_table_t *rct_table;rct_table147,6433
    app_pc_table_t *rac_table;rac_table148,6464
    uint ibl_pending_used;152,6630
    app_rva_t *hotp_ppoint_vec;hotp_ppoint_vec163,7156
    uint hotp_ppoint_vec_num;164,7188
    uint stubs_write_count;168,7332
    struct _coarse_info_t *non_frozen;non_frozen174,7562
    mutex_t lock;187,7985
    mutex_t incoming_lock;190,8145
    app_pc base_pc;195,8280
    app_pc end_pc;196,8339
    const char *module;module198,8410
    module_digest_t module_md5;203,8599
    app_pc persist_base;205,8656
    ssize_t mod_shift;207,8721
# define COARSE_32_FLAG(214,8902
# define COARSE_32_FLAG(216,8996
typedef struct _pending_freeze_t 243,9742
    bool entrance_stub;244,9777
    bool trace_head;245,9801
    app_pc tag;246,9822
    cache_pc cur_pc;247,9838
    cache_pc link_cti_opnd;248,9859
    bool elide_ubr;249,9930
    struct _pending_freeze_t *next;next250,10003
} pending_freeze_t;251,10039
struct _coarse_freeze_info_t 253,10060
    coarse_info_t *src_info;src_info254,10091
    coarse_info_t *dst_info;dst_info255,10120
    cache_pc cache_start_pc;256,10149
    cache_pc cache_cur_pc;257,10178
    cache_pc stubs_start_pc;258,10205
    cache_pc stubs_cur_pc;259,10234
    bool unlink;260,10261
    pending_freeze_t *pending;pending261,10278
    size_t app_code_size;264,10391
    uint num_cbr;265,10417
    uint num_jmp;266,10435
    uint num_call;267,10453
    uint num_indbr;268,10472
    uint num_elisions;270,10516
    uint added_fallthrough;272,10589
    uint added_indbr_mangle;273,10617
    uint added_indbr_stub;274,10701
    uint added_jecxz_mangle;275,10760
    PERSISTENT_CACHE_MAGIC 319,11928
    PERSISTENT_CACHE_MAGIC = 0x244f4952,x244f4952319,11928
    PERSISTENT_CACHE_VERSION 320,11980
    PERSCACHE_X86_32 326,12139
    PERSCACHE_X86_32             = 0x00000001,x00000001326,12139
    PERSCACHE_X86_64 327,12186
    PERSCACHE_X86_64             = 0x00000002,x00000002327,12186
    PERSCACHE_SEEN_BORLAND_SEH 335,12539
    PERSCACHE_SEEN_BORLAND_SEH   = 0x00000004,x00000004335,12539
    PERSCACHE_ELIDED_UBR 338,12629
    PERSCACHE_ELIDED_UBR         = 0x00000008,x00000008338,12629
    PERSCACHE_SUPPORT_RAC 341,12740
    PERSCACHE_SUPPORT_RAC        = 0x00000010,x00000010341,12740
    PERSCACHE_SUPPORT_RCT 342,12787
    PERSCACHE_SUPPORT_RCT        = 0x00000020,x00000020342,12787
    PERSCACHE_ENTIRE_MODULE_RCT 345,12897
    PERSCACHE_ENTIRE_MODULE_RCT  = 0x00000040,x00000040345,12897
    PERSCACHE_SUPPORT_TRACES 348,12990
    PERSCACHE_SUPPORT_TRACES     = 0x00000080,x00000080348,12990
    PERSCACHE_MAP_RW_SEPARATE 351,13108
    PERSCACHE_MAP_RW_SEPARATE    = 0x00000100,x00000100351,13108
    PERSCACHE_EXEMPTION_OPTIONS 354,13227
    PERSCACHE_EXEMPTION_OPTIONS  = 0x00000200,x00000200354,13227
    PERSCACHE_CODE_INVALID 362,13620
    PERSCACHE_CODE_INVALID       = 0x00000400,x00000400362,13620
    PERSCACHE_MODULE_MD5_SHORT 368,13761
    PERSCACHE_MODULE_MD5_SHORT       = 0x00000001,x00000001368,13761
    PERSCACHE_MODULE_MD5_COMPLETE 369,13834
    PERSCACHE_MODULE_MD5_COMPLETE    = 0x00000002,x00000002369,13834
    PERSCACHE_GENFILE_MD5_SHORT 371,13953
    PERSCACHE_GENFILE_MD5_SHORT      = 0x00000004,x00000004371,13953
    PERSCACHE_GENFILE_MD5_COMPLETE 372,14017
    PERSCACHE_GENFILE_MD5_COMPLETE   = 0x00000008,x00000008372,14017
    PERSCACHE_MODULE_MD5_AT_LOAD 376,14221
    PERSCACHE_MODULE_MD5_AT_LOAD     = 0x00000010,x00000010376,14221
typedef struct _persisted_module_info_t 384,14508
    app_pc base;385,14550
    uint checksum;386,14604
    uint timestamp;387,14623
    uint64 image_size;391,14778
    uint64 code_size;392,14801
    uint64 file_version;393,14875
    module_digest_t module_md5;402,15240
} persisted_module_info_t;403,15272
typedef struct _persisted_footer_t 409,15469
    module_digest_t self_md5;414,15715
    uint magic;415,15791
} persisted_footer_t;416,15807
typedef struct _coarse_persisted_info_t 438,17026
    uint magic;442,17153
    uint version;443,17169
    size_t header_len;449,17367
    size_t data_len;450,17390
    uint flags;455,17527
    uint build_number;458,17570
    persisted_module_info_t modinfo;461,17635
    size_t start_offs;464,17749
    size_t end_offs;465,17772
    uint tls_offs_base;468,17870
    size_t instrument_rw_len;474,18051
    size_t stubs_len;477,18111
    size_t ibl_jmp_prefix_len;478,18133
    size_t ibl_call_prefix_len;479,18164
    size_t ibl_ret_prefix_len;480,18196
    size_t trace_head_return_prefix_len;481,18227
    size_t fcache_return_prefix_len;482,18268
    size_t cache_len;485,18334
    size_t post_cache_pad_len;486,18356
    size_t pad_len;488,18504
    size_t instrument_rx_len;489,18563
    size_t view_pad_len;490,18593
    size_t stub_htable_len;493,18695
    size_t cache_htable_len;494,18723
    size_t rct_htable_len;495,18752
    size_t rac_htable_len;496,18779
    size_t reloc_len;497,18806
    size_t hotp_patch_list_len;499,18858
    size_t instrument_ro_len;501,18945
    size_t option_string_len;504,19054
} coarse_persisted_info_t;587,22089

module_list.c,1387
vm_area_vector_t *loaded_module_areas;loaded_module_areas49,2274
os_get_module_info_lock(66,2959
os_get_module_info_unlock(74,3142
os_get_module_info_write_lock(83,3324
os_get_module_info_write_unlock(91,3514
os_get_module_info_locked(99,3708
os_get_module_info_write_locked(107,3860
module_area_create(118,4097
module_area_delete(132,4575
modules_init(143,4873
is_module_list_initialized(154,5217
modules_reset_list(160,5300
modules_exit(191,6369
module_list_add_mapping(211,6903
module_list_remove_mapping(231,7747
module_list_add(241,8156
module_list_remove(282,9905
os_module_set_flag_value(341,11977
os_module_set_flag(362,12479
os_module_clear_flag(368,12601
os_module_get_flag(374,12726
module_pc_lookup(394,13301
module_overlaps(403,13550
os_get_module_name_internal(414,13891
os_get_module_name(446,14988
os_get_module_name_strdup(461,15295
os_get_module_name_buf(472,15691
os_get_module_name_buf_strdup(486,16195
os_module_get_view_size(494,16481
struct _module_iterator_t 510,16833
    vmvector_iterator_t vmvi;511,16861
module_iterator_start(516,16954
module_iterator_hasnext(529,17406
module_iterator_next(547,17939
module_iterator_stop(560,18335
region_intersection_MD5update(573,18780
module_calculate_digest_helper(594,19583
ensure_section_readable(633,21479
restore_unreadable_section(679,23301
module_calculate_digest(730,25290

moduledb.h,1308
#define _MODULEDB_H_36,1758
    SECTION_NO_CHG 42,1943
    SECTION_IF_RX 43,1967
    SECTION_IF_X 44,1991
    SECTION_ALLOW 45,2015
    MODULEDB_ALL_SECTIONS_BITS 51,2164
    MODULEDB_ALL_SECTIONS_BITS   = 0x00000003,x0000000351,2164
    MODULEDB_ALL_SECTIONS_SHIFT 52,2247
    MODULEDB_RCT_EXEMPT_TO 53,2330
    MODULEDB_RCT_EXEMPT_TO       = 0x00000004,x0000000453,2330
    MODULEDB_REPORT_ON_LOAD 54,2377
    MODULEDB_REPORT_ON_LOAD      = 0x00000008,x0000000854,2377
    MODULEDB_DLL2HEAP 55,2424
    MODULEDB_DLL2HEAP            = 0x00000010,x0000001055,2424
    MODULEDB_DLL2STACK 56,2471
    MODULEDB_DLL2STACK           = 0x00000020,x0000002056,2471
    MODULEDB_EXEMPT_RCT 61,2608
    MODULEDB_EXEMPT_IMAGE 62,2646
    MODULEDB_EXEMPT_DLL2HEAP 63,2684
    MODULEDB_EXEMPT_DLL2STACK 64,2722
    MODULEDB_EXEMPT_NUM_LISTS 65,2760
} moduledb_exempt_list_t;66,2798
# define PROCESS_CONTROL_MODE_OFF 94,3455
# define PROCESS_CONTROL_MODE_WHITELIST 95,3511
# define PROCESS_CONTROL_MODE_BLACKLIST 96,3567
# define PROCESS_CONTROL_MODE_WHITELIST_INTEGRITY 101,3806
# define IS_PROCESS_CONTROL_MODE_WHITELIST(103,3863
# define IS_PROCESS_CONTROL_MODE_BLACKLIST(105,3986
# define IS_PROCESS_CONTROL_MODE_WHITELIST_INTEGRITY(107,4109
# define IS_PROCESS_CONTROL_ON(109,4252

hashtable.h,2101
#define _HASHTABLE_H_ 44,1899
#define HASHTABLE_SHARED 51,2044
#define HASHTABLE_ENTRY_SHARED 56,2240
#define HASHTABLE_LOCKLESS_ACCESS 58,2358
#define HASHTABLE_NOT_PRIMARY_STORAGE 60,2470
#define HASHTABLE_PERSISTENT 62,2572
#define HASHTABLE_USE_ENTRY_STATS 64,2673
#define HASHTABLE_RELAX_CLUSTER_CHECKS 66,2796
#define HASHTABLE_READ_ONLY 70,2971
#define HASHTABLE_ALIGN_TABLE 72,3067
#define HASHTABLE_CUSTOM_FLAGS_START 77,3250
#define HASHTABLE_COPY_IGNORE_FLAGS 80,3341
#define TABLE_NEEDS_LOCK(86,3556
#define ASSERT_TABLE_SYNCHRONIZED(91,3797
#define TABLE_RWLOCK(96,4120
#define TABLE_MEMOP(101,4271
#define TABLE_TYPE_MEMOP(105,4404
#define HASH_INDEX_WRAPAROUND(113,4738
# define INIT_HASHTABLE_STATS(118,4936
# define HTABLE_STAT_INC(122,5149
# define HTABLE_STAT_INC(124,5232
typedef struct _hashtable_statistics_t 129,5318
    uint hit_stat;130,5359
    uint collision_hit_stat;131,5419
    uint collision_stat;132,5491
    uint miss_stat;133,5565
    uint overwrap_stat;134,5642
    uint race_condition_stat;135,5728
    uint unlinked_count_stat;136,5817
    uint ib_stay_on_trace_stat;143,6141
    uint ib_stay_on_trace_stat_last;149,6489
    uint ib_stay_on_trace_stat_ovfl;150,6543
    uint ib_trace_last_ibl_exit;152,6632
    uint ib_trace_last_ibl_speculate_success;158,6891
} hashtable_statistics_t;160,7037
typedef struct _fragment_stat_entry_t 163,7140
    uint    hits;165,7234
    uint    age;167,7318
} fragment_stat_entry_t;168,7396
typedef struct _generic_entry_t 188,8106
    ptr_uint_t key;189,8140
    void *payload;payload190,8195
} generic_entry_t;191,8214
#define NAME_KEY 194,8307
#define ENTRY_TYPE 195,8332
#define CUSTOM_FIELDS 197,8414
#define HASHTABLEX_HEADER 199,8476
#undef HASHTABLEX_HEADER201,8528
typedef struct _strhash_entry_t 240,9856
    const char *key;key244,10011
    void *payload;payload245,10032
} strhash_entry_t;246,10051
#define NAME_KEY 248,10071
#define ENTRY_TYPE 249,10096
#define CUSTOM_FIELDS 251,10178
#define HASHTABLEX_HEADER 253,10240
#undef HASHTABLEX_HEADER255,10292

optionsx.h,1884
#define OPTION_DEFAULT(71,3068
#define OPTION_NAME_DEFAULT(75,3259
#define OPTION_NAME(79,3446
#define OPTION(82,3590
#define PC_OPTION_DEFAULT(85,3712
#define PC_OPTION(89,3905
#define PCL_OPTION_DEFAULT(92,4031
#define PCL_OPTION(96,4223
#define DYNAMIC_OPTION_DEFAULT(101,4470
#define DYNAMIC_OPTION(104,4631
#define DYNAMIC_PCL_OPTION_DEFAULT(107,4761
#define DYNAMIC_PCL_OPTION(110,4924
#define OPTION_ALIAS(115,5237
#define OPTION_DEFAULT_INTERNAL(125,5967
#define OPTION_NAME_INTERNAL(128,6163
#define OPTION_INTERNAL(131,6362
#define PC_OPTION_DEFAULT_INTERNAL(134,6474
#define PC_OPTION_INTERNAL(137,6676
#define DISABLE_RESET(141,6821
#define REENABLE_RESET(158,7752
#define DISABLE_TRACES(181,9264
#define REENABLE_TRACES(189,9672
#define ENABLE_SECURITY(198,10081
    DYNAMIC_OPTION_DEFAULT(218,11384
    PC_OPTION_INTERNAL(227,11757
    OPTION_DEFAULT(272,14364
#   define DISABLE_PROBE_API(447,23072
    PC_OPTION_INTERNAL(485,24803
    OPTION_DEFAULT_INTERNAL(714,37736
    OPTION_DEFAULT_INTERNAL(781,41700
    OPTION_DEFAULT(847,45016
    OPTION_DEFAULT(918,48790
    OPTION_DEFAULT(1235,66867
    OPTION_DEFAULT_INTERNAL(1245,67242
    DYNAMIC_PCL_OPTION(1534,84323
    DYNAMIC_OPTION(1540,84761
    DYNAMIC_OPTION(1549,85370
    DYNAMIC_OPTION_DEFAULT(1554,85738
    OPTION_DEFAULT(1802,101506
#   define ENABLE_COARSE_UNITS(1883,107296
    OPTION_ALIAS(1899,108247
    OPTION_DEFAULT(2085,118906
    OPTION_DEFAULT(2185,125580
    OPTION_DEFAULT(2481,141139
    OPTION_DEFAULT_INTERNAL(2580,146878
    OPTION_DEFAULT_INTERNAL(2614,148820
#define OPTIMIZE_OPTION(2644,150199
# undef OPTIMIZE_OPTION2683,151809
    DYNAMIC_OPTION_DEFAULT(2743,154829
#undef OPTION2826,159034
#undef OPTION_NAME2827,159048
#undef OPTION_DEFAULT2828,159067
#undef DYNAMIC_OPTION2830,159090
#undef DYNAMIC_OPTION_DEFAULT2831,159112

stats.h,1775
#define STATS_H40,1821
    uint num_self;63,2199
    timestamp_t total_self;82,3050
    timestamp_t total_sub;83,3118
    timestamp_t min_cum;86,3253
    timestamp_t max_cum;87,3332
    timestamp_t total_outliers;88,3410
} kstat_variable_t;90,3570
#define KSTAT_DEF(96,3748
#define KSTAT_SUM(97,3801
#undef KSTAT_SUM99,3894
#undef KSTAT_DEF100,3911
} kstat_variables_t;101,3928
    kstat_variable_t *var;var105,4014
    timestamp_t      self_time;106,4041
    timestamp_t      subpath_time;107,4073
    timestamp_t      outlier_time;108,4108
} kstat_node_t;109,4143
enum {KSTAT_MAX_DEPTH KSTAT_MAX_DEPTH111,4160
    volatile uint depth;115,4256
    timestamp_t last_start_time;116,4316
    timestamp_t last_end_time;117,4349
    kstat_node_t node[node118,4380
} kstat_stack_t;119,4420
    thread_id_t       thread_id;123,4501
    kstat_variables_t vars_kstats;124,4534
    kstat_stack_t     stack_kstats;125,4569
    file_t           outfile_kstats;126,4605
} thread_kstats_t;127,4642
#define KSTAT_THREAD_NO_PV_START(132,4712
#define KSTAT_THREAD_NO_PV_END(137,5032
#define KSTAT_THREAD(143,5227
#define KSTAT_OTHER_THREAD(151,5660
# define KSTAT_TOS_MATCHING(160,6136
#define KSTAT_SERIALIZE_INSTRUCTIONS(166,6461
#  define CORRECT_OUTLIER(174,6810
#  define CORRECT_OUTLIER(179,7015
#define UPDATE_CURRENT_COUNTER(184,7138
#define KSTAT_INTERNAL_DEBUG(200,8087
#define KSTAT_DUMP_STACK(210,8727
#define kstat_start_var(229,9621
#define kstat_switch_var(246,10490
#define kstat_stop_not_matching_var(249,10636
#define kstat_stop_matching_var(256,11021
#define kstat_tos_matching_var(264,11413
#define kstat_stop_not_propagated_var(266,11495
#define kstat_stop_rewind_var(291,13304
#define kstat_stop_longjmp_var(299,13728

emit.h,26
#define _EMIT_H_ 42,1932

fcache.h,483
#define _FCACHE_H_ 42,1915
#define IN_TRACE_CACHE(49,2129
#define PAD_FRAGMENT_JMPS(54,2339
#define PAD_JMPS_SHIFT_START(57,2448
    RESET_ALL 65,2752
    RESET_ALL              = 0x001,x00165,2752
    RESET_BASIC_BLOCKS 67,2837
    RESET_BASIC_BLOCKS     = 0x002,x00267,2837
    RESET_TRACES 69,2925
    RESET_TRACES           = 0x004,x00469,2925
    RESET_PENDING_DELETION 74,3163
    RESET_PENDING_DELETION = 0x008,x00874,3163
#define SELF_PROTECT_CACHE(123,4757

dispatch.h,286
#define _DISPATCH_H_ 40,1905
#define NO_HOOK 57,2341
#define HOOK_ENABLED_HELPER 59,2382
#define HOOK_ENABLED 61,2438
#define ENTER_DR_HOOK 63,2522
#define EXIT_DR_HOOK 64,2590
#define ENTERING_DR(66,2658
#define EXITING_DR(71,2769
#define BACK_TO_NATIVE_AFTER_SYSCALL 78,2955

globals.h,11591
#define _GLOBALS_H_ 43,2015
#define _WIN32_WINNT 55,2564
#  define WIN32_LEAN_AND_MEAN57,2650
#define DYNAMORIO_STATS_EXPORTS 93,4521
#    define DYNAMORIO_EXPORT 109,5126
#    define DYNAMORIO_EXPORT 116,5487
#    define DYNAMORIO_EXPORT 119,5644
#  define DR_API 123,5712
#  define DR_API 125,5752
#  define DR_UNS_API 128,5800
#  define DR_UNS_API 130,5834
# define NOINLINE 134,5892
# define NOINLINE 136,5937
#define INLINE_ONCE 139,5989
typedef unsigned long ulong;150,6185
typedef unsigned short ushort;151,6214
typedef HANDLE file_t;160,6612
#define INVALID_FILE 161,6635
#define STDOUT 162,6677
#define STDERR 163,6720
#define STDIN 164,6763
#define DIRSEP 165,6805
#define ALT_DIRSEP 166,6825
typedef unsigned long ulong;171,6925
#define DIRSEP 174,7000
#define ALT_DIRSEP 175,7019
#define INVALID_THREAD_ID 185,7412
typedef unsigned char uchar;187,7442
typedef byte * cache_pc;188,7471
#define SUCCESS 190,7522
#define FAILURE 191,7540
# define _IF_DGCDIAG(195,7641
# define IF_DGCDIAG_ELSE(196,7669
# define _IF_DGCDIAG(198,7708
# define IF_DGCDIAG_ELSE(199,7732
typedef struct _opnd_t opnd_t;241,8706
typedef struct _instr_t instr_t;243,8754
typedef struct _fragment_t fragment_t;246,8829
typedef struct _future_fragment_t future_fragment_t;248,8895
typedef struct _trace_t trace_t;250,8965
typedef struct _linkstub_t linkstub_t;252,9018
typedef struct _dcontext_t dcontext_t;254,9077
typedef struct vm_area_vector_t vm_area_vector_t;256,9141
typedef struct _coarse_info_t coarse_info_t;258,9214
typedef struct _coarse_freeze_info_t coarse_freeze_info_t;260,9289
typedef struct _instr_list_t instrlist_t;264,9437
typedef struct _module_data_t module_data_t;265,9479
    uint year;274,9669
    uint month;275,9700
    uint day_of_week;276,9731
    uint day;277,9762
    uint hour;278,9793
    uint minute;279,9824
    uint second;280,9855
    uint milliseconds;281,9886
} dr_time_t;282,9917
typedef struct _rct_module_table_t rct_module_table_t;287,10041
    RCT_RAC 290,10113
    RCT_RCT,291,10130
    RCT_NUM_TYPES,292,10143
} rct_type_t;293,10162
typedef struct _thread_record_t 296,10184
    thread_id_t id;297,10218
    HANDLE handle;299,10271
    bool retakeover;300,10319
    process_id_t pid;302,10346
    bool execve;303,10390
    uint num;305,10465
    bool under_dynamo_control;306,10510
    dcontext_t *dcontext;dcontext307,10593
    struct _thread_record_t * next;308,10675
} thread_record_t;309,10711
# undef DYNAMORIO_EXPORT318,11052
# define DYNAMORIO_EXPORT 319,11077
typedef uint linkcount_type_t;324,11173
typedef uint64 linkcount_type_t;326,11210
typedef struct _client_to_do_list_t 342,11480
    instrlist_t *ilist;ilist345,11654
    app_pc tag;346,11678
    struct _client_to_do_list_t *next;next347,11694
} client_todo_list_t;348,11733
typedef struct _client_flush_req_t 351,11834
    app_pc start;352,11871
    size_t size;353,11889
    uint   flush_id;354,11906
    void (*flush_callback)flush_callback355,11975
    struct _client_flush_req_t *next;next356,12008
} client_flush_req_t;357,12046
#define IS_CLIENT_THREAD(361,12242
typedef struct _client_data_t 367,12481
    void *         user_field;369,12562
    client_todo_list_t * to_do;370,12593
    client_flush_req_t *flush_list;flush_list371,12625
    mutex_t            sideline_mutex;373,12685
    module_data_t      *no_delete_mod_data;no_delete_mod_data376,12818
    bool           is_client_thread;393,13950
    bool           client_thread_safe_for_synch;394,14023
    bool           suspendable;395,14072
    bool           left_unsuspended;396,14141
    uint           mutex_count;397,14221
    void           *client_grab_mutex;client_grab_mutex398,14288
    bool           is_translating;400,14341
    bool           in_pre_syscall;404,14466
    bool           in_post_syscall;405,14501
    bool           invoke_another_syscall;407,14584
    bool           mcontext_in_dcontext;409,14681
    bool           suspended;410,14722
    priv_mcontext_t *cur_mc;cur_mc411,14752
} client_data_t;412,14781
# define IS_CLIENT_THREAD(414,14804
typedef struct _pending_nudge_t 419,14955
    nudge_arg_t arg;420,14989
    struct _pending_nudge_t *next;next421,15010
} pending_nudge_t;422,15045
#define DYNAMORIO_STACK_SIZE 426,15119
# define standalone_library 446,16136
#define ALL_THREADS_HASH_BITS 505,17934
    WHERE_APP=582,21047
    WHERE_INTERP,583,21065
    WHERE_DISPATCH,584,21083
    WHERE_MONITOR,585,21103
    WHERE_SYSCALL_HANDLER,586,21122
    WHERE_SIGNAL_HANDLER,587,21149
    WHERE_TRAMPOLINE,588,21175
    WHERE_CONTEXT_SWITCH,589,21197
    WHERE_IBL,590,21223
    WHERE_FCACHE,591,21238
    WHERE_UNKNOWN,592,21256
    WHERE_HOTPATCH,594,21305
    WHERE_LAST596,21332
} where_am_i_t;597,21347
    READONLY=603,21483
    READONLY=false,603,21483
    WRITABLE=604,21504
    WRITABLE=true604,21504
    EXIT_REASON_SELFMOD 610,21669
    EXIT_REASON_FLOAT_PC_FNSAVE,612,21756
    EXIT_REASON_FLOAT_PC_FXSAVE,613,21789
    EXIT_REASON_FLOAT_PC_FXSAVE64,614,21822
    EXIT_REASON_FLOAT_PC_XSAVE,615,21857
    EXIT_REASON_FLOAT_PC_XSAVE64,616,21889
enum { MAX_NATIVE_RETSTACK 625,22256
typedef struct _retaddr_and_retloc_t 627,22292
    app_pc retaddr;628,22331
    app_pc retloc;629,22351
} retaddr_and_retloc_t;630,22370
typedef struct try_except_context_t 633,22437
    dr_jmp_buf_t context;639,22764
    struct try_except_context_t *prev_context;prev_context641,22791
} try_except_context_t;642,22838
typedef struct _try_except_t 648,23039
    try_except_context_t *try_except_state;try_except_state649,23070
    bool unwinding_exception;650,23143
} try_except_t;652,23287
    priv_mcontext_t mcontext;660,23496
    int            errno;662,23592
    bool at_syscall;664,23684
    ushort exit_reason;668,23969
    reg_t inline_spill_slots[inline_spill_slots673,24198
} unprotected_context_t;675,24263
struct _dcontext_t 687,24697
        unprotected_context_t *separate_upcontext;separate_upcontext707,25549
        unprotected_context_t upcontext;708,25600
    } upcontext;709,25641
    unprotected_context_t *upcontext_ptr;upcontext_ptr713,25821
    app_pc         next_tag;720,26115
    linkstub_t *     last_exit;722,26145
    byte *         dstack;723,26210
    bool           is_exiting;725,26281
    int            app_errno;729,26424
    void *         app_fls_data;730,26454
    void *         priv_fls_data;731,26487
    void *         app_nt_rpc;732,26521
    void *         priv_nt_rpc;733,26552
    void *         app_nls_cache;734,26584
    void *         priv_nls_cache;735,26618
    void *         app_stack_limit;737,26666
    byte *         teb_base;740,26778
    app_pc         sysenter_storage;746,27073
    bool           ignore_enterexit;749,27193
        app_pc src_tag;759,27548
        coarse_info_t *dir_exit;dir_exit760,27572
    } coarse_exit;761,27605
    bool           initialized;768,27852
    thread_id_t      owning_thread;769,27926
    process_id_t     owning_process;771,27974
    thread_record_t   *thread_record;thread_record773,28067
    where_am_i_t       whereami;774,28148
    void *         allocated_start;775,28225
    fragment_t *     last_fragment;776,28292
    int            sys_num;778,28382
    reg_t *        sys_param_base;780,28465
    reg_t          sys_param0;783,28574
    reg_t          sys_param1;784,28642
    reg_t          sys_param2;785,28710
    reg_t          sys_param3;786,28778
    reg_t          sys_param4;789,28865
    bool           sys_was_int;790,28939
    bool           sys_xbp;791,29026
    bool           mprot_multi_areas;793,29108
    bool           x86_mode;803,29479
    void *         link_field;807,29571
    void *         monitor_field;808,29602
    void *         fcache_field;809,29636
    void *         fragment_field;810,29669
    void *         heap_field;811,29704
    void *         vm_areas_field;812,29735
    void *         os_field;813,29770
    void *         synch_field;814,29799
    void *         signal_field;816,29843
    void *         pcprofile_field;817,29876
    bool           signals_pending;818,29912
    void *         private_code;820,29955
    cache_pc       trace_head_pc;823,30065
    dcontext_t *next_saved;next_saved829,30257
    dcontext_t *prev_unused;prev_unused831,30293
    bool           valid;833,30400
    reg_t          nonswapped_scratch;839,30735
    app_pc         asynch_target;846,30982
    app_pc         native_exec_postsyscall;851,31140
    retaddr_and_retloc_t native_retstack[native_retstack856,31308
    uint native_retstack_cur;857,31371
    bool           alloc_no_reserve;860,31429
    int num_calls;864,31553
    int num_rets;865,31572
    int call_depth;866,31590
    int            call_depth;870,31644
    void *         call_stack;871,31675
    file_t                        logfile;875,31727
    thread_local_statistics_t *     thread_stats;876,31770
    bool                        expect_last_syscall_to_fail;877,31820
    bool                        in_opnd_disassemble;881,32016
    thread_locks_t *               thread_owned_locks;884,32114
    thread_kstats_t *              thread_kstats;887,32190
    uint64         cache_enter_time;891,32269
    uint64         start_time;892,32306
    fragment_t *     prev_fragment;893,32380
    uint64         cache_frag_count;895,32455
    uint64         cache_time[cache_time896,32536
    uint64         cache_count[cache_count897,32608
    client_data_t *client_data;client_data902,32750
    bool           trace_sysenter_exit;913,33311
    app_pc         forged_exception_addr;917,33502
    bool           nudge_thread;920,33603
    dr_jmp_buf_t   hotp_excpt_state;921,33682
    try_except_t   try_except;923,33767
    aslr_syscall_context_t aslr_context;931,34119
    void           *nudge_target;nudge_target942,34794
    bool           free_app_stack;946,34955
    bool           nudge_terminate_process;949,35045
    uint           nudge_exit_code;950,35089
    local_state_t *local_state;local_state956,35266
    app_pc win32_start_addr;965,35672
    void *bb_build_info;bb_build_info969,35793
    pending_nudge_t *nudge_pending;nudge_pending972,35831
    fragment_t *interrupted_for_nudge;interrupted_for_nudge974,35921
    int libc_errno;977,36038
    bool post_syscall;981,36086
#define GLOBAL_DCONTEXT 989,36228
get_mcontext(993,36400
    DUMP_XML=1005,36865
    DUMP_XML=true,1005,36865
    DUMP_NOT_XML=1006,36884
    DUMP_NOT_XML=false1006,36884
#undef snprintf 1016,37321
#define snprintf 1017,37360
#undef _snprintf1018,37390
#define _snprintf 1019,37407
#undef vsnprintf1020,37438
#define vsnprintf 1021,37455
#define snwprintf 1022,37487
#define _snwprintf 1023,37524
#define sscanf 1030,37901
#  define strcasecmp 1037,38008
#  define strncasecmp 1038,38038
#  define wcscasecmp 1039,38070
#  define printf 1043,38180
#  undef sprintf 1044,38225
#  define sprintf 1045,38265
#  define swprintf 1046,38311
#  undef vsprintf 1047,38358
#  define vsprintf 1048,38399
#  define __try 1049,38446
#  define mprotect 1052,38536
#  define mmap 1053,38587
#  define munmap 1054,38634
#  define getppid 1055,38683
#  define sched_yield 1056,38733
#  define dup 1057,38787
#  define sigaltstack 1058,38833
#  define setitimer 1059,38887
#  define _exit 1060,38939
#  define gettimeofday 1061,38987
#  define time 1062,39042
#  define modify_ldt 1063,39089

heap.h,2821
#define _HEAP_H_ 43,1966
    ACCT_FRAGMENT=47,2024
    ACCT_COARSE_LINK,48,2045
    ACCT_FRAG_FUTURE,49,2067
    ACCT_FRAG_TABLE,50,2089
    ACCT_IBLTABLE,51,2110
    ACCT_TRACE,52,2129
    ACCT_FCACHE_EMPTY,53,2145
    ACCT_VMAREA_MULTI,54,2168
    ACCT_IR,55,2191
    ACCT_AFTER_CALL,56,2204
    ACCT_VMAREAS,57,2225
    ACCT_SYMBOLS,58,2243
    ACCT_SIDELINE,60,2278
    ACCT_THCOUNTER,62,2305
    ACCT_TOMBSTONE,63,2325
    ACCT_HOT_PATCHING,66,2441
    ACCT_THREAD_MGT,67,2464
    ACCT_MEM_MGT,68,2485
    ACCT_STATS,69,2503
    ACCT_SPECIAL,70,2519
    ACCT_CLIENT,72,2562
    ACCT_LIBDUP,74,2587
    ACCT_CLEANCALL,75,2652
    ACCT_OTHER,77,2746
    ACCT_LAST78,2762
} which_heap_t;79,2776
# define HEAPACCT(81,2793
# define IF_HEAPACCT_ELSE(82,2818
# define HEAPACCT(84,2858
# define IF_HEAPACCT_ELSE(85,2879
    MAP_FILE_COPY_ON_WRITE 89,2936
    MAP_FILE_COPY_ON_WRITE   = 0x0001,x000189,2936
    MAP_FILE_IMAGE 90,2975
    MAP_FILE_IMAGE           = 0x0002,x000290,2975
    MAP_FILE_FIXED 91,3033
    MAP_FILE_FIXED           = 0x0004,x000491,3033
    MAP_FILE_REACHABLE 92,3089
    MAP_FILE_REACHABLE       = 0x0008,x000892,3089
} map_flags_t;93,3172
typedef byte * heap_pc;95,3188
#define HEAP_ALIGNMENT 96,3212
#define UNPROTECTED_LOCAL_ALLOC(213,7559
#define UNPROTECTED_LOCAL_FREE(214,7643
#define UNPROTECTED_GLOBAL_ALLOC 215,7725
#define UNPROTECTED_GLOBAL_FREE 216,7788
#define FRAGMENT_ALLOC_DC(219,7927
#define FRAGMENT_TABLE_ALLOC_DC(220,8018
#define PROTECTED 226,8265
#define UNPROTECTED 227,8288
#define HEAP_ARRAY_ALLOC(228,8314
#define HEAP_TYPE_ALLOC(232,8549
#define HEAP_ARRAY_ALLOC_MEMSET(234,8655
#define HEAP_ARRAY_FREE(238,8836
#define HEAP_TYPE_FREE(242,9073
#define NONPERSISTENT_HEAP_ARRAY_ALLOC(246,9236
#define NONPERSISTENT_HEAP_TYPE_ALLOC(248,9377
#define NONPERSISTENT_HEAP_ARRAY_FREE(250,9489
#define NONPERSISTENT_HEAP_TYPE_FREE(252,9632
typedef struct _special_heap_iterator 268,10308
    void *heap;heap270,10412
    void *next_unit;next_unit271,10428
} special_heap_iterator_t;272,10449
# define HEAP_TO_BYTE_EX(315,12107
# define HEAP_TO_BYTE(316,12145
# define HEAP_TO_UINT_EX(317,12193
# define HEAP_TO_UINT(318,12246
#  define HEAP_TO_PTR_UINT_EX(320,12306
#  define HEAP_TO_PTR_UINT_EX(322,12391
# define HEAP_TO_PTR_UINT(324,12457
# define HEAP_UNALLOCATED 326,12514
# define HEAP_UNALLOCATED_BYTE 327,12543
# define HEAP_UNALLOCATED_UINT 328,12605
# define HEAP_UNALLOCATED_PTR_UINT 329,12667
# define HEAP_ALLOCATED 331,12738
# define HEAP_ALLOCATED_BYTE 332,12765
# define HEAP_ALLOCATED_UINT 333,12823
# define HEAP_ALLOCATED_PTR_UINT 334,12881
# define HEAP_PAD 336,12948
# define HEAP_PAD_BYTE 337,12969
# define HEAP_PAD_UINT 338,13015
# define HEAP_PAD_PTR_UINT 339,13061

options.c,4467
#  define inline 56,2235
#  define snprintf 57,2261
#  define WIN32_LEAN_AND_MEAN58,2290
typedef unsigned int uint;64,2426
# define print_file(66,2454
typedef char bool;69,2496
#  define true 72,2537
#  define false 73,2557
#  define NULL 76,2599
 struct stats_type 79,2628
     int logmask;80,2649
     int loglevel;81,2667
 } thestats;82,2686
 struct stats_type *stats stats84,2700
# define ASSERT(89,2921
# define OPTION_PARSE_ERROR(93,3055
static void ignore_varargs_function(95,3103
# define FATAL_USAGE_ERROR(97,3219
# define USAGE_ERROR 99,3312
# define DOLOG(100,3371
#  define OPTION_COMMAND_INTERNAL(109,3556
#  define OPTION_COMMAND(110,3692
const internal_options_t default_internal_options 115,3951
#undef OPTION_COMMAND_INTERNAL118,4032
#undef OPTION_COMMAND119,4063
#  define OPTION_COMMAND_INTERNAL 124,4125
#  define OPTION_COMMAND_INTERNAL(136,4778
#define OPTION_COMMAND(141,4950
const options_t default_options 146,5197
# define SELF_PROTECT_OPTIONS(152,5333
# define SELF_UNPROTECT_OPTIONS(153,5407
# define OPTIONS_PROTECTED(157,5608
char option_string[option_string162,5783
# define ASSERT_OWN_OPTIONS_LOCK(163,5830
# define CORE_STATIC 164,5897
options_t dynamo_options 166,5948
options_t temp_options 176,6413
# define ASSERT_OWN_OPTIONS_LOCK(187,6821
# define CORE_STATIC188,6860
#undef OPTION_COMMAND191,6954
set_dynamo_options_defaults(198,7072
#undef OPTION_COMMAND_INTERNAL203,7252
#  define OPTION_COMMAND_INTERNAL 207,7425
#  define OPTION_COMMAND_INTERNAL(209,7481
getword_common(219,7933
getword(281,9676
parse_word(288,9869
#define ISBOOL_bool 293,10034
#define ISBOOL_uint 294,10056
#define ISBOOL_uint_size 295,10078
#define ISBOOL_uint_time 296,10105
#define ISBOOL_uint_addr 297,10132
#define ISBOOL_pathstring_t 298,10159
#define ISBOOL_liststring_t 299,10189
parse_bool(302,10232
parse_uint(308,10311
parse_uint_size(325,10818
parse_uint_time(354,11717
parse_uint_addr(379,12519
parse_pathstring_t(395,13004
parse_liststring_t(407,13518
#define OPTION_COMMAND(439,14915
set_dynamo_options_common(464,16565
#undef OPTION_COMMAND520,18756
set_dynamo_options(523,18795
set_dynamo_options_other_process(530,18984
check_param_bounds(542,19332
PRINT_STRING_bool(579,20671
PRINT_STRING_uint(585,20852
#define PRINT_STRING_uint_size(592,21131
#define PRINT_STRING_uint_time(596,21367
#define PRINT_STRING_uint_addr(598,21497
#define PRINT_STRING_pathstring_t(600,21631
#define PRINT_STRING_liststring_t(601,21761
#define DIFF_bool(604,21893
#define DIFF_uint(605,21947
#define DIFF_uint_size(606,22001
#define DIFF_uint_time(607,22060
#define DIFF_uint_addr(608,22119
#define DIFF_pathstring_t(609,22178
#define DIFF_liststring_t(610,22243
#define COPY_bool(612,22309
#define COPY_uint(613,22362
#define COPY_uint_size(614,22415
#define COPY_uint_time(615,22473
#define COPY_uint_addr(616,22531
#define COPY_pathstring_t(617,22589
#define COPY_liststring_t(618,22670
get_dynamo_options_string(622,22815
#define OPTION_COMMAND(627,22958
#undef OPTION_COMMAND640,23803
get_pcache_dynamo_options_string(652,24071
#define OPTION_COMMAND(658,24267
#undef OPTION_COMMAND671,25115
has_pcache_dynamo_options(680,25319
#define OPTION_COMMAND(682,25394
#undef OPTION_COMMAND692,26020
enum {OPTION_TYPE_STATIC,OPTION_TYPE_STATIC696,26063
enum {OPTION_TYPE_STATIC, OPTION_TYPE_DYNAMIC}OPTION_TYPE_DYNAMIC696,26063
static char optionbuff[optionbuff701,26279
static char new_optionbuff[new_optionbuff702,26322
update_dynamic_options(708,26509
#define OPTION_COMMAND(715,26731
#undef OPTION_COMMAND742,28620
check_list_default_and_append(753,28966
#define SECURITY_OPTION_CONSISTENT(789,30395
check_option_compatibility_helper(800,31031
# define MAX_NUM_LIB_TLS_PAGES 1872,78965
check_option_compatibility(1903,80132
check_dynamic_option_compatibility(1912,80353
options_init(1922,80628
options_exit(1942,81284
options_make_writable(1949,81403
options_restore_readonly(1960,81660
synchronize_dynamic_options(1969,81867
get_process_options(2058,85276
dr_get_string_option(2103,87106
#define OPTION_COMMAND(2108,87289
#undef OPTION_COMMAND2116,87785
dr_get_integer_option(2125,87917
#define OPTION_COMMAND(2136,88397
#undef OPTION_COMMAND2144,88893
show_dynamo_options(2155,89042
show_dynamo_option_descriptions(2170,89536
#define OPTION_COMMAND(2172,89572
#undef OPTION_COMMAND2179,89982
unit_test_options(2183,90012

unix/os_exports.h,1980
#define _OS_EXPORTS_H_ 43,2007
# define _XOPEN_SOURCE 48,2092
# define getpid 53,2244
#define DYNAMORIO_LIBRARY_NAME 56,2304
#define DYNAMORIO_PRELOAD_NAME 57,2353
#define OS_ALLOC_GRANULARITY 60,2450
#define MAP_FILE_VIEW_ALIGNMENT 61,2492
# define SEG_TLS 72,2890
# define ASM_SEG 73,2914
# define LIB_SEG_TLS 74,2937
# define LIB_ASM_SEG 75,2987
# define SEG_TLS 77,3020
# define ASM_SEG 78,3044
# define LIB_SEG_TLS 79,3067
# define LIB_ASM_SEG 80,3117
#define unsetenv 128,4850
# define DECLARE_DATA_SECTION(141,5336
# define DECLARE_DATA_SECTION(145,5454
# define END_DATA_SECTION_DECLARATIONS(157,5989
# define END_DATA_SECTION_DECLARATIONS(162,6119
#define START_DATA_SECTION(169,6306
#define END_DATA_SECTION(170,6357
# define VAR_IN_SECTION(177,6637
# define VAR_IN_SECTION(179,6715
#define VSYSCALL_PAGE_MAPS_NAME 188,7052
#define NUM_NONRT 209,7618
#define OFFS_RT 210,7658
#define NUM_RT 211,7681
#define MAX_SIGNUM 213,7801
#define SIGARRAY_SIZE 216,7926
# define _NSIG_BPW 220,7996
# define _NSIG_BPW 222,8024
#define _NSIG_WORDS 225,8054
typedef struct _kernel_sigset_t 230,8213
    unsigned long sig[sig231,8247
} kernel_sigset_t;232,8283
#  define SIGCXT_TYPE 240,8490
#  define SIGCXT_TYPE 242,8538
# define SIGCXT_TYPE 245,8591
#define CONTEXT_HEAP_SIZE(247,8637
#define CONTEXT_HEAP_SIZE_OPAQUE 248,8680
# define SC_FIELD(253,8884
# define SC_FIELD(255,8928
# define SC_XIP 258,8975
# define SC_XAX 259,9005
# define SC_XCX 260,9035
# define SC_XDX 261,9065
# define SC_XBX 262,9095
# define SC_XSP 263,9125
# define SC_XBP 264,9155
# define SC_XSI 265,9185
# define SC_XDI 266,9215
#  define SC_XFLAGS 268,9259
#  define SC_XFLAGS 270,9303
# define SC_XIP 273,9354
# define SC_XAX 274,9384
# define SC_XCX 275,9414
# define SC_XDX 276,9444
# define SC_XBX 277,9474
# define SC_XSP 278,9504
# define SC_XBP 279,9534
# define SC_XSI 280,9564
# define SC_XDI 281,9594
# define SC_XFLAGS 282,9624

unix/nudgesig.c,64
create_nudge_signal_payload(51,2042
send_nudge_signal(77,2729

unix/preload.c,272
#define START_DYNAMO 44,2080
#define VERBOSE_INIT_FINI 45,2142
#define VERBOSE 46,2214
#define INIT_BEFORE_LIBC 47,2232
#define pf(61,2487
#define pf(63,2541
#define MAX_COMMAND_LENGTH 81,3165
int nothing 84,3239
take_over(95,3715
_init(151,5363
_fini 199,6539

unix/module.c,3303
typedef union _elf_generic_header_t 44,2100
    Elf64_Ehdr elf64;45,2138
    Elf32_Ehdr elf32;46,2160
} elf_generic_header_t;47,2182
# undef LOG50,2240
# define LOG(51,2252
typedef struct _elf_import_iterator_t 55,2348
    dr_symbol_import_t symbol_import;56,2388
    ELF_SYM_TYPE *dynsym;dynsym61,2605
    size_t symentry_size;62,2676
    const char *dynstr;dynstr63,2746
    size_t dynstr_size;64,2817
    ELF_SYM_TYPE *cur_sym;cur_sym66,2880
    ELF_SYM_TYPE safe_cur_sym;67,2960
    ELF_SYM_TYPE *import_end;import_end68,3034
    bool error_occurred;69,3106
} elf_import_iterator_t;70,3175
# define DT_GNU_HASH 75,3330
# define STT_GNU_IFUNC 79,3392
is_elf_so_header_common(108,4700
is_elf_so_header(172,7103
os_modules_init(178,7210
os_modules_exit(184,7260
elf_dt_abs_addr(193,7421
module_segment_prot_to_osprot(233,9203
module_add_segment_data(249,9670
module_fill_os_data(305,12144
module_walk_program_headers(415,17128
module_num_program_headers(481,20179
module_vaddr_from_prog_header(495,20578
module_read_program_header(525,21696
module_hashtab_init(559,23134
os_module_area_init(590,24451
free_module_names(693,28806
print_modules(704,29118
os_module_area_reset(735,30237
elf_hash(765,31527
elf_gnu_hash(780,31787
elf_sym_matches(789,31971
gnu_hash_lookup(811,32790
elf_hash_lookup(856,34285
get_proc_address_from_os_data(894,35454
get_proc_address_ex(928,36911
get_proc_address(967,38485
get_named_section_bounds(974,38664
rct_is_exported_function(987,38989
get_module_short_name(996,39179
get_module_company_name(1004,39377
get_module_base(1011,39519
is_range_in_code_section(1025,39844
is_in_code_section(1034,40148
is_in_dot_data_section(1043,40421
is_in_any_section(1052,40702
is_mapped_as_image(1060,40890
os_get_module_info(1083,41830
os_get_module_info_all_names(1134,43502
os_module_get_rct_htable(1147,43940
module_get_nth_segment(1158,44270
module_get_header_size(1187,45247
get_elf_platform(1201,45656
file_is_elf64(1220,46263
module_has_text_relocs(1237,46793
module_has_text_relocs_ex(1282,48362
module_get_section_with_name(1294,48686
module_read_os_data(1322,49775
get_shared_lib_name(1351,50828
module_get_os_privmod_data(1365,51188
module_find_phdr(1501,56077
module_get_relro(1516,56467
module_lookup_symbol(1534,57056
module_undef_symbols(1596,59168
dr_module_import_iterator_start(1606,59407
dr_module_import_iterator_hasnext(1614,59601
dr_module_import_iterator_next(1620,59714
dr_module_import_iterator_stop(1626,59807
dynsym_next(1631,59890
dynsym_next_import(1638,60071
dr_symbol_import_iterator_start(1663,60933
dr_symbol_import_iterator_hasnext(1730,63562
dr_symbol_import_iterator_next(1738,63829
dr_symbol_import_iterator_stop(1752,64280
module_relocate_symbol(1762,64568
module_relocate_rel(1899,68984
module_relocate_rela(1911,69265
module_get_text_section(1928,69745
redirect_malloc(1958,70867
redirect_realloc(1977,71431
redirect_calloc(1996,71954
redirect_free(2011,72303
os_read_until(2025,72650
elf_loader_init(2039,72931
elf_loader_destroy(2048,73145
elf_loader_read_ehdr(2060,73401
elf_loader_map_file(2079,73996
elf_loader_read_phdrs(2100,74781
elf_loader_read_headers(2125,75724
elf_loader_map_phdrs(2137,76012
elf_loader_find_pt_interp(2255,81423

unix/symtab.c,360
static uint bfd_symcount,51,2242
static uint bfd_symcount, nonnull_symcount;51,2242
static asymbol **bfd_syms bfd_syms52,2286
static bfd *infile infile53,2320
compare_symbols 56,2367
sort_symtab(78,3009
lookup_symbol_address(102,3709
prepare_symtab(138,4758
get_symtab(157,5273
symtab_init(191,6217
symtab_exit(229,7180
symtab_lookup_pc(235,7235

unix/include/signalfd.h,565
#define _SIGNALFD_H14,659
#define SFD_CLOEXEC 19,731
#define SFD_NONBLOCK 20,761
struct signalfd_siginfo 22,794
	__u32 ssi_signo;23,820
	__s32 ssi_errno;24,838
	__s32 ssi_code;25,856
	__u32 ssi_pid;26,873
	__u32 ssi_uid;27,889
	__s32 ssi_fd;28,905
	__u32 ssi_tid;29,920
	__u32 ssi_band;30,936
	__u32 ssi_overrun;31,953
	__u32 ssi_trapno;32,973
	__s32 ssi_status;33,992
	__s32 ssi_int;34,1011
	__u64 ssi_ptr;35,1027
	__u64 ssi_utime;36,1043
	__u64 ssi_stime;37,1061
	__u64 ssi_addr;38,1079
	__u16 ssi_addr_lsb;39,1096
	__u8 __pad[__pad50,1498

unix/include/sigcontext.h,4028
#define _SIGCONTEXT_H_14,662
#define _BITS_SIGCONTEXT_H 17,734
#define _ASM_X86_SIGCONTEXT_H 21,895
#define _ASMi386_SIGCONTEXT_H 22,927
#define _ASM_X86_64_SIGCONTEXT_H 23,959
#define _ASM_X86_SIGCONTEXT32_H 24,994
#define FP_XSTATE_MAGIC1	28,1055
#define FP_XSTATE_MAGIC2	29,1092
#define FP_XSTATE_MAGIC2_SIZE	30,1129
struct _fpx_sw_bytes 44,1790
	__u32 magic1;45,1813
	__u32 extended_size;46,1852
	__u64 xstate_bv;49,1964
	__u32 xstate_size;54,2100
	__u32 padding[padding59,2272
struct _fpreg 77,2855
	unsigned short significand[significand78,2871
	unsigned short exponent;79,2903
struct _fpxreg 82,2933
	unsigned short significand[significand83,2950
	unsigned short exponent;84,2982
	unsigned short padding[padding85,3008
struct _xmmreg 88,3040
	unsigned long element[element89,3057
struct _fpstate 92,3088
	unsigned long	cw;94,3137
	unsigned long	sw;95,3156
	unsigned long	tag;96,3175
	unsigned long	ipoff;97,3195
	unsigned long	cssel;98,3217
	unsigned long	dataoff;99,3239
	unsigned long	datasel;100,3263
	struct _fpreg	_st[_st101,3287
	unsigned short	status;102,3310
	unsigned short	magic;103,3334
	unsigned long	_fxsr_env[_fxsr_env106,3424
	unsigned long	mxcsr;107,3483
	unsigned long	reserved;108,3505
	struct _fpxreg	_fxsr_st[_fxsr_st109,3530
	struct _xmmreg	_xmm[_xmm110,3594
	unsigned long	padding1[padding1111,3619
		unsigned long	padding2[padding2114,3658
		struct _fpx_sw_bytes sw_reserved;115,3688
#define X86_FXSR_MAGIC	120,3784
struct sigcontext 125,3877
	unsigned short gs,126,3897
	unsigned short gs, __gsh;126,3897
	unsigned short fs,127,3924
	unsigned short fs, __fsh;127,3924
	unsigned short es,128,3951
	unsigned short es, __esh;128,3951
	unsigned short ds,129,3978
	unsigned short ds, __dsh;129,3978
	unsigned long edi;130,4005
	unsigned long esi;131,4025
	unsigned long ebp;132,4045
	unsigned long esp;133,4065
	unsigned long ebx;134,4085
	unsigned long edx;135,4105
	unsigned long ecx;136,4125
	unsigned long eax;137,4145
	unsigned long trapno;138,4165
	unsigned long err;139,4188
	unsigned long eip;140,4208
	unsigned short cs,141,4228
	unsigned short cs, __csh;141,4228
	unsigned long eflags;142,4255
	unsigned long esp_at_signal;143,4278
	unsigned short ss,144,4308
	unsigned short ss, __ssh;144,4308
	struct _fpstate *fpstate;fpstate145,4335
	unsigned long oldmask;146,4362
	unsigned long cr2;147,4386
struct _fpstate 155,4569
	__u16	cwd;156,4587
	__u16	swd;157,4599
	__u16	twd;158,4611
	__u16	fop;160,4690
	__u64	rip;161,4702
	__u64	rdp;162,4714
	__u32	mxcsr;163,4726
	__u32	mxcsr_mask;164,4740
	__u32	st_space[st_space165,4759
	__u32	xmm_space[xmm_space166,4813
	__u32	reserved2[reserved2167,4871
		__u32	reserved3[reserved3169,4902
		struct _fpx_sw_bytes sw_reserved;170,4925
struct sigcontext 178,5089
	unsigned long r8;179,5109
	unsigned long r9;180,5128
	unsigned long r10;181,5147
	unsigned long r11;182,5167
	unsigned long r12;183,5187
	unsigned long r13;184,5207
	unsigned long r14;185,5227
	unsigned long r15;186,5247
	unsigned long rdi;187,5267
	unsigned long rsi;188,5287
	unsigned long rbp;189,5307
	unsigned long rbx;190,5327
	unsigned long rdx;191,5347
	unsigned long rax;192,5367
	unsigned long rcx;193,5387
	unsigned long rsp;194,5407
	unsigned long rip;195,5427
	unsigned long eflags;196,5447
	unsigned short cs;197,5484
	unsigned short gs;198,5504
	unsigned short fs;199,5524
	unsigned short __pad0;200,5544
	unsigned long err;201,5568
	unsigned long trapno;202,5588
	unsigned long oldmask;203,5611
	unsigned long cr2;204,5635
	struct _fpstate *fpstate;fpstate205,5655
	unsigned long reserved1[reserved1206,5713
struct _xsave_hdr 211,5770
	__u64 xstate_bv;212,5790
	__u64 reserved1[reserved1213,5808
	__u64 reserved2[reserved2214,5829
struct _ymmh_state 217,5854
	__u32 ymmh_space[ymmh_space219,5914
struct _xstate 228,6185
	struct _fpstate fpstate;229,6202
	struct _xsave_hdr xstate_hdr;230,6228
	struct _ymmh_state ymmh;231,6259

unix/include/syscall.h,46281
#define _SYSCALL_H_ 14,659
# define __NR_read 19,760
# define __NR_write 20,810
# define __NR_open 21,860
# define __NR_close 22,910
# define __NR_stat 23,960
# define __NR_fstat 24,1010
# define __NR_lstat 25,1060
# define __NR_poll 26,1110
# define __NR_lseek 27,1160
# define __NR_mmap 28,1210
# define __NR_mprotect 29,1260
# define __NR_munmap 30,1311
# define __NR_brk 31,1362
# define __NR_rt_sigaction 32,1413
# define __NR_rt_sigprocmask 33,1464
# define __NR_rt_sigreturn 34,1515
# define __NR_ioctl 35,1566
# define __NR_pread64 36,1617
# define __NR_pwrite64 37,1668
# define __NR_readv 38,1719
# define __NR_writev 39,1770
# define __NR_access 40,1821
# define __NR_pipe 41,1872
# define __NR_select 42,1923
# define __NR_sched_yield 43,1974
# define __NR_mremap 44,2025
# define __NR_msync 45,2076
# define __NR_mincore 46,2127
# define __NR_madvise 47,2178
# define __NR_shmget 48,2229
# define __NR_shmat 49,2280
# define __NR_shmctl 50,2331
# define __NR_dup 51,2382
# define __NR_dup2 52,2433
# define __NR_pause 53,2484
# define __NR_nanosleep 54,2535
# define __NR_getitimer 55,2586
# define __NR_alarm 56,2637
# define __NR_setitimer 57,2688
# define __NR_getpid 58,2739
# define __NR_sendfile 59,2790
# define __NR_socket 60,2841
# define __NR_connect 61,2892
# define __NR_accept 62,2943
# define __NR_sendto 63,2994
# define __NR_recvfrom 64,3045
# define __NR_sendmsg 65,3096
# define __NR_recvmsg 66,3147
# define __NR_shutdown 67,3198
# define __NR_bind 68,3249
# define __NR_listen 69,3300
# define __NR_getsockname 70,3351
# define __NR_getpeername 71,3402
# define __NR_socketpair 72,3453
# define __NR_setsockopt 73,3504
# define __NR_getsockopt 74,3555
# define __NR_clone 75,3606
# define __NR_fork 76,3657
# define __NR_vfork 77,3708
# define __NR_execve 78,3759
# define __NR_exit 79,3810
# define __NR_wait4 80,3861
# define __NR_kill 81,3912
# define __NR_uname 82,3963
# define __NR_semget 83,4014
# define __NR_semop 84,4065
# define __NR_semctl 85,4116
# define __NR_shmdt 86,4167
# define __NR_msgget 87,4218
# define __NR_msgsnd 88,4269
# define __NR_msgrcv 89,4320
# define __NR_msgctl 90,4371
# define __NR_fcntl 91,4422
# define __NR_flock 92,4473
# define __NR_fsync 93,4524
# define __NR_fdatasync 94,4575
# define __NR_truncate 95,4626
# define __NR_ftruncate 96,4677
# define __NR_getdents 97,4728
# define __NR_getcwd 98,4779
# define __NR_chdir 99,4830
# define __NR_fchdir 100,4881
# define __NR_rename 101,4932
# define __NR_mkdir 102,4983
# define __NR_rmdir 103,5034
# define __NR_creat 104,5085
# define __NR_link 105,5136
# define __NR_unlink 106,5187
# define __NR_symlink 107,5238
# define __NR_readlink 108,5289
# define __NR_chmod 109,5340
# define __NR_fchmod 110,5391
# define __NR_chown 111,5442
# define __NR_fchown 112,5493
# define __NR_lchown 113,5544
# define __NR_umask 114,5595
# define __NR_gettimeofday 115,5646
# define __NR_getrlimit 116,5697
# define __NR_getrusage 117,5748
# define __NR_sysinfo 118,5799
# define __NR_times 119,5850
# define __NR_ptrace 120,5902
# define __NR_getuid 121,5954
# define __NR_syslog 122,6006
# define __NR_getgid 124,6128
# define __NR_setuid 125,6180
# define __NR_setgid 126,6232
# define __NR_geteuid 127,6284
# define __NR_getegid 128,6336
# define __NR_setpgid 129,6388
# define __NR_getppid 130,6440
# define __NR_getpgrp 131,6492
# define __NR_setsid 132,6544
# define __NR_setreuid 133,6596
# define __NR_setregid 134,6648
# define __NR_getgroups 135,6700
# define __NR_setgroups 136,6752
# define __NR_setresuid 137,6804
# define __NR_getresuid 138,6856
# define __NR_setresgid 139,6908
# define __NR_getresgid 140,6960
# define __NR_getpgid 141,7012
# define __NR_setfsuid 142,7064
# define __NR_setfsgid 143,7116
# define __NR_getsid 144,7168
# define __NR_capget 145,7220
# define __NR_capset 146,7272
# define __NR_rt_sigpending 147,7324
# define __NR_rt_sigtimedwait 148,7376
# define __NR_rt_sigqueueinfo 149,7428
# define __NR_rt_sigsuspend 150,7480
# define __NR_sigaltstack 151,7532
# define __NR_utime 152,7584
# define __NR_mknod 153,7636
# define __NR_uselib 155,7716
# define __NR_personality 156,7768
# define __NR_ustat 157,7820
# define __NR_statfs 158,7872
# define __NR_fstatfs 159,7924
# define __NR_sysfs 160,7976
# define __NR_getpriority 161,8028
# define __NR_setpriority 162,8080
# define __NR_sched_setparam 163,8132
# define __NR_sched_getparam 164,8184
# define __NR_sched_setscheduler 165,8236
# define __NR_sched_getscheduler 166,8288
# define __NR_sched_get_priority_max 167,8340
# define __NR_sched_get_priority_min 168,8392
# define __NR_sched_rr_get_interval 169,8444
# define __NR_mlock 170,8496
# define __NR_munlock 171,8548
# define __NR_mlockall 172,8600
# define __NR_munlockall 173,8652
# define __NR_vhangup 174,8704
# define __NR_modify_ldt 175,8756
# define __NR_pivot_root 176,8808
# define __NR__sysctl 177,8860
# define __NR_prctl 178,8912
# define __NR_arch_prctl 179,8964
# define __NR_adjtimex 180,9016
# define __NR_setrlimit 181,9068
# define __NR_chroot 182,9120
# define __NR_sync 183,9172
# define __NR_acct 184,9224
# define __NR_settimeofday 185,9276
# define __NR_mount 186,9328
# define __NR_umount2 187,9380
# define __NR_swapon 188,9432
# define __NR_swapoff 189,9484
# define __NR_reboot 190,9536
# define __NR_sethostname 191,9588
# define __NR_setdomainname 192,9640
# define __NR_iopl 193,9692
# define __NR_ioperm 194,9744
# define __NR_create_module 195,9796
# define __NR_init_module 196,9848
# define __NR_delete_module 197,9900
# define __NR_get_kernel_syms 198,9952
# define __NR_query_module 199,10004
# define __NR_quotactl 200,10056
# define __NR_nfsservctl 201,10108
# define __NR_getpmsg 203,10191
# define __NR_putpmsg 204,10243
# define __NR_afs_syscall 206,10318
# define __NR_tuxcall 208,10393
# define __NR_security 209,10445
# define __NR_gettid 210,10497
# define __NR_readahead 211,10549
# define __NR_setxattr 212,10601
# define __NR_lsetxattr 213,10653
# define __NR_fsetxattr 214,10705
# define __NR_getxattr 215,10757
# define __NR_lgetxattr 216,10809
# define __NR_fgetxattr 217,10861
# define __NR_listxattr 218,10913
# define __NR_llistxattr 219,10965
# define __NR_flistxattr 220,11017
# define __NR_removexattr 221,11069
# define __NR_lremovexattr 222,11121
# define __NR_fremovexattr 223,11173
# define __NR_tkill 224,11225
# define __NR_time 225,11277
# define __NR_futex 226,11329
# define __NR_sched_setaffinity 227,11381
# define __NR_sched_getaffinity 228,11433
# define __NR_set_thread_area 229,11485
# define __NR_io_setup 230,11537
# define __NR_io_destroy 231,11589
# define __NR_io_getevents 232,11641
# define __NR_io_submit 233,11693
# define __NR_io_cancel 234,11745
# define __NR_get_thread_area 235,11797
# define __NR_lookup_dcookie 236,11849
# define __NR_epoll_create 237,11901
# define __NR_epoll_ctl_old 238,11953
# define __NR_epoll_wait_old 239,12005
# define __NR_remap_file_pages 240,12057
# define __NR_getdents64 241,12109
# define __NR_set_tid_address 242,12161
# define __NR_restart_syscall 243,12213
# define __NR_semtimedop 244,12265
# define __NR_fadvise64 245,12317
# define __NR_timer_create 246,12369
# define __NR_timer_settime 247,12421
# define __NR_timer_gettime 248,12473
# define __NR_timer_getoverrun 249,12525
# define __NR_timer_delete 250,12577
# define __NR_clock_settime 251,12629
# define __NR_clock_gettime 252,12681
# define __NR_clock_getres 253,12733
# define __NR_clock_nanosleep 254,12785
# define __NR_exit_group 255,12837
# define __NR_epoll_wait 256,12889
# define __NR_epoll_ctl 257,12941
# define __NR_tgkill 258,12993
# define __NR_utimes 259,13045
# define __NR_vserver 260,13097
# define __NR_mbind 261,13149
# define __NR_set_mempolicy 262,13201
# define __NR_get_mempolicy 263,13253
# define __NR_mq_open 264,13305
# define __NR_mq_unlink 265,13357
# define __NR_mq_timedsend 266,13409
# define __NR_mq_timedreceive 267,13461
# define __NR_mq_notify 268,13513
# define __NR_mq_getsetattr 269,13565
# define __NR_kexec_load 270,13617
# define __NR_waitid 271,13669
# define __NR_add_key 272,13721
# define __NR_request_key 273,13773
# define __NR_keyctl 274,13825
# define __NR_ioprio_set 275,13877
# define __NR_ioprio_get 276,13929
# define __NR_inotify_init 277,13981
# define __NR_inotify_add_watch 278,14033
# define __NR_inotify_rm_watch 279,14085
# define __NR_migrate_pages 280,14137
# define __NR_openat 281,14189
# define __NR_mkdirat 282,14241
# define __NR_mknodat 283,14293
# define __NR_fchownat 284,14345
# define __NR_futimesat 285,14397
# define __NR_newfstatat 286,14449
# define __NR_unlinkat 287,14501
# define __NR_renameat 288,14553
# define __NR_linkat 289,14605
# define __NR_symlinkat 290,14657
# define __NR_readlinkat 291,14709
# define __NR_fchmodat 292,14761
# define __NR_faccessat 293,14813
# define __NR_pselect6 294,14865
# define __NR_ppoll 295,14917
# define __NR_unshare 296,14969
# define __NR_set_robust_list 297,15021
# define __NR_get_robust_list 298,15073
# define __NR_splice 299,15125
# define __NR_tee 300,15177
# define __NR_sync_file_range 301,15229
# define __NR_vmsplice 302,15281
# define __NR_move_pages 303,15333
# define __NR_utimensat 304,15385
# define __IGNORE_getcpu 305,15437
# define __NR_epoll_pwait 306,15509
# define __NR_signalfd 307,15561
# define __NR_timerfd 308,15613
# define __NR_eventfd 309,15665
# define __NR_fallocate 310,15717
# define __NR_timerfd_settime 311,15769
# define __NR_timerfd_gettime 312,15821
# define __NR_accept4 313,15873
# define __NR_signalfd4 314,15925
# define __NR_eventfd2 315,15977
# define __NR_epoll_create1 316,16029
# define __NR_dup3 317,16081
# define __NR_pipe2 318,16133
# define __NR_inotify_init1 319,16185
# define __NR_preadv 320,16237
# define __NR_pwritev 321,16289
# define __NR_rt_tgsigqueueinfo 322,16341
# define __NR_perf_event_open 323,16393
# define __NR_recvmmsg 324,16445
# define __NR_fanotify_init 325,16497
# define __NR_fanotify_mark 326,16549
# define __NR_prlimit64 327,16601
# define __NR_name_to_handle_at 328,16653
# define __NR_open_by_handle_at 329,16705
# define __NR_clock_adjtime 330,16757
# define __NR_syncfs 331,16809
# define __NR_sendmmsg 332,16861
# define __NR_setns 333,16913
# define __NR_getcpu 334,16965
# define __NR_process_vm_readv 335,17017
# define __NR_process_vm_writev 336,17069
# define __NR_kcmp 337,17121
# define __NR_finit_module 338,17173
#  define __ARCH_WANT_OLD_READDIR340,17245
#  define __ARCH_WANT_OLD_STAT341,17279
#  define __ARCH_WANT_SYS_ALARM342,17310
#  define __ARCH_WANT_SYS_GETHOSTNAME343,17342
#  define __ARCH_WANT_SYS_PAUSE344,17380
#  define __ARCH_WANT_SYS_SGETMASK345,17412
#  define __ARCH_WANT_SYS_SIGNAL346,17447
#  define __ARCH_WANT_SYS_UTIME347,17480
#  define __ARCH_WANT_SYS_WAITPID348,17512
#  define __ARCH_WANT_SYS_SOCKETCALL349,17546
#  define __ARCH_WANT_SYS_FADVISE64350,17583
#  define __ARCH_WANT_SYS_GETPGRP351,17619
#  define __ARCH_WANT_SYS_LLSEEK352,17653
#  define __ARCH_WANT_SYS_NICE353,17686
#  define __ARCH_WANT_SYS_OLD_GETRLIMIT354,17717
#  define __ARCH_WANT_SYS_OLDUMOUNT355,17757
#  define __ARCH_WANT_SYS_SIGPENDING356,17793
#  define __ARCH_WANT_SYS_SIGPROCMASK357,17830
#  define __ARCH_WANT_SYS_RT_SIGACTION358,17868
#  define __ARCH_WANT_SYS_RT_SIGSUSPEND359,17907
#  define __ARCH_WANT_SYS_TIME360,17947
#  define __ARCH_WANT_COMPAT_SYS_TIME361,17978
# define __NR_restart_syscall 367,18115
# define __NR_exit 368,18152
# define __NR_fork 369,18189
# define __NR_read 370,18226
# define __NR_write 371,18263
# define __NR_open 372,18300
# define __NR_close 373,18337
# define __NR_waitpid 374,18374
# define __NR_creat 375,18411
# define __NR_link 376,18448
# define __NR_unlink 377,18485
# define __NR_execve 378,18522
# define __NR_chdir 379,18559
# define __NR_time 380,18596
# define __NR_mknod 381,18633
# define __NR_chmod 382,18670
# define __NR_lchown 383,18707
# define __NR_break 384,18744
# define __NR_oldstat 385,18781
# define __NR_lseek 386,18818
# define __NR_getpid 387,18855
# define __NR_mount 388,18892
# define __NR_umount 389,18929
# define __NR_setuid 390,18966
# define __NR_getuid 391,19003
# define __NR_stime 392,19040
# define __NR_ptrace 393,19077
# define __NR_alarm 394,19114
# define __NR_oldfstat 395,19151
# define __NR_pause 396,19188
# define __NR_utime 397,19225
# define __NR_stty 398,19262
# define __NR_gtty 399,19299
# define __NR_access 400,19336
# define __NR_nice 401,19373
# define __NR_ftime 402,19410
# define __NR_sync 403,19447
# define __NR_kill 404,19484
# define __NR_rename 405,19521
# define __NR_mkdir 406,19558
# define __NR_rmdir 407,19595
# define __NR_dup 408,19632
# define __NR_pipe 409,19669
# define __NR_times 410,19706
# define __NR_prof 411,19743
# define __NR_brk 412,19780
# define __NR_setgid 413,19817
# define __NR_getgid 414,19854
# define __NR_signal 415,19891
# define __NR_geteuid 416,19928
# define __NR_getegid 417,19965
# define __NR_acct 418,20002
# define __NR_umount2 419,20039
# define __NR_lock 420,20076
# define __NR_ioctl 421,20113
# define __NR_fcntl 422,20150
# define __NR_mpx 423,20187
# define __NR_setpgid 424,20224
# define __NR_ulimit 425,20261
# define __NR_oldolduname 426,20298
# define __NR_umask 427,20335
# define __NR_chroot 428,20372
# define __NR_ustat 429,20409
# define __NR_dup2 430,20446
# define __NR_getppid 431,20483
# define __NR_getpgrp 432,20520
# define __NR_setsid 433,20557
# define __NR_sigaction 434,20594
# define __NR_sgetmask 435,20631
# define __NR_ssetmask 436,20668
# define __NR_setreuid 437,20705
# define __NR_setregid 438,20742
# define __NR_sigsuspend 439,20779
# define __NR_sigpending 440,20816
# define __NR_sethostname 441,20853
# define __NR_setrlimit 442,20890
# define __NR_getrlimit 443,20927
# define __NR_getrusage 444,21010
# define __NR_gettimeofday 445,21047
# define __NR_settimeofday 446,21084
# define __NR_getgroups 447,21121
# define __NR_setgroups 448,21158
# define __NR_select 449,21195
# define __NR_symlink 450,21232
# define __NR_oldlstat 451,21269
# define __NR_readlink 452,21306
# define __NR_uselib 453,21343
# define __NR_swapon 454,21380
# define __NR_reboot 455,21417
# define __NR_readdir 456,21454
# define __NR_mmap 457,21491
# define __NR_munmap 458,21528
# define __NR_truncate 459,21565
# define __NR_ftruncate 460,21602
# define __NR_fchmod 461,21639
# define __NR_fchown 462,21676
# define __NR_getpriority 463,21713
# define __NR_setpriority 464,21750
# define __NR_profil 465,21787
# define __NR_statfs 466,21824
# define __NR_fstatfs 467,21861
# define __NR_ioperm 468,21898
# define __NR_socketcall 469,21935
# define __NR_syslog 470,21972
# define __NR_setitimer 471,22009
# define __NR_getitimer 472,22046
# define __NR_stat 473,22083
# define __NR_lstat 474,22120
# define __NR_fstat 475,22157
# define __NR_olduname 476,22194
# define __NR_iopl 477,22231
# define __NR_vhangup 478,22268
# define __NR_idle 479,22305
# define __NR_vm86old 480,22342
# define __NR_wait4 481,22379
# define __NR_swapoff 482,22416
# define __NR_sysinfo 483,22453
# define __NR_ipc 484,22490
# define __NR_fsync 485,22527
# define __NR_sigreturn 486,22564
# define __NR_clone 487,22601
# define __NR_setdomainname 488,22638
# define __NR_uname 489,22675
# define __NR_modify_ldt 490,22712
# define __NR_adjtimex 491,22749
# define __NR_mprotect 492,22786
# define __NR_sigprocmask 493,22823
# define __NR_create_module 494,22860
# define __NR_init_module 495,22897
# define __NR_delete_module 496,22934
# define __NR_get_kernel_syms 497,22971
# define __NR_quotactl 498,23008
# define __NR_getpgid 499,23045
# define __NR_fchdir 500,23082
# define __NR_bdflush 501,23119
# define __NR_sysfs 502,23156
# define __NR_personality 503,23193
# define __NR_afs_syscall 504,23230
# define __NR_setfsuid 505,23304
# define __NR_setfsgid 506,23341
# define __NR__llseek 507,23378
# define __NR_getdents 508,23415
# define __NR__newselect 509,23452
# define __NR_flock 510,23489
# define __NR_msync 511,23526
# define __NR_readv 512,23563
# define __NR_writev 513,23600
# define __NR_getsid 514,23637
# define __NR_fdatasync 515,23674
# define __NR__sysctl 516,23711
# define __NR_mlock 517,23748
# define __NR_munlock 518,23785
# define __NR_mlockall 519,23822
# define __NR_munlockall 520,23859
# define __NR_sched_setparam 521,23896
# define __NR_sched_getparam 522,23941
# define __NR_sched_setscheduler 523,23986
# define __NR_sched_getscheduler 524,24031
# define __NR_sched_yield 525,24076
# define __NR_sched_get_priority_max 526,24121
# define __NR_sched_get_priority_min 527,24166
# define __NR_sched_rr_get_interval 528,24211
# define __NR_nanosleep 529,24256
# define __NR_mremap 530,24293
# define __NR_setresuid 531,24330
# define __NR_getresuid 532,24367
# define __NR_vm86 533,24404
# define __NR_query_module 534,24441
# define __NR_poll 535,24478
# define __NR_nfsservctl 536,24515
# define __NR_setresgid 537,24552
# define __NR_getresgid 538,24589
# define __NR_prctl 539,24626
# define __NR_rt_sigreturn 540,24663
# define __NR_rt_sigaction 541,24700
# define __NR_rt_sigprocmask 542,24737
# define __NR_rt_sigpending 543,24774
# define __NR_rt_sigtimedwait 544,24811
# define __NR_rt_sigqueueinfo 545,24848
# define __NR_rt_sigsuspend 546,24885
# define __NR_pread64 547,24922
# define __NR_pwrite64 548,24959
# define __NR_chown 549,24996
# define __NR_getcwd 550,25033
# define __NR_capget 551,25070
# define __NR_capset 552,25107
# define __NR_sigaltstack 553,25144
# define __NR_sendfile 554,25181
# define __NR_getpmsg 555,25218
# define __NR_putpmsg 556,25299
# define __NR_vfork 557,25380
# define __NR_ugetrlimit 558,25417
# define __NR_mmap2 559,25488
# define __NR_truncate64 560,25525
# define __NR_ftruncate64 561,25562
# define __NR_stat64 562,25599
# define __NR_lstat64 563,25636
# define __NR_fstat64 564,25673
# define __NR_lchown32 565,25710
# define __NR_getuid32 566,25747
# define __NR_getgid32 567,25784
# define __NR_geteuid32 568,25821
# define __NR_getegid32 569,25858
# define __NR_setreuid32 570,25895
# define __NR_setregid32 571,25932
# define __NR_getgroups32 572,25969
# define __NR_setgroups32 573,26006
# define __NR_fchown32 574,26043
# define __NR_setresuid32 575,26080
# define __NR_getresuid32 576,26117
# define __NR_setresgid32 577,26154
# define __NR_getresgid32 578,26191
# define __NR_chown32 579,26228
# define __NR_setuid32 580,26265
# define __NR_setgid32 581,26302
# define __NR_setfsuid32 582,26339
# define __NR_setfsgid32 583,26376
# define __NR_pivot_root 584,26413
# define __NR_mincore 585,26450
# define __NR_madvise 586,26487
# define __NR_madvise1 587,26524
# define __NR_getdents64 588,26605
# define __NR_fcntl64 589,26642
# define __NR_gettid 591,26699
# define __NR_readahead 592,26736
# define __NR_setxattr 593,26773
# define __NR_lsetxattr 594,26810
# define __NR_fsetxattr 595,26847
# define __NR_getxattr 596,26884
# define __NR_lgetxattr 597,26921
# define __NR_fgetxattr 598,26958
# define __NR_listxattr 599,26995
# define __NR_llistxattr 600,27032
# define __NR_flistxattr 601,27069
# define __NR_removexattr 602,27106
# define __NR_lremovexattr 603,27143
# define __NR_fremovexattr 604,27180
# define __NR_tkill 605,27217
# define __NR_sendfile64 606,27254
# define __NR_futex 607,27291
# define __NR_sched_setaffinity 608,27328
# define __NR_sched_getaffinity 609,27365
# define __NR_set_thread_area 610,27402
# define __NR_get_thread_area 611,27439
# define __NR_io_setup 612,27476
# define __NR_io_destroy 613,27513
# define __NR_io_getevents 614,27550
# define __NR_io_submit 615,27587
# define __NR_io_cancel 616,27624
# define __NR_fadvise64 617,27661
# define __NR_exit_group 619,27766
# define __NR_lookup_dcookie 620,27803
# define __NR_epoll_create 621,27840
# define __NR_epoll_ctl 622,27877
# define __NR_epoll_wait 623,27914
# define __NR_remap_file_pages 624,27951
# define __NR_set_tid_address 625,27988
# define __NR_timer_create 626,28025
# define __NR_timer_settime 627,28062
# define __NR_timer_gettime 628,28117
# define __NR_timer_getoverrun 629,28172
# define __NR_timer_delete 630,28227
# define __NR_clock_settime 631,28282
# define __NR_clock_gettime 632,28337
# define __NR_clock_getres 633,28392
# define __NR_clock_nanosleep 634,28447
# define __NR_statfs64 635,28502
# define __NR_fstatfs64 636,28539
# define __NR_tgkill 637,28576
# define __NR_utimes 638,28613
# define __NR_fadvise64_64 639,28650
# define __NR_vserver 640,28687
# define __NR_mbind 641,28724
# define __NR_get_mempolicy 642,28761
# define __NR_set_mempolicy 643,28798
# define __NR_mq_open 644,28835
# define __NR_mq_unlink 645,28872
# define __NR_mq_timedsend 646,28922
# define __NR_mq_timedreceive 647,28972
# define __NR_mq_notify 648,29022
# define __NR_mq_getsetattr 649,29072
# define __NR_kexec_load 650,29122
# define __NR_waitid 651,29159
# define __NR_add_key 653,29235
# define __NR_request_key 654,29272
# define __NR_keyctl 655,29309
# define __NR_ioprio_set 656,29346
# define __NR_ioprio_get 657,29383
# define __NR_inotify_init 658,29420
# define __NR_inotify_add_watch 659,29457
# define __NR_inotify_rm_watch 660,29494
# define __NR_migrate_pages 661,29531
# define __NR_openat 662,29568
# define __NR_mkdirat 663,29605
# define __NR_mknodat 664,29642
# define __NR_fchownat 665,29679
# define __NR_futimesat 666,29716
# define __NR_fstatat64 667,29753
# define __NR_unlinkat 668,29790
# define __NR_renameat 669,29827
# define __NR_linkat 670,29864
# define __NR_symlinkat 671,29901
# define __NR_readlinkat 672,29938
# define __NR_fchmodat 673,29975
# define __NR_faccessat 674,30012
# define __NR_pselect6 675,30049
# define __NR_ppoll 676,30086
# define __NR_unshare 677,30123
# define __NR_set_robust_list 678,30160
# define __NR_get_robust_list 679,30197
# define __NR_splice 680,30234
# define __NR_sync_file_range 681,30271
# define __NR_tee 682,30308
# define __NR_vmsplice 683,30345
# define __NR_move_pages 684,30382
# define __NR_getcpu 685,30419
# define __NR_epoll_pwait 686,30456
# define __NR_utimensat 687,30493
# define __NR_signalfd 688,30530
# define __NR_timerfd 689,30567
# define __NR_eventfd 690,30604
# define __NR_fallocate 691,30641
# define __NR_timerfd_settime 692,30678
# define __NR_timerfd_gettime 693,30715
# define __NR_signalfd4 694,30752
# define __NR_eventfd2 695,30789
# define __NR_epoll_create1 696,30826
# define __NR_dup3 697,30863
# define __NR_pipe2 698,30900
# define __NR_inotify_init1 699,30937
# define __NR_preadv 700,30974
# define __NR_pwritev 701,31011
# define __NR_rt_tgsigqueueinfo 702,31048
# define __NR_perf_event_open 703,31085
# define __NR_recvmmsg 704,31122
# define __NR_fanotify_init 705,31159
# define __NR_fanotify_mark 706,31196
# define __NR_prlimit64 707,31233
# define __NR_name_to_handle_at 708,31270
# define __NR_open_by_handle_at 709,31307
# define __NR_clock_adjtime 710,31344
# define __NR_syncfs 711,31381
# define __NR_sendmmsg 712,31418
# define __NR_setns 713,31455
# define __NR_process_vm_readv 714,31492
# define __NR_process_vm_writev 715,31529
# define __NR_kcmp 716,31566
# define __NR_finit_module 717,31603
# define SYS__sysctl 722,31706
# define SYS_accept 723,31740
# define SYS_accept4 724,31772
# define SYS_access 725,31806
# define SYS_acct 726,31838
# define SYS_add_key 727,31866
# define SYS_adjtimex 728,31900
# define SYS_afs_syscall 729,31936
# define SYS_alarm 730,31978
# define SYS_arch_prctl 731,32008
# define SYS_bind 732,32048
# define SYS_brk 733,32076
# define SYS_capget 734,32102
# define SYS_capset 735,32134
# define SYS_chdir 736,32166
# define SYS_chmod 737,32196
# define SYS_chown 738,32226
# define SYS_chroot 739,32256
# define SYS_clock_adjtime 740,32288
# define SYS_clock_getres 741,32334
# define SYS_clock_gettime 742,32378
# define SYS_clock_nanosleep 743,32424
# define SYS_clock_settime 744,32474
# define SYS_clone 745,32520
# define SYS_close 746,32550
# define SYS_connect 747,32580
# define SYS_creat 748,32614
# define SYS_create_module 749,32644
# define SYS_delete_module 750,32690
# define SYS_dup 751,32736
# define SYS_dup2 752,32762
# define SYS_dup3 753,32790
# define SYS_epoll_create 754,32818
# define SYS_epoll_create1 755,32862
# define SYS_epoll_ctl 756,32908
# define SYS_epoll_ctl_old 757,32946
# define SYS_epoll_pwait 758,32992
# define SYS_epoll_wait 759,33034
# define SYS_epoll_wait_old 760,33074
# define SYS_eventfd 761,33122
# define SYS_eventfd2 762,33156
# define SYS_execve 763,33192
# define SYS_exit 764,33224
# define SYS_exit_group 765,33252
# define SYS_faccessat 766,33292
# define SYS_fadvise64 767,33330
# define SYS_fallocate 768,33368
# define SYS_fanotify_init 769,33406
# define SYS_fanotify_mark 770,33452
# define SYS_fchdir 771,33498
# define SYS_fchmod 772,33530
# define SYS_fchmodat 773,33562
# define SYS_fchown 774,33598
# define SYS_fchownat 775,33630
# define SYS_fcntl 776,33666
# define SYS_fdatasync 777,33696
# define SYS_fgetxattr 778,33734
# define SYS_flistxattr 779,33772
# define SYS_flock 780,33812
# define SYS_fork 781,33842
# define SYS_fremovexattr 782,33870
# define SYS_fsetxattr 783,33914
# define SYS_fstat 784,33952
# define SYS_fstatfs 785,33982
# define SYS_fsync 786,34016
# define SYS_ftruncate 787,34046
# define SYS_futex 788,34084
# define SYS_futimesat 789,34114
# define SYS_get_kernel_syms 790,34152
# define SYS_get_mempolicy 791,34202
# define SYS_get_robust_list 792,34248
# define SYS_get_thread_area 793,34298
# define SYS_getcpu 794,34348
# define SYS_getcwd 795,34380
# define SYS_getdents 796,34412
# define SYS_getdents64 797,34448
# define SYS_getegid 798,34488
# define SYS_geteuid 799,34522
# define SYS_getgid 800,34556
# define SYS_getgroups 801,34588
# define SYS_getitimer 802,34626
# define SYS_getpeername 803,34664
# define SYS_getpgid 804,34706
# define SYS_getpgrp 805,34740
# define SYS_getpid 806,34774
# define SYS_getpmsg 807,34806
# define SYS_getppid 808,34840
# define SYS_getpriority 809,34874
# define SYS_getresgid 810,34916
# define SYS_getresuid 811,34954
# define SYS_getrlimit 812,34992
# define SYS_getrusage 813,35030
# define SYS_getsid 814,35068
# define SYS_getsockname 815,35100
# define SYS_getsockopt 816,35142
# define SYS_gettid 817,35182
# define SYS_gettimeofday 818,35214
# define SYS_getuid 819,35258
# define SYS_getxattr 820,35290
# define SYS_init_module 821,35326
# define SYS_inotify_add_watch 822,35368
# define SYS_inotify_init 823,35422
# define SYS_inotify_init1 824,35466
# define SYS_inotify_rm_watch 825,35512
# define SYS_io_cancel 826,35564
# define SYS_io_destroy 827,35602
# define SYS_io_getevents 828,35642
# define SYS_io_setup 829,35686
# define SYS_io_submit 830,35722
# define SYS_ioctl 831,35760
# define SYS_ioperm 832,35790
# define SYS_iopl 833,35822
# define SYS_ioprio_get 834,35850
# define SYS_ioprio_set 835,35890
# define SYS_kcmp 836,35930
# define SYS_kexec_load 837,35958
# define SYS_keyctl 838,35998
# define SYS_kill 839,36030
# define SYS_lchown 840,36058
# define SYS_lgetxattr 841,36090
# define SYS_link 842,36128
# define SYS_linkat 843,36156
# define SYS_listen 844,36188
# define SYS_listxattr 845,36220
# define SYS_llistxattr 846,36258
# define SYS_lookup_dcookie 847,36298
# define SYS_lremovexattr 848,36346
# define SYS_lseek 849,36390
# define SYS_lsetxattr 850,36420
# define SYS_lstat 851,36458
# define SYS_madvise 852,36488
# define SYS_mbind 853,36522
# define SYS_migrate_pages 854,36552
# define SYS_mincore 855,36598
# define SYS_mkdir 856,36632
# define SYS_mkdirat 857,36662
# define SYS_mknod 858,36696
# define SYS_mknodat 859,36726
# define SYS_mlock 860,36760
# define SYS_mlockall 861,36790
# define SYS_mmap 862,36826
# define SYS_modify_ldt 863,36854
# define SYS_mount 864,36894
# define SYS_move_pages 865,36924
# define SYS_mprotect 866,36964
# define SYS_mq_getsetattr 867,37000
# define SYS_mq_notify 868,37046
# define SYS_mq_open 869,37084
# define SYS_mq_timedreceive 870,37118
# define SYS_mq_timedsend 871,37168
# define SYS_mq_unlink 872,37212
# define SYS_mremap 873,37250
# define SYS_msgctl 874,37282
# define SYS_msgget 875,37314
# define SYS_msgrcv 876,37346
# define SYS_msgsnd 877,37378
# define SYS_msync 878,37410
# define SYS_munlock 879,37440
# define SYS_munlockall 880,37474
# define SYS_munmap 881,37514
# define SYS_name_to_handle_at 882,37546
# define SYS_nanosleep 883,37600
# define SYS_newfstatat 884,37638
# define SYS_nfsservctl 885,37678
# define SYS_open 886,37718
# define SYS_open_by_handle_at 887,37746
# define SYS_openat 888,37800
# define SYS_pause 889,37832
# define SYS_perf_event_open 890,37862
# define SYS_personality 891,37912
# define SYS_pipe 892,37954
# define SYS_pipe2 893,37982
# define SYS_pivot_root 894,38012
# define SYS_poll 895,38052
# define SYS_ppoll 896,38080
# define SYS_prctl 897,38110
# define SYS_pread64 898,38140
# define SYS_preadv 899,38174
# define SYS_prlimit64 900,38206
# define SYS_process_vm_readv 901,38244
# define SYS_process_vm_writev 902,38296
# define SYS_pselect6 903,38350
# define SYS_ptrace 904,38386
# define SYS_putpmsg 905,38418
# define SYS_pwrite64 906,38452
# define SYS_pwritev 907,38488
# define SYS_query_module 908,38522
# define SYS_quotactl 909,38566
# define SYS_read 910,38602
# define SYS_readahead 911,38630
# define SYS_readlink 912,38668
# define SYS_readlinkat 913,38704
# define SYS_readv 914,38744
# define SYS_reboot 915,38774
# define SYS_recvfrom 916,38806
# define SYS_recvmmsg 917,38842
# define SYS_recvmsg 918,38878
# define SYS_remap_file_pages 919,38912
# define SYS_removexattr 920,38964
# define SYS_rename 921,39006
# define SYS_renameat 922,39038
# define SYS_request_key 923,39074
# define SYS_restart_syscall 924,39116
# define SYS_rmdir 925,39166
# define SYS_rt_sigaction 926,39196
# define SYS_rt_sigpending 927,39240
# define SYS_rt_sigprocmask 928,39286
# define SYS_rt_sigqueueinfo 929,39334
# define SYS_rt_sigreturn 930,39384
# define SYS_rt_sigsuspend 931,39428
# define SYS_rt_sigtimedwait 932,39474
# define SYS_rt_tgsigqueueinfo 933,39524
# define SYS_sched_get_priority_max 934,39578
# define SYS_sched_get_priority_min 935,39642
# define SYS_sched_getaffinity 936,39706
# define SYS_sched_getparam 937,39760
# define SYS_sched_getscheduler 938,39808
# define SYS_sched_rr_get_interval 939,39864
# define SYS_sched_setaffinity 940,39926
# define SYS_sched_setparam 941,39980
# define SYS_sched_setscheduler 942,40028
# define SYS_sched_yield 943,40084
# define SYS_security 944,40126
# define SYS_select 945,40162
# define SYS_semctl 946,40194
# define SYS_semget 947,40226
# define SYS_semop 948,40258
# define SYS_semtimedop 949,40288
# define SYS_sendfile 950,40328
# define SYS_sendmmsg 951,40364
# define SYS_sendmsg 952,40400
# define SYS_sendto 953,40434
# define SYS_set_mempolicy 954,40466
# define SYS_set_robust_list 955,40512
# define SYS_set_thread_area 956,40562
# define SYS_set_tid_address 957,40612
# define SYS_setdomainname 958,40662
# define SYS_setfsgid 959,40708
# define SYS_setfsuid 960,40744
# define SYS_setgid 961,40780
# define SYS_setgroups 962,40812
# define SYS_sethostname 963,40850
# define SYS_setitimer 964,40892
# define SYS_setns 965,40930
# define SYS_setpgid 966,40960
# define SYS_setpriority 967,40994
# define SYS_setregid 968,41036
# define SYS_setresgid 969,41072
# define SYS_setresuid 970,41110
# define SYS_setreuid 971,41148
# define SYS_setrlimit 972,41184
# define SYS_setsid 973,41222
# define SYS_setsockopt 974,41254
# define SYS_settimeofday 975,41294
# define SYS_setuid 976,41338
# define SYS_setxattr 977,41370
# define SYS_shmat 978,41406
# define SYS_shmctl 979,41436
# define SYS_shmdt 980,41468
# define SYS_shmget 981,41498
# define SYS_shutdown 982,41530
# define SYS_sigaltstack 983,41566
# define SYS_signalfd 984,41608
# define SYS_signalfd4 985,41644
# define SYS_socket 986,41682
# define SYS_socketpair 987,41714
# define SYS_splice 988,41754
# define SYS_stat 989,41786
# define SYS_statfs 990,41814
# define SYS_swapoff 991,41846
# define SYS_swapon 992,41880
# define SYS_symlink 993,41912
# define SYS_symlinkat 994,41946
# define SYS_sync 995,41984
# define SYS_sync_file_range 996,42012
# define SYS_syncfs 997,42062
# define SYS_sysfs 998,42094
# define SYS_sysinfo 999,42124
# define SYS_syslog 1000,42158
# define SYS_tee 1001,42190
# define SYS_tgkill 1002,42216
# define SYS_time 1003,42248
# define SYS_timer_create 1004,42276
# define SYS_timer_delete 1005,42320
# define SYS_timer_getoverrun 1006,42364
# define SYS_timer_gettime 1007,42416
# define SYS_timer_settime 1008,42462
# define SYS_timerfd_create 1009,42508
# define SYS_timerfd_gettime 1010,42556
# define SYS_timerfd_settime 1011,42606
# define SYS_times 1012,42656
# define SYS_tkill 1013,42686
# define SYS_truncate 1014,42716
# define SYS_tuxcall 1015,42752
# define SYS_umask 1016,42786
# define SYS_umount2 1017,42816
# define SYS_uname 1018,42850
# define SYS_unlink 1019,42880
# define SYS_unlinkat 1020,42912
# define SYS_unshare 1021,42948
# define SYS_uselib 1022,42982
# define SYS_ustat 1023,43014
# define SYS_utime 1024,43044
# define SYS_utimensat 1025,43074
# define SYS_utimes 1026,43112
# define SYS_vfork 1027,43144
# define SYS_vhangup 1028,43174
# define SYS_vmsplice 1029,43208
# define SYS_vserver 1030,43244
# define SYS_wait4 1031,43278
# define SYS_waitid 1032,43308
# define SYS_write 1033,43340
# define SYS_writev 1034,43370
# define SYS__llseek 1037,43409
# define SYS__newselect 1038,43443
# define SYS__sysctl 1039,43483
# define SYS_access 1040,43517
# define SYS_acct 1041,43549
# define SYS_add_key 1042,43577
# define SYS_adjtimex 1043,43611
# define SYS_afs_syscall 1044,43647
# define SYS_alarm 1045,43689
# define SYS_bdflush 1046,43719
# define SYS_break 1047,43753
# define SYS_brk 1048,43783
# define SYS_capget 1049,43809
# define SYS_capset 1050,43841
# define SYS_chdir 1051,43873
# define SYS_chmod 1052,43903
# define SYS_chown 1053,43933
# define SYS_chown32 1054,43963
# define SYS_chroot 1055,43997
# define SYS_clock_adjtime 1056,44029
# define SYS_clock_getres 1057,44075
# define SYS_clock_gettime 1058,44119
# define SYS_clock_nanosleep 1059,44165
# define SYS_clock_settime 1060,44215
# define SYS_clone 1061,44261
# define SYS_close 1062,44291
# define SYS_creat 1063,44321
# define SYS_create_module 1064,44351
# define SYS_delete_module 1065,44397
# define SYS_dup 1066,44443
# define SYS_dup2 1067,44469
# define SYS_dup3 1068,44497
# define SYS_epoll_create 1069,44525
# define SYS_epoll_create1 1070,44569
# define SYS_epoll_ctl 1071,44615
# define SYS_epoll_pwait 1072,44653
# define SYS_epoll_wait 1073,44695
# define SYS_eventfd 1074,44735
# define SYS_eventfd2 1075,44769
# define SYS_execve 1076,44805
# define SYS_exit 1077,44837
# define SYS_exit_group 1078,44865
# define SYS_faccessat 1079,44905
# define SYS_fadvise64 1080,44943
# define SYS_fadvise64_64 1081,44981
# define SYS_fallocate 1082,45025
# define SYS_fanotify_init 1083,45063
# define SYS_fanotify_mark 1084,45109
# define SYS_fchdir 1085,45155
# define SYS_fchmod 1086,45187
# define SYS_fchmodat 1087,45219
# define SYS_fchown 1088,45255
# define SYS_fchown32 1089,45287
# define SYS_fchownat 1090,45323
# define SYS_fcntl 1091,45359
# define SYS_fcntl64 1092,45389
# define SYS_fdatasync 1093,45423
# define SYS_fgetxattr 1094,45461
# define SYS_flistxattr 1095,45499
# define SYS_flock 1096,45539
# define SYS_fork 1097,45569
# define SYS_fremovexattr 1098,45597
# define SYS_fsetxattr 1099,45641
# define SYS_fstat 1100,45679
# define SYS_fstat64 1101,45709
# define SYS_fstatat64 1102,45743
# define SYS_fstatfs 1103,45781
# define SYS_fstatfs64 1104,45815
# define SYS_fsync 1105,45853
# define SYS_ftime 1106,45883
# define SYS_ftruncate 1107,45913
# define SYS_ftruncate64 1108,45951
# define SYS_futex 1109,45993
# define SYS_futimesat 1110,46023
# define SYS_get_kernel_syms 1111,46061
# define SYS_get_mempolicy 1112,46111
# define SYS_get_robust_list 1113,46157
# define SYS_get_thread_area 1114,46207
# define SYS_getcpu 1115,46257
# define SYS_getcwd 1116,46289
# define SYS_getdents 1117,46321
# define SYS_getdents64 1118,46357
# define SYS_getegid 1119,46397
# define SYS_getegid32 1120,46431
# define SYS_geteuid 1121,46469
# define SYS_geteuid32 1122,46503
# define SYS_getgid 1123,46541
# define SYS_getgid32 1124,46573
# define SYS_getgroups 1125,46609
# define SYS_getgroups32 1126,46647
# define SYS_getitimer 1127,46689
# define SYS_getpgid 1128,46727
# define SYS_getpgrp 1129,46761
# define SYS_getpid 1130,46795
# define SYS_getpmsg 1131,46827
# define SYS_getppid 1132,46861
# define SYS_getpriority 1133,46895
# define SYS_getresgid 1134,46937
# define SYS_getresgid32 1135,46975
# define SYS_getresuid 1136,47017
# define SYS_getresuid32 1137,47055
# define SYS_getrlimit 1138,47097
# define SYS_getrusage 1139,47135
# define SYS_getsid 1140,47173
# define SYS_gettid 1141,47205
# define SYS_gettimeofday 1142,47237
# define SYS_getuid 1143,47281
# define SYS_getuid32 1144,47313
# define SYS_getxattr 1145,47349
# define SYS_gtty 1146,47385
# define SYS_idle 1147,47413
# define SYS_init_module 1148,47441
# define SYS_inotify_add_watch 1149,47483
# define SYS_inotify_init 1150,47537
# define SYS_inotify_init1 1151,47581
# define SYS_inotify_rm_watch 1152,47627
# define SYS_io_cancel 1153,47679
# define SYS_io_destroy 1154,47717
# define SYS_io_getevents 1155,47757
# define SYS_io_setup 1156,47801
# define SYS_io_submit 1157,47837
# define SYS_ioctl 1158,47875
# define SYS_ioperm 1159,47905
# define SYS_iopl 1160,47937
# define SYS_ioprio_get 1161,47965
# define SYS_ioprio_set 1162,48005
# define SYS_ipc 1163,48045
# define SYS_kcmp 1164,48071
# define SYS_kexec_load 1165,48099
# define SYS_keyctl 1166,48139
# define SYS_kill 1167,48171
# define SYS_lchown 1168,48199
# define SYS_lchown32 1169,48231
# define SYS_lgetxattr 1170,48267
# define SYS_link 1171,48305
# define SYS_linkat 1172,48333
# define SYS_listxattr 1173,48365
# define SYS_llistxattr 1174,48403
# define SYS_lock 1175,48443
# define SYS_lookup_dcookie 1176,48471
# define SYS_lremovexattr 1177,48519
# define SYS_lseek 1178,48563
# define SYS_lsetxattr 1179,48593
# define SYS_lstat 1180,48631
# define SYS_lstat64 1181,48661
# define SYS_madvise 1182,48695
# define SYS_mbind 1183,48729
# define SYS_migrate_pages 1184,48759
# define SYS_mincore 1185,48805
# define SYS_mkdir 1186,48839
# define SYS_mkdirat 1187,48869
# define SYS_mknod 1188,48903
# define SYS_mknodat 1189,48933
# define SYS_mlock 1190,48967
# define SYS_mlockall 1191,48997
# define SYS_mmap 1192,49033
# define SYS_mmap2 1193,49061
# define SYS_modify_ldt 1194,49091
# define SYS_mount 1195,49131
# define SYS_move_pages 1196,49161
# define SYS_mprotect 1197,49201
# define SYS_mpx 1198,49237
# define SYS_mq_getsetattr 1199,49263
# define SYS_mq_notify 1200,49309
# define SYS_mq_open 1201,49347
# define SYS_mq_timedreceive 1202,49381
# define SYS_mq_timedsend 1203,49431
# define SYS_mq_unlink 1204,49475
# define SYS_mremap 1205,49513
# define SYS_msync 1206,49545
# define SYS_munlock 1207,49575
# define SYS_munlockall 1208,49609
# define SYS_munmap 1209,49649
# define SYS_name_to_handle_at 1210,49681
# define SYS_nanosleep 1211,49735
# define SYS_nfsservctl 1212,49773
# define SYS_nice 1213,49813
# define SYS_oldfstat 1214,49841
# define SYS_oldlstat 1215,49877
# define SYS_oldolduname 1216,49913
# define SYS_oldstat 1217,49955
# define SYS_olduname 1218,49989
# define SYS_open 1219,50025
# define SYS_open_by_handle_at 1220,50053
# define SYS_openat 1221,50107
# define SYS_pause 1222,50139
# define SYS_perf_event_open 1223,50169
# define SYS_personality 1224,50219
# define SYS_pipe 1225,50261
# define SYS_pipe2 1226,50289
# define SYS_pivot_root 1227,50319
# define SYS_poll 1228,50359
# define SYS_ppoll 1229,50387
# define SYS_prctl 1230,50417
# define SYS_pread64 1231,50447
# define SYS_preadv 1232,50481
# define SYS_prlimit64 1233,50513
# define SYS_process_vm_readv 1234,50551
# define SYS_process_vm_writev 1235,50603
# define SYS_prof 1236,50657
# define SYS_profil 1237,50685
# define SYS_pselect6 1238,50717
# define SYS_ptrace 1239,50753
# define SYS_putpmsg 1240,50785
# define SYS_pwrite64 1241,50819
# define SYS_pwritev 1242,50855
# define SYS_query_module 1243,50889
# define SYS_quotactl 1244,50933
# define SYS_read 1245,50969
# define SYS_readahead 1246,50997
# define SYS_readdir 1247,51035
# define SYS_readlink 1248,51069
# define SYS_readlinkat 1249,51105
# define SYS_readv 1250,51145
# define SYS_reboot 1251,51175
# define SYS_recvmmsg 1252,51207
# define SYS_remap_file_pages 1253,51243
# define SYS_removexattr 1254,51295
# define SYS_rename 1255,51337
# define SYS_renameat 1256,51369
# define SYS_request_key 1257,51405
# define SYS_restart_syscall 1258,51447
# define SYS_rmdir 1259,51497
# define SYS_rt_sigaction 1260,51527
# define SYS_rt_sigpending 1261,51571
# define SYS_rt_sigprocmask 1262,51617
# define SYS_rt_sigqueueinfo 1263,51665
# define SYS_rt_sigreturn 1264,51715
# define SYS_rt_sigsuspend 1265,51759
# define SYS_rt_sigtimedwait 1266,51805
# define SYS_rt_tgsigqueueinfo 1267,51855
# define SYS_sched_get_priority_max 1268,51909
# define SYS_sched_get_priority_min 1269,51973
# define SYS_sched_getaffinity 1270,52037
# define SYS_sched_getparam 1271,52091
# define SYS_sched_getscheduler 1272,52139
# define SYS_sched_rr_get_interval 1273,52195
# define SYS_sched_setaffinity 1274,52257
# define SYS_sched_setparam 1275,52311
# define SYS_sched_setscheduler 1276,52359
# define SYS_sched_yield 1277,52415
# define SYS_select 1278,52457
# define SYS_sendfile 1279,52489
# define SYS_sendfile64 1280,52525
# define SYS_sendmmsg 1281,52565
# define SYS_set_mempolicy 1282,52601
# define SYS_set_robust_list 1283,52647
# define SYS_set_thread_area 1284,52697
# define SYS_set_tid_address 1285,52747
# define SYS_setdomainname 1286,52797
# define SYS_setfsgid 1287,52843
# define SYS_setfsgid32 1288,52879
# define SYS_setfsuid 1289,52919
# define SYS_setfsuid32 1290,52955
# define SYS_setgid 1291,52995
# define SYS_setgid32 1292,53027
# define SYS_setgroups 1293,53063
# define SYS_setgroups32 1294,53101
# define SYS_sethostname 1295,53143
# define SYS_setitimer 1296,53185
# define SYS_setns 1297,53223
# define SYS_setpgid 1298,53253
# define SYS_setpriority 1299,53287
# define SYS_setregid 1300,53329
# define SYS_setregid32 1301,53365
# define SYS_setresgid 1302,53405
# define SYS_setresgid32 1303,53443
# define SYS_setresuid 1304,53485
# define SYS_setresuid32 1305,53523
# define SYS_setreuid 1306,53565
# define SYS_setreuid32 1307,53601
# define SYS_setrlimit 1308,53641
# define SYS_setsid 1309,53679
# define SYS_settimeofday 1310,53711
# define SYS_setuid 1311,53755
# define SYS_setuid32 1312,53787
# define SYS_setxattr 1313,53823
# define SYS_sgetmask 1314,53859
# define SYS_sigaction 1315,53895
# define SYS_sigaltstack 1316,53933
# define SYS_signal 1317,53975
# define SYS_signalfd 1318,54007
# define SYS_signalfd4 1319,54043
# define SYS_sigpending 1320,54081
# define SYS_sigprocmask 1321,54121
# define SYS_sigreturn 1322,54163
# define SYS_sigsuspend 1323,54201
# define SYS_socketcall 1324,54241
# define SYS_splice 1325,54281
# define SYS_ssetmask 1326,54313
# define SYS_stat 1327,54349
# define SYS_stat64 1328,54377
# define SYS_statfs 1329,54409
# define SYS_statfs64 1330,54441
# define SYS_stime 1331,54477
# define SYS_stty 1332,54507
# define SYS_swapoff 1333,54535
# define SYS_swapon 1334,54569
# define SYS_symlink 1335,54601
# define SYS_symlinkat 1336,54635
# define SYS_sync 1337,54673
# define SYS_sync_file_range 1338,54701
# define SYS_syncfs 1339,54751
# define SYS_sysfs 1340,54783
# define SYS_sysinfo 1341,54813
# define SYS_syslog 1342,54847
# define SYS_tee 1343,54879
# define SYS_tgkill 1344,54905
# define SYS_time 1345,54937
# define SYS_timer_create 1346,54965
# define SYS_timer_delete 1347,55009
# define SYS_timer_getoverrun 1348,55053
# define SYS_timer_gettime 1349,55105
# define SYS_timer_settime 1350,55151
# define SYS_timerfd_create 1351,55197
# define SYS_timerfd_gettime 1352,55245
# define SYS_timerfd_settime 1353,55295
# define SYS_times 1354,55345
# define SYS_tkill 1355,55375
# define SYS_truncate 1356,55405
# define SYS_truncate64 1357,55441
# define SYS_ugetrlimit 1358,55481
# define SYS_ulimit 1359,55521
# define SYS_umask 1360,55553
# define SYS_umount 1361,55583
# define SYS_umount2 1362,55615
# define SYS_uname 1363,55649
# define SYS_unlink 1364,55679
# define SYS_unlinkat 1365,55711
# define SYS_unshare 1366,55747
# define SYS_uselib 1367,55781
# define SYS_ustat 1368,55813
# define SYS_utime 1369,55843
# define SYS_utimensat 1370,55873
# define SYS_utimes 1371,55911
# define SYS_vfork 1372,55943
# define SYS_vhangup 1373,55973
# define SYS_vm86 1374,56007
# define SYS_vm86old 1375,56035
# define SYS_vmsplice 1376,56069
# define SYS_vserver 1377,56105
# define SYS_wait4 1378,56139
# define SYS_waitid 1379,56169
# define SYS_waitpid 1380,56201
# define SYS_write 1381,56235
# define SYS_writev 1382,56265

unix/injector.c,2733
static bool verbose 67,2475
static volatile int timeout_expired;71,2539
typedef enum _inject_method_t 73,2577
    INJECT_EARLY,74,2609
    INJECT_LD_PRELOAD,75,2665
    INJECT_PTRACE 76,2721
} inject_method_t;77,2780
typedef struct _dr_inject_info_t 80,2844
    process_id_t pid;81,2879
    const char *exe;exe82,2901
    const char *image_name;image_name83,2963
    const char **argv;argv84,3017
    int pipe_fd;85,3074
    bool exec_self;87,3092
    inject_method_t method;88,3161
    bool killpg;90,3190
    bool exited;91,3207
    int exitcode;92,3224
} dr_inject_info_t;93,3242
get_application_short_name(107,3613
safe_read(115,3734
internal_error(126,4074
ignore_assert(134,4248
report_dynamorio_problem(140,4333
pre_execve_ld_preload(162,4932
pre_execve_early(210,6837
fork_suspended_child(216,6956
write_pipe_cmd(266,8730
inject_early(282,9115
inject_ld_preload(302,9781
create_inject_info(319,10343
get_elf_platform_path(333,10730
exe_is_right_bitwidth(345,11007
dr_inject_process_create(370,11782
dr_inject_prepare_to_exec(406,12769
dr_inject_prepare_to_ptrace(428,13371
dr_inject_prepare_new_process_group(441,13629
dr_inject_get_process_id(459,14037
dr_inject_get_image_name(467,14174
option_present(477,14462
dr_inject_process_inject(488,14742
alarm_handler(544,16578
dr_inject_process_run(551,16649
dr_inject_wait_for_child(573,17303
dr_inject_process_exit(608,18348
enum { MAX_SHELL_CODE 652,19933
# define REG_PC_FIELD 655,19977
# define REG_SP_FIELD 656,20021
# define REG_RETVAL_FIELD 657,20065
enum { REG_PC_OFFSET 662,20190
enum { REG_PC_OFFSET = offsetof(662,20190
enum { REG_PC_OFFSET = offsetof(struct user_regs_struct,662,20190
enum { REG_PC_OFFSET = offsetof(struct user_regs_struct, REG_PC_FIELD)662,20190
#define APP 664,20265
static bool op_exec_gdb 666,20296
static dr_inject_info_t *injector_info;injector_info669,20388
static file_t injector_dr_fd;670,20428
static file_t injectee_dr_fd;671,20458
typedef struct _enum_name_pair_t 673,20489
    const int enum_val;674,20524
    const char * const enum_name;675,20548
} enum_name_pair_t;676,20582
static const enum_name_pair_t pt_req_map[pt_req_map681,20693
our_ptrace(714,22118
#define ptrace 735,22859
ptrace_read_memory(740,22974
ptrace_write_memory(760,23604
gen_push_string(783,24334
gen_syscall(795,24776
gen_print(823,25733
unexpected_trace_event(835,26089
wait_until_signal(847,26475
continue_until_break(865,26931
injectee_run_get_retval(878,27363
injectee_open(950,29805
injectee_mmap(966,30384
injectee_map_file(990,31457
injectee_unmap(1022,32451
injectee_prot(1044,33122
user_regs_to_mc(1069,33938
detach_and_exec_gdb(1112,35027
inject_ptrace(1150,36458

unix/loader.c,3231
#define SYSTEM_LIBRARY_PATH_VAR 60,2634
char *ld_library_path ld_library_path61,2684
static const char *system_lib_paths[system_lib_paths62,2714
#define NUM_SYSTEM_LIB_PATHS 83,3292
#define RPATH_ORIGIN 86,3383
static os_privmod_data_t *libdr_opd;libdr_opd88,3415
static bool privmod_initialized 89,3452
static size_t max_client_tls_size 90,3493
static bool printed_gdb_commands 93,3596
static char gdb_priv_cmds[gdb_priv_cmds95,3683
static size_t gdb_priv_cmds_sofar;96,3716
struct _IO_FILE  **privmod_stdout;privmod_stdout102,3881
struct _IO_FILE  **privmod_stderr;privmod_stderr103,3916
struct _IO_FILE  **privmod_stdin;privmod_stdin104,3951
#define LIBC_STDOUT_NAME 105,3985
#define LIBC_STDERR_NAME 106,4019
#define LIBC_STDIN_NAME 107,4053
os_loader_init_prologue(142,4878
os_loader_init_epilogue(167,5653
privload_add_gdb_cmd(189,6571
os_loader_exit(199,6885
os_loader_thread_init_prologue(213,7314
os_loader_thread_init_epilogue(229,7847
os_loader_thread_exit(235,7931
privload_add_areas(241,8006
privload_remove_areas(265,8865
privload_unmap_file(288,9740
privload_unload_imports(310,10486
dr_gdb_add_symbol_file(322,10881
privload_map_and_relocate(334,11330
privload_process_imports(405,13966
privload_call_entry(442,15242
privload_redirect_setup(494,17120
privload_os_finalize(500,17236
privload_init_search_paths(506,17314
privload_locate_and_load(513,17457
privload_load_private_library(522,17732
privload_load_finalized(539,18172
privload_search_rpath(545,18261
privload_locate(606,20871
get_private_library_address(695,24019
privload_call_modules_entry(744,25887
privload_call_lib_func(774,26960
get_private_library_bounds(790,27418
privload_relocate_mod(808,27871
privload_create_os_privmod_data(858,30102
privload_delete_os_privmod_data(877,30786
#define MAX_NUM_TLS_MOD 927,33148
typedef struct _tls_info_t 928,33175
    uint num_mods;929,33204
    int  offset;930,33223
    int  max_align;931,33240
    int  offs[offs932,33260
    privmod_t *mods[mods933,33292
} tls_info_t;934,33330
static tls_info_t tls_info;935,33344
static size_t tcb_size 961,34915
typedef struct _tcb_head_t 966,35072
    void *tcb;tcb967,35101
    void *dtv;dtv968,35116
    void *self;self969,35131
    int multithread;970,35147
    int gscope_flag;972,35179
    ptr_uint_t sysinfo;974,35207
    ptr_uint_t stack_guard;977,35276
    ptr_uint_t pointer_guard;978,35304
} tcb_head_t;979,35334
#define APP_LIBC_TLS_SIZE 987,35737
privload_mod_tls_init(991,35842
privload_tls_init(1034,37546
privload_tls_exit(1097,40158
typedef struct _tls_index_t 1110,40628
  unsigned long int ti_module;1111,40658
  unsigned long int ti_offset;1112,40689
} tls_index_t;1113,40720
redirect___tls_get_addr(1116,40750
redirect____tls_get_addr(1126,41083
typedef struct _redirect_import_t 1140,41576
    const char *name;name1141,41612
    app_pc func;1142,41634
} redirect_import_t;1143,41651
static const redirect_import_t redirect_imports[redirect_imports1145,41673
#define REDIRECT_IMPORTS_NUM 1157,42199
privload_redirect_sym(1160,42289
privload_setup_auxv(1182,43006
takeover_ptrace(1230,44689
reserve_brk(1277,46919
privload_early_inject(1291,47375

unix/native_elf.c,923
enum { DL_RUNTIME_RESOLVE_IDX 73,2938
typedef void *(*fixup_fn_t)fixup_fn_t76,3034
app_pc app_dl_runtime_resolve;79,3170
fixup_fn_t app_dl_fixup;80,3201
enum { MAX_STUB_SIZE 82,3227
static byte plt_stub_template[plt_stub_template84,3257
static uint plt_stub_immed_offset;85,3303
static uint plt_stub_jmp_tgt_offset;86,3338
static size_t plt_stub_size;87,3375
static app_pc stub_heap;88,3404
static app_pc reachability_stub;90,3440
module_contains_pc(94,3493
find_dl_fixup(104,3821
initialize_plt_stub_template(137,4853
replace_module_resolver(184,6887
create_plt_stub(243,8975
destroy_plt_stub(266,9695
plt_reloc_entry_size(276,9929
is_special_stub(290,10191
update_plt_relocations(312,10797
module_change_hooks(347,12116
native_module_hook(393,13713
native_module_unhook(400,13875
find_plt_reloc(407,14057
dynamorio_dl_fixup(443,14931
native_module_init(470,15841
native_module_exit(488,16437

unix/diagnost.c,118
report_diagnostics(41,1901
append_diagnostics(49,2105
diagnost_exit(55,2254
check_for_unsupported_modules(60,2280

unix/signal.c,10773
#undef errno44,2007
typedef void (*handler_t)handler_t105,3786
    DEFAULT_TERMINATE,109,3869
    DEFAULT_TERMINATE_CORE,110,3892
    DEFAULT_IGNORE,111,3920
    DEFAULT_STOP,112,3940
    DEFAULT_CONTINUE,113,3958
int default_action[default_action116,3984
bool can_always_delay[can_always_delay192,6914
sig_is_alarm_signal(263,9683
#define SIGSTACK_SIZE 273,10048
#define SA_RESTORER 276,10135
void kernel_sigemptyset(284,10397
void kernel_sigfillset(290,10508
void kernel_sigaddset(296,10619
void kernel_sigdelset(306,10851
bool kernel_sigismember(316,11089
void copy_kernel_sigset_to_sigset(327,11417
void copy_sigset_to_kernel_sigset(346,11876
struct _kernel_sigaction_t 369,12761
    handler_t handler;370,12790
    unsigned long flags;371,12813
    void (*restorer)restorer372,12838
    kernel_sigset_t mask;373,12866
    unsigned long     uc_flags;380,13045
    struct ucontext  *uc_link;uc_link381,13077
    stack_t           uc_stack;382,13108
    struct sigcontext uc_mcontext;383,13140
    kernel_sigset_t   uc_sigmask;384,13175
} kernel_ucontext_t;385,13243
#define RETCODE_SIZE 391,13428
typedef struct sigframe 393,13452
    char *pretcode;pretcode394,13478
    int sig;395,13498
    struct sigcontext sc;396,13511
    struct _fpstate fpstate;400,13676
    unsigned long extramask[extramask401,13705
    char retcode[retcode402,13749
    int sig_noclobber;413,14354
} sigframe_plain_t;415,14424
typedef struct rt_sigframe 418,14495
    char *pretcode;pretcode419,14524
    siginfo_t info;422,14576
    kernel_ucontext_t uc;423,14596
    kernel_ucontext_t uc;425,14629
    siginfo_t info;426,14655
    int sig;429,14689
    siginfo_t *pinfo;pinfo430,14702
    void *puc;puc431,14724
    siginfo_t info;432,14739
    kernel_ucontext_t uc;433,14759
    char retcode[retcode441,15205
} sigframe_rt_t;444,15291
#define IS_RT_FOR_APP(448,15371
#define APP_HAS_SIGSTACK(458,15870
#define AVX_ALIGNMENT 464,16120
#define FPSTATE_ALIGNMENT 465,16145
#define XSTATE_ALIGNMENT 466,16174
typedef struct _sigpending_t 474,16489
    sigframe_rt_t rt_frame;475,16520
    struct _xstate __attribute__ ((aligned (AVX_ALIGNMENT))) xstate;480,16759
    byte *access_address;access_address483,16936
    bool use_sigcontext;486,17054
    struct _sigpending_t *next;next487,17079
} sigpending_t;488,17111
#define AVX_FRAME_EXTRA 496,17447
#define FPSTATE_FRAME_EXTRA 497,17520
#define XSTATE_FRAME_EXTRA 498,17598
#define AVX_DATA_SIZE 500,17682
#define FPSTATE_DATA_SIZE 501,17733
#define XSTATE_DATA_SIZE 502,17785
typedef struct _itimer_info_t 505,17941
    uint64 interval;507,18053
    uint64 value;508,18074
} itimer_info_t;509,18092
typedef struct _thread_itimer_info_t 511,18110
    itimer_info_t app;512,18149
    itimer_info_t app_saved;513,18172
    itimer_info_t dr;514,18201
    itimer_info_t actual;515,18223
    void (*cb)cb516,18249
    void (*cb_api)cb_api518,18328
} thread_itimer_info_t;519,18379
#define NUM_ITIMERS 524,18526
#define SKIP_ALARM_XL8_MAX 527,18623
typedef struct _sigfd_pipe_t sigfd_pipe_t;530,18675
#define EMULATE_SIGMASK(537,18967
typedef struct _thread_sig_info_t 540,19079
    kernel_sigaction_t **app_sigaction;app_sigaction545,19313
    bool fully_initialized;550,19500
    bool shared_app_sigaction;553,19593
    mutex_t *shared_lock;shared_lock554,19624
    int *shared_refcount;shared_refcount555,19650
    bool *we_intercept;we_intercept557,19729
    bool shared_itimer;564,20030
    recursive_lock_t *shared_itimer_lock;shared_itimer_lock568,20208
    int *shared_itimer_refcount;shared_itimer_refcount572,20374
    int *shared_itimer_underDR;shared_itimer_underDR573,20407
    thread_itimer_info_t (*itimer)itimer574,20485
    int restorer_valid[restorer_valid577,20611
    stack_t app_sigstack;580,20679
    sigpending_t *sigpending[sigpending581,20705
    bool accessing_sigpending;583,20831
    kernel_sigset_t app_sigblocked;584,20862
    kernel_sigset_t pre_syscall_app_sigblocked;586,20952
    kernel_sigset_t pre_syscall_app_sigprocmask;588,21054
    uint skip_alarm_xl8;592,21258
    sigfd_pipe_t *signalfd[signalfd594,21329
    bool in_sigsuspend;597,21432
    kernel_sigset_t app_sigblocked_save;598,21456
    volatile int num_unstarted_children;601,21571
    mutex_t child_lock;602,21612
    stack_t sigstack;605,21666
    void *sigheap;sigheap606,21688
    fragment_t *interrupted;interrupted607,21726
    cache_pc interrupted_pc;608,21798
    app_pc signal_restorer_retaddr;611,21906
} thread_sig_info_t;613,22001
typedef struct _clone_record_t 617,22143
    byte *dstack;dstack618,22176
    reg_t app_thread_xsp;619,22260
    app_pc continuation_pc;620,22333
    thread_id_t caller_id;621,22361
    int clone_sysnum;622,22388
    uint clone_flags;623,22410
    thread_sig_info_t info;624,22432
    thread_sig_info_t *parent_info;parent_info625,22460
    void *pcprofile_info;pcprofile_info626,22496
    reg_t for_dynamorio_clone[for_dynamorio_clone630,22619
} clone_record_t;631,22653
static thread_sig_info_t init_info;634,22740
static kernel_sigset_t init_sigmask;635,22776
static bool removed_sig_handler;638,22827
sigaction_syscall(713,24945
sigaltstack_syscall(727,25428
getitimer_syscall(733,25585
setitimer_syscall(739,25720
sigprocmask_syscall(745,25883
unblock_all_signals(752,26094
set_default_signal_action(761,26296
handler_free(779,26827
handler_alloc(785,26955
struct i387_fsave_struct 799,27352
    long        cwd;800,27379
    long        swd;801,27400
    long        twd;802,27421
    long        fip;803,27442
    long        fcs;804,27463
    long        foo;805,27484
    long        fos;806,27505
    long        st_space[st_space807,27526
    long        status;808,27602
struct i387_fxsave_struct 814,27765
    unsigned short      cwd;815,27793
    unsigned short      swd;816,27822
    unsigned short      twd;817,27851
    unsigned short      fop;818,27880
    long        rip;820,27920
    long        rdp;821,27941
    int         mxcsr;822,27962
    int         mxcsr_mask;823,27985
    int         st_space[st_space824,28013
    int         xmm_space[xmm_space825,28090
    int         padding[padding826,28169
    long        fip;828,28204
    long        fcs;829,28225
    long        foo;830,28246
    long        fos;831,28267
    long        mxcsr;832,28288
    long        reserved;833,28311
    long        st_space[st_space834,28337
    long        xmm_space[xmm_space835,28414
    long        padding[padding836,28492
union i387_union 840,28563
    struct i387_fsave_struct    fsave;841,28582
    struct i387_fxsave_struct   fxsave;842,28621
twd_fxsr_to_i387(850,28839
convert_fxsave_to_fpstate(893,30053
save_xmm(919,30810
save_fpstate(963,32404
os_itimers_thread_shared(1027,35147
signal_init(1062,36363
signal_exit(1085,37196
signal_thread_init(1097,37465
create_clone_record(1157,39991
set_clone_record_fields(1198,41848
get_clone_record(1219,42759
get_clone_record_app_xsp(1247,43926
get_clone_record_dstack(1254,44061
signal_info_init_sigaction(1262,44272
signal_info_exit_sigaction(1274,44894
signal_thread_inherit(1317,46761
share_siginfo_after_take_over(1553,57635
signal_fork_init(1578,58696
sigsegv_handler_is_ours(1637,61153
signal_thread_exit(1647,61383
set_our_handler_sigact(1768,66342
intercept_signal(1811,68114
handle_clone(1875,70488
handle_sigaction(1939,73233
handle_post_sigaction(2027,76711
handle_sigaltstack(2069,78504
set_blocked(2095,79406
check_signals_pending(2121,80364
handle_sigprocmask(2143,80980
handle_post_sigprocmask(2228,84871
handle_sigsuspend(2257,86010
static generic_table_t *sigfd_table;sigfd_table2304,87882
struct _sigfd_pipe_t 2306,87920
    file_t write_fd;2307,87943
    file_t read_fd;2308,87964
    uint refcount;2309,87984
    dcontext_t *dcontext;dcontext2310,88003
sigfd_pipe_free(2314,88045
signalfd_init(2340,88936
#   define SIGNALFD_HTABLE_INIT_SIZE 2342,88958
signalfd_exit(2358,89749
signalfd_thread_exit(2364,89842
handle_pre_signalfd(2379,90300
notify_signalfd(2473,94110
signal_handle_dup(2517,95941
signal_handle_close(2535,96555
dump_fpstate(2556,97257
dump_sigcontext(2640,100856
dump_sigset(2687,103133
safe_is_in_fcache(2707,103923
safe_is_in_coarse_stubs(2719,104284
is_on_alt_stack(2731,104657
sigcontext_to_mcontext(2744,105049
mcontext_to_sigcontext(2797,106923
translate_sigcontext(2846,108561
thread_set_self_context(2894,110450
thread_set_self_mcontext(2934,112270
sig_has_restorer(2943,112464
get_app_frame_size(2993,114594
get_sigcontext_from_rt_frame(3002,114801
get_sigcontext_from_app_frame(3008,114943
get_sigcontext_from_pending(3021,115315
get_sigstack_frame_ptr(3034,115839
convert_frame_to_nonrt(3112,119032
convert_frame_to_nonrt_partial(3137,120173
fixup_rtframe_pointers(3154,120860
copy_frame_to_stack(3241,124382
copy_frame_to_pending(3368,129684
send_signal_to_client(3408,131418
handle_client_action_from_cache(3484,135125
abort_on_fault(3544,137794
abort_on_DR_fault(3575,139037
unlink_fragment_for_signal(3587,139428
interrupted_inlined_syscall(3640,141907
sysnum_is_not_restartable(3687,143938
adjust_syscall_for_restart(3719,145396
record_pending_signal(3827,149895
is_sys_kill(4211,168295
compute_memory_target(4229,168930
check_for_modified_code(4350,173506
struct clone_and_swap_args 4429,176969
    byte *stack;stack4430,176998
    byte *tos;tos4431,177015
sig_should_swap_stack(4436,177092
sig_take_over(4464,178098
is_safe_read_ucxt(4473,178269
master_signal_handler_C(4486,178603
execute_handler_from_cache(4888,196607
execute_handler_from_dispatch(4999,201762
terminate_via_kill(5184,209574
execute_default_action(5203,210278
execute_default_from_cache(5400,220183
execute_default_from_dispatch(5407,220408
receive_pending_signal(5413,220563
handle_sigreturn(5478,223325
is_signal_restorer_code(5630,229865
#   define reverse(5644,230399
os_forge_exception(5674,231465
os_request_fatal_coredump(5759,235410
os_request_live_coredump(5775,236004
os_dump_core(5789,236310
at_known_exception(5836,237991
timeval_to_usec(5928,242216
usec_to_timeval(5934,242333
init_itimer(5941,242480
set_actual_itimer(5976,243959
itimer_new_settings(6000,244942
set_itimer_callback(6056,247578
get_itimer_frequency(6084,248669
handle_alarm(6102,249246
start_itimer(6198,253349
stop_itimer(6236,254788
handle_pre_setitimer(6273,256190
handle_post_setitimer(6300,257386
handle_post_getitimer(6325,258406
handle_pre_alarm(6362,259961
handle_post_alarm(6373,260241
handle_suspend_signal(6384,260542
dr_setjmp_sigmask(6486,264809
handle_nudge_signal(6502,265344

unix/os.c,18823
#define _LARGEFILE64_SOURCE50,2488
# define MAP_32BIT 56,2646
# define F_DUPFD_CLOEXEC 90,3490
# define SYSNUM_STAT 95,3597
# define SYSNUM_FSTAT 96,3627
# define SYSNUM_STAT 98,3665
# define SYSNUM_FSTAT 99,3697
typedef int (*init_fn_t)init_fn_t103,3789
char **our_environ;our_environ110,4127
#undef errno113,4233
# define _GNU_SOURCE 125,4567
# define __USE_GNU 127,4659
# undef ASSERT153,5306
# undef ASSERT_NOT_IMPLEMENTED154,5321
# undef ASSERT_NOT_TESTED155,5352
# undef ASSERT_CURIOSITY156,5378
# define ASSERT(157,5403
# define ASSERT_NOT_IMPLEMENTED(158,5436
# define ASSERT_NOT_TESTED(159,5485
# define ASSERT_CURIOSITY(160,5529
# undef LOG161,5572
# undef DOSTATS162,5584
# define LOG(163,5600
# define DOSTATS(164,5632
typedef struct _our_modify_ldt_t 172,5988
    unsigned int  entry_number;173,6023
    unsigned int  base_addr;174,6055
    unsigned int  limit;175,6084
    unsigned int  seg_32bit:seg_32bit176,6109
    unsigned int  contents:contents177,6140
    unsigned int  read_exec_only:read_exec_only178,6170
    unsigned int  limit_in_pages:limit_in_pages179,6206
    unsigned int  seg_not_present:seg_not_present180,6242
    unsigned int  useable:useable181,6279
} our_modify_ldt_t;182,6308
# define FS_TLS 195,6671
# define GS_TLS 196,6723
#define GDT_NUM_TLS_SLOTS 205,6988
#define GDT_ENTRY_TLS_MIN_32 206,7016
#define GDT_ENTRY_TLS_MIN_64 207,7047
static uint gdt_entry_tls_min 212,7251
static bool return_stolen_lib_tls_gdt;221,7657
#define MAX_THREADS 231,8058
typedef struct _tls_slot_t 232,8082
    thread_id_t tid;233,8111
    dcontext_t *dcontext;dcontext234,8132
} tls_slot_t;235,8158
static tls_slot_t *tls_table;tls_table237,8207
#define MAX_NUM_CLIENT_TLS 242,8376
static bool client_tls_allocated[client_tls_allocated247,8531
static char dynamorio_library_path[dynamorio_library_path265,9332
static char dynamorio_alt_arch_path[dynamorio_alt_arch_path267,9425
#define DR_LIBDIR_X86 269,9525
#define DR_LIBDIR_X64 270,9569
static app_pc dynamo_dll_start 273,9658
static app_pc dynamo_dll_end 274,9697
static app_pc executable_start 276,9752
static app_pc executable_end 277,9791
static char executable_path[executable_path280,9867
static char *executable_basename;executable_basename281,9910
static bool kernel_thread_groups;284,10033
bool kernel_futex_support 289,10168
static bool kernel_64bit;291,10204
pid_t pid_cached;293,10231
static bool fault_handling_initialized;295,10250
uint kilo_hertz;298,10312
static mutex_t memory_info_buf_lock 302,10436
static mutex_t maps_iter_buf_lock 304,10572
DR_API file_t our_stdout 307,10721
DR_API file_t our_stderr 308,10763
DR_API file_t our_stdin 309,10805
static struct rlimit app_rlimit_nofile;312,10878
static generic_table_t *fd_table;fd_table318,11116
#define INIT_HTABLE_SIZE_FD 319,11150
IF_DEBUG_ELSE(328,11546
typedef struct _allmem_info_t 330,11606
    uint prot;331,11638
    dr_mem_type_t type;332,11653
    bool shareable;333,11677
} allmem_info_t;334,11697
typedef struct _maps_iter_t 363,12716
    app_pc vm_start;364,12746
    app_pc vm_end;365,12767
    uint prot;366,12786
    size_t offset;367,12801
    uint64 inode;368,12860
    const char *comment;comment373,13296
    bool may_alloc;379,13616
    file_t maps;380,13636
    char *newline;newline381,13653
    int bufread;382,13672
    int bufwant;383,13689
    char *buf;buf384,13706
    char *comment_buffer;comment_buffer385,13721
} maps_iter_t;386,13747
typedef struct _dir_iterator_t 395,14084
    file_t fd;396,14117
    int off;397,14132
    int end;398,14145
    const char *name;name399,14158
    char buf[buf400,14224
} dir_iterator_t;401,14299
app_pc vsyscall_page_start 417,14993
app_pc vsyscall_syscall_end_pc 419,15076
app_pc vsyscall_sysenter_return_pc 421,15177
#define VSYSCALL_PAGE_START_HARDCODED 422,15220
# define VSYSCALL_REGION_MAPS_NAME 428,15467
static int init_errno;445,16316
__errno_location(448,16385
static int libc_errno_tls_offs;479,17658
our_libc_errno_loc(481,17703
typedef int *(*errno_loc_t)errno_loc_t505,18553
get_libc_errno_location(508,18608
get_libc_errno(566,21025
our_unsetenv(600,22160
getenv(641,23101
dynamorio_set_envp(670,24111
our_init(677,24202
init_array[init_array717,25563
_init(724,25670
kernel_is_64bit(731,25768
get_uname(737,25832
os_init(757,26595
os_file_init(823,28989
get_application_pid_helper(864,31048
get_application_pid(877,31348
set_executable_path(886,31541
get_application_name_helper(894,31771
get_application_name(929,33128
get_application_short_name(941,33628
#define PROC_CPUINFO 947,33784
#define CPUMHZ_LINE_LENGTH 948,33821
#define CPUMHZ_LINE_FORMAT 949,33852
get_timer_frequency_cpuinfo(954,34129
get_timer_frequency(993,35373
#define UTC_TO_EPOCH_SECONDS 1006,35704
query_time_seconds(1010,35776
query_time_millis(1017,35922
find_stack_bottom(1037,36609
os_slow_exit(1062,37370
os_fast_exit(1081,37799
os_terminate_with_code(1087,37846
os_terminate(1104,38512
os_timeout(1110,38631
# define ARCH_SET_GS 1126,39115
# define ARCH_SET_FS 1127,39143
# define ARCH_GET_FS 1128,39171
# define ARCH_GET_GS 1129,39199
    TLS_TYPE_NONE,1134,39329
    TLS_TYPE_LDT,1135,39348
    TLS_TYPE_GDT,1136,39366
    TLS_TYPE_ARCH_PRCTL,1138,39395
} tls_type_t;1140,39427
static tls_type_t tls_type;1142,39442
static bool tls_using_msr;1144,39481
static int tls_gdt_index 1151,39623
static int lib_tls_gdt_index 1153,39701
# define GDT_NO_SIZE_LIMIT 1154,39736
#  define GDT_32BIT 1156,39786
#  define GDT_64BIT 1157,39831
modify_ldt_syscall(1161,39897
    unsigned int limit1500:limit15001168,40134
    unsigned int base1500:base15001169,40165
    unsigned int base2316:base23161170,40195
    unsigned int type:type1171,40224
    unsigned int not_system:not_system1172,40249
    unsigned int privilege_level:privilege_level1173,40280
    unsigned int seg_present:seg_present1174,40316
    unsigned int limit1916:limit19161175,40348
    unsigned int custom:custom1176,40378
    unsigned int zero:zero1177,40405
    unsigned int seg_32bit:seg_32bit1178,40430
    unsigned int limit_in_pages:limit_in_pages1179,40460
    unsigned int base3124:base31241180,40495
} raw_ldt_entry_t;1181,40524
    LDT_TYPE_CODE 1184,40551
    LDT_TYPE_CODE      = 0x8,x81184,40551
    LDT_TYPE_DOWN 1185,40581
    LDT_TYPE_DOWN      = 0x4,x41185,40581
    LDT_TYPE_WRITE 1186,40611
    LDT_TYPE_WRITE     = 0x2,x21186,40611
    LDT_TYPE_ACCESSED 1187,40641
    LDT_TYPE_ACCESSED  = 0x1,x11187,40641
#define LDT_BASE(1190,40675
print_raw_ldt(1201,41025
print_all_ldt(1230,42128
#define LDT_ENTRIES_TO_CHECK 1255,43194
find_unused_ldt_index(1259,43282
initialize_ldt_struct(1287,44196
clear_ldt_struct(1305,44872
create_ldt_entry(1315,45131
clear_ldt_entry(1325,45383
#define USER_PRIVILEGE 1339,45736
#define LDT_NOT_GDT 1340,45762
#define GDT_NOT_LDT 1341,45788
#define SELECTOR_IS_LDT 1342,45814
#define LDT_SELECTOR(1343,45843
#define GDT_SELECTOR(1344,45924
#define SELECTOR_INDEX(1345,46005
#define WRITE_DR_SEG(1347,46047
#define WRITE_LIB_SEG(1352,46261
read_selector(1358,46496
typedef struct _os_seg_info_t 1379,47130
    int   tls_type;1380,47162
    void *dr_fs_base;dr_fs_base1381,47182
    void *dr_gs_base;dr_gs_base1382,47204
    our_modify_ldt_t app_thread_areas[app_thread_areas1383,47226
} os_seg_info_t;1384,47284
typedef struct _os_local_state_t 1387,47326
    local_state_extended_t state;1390,47485
    struct _os_local_state_t *self;self1392,47556
    tls_type_t tls_type;1394,47661
    int ldt_index;1397,47799
    thread_id_t tid;1399,47878
    ushort app_gs;1401,47961
    ushort app_fs;1402,48021
    void  *app_gs_base;app_gs_base1403,48081
    void  *app_fs_base;app_fs_base1404,48145
        os_seg_info_t os_seg_info;1410,48437
        void *client_tls[client_tls1411,48472
} os_local_state_t;1413,48525
#define TLS_LOCAL_STATE_OFFSET 1415,48546
#define TLS_OS_LOCAL_STATE 1418,48644
#define TLS_SELF_OFFSET 1420,48681
#define TLS_THREAD_ID_OFFSET 1421,48768
#define TLS_DCONTEXT_OFFSET 1422,48854
#define TLS_APP_GS_BASE_OFFSET 1425,49016
#define TLS_APP_FS_BASE_OFFSET 1426,49089
#define TLS_APP_GS_OFFSET 1427,49162
#define TLS_APP_FS_OFFSET 1428,49225
#define WRITE_TLS_SLOT_IMM(1440,49888
#define READ_TLS_SLOT_IMM(1445,50172
#define WRITE_TLS_SLOT(1451,50482
#define READ_TLS_SLOT(1459,50951
is_segment_register_initialized(1468,51440
os_tls_offset(1498,52576
os_get_dr_seg_base(1510,52920
get_os_tls(1529,53411
get_os_tls_from_dc(1541,53719
os_get_app_seg_base(1552,54005
os_get_app_seg_base_offset(1576,54760
os_get_app_seg_offset(1589,55067
get_tls(1602,55358
set_tls(1610,55458
get_segment_base(1623,55748
get_app_segment_base(1689,58299
get_local_state_extended(1701,58635
get_local_state(1710,58837
os_handle_mov_seg(1724,59181
choose_gdt_slots(1785,61295
os_tls_app_seg_init(1891,65288
os_tls_init(1951,67510
os_tls_exit(2161,77352
os_tls_get_gdt_index(2213,79233
os_tls_pre_init(2224,79520
os_tls_calloc(2245,80219
os_tls_cfree(2279,81182
os_thread_init(2296,81600
os_thread_exit(2341,83310
os_fork_pre(2374,84402
os_fork_post(2420,86610
os_fork_init(2439,87383
os_should_swap_state(2486,89069
os_using_app_state(2494,89312
os_swap_context(2514,90016
os_thread_under_dynamo(2521,90198
os_thread_not_under_dynamo(2528,90342
get_process_group_id(2535,90497
get_process_id(2542,90665
get_parent_id(2549,90825
get_sys_thread_id(2555,90909
get_thread_id(2565,91100
get_tls_thread_id(2578,91442
get_thread_private_dcontext(2594,92084
set_thread_private_dcontext(2659,94995
replace_thread_id(2705,96281
permstr_to_memprot(2734,97140
memprot_to_osprot(2750,97540
osprot_to_memprot(2764,97908
osprot_replace_memprot(2779,98313
mprotect_syscall(2790,98636
mmap_syscall_succeeded(2796,98758
mmap_syscall(2818,99566
munmap_syscall(2825,99824
os_raw_mem_free(2833,100013
os_raw_mem_alloc(2852,100492
dr_raw_mremap(2891,101821
dr_raw_brk(2916,102765
os_heap_free(2936,103425
os_heap_reserve(2957,104119
find_free_memory_in_region(3024,106989
os_heap_reserve_in_region(3053,107938
os_heap_commit(3095,109506
os_heap_decommit(3120,110304
os_heap_systemwide_overcommit(3141,110998
os_heap_get_commit_limit(3148,111131
futex_wait(3160,111533
futex_wake(3178,112096
futex_wake_all(3194,112524
thread_yield(3212,112940
thread_signal(3218,113015
thread_sleep(3230,113465
thread_suspend(3262,114810
thread_resume(3310,116660
thread_terminate(3353,118134
is_thread_terminated(3366,118555
os_wait_thread_terminated(3374,118740
thread_get_mcontext(3391,119264
thread_set_mcontext(3407,119758
is_thread_currently_native(3423,120255
client_thread_run(3430,120423
dr_create_client_thread(3468,121991
get_num_processors(3533,125048
load_shared_library(3574,126584
lookup_library_routine(3596,127377
unload_shared_library(3607,127698
shared_library_error(3620,128009
shared_library_bounds(3640,128621
llseek_syscall(3675,129938
os_file_exists(3687,130312
os_files_same(3702,130792
os_get_file_size(3719,131301
os_get_file_size_by_handle(3734,131728
os_create_dir(3752,132262
open_syscall(3762,132662
close_syscall(3769,132811
dup_syscall(3775,132890
read_syscall(3781,132969
write_syscall(3787,133089
fcntl_syscall(3794,133254
#    define O_LARGEFILE 3804,133492
#    define O_LARGEFILE 3806,133529
os_open(3816,133829
os_open_directory(3846,135046
os_close(3853,135184
fd_priv_dup(3863,135337
fd_mark_close_on_exec(3889,136447
fd_table_add(3900,136746
fd_is_dr_owned(3928,137831
fd_is_in_private_range(3939,138122
os_open_protected(3947,138305
os_close_protected(3974,139059
os_write(3988,139478
os_read(3995,139623
os_flush(4001,139716
os_seek(4008,139895
os_tell(4020,140118
os_delete_file(4034,140296
os_rename_file(4040,140397
os_delete_mapped_file(4063,141239
os_map_file(4069,141332
#   define MAX_MMAP_LOOP_ITERS 4077,141577
os_unmap_file(4149,144346
os_get_disk_free_space(4159,144579
exit_process_syscall(4185,145688
exit_thread_syscall(4201,146324
os_syslog(4211,146558
all_memory_areas_initialized(4229,147210
print_all_memory_areas(4238,147467
safe_read_via_query(4262,148299
safe_read_ex(4285,149062
safe_read(4302,149751
safe_write_ex(4308,149869
is_readable_without_exception_internal(4363,151864
is_readable_without_exception(4383,152542
is_readable_without_exception_query_os(4396,153050
is_user_address(4402,153189
os_set_protection(4415,153507
set_protection(4457,155108
change_protection(4478,156007
make_writable(4486,156228
bool make_copy_on_writable(4539,158508
make_unwritable(4547,158691
ignorable_system_call(4610,161413
        unsigned long addr;4688,163108
        unsigned long len;4689,163136
        unsigned long prot;4690,163163
        unsigned long flags;4691,163191
        unsigned long fd;4692,163220
        unsigned long offset;4693,163246
} mmap_arg_struct_t;4694,163276
const reg_id_t syscall_regparms[syscall_regparms4698,163380
sys_param_addr(4719,163762
sys_param(4763,165517
#define SET_RETURN_VAL(4769,165677
dr_syscall_get_param(4774,165779
dr_syscall_set_param(4784,166089
dr_syscall_get_result(4795,166486
dr_syscall_set_result(4805,166781
dr_syscall_set_sysnum(4816,167143
dr_syscall_invoke_another(4828,167541
is_clone_thread_syscall_helper(4845,168245
is_clone_thread_syscall(4853,168420
was_clone_thread_syscall(4860,168602
is_sigreturn_syscall_helper(4868,168863
is_sigreturn_syscall(4874,168993
was_sigreturn_syscall(4881,169145
handle_self_signal(4888,169329
    ENV_PROP_RUNUNDER,4922,170781
    ENV_PROP_OPTIONS,4923,170804
static const char * const env_to_propagate[env_to_propagate4925,170829
#define NUM_ENV_TO_PROPAGATE 4932,171027
handle_execve(4935,171124
handle_execve_post(5221,183530
cleanup_after_vfork_execve(5261,185177
handle_close_pre(5284,185912
#define SYSCALL_PC(5359,189239
handle_exit(5367,189544
os_set_app_thread_area(5454,193613
os_get_app_thread_area(5511,196056
os_switch_lib_tls(5536,197227
os_switch_seg_to_context(5542,197365
pre_system_call(5642,201255
allmem_info_free(6406,232548
allmem_info_dup(6412,232679
allmem_should_merge(6423,232939
allmem_info_merge(6437,233401
sync_all_memory_areas(6451,233782
add_all_memory_area(6465,234185
update_all_memory_areas(6482,234821
remove_from_all_memory_areas(6571,238943
mmap_check_for_module_overlap(6585,239438
process_mmap(6646,243041
os_set_dr_seg(6818,251828
handle_post_arch_prctl(6832,252227
handle_app_mremap(6894,254641
handle_app_brk(6943,256770
post_system_call(6986,258509
#define PROC_SELF_MAPS 7485,278789
#define MAPS_LINE_LENGTH 7488,278889
#define MAPS_LINE_FORMAT4 7490,278969
#define MAPS_LINE_MAX4 7491,279060
#define MAPS_LINE_FORMAT8 7493,279171
#define MAPS_LINE_MAX8 7494,279265
#define MAPS_LINE_MAX 7496,279337
#define BUFSIZE 7505,279711
static char buf_scratch[buf_scratch7506,279748
static char comment_buf_scratch[comment_buf_scratch7507,279782
static char buf_iter[buf_iter7514,280178
static char comment_buf_iter[comment_buf_iter7515,280209
maps_iterator_start(7519,280289
maps_iterator_stop(7559,281592
maps_iterator_next(7573,281979
typedef struct _dl_iterate_data_t 7693,287118
    app_pc target_addr;7694,287154
    const char *target_path;target_path7695,287178
    char *path_out;path_out7696,287207
    size_t path_size;7697,287227
    app_pc mod_start;7698,287249
    app_pc mod_end;7699,287271
} dl_iterate_data_t;7700,287291
dl_iterate_get_path_cb(7703,287324
get_library_bounds(7779,291312
get_dynamo_library_bounds(7948,298800
get_dynamorio_library_path(8015,301539
read_proc_self_exe(8029,301920
get_application_base(8057,302928
get_application_end(8083,303724
get_image_entry(8091,303853
mem_stats_snapshot(8112,304463
is_in_dynamo_dll(8119,304522
get_dynamorio_dll_start(8134,304914
get_dynamorio_dll_end(8143,305090
get_dynamorio_dll_preferred_base(8152,305258
# define VSYSCALL_PAGE_SO_NAME 8164,305612
# define USER_MAX 8169,305852
dl_iterate_get_areas_cb(8173,305971
probe_address(8249,309255
probe_add_region(8309,311235
find_vm_areas_via_probe(8332,312059
find_executable_vm_areas(8430,315932
find_dynamo_library_vm_areas(8623,325241
get_stack_bounds(8644,325985
at_initial_stack_bottom(8681,327610
query_memory_ex(8706,328569
get_memory_info(8817,333526
query_memory_ex_from_os(8843,334347
get_memory_info_from_os(8969,339370
all_memory_areas_lock(8988,339984
all_memory_areas_unlock(9009,340733
mutex_wait_contended_lock(9030,341401
mutex_notify_released_lock(9099,344055
rwlock_wait_contended_writer(9117,344706
rwlock_notify_writer(9123,344792
rwlock_wait_contended_reader(9129,344879
rwlock_notify_readers(9135,344965
typedef struct linux_event_t 9143,345187
    volatile int signaled;9149,345465
    mutex_t lock;9150,345492
} linux_event_t;9151,345510
create_event(9158,345713
destroy_event(9167,345962
signal_event(9174,346092
reset_event(9184,346323
wait_for_event(9195,346643
struct linux_dirent 9239,348209
    long           d_ino;9240,348231
    off_t          d_off;9241,348283
    unsigned short d_reclen;9242,348350
    char           d_name[d_name9243,348417
    char           d_pad;9245,348551
    char           d_type;9246,348602
#define CURRENT_DIRENT(9250,348681
os_dir_iterator_start(9254,348782
os_dir_iterator_next(9262,348911
typedef struct _takeover_record_t 9297,350205
    thread_id_t tid;9298,350241
    event_t event;9299,350262
} takeover_record_t;9300,350281
static takeover_record_t *thread_takeover_records;thread_takeover_records9310,350708
static uint num_thread_takeover_records;9311,350759
static dcontext_t *takeover_dcontext;takeover_dcontext9317,350989
os_list_threads(9324,351238
os_take_over_all_unknown_threads(9383,353578
os_thread_take_over(9467,356681
os_thread_take_over_suspended_native(9514,358233
os_random_seed(9534,358855
rct_analyze_module_at_violation(9552,359360
rct_add_rip_rel_addr(9600,360972
get_drmarker_hotp_policy_status_table(9610,361186
set_drmarker_hotp_policy_status_table(9617,361288
hook_text(9623,361390
unhook_text(9634,361748
insert_jmp_at_tramp_entry(9640,361845
aslr_is_possible_attack(9647,361985
aslr_possible_preferred_address(9654,362092
take_over_primary_thread(9661,362209
os_current_user_directory(9667,362275
os_validate_user_owned(9694,363352
os_check_option_compatibility(9702,363538
os_file_has_elf_so_header(9709,363654
uint64_divmod(9730,364207
        uint64 v64;9734,364336
            uint32 lo;9736,364373
            uint32 hi;9737,364396
__udivdi3(9775,365583
__umoddi3(9783,365749
test_uint64_divmod(9796,366040
unit_test_os(9836,367268

unix/os_private.h,1397
#define _OS_PRIVATE_H_ 40,1890
# define ASM_XAX 50,2164
# define ASM_XDX 51,2187
# define ASM_XBP 52,2210
# define ASM_XSP 53,2233
# define ASM_XAX 55,2262
# define ASM_XDX 56,2285
# define ASM_XBP 57,2308
# define ASM_XSP 58,2331
#define SUSPEND_SIGNAL 62,2416
#define PTHREAD_CLONE_FLAGS 66,2530
enum { MAX_SYSCALL_ARGS 71,2803
typedef struct _os_thread_data_t 74,2893
    app_pc stack_base;78,3098
    app_pc stack_top;79,3121
    app_pc stack_bottom_pc;82,3169
    mutex_t suspend_lock;92,3632
    int suspend_count;93,3658
    thread_record_t **fork_threads;fork_threads96,3740
    int fork_num_threads;97,3776
    volatile int suspended;107,4153
    volatile int wakeup;108,4181
    volatile int resumed;109,4206
    struct sigcontext *suspended_sigcxt;suspended_sigcxt110,4232
    bool terminate;113,4318
    volatile int terminated;119,4583
    volatile bool retakeover;121,4613
    int processing_signal;124,4716
    void *dr_fs_base;dr_fs_base130,4976
    void *dr_gs_base;dr_gs_base131,4998
    void *app_thread_areas;app_thread_areas132,5020
} os_thread_data_t;133,5096
enum { ARGC_PTRACE_SENTINEL 135,5117
typedef struct ptrace_stack_args_t 138,5223
    ptr_int_t argc;139,5260
    priv_mcontext_t mc;140,5327
    char home_dir[home_dir141,5391
} ptrace_stack_args_t;142,5474
typedef struct _kernel_sigaction_t kernel_sigaction_t;173,5964

unix/symtab.h,28
#define _SYMTAB_H_ 43,1964

unix/stackdump.c,408
#define DEBUGGER 56,2238
#define QUIET_MODE 58,2307
#define TEMPORARY_FILENAME 59,2331
#define CORE_NAME 60,2385
#define VERBOSE 62,2411
#define BATCH_MODE 69,2650
#define DEBUGGER_COMMAND 71,2686
#define DEBUGGER_COMMAND 77,2901
wait_syscall(81,2961
execve_syscall(87,3074
fork_syscall(93,3209
#   define CLONE_CHILD_CLEARTID 117,4417
#   define CLONE_CHILD_SETTID 119,4563
stackdump(148,5787

unix/pcprofile.c,1173
#define USE_SYMTAB 58,2504
static bool valid_symtab;61,2560
typedef struct _pc_profile_entry_t 74,3083
    void *                  pc;75,3120
    app_pc                 tag;76,3170
    int                     id;78,3246
    ushort              offset;80,3315
    where_am_i_t    whereami:whereami81,3395
    bool               trace:trace82,3453
    bool             retired:retired83,3527
    int                counter;84,3598
    struct _pc_profile_entry_t *next;next85,3659
} pc_profile_entry_t;86,3725
#define HASH_BITS 88,3748
typedef struct _thread_pc_info_t 91,3814
    bool thread_shared;92,3849
    pc_profile_entry_t **htable;htable93,3873
    void *special_heap;special_heap94,3958
    file_t file;95,3982
    int where[where96,3999
} thread_pc_info_t;97,4026
#define ALARM_FREQUENCY 99,4047
pcprofile_thread_init(110,4530
pcprofile_thread_exit(155,6376
pcprofile_fork_init(184,7339
pcprof_dump_callstack(198,7816
pcprofile_alarm(230,8898
pcprofile_add_entry(297,11484
pcprofile_lookup(327,12252
pcprofile_fragment_deleted(344,12716
pcprofile_destroy_entry(369,13394
pcprofile_reset(392,14012
pcprofile_results(417,14878

unix/module.h,5107
#define MODULE_H35,1769
# define ELF_HEADER_TYPE 42,1991
# define ELF_PROGRAM_HEADER_TYPE 43,2027
# define ELF_SECTION_HEADER_TYPE 44,2071
# define ELF_DYNAMIC_ENTRY_TYPE 45,2115
# define ELF_ADDR 46,2157
# define ELF_WORD 47,2186
# define ELF_HALF 48,2216
# define ELF_SYM_TYPE 49,2245
# define ELF_ST_TYPE 50,2277
# define ELF_WORD_SIZE 51,2312
# define ELF_ST_BIND 52,2363
# define ELF_ST_VISIBILITY 53,2398
# define ELF_REL_TYPE 54,2445
# define ELF_RELA_TYPE 55,2477
# define ELF_AUXV_TYPE 56,2511
# define ELF_HEADER_TYPE 58,2553
# define ELF_PROGRAM_HEADER_TYPE 59,2589
# define ELF_SECTION_HEADER_TYPE 60,2633
# define ELF_DYNAMIC_ENTRY_TYPE 61,2677
# define ELF_ADDR 62,2719
# define ELF_WORD 63,2748
# define ELF_HALF 64,2777
# define ELF_SYM_TYPE 65,2806
# define ELF_ST_TYPE 66,2838
# define ELF_WORD_SIZE 67,2873
# define ELF_ST_BIND 68,2924
# define ELF_ST_VISIBILITY 69,2959
# define ELF_REL_TYPE 70,3006
# define ELF_RELA_TYPE 71,3038
# define ELF_AUXV_TYPE 72,3072
# define ELF_R_TYPE 77,3159
# define ELF_R_SYM 78,3194
# define ELF_R_INFO 79,3228
# define ELF_R_NONE 81,3285
# define ELF_R_DIRECT 82,3346
# define ELF_R_PC32 83,3412
# define ELF_R_COPY 84,3490
# define ELF_R_GLOB_DAT 85,3565
# define ELF_R_JUMP_SLOT 86,3627
# define ELF_R_RELATIVE 87,3689
#  define R_X86_64_IRELATIVE 89,3793
# define ELF_R_IRELATIVE 91,3833
# define ELF_R_TLS_DTPMOD 93,3938
# define ELF_R_TLS_TPOFF 94,4000
# define ELF_R_TLS_DTPOFF 95,4081
#  define R_X86_64_TLSDESC 97,4187
# define ELF_R_TLS_DESC 99,4227
# define ELF_R_TYPE 105,4593
# define ELF_R_SYM 106,4628
# define ELF_R_INFO 107,4662
# define ELF_R_NONE 109,4719
# define ELF_R_DIRECT 110,4775
# define ELF_R_PC32 111,4836
# define ELF_R_COPY 112,4903
# define ELF_R_GLOB_DAT 113,4973
# define ELF_R_JUMP_SLOT 114,5030
# define ELF_R_RELATIVE 115,5087
#  define R_386_IRELATIVE 117,5183
# define ELF_R_IRELATIVE 119,5220
# define ELF_R_TLS_DTPMOD 121,5319
# define ELF_R_TLS_TPOFF 122,5381
# define ELF_R_TLS_DTPOFF 123,5469
#  define R_386_TLS_DESC 125,5565
# define ELF_R_TLS_DESC 127,5603
#define OS_IMAGE_READ 135,6036
#define OS_IMAGE_WRITE 136,6076
#define OS_IMAGE_EXECUTE 137,6117
typedef struct _module_segment_t 142,6315
    app_pc start;144,6420
    app_pc end;145,6438
    uint prot;146,6454
} module_segment_t;147,6469
typedef struct _os_module_data_t 149,6490
    app_pc base_address;157,6976
    size_t alignment;158,7002
    size_t checksum;161,7103
    size_t timestamp;162,7124
    bool   hash_is_gnu;167,7284
    app_pc hashtab;168,7335
    size_t num_buckets;169,7403
    app_pc buckets;170,7460
    size_t num_chain;171,7527
    app_pc chain;172,7583
    app_pc dynsym;173,7649
    app_pc dynstr;174,7706
    size_t dynstr_size;175,7763
    size_t symentry_size;176,7811
    app_pc gnu_bitmask;178,7891
    ptr_uint_t gnu_shift;179,7915
    ptr_uint_t gnu_bitidx;180,7941
    size_t gnu_symbias;181,7968
    bool contiguous;184,8098
    uint num_segments;185,8119
    uint alloc_segments;186,8192
    module_segment_t *segments;segments187,8250
} os_module_data_t;188,8282
typedef void (*fp_t)fp_t190,8303
typedef struct _os_privmod_data_t 194,8458
    os_module_data_t os_data;195,8494
    ELF_DYNAMIC_ENTRY_TYPE *dyn;dyn196,8524
    ptr_int_t      load_delta;197,8557
    char          *soname;soname198,8621
    ELF_ADDR       pltgot;199,8648
    size_t         pltrelsz;200,8675
    ELF_WORD       pltrel;201,8704
    bool           textrel;202,8731
    app_pc         jmprel;203,8759
    ELF_REL_TYPE  *rel;rel204,8786
    size_t         relsz;205,8810
    size_t         relent;206,8836
    ELF_RELA_TYPE *rela;rela207,8863
    size_t         relasz;208,8888
    size_t         relaent;209,8915
    app_pc         verneed;210,8943
    int            verneednum;211,8971
    int            relcount;212,9002
    ELF_HALF      *versym;versym213,9031
    fp_t           init;215,9105
    fp_t           fini;216,9130
    fp_t          *init_array;init_array217,9155
    fp_t          *fini_array;fini_array218,9220
    size_t         init_arraysz;219,9285
    size_t         fini_arraysz;220,9318
    uint           tls_block_size;222,9370
    uint           tls_align;223,9440
    uint           tls_modid;224,9510
    uint           tls_offset;225,9585
    uint           tls_image_size;226,9652
    uint           tls_first_byte;227,9724
    app_pc         tls_image;228,9804
} os_privmod_data_t;229,9873
typedef struct elf_loader_t 307,11864
    const char *filename;filename308,11894
    file_t fd;309,11920
    ELF_HEADER_TYPE *ehdr;ehdr310,11935
    ELF_PROGRAM_HEADER_TYPE *phdrs;phdrs311,11998
    app_pc load_base;312,12073
    ptr_int_t load_delta;313,12130
    size_t image_size;314,12203
    void *file_map;file_map315,12275
    size_t file_size;316,12348
    byte buf[buf324,12783
} elf_loader_t;325,12861
typedef byte *(*map_fn_t)map_fn_t327,12878
typedef bool (*unmap_fn_t)unmap_fn_t329,13033
typedef bool (*prot_fn_t)prot_fn_t330,13085

hotpatch.c,11551
#define HOTP_ONLY_GBOP_PRECEDENCE 78,2994
    MIN_HOTP_INTERFACE_VERSION 82,3113
    MIN_HOTP_INTERFACE_VERSION = HOTP_INTERFACE_VERSION,82,3113
    MAX_HOTP_INTERFACE_VERSION 83,3170
    MAX_HOTP_INTERFACE_VERSION = HOTP_INTERFACE_VERSION,83,3170
    MIN_NUM_VULNERABILITIES 84,3227
    MAX_NUM_VULNERABILITIES 85,3260
    MIN_VULNERABILITY_ID_LENGTH 86,3297
    MAX_VULNERABILITY_ID_LENGTH 87,3334
    MIN_POLICY_ID_LENGTH 88,3372
    MIN_POLICY_ID_LENGTH = HOTP_POLICY_ID_LENGTH,88,3372
    MAX_POLICY_ID_LENGTH 89,3422
    MAX_POLICY_ID_LENGTH = HOTP_POLICY_ID_LENGTH,89,3422
    MIN_POLICY_VERSION 90,3472
    MAX_POLICY_VERSION 91,3500
    MIN_NUM_SETS 92,3532
    MAX_NUM_SETS 93,3554
    MIN_NUM_MODULES 94,3580
    MAX_NUM_MODULES 95,3605
    MAX_MODULE_SIZE 98,3700
    MIN_PE_TIMESTAMP 106,4124
    MAX_PE_TIMESTAMP 107,4150
    MAX_PE_TIMESTAMP = UINT_MAX,107,4150
    PE_TIMESTAMP_IGNORE 108,4183
    PE_TIMESTAMP_IGNORE = UINT_MAX,108,4183
    PE_TIMESTAMP_UNAVAILABLE 109,4219
    PE_TIMESTAMP_UNAVAILABLE = PE_TIMESTAMP_IGNORE 109,4219
    MIN_PE_CHECKSUM 111,4276
    MAX_PE_CHECKSUM 112,4301
    MAX_PE_CHECKSUM = UINT_MAX,112,4301
    PE_CHECKSUM_IGNORE 113,4333
    PE_CHECKSUM_IGNORE = UINT_MAX,113,4333
    PE_CHECKSUM_UNAVAILABLE 114,4368
    PE_CHECKSUM_UNAVAILABLE = PE_CHECKSUM_IGNORE 114,4368
    MIN_PE_IMAGE_SIZE 116,4423
    MAX_PE_IMAGE_SIZE 117,4450
    MAX_PE_IMAGE_SIZE = UINT_MAX,117,4450
    PE_IMAGE_SIZE_IGNORE 118,4484
    PE_IMAGE_SIZE_IGNORE = UINT_MAX,118,4484
    PE_IMAGE_SIZE_UNAVAILABLE 119,4521
    PE_IMAGE_SIZE_UNAVAILABLE = PE_IMAGE_SIZE_IGNORE 119,4521
    MIN_PE_CODE_SIZE 121,4580
    MAX_PE_CODE_SIZE 122,4648
    MAX_PE_CODE_SIZE = UINT_MAX,122,4648
    PE_CODE_SIZE_IGNORE 123,4681
    PE_CODE_SIZE_IGNORE = UINT_MAX,123,4681
    PE_CODE_SIZE_UNAVAILABLE 124,4717
    PE_CODE_SIZE_UNAVAILABLE = PE_CODE_SIZE_IGNORE 124,4717
    MIN_PE_FILE_VERSION 126,4774
    MAX_PE_FILE_VERSION 127,4803
    MAX_PE_FILE_VERSION = ULLONG_MAX,127,4803
    PE_FILE_VERSION_IGNORE 128,4841
    PE_FILE_VERSION_IGNORE = IF_WINDOWS_ELSE(128,4841
    PE_FILE_VERSION_IGNORE = IF_WINDOWS_ELSE(MODULE_FILE_VERSION_INVALID,128,4841
    PE_FILE_VERSION_IGNORE = IF_WINDOWS_ELSE(MODULE_FILE_VERSION_INVALID, ULLONG_MAX)128,4841
    PE_FILE_VERSION_UNAVAILABLE 129,4928
    PE_FILE_VERSION_UNAVAILABLE = PE_FILE_VERSION_IGNORE 129,4928
    MIN_NUM_PATCH_POINT_HASHES 131,4991
    MAX_NUM_PATCH_POINT_HASHES 132,5027
    MIN_HASH_START_OFFSET 133,5067
    MAX_HASH_START_OFFSET 134,5098
    MAX_HASH_START_OFFSET = MAX_MODULE_SIZE,134,5098
    MIN_HASH_LENGTH 135,5178
    MAX_HASH_LENGTH 136,5203
    MAX_HASH_LENGTH = MAX_MODULE_SIZE,136,5203
    MIN_HASH_VALUE 137,5283
    MAX_HASH_VALUE 138,5307
    MAX_HASH_VALUE = UINT_MAX,138,5307
    MIN_NUM_PATCH_POINTS 140,5339
    MIN_NUM_PATCH_POINTS = MIN_NUM_PATCH_POINT_HASHES,140,5339
    MAX_NUM_PATCH_POINTS 141,5394
    MAX_NUM_PATCH_POINTS = MAX_NUM_PATCH_POINT_HASHES,141,5394
    MIN_PATCH_OFFSET 142,5449
    MAX_PATCH_OFFSET 143,5475
    MAX_PATCH_OFFSET = MAX_MODULE_SIZE,143,5475
    MIN_PATCH_PRECEDENCE 144,5555
    MAX_PATCH_PRECEDENCE 145,5585
    MIN_DETECTOR_OFFSET 146,5619
    MAX_DETECTOR_OFFSET 152,5950
    MIN_PROTECTOR_OFFSET 154,6070
    MAX_PROTECTOR_OFFSET 155,6100
    MAX_PROTECTOR_OFFSET = MAX_DETECTOR_OFFSET,155,6100
    MIN_RETURN_ADDR 159,6276
    MAX_RETURN_ADDR 164,6512
    MAX_RETURN_ADDR = MAX_PATCH_OFFSET,164,6512
    MIN_MODE 165,6552
    MIN_MODE = HOTP_MODE_OFF,165,6552
    MAX_MODE 166,6582
    MAX_MODE = HOTP_MODE_PROTECT,166,6582
    MAX_POLICY_FILE_SIZE 172,6905
#define PE_NAME_IGNORE 175,6947
#define PE_NAME_UNAVAILABLE 176,7021
    const char *pe_name;pe_name184,7314
    uint pe_checksum;189,7494
    uint pe_timestamp;190,7516
    size_t pe_image_size;191,7539
    size_t pe_code_size;210,8671
    uint64 pe_file_version;215,8834
} hotp_module_sig_t;216,8862
    app_rva_t offset;235,9801
    app_rva_t detector_fn;242,10133
    app_rva_t protector_fn;244,10267
    app_rva_t return_addr;245,10295
    uint precedence;251,10525
    byte *trampoline;trampoline264,11093
    byte *app_code_copy;app_code_copy270,11353
    byte *tramp_exit_tgt;tramp_exit_tgt277,11686
} hotp_patch_point_t;278,11712
#define HOTP_ONLY_TRAMPOLINE_SIZE 283,11882
#define HOTP_ONLY_NUM_THREADS_AT_INIT 284,11920
#define HOTP_ONLY_PATCH_REGION_SIZE 300,12699
#define HOTP_CACHE_PATCH_REGION_SIZE 301,12743
#define HOTP_BAD_PATCH_REGION_SIZE 302,12787
#define HOTP_PATCH_REGION_SIZE 303,12832
    app_rva_t start;319,13586
    uint len;320,13607
    uint hash_value;321,13685
} hotp_patch_point_hash_t;322,13706
    hotp_module_sig_t sig;325,13751
    uint num_patch_points;326,13778
    hotp_patch_point_t *patch_points;patch_points327,13805
    uint num_patch_point_hashes;328,13843
    hotp_patch_point_hash_t *hashes;hashes329,13876
    bool matched;332,13985
    app_pc base_address;333,14063
} hotp_module_t;334,14088
    uint num_modules;337,14123
    hotp_module_t *modules;modules338,14145
} hotp_set_t;339,14173
    hotp_exec_status_t exec_status;346,14411
    hotp_inject_status_t *inject_status;inject_status349,14522
    uint64 num_detected;355,14737
    uint64 num_not_detected;356,14762
    uint64 num_detector_error;357,14791
    uint64 num_protected;358,14822
    uint64 num_not_protected;359,14848
    uint64 num_kill_thread;360,14878
    uint64 num_kill_process;361,14906
    uint64 num_raise_exception;362,14935
    uint64 num_change_control_flow;363,14967
    uint64 num_protector_error;364,15003
    uint64 num_aborted;365,15035
} hotp_vul_info_t;366,15059
    HOTP_TYPE_HOT_PATCH 378,15544
    HOTP_TYPE_HOT_PATCH = 0x1,x1378,15544
    HOTP_TYPE_GBOP_HOOK 390,16200
    HOTP_TYPE_GBOP_HOOK = 0x2,x2390,16200
    HOTP_TYPE_PROBE 395,16346
    HOTP_TYPE_PROBE = 0x4x4395,16346
} hotp_type_t;396,16372
    const char *vul_id;vul_id405,16737
    const char *policy_id;policy_id413,17062
    uint policy_version;414,17089
    const char *hotp_dll;hotp_dll415,17114
    const char *hotp_dll_hash;hotp_dll_hash416,17140
    hotp_policy_mode_t mode;417,17171
    uint num_sets;419,17201
    hotp_set_t *sets;sets420,17220
    hotp_vul_info_t *info;info423,17314
    app_pc  hotp_dll_base;424,17341
    hotp_type_t type;440,18182
    unsigned int id;446,18426
} hotp_vul_t;447,18447
typedef struct hotp_vul_tab_t 458,19069
    hotp_vul_t *vul_tab;vul_tab459,19101
    uint num_vuls;460,19126
    struct hotp_vul_tab_t *next;next461,19145
} hotp_vul_tab_t;462,19178
typedef struct hotp_globals_t 470,19468
    bool ldr_safe_hook_removal;476,19797
    bool ldr_safe_hook_injection;477,19868
} hotp_globals_t;478,19939
#define VUL(493,20654
#define SET(494,20708
#define MODULE(495,20775
#define SIG(496,20848
#define PPOINT(497,20920
#define PPOINT_HASH(498,21004
#define NUM_GLOBAL_VULS 501,21094
#define GLOBAL_VUL_TABLE 502,21150
#define GLOBAL_VUL(503,21207
#define GLOBAL_SET(504,21272
#define GLOBAL_MODULE(505,21340
#define GLOBAL_SIG(506,21413
#define GLOBAL_PPOINT(507,21484
#define GLOBAL_HASH(508,21561
#define VUL_STAT_INC(517,22081
#define SET_NUM(519,22119
#define SET_STR_DUP(540,23613
#define SET_STR_PTR(549,24129
#define SET_STR(558,24643
#define HOTP_IS_IN_REGION(560,24704
#define HOTP_ONLY_IS_IN_TRAMPOLINE(564,24875
#define HOTP_ONLY_IS_IN_PATCH_REGION(569,25121
#define GENERATE_PROBE_ID(580,25738
hotp_policy_status_table_t *hotp_policy_status_table;hotp_policy_status_table627,28380
static hotp_vul_t *hotp_vul_table;hotp_vul_table630,28500
static uint hotp_num_vuls;631,28536
static hotp_vul_tab_t *hotp_old_vul_tabs;hotp_old_vul_tabs632,28564
static void *hotp_only_tramp_heap;hotp_only_tramp_heap636,28749
static void *hotp_only_tramp_heap_cache;hotp_only_tramp_heap_cache644,29157
static vm_area_vector_t *hotp_only_tramp_areas;hotp_only_tramp_areas651,29447
static vm_area_vector_t *hotp_patch_point_areas;hotp_patch_point_areas670,30537
static hotp_globals_t *hotp_globals;hotp_globals673,30600
static unsigned int probe_id_counter;681,30834
hotp_get_lock(688,31077
hotp_ppoint_addr(695,31197
hotp_ppoint_areas_add(710,31681
hotp_ppoint_areas_remove(745,32980
hotp_ppoint_areas_release(781,34178
hotp_get_next_str(806,35087
    POLICY_FILE 835,35758
    MODES_FILE836,35779
hotp_read_data_file(840,35812
hotp_read_policy_defs(920,38931
hotp_load_hotp_dlls(1147,49237
hotp_read_policy_modes(1283,55542
hotp_set_policy_status(1392,59653
hotp_init_policy_status_table(1444,62187
static void hotp_free_one_vul(1544,66875
hotp_free_vul_table(1627,70343
hotp_remove_patches_from_module(1658,71445
hotp_remove_hot_patches(1783,77889
hotp_module_match(1800,78683
hotp_compute_hash(1913,84115
hotp_process_image(2068,91872
hotp_ppoint_on_list(2079,92353
hotp_perscache_overlap(2106,93162
hotp_process_image_helper(2159,95542
hotp_patch_point_persist_helper(2604,118582
hotp_num_matched_patch_points(2658,120851
hotp_get_matched_patch_points(2669,121281
hotp_point_not_on_list(2681,121764
hotp_walk_loader_list(2759,125268
hotp_init(2819,127885
hotp_reset_init(2890,130745
hotp_reset_free(2899,130926
hotp_exit(2923,131742
nudge_action_read_policies(2993,134482
hotp_nudge_handler(3208,145034
hotp_only_lookup_patch_addr(3345,151561
hotp_lookup_patch_addr(3396,153861
hotp_does_region_need_patch(3483,157583
hotp_inject_gateway_call(3614,162715
#define HOTP_CONTEXT_OFFSET_ON_DSTACK 3625,163256
#define GET_FROM_DC_OFFS_TO_REG(3630,163477
hotp_inject(3715,167647
hotp_only_patch_region_valid(3815,172827
patch_cti_tgt(3967,180652
hotp_only_inject_patch(3994,181830
hotp_only_remove_patch(4293,195833
hotp_only_in_tramp(4386,200127
hotp_only_detach_helper(4408,201049
hotp_only_mem_prot_change(4449,202989
hotp_only_gateway(4557,207592
hotp_gateway(4617,210455
hotp_execute_patch(4981,227730
hotp_event_notify(5103,233469
hotp_spill_before_notify(5224,238610
hotp_restore_after_notify(5281,241073
hotp_dump_reg_state(5300,241685
hotp_update_vul_stats(5316,242536
#define CLEAN_CALL_XFLAGS_OFFSET 5411,246472
#define CLEAN_CALL_ERRNO_OFFSET 5412,246510
hotp_change_control_flow(5414,246560
hotp_print_diagnostics(5440,247503
hotp_only_contains_leaked_trampoline(5595,254962
hotp_only_gbop_detector(5644,257002
hotp_only_gbop_protector(5658,257515
hotp_only_read_gbop_policy_defs(5675,258107
    DR_PROBE_ADDR_VIRTUAL,5810,263549
    DR_PROBE_ADDR_LIB_OFFS,5820,263981
    DR_PROBE_ADDR_EXP_FUNC,5830,264506
} dr_probe_addr_t;5831,264534
    char *library;library5841,264974
    app_rva_t offset;5846,265197
} dr_probe_lib_offs_t;5847,265219
    char *library;library5857,265674
    char *func;func5861,265843
} dr_probe_exp_func_t;5862,265859
    dr_probe_addr_t type;5871,266185
        app_pc vaddr;5875,266286
        dr_probe_lib_offs_t lib_offs;5878,266366
        dr_probe_exp_func_t exp_func;5881,266465
} dr_probe_location_t;5883,266510
    DR_PROBE_RETURN_NORMAL 5897,266958
} dr_probe_return_t;5898,266990
    char *name;name5910,267356
    dr_probe_location_t insert_loc;5920,267857
    dr_probe_location_t callback_func;5937,268608
    unsigned int id;5940,268726
    dr_probe_status_t status;5943,268808
} dr_probe_desc_t;5944,268838
dr_register_probes(6074,275497
#define HOTP_PROBE_PRECEDENCE 6246,283398
dr_get_probe_status(6357,288415
hotp_read_policies(6395,289586

utils.h,24471
#define _UTILS_H_ 43,1984
# undef assert46,2019
#define assert 49,2082
#define CHKLVL_ASSERTS 52,2187
#define CHKLVL_DEFAULT 53,2212
# define DEBUG_CHECKS(59,2445
# define DEBUG_CHECKS(61,2519
#   define ASSERT(71,2905
#   define ASSERT_MESSAGE(77,3208
#   define REPORT_CURIOSITY(79,3362
#   define ASSERT_CURIOSITY(86,3910
#   define ASSERT_CURIOSITY_ONCE(91,4279
#   define ASSERT(98,4723
#   define ASSERT_MESSAGE(101,4864
#   define ASSERT_CURIOSITY(104,5016
#   define ASSERT_CURIOSITY_ONCE(105,5058
# define ASSERT_NOT_TESTED(107,5128
# define ASSERT(110,5293
# define ASSERT_MESSAGE(111,5331
# define ASSERT_NOT_TESTED(112,5380
# define ASSERT_CURIOSITY(113,5422
# define ASSERT_CURIOSITY_ONCE(114,5464
#define ASSERT_NOT_REACHED(117,5531
#define ASSERT_BUG_NUM(118,5574
#define ASSERT_NOT_IMPLEMENTED(119,5652
#define EXEMPT_TEST(120,5739
#define apicheck(128,6080
#  define CLIENT_ASSERT(135,6323
#  define CLIENT_ASSERT(137,6379
# define CLIENT_ASSERT(140,6468
# define APP_EXPORT_ASSERT(144,6568
# define APP_EXPORT_ASSERT(146,6626
#define CHECK_TRUNCATE_TYPE_byte(158,7316
#define CHECK_TRUNCATE_TYPE_sbyte(159,7389
#define CHECK_TRUNCATE_TYPE_ushort(160,7480
#define CHECK_TRUNCATE_TYPE_short(161,7555
#define CHECK_TRUNCATE_TYPE_uint(162,7644
# define CHECK_TRUNCATE_TYPE_int(170,8199
# define CHECK_TRUNCATE_TYPE_int(172,8262
# define CHECK_TRUNCATE_TYPE_size_t(175,8366
# define CHECK_TRUNCATE_TYPE_stats_int_t(177,8491
# define CHECK_TRUNCATE_TYPE_size_t 179,8550
# define CHECK_TRUNCATE_TYPE_stats_int_t 180,8611
#define ASSERT_TRUNCATE(187,8941
#define CURIOSITY_TRUNCATE(190,9182
#define CLIENT_ASSERT_TRUNCATE(194,9442
#define ASSERT_BITFIELD_TRUNCATE(198,9627
#define CLIENT_ASSERT_BITFIELD_TRUNCATE(200,9747
#define LOCK_FREE_STATE 204,9935
#define LOCK_SET_STATE 205,10011
#define LOCK_CONTENDED_STATE 207,10187
#define SPINLOCK_FREE_STATE 209,10238
#define CONTENTION_EVENT_NOT_CREATED 211,10329
typedef HANDLE contention_event_t;214,10406
typedef void * contention_event_t;216,10447
typedef struct _mutex_t 219,10490
    volatile int lock_requests;220,10516
    contention_event_t contended_event;222,10682
    const char *name;name225,10875
    uint      rank;229,11115
    thread_id_t owner;230,11199
    dcontext_t *owning_dcontext;owning_dcontext235,11442
    struct _mutex_t *prev_owned_lock;prev_owned_lock236,11534
    uint count_times_acquired;237,11612
    uint count_times_contended;238,11691
    uint count_times_spin_pause;239,11776
    uint max_contended_requests;240,11878
    uint count_times_spin_only;241,11971
    struct _mutex_t *prev_process_lock;prev_process_lock244,12270
    struct _mutex_t *next_process_lock;next_process_lock245,12310
#  define MAX_MUTEX_CALLSTACK 251,12593
    byte *callstack[callstack252,12625
    bool app_lock;256,12812
#  define MAX_MUTEX_CALLSTACK 259,12845
    bool deleted;261,12923
} mutex_t;264,13092
typedef struct _spin_mutex_t 269,13328
    mutex_t lock;270,13359
} spin_mutex_t;271,13377
typedef struct _recursive_lock_t 274,13449
    mutex_t lock;275,13484
    thread_id_t owner;281,13770
    uint count;282,13793
} recursive_lock_t;283,13809
typedef struct _read_write_lock_t 285,13830
    mutex_t lock;286,13866
    volatile int num_readers;291,14107
    thread_id_t writer;293,14198
    volatile int num_pending_readers;294,14222
    contention_event_t writer_waiting_readers;295,14314
    contention_event_t readers_waiting_writer;296,14402
} read_write_lock_t;298,14578
#  define LOCK_RANK(301,14626
    LOCK_RANK(307,14862
    LOCK_RANK(outermost_lock)307,14862
    LOCK_RANK(308,14948
    LOCK_RANK(thread_in_DR_exclusion)308,14948
    LOCK_RANK(309,15004
    LOCK_RANK(all_threads_synch_lock)309,15004
    LOCK_RANK(311,15074
    LOCK_RANK(trace_building_lock)311,15074
    LOCK_RANK(317,15338
    LOCK_RANK(thread_initexit_lock)317,15338
    LOCK_RANK(319,15418
    LOCK_RANK(bb_building_lock)319,15418
    LOCK_RANK(322,15554
    LOCK_RANK(exception_stack_lock)322,15554
    LOCK_RANK(326,15736
    LOCK_RANK(all_threads_lock)326,15736
    LOCK_RANK(328,15797
    LOCK_RANK(linking_lock)328,15797
    LOCK_RANK(331,15890
    LOCK_RANK(shared_blocks_lock)331,15890
    LOCK_RANK(332,15951
    LOCK_RANK(shared_traces_lock)332,15951
    LOCK_RANK(335,16020
    LOCK_RANK(synch_lock)335,16020
    LOCK_RANK(337,16081
    LOCK_RANK(protect_info)337,16081
    LOCK_RANK(340,16208
    LOCK_RANK(sideline_mutex)340,16208
    LOCK_RANK(343,16248
    LOCK_RANK(shared_cache_flush_lock)343,16248
    LOCK_RANK(346,16451
    LOCK_RANK(shared_delete_lock)346,16451
    LOCK_RANK(347,16532
    LOCK_RANK(lazy_delete_lock)347,16532
    LOCK_RANK(349,16614
    LOCK_RANK(shared_cache_lock)349,16614
    LOCK_RANK(354,16929
    LOCK_RANK(change_linking_lock)354,16929
    LOCK_RANK(356,17008
    LOCK_RANK(shared_vm_areas)356,17008
    LOCK_RANK(357,17089
    LOCK_RANK(shared_cache_count_lock)357,17089
    LOCK_RANK(360,17188
    LOCK_RANK(fragment_delete_mutex)360,17188
    LOCK_RANK(363,17258
    LOCK_RANK(tracedump_mutex)363,17258
    LOCK_RANK(365,17341
    LOCK_RANK(emulate_write_lock)365,17341
    LOCK_RANK(367,17422
    LOCK_RANK(unit_flush_lock)367,17422
    LOCK_RANK(370,17495
    LOCK_RANK(maps_iter_buf_lock)370,17495
    LOCK_RANK(380,17918
    LOCK_RANK(hotp_vul_table_lock)380,17918
    LOCK_RANK(383,18061
    LOCK_RANK(coarse_info_lock)383,18061
    LOCK_RANK(386,18201
    LOCK_RANK(executable_areas)386,18201
    LOCK_RANK(390,18410
    LOCK_RANK(rct_module_lock)390,18410
    LOCK_RANK(394,18593
    LOCK_RANK(after_call_lock)394,18593
    LOCK_RANK(398,18803
    LOCK_RANK(module_data_lock)398,18803
    LOCK_RANK(400,18943
    LOCK_RANK(special_units_list_lock)400,18943
    LOCK_RANK(401,19009
    LOCK_RANK(special_heap_lock)401,19009
    LOCK_RANK(403,19161
    LOCK_RANK(coarse_info_incoming_lock)403,19161
    LOCK_RANK(410,19545
    LOCK_RANK(coarse_table_rwlock)410,19545
    LOCK_RANK(412,19719
    LOCK_RANK(coarse_pclookup_table_rwlock)412,19719
    LOCK_RANK(415,19952
    LOCK_RANK(coarse_th_table_rwlock)415,19952
    LOCK_RANK(417,20018
    LOCK_RANK(process_module_vector_lock)417,20018
    LOCK_RANK(420,20257
    LOCK_RANK(snapshot_lock)420,20257
    LOCK_RANK(421,20310
    LOCK_RANK(written_areas)421,20310
    LOCK_RANK(424,20460
    LOCK_RANK(futureexec_areas)424,20460
    LOCK_RANK(427,20605
    LOCK_RANK(app_flushed_areas)427,20605
    LOCK_RANK(430,20695
    LOCK_RANK(pretend_writable_areas)430,20695
    LOCK_RANK(431,20775
    LOCK_RANK(patch_proof_areas)431,20775
    LOCK_RANK(432,20850
    LOCK_RANK(emulate_write_areas)432,20850
    LOCK_RANK(433,20927
    LOCK_RANK(IAT_areas)433,20927
    LOCK_RANK(436,21084
    LOCK_RANK(dr_client_mutex)436,21084
    LOCK_RANK(437,21141
    LOCK_RANK(client_thread_count_lock)437,21141
    LOCK_RANK(438,21206
    LOCK_RANK(client_flush_request_lock)438,21206
    LOCK_RANK(439,21272
    LOCK_RANK(callback_registration_lock)439,21272
    LOCK_RANK(440,21339
    LOCK_RANK(client_tls_lock)440,21339
    LOCK_RANK(442,21402
    LOCK_RANK(intercept_hook_lock)442,21402
    LOCK_RANK(443,21459
    LOCK_RANK(privload_lock)443,21459
    LOCK_RANK(445,21540
    LOCK_RANK(sigfdtable_lock)445,21540
    LOCK_RANK(447,21600
    LOCK_RANK(table_rwlock)447,21600
    LOCK_RANK(448,21653
    LOCK_RANK(loaded_module_areas)448,21653
    LOCK_RANK(449,21731
    LOCK_RANK(aslr_areas)449,21731
    LOCK_RANK(450,21799
    LOCK_RANK(aslr_pad_areas)450,21799
    LOCK_RANK(451,21871
    LOCK_RANK(native_exec_areas)451,21871
    LOCK_RANK(452,21946
    LOCK_RANK(thread_vm_areas)452,21946
    LOCK_RANK(454,22006
    LOCK_RANK(app_pc_table_rwlock)454,22006
    LOCK_RANK(457,22145
    LOCK_RANK(dead_tables_lock)457,22145
    LOCK_RANK(458,22201
    LOCK_RANK(aslr_lock)458,22201
    LOCK_RANK(461,22258
    LOCK_RANK(hotp_only_tramp_areas_lock)461,22258
    LOCK_RANK(463,22398
    LOCK_RANK(hotp_patch_point_areas_lock)463,22398
    LOCK_RANK(467,22565
    LOCK_RANK(profile_callers_lock)467,22565
    LOCK_RANK(469,22635
    LOCK_RANK(coarse_stub_areas)469,22635
    LOCK_RANK(470,22695
    LOCK_RANK(moduledb_lock)470,22695
    LOCK_RANK(471,22756
    LOCK_RANK(pcache_dir_check_lock)471,22756
    LOCK_RANK(473,22806
    LOCK_RANK(suspend_lock)473,22806
    LOCK_RANK(474,22835
    LOCK_RANK(shared_lock)474,22835
    LOCK_RANK(476,22870
    LOCK_RANK(modlist_areas)476,22870
    LOCK_RANK(478,22956
    LOCK_RANK(privload_fls_lock)478,22956
    LOCK_RANK(479,23031
    LOCK_RANK(drwinapi_localheap_lock)479,23031
    LOCK_RANK(482,23132
    LOCK_RANK(client_aux_libs)482,23132
    LOCK_RANK(484,23180
    LOCK_RANK(client_aux_lib64_lock)484,23180
    LOCK_RANK(488,23248
    LOCK_RANK(alt_tls_lock)488,23248
    LOCK_RANK(497,23641
    LOCK_RANK(allunits_lock)497,23641
    LOCK_RANK(498,23698
    LOCK_RANK(fcache_unit_areas)498,23698
    IF_LINUX_(500,23829
    IF_LINUX_(LOCK_RANK(500,23829
    IF_LINUX_(LOCK_RANK(all_memory_areas)500,23829
    IF_UNIX_(501,23896
    IF_UNIX_(LOCK_RANK(501,23896
    IF_UNIX_(LOCK_RANK(set_thread_area_lock)501,23896
    LOCK_RANK(502,23963
    LOCK_RANK(landing_pad_areas_lock)502,23963
    LOCK_RANK(503,24045
    LOCK_RANK(dynamo_areas)503,24045
    LOCK_RANK(504,24103
    LOCK_RANK(map_intercept_pc_lock)504,24103
    LOCK_RANK(505,24167
    LOCK_RANK(global_alloc_lock)505,24167
    LOCK_RANK(506,24223
    LOCK_RANK(heap_unit_lock)506,24223
    LOCK_RANK(507,24272
    LOCK_RANK(vmh_lock)507,24272
    LOCK_RANK(508,24323
    LOCK_RANK(last_deallocated_lock)508,24323
    LOCK_RANK(512,24450
    LOCK_RANK(tls_lock)512,24450
    LOCK_RANK(515,24613
    LOCK_RANK(reset_pending_lock)515,24613
    LOCK_RANK(517,24672
    LOCK_RANK(initstack_mutex)517,24672
    LOCK_RANK(519,24730
    LOCK_RANK(event_lock)519,24730
    LOCK_RANK(520,24782
    LOCK_RANK(do_threshold_mutex)520,24782
    LOCK_RANK(521,24842
    LOCK_RANK(threads_killed_lock)521,24842
    LOCK_RANK(522,24903
    LOCK_RANK(child_lock)522,24903
    LOCK_RANK(525,24976
    LOCK_RANK(sideline_lock)525,24976
    LOCK_RANK(526,25030
    LOCK_RANK(do_not_delete_lock)526,25030
    LOCK_RANK(527,25088
    LOCK_RANK(remember_lock)527,25088
    LOCK_RANK(528,25141
    LOCK_RANK(sideline_table_lock)528,25141
    LOCK_RANK(531,25230
    LOCK_RANK(simulate_lock)531,25230
    LOCK_RANK(534,25281
    LOCK_RANK(process_kstats_lock)534,25281
    LOCK_RANK(537,25335
    LOCK_RANK(request_region_be_heap_reachable_lock)537,25335
    LOCK_RANK(540,25517
    LOCK_RANK(report_buf_lock)540,25517
    LOCK_RANK(547,25827
    LOCK_RANK(memory_info_buf_lock)547,25827
    LOCK_RANK(550,25886
    LOCK_RANK(dump_core_lock)550,25886
    LOCK_RANK(553,25925
    LOCK_RANK(logdir_mutex)553,25925
    LOCK_RANK(554,25974
    LOCK_RANK(diagnost_reg_mutex)554,25974
    LOCK_RANK(556,26034
    LOCK_RANK(profile_dump_lock)556,26034
    LOCK_RANK(559,26076
    LOCK_RANK(prng_lock)559,26076
    LOCK_RANK(563,26277
    LOCK_RANK(options_lock)563,26277
    LOCK_RANK(565,26321
    LOCK_RANK(debugbox_lock)565,26321
    LOCK_RANK(567,26358
    LOCK_RANK(eventlog_mutex)567,26358
    LOCK_RANK(568,26442
    LOCK_RANK(datasec_selfprot_lock)568,26442
    LOCK_RANK(569,26480
    LOCK_RANK(thread_stats_lock)569,26480
    LOCK_RANK(574,26663
    LOCK_RANK(shared_itimer_lock)574,26663
    LOCK_RANK(576,26706
    LOCK_RANK(innermost_lock)576,26706
typedef struct _thread_locks_t thread_locks_t;580,26819
#  define INIT_LOCK_NO_TYPE(594,27444
#  define INIT_LOCK_NO_TYPE(600,27760
#  define STRUCTURE_TYPE(612,28325
#  define STRUCTURE_TYPE(618,28563
#define INIT_LOCK_FREE(621,28599
#define ASSIGN_INIT_LOCK_FREE(625,28770
#define ASSIGN_INIT_SPINMUTEX_FREE(632,29160
#define INIT_RECURSIVE_LOCK(635,29263
#define INIT_READWRITE_LOCK(642,29642
#define ASSIGN_INIT_READWRITE_LOCK_FREE(651,30170
#define ASSIGN_INIT_RECURSIVE_LOCK_FREE(663,30934
#define INIT_SPINLOCK_FREE(672,31474
#define DELETE_LOCK(675,31626
#define DELETE_SPINMUTEX(676,31672
#define DELETE_RECURSIVE_LOCK(677,31737
#define DELETE_READWRITE_LOCK(678,31808
mutex_testlock(711,33127
typedef struct _broadcast_event_t broadcast_event_t;733,33925
#define WAIT_FOR_BROADCAST_EVENT(755,35018
#define WRITE_LOCK_HELD(773,36197
#define READ_LOCK_HELD(774,36283
# define OWN_MUTEX(782,36562
# define ASSERT_OWN_MUTEX(783,36616
# define ASSERT_DO_NOT_OWN_MUTEX(785,36689
# define OWN_NO_LOCKS(787,36770
# define ASSERT_OWN_NO_LOCKS(788,36821
# define OWN_MUTEX(794,37063
# define ASSERT_OWN_MUTEX(795,37105
# define ASSERT_DO_NOT_OWN_MUTEX(797,37178
# define OWN_NO_LOCKS(799,37268
# define ASSERT_OWN_NO_LOCKS(800,37320
#define ASSERT_OWN_WRITE_LOCK(802,37379
#define ASSERT_DO_NOT_OWN_WRITE_LOCK(804,37469
#define ASSERT_OWN_READ_LOCK(807,37635
#define READWRITE_LOCK_HELD(809,37718
#define ASSERT_OWN_READWRITE_LOCK(810,37799
#define ASSERT_OWN_RECURSIVE_LOCK(812,37892
#define SHARED_MUTEX(818,38079
#define SHARED_RECURSIVE_LOCK(822,38331
#define USE_BB_BUILDING_LOCK_STEADY_STATE(827,38607
#define USE_BB_BUILDING_LOCK(830,38841
#define SHARED_BB_LOCK(832,38979
#define SHARED_BB_UNLOCK(845,39738
#define NEED_SHARED_LOCK(850,40065
#define SHARED_FLAGS_MUTEX(853,40260
#define SHARED_FLAGS_RECURSIVE_LOCK(857,40449
#define PHI_2_32 893,42030
#define PHI_2_64 894,42089
# define HASH_PHI 896,42169
# define HASH_TAG_BITS 897,42196
# define HASH_PHI 899,42228
# define HASH_TAG_BITS 900,42255
#define HASH_MASK(904,42345
#define HASH_FUNC(909,42613
# define HASH_FUNC_BITS(917,42949
# define HASH_FUNC_BITS(924,43282
#define HASH_VALUE_FOR_TABLE(933,43794
#define HASHTABLE_SIZE(945,44585
    HASH_FUNCTION_NONE 949,44691
    HASH_FUNCTION_MULTIPLY_PHI 950,44719
    HASH_FUNCTION_LOWER_BSWAP 952,44771
    HASH_FUNCTION_BSWAP_XOR 953,44806
    HASH_FUNCTION_SWAP_12TO15 954,44839
    HASH_FUNCTION_SWAP_12TO15_AND_NONE 955,44874
    HASH_FUNCTION_SHIFT_XOR 956,44918
    HASH_FUNCTION_STRING 958,44958
    HASH_FUNCTION_STRING_NOCASE 959,44988
    HASH_FUNCTION_ENUM_MAX,960,45025
} hash_function_t;961,45053
# define REACHABLE_32BIT_START(977,45817
# define REACHABLE_32BIT_END(984,46358
#define MAX_LOW_2GB 988,46580
#define ALIGNED(991,46684
#define ALIGN_FORWARD(992,46757
#define ALIGN_FORWARD_UINT(994,46870
#define ALIGN_BACKWARD(996,46970
#define PAD(997,47058
#define ALIGN_MOD(998,47139
#define CROSSES_ALIGNMENT(1000,47236
#define ALIGN_SHIFT_SIZE(1003,47422
#define IS_POWER_OF_2(1007,47586
#define POINTER_OVERFLOW_ON_ADD(1012,47745
#define POINTER_UNDERFLOW_ON_SUB(1014,47845
typedef uint bitmap_element_t;1020,48038
typedef bitmap_element_t bitmap_t[bitmap_t1021,48069
#define BITMAP_DENSITY 1029,48350
#define BITMAP_MASK(1030,48378
#define BITMAP_INDEX(1031,48433
#define BITMAP_NOT_FOUND 1032,48481
bitmap_test(1043,48817
bitmap_set(1049,48930
bitmap_clear(1055,49027
#define LOGDIR_MAX_NUM 1073,49728
#define LOGDIR_FORMAT_STRING 1074,49765
#define LOGDIR_FORMAT_ARGS(1075,49807
# define MAX_LOG_LENGTH 1083,50180
# define MAX_LOG_LENGTH_MINUS_ONE 1084,50227
# define MAX_LOG_LENGTH 1090,50488
# define MAX_LOG_LENGTH_MINUS_ONE 1091,50548
# define LOG(1095,50677
# define DOELOG(1102,51023
# define DOCHECK(1109,51340
#  define DOLOG 1114,51497
#  define LOG_DECLARE(1115,51520
#  define DOLOG(1118,51647
#  define LOG_DECLARE(1119,51687
# define THREAD 1121,51745
# define THREAD_GET 1123,51885
# define GLOBAL 1124,51934
# define LOG(1128,52137
# define DOLOG(1129,52174
# define DOELOG 1130,52213
# define LOG_DECLARE(1131,52235
# define DOCHECK(1132,52269
# define wcsnlen 1151,53029
    BASE_DIR,1175,53965
    PROCESS_DIR 1176,54027
} log_dir_t;1177,54107
#define DO_ONCE(1198,55181
# define DECLARE_THRESHOLD_LOCK(1224,56579
# define DECLARE_THRESHOLD_LOCK(1226,56640
#define DO_THRESHOLD_SAFE(1234,56971
#define TRY_EXCEPT_ALLOW_NO_DCONTEXT(1273,59014
#define TRY_EXCEPT(1290,60329
#define TRY_FINALLY(1296,60655
#define TRY(1303,61008
#define EXCEPT(1353,63809
#define FINALLY(1369,64608
#define POP_TRY_BLOCK(1396,66413
enum {LONGJMP_EXCEPTION LONGJMP_EXCEPTION1402,66749
#define PROBE_READ_PC(1406,66921
#define PROBE_WRITE_PC(1407,66974
#define UNUSED_VARIABLE(1425,67860
#define GLOBAL_STAT(1431,68132
#define GLOBAL_STAT_ADDR(1433,68259
#define DO_GLOBAL_STATS(1434,68318
# define XSTATS_ATOMIC_INC(1441,68531
# define XSTATS_ATOMIC_DEC(1442,68586
# define XSTATS_ATOMIC_ADD(1443,68641
# define XSTATS_ATOMIC_MAX(1444,68706
# define XSTATS_ATOMIC_ADD_EXCHANGE(1445,68771
# define XSTATS_ATOMIC_INC(1447,68859
# define XSTATS_ATOMIC_DEC(1448,68912
# define XSTATS_ATOMIC_ADD(1449,68965
# define XSTATS_ATOMIC_MAX(1450,69028
# define XSTATS_ATOMIC_ADD_EXCHANGE(1451,69091
#define XSTATS_INC_DC(1457,69305
#define XSTATS_INC(1461,69543
#define XSTATS_DEC_DC(1465,69759
#define XSTATS_DEC(1469,69997
#define XSTATS_ADD_DC(1473,70213
#define XSTATS_ADD(1479,70679
#define XSTATS_SUB(1482,70908
#define XSTATS_ADD_ASSIGN_DC(1483,70980
#define XSTATS_INC_ASSIGN_DC(1492,71620
#define XSTATS_ADD_ASSIGN(1494,71750
#define XSTATS_INC_ASSIGN(1497,71988
#define XSTATS_MAX_HELPER(1500,72059
#define XSTATS_MAX_DC(1511,72825
#define XSTATS_PEAK_DC(1514,73035
#define XSTATS_MAX(1516,73159
#define XSTATS_TRACK_MAX(1519,73389
#define XSTATS_PEAK(1528,74005
#define XSTATS_ADD_MAX_DC(1533,74225
#define XSTATS_ADD_MAX(1539,74642
#define XSTATS_ADD_PEAK_DC(1543,74939
#define XSTATS_ADD_PEAK(1545,75078
#define XSTATS_RESET_DC(1550,75321
#define XSTATS_RESET(1554,75559
#define RSTATS_INC 1559,75824
#define RSTATS_DEC 1560,75854
#define RSTATS_ADD 1561,75884
#define RSTATS_SUB 1562,75914
#define RSTATS_ADD_PEAK 1563,75944
#   define DODEBUGINT 1566,76025
#   define DOCHECKINT 1567,76055
#   define DODEBUGINT(1569,76091
#   define DOCHECKINT(1570,76138
#   define DEBUG_EXT_DECLARE(1577,76412
#   define DEBUG_EXT_DECLARE(1579,76472
#   define DODEBUG(1583,76573
#   define DEBUG_DECLARE(1584,76630
#   define DOSTATS(1585,76680
#   define GLOBAL_STATS_ON(1600,77541
#   define THREAD_STAT(1601,77619
#   define THREAD_STATS_ON(1603,77714
#   define DO_THREAD_STATS(1606,77934
#   define XSTATS_WITH_DC(1611,78246
#   define STATS_INC 1618,78630
#   define STATS_INC_DC 1620,78707
#   define STATS_DEC 1621,78745
#   define STATS_ADD 1622,78777
#   define STATS_SUB 1623,78809
#   define STATS_INC_ASSIGN 1624,78841
#   define STATS_ADD_ASSIGN 1625,78887
#   define STATS_MAX 1626,78933
#   define STATS_TRACK_MAX 1627,78965
#   define STATS_PEAK 1628,79009
#   define STATS_ADD_MAX 1629,79043
#   define STATS_ADD_PEAK 1630,79083
#   define STATS_RESET 1631,79125
#   define DODEBUG(1634,79168
#   define DEBUG_DECLARE(1635,79198
#   define DOSTATS(1636,79236
#   define THREAD_STATS_ON(1637,79266
#   define XSTATS_WITH_DC(1638,79309
#   define DO_THREAD_STATS(1639,79361
#   define GLOBAL_STATS_ON(1640,79423
#   define STATS_INC(1645,79654
#   define STATS_INC_DC(1646,79695
#   define STATS_DEC(1647,79749
#   define STATS_ADD(1648,79790
#   define STATS_SUB(1649,79838
#   define STATS_INC_ASSIGN(1650,79886
#   define STATS_ADD_ASSIGN(1651,79939
#   define STATS_MAX(1652,79999
#   define STATS_TRACK_MAX(1653,80054
#   define STATS_PEAK(1654,80117
#   define STATS_ADD_MAX(1655,80159
#   define STATS_ADD_PEAK(1656,80225
#   define STATS_RESET(1657,80278
# define DOKSTATS(1661,80355
# define KSTART(1668,80630
# define KSTOP(1671,80740
# define KSWITCH(1674,80884
# define KSTOP_NOT_MATCHING(1677,81010
# define KSTOP_REWIND(1684,81396
# define KSTOP_REWIND_UNTIL(1685,81474
# define KSWITCH_STOP(1688,81612
# define KSWITCH_STOP_NOT_PROPAGATED(1694,81868
# define KSTOP_NOT_MATCHING_NOT_PROPAGATED(1701,82184
# define KSTOP_NOT_PROPAGATED(1708,82538
# define KSTART_DC(1723,83267
# define KSTOP_DC(1725,83395
# define KSTOP_NOT_MATCHING_DC(1727,83531
# define KSTOP_REWIND_DC(1731,83758
# define DOKSTATS(1733,83874
# define KSTART(1734,83920
# define KSWITCH(1735,83966
# define KSWITCH_STOP(1736,84012
# define KSWITCH_STOP_NOT_PROPAGATED(1737,84058
# define KSTOP_NOT_MATCHING_NOT_PROPAGATED(1738,84115
# define KSTOP_NOT_PROPAGATED(1739,84178
# define KSTOP_NOT_MATCHING(1740,84228
# define KSTOP(1741,84278
# define KSTOP_REWIND(1742,84324
# define KSTOP_REWIND_UNTIL(1743,84370
# define KSTART_DC(1745,84419
# define KSTOP_DC(1746,84465
# define KSTOP_NOT_MATCHING_DC(1747,84511
# define KSTOP_REWIND_DC(1748,84566
#  define DODEBUG_ONCE(1752,84652
#  define DOLOG_ONCE(1753,84714
#  define DODEBUG_ONCE(1755,84804
#  define DOLOG_ONCE(1756,84852
#define MAX_FP_STATE_SIZE 1759,84934
#define PRESERVE_FLOATING_POINT_STATE_START(1770,85438
#define PRESERVE_FLOATING_POINT_STATE_END(1776,85756
#define PRESERVE_FLOATING_POINT_STATE(1781,85961
#define ARGUMENT_COUNTER(1788,86312
#define _ARGUMENT_COUNT1(1789,86378
#define _ARGUMENT_COUNT2(1790,86451
#define SYSLOG_COMMON(1819,87595
#define SYSLOG_INTERNAL_COMMON(1822,87744
#define SYSLOG_CUSTOM_NOTIFY(1834,88437
#define SYSLOG(1837,88560
#define SYSLOG_NO_OPTION_SYNCH(1839,88649
# define SYSLOG_INTERNAL(1843,88811
# define SYSLOG_INTERNAL_NO_OPTION_SYNCH(1845,88903
# define SYSLOG_INTERNAL(1848,89018
# define SYSLOG_INTERNAL_NO_OPTION_SYNCH(1849,89048
#define SYSLOG_INTERNAL_INFO(1853,89139
#define SYSLOG_INTERNAL_WARNING(1855,89228
#define SYSLOG_INTERNAL_ERROR(1857,89316
#define SYSLOG_INTERNAL_CRITICAL(1859,89400
#define SYSLOG_INTERNAL_INFO_ONCE(1862,89491
#define SYSLOG_INTERNAL_WARNING_ONCE(1864,89584
#define SYSLOG_INTERNAL_ERROR_ONCE(1866,89683
#define SYSLOG_INTERNAL_CRITICAL_ONCE(1868,89778
#define USAGE_ERROR(1876,90231
#define FATAL_USAGE_ERROR(1881,90563
#define OPTION_PARSE_ERROR(1890,91222
# define TRACELOG(1898,91655
# define TRACELOG(1900,91744
#define LOG_NONE 1908,92026
#define LOG_STATS 1909,92064
#define LOG_TOP 1910,92102
#define LOG_THREADS 1911,92140
#define LOG_SYSCALLS 1912,92178
#define LOG_ASYNCH 1913,92216
#define LOG_INTERP 1914,92254
#define LOG_EMIT 1915,92292
#define LOG_LINKS 1916,92330
#define LOG_CACHE 1917,92368
#define LOG_FRAGMENT 1918,92406
#define LOG_DISPATCH 1919,92444
#define LOG_MONITOR 1920,92482
#define LOG_HEAP 1921,92520
#define LOG_VMAREAS 1922,92558
#define LOG_SYNCH 1923,92596
#define LOG_MEMSTATS 1924,92634
#define LOG_OPTS 1925,92672
#define LOG_SIDELINE 1926,92710
#define LOG_SYMBOLS 1927,92748
#define LOG_RCT 1928,92786
#define LOG_NT 1929,92824
#define LOG_HOT_PATCHING 1930,92862
#define LOG_HTABLE 1931,92900
#define LOG_MODULEDB 1932,92938
#define LOG_LOADER 1933,92976
#define LOG_CLEANCALL 1934,93014
#define LOG_ALL_RELEASE 1936,93053
#define LOG_ALL 1937,93091
# define LOG_PROFILE 1940,93155
#define MAXIMUM_SYMBOL_LENGTH 1946,93366
    DUMP_NO_QUOTING 1970,94046
    DUMP_NO_QUOTING   = 0x01000,x010001970,94046
    DUMP_OCTAL 1971,94113
    DUMP_OCTAL        = 0x02000,x020001971,94113
    DUMP_NO_CHARS 1972,94163
    DUMP_NO_CHARS     = 0x04000,x040001972,94163
    DUMP_RAW 1973,94224
    DUMP_RAW          = 0x08000,x080001973,94224
    DUMP_DWORD 1974,94284
    DUMP_DWORD        = 0x10000,x100001974,94284
    DUMP_ADDRESS 1975,94342
    DUMP_ADDRESS      = 0x20000,x200001975,94342
    DUMP_APPEND_ASCII 1976,94421
    DUMP_APPEND_ASCII = 0x40000,x400001976,94421
    DUMP_PER_LINE 1977,94496
    DUMP_PER_LINE     = 0x000ff x000ff1977,94496
#define DUMP_PER_LINE_DEFAULT 1979,94564
#define MD5_BLOCK_LENGTH 2022,96198
#define MD5_RAW_BYTES 2023,96226
#define MD5_STRING_LENGTH 2024,96251
struct MD5Context 2031,96557
    uint32 state[state2032,96577
    uint64 count;2033,96634
    unsigned char buffer[buffer2034,96710
#   undef isprint2078,97884
#   undef isdigit2083,97950
#define isprint_fast(2089,98014
#define isdigit_fast(2090,98070
#  undef isprint2098,98318
#  undef isdigit2101,98359
# define isprint 2103,98384
# define isdigit 2104,98450
#define MAX_CALL_PROFILE_DEPTH 2141,100089
#define EXPECT(2149,100270
#define EXPECT_RELATION(2154,100481
#define EXPECT_RELATION_INTERNAL(2159,100692
#define TESTRUN(2172,101519
#define UNIT_TEST_MAIN 2187,102146

lib/dr_stats.h,1059
#define _DR_STATS_H_ 36,1759
# define DR_SHMEM_KEY 46,2071
# define DYNAMORIO_MAGIC_STRING 48,2136
# define DYNAMORIO_MAGIC_STRING_LEN 49,2193
#define STAT_NAME_MAX_LEN 52,2264
typedef struct _single_stat_t 53,2293
    char name[name58,2525
    stats_int_t value;62,2739
} single_stat_t;63,2762
#define NUM_EVENTS 69,2975
typedef struct _dr_statistics_t 70,2997
    char magicstring[magicstring72,3043
    process_id_t process_id;74,3100
    char process_name[process_name75,3149
    uint logmask;76,3205
    uint loglevel;77,3255
    char logdir[logdir78,3316
    uint64 perfctr_vals[perfctr_vals79,3386
    uint num_stats;80,3423
    single_stat_t stats[stats83,3533
#  define STATS_DEF(86,3581
#  define RSTATS_DEF(88,3647
# undef STATS_DEF91,3737
# undef RSTATS_DEF92,3755
} dr_statistics_t;94,3781
    thread_id_t thread_id;99,3875
    mutex_t thread_stats_lock;100,3902
# define STATS_DEF(116,4901
# define RSTATS_DEF(118,4967
} thread_local_statistics_t;121,5056
#undef STATS_DEF122,5085
#undef RSTATS_DEF123,5102

lib/fortran.c,93
void drsetup_(47,2070
void drcleanup_(52,2111
void drstart_(57,2156
void drstop_(62,2197

lib/kstatsx.h,19
KSTAT_DEF(55,2208

lib/dr_app.h,155
#define _DR_APP_H_ 40,1829
#    define DR_APP_API 44,1890
#    define DR_APP_API 46,1943
#    define DR_APP_API 50,2082
#    define DR_APP_API52,2154

lib/dr_inject.h,142
#define _DR_INJECT_H_ 35,1764
# define ERROR_IMAGE_MACHINE_TYPE_MISMATCH_EXE 55,2379
# define WARN_IMAGE_MACHINE_TYPE_MISMATCH_EXE 60,2537

lib/dr_config.h,979
#define _DR_CONFIG_H_ 35,1774
#define DR_MAX_OPTIONS_LENGTH 57,2638
    DR_MODE_NONE 66,2839
    DR_MODE_CODE_MANIPULATION 72,3011
    DR_MODE_PROBE 76,3147
    DR_MODE_MEMORY_FIREWALL 82,3256
    DR_MODE_DO_NOT_RUN 91,3459
} dr_operation_mode_t;93,3488
    DR_SUCCESS,98,3640
    DR_PROC_REG_EXISTS,101,3729
    DR_PROC_REG_INVALID,104,3830
    DR_PRIORITY_INVALID,107,3928
    DR_ID_CONFLICTING,110,4017
    DR_ID_INVALID,113,4105
    DR_FAILURE,116,4216
    DR_NUDGE_PID_NOT_INJECTED,119,4317
    DR_NUDGE_TIMEOUT,122,4440
    DR_CONFIG_STRING_TOO_LONG,125,4538
    DR_CONFIG_FILE_WRITE_FAILED,128,4617
    DR_NUDGE_PID_NOT_FOUND,131,4734
} dr_config_status_t;133,4763
    DR_PLATFORM_DEFAULT,137,4876
    DR_PLATFORM_32BIT,138,4949
    DR_PLATFORM_64BIT,139,5022
} dr_platform_t;140,5102
typedef struct _dr_registered_process_iterator_t dr_registered_process_iterator_t;398,17827
typedef struct _dr_client_iterator_t dr_client_iterator_t;709,33815

lib/mcxtx.h,920
        reg_t xdi;57,2593
        reg_t IF_X64_ELSE(58,2672
        reg_t xsi;61,2847
        reg_t IF_X64_ELSE(62,2926
        reg_t xbp;65,3101
        reg_t IF_X64_ELSE(66,3180
        reg_t xsp;69,3355
        reg_t IF_X64_ELSE(70,3434
        reg_t xbx;73,3609
        reg_t IF_X64_ELSE(74,3688
        reg_t xdx;77,3863
        reg_t IF_X64_ELSE(78,3942
        reg_t xcx;81,4117
        reg_t IF_X64_ELSE(82,4196
        reg_t xax;85,4371
        reg_t IF_X64_ELSE(86,4450
    reg_t r8;89,4624
    reg_t r9;90,4693
    reg_t r10;91,4762
    reg_t r11;92,4832
    reg_t r12;93,4902
    reg_t r13;94,4972
    reg_t r14;95,5042
    reg_t r15;96,5112
        reg_t xflags;99,5201
        reg_t IF_X64_ELSE(100,5289
        byte *xip;xip109,5722
        byte *pc;pc110,5801
        byte *IF_X64_ELSE(IF_X64_ELSE111,5883
    byte padding[padding113,5980
    dr_ymm_t ymm[ymm140,7430

lib/globals_shared.h,22485
#define _GLOBALS_SHARED_H_44,1915
#    define WINDOWS49,2011
# define X6478,2822
# define UNIX82,2880
#  define WIN32_LEAN_AND_MEAN87,2940
#  define DR_EXPORT 113,3580
#  define LINK_ONCE 114,3622
#  define ALIGN_VAR(115,3664
#   define inline 117,3730
#  define INLINE_FORCED 119,3766
#    define DR_EXPORT 126,4030
#    define DR_EXPORT128,4101
#  define LINK_ONCE 130,4132
#  define ALIGN_VAR(131,4175
#   define inline 133,4250
#  define INLINE_FORCED 135,4288
#define MAXIMUM_PATH 149,4692
#  define NULL 154,4790
typedef _Bool bool;161,4964
typedef char bool;164,5038
#    define true 168,5092
#    define false 171,5139
#define CAST_TO_bool(178,5277
typedef unsigned int uint;181,5340
typedef unsigned short ushort;184,5406
typedef unsigned char byte;187,5474
typedef signed char sbyte;190,5540
typedef byte * app_pc;192,5574
typedef void (*generic_func_t)generic_func_t194,5598
typedef unsigned __int64 uint64;198,5683
typedef __int64 int64;201,5758
typedef __int64 ssize_t;204,5803
typedef int ssize_t;206,5836
#  define INT64_FORMAT 208,5866
typedef unsigned long int uint64;212,5962
typedef long int int64;215,6042
#    define INT64_FORMAT 217,6077
typedef unsigned long long int uint64;220,6150
typedef long long int int64;223,6235
#    define INT64_FORMAT 225,6275
typedef uint64 reg_t;233,6451
typedef uint reg_t;235,6479
typedef reg_t ptr_uint_t;238,6574
typedef int64 ptr_int_t;240,6611
typedef int ptr_int_t;242,6642
typedef size_t app_rva_t;250,6838
#define PTR_UINT_0 252,6865
#define PTR_UINT_1 253,6907
#define PTR_UINT_MINUS_1 254,6949
typedef ptr_uint_t thread_id_t;257,7007
typedef ptr_uint_t process_id_t;258,7039
typedef pid_t thread_id_t;260,7090
typedef pid_t process_id_t;261,7117
#define INVALID_PROCESS_ID 264,7153
typedef HANDLE file_t;272,7395
#  define INVALID_FILE 274,7467
#  define STDOUT 280,7719
#  define STDERR 282,7803
#  define STDIN 284,7887
typedef int file_t;289,7953
#  define INVALID_FILE 291,8022
#  define STDOUT 299,8349
#  define STDERR 301,8421
#  define STDIN 303,8493
typedef uint client_id_t;318,8983
    uint black_box_uint;328,9209
    uint64 black_box_uint64;329,9234
    uint black_box_uint[black_box_uint331,9270
} opnd_t;333,9306
    uint black_box_uint[black_box_uint342,9528
    uint black_box_uint[black_box_uint344,9564
} instr_t;346,9601
typedef struct _opnd_t opnd_t;349,9634
typedef struct _instr_t instr_t;351,9682
# define IN 356,9781
# define OUT 359,9836
# define INOUT 362,9895
# define POINTER_MAX 368,9985
#  define SSIZE_T_MAX 370,10038
# define POINTER_MAX_32BIT 372,10078
# define POINTER_MAX 374,10135
#  define SSIZE_T_MAX 376,10186
#define MAX_CLIENT_LIBS 380,10232
# define MAX(387,10483
# define MIN(388,10526
#define PTR_UINT_ABS(390,10576
#define TESTALL(393,10671
#define TESTANY(395,10772
#define TEST 397,10865
#define BOOLS_MATCH(399,10887
# define IF_DEBUG(403,11003
# define _IF_DEBUG(404,11026
# define IF_DEBUG_(405,11052
# define IF_DEBUG_ELSE(406,11078
# define IF_DEBUG_ELSE_0(407,11109
# define IF_DEBUG_ELSE_NULL(408,11141
# define IF_DEBUG(410,11182
# define _IF_DEBUG(411,11203
# define IF_DEBUG_(412,11225
# define IF_DEBUG_ELSE(413,11247
# define IF_DEBUG_ELSE_0(414,11278
# define IF_DEBUG_ELSE_NULL(415,11308
# define IF_INTERNAL(419,11370
# define IF_INTERNAL_ELSE(420,11396
# define IF_INTERNAL(422,11435
# define IF_INTERNAL_ELSE(423,11459
# define IF_WINDOWS(427,11515
# define IF_WINDOWS_(428,11540
# define _IF_WINDOWS(429,11568
# define IF_WINDOWS_ELSE_0(430,11596
# define IF_WINDOWS_ELSE(431,11630
# define IF_WINDOWS_ELSE_NP(432,11664
# define IF_UNIX(433,11699
# define IF_UNIX_ELSE(434,11719
# define IF_UNIX_(435,11748
# define _IF_UNIX(436,11769
# define IF_WINDOWS(438,11796
# define IF_WINDOWS_(439,11819
# define _IF_WINDOWS(440,11843
# define IF_WINDOWS_ELSE_0(441,11867
# define IF_WINDOWS_ELSE(442,11901
# define IF_WINDOWS_ELSE_NP(443,11935
# define IF_UNIX(444,11970
# define IF_UNIX_ELSE(445,11992
# define IF_UNIX_(446,12021
# define _IF_UNIX(447,12045
# define IF_LINUX(451,12091
# define IF_LINUX_ELSE(452,12114
# define IF_LINUX_(453,12144
# define IF_LINUX(455,12175
# define IF_LINUX_ELSE(456,12196
# define IF_LINUX_(457,12226
# define IF_VMX86(461,12276
# define IF_VMX86_ELSE(462,12299
# define _IF_VMX86(463,12329
# define IF_NOT_VMX86(464,12355
# define IF_VMX86(466,12387
# define IF_VMX86_ELSE(467,12408
# define _IF_VMX86(468,12438
# define IF_NOT_VMX86(469,12460
#  define IF_HAVE_TLS_ELSE(474,12524
#  define IF_NOT_HAVE_TLS(475,12559
#  define IF_HAVE_TLS_ELSE(477,12595
#  define IF_NOT_HAVE_TLS(478,12630
# define IF_HAVE_TLS_ELSE(482,12751
# define IF_NOT_HAVE_TLS(483,12785
# define IF_WINDOWS_AND_CORE(487,12874
# define IF_WINDOWS_AND_CORE(489,12914
# define IF_PROG_SHEP(493,12981
# define IF_PROG_SHEP(495,13014
# define IF_RCT_IND_BRANCH(499,13107
# define IF_RCT_IND_BRANCH(501,13145
# define IF_RETURN_AFTER_CALL(505,13246
# define IF_RETURN_AFTER_CALL_ELSE(506,13281
# define IF_RETURN_AFTER_CALL(508,13330
# define IF_RETURN_AFTER_CALL_ELSE(509,13363
# define IF_HOTP(513,13444
# define IF_HOTP(515,13472
# define IF_CLIENT_INTERFACE(519,13524
# define IF_CLIENT_INTERFACE_ELSE(520,13558
# define _IF_CLIENT_INTERFACE(521,13600
# define _IF_NOT_CLIENT_INTERFACE(522,13637
# define _IF_CLIENT(524,13713
# define IF_CLIENT_INTERFACE(526,13746
# define IF_CLIENT_INTERFACE_ELSE(527,13778
# define _IF_CLIENT_INTERFACE(528,13820
# define _IF_NOT_CLIENT_INTERFACE(529,13853
# define _IF_CLIENT(530,13894
# define IF_CUSTOM_TRACES(534,13946
# define IF_CUSTOM_TRACES(536,13983
# define IF_APP_EXPORTS(540,14042
# define IF_APP_EXPORTS(542,14077
# define IF_GBOP(546,14124
# define IF_GBOP(548,14152
# define IF_PROC_CTL(552,14203
# define IF_PROC_CTL(554,14235
# define IF_KSTATS(558,14281
# define IF_KSTATS(560,14311
# define IF_UNIT_TEST_ELSE(564,14369
# define IF_UNIT_TEST_ELSE(566,14409
# define IF_X64(572,14528
# define IF_X64_ELSE(573,14549
# define IF_X64_(574,14578
# define _IF_X64(575,14601
# define IF_NOT_X64(576,14625
# define _IF_NOT_X64(577,14648
# define IF_X64(579,14678
# define IF_X64_ELSE(580,14697
# define IF_X64_(581,14726
# define _IF_X64(582,14746
# define IF_NOT_X64(583,14766
# define _IF_NOT_X64(584,14791
    SYSLOG_INFORMATION 589,14866
    SYSLOG_INFORMATION = 0x1,x1589,14866
    SYSLOG_WARNING 590,14896
    SYSLOG_WARNING     = 0x2,x2590,14896
    SYSLOG_ERROR 591,14926
    SYSLOG_ERROR       = 0x4,x4591,14926
    SYSLOG_CRITICAL 592,14956
    SYSLOG_CRITICAL    = 0x8,x8592,14956
    SYSLOG_NONE 593,14986
    SYSLOG_NONE        = 0x0,x0593,14986
    SYSLOG_ALL 594,15016
    SYSLOG_ALL         = SYSLOG_INFORMATION 594,15016
    SYSLOG_ALL         = SYSLOG_INFORMATION | SYSLOG_WARNING 594,15016
    SYSLOG_ALL         = SYSLOG_INFORMATION | SYSLOG_WARNING | SYSLOG_ERROR 594,15016
    SYSLOG_ALL         = SYSLOG_INFORMATION | SYSLOG_WARNING | SYSLOG_ERROR | SYSLOG_CRITICAL594,15016
} syslog_event_type_t;595,15110
#define DYNAMO_OPTION(597,15134
#define DYNAMO_OPTION_NOT_STRING(601,15445
#define EXPOSE_INTERNAL_OPTIONS604,15556
# define INTERNAL_OPTION(611,15853
# define INTERNAL_OPTION(624,16761
 typedef unsigned int uint32;629,16908
typedef uint64 timestamp_t;633,17070
#  define NAKED634,17098
#  define ZHEX32_FORMAT_STRING 635,17114
#  define HEX32_FORMAT_STRING 636,17152
#  define MAX_PATH 645,17573
 typedef unsigned int uint;647,17647
 typedef unsigned int uint32;650,17714
typedef unsigned __int64 uint64;653,17807
typedef __int64 int64;654,17840
typedef int64 ssize_t;656,17876
typedef int ssize_t;658,17907
#    define ZHEX32_FORMAT_STRING 662,18020
#    define HEX32_FORMAT_STRING 663,18063
#    define ZHEX32_FORMAT_STRING 665,18111
#    define HEX32_FORMAT_STRING 666,18151
#    define ULLONG_MAX 670,18293
typedef uint64 timestamp_t;672,18336
#  define NAKED 673,18364
#define FIXED_TIMESTAMP_FORMAT 676,18408
#define UINT64_FORMAT_CODE 680,18528
#define INT64_FORMAT_CODE 681,18572
#define UINT64_FORMAT_STRING 682,18615
#define INT64_FORMAT_STRING 683,18667
#define HEX64_FORMAT_STRING 684,18717
#define ZHEX64_FORMAT_STRING 685,18766
#define ZHEX32_FORMAT_STRING 687,18842
#define HEX32_FORMAT_STRING 688,18878
# define PFMT 691,18976
# define PIFMT 692,19011
# define SZFMT 693,19046
# define PFMT 695,19087
# define PIFMT 696,19122
# define SZFMT 697,19157
#define PFX 705,19373
#define PIFX 706,19395
typedef int64 stats_int_t;715,19637
typedef int stats_int_t;717,19670
#define L_UINT64_FORMAT_STRING 736,20446
#  define PFMT 738,20527
#  define PIFMT 739,20563
#  define SZFMT 740,20599
#  define SSZFMT 741,20636
#  define SZFC 742,20673
#  define SSZFC 743,20707
#  define PFMT 745,20747
#  define PIFMT 746,20783
#  define SZFMT 747,20819
#  define SSZFMT 748,20840
#  define SZFC 749,20862
#  define SSZFC 750,20881
#define L_PFMT 752,20908
#define PFX 753,20963
#define PIFX 754,20984
# define IDFMT 758,21067
# define IDFMT 760,21094
#define MAX_REGISTRY_PARAMETER 765,21245
# define MAX_OPTIONS_STRING 768,21396
# define MAX_CONFIG_VALUE 769,21432
# define MAX_OPTIONS_STRING 778,21901
# define MAX_CONFIG_VALUE 779,21937
#define MAX_LIST_OPTION_LENGTH 782,22054
#define MAX_PATH_OPTION_LENGTH 784,22163
#define MAX_OPTION_LENGTH 786,22254
#define MAX_PARAMNAME_LENGTH 788,22305
#define MAX_MODNAME_INTERNAL 791,22396
#define MAX_DWORD_STRING_LENGTH 796,22548
typedef char pathstring_t[pathstring_t798,22584
typedef char liststring_t[liststring_t802,22772
#define BUFFER_SIZE_BYTES(805,22885
#define BUFFER_SIZE_ELEMENTS(806,22933
#define BUFFER_LAST_ELEMENT(807,23011
#define NULL_TERMINATE_BUFFER(808,23082
#define BUFFER_ROOM_LEFT_W(810,23148
#define BUFFER_ROOM_LEFT(811,23229
#define CAT_AND_TERMINATE(816,23462
#define EXPANDSTR(824,23655
#define STRINGIFY(825,23679
#  define PRODUCT_NAME 829,23795
#  define PRODUCT_NAME 831,23855
#define COMPANY_NAME 841,24290
#define COMPANY_NAME_EVENTLOG 842,24346
#define COMPANY_LONG_NAME 844,24465
#  define BUILD_NUMBER_STRING 847,24535
#  define BUILD_NUMBER_STRING 849,24603
#  define BUILD_NUMBER 850,24648
#  define VERSION_NUMBER_STRING 854,24705
#  define VERSION_NUMBER_STRING 856,24779
#  define VERSION_NUMBER 857,24830
#  define HOT_PATCHING_DLL_CACHE_PATH 861,24899
#  define HOTP_MODES_FILENAME 862,24953
#  define HOTP_POLICIES_FILENAME 863,24998
#define DYNAMORIO_VAR_CONFIGDIR_ID 867,25126
#define DYNAMORIO_VAR_HOME_ID 868,25182
#define DYNAMORIO_VAR_LOGDIR_ID 869,25233
#define DYNAMORIO_VAR_OPTIONS_ID 870,25286
#define DYNAMORIO_VAR_AUTOINJECT_ID 871,25340
#define DYNAMORIO_VAR_UNSUPPORTED_ID 872,25397
#define DYNAMORIO_VAR_RUNUNDER_ID 873,25457
#define DYNAMORIO_VAR_CMDLINE_ID 874,25512
#define DYNAMORIO_VAR_ONCRASH_ID 875,25566
#define DYNAMORIO_VAR_SAFEMARKER_ID 876,25620
#define DYNAMORIO_VAR_CACHE_ROOT_ID 879,25756
#define DYNAMORIO_VAR_CACHE_SHARED_ID 885,26101
#define DYNAMORIO_VAR_PERSCACHE_ROOT_ID 892,26452
#define DYNAMORIO_VAR_PERSCACHE_SHARED_ID 894,26559
#define PERSCACHE_FILE_SUFFIX 898,26732
# define DYNAMORIO_VAR_HOT_PATCH_POLICES_ID 901,26799
# define DYNAMORIO_VAR_HOT_PATCH_MODES_ID 902,26873
# define DYNAMORIO_VAR_APP_PROCESS_WHITELIST_ID 905,26972
# define DYNAMORIO_VAR_ANON_PROCESS_WHITELIST_ID 906,27053
# define DYNAMORIO_VAR_APP_PROCESS_BLACKLIST_ID 908,27137
# define DYNAMORIO_VAR_ANON_PROCESS_BLACKLIST_ID 909,27218
#define DYNAMORIO_VAR_CONFIGDIR 912,27309
#define DYNAMORIO_VAR_HOME 913,27380
#define DYNAMORIO_VAR_LOGDIR 914,27446
#define DYNAMORIO_VAR_OPTIONS 915,27514
#define DYNAMORIO_VAR_AUTOINJECT 916,27583
#define DYNAMORIO_VAR_UNSUPPORTED 917,27655
#define DYNAMORIO_VAR_RUNUNDER 918,27730
#define DYNAMORIO_VAR_CMDLINE 919,27800
#define DYNAMORIO_VAR_ONCRASH 920,27869
#define DYNAMORIO_VAR_SAFEMARKER 921,27938
#define DYNAMORIO_VAR_CACHE_ROOT 922,28010
#define DYNAMORIO_VAR_CACHE_SHARED 923,28083
#define DYNAMORIO_VAR_PERSCACHE_ROOT 924,28160
#define DYNAMORIO_VAR_PERSCACHE_SHARED 925,28241
# define DYNAMORIO_VAR_HOT_PATCH_POLICIES 927,28356
# define DYNAMORIO_VAR_HOT_PATCH_MODES 928,28445
# define DYNAMORIO_VAR_APP_PROCESS_WHITELIST 931,28559
# define DYNAMORIO_VAR_ANON_PROCESS_WHITELIST 933,28660
# define DYNAMORIO_VAR_APP_PROCESS_BLACKLIST 936,28764
# define DYNAMORIO_VAR_ANON_PROCESS_BLACKLIST 938,28865
#  define DYNAMORIO_VAR_EXE_PATH 944,28989
#  define DYNAMORIO_VAR_EXECVE 945,29050
#  define DYNAMORIO_VAR_EXECVE_LOGDIR 946,29114
#  define L_IF_WIN(947,29180
#  define EXPAND_LEVEL(951,29226
#  define L_EXPAND_LEVEL(952,29294
#  define L(953,29331
#  define LCONCAT(954,29357
#  define L_IF_WIN(955,29417
#  define L_DYNAMORIO_VAR_CONFIGDIR 958,29496
#  define L_DYNAMORIO_VAR_HOME 959,29574
#  define L_DYNAMORIO_VAR_LOGDIR 960,29647
#  define L_DYNAMORIO_VAR_OPTIONS 961,29722
#  define L_DYNAMORIO_VAR_AUTOINJECT 962,29798
#  define L_DYNAMORIO_VAR_UNSUPPORTED 963,29877
#  define L_DYNAMORIO_VAR_RUNUNDER 964,29957
#  define L_DYNAMORIO_VAR_CMDLINE 965,30034
#  define L_DYNAMORIO_VAR_ONCRASH 966,30110
#  define L_DYNAMORIO_VAR_SAFEMARKER 967,30186
#  define L_DYNAMORIO_VAR_CACHE_ROOT 968,30265
#  define L_DYNAMORIO_VAR_CACHE_SHARED 969,30344
#  define L_DYNAMORIO_VAR_HOT_PATCH_POLICIES 971,30457
#  define L_DYNAMORIO_VAR_HOT_PATCH_MODES 972,30552
#  define L_DYNAMORIO_VAR_APP_PROCESS_WHITELIST 975,30673
#  define L_DYNAMORIO_VAR_ANON_PROCESS_WHITELIST 977,30779
#  define L_DYNAMORIO_VAR_APP_PROCESS_BLACKLIST 980,30888
#  define L_DYNAMORIO_VAR_ANON_PROCESS_BLACKLIST 982,30994
#  define L_PRODUCT_NAME 986,31111
#  define L_COMPANY_NAME 987,31178
#  define L_COMPANY_LONG_NAME 988,31245
#  define EVENTLOG_HIVE 991,31348
#  define EVENTLOG_NAME 992,31391
#  define EVENTSOURCE_NAME 993,31437
#  define EVENTLOG_REGISTRY_SUBKEY 995,31522
#  define L_EVENTLOG_REGISTRY_SUBKEY 996,31605
#  define L_EVENTLOG_REGISTRY_KEY 997,31683
#  define L_EVENT_LOG_KEY 998,31782
#  define L_EVENT_LOG_SUBKEY 999,31855
#  define L_EVENT_LOG_NAME 1000,31934
#  define L_EVENT_SOURCE_NAME 1001,31997
#  define L_EVENT_SOURCE_KEY 1002,32060
#  define L_EVENT_SOURCE_SUBKEY 1003,32132
#  define EVENT_LOG_KEY 1005,32211
#  define EVENT_SOURCE_KEY 1006,32299
#  define L_EVENT_FILE_VALUE_NAME 1012,32703
#  define L_EVENT_FILE_NAME_PRE_VISTA 1013,32745
#  define L_EVENT_FILE_NAME_VISTA 1015,32864
#  define L_EVENT_MAX_SIZE_NAME 1017,32985
#  define EVENT_MAX_SIZE 1018,33028
#  define L_EVENT_RETENTION_NAME 1019,33062
#  define EVENT_RETENTION 1020,33108
#  define L_EVENT_TYPES_SUPPORTED_NAME 1022,33157
#  define EVENT_TYPES_SUPPORTED 1023,33214
#  define L_EVENT_CATEGORY_COUNT_NAME 1024,33279
#  define EVENT_CATEGORY_COUNT 1025,33334
#  define L_EVENT_CATEGORY_FILE_NAME 1026,33367
#  define L_EVENT_MESSAGE_FILE 1027,33427
#  define BASE_NAMED_OBJECTS 1030,33514
#  define DYNAMORIO_SHARED_OBJECT_BASE 1032,33645
#  define DYNAMORIO_SHARED_OBJECT_DIRECTORY 1034,33771
#  define DYNAMORIO_REGISTRY_BASE_SUBKEY 1037,33884
#  define DYNAMORIO_REGISTRY_BASE 1038,33966
#  define DYNAMORIO_REGISTRY_HIVE 1039,34098
#  define DYNAMORIO_REGISTRY_KEY 1040,34151
#  define L_DYNAMORIO_REGISTRY_KEY 1041,34218
#  define INJECT_ALL_HIVE 1043,34329
#  define INJECT_ALL_KEY 1044,34377
#  define INJECT_ALL_SUBKEY 1045,34465
#  define INJECT_ALL_LOAD_SUBKEY 1047,34535
#  define INJECT_ALL_SIGN_SUBKEY 1049,34632
#  define INJECT_ALL_HIVE_L 1051,34701
#  define INJECT_ALL_KEY_L 1052,34757
#  define INJECT_ALL_SUBKEY_L 1053,34819
#  define INJECT_ALL_LOAD_SUBKEY_L 1054,34884
#  define INJECT_ALL_SIGN_SUBKEY_L 1055,34963
#  define INJECT_DLL_NAME 1057,35043
#  define INJECT_DLL_8_3_NAME 1058,35092
#  define INJECT_HELPER_DLL1_NAME 1060,35139
#  define INJECT_HELPER_DLL2_NAME 1061,35197
#  define DEBUGGER_INJECTION_HIVE 1063,35256
#  define DEBUGGER_INJECTION_KEY 1064,35315
#  define DEBUGGER_INJECTION_VALUE_NAME 1065,35435
#  define DEBUGGER_INJECTION_HIVE_L 1067,35487
#  define DEBUGGER_INJECTION_KEY_L 1068,35554
#  define DEBUGGER_INJECTION_VALUE_NAME_L 1069,35635
#  define DRINJECT_NAME 1071,35724
#  define SVCHOST_NAME 1074,35844
#  define EXE_SUFFIX 1075,35885
#  define L_EXE_SUFFIX 1076,35923
#  define SVCHOST_EXE_NAME 1077,35981
#  define L_SVCHOST_EXE_NAME 1078,36036
#  define DYNAMORIO_LIBRARY_NAME 1081,36151
#  define DLLPATH_RELEASE 1082,36200
#  define DLLPATH_DEBUG 1083,36270
#  define DLLPATH_PROFILE 1084,36338
#  define L_DYNAMORIO_LIBRARY_NAME 1086,36409
#  define L_DLLPATH_RELEASE 1087,36483
#  define L_DLLPATH_DEBUG 1088,36558
#  define L_DLLPATH_PROFILE 1089,36631
#  define INJECT_ALL_DLL_SUBPATH 1091,36707
#  define L_INJECT_ALL_DLL_SUBPATH 1092,36771
enum DLL_TYPE 1094,36855
        DLL_NONE,1095,36871
        DLL_UNKNOWN,1096,36889
        DLL_RELEASE,1097,36910
        DLL_DEBUG,1098,36931
        DLL_PROFILE,1099,36950
        DLL_CUSTOM,1100,36971
        DLL_PATHHAS1101,36991
# define UNIT_TEST_EXE_NAME 1106,37064
    RUNUNDER_OFF 1158,39425
    RUNUNDER_OFF                  = 0x00,x001158,39425
    RUNUNDER_ON 1159,39477
    RUNUNDER_ON                   = 0x01,x011159,39477
    RUNUNDER_ALL 1160,39529
    RUNUNDER_ALL                  = 0x02,x021160,39529
    RUNUNDER_FORMERLY_EXPLICIT 1165,39794
    RUNUNDER_FORMERLY_EXPLICIT    = 0x04,x041165,39794
    RUNUNDER_COMMANDLINE_MATCH 1167,39847
    RUNUNDER_COMMANDLINE_MATCH    = 0x08,x081167,39847
    RUNUNDER_COMMANDLINE_DISPATCH 1168,39899
    RUNUNDER_COMMANDLINE_DISPATCH = 0x10,x101168,39899
    RUNUNDER_COMMANDLINE_NO_STRIP 1169,39951
    RUNUNDER_COMMANDLINE_NO_STRIP = 0x20,x201169,39951
    RUNUNDER_ONCE 1170,40003
    RUNUNDER_ONCE                 = 0x40,x401170,40003
    RUNUNDER_EXPLICIT 1172,40056
    RUNUNDER_EXPLICIT             = 0x80,x801172,40056
#define NUDGE_DEFINITIONS(1191,40970
#define NUDGE_DEF(1225,43469
    NUDGE_DEFINITIONS(1226,43520
#undef NUDGE_DEF1227,43544
    NUDGE_DR_PARAMETRIZED_END1228,43561
} nudge_generic_type_t;1229,43591
#define NUDGE_GENERIC(1232,43657
#define NUDGE_ARG_VERSION_1 1235,43747
#define NUDGE_ARG_CURRENT_VERSION 1236,43777
    NUDGE_IS_INTERNAL 1242,43899
    NUDGE_IS_INTERNAL       = 0x01,x011242,43899
    NUDGE_NUDGER_FREE_STACK 1244,43986
    NUDGE_NUDGER_FREE_STACK = 0x02,x021244,43986
    NUDGE_FREE_ARG 1246,44146
    NUDGE_FREE_ARG          = 0x04,x041246,44146
    int ignored1;1257,44552
    uint nudge_action_mask:nudge_action_mask1262,44829
    uint version:version1263,44860
    uint flags:flags1264,44880
    int ignored2;1265,44898
    uint version;1267,44987
    uint nudge_action_mask;1268,45046
    uint flags;1269,45108
    client_id_t client_id;1271,45165
    uint64 client_arg;1272,45227
} nudge_arg_t;1278,45415
# define NUDGESIG_SIGNUM 1286,45651
#define AVOID_API_EXPORT 1296,46100
#define HOTP_POLICY_ID_LENGTH 1308,46518
    DR_PROBE_STATUS_ERROR 1322,46981
    DR_PROBE_STATUS_INVALID_ID 1325,47097
    DR_PROBE_STATUS_INVALID_VADDR 1335,47484
    DR_PROBE_STATUS_INVALID_LIB 1341,47734
    DR_PROBE_STATUS_INVALID_LIB_OFFS 1346,47932
    DR_PROBE_STATUS_INVALID_FUNC 1352,48175
    DR_PROBE_STATUS_VADDR_NOT_EXEC 1364,48745
    DR_PROBE_STATUS_LIB_NOT_SEEN 1367,48865
    DR_PROBE_STATUS_WAITING_FOR_EXEC 1373,49118
    DR_PROBE_STATUS_LIB_UNLOADED 1378,49322
    DR_PROBE_STATUS_INJECTED 1383,49445
    DR_PROBE_STATUS_UNSUPPORTED 1386,49553
    HOTP_INJECT_ERROR 1416,50918
    HOTP_INJECT_ERROR = DR_PROBE_STATUS_ERROR,1416,50918
    HOTP_INJECT_PROTECT 1419,51013
    HOTP_INJECT_PROTECT = DR_PROBE_STATUS_INJECTED,1419,51013
    HOTP_INJECT_DETECT 1425,51268
    HOTP_INJECT_IN_PROGRESS 1430,51461
    HOTP_INJECT_PENDING 1435,51611
    HOTP_INJECT_PENDING = DR_PROBE_STATUS_WAITING_FOR_EXEC,1435,51611
    HOTP_INJECT_NO_MATCH 1441,51899
    HOTP_INJECT_NO_MATCH = DR_PROBE_STATUS_LIB_NOT_SEEN,1441,51899
    HOTP_INJECT_OFF 1450,52172
} dr_probe_status_t;1452,52282
typedef dr_probe_status_t hotp_inject_status_t;1455,52328
    HOTP_MODE_OFF 1462,52526
    HOTP_MODE_DETECT 1463,52549
    HOTP_MODE_PROTECT 1464,52576
} hotp_policy_mode_t;1465,52602
    char policy_id[policy_id1481,53420
    hotp_inject_status_t inject_status;1482,53467
    hotp_policy_mode_t mode;1491,53948
} hotp_policy_status_t;1492,53977
    uint crc;1507,54665
    uint size;1508,54679
    uint num_policies;1509,54736
    hotp_policy_status_t *policy_status_array;policy_status_array1510,54759
} hotp_policy_status_table_t;1511,54806
    GET_PARAMETER_BUF_TOO_SMALL 1527,55494
    GET_PARAMETER_FAILURE 1528,55532
    GET_PARAMETER_SUCCESS 1529,55563
    GET_PARAMETER_NOAPPSPECIFIC 1530,55594
    SET_PARAMETER_FAILURE 1531,55631
    SET_PARAMETER_FAILURE = GET_PARAMETER_FAILURE,1531,55631
    SET_PARAMETER_SUCCESS 1532,55682
    SET_PARAMETER_SUCCESS = GET_PARAMETER_SUCCESS1532,55682
#define IS_GET_PARAMETER_FAILURE(1534,55735
#define IS_GET_PARAMETER_SUCCESS(1535,55783
typedef union _dr_xmm_t 1570,57400
    uint64 u64[u641572,57437
    uint   u32[u321574,57508
    byte   u8[u81575,57572
    reg_t  reg[reg1576,57636
} dr_xmm_t;1577,57714
typedef union _dr_ymm_t 1580,57756
    uint64 u64[u641596,58507
    uint   u32[u321599,58585
    byte   u8[u81600,58649
    reg_t  reg[reg1601,58713
} dr_ymm_t;1602,58791
#  define NUM_XMM_SLOTS 1615,59266
#  define NUM_XMM_SLOTS 1617,59362
# define PRE_XMM_PADDING 1619,59461
# define NUM_XMM_SLOTS 1621,59555
# define PRE_XMM_PADDING 1622,59643
    DR_MC_INTEGER 1631,59977
    DR_MC_INTEGER    = 0x01,x011631,59977
    DR_MC_CONTROL 1638,60210
    DR_MC_CONTROL    = 0x02,x021638,60210
    DR_MC_MULTIMEDIA 1645,60528
    DR_MC_MULTIMEDIA = 0x04,x041645,60528
    DR_MC_ALL 1647,60587
    DR_MC_ALL        = (DR_MC_INTEGER 1647,60587
    DR_MC_ALL        = (DR_MC_INTEGER | DR_MC_CONTROL 1647,60587
    DR_MC_ALL        = (DR_MC_INTEGER | DR_MC_CONTROL | DR_MC_MULTIMEDIA)1647,60587
} dr_mcontext_flags_t;1648,60662
typedef struct _dr_mcontext_t 1653,60724
    size_t size;1658,60903
    dr_mcontext_flags_t flags;1667,61365
} dr_mcontext_t;1669,61415
typedef struct _priv_mcontext_t 1673,61498
} priv_mcontext_t;1675,61551
#define NUM_XMM_SAVED 1698,62696

lib/dr_api.h,120
#define _DR_API_H_ 34,1709
DR_EXPORT LINK_ONCE int _USES_DR_VERSION_ 97,3442
LINK_ONCE int _USES_DR_VERSION_ 99,3519

lib/statsx.h,80
# define RSTATS_DEF 69,2780
# define STATS_DEF(71,2816
    STATS_DEF(74,2869

lib/hotpatch_interface.h,2216
#define _HOTPATCH_INTERFACE_H_ 36,1768
#define HOTP_INTERFACE_VERSION 48,2171
    HOTP_EXEC_EXPLOIT_DETECTED 61,2726
    HOTP_EXEC_EXPLOIT_DETECTED          = 0x00000001,x0000000161,2726
    HOTP_EXEC_EXPLOIT_NOT_DETECTED 62,2780
    HOTP_EXEC_EXPLOIT_NOT_DETECTED      = 0x00000002,x0000000262,2780
    HOTP_EXEC_DETECTOR_ERROR 63,2834
    HOTP_EXEC_DETECTOR_ERROR            = 0x00000004,x0000000463,2834
    HOTP_EXEC_EXPLOIT_PROTECTED 66,2952
    HOTP_EXEC_EXPLOIT_PROTECTED         = 0x00000008,x0000000866,2952
    HOTP_EXEC_EXPLOIT_NOT_PROTECTED 67,3006
    HOTP_EXEC_EXPLOIT_NOT_PROTECTED     = 0x00000010,x0000001067,3006
    HOTP_EXEC_PROTECTOR_ERROR 68,3060
    HOTP_EXEC_PROTECTOR_ERROR           = 0x00000020,x0000002068,3060
    HOTP_EXEC_EXPLOIT_KILL_THREAD 71,3193
    HOTP_EXEC_EXPLOIT_KILL_THREAD       = 0x00000040,x0000004071,3193
    HOTP_EXEC_EXPLOIT_KILL_PROCESS 72,3247
    HOTP_EXEC_EXPLOIT_KILL_PROCESS      = 0x00000080,x0000008072,3247
    HOTP_EXEC_EXPLOIT_RAISE_EXCEPTION 73,3301
    HOTP_EXEC_EXPLOIT_RAISE_EXCEPTION   = 0x00000100,x0000010073,3301
    HOTP_EXEC_CHANGE_CONTROL_FLOW 74,3355
    HOTP_EXEC_CHANGE_CONTROL_FLOW       = 0x00000200,x0000020074,3355
    HOTP_EXEC_LOG_EVENT 79,3567
    HOTP_EXEC_LOG_EVENT                 = 0x00000400,x0000040079,3567
    HOTP_EXEC_ABORTED 84,3787
    HOTP_EXEC_ABORTED                   = 0x00000800x0000080084,3787
} hotp_exec_status_t;85,3840
typedef priv_mcontext_t hotp_context_t;87,3863
typedef hotp_exec_status_t (*hotp_func_t)hotp_func_t92,4067
#define APP_XDI(94,4140
#define APP_XSI(95,4189
#define APP_XBP(96,4238
#define APP_XSP(97,4287
#define APP_XBX(98,4336
#define APP_XDX(99,4385
#define APP_XCX(100,4434
#define APP_XAX(101,4483
#define APP_R8(102,4532
#define APP_R9(103,4580
#define APP_R10(104,4628
#define APP_R11(105,4677
#define APP_R12(106,4726
#define APP_R13(107,4775
#define APP_R14(108,4824
#define APP_R15(109,4873
#define APP_XFLAGS(110,4922
#define APP_EDI 113,5011
#define APP_ESI 114,5035
#define APP_EBP 115,5059
#define APP_ESP 116,5083
#define APP_EBX 117,5107
#define APP_EDX 118,5131
#define APP_ECX 119,5155
#define APP_EAX 120,5179

monitor.c,1804
# define MAX_TRACE_BUFFER_SIZE 69,2824
# define MAX_TRACE_BUFFER_SIZE 71,2880
# define INITIAL_TRACE_BUFFER_SIZE 77,3056
# define INITIAL_TRACE_BUFFER_SIZE 79,3119
#define INITIAL_NUM_BLKS 82,3182
#define INIT_COUNTER_TABLE_SIZE 84,3210
#define COUNTER_TABLE_LOAD 85,3244
#define COUNTER_ALLOC(90,3420
#define COUNTER_FREE(94,3621
#define TH_COUNTER_CREATED_TRACE_VALUE(107,4178
delete_private_copy(110,4272
create_private_copy(149,6062
extend_unmangled_ilist(228,9961
mangle_trace_at_end(285,12472
monitor_init(301,12901
monitor_thread_reset_init(312,13197
monitor_thread_reset_free(318,13293
trace_abort_and_delete(324,13389
monitor_exit(335,13704
monitor_thread_init(343,13878
monitor_thread_exit(383,15642
thcounter_lookup(426,17396
thcounter_add(439,17786
thcounter_remove(460,18531
thcounter_range_remove(480,19215
is_building_trace(506,20174
cur_trace_tag(513,20331
cur_trace_vmlist(520,20474
reset_trace_state(527,20628
monitor_delete_would_abort_trace(620,24956
monitor_remove_fragment(634,25393
unlink_ibt_trace_head(688,27587
mark_trace_head(738,29833
should_be_trace_head_internal_unsafe(883,37110
should_be_trace_head_internal(952,39897
should_be_trace_head(994,41931
check_for_trace_head(1004,42328
monitor_is_linkable(1028,43394
make_room_in_trace_buffer(1070,45027
trace_exit_stub_size_diff(1147,48106
enum { MAX_TRACE_FRACTION_OF_CACHE 1177,49483
get_and_check_add_size(1189,50033
trace_flags_from_component_flags(1227,52009
trace_flags_from_trace_head_flags(1233,52163
end_and_emit_trace(1253,52834
internal_extend_trace(1704,72475
internal_restore_last(1850,78397
monitor_cache_exit(1896,80553
check_fine_to_coarse_trace_head(1937,82469
monitor_cache_enter(1973,84102
trace_abort(2435,104802
get_trace_exit_component_tag(2493,106948

native_exec.c,639
vm_area_vector_t *native_exec_areas;native_exec_areas55,2374
static const app_pc retstub_start 57,2412
static const app_pc retstub_end 59,2497
native_exec_init(63,2584
native_exec_exit(75,2956
is_native_pc(85,3160
on_native_exec_list(91,3259
check_and_mark_native_exec(121,4321
native_exec_module_load(149,5309
native_exec_module_unload(157,5541
entering_native(169,5965
call_to_native(202,7356
return_to_native(242,8955
back_from_native_common(256,9312
pop_retaddr_for_index(289,10557
return_from_native(312,11514
native_module_callout(335,12301
interpret_back_from_native(353,12951
put_back_native_retaddrs(368,13596

link.c,6386
#define FRAG_INCOMING_ADDR(55,2328
void *stub_heap;stub_heap113,4566
void *stub32_heap;stub32_heap115,4594
# define SEPARATE_STUB_HEAP(119,4632
# define SEPARATE_STUB_HEAP(121,4719
#define SEPARATE_STUB_ALLOC_SIZE(128,4948
#define COARSE_STUB_ALLOC_SIZE(135,5232
static const fragment_t linkstub_empty_fragment 147,5880
static const fragment_t linkstub_empty_fragment_x86 149,5963
static const linkstub_t linkstub_starting 151,6060
static const linkstub_t linkstub_reset 152,6125
static const linkstub_t linkstub_syscall 153,6190
static const linkstub_t linkstub_selfmod 154,6255
static const linkstub_t linkstub_ibl_deleted 155,6320
static const linkstub_t linkstub_sigreturn 157,6397
static const linkstub_t linkstub_asynch 159,6482
static const linkstub_t linkstub_native_exec 161,6554
static const linkstub_t linkstub_native_exec_syscall 163,6705
static const fragment_t linkstub_shared_syscall_trace_fragment 168,6851
static const fragment_t linkstub_shared_syscall_bb_fragment 170,6977
static const linkstub_t linkstub_shared_syscall_trace 185,7735
static const linkstub_t linkstub_shared_syscall_bb 187,7839
static const linkstub_t linkstub_shared_syscall_unlinked 191,8050
static const fragment_t coarse_fragment 196,8207
static const linkstub_t linkstub_coarse_exit 202,8520
static const linkstub_t linkstub_coarse_trace_head_exit 203,8585
static const linkstub_t linkstub_hot_patch 207,8749
static const linkstub_t linkstub_client 212,8913
static const fragment_t linkstub_ibl_trace_fragment 219,9152
static const fragment_t linkstub_ibl_bb_fragment 221,9248
static const linkstub_t linkstub_ibl_trace_ret 244,10397
static const linkstub_t linkstub_ibl_trace_jmp 246,10498
static const linkstub_t linkstub_ibl_trace_call 248,10596
static const linkstub_t linkstub_ibl_bb_ret 250,10696
static const linkstub_t linkstub_ibl_bb_jmp 252,10794
static const linkstub_t linkstub_ibl_bb_call 254,10889
static const linkstub_t linkstub_ibl_trace_ret_client 257,11012
static const linkstub_t linkstub_ibl_bb_ret_client 259,11120
is_empty_fragment(265,11262
empty_fragment_mark_x86(273,11453
typedef struct thread_link_data_t 281,11684
    linkstub_t linkstub_deleted;282,11720
    fragment_t linkstub_deleted_fragment;283,11753
    int linkstub_deleted_ordinal;289,11998
} thread_link_data_t;290,12032
link_reset_init(294,12133
link_reset_free(313,12858
link_init(325,13089
link_exit(332,13159
link_thread_init(340,13277
link_thread_exit(355,13824
linkstubs_init(363,14091
linkstub_size(384,14958
linkstub_propagatable_flags(397,15503
linkstub_frag_offs_at_end(406,15723
use_cbr_fallthrough_short(433,17040
linkstubs_heap_size(461,18263
linkstub_fragment(481,19026
linkstub_owned_by_fragment(551,22137
set_last_exit(582,23282
last_exit_deleted(600,24070
set_coarse_ibl_exit(678,27425
get_last_linkstub_ordinal(717,28781
get_deleted_linkstub(726,29020
get_starting_linkstub(735,29253
get_reset_linkstub(741,29332
get_syscall_linkstub(747,29405
get_selfmod_linkstub(753,29482
get_ibl_deleted_linkstub(759,29559
get_sigreturn_linkstub(766,29656
get_asynch_linkstub(772,29756
get_native_exec_linkstub(779,29838
get_native_exec_syscall_linkstub(785,29923
get_shared_syscalls_unlinked_linkstub(792,30039
get_shared_syscalls_trace_linkstub(798,30149
get_shared_syscalls_bb_linkstub(804,30253
get_hot_patch_linkstub(812,30402
get_client_linkstub(820,30514
is_ibl_sourceless_linkstub(827,30582
get_ibl_sourceless_linkstub(844,31065
is_client_ibl_linkstub(867,31759
get_client_ibl_linkstub(874,31925
get_coarse_exit_linkstub(886,32268
get_coarse_trace_head_exit_linkstub(893,32394
should_separate_stub(899,32487
local_exit_stub_size(905,32649
is_cbr_of_cbr_fallthrough(940,34223
separate_stub_create(949,34446
separate_stub_free(1004,37018
linkstub_shares_next_stub(1055,39260
linkstub_free_exitstubs(1072,39803
linkstubs_shift(1092,40531
is_linkable(1114,41453
link_branch(1169,43657
unlink_branch(1217,45671
incoming_direct_linkstubs_match(1262,47487
incoming_find_link(1278,48234
incoming_link_exists(1318,49878
incoming_remove_link_nosearch(1331,50349
incoming_remove_link_search(1394,53449
incoming_remove_link(1427,54894
add_to_incoming_list(1458,56171
add_private_check_shared(1491,57687
add_future_incoming(1531,59254
add_incoming(1569,60930
incoming_remove_fragment(1589,61715
debug_after_link_change(1732,68483
link_fragment_incoming(1744,68781
link_fragment_outgoing(1797,71128
unlink_fragment_incoming(1877,74466
unlink_fragment_outgoing(1916,76018
link_new_fragment(1950,77231
shift_links_to_new_fragment(2032,80896
static vm_area_vector_t *coarse_stub_areas;coarse_stub_areas2389,98705
coarse_stubs_init(2392,98762
coarse_stubs_free(2400,98969
num_coarse_stubs_for_prefix(2410,99314
coarse_stub_alignment(2419,99644
coarse_stubs_create(2428,99872
    special_heap_iterator_t shi;2478,102272
    cache_pc start,2479,102305
    cache_pc start, end,2479,102305
    cache_pc start, end, pc;2479,102305
    coarse_info_t *info;info2480,102334
} coarse_stubs_iterator_t;2481,102359
coarse_stubs_iterator_start(2484,102399
coarse_stubs_iterator_hasnext(2503,103103
coarse_stubs_iterator_next(2509,103268
coarse_stubs_iterator_stop(2531,103950
coarse_stubs_delete(2537,104060
entrance_stub_create(2579,105568
set_fake_direct_linkstub(2610,106941
print_coarse_incoming(2623,107414
prepend_new_coarse_incoming(2643,108119
fragment_coarse_link_wrapper(2689,109942
fragment_link_lookup_same_sharing(2703,110402
coarse_link_to_fine(2716,110983
coarse_link_direct(2768,113651
link_new_coarse_grain_fragment(2907,120290
coarse_remove_incoming(3143,131896
coarse_remove_outgoing(3184,133640
coarse_mark_trace_head(3247,136601
coarse_unit_unlink(3276,137762
coarse_unit_unlink_outgoing(3357,141190
coarse_unit_outgoing_linked(3386,142226
coarse_stub_lookup_by_target(3414,143043
coarse_lazy_link(3433,143832
fcache_return_coarse_prefix(3560,150240
trace_head_return_coarse_prefix(3577,150745
get_coarse_ibl_prefix(3594,151281
in_coarse_stubs(3613,151879
in_coarse_stub_prefixes(3619,151979
coarse_deref_ibl_prefix(3635,152492
get_stub_coarse_info(3649,152886
coarse_frozen_stub_size(3656,153087
coarse_update_outgoing(3718,155658
coarse_unit_shift_links(3797,159454
coarse_stubs_set_info(3849,161813
coarse_stubs_set_end_pc(3855,161919

instrlist.h,225
#define _INSTRLIST_H_ 40,1907
struct _instr_list_t 42,1932
    instr_t *first;first43,1955
    instr_t *last;last44,1975
    int flags;45,1994
    app_pc translation_target;46,2009
    app_pc fall_through_bb;56,2566

rct.h,157
#define RCT_H40,1789
enum {RCT_CACHE_EXEMPT_NONE RCT_CACHE_EXEMPT_NONE42,1804
      RCT_CACHE_EXEMPT_MODULES 43,1837
      RCT_CACHE_EXEMPT_ALL 44,1873

perscache.c,2357
#define MAX_PCACHE_OPTIONS_STRING 61,2293
#define OPTION_STRING_ALIGNMENT 64,2473
#define CLIENT_ALIGNMENT 66,2599
typedef struct _jmp_tgt_list_t 69,2667
    app_pc tag;70,2701
    cache_pc jmp_end_pc;71,2717
    struct _jmp_tgt_list_t *next;next72,2742
} jmp_tgt_list_t;73,2776
coarse_unit_mark_primary(110,4019
coarse_unit_unmark_primary(134,4881
coarse_unit_mark_in_use(149,5329
coarse_unit_create(156,5456
coarse_unit_free(221,8530
coarse_unit_init(245,9316
coarse_unit_reset_free_internal(260,9835
coarse_unit_reset_free(371,14327
static file_t perscache_user_directory 382,14757
perscache_init(385,14818
perscache_fast_exit(434,17055
perscache_slow_exit(449,17465
coarse_units_freeze_translate(460,17727
coarse_units_freeze_all(489,18871
coarse_replace_unit(611,24818
coarse_unit_freeze(668,27080
transfer_coarse_stub(882,36766
transfer_coarse_stub_fix_trace_head(936,39284
push_pending_freeze(959,40361
redirect_to_tgt_ibl_prefix(1021,43193
transfer_coarse_fragment(1041,44021
coarse_unit_shift_jmps_internal(1196,50728
coarse_unit_shift_jmps(1283,55112
coarse_merge_process_stub(1315,56648
coarse_merge_update_jmps(1421,62318
coarse_merge_without_dups(1548,68827
coarse_unit_merge(1840,84947
perscache_dirname(2139,98686
get_persist_dir(2178,100281
coarse_unit_check_persist_space(2205,101205
persist_get_options_level(2235,102318
persist_get_relevant_options(2255,103193
get_persist_filename(2275,104098
print_module_digest(2398,109246
persist_calculate_self_digest(2409,109622
persist_calculate_module_digest(2430,110491
persist_modinfo_cmp(2472,112583
persist_record_base_mismatch(2503,114386
get_unique_name(2525,115334
coarse_unit_merge_with_disk(2558,116782
coarse_unit_calculate_persist_info(2666,122175
coarse_unit_merge_persist_info(2788,127695
write_persist_file(2900,132548
pad_persist_file(2913,133020
coarse_unit_set_persist_data(2935,133815
coarse_unit_persist_rename(3125,141448
instrument_persist_section(3175,143726
dr_persist_start(3204,144874
dr_persist_size(3213,145072
dr_fragment_persistable(3222,145282
coarse_unit_persist(3251,146275
persist_check_option_compat(3603,161393
pcache_dir_check_permissions(3680,164691
persist_get_name_and_open(3719,166387
coarse_unit_load(3792,169448
exists_coarse_ibl_pending_table(4372,195071
mark_module_exempted(4396,196098

moduledb.c,1011
static char **exemption_lists exemption_lists46,2172
#define GET_EXEMPT_LIST(47,2210
moduledb_add_to_exempt_list(55,2505
moduledb_remove_from_exempt_list(79,3334
moduledb_update_exempt_list(89,3745
moduledb_process_relaxation_flags(105,4366
START_DATA_SECTION(146,6247
#define MAX_COMPANY_NAME 166,6998
moduledb_process_image(169,7033
END_DATA_SECTION(240,10488
moduledb_init(246,10631
moduledb_exit(262,11103
moduledb_exempt_list_empty(283,11740
moduledb_check_exempt_list(291,11936
print_moduledb_exempt_lists(308,12498
    PROCESS_CONTROL_NO_HASHLIST,340,13711
    PROCESS_CONTROL_HASHLIST_EMPTY,341,13744
    PROCESS_CONTROL_LONG_LIST,347,13987
    PROCESS_CONTROL_NOT_MATCHED,349,14019
    PROCESS_CONTROL_MATCHED350,14052
# define IS_PROCESS_CONTROL_MATCHED(358,14388
process_control_report_long_list(366,14724
process_control_match(386,15445
process_control_whitelist(463,18925
process_control_blacklist(564,22997
process_control(625,25787
void process_control_init(662,27185

fragment.c,13682
#define INIT_HTABLE_SIZE_SHARED_BB 59,2351
#define INIT_HTABLE_SIZE_SHARED_TRACE 60,2428
#define INIT_HTABLE_SIZE_BB 62,2528
#define INIT_HTABLE_SIZE_SHARED_FUTURE 64,2641
#  define INIT_HTABLE_SIZE_AFTER_CALL 67,2789
#define INIT_HTABLE_SIZE_FUTURE 70,2903
#define INIT_HTABLE_SIZE_COARSE 74,3038
#define INIT_HTABLE_SIZE_COARSE_TH 75,3072
#  define INIT_HTABLE_SIZE_RCT_IBT 80,3196
#define INIT_HTABLE_SIZE_TRACE 90,3484
static fragment_table_t *shared_bb;shared_bb106,4228
static fragment_table_t *shared_trace;shared_trace107,4264
static fragment_table_t *shared_future;shared_future110,4377
static per_thread_t *shared_pt;shared_pt116,4593
#define USE_SHARED_PT(118,4626
typedef struct _dead_fragment_table_t 125,4972
    fragment_entry_t *table_unaligned;table_unaligned126,5012
    uint table_flags;127,5051
    uint capacity;128,5073
    uint ref_count;129,5092
    struct _dead_fragment_table_t *next;next130,5112
} dead_fragment_table_t;131,5153
typedef struct _dead_table_lists_t 134,5251
    dead_fragment_table_t *dead_tables;dead_tables135,5288
    dead_fragment_table_t *dead_tables_tail;dead_tables_tail136,5328
} dead_table_lists_t;137,5373
static dead_table_lists_t *dead_lists;dead_lists139,5396
static rct_module_table_t rac_non_module_table;150,5881
rct_module_table_t rct_global_table;175,6856
#define NULL_TAG 178,6901
#define FAKE_TAG 180,7004
byte * hashlookup_null_target;189,7353
#define HASHLOOKUP_NULL_START_PC 190,7384
static const fragment_t null_fragment 191,7453
static const fragment_t sentinel_fragment 194,7666
static const fragment_t unlinked_fragment 204,8171
#define REAL_FRAGMENT(209,8422
#define GET_PT(214,8613
#define TABLE_PROTECTED(217,8743
#define GET_FTABLE_HELPER(221,8907
#define GET_FTABLE(229,9358
#define GET_IBT_TABLE(232,9512
#define SHOULD_OUTPUT_FRAGMENT(268,11209
#define FRAGMENT_COARSE_WRAPPER_FLAGS 273,11357
                     } coarse_emit_fragment,292,12167
typedef struct _thread_list_t 301,12522
    uint thread_num;302,12554
    uint count;303,12575
    struct _thread_list_t *next;next304,12591
} thread_list_t;305,12624
typedef struct _shared_entry_t 307,12642
    app_pc tag;308,12675
    uint num_threads;309,12691
    thread_list_t *threads;threads310,12713
    uint heap_size;311,12741
    uint cache_size;312,12761
    struct _shared_entry_t *next;next313,12782
} shared_entry_t;314,12816
# define SHARED_HASH_BITS 315,12834
static shared_entry_t ** shared_blocks;316,12863
static shared_entry_t ** shared_traces;319,13019
shared_block_lookup(325,13242
reset_shared_block_table(341,13600
add_shared_block(365,14373
print_shared_table_stats(430,16626
print_shared_stats(467,18027
static int bb_sizes[bb_sizes478,18417
static int trace_sizes[trace_sizes479,18446
static int num_bb 480,18477
static int num_traces 481,18500
record_fragment_size(484,18533
print_size_results(498,18810
#define FRAGTABLE_WHICH_HEAP(507,19117
# define UNPROT_STAT(512,19348
# define ALLOC_UNPROT_STATS(516,19488
# define DEALLOC_UNPROT_STATS(523,19970
# define CHECK_UNPROT_STATS(526,20203
check_stay_on_trace_stats_overflow(529,20286
update_lookuptable_tls(547,21115
static const char *ibl_bb_table_type_names[ibl_bb_table_type_names576,22280
static const char *ibl_trace_table_type_names[ibl_trace_table_type_names578,22390
dump_lookuptable_tls(584,22552
#define FRAGENTRY_FROM_FRAGMENT(613,23587
#define NAME_KEY 616,23727
#define ENTRY_TYPE 617,23748
static const fragment_entry_t fe_empty 620,23884
static const fragment_entry_t fe_sentinel 621,23965
#define ENTRY_TAG(622,24053
#define ENTRY_EMPTY 623,24115
#define ENTRY_SENTINEL 624,24156
#define IBL_ENTRY_IS_EMPTY(625,24200
#define IBL_ENTRY_IS_INVALID(628,24345
#define IBL_ENTRY_IS_SENTINEL(629,24410
#define ENTRY_IS_EMPTY(632,24564
#define ENTRY_IS_SENTINEL(633,24617
#define ENTRY_IS_INVALID(634,24673
#define IBL_ENTRIES_ARE_EQUAL(635,24728
#define ENTRIES_ARE_EQUAL(636,24811
#define HASHTABLE_WHICH_HEAP(637,24884
#define HTLOCK_RANK 638,24948
#define HASHTABLE_ENTRY_STATS 639,24995
hashtable_ibl_free_entry(647,25205
#define NAME_KEY 658,25565
#define ENTRY_TYPE 659,25591
#define ENTRY_TAG(662,25669
#define ENTRY_EMPTY 664,25780
#define ENTRY_SENTINEL 665,25845
#define ENTRY_IS_EMPTY(666,25914
#define ENTRY_IS_SENTINEL(667,25986
#define ENTRY_IS_INVALID(668,26062
#define ENTRIES_ARE_EQUAL(669,26138
#define HASHTABLE_WHICH_HEAP(670,26185
#define HTLOCK_RANK 671,26249
hashtable_fragment_resized_custom(677,26388
hashtable_fragment_init_internal_custom(686,26725
hashtable_fragment_study_custom(693,26860
hashtable_ibl_init_internal_custom(702,27151
hashtable_ibl_myinit(754,29252
hashtable_ibl_myfree(796,31187
hashtable_fragment_free_entry(808,31538
fragment_add_to_hashtable(822,31982
update_indirect_exit_stubs_from_table(861,33873
safely_nullify_tables(885,34673
add_to_dead_table_list(928,36714
hashtable_ibl_resized_custom(975,38714
hashtable_ibl_study_custom(1062,42987
hashtable_fragment_reset(1110,45441
#define APP_PC_EMPTY 1214,50145
#define APP_PC_SENTINEL 1216,50230
#define APP_PC_ENTRY_IS_EMPTY(1217,50288
#define APP_PC_ENTRY_IS_SENTINEL(1218,50348
#define APP_PC_ENTRY_IS_REAL(1219,50411
#define NAME_KEY 1222,50620
#define ENTRY_TYPE 1223,50644
#define ENTRY_TAG(1225,50715
#define ENTRY_EMPTY 1226,50767
#define ENTRY_SENTINEL 1227,50814
#define ENTRY_IS_EMPTY(1228,50864
#define ENTRY_IS_SENTINEL(1229,50923
#define ENTRY_IS_INVALID(1230,50985
#define ENTRIES_ARE_EQUAL(1231,51052
#define HASHTABLE_WHICH_HEAP(1232,51099
#define HTLOCK_RANK 1233,51153
#define HASHTABLE_SUPPORT_PERSISTENCE 1234,51207
hashtable_app_pc_init_internal_custom(1242,51425
hashtable_app_pc_resized_custom(1247,51540
hashtable_app_pc_study_custom(1256,51869
hashtable_app_pc_free_entry(1263,52071
fragment_initialized(1274,52390
fragment_reset_init(1281,52594
fragment_init(1396,58325
fragment_reset_free(1450,60362
fragment_exit(1576,65834
dec_table_ref_count(1718,71382
dec_all_table_ref_counts(1806,75475
fragment_thread_reset_init(1829,76405
fragment_thread_init(2006,85545
fragment_thread_reset_free(2060,87424
fragment_thread_exit(2185,92633
fragment_fork_init(2227,93880
fragment_heap_size(2253,94690
fragment_create_heap(2268,95256
fragment_init_heap(2286,96021
fragment_create(2341,97905
fragment_recreate_with_linkstubs(2497,104347
fragment_free(2551,106657
fragment_stubs_end_pc(2597,108203
fragment_body_end_pc(2607,108476
get_total_linkcount(2621,108873
fragment_get_fragment_delete_mutex(2638,109347
fragment_release_fragment_delete_mutex(2646,109571
    LOOKUP_TRACE 2658,109953
    LOOKUP_TRACE   = 0x001,x0012658,109953
    LOOKUP_BB 2659,109981
    LOOKUP_BB      = 0x002,x0022659,109981
    LOOKUP_PRIVATE 2660,110009
    LOOKUP_PRIVATE = 0x004,x0042660,110009
    LOOKUP_SHARED 2661,110037
    LOOKUP_SHARED  = 0x008,x0082661,110037
fragment_lookup_type(2666,110157
fragment_lookup(2758,114094
fragment_lookup_trace(2768,114437
fragment_lookup_bb(2777,114741
fragment_lookup_shared_bb(2786,115045
fragment_lookup_same_sharing(2796,115375
hashtable_pclookup(2805,115725
fragment_pclookup_by_htable(2826,116360
fragment_pclookup(2895,119014
fragment_pclookup_with_linkstubs(2923,120290
fragment_add(2940,120781
fragment_delete(3008,123661
fragment_record_translation_info(3132,128405
fragment_remove_shared_no_flush(3177,130320
fragment_unlink_for_deletion(3272,134198
update_private_ibt_table_ptrs(3356,137829
update_private_ptr_to_shared_ibt_table(3415,140235
update_all_private_ibt_table_ptrs(3506,144079
fragment_prepare_for_removal_from_table(3543,145578
fragment_prepare_for_removal(3620,149101
fragment_ibl_stat_account(3688,151853
fragment_remove_from_ibt_tables(3715,152898
fragment_remove_ibl_entries_in_region(3766,155318
fragment_remove_all_ibl_in_region(3809,157370
fragment_remove(3830,158266
fragment_replace(3870,159848
fragment_shift_fcache_pointers(3905,161403
fragment_copy_data_fields(3980,164365
dump_lookup_table(4008,165362
is_fragment_index_wraparound(4044,166727
fragment_add_ibl_target_helper(4060,167379
fragment_add_ibl_target(4146,171052
fragment_create_future(4382,182925
fragment_free_future(4403,183743
fragment_create_and_add_future(4413,184149
fragment_delete_future(4427,184722
fragment_delete_future_filter(4444,185356
fragment_delete_futures_in_region(4452,185558
fragment_lookup_future(4469,186370
fragment_lookup_private_future(4487,187042
#define STATS_RCT_ADD(4503,187639
rct_is_global_table(4511,187920
rct_get_table(4518,188118
rct_table_lookup_internal(4530,188428
rct_table_lookup(4553,189232
rct_table_add(4569,189700
rct_table_flush_entry(4659,194416
rct_table_invalidate_range(4692,195812
rct_table_free_internal(4739,197770
rct_table_free(4747,198034
rct_table_copy(4763,198567
rct_table_merge(4772,198762
rct_table_persist_size(4786,199212
rct_table_persist(4799,199562
rct_table_resurrect(4810,199885
rct_module_table_free(4818,200202
rct_module_table_persisted_invalidate(4837,200937
rct_module_table_copy(4893,203774
rct_module_table_set(4949,206193
rct_module_persisted_table_exists(4995,208365
rct_module_live_entries(5008,208745
coarse_persisted_fill_ibl_helper(5021,209121
coarse_persisted_fill_ibl(5080,211705
fragment_after_call_lookup(5135,214189
fragment_add_after_call(5141,214313
fragment_flush_after_call(5153,214653
invalidate_after_call_target_range(5164,214979
rct_ind_branch_target_lookup(5197,216035
rct_add_valid_ind_branch_target(5207,216316
rct_flush_ind_branch_target_entry(5229,217046
invalidate_ind_branch_target_range(5239,217382
fragment_self_write(5262,218095
fragment_overlaps(5314,220504
study_all_hashtables(5348,221622
get_flushtime_last_update(5436,225488
set_flushtime_last_update(5443,225650
set_at_syscall(5450,225821
get_at_syscall(5457,225966
check_flush_queue(5469,226341
is_self_flushing(5547,229761
is_self_allsynch_flushing(5556,229986
is_self_couldbelinking(5567,230346
is_couldbelinking(5578,230725
wait_for_flusher_nolinking(5593,231348
wait_for_flusher_linking(5615,232245
check_safe_for_flush_synch(5639,233199
process_client_flush_requests(5667,234379
enter_nolinking(5702,235961
enter_couldbelinking(5811,240390
enter_threadexit(5852,242101
increment_global_flushtime(5874,242844
flush_fragments_free_futures(5960,246702
flush_fragments_synchall_start(5991,248059
flush_fragments_synchall_end(6150,256353
flush_fragments_synch_unlink_priv(6188,257885
flush_fragments_unlink_shared(6520,273537
flush_invalidate_ibl_shared_target(6628,278553
flush_fragments_end_synch(6669,280115
flush_fragments_in_region_start(6788,285354
flush_fragments_in_region_finish(6829,286940
flush_fragments_and_remove_region(6840,287287
flush_fragments_from_region(6861,288385
invalidate_code_cache(6883,289357
flush_vmvector_regions(6901,290150
fragment_output(6935,291731
init_trace_file(6949,292259
exit_trace_file(6969,292909
#define TRACEBUF_SIZE 6997,294096
#define TRACEBUF_MAKE_ROOM(6999,294124
output_trace_binary(7007,294431
output_trace(7125,298976
profile_fragment_enter(7378,308935
profile_fragment_dispatch(7424,310405
#define NAME_KEY 7466,312265
#define ENTRY_TYPE 7467,312289
static app_to_cache_t a2c_empty 7468,312323
static app_to_cache_t a2c_sentinel 7469,312373
#define ENTRY_TAG(7475,312692
#define ENTRY_EMPTY 7476,312748
#define ENTRY_SENTINEL 7477,312794
#define ENTRY_IS_EMPTY(7478,312843
#define ENTRY_IS_SENTINEL(7479,312904
#define ENTRY_IS_INVALID(7480,312968
#define ENTRIES_ARE_EQUAL(7481,313035
#define HASHTABLE_WHICH_HEAP(7482,313090
#define COARSE_HTLOCK_RANK 7484,313220
#define HTLOCK_RANK 7485,313307
#define HASHTABLE_SUPPORT_PERSISTENCE 7486,313360
#define A2C_ENTRY_IS_EMPTY(7493,313632
#define A2C_ENTRY_IS_SENTINEL(7494,313684
#define A2C_ENTRY_IS_REAL(7495,313751
hashtable_coarse_init_internal_custom(7500,313939
hashtable_coarse_resized_custom(7505,314054
hashtable_coarse_study_custom(7514,314399
hashtable_coarse_free_entry(7521,314601
coarse_lookup_internal(7553,316206
fragment_coarse_htable_create(7572,316874
fragment_coarse_htable_merge_helper(7634,319919
fragment_coarse_htable_merge(7675,321728
study_and_free_coarse_htable(7746,325136
fragment_coarse_free_entry_pclookup_table(7799,327213
fragment_coarse_htable_free(7810,327617
fragment_coarse_num_entries(7833,328497
fragment_coarse_add(7847,328813
fragment_coarse_th_lookup(7905,331335
fragment_coarse_th_unlink_and_add(7939,332710
fragment_coarse_th_add(7971,334103
IF_DEBUG_ELSE(7993,335074
fragment_coarse_lookup_in_unit(8068,338586
fragment_coarse_lookup(8112,340533
fragment_coarse_wrapper(8130,341168
fragment_coarse_lookup_wrapper(8153,342046
fragment_lookup_fine_and_coarse(8171,342606
fragment_lookup_fine_and_coarse_sharing(8201,343856
get_fragment_coarse_info(8223,344742
coarse_is_trace_head_in_own_unit(8240,345341
fragment_coarse_replace(8272,346448
#define PCLOOKUP_LAST_HTABLE_INIT_SIZE 8292,347135
#define PCLOOKUP_LAST_HTABLE_MAX_ENTRIES 8301,347628
typedef struct _pclookup_last_t 8303,347675
    app_pc tag;8304,347709
    cache_pc entry;8305,347725
} pclookup_last_t;8306,347745
pclookup_last_free(8309,347777
fragment_coarse_pclookup(8319,348131
fragment_coarse_create_entry_pclookup_table(8442,353504
fragment_coarse_entry_pclookup(8521,357656
fragment_coarse_entry_freeze(8565,359254
fragment_coarse_unit_freeze(8676,364820
fragment_coarse_htable_persist_size(8785,369720
fragment_coarse_htable_persist(8795,370072
fragment_coarse_htable_resurrect(8805,370412

synch.c,1503
typedef struct _thread_synch_data_t 53,2185
    spin_mutex_t *synch_lock;synch_lock58,2483
    int pending_synch_count;61,2661
    thread_synch_permission_t synch_perm;64,2821
    bool synch_with_success;68,3038
    priv_mcontext_t *set_mcontext;set_mcontext73,3281
    void *set_context;set_context74,3316
    size_t set_context_size;75,3339
    byte *set_context_alloc;set_context_alloc78,3429
} thread_synch_data_t;80,3465
free_setcontext(92,3866
synch_thread_free_setcontext(104,4240
synch_init(113,4497
synch_exit(118,4524
synch_thread_init(124,4592
synch_thread_exit(142,5317
thread_synch_state_no_xfer(165,6270
thread_synch_successful(178,6825
is_at_do_syscall(189,7159
is_native_thread_state_valid(244,9451
translate_mcontext(309,12705
waiting_at_safe_spot(406,17258
should_suspend_client_thread(431,18198
at_safe_spot(451,19091
should_wait_at_safe_spot(542,23676
set_synch_state(550,23937
check_wait_at_safe_spot(566,24511
adjust_wait_at_safe_spot(666,28938
set_synched_thread_context(685,29789
#define SYNCH_ALL_THREADS_MAXIMUM_LOOPS 761,33290
#define SYNCH_MAXIMUM_LOOPS 762,33375
#define SYNCH_WITH_WAIT_MS 767,33676
synch_thread_yield(771,33821
synch_with_thread(810,35796
synch_with_all_threads(1051,47374
        SYNCH_WITH_ALL_NEW 1070,48312
        SYNCH_WITH_ALL_NOTIFIED 1071,48349
        SYNCH_WITH_ALL_SYNCHED 1072,48386
resume_all_threads(1450,66866
end_synch_with_all_threads(1490,68121
translate_from_synchall_to_dispatch(1517,69192

iox.h,407
# define TCHAR 44,1987
# define _T(45,2010
# define TNAME(46,2030
# define IF_WIDE_ELSE(47,2057
# define TCHAR 49,2092
# define _T(50,2112
# define TNAME(51,2129
# define IF_WIDE_ELSE(52,2149
TNAME(66,2607
TNAME(90,3206
TNAME(116,3932
TNAME(162,5239
TNAME(197,6184
TNAME(267,8385
TNAME(704,24357
#undef TCHAR715,24575
#undef _T716,24588
#undef TNAME717,24598
#undef IF_WIDE_ELSE718,24611

nudge.h,26
#define _NUDGE_H_35,1765

win32/inject_shared.c,2448
# undef assert64,2403
#define assert 67,2466
#  define display_warning 72,2704
#   undef ASSERT74,2760
#   define ASSERT(77,2804
#   define ASSERT(79,2891
#  define display_warning 82,3029
# define ASSERT(85,3127
# define display_error(86,3165
# define display_warning(87,3193
#define MAX_RUNVALUE_LENGTH 90,3231
# define VERBOSE 92,3333
# define VERBOSE 94,3358
    REGISTRY_DEFAULT,98,3400
    REGISTRY_32,100,3493
    REGISTRY_64,101,3555
} reg_platform_t;102,3611
ignore_assert(107,3741
report_dynamorio_problem(113,3826
notcore_mutex_lock(131,4506
notcore_mutex_unlock(139,4643
display_verbose_message(145,4706
double_strrchr(199,6935
wchar_to_char(212,7177
set_registry_parameter(242,8404
get_registry_parameter(271,9280
get_remote_process_ldr_status(365,13442
get_process_imgname_cmdline(400,14487
get_rununder_value(487,17629
#define DIRSEP 502,18081
#define ALT_DIRSEP 503,18101
double_wcsrchr(510,18212
w_get_short_name(523,18478
get_commandline_qualifier(556,19731
    QUALIFIED_FULL_NAME,619,21679
    QUALIFIED_SHORT_NAME,620,21705
    UNQUALIFIED_FULL_NAME,621,21731
    UNQUALIFIED_SHORT_NAME,622,21758
} qualified_name_type_t;623,21786
#define NAME_TYPE_IS_UNQUALIFIED(625,21812
#define NAME_TYPE_IS_SHORT(627,21938
commandline_qualifier_needed(646,22657
get_process_qualified_name(683,24346
get_own_qualified_name(778,28732
get_own_unqualified_name(793,29244
get_own_short_qualified_name(809,29803
get_own_short_unqualified_name(824,30306
get_subkey_parameter(844,31027
get_process_parameter_internal(895,33114
get_process_parameter(930,34423
get_parameter(938,34703
get_parameter_ex(946,34994
get_parameter_32(954,35214
get_parameter_64(962,35501
get_unqualified_parameter(972,35876
set_process_parameter(994,37011
get_parameter_from_registry(1027,38525
get_process_parameter_ex(1037,38893
get_process_parameter(1068,40170
get_parameter_64(1076,40379
is_nt_or_custom_safe_mode(1087,40664
is_windows_version_nt(1134,42793
is_windows_version_vista_plus(1144,43050
is_safe_mode(1154,43310
        MINIMAL 1160,43490
        NETWORK 1161,43511
systemwide_inject_enabled(1197,44749
check_commandline_match(1222,45770
systemwide_should_inject_common(1276,47841
systemwide_should_preinject_64(1369,51331
systemwide_should_inject(1376,51502
systemwide_should_preinject(1382,51664
check_for_run_once(1399,52372
test(1440,53963
nametest(1450,54215
main(1477,55121

win32/native_pe.c,114
native_module_init(41,1834
native_module_exit(47,1887
native_module_hook(53,1940
native_module_unhook(59,2043

win32/inject.c,4484
#define WIN32_LEAN_AND_MEAN46,2163
# define GET_PROC_ADDR 60,2505
# define GET_PROC_ADDR 62,2551
#define DYNAMORIO_ENTRY 66,2651
# define display_error(73,2870
static ptr_uint_t addr_getprocaddr;79,3089
static ptr_uint_t addr_loadlibrarya;80,3125
static ptr_uint_t addr_debugbreak;82,3192
static bool inject_initialized 84,3234
inject_init(86,3279
#define SIZE_OF_LOAD_DYNAMO 104,3898
inject_into_thread(111,4096
    PUSHF 368,14987
    PUSHF                 = 0x9c,x9c368,14987
    POPF 369,15021
    POPF                  = 0x9d,x9d369,15021
    PUSHA 370,15055
    PUSHA                 = 0x60,x60370,15055
    POPA 371,15089
    POPA                  = 0x61,x61371,15089
    PUSH_EAX 372,15123
    PUSH_EAX              = 0x50,x50372,15123
    POP_EAX 373,15157
    POP_EAX               = 0x58,x58373,15157
    PUSH_ECX 374,15191
    PUSH_ECX              = 0x51,x51374,15191
    POP_ECX 375,15225
    POP_ECX               = 0x59,x59375,15225
    PUSH_IMM32 376,15259
    PUSH_IMM32            = 0x68,x68376,15259
    PUSH_IMM8 377,15293
    PUSH_IMM8             = 0x6a,x6a377,15293
    JMP_REL8 379,15328
    JMP_REL8              = 0xeb,xeb379,15328
    JMP_REL32 380,15362
    JMP_REL32             = 0xe9,xe9380,15362
    CALL_REL32 381,15396
    CALL_REL32            = 0xe8,xe8381,15396
    CALL_RM32 382,15430
    CALL_RM32             = 0xff,xff382,15430
    CALL_EAX_RM 383,15464
    CALL_EAX_RM           = 0xd0,xd0383,15464
    MOV_RM32_2_REG32 385,15499
    MOV_RM32_2_REG32      = 0x8b,x8b385,15499
    MOV_ESP_2_EAX_RM 386,15533
    MOV_ESP_2_EAX_RM      = 0xc4,xc4386,15533
    MOV_EAX_2_ECX_RM 387,15567
    MOV_EAX_2_ECX_RM      = 0xc8,xc8387,15567
    MOV_EAX_2_EDX_RM 388,15601
    MOV_EAX_2_EDX_RM      = 0xd0,xd0388,15601
    MOV_EAX_2_EAX_RM 389,15635
    MOV_EAX_2_EAX_RM      = 0xc0,xc0389,15635
    MOV_derefEAX_2_EAX_RM 390,15669
    MOV_derefEAX_2_EAX_RM = 0x00,x00390,15669
    MOV_deref_disp8_EAX_2_EAX_RM 391,15703
    MOV_deref_disp8_EAX_2_EAX_RM = 0x40,x40391,15703
    MOV_IMM8_2_RM8 392,15744
    MOV_IMM8_2_RM8        = 0xc6,xc6392,15744
    MOV_IMM32_2_RM32 393,15778
    MOV_IMM32_2_RM32      = 0xc7,xc7393,15778
    MOV_IMM_RM_ABS 394,15812
    MOV_IMM_RM_ABS        = 0x05,x05394,15812
    MOV_IMM_XAX 395,15846
    MOV_IMM_XAX           = 0xb8,xb8395,15846
    ADD_EAX_IMM32 397,15881
    ADD_EAX_IMM32         = 0x05,x05397,15881
    CMP_EAX_IMM32 399,15916
    CMP_EAX_IMM32         = 0x3d,x3d399,15916
    JZ_REL8 400,15950
    JZ_REL8               = 0x74,x74400,15950
    JNZ_REL8 401,15984
    JNZ_REL8              = 0x75,x75401,15984
    REX_W 404,16030
    REX_W                 = 0x48,x48404,16030
    REX_B 405,16064
    REX_B                 = 0x41,x41405,16064
    REX_R 406,16098
    REX_R                 = 0x44,x44406,16098
#define DEBUG_LOOP 410,16143
#define ASSERT_ROOM(412,16165
allocate_remote_code_buffer(431,16990
free_remote_code_buffer(490,19451
inject_gencode_at_ldr(497,19615
#define GET_PROC_ADDR_BAD_ADDR 523,20913
#define INSERT_INT(600,24369
#define INSERT_ADDR(605,24536
# define INSERT_PUSH_ALL_REG(610,24687
# define INSERT_PUSH_ALL_REG(636,25596
# define INSERT_POP_ALL_REG(641,25679
# define INSERT_POP_ALL_REG(667,26611
#define PUSH_IMMEDIATE(671,26681
#define PUSH_SHORT_IMMEDIATE(675,26774
# define PUSH_PTRSZ_IMMEDIATE(680,26897
# define PUSH_PTRSZ_IMMEDIATE(692,27387
#define MOV_ESP_TO_EAX(696,27461
# define MOV_EAX_TO_PARAM_0(703,27658
# define MOV_EAX_TO_PARAM_1(708,27843
# define MOV_EAX_TO_PARAM_2(713,28027
# define MOV_EAX_TO_PARAM_3(718,28211
# define MOV_TOS_TO_PARAM_0(723,28398
# define MOV_TOS_TO_PARAM_1(729,28615
# define MOV_TOS_TO_PARAM_2(735,28831
# define MOV_TOS_TO_PARAM_3(741,29047
#define ADD_TO_EAX(749,29311
#define ADD_IMM8_TO_ESP(754,29458
#define CMP_TO_EAX(760,29663
#define INSERT_REL32_ADDRESS(765,29810
# define CALL(773,30181
# define CALL(780,30431
#define PROT_IN_ECX 788,30762
#define CHANGE_PROTECTION(789,30829
#undef INSERT_INT990,40796
#undef PUSH_IMMEDIATE991,40814
#undef PUSH_SHORT_IMMEDIATE992,40836
#undef MOV_ESP_TO_EAX993,40864
#undef ADD_TO_EAX994,40886
#undef INSERT_REL32_ADDRESS995,40904
#undef CALL996,40932
#undef PROT_IN_ECX997,40944
#undef CHANGE_PROTECTION998,40963
#define APP 1007,41076
#define GDC 1008,41106
inject_gencode_earliest(1014,41302
inject_into_new_process(1202,49525

win32/gbop.h,635
#define GBOP_H43,1837
#define GBOP_DEFINE_KERNEL32_BASE_HOOKS(74,3064
#define GBOP_DEFINE_KERNEL32_MORE_HOOKS(113,5695
#define GBOP_DEFINE_WININET_BASE_HOOKS(166,9513
#define GBOP_DEFINE_MSVCRT_BASE_HOOKS(178,10255
#define GBOP_DEFINE_MSVCRT_MORE_HOOKS(182,10444
#define GBOP_DEFINE_WS2_32_BASE_HOOKS(224,13456
#define GBOP_DEFINE_WS2_32_MORE_HOOKS(233,13994
#define GBOP_DEFINE_USER32_BASE_HOOKS(245,14593
#define GBOP_DEFINE_SHELL32_BASE_HOOKS(258,15413
#define GBOP_DEFINE_NTDLL_MORE_HOOKS(280,16886
#define GBOP_ALL_HOOKS 303,18062
    GBOP_SET_NTDLL_BASE 321,18991
    GBOP_SET_NTDLL_BASE         = 0x1,x1321,18991

win32/ntdll_imports.c,3611
#define WIN32_LEAN_AND_MEAN39,1940
#define NTEXPORT 47,2055
KiUserApcDispatcher(54,2203
KiUserCallbackDispatcher(63,2419
KiUserExceptionDispatcher(70,2569
KiRaiseUserExceptionDispatcher(76,2679
NtAllocateVirtualMemory(85,2833
NtQueryVirtualMemory(96,3177
NtFreeVirtualMemory(107,3563
NtProtectVirtualMemory(116,3795
NtCreateFile(126,4089
NtWriteVirtualMemory(143,4620
NtGetContextThread(154,4911
NtSetContextThread(161,5051
NtSuspendThread(168,5190
NtResumeThread(175,5344
NtTerminateThread(182,5496
NtClose(189,5645
NtDuplicateObject(195,5727
NtCreateSection(207,6100
NtOpenSection(219,6466
NtMapViewOfSection(227,6661
NtUnmapViewOfSection(242,7254
NtCallbackReturn(250,7417
NtTestAlert(258,7593
NtContinue(265,7668
NtQueryInformationThread(272,7789
NtQueryInformationProcess(283,8135
NtQueryInformationFile(294,8491
NtSetInformationFile(305,8829
NtQuerySection(316,9156
NtOpenFile(327,9466
NtOpenThreadToken(339,9763
NtOpenProcessToken(348,9997
NtQueryInformationToken(356,10189
NtYieldExecution(366,10524
NtQuerySystemInformation(373,10604
NtOpenProcess(382,10867
NtSetInformationThread(391,11100
NtReadVirtualMemory(400,11377
NtCreateTimer(410,11663
NtSetTimer(419,11907
NtDelayExecution(431,12227
NtQueryObject(438,12367
NtQueryFullAttributesFile(448,12666
NtCreateKey(455,12850
NtOpenKey(467,13196
NtSetValueKey(475,13375
NtDeleteKey(486,13645
NtQueryValueKey(493,13735
NtFlushKey(504,14068
NtEnumerateKey(511,14157
NtEnumerateValueKey(522,14447
NtQuerySystemTime(533,14773
NtDeleteFile(540,14878
NtFlushBuffersFile(547,14989
NtReadFile(554,15141
NtWriteFile(568,15548
NtCreateIoCompletion(582,15997
NtRaiseHardError(591,16275
NtRaiseException(603,16700
NtCreateEvent(611,16891
NtWaitForSingleObject(621,17162
NtSetEvent(629,17358
NtClearEvent(636,17493
NtSignalAndWaitForSingleObject(643,17586
NtQueryPerformanceCounter(652,17873
NtFsControlFile(659,18068
NtCancelIoFile(674,18708
NtCreateProfile(681,18852
NtSetIntervalProfile(695,19248
NtQueryIntervalProfile(702,19392
NtStartProfile(709,19542
NtStopProfile(716,19639
NtCreateProcess(723,19735
NtTerminateProcess(736,20177
NtCreateDirectoryObject(743,20329
NtOpenDirectoryObject(751,20556
NtOpenSymbolicLinkObject(759,20777
NtQuerySymbolicLinkObject(767,21007
ZwAreMappedFilesTheSame(775,21237
NtQueryVolumeInformationFile(782,21379
NtQuerySecurityObject(792,21724
NtQueueApcThread(803,22082
NtCreateThread(813,22367
NtOpenThread(826,22770
NtFlushInstructionCache(835,22998
NtQueryAttributesFile(843,23203
NtCreateNamedPipeFile(850,23383
NtDeviceIoControlFile(869,24140
NtQueryDirectoryFile(884,24715
NtFlushVirtualMemory(900,25355
RtlInitializeCriticalSection(913,25701
RtlDeleteCriticalSection(920,25819
RtlEnterCriticalSection(927,25929
RtlLeaveCriticalSection(934,26045
RtlTryEnterCriticalSection(941,26161
RtlInitUnicodeString(948,26280
RtlInitAnsiString(955,26444
RtlFreeUnicodeString(962,26594
RtlFreeAnsiString(967,26664
RtlFreeOemString(972,26728
RtlQueryEnvironmentVariable_U(977,26794
RtlConvertSidToUnicodeString(985,27004
RtlCreateProcessParameters(993,27230
RtlDestroyProcessParameters(1008,27942
RtlCreateHeap(1015,28076
RtlDestroyHeap(1022,28264
RtlAllocateHeap(1028,28346
RtlReAllocateHeap(1034,28445
RtlFreeHeap(1040,28555
RtlSizeHeap(1046,28649
RtlValidateHeap(1052,28737
RtlLockHeap(1059,28834
RtlUnlockHeap(1065,28902
RtlGetProcessHeaps(1071,28976
RtlWalkHeap(1078,29105
LdrLoadDll(1089,29306
LdrUnloadDll(1098,29524
LdrGetProcedureAddress(1105,29618
LdrGetDllHandle(1114,29888
CsrClientCallServer(1127,30215

win32/os.c,12038
# undef ASSERT66,2516
# undef ASSERT_NOT_IMPLEMENTED67,2531
# undef ASSERT_NOT_TESTED68,2562
# undef ASSERT_CURIOSITY_ONCE69,2588
# define ASSERT(70,2618
# define ASSERT_NOT_IMPLEMENTED(71,2651
# define ASSERT_NOT_TESTED(72,2700
# define ASSERT_CURIOSITY_ONCE(73,2744
# undef LOG74,2792
# define LOG(75,2804
#define WOW64_SYSCALL_SETUP_SIZE 96,3839
#define WOW64_SYSCALL_STACK_SIZE 98,3963
const byte *wow64_syscall_stack wow64_syscall_stack102,4205
bool intercept_asynch 106,4339
bool intercept_callbacks 107,4370
process_id_t win32_pid 109,4477
void *peb_ptr;peb_ptr111,4579
static int os_version;112,4594
static uint os_service_pack_major;113,4617
static uint os_service_pack_minor;114,4652
static const char *os_name;os_name115,4687
app_pc vsyscall_page_start 116,4715
app_pc vsyscall_after_syscall 118,4804
app_pc vsyscall_syscall_end_pc 120,4890
uint kilo_hertz;125,5123
#define HEAP_INITIAL_SIZE 128,5170
app_pc dynamo_dll_start 131,5251
app_pc dynamo_dll_end 132,5283
static app_pc dynamo_dll_preferred_base 135,5380
enum {TLS_UNINITIALIZED TLS_UNINITIALIZED138,5462
enum {TLS_UNINITIALIZED = (ushort)138,5462
enum {TLS_UNINITIALIZED = (ushort) 0U}U138,5462
static ushort tls_local_state_offs 139,5502
static ushort tls_dcontext_offs 141,5604
app_pc parent_early_inject_address 144,5686
static int early_inject_location 148,5932
static app_pc early_inject_address 149,5992
static app_pc ldrpLoadDll_address_not_NT 150,6035
static app_pc ldrpLoadDll_address_NT 151,6084
static app_pc ldrpLoadImportModule_address 152,6129
dcontext_t *early_inject_load_helper_dcontext early_inject_load_helper_dcontext153,6180
get_nth_stack_frames_call_target(185,7060
check_for_ldrpLoadImportModule(216,8120
#define STACK_DEPTH_LdrpLoadImportModule 252,9812
DllMainThreadAttach(271,10414
DllMain(295,11271
#define STACK_DEPTH_LdrpLoadDll_NT 333,13337
#define STACK_DEPTH_LdrpLoadDll 334,13374
static profile_t *global_profile global_profile363,14553
static profile_t *dynamo_dll_profile dynamo_dll_profile364,14594
static profile_t *ntdll_profile ntdll_profile365,14639
file_t profile_file 366,14679
get_dll_bounds(370,14813
init_global_profiles(396,15595
dump_dll_profile(466,18572
exit_global_profiles(485,19216
os_supports_avx(522,20316
get_context_xstate_flag(533,20615
windows_version_init(554,21553
print_mem_quota(738,30527
os_init(770,31773
print_mem_stats(978,40063
os_fast_exit(1003,41120
os_slow_exit(1096,44542
os_terminate_wow64_stack(1118,45216
os_terminate_wow64_write_args(1155,46687
#define KILL_PROC_EXIT_STATUS 1171,47338
#define KILL_THREAD_EXIT_STATUS 1172,47371
os_terminate_static_arguments(1176,47476
    typedef struct _terminate_args_t 1181,47642
            const byte *debug_code;debug_code1183,47697
            byte pad_bytes[pad_bytes1184,47733
        } padding;1185,47787
            IN HANDLE ProcessOrThreadHandle;1187,47823
            IN NTSTATUS ExitStatus;1188,47868
        } args;1189,47904
    } terminate_args_t;1190,47920
os_terminate_common(1279,51939
os_terminate_with_code(1406,58239
os_terminate(1413,58434
os_tls_init(1419,58574
os_tls_exit(1425,58687
os_tls_calloc(1434,58963
os_tls_cfree(1441,59152
os_thread_init(1448,59265
os_thread_exit(1475,60201
os_thread_stack_exit(1487,60574
os_thread_under_dynamo(1561,64343
os_thread_not_under_dynamo(1570,64641
typedef struct _takeover_data_t 1583,65102
    app_pc continuation_pc;1584,65136
    bool in_progress;1585,65164
    thread_id_t tid;1586,65186
    HANDLE thread_handle;1589,65282
    CONTEXT_64 *cxt64;cxt641590,65308
    byte *cxt64_alloc;cxt64_alloc1591,65331
    ptr_uint_t memval_stack;1593,65423
    ptr_uint_t memval_r14;1594,65452
} takeover_data_t;1596,65486
typedef struct _thread_list_t 1599,65528
    HANDLE handle;1600,65560
    thread_id_t tid;1601,65579
    void *user_data;user_data1602,65656
} thread_list_t;1603,65705
    TAKEOVER_NEW 1607,65770
    TAKEOVER_TRIED,1608,65822
    TAKEOVER_SUCCESS,1609,65842
static generic_table_t *takeover_table;takeover_table1623,66482
#define INIT_HTABLE_SIZE_TAKEOVER 1624,66522
#define INVALID_PAYLOAD 1625,66584
takeover_table_entry_free(1628,66681
os_take_over_init(1645,67158
os_take_over_exit(1656,67617
os_take_over_mark_thread(1666,67910
os_take_over_unmark_thread(1675,68214
os_list_threads(1688,68734
thread_attach_remove_from_table(1751,71477
thread_attach_restore_full_state(1761,71786
thread_attach_translate(1789,72802
thread_attach_context_revert(1807,73460
thread_attach_exit(1823,74047
os_take_over_wow64_extra(1859,75777
os_take_over_thread(2010,82719
os_thread_take_over_suspended_native(2113,87720
os_take_over_all_unknown_threads(2128,88294
thread_attach_setup(2228,92792
client_thread_target(2306,95812
dr_create_client_thread(2328,96635
get_os_version(2363,97977
get_os_version_ex(2369,98027
is_in_dynamo_dll(2381,98385
mem_state_string(2388,98556
mem_type_string(2400,98810
prot_string(2412,99055
prot_is_readable(2429,99597
prot_is_writable(2448,100083
prot_is_executable(2456,100306
prot_is_copyonwrite(2465,100576
prot_is_guard(2477,100967
memprot_to_osprot(2484,101105
osprot_to_memprot(2509,101841
osprot_add_writecopy(2524,102188
osprot_add_write(2537,102574
osprot_replace_memprot(2550,102967
dump_mbi(2564,103415
dump_mbi_addr(2592,104608
is_pid_me(2618,105535
is_phandle_me(2624,105612
static char dynamorio_library_path[dynamorio_library_path2640,106123
get_dynamorio_library_path(2644,106269
should_inject_into_process(2668,107222
inject_into_process(2739,109977
is_first_thread_in_new_process(2828,114073
maybe_inject_into_process(2891,117355
is_child_in_thin_client(2936,119606
get_dynamorio_dll_start(2965,120526
get_dynamorio_dll_preferred_base(2972,120709
static app_pc highest_user_address 2982,121045
get_system_basic_info(2988,121265
is_user_address(3022,122580
merge_writecopy_pages(3040,123279
find_dynamo_library_vm_areas(3108,126327
print_dynamo_regions(3160,128459
# define MEM_STATS_ADD(3190,129555
add_mem_stats(3201,130026
mem_stats_snapshot(3254,132085
process_image(3394,137969
process_image_post_vmarea(3714,152981
process_memory_region(3761,154533
find_executable_vm_areas(3802,156397
void all_memory_areas_lock(3876,159702
void all_memory_areas_unlock(3877,159754
void update_all_memory_areas(3878,159806
bool remove_from_all_memory_areas(3881,159908
process_mmap(3889,160290
get_application_base(3939,162173
get_application_end(3951,162462
get_image_entry(3965,162822
os_tls_offset(3979,163284
get_local_state(3986,163467
get_local_state_extended(3993,163624
get_thread_private_dcontext(4001,163843
set_thread_private_dcontext(4015,164398
create_profile(4024,164575
free_profile(4063,166504
start_profile(4091,167669
stop_profile(4099,167812
dump_profile_range(4107,167953
dump_profile(4128,168888
sum_profile_range(4135,169054
sum_profile(4153,169738
reset_profile(4160,169896
os_raw_mem_free(4168,170051
os_raw_mem_alloc(4186,170625
os_heap_free(4215,171739
os_heap_reserve(4231,172256
find_free_memory_in_region(4249,172908
os_heap_reserve_in_region(4278,174062
#   define MAX_REGION_ITERS 4283,174253
os_heap_commit(4324,175852
os_heap_decommit(4344,176558
os_heap_systemwide_overcommit(4355,176875
os_heap_get_commit_limit(4377,177706
os_find_free_code_space_in_libs(4414,179370
thread_yield(4432,179952
thread_sleep(4439,180044
os_timeout(4450,180327
thread_suspend(4463,180685
thread_resume(4469,180779
thread_terminate(4475,180871
thread_get_mcontext(4481,180966
thread_set_mcontext(4493,181257
thread_get_context(4506,181666
thread_set_context(4512,181794
thread_set_self_context(4519,181957
thread_set_self_mcontext(4528,182163
get_num_processors(4539,182485
static wchar_t debugbox_title_buf[debugbox_title_buf4562,183494
static void init_debugbox_title_buf(4563,183546
debugbox(4579,184114
#define ID_MSGBOX_STATIC_TEXT 4604,184776
    char *message;message4607,184838
    char *title;title4608,184857
    HANDLE timer;4609,184874
    int seconds_left;4610,184892
    bool done;4611,184914
} timeout_context_t;4612,184929
#define print_timeout_message(4614,184951
message_box_timeout_thread(4626,185555
os_countdown_messagebox(4656,186563
os_countdown_messagebox(4698,187799
load_shared_library(4709,188136
lookup_library_routine(4727,188707
unload_shared_library(4733,188839
shared_library_error(4743,189058
shared_library_bounds(4756,189564
get_allocation_base(4774,190250
enum { MAX_QUERY_VM_BLOCKS 4795,190944
get_allocation_size_ex(4807,191401
get_allocation_size(4880,194270
query_memory_ex(4890,194609
get_memory_info(4962,197763
dr_virtual_query(4993,198790
get_stack_bounds(5012,199552
query_is_readable_without_exception(5096,203220
is_readable_without_exception_query_os(5121,204069
safe_read_syscall(5135,204727
safe_read_ex(5143,204962
safe_read(5160,205665
safe_write_ex(5170,206059
safe_write(5181,206453
get_current_protection(5194,206923
not_readable(5215,207700
mark_page_as_guard(5234,208287
internal_change_protection(5265,209478
os_set_protection(5465,218144
set_protection(5475,218419
change_protection(5490,219076
make_hookable(5500,219505
make_unhookable(5512,219993
make_writable(5526,220557
make_copy_on_writable(5537,220936
make_unwritable(5546,221263
convert_NT_to_Dos_path(5555,221520
convert_to_NT_file_path_wide(5645,225514
convert_to_NT_file_path_wide_free(5726,228529
convert_to_NT_file_path(5736,228839
os_internal_create_file(5842,233750
os_internal_create_file_test(5854,234188
os_file_exists(5867,234581
os_get_file_size(5883,235324
os_get_file_size_by_handle(5907,236082
os_set_file_size(5926,236698
os_get_disk_free_space(5946,237412
os_copy_file(6033,240944
os_create_dir(6050,241625
os_open_directory(6067,242401
os_open(6090,243276
os_close(6133,245295
os_open_protected(6140,245384
os_close_protected(6146,245492
os_write(6156,245772
os_read(6180,246422
os_flush(6200,246891
os_seek(6207,247042
os_tell(6245,248090
os_delete_mapped_file(6267,248774
os_delete_file_w(6340,251734
os_delete_file(6386,253458
os_rename_file(6404,254124
os_rename_file_in_directory(6466,256919
os_map_file(6508,258650
#   define MAX_MAP_LOOP_ITERS 6519,258974
os_unmap_file(6588,261918
translate_context(6603,262501
set_mcontext_for_syscall(6628,263440
os_raise_exception(6674,264963
    struct _raise_exception_arguments_t 6682,265261
        PEXCEPTION_RECORD ExceptionRecord;6683,265303
        PCONTEXT Context;6684,265346
        DWORD SearchFrames;6685,265372
os_dump_core_segment_info(6714,266558
os_dump_core_dump_thread(6739,267510
os_dump_core_live_dump(6788,269622
os_dump_core_external_dump(7020,279600
os_dump_core(7072,281960
END_DATA_SECTION(7128,283792
detach_helper(7284,291831
detach_internal(7669,309497
detach_internal_synch(7684,310073
is_thread_currently_native(7696,310399
mutex_get_contended_event(7705,310619
os_wait_event(7735,311687
os_wait_handle(7817,315435
mutex_wait_contended_lock(7833,315803
mutex_notify_released_lock(7852,316532
rwlock_wait_contended_writer(7860,316722
rwlock_notify_writer(7871,317141
rwlock_wait_contended_reader(7883,317518
rwlock_notify_readers(7894,317947
create_event(7905,318322
destroy_event(7911,318397
signal_event(7917,318455
reset_event(7923,318510
wait_for_event(7930,318634
get_timer_frequency(7936,318754
os_random_seed(7965,319698
early_inject_init(7983,320184
earliest_inject_init(8240,333326
earliest_inject_cleanup(8281,335035
#define SECURITY_MAX_SID_STRING_SIZE 8297,335590
get_process_SID_string(8304,335880
get_Everyone_SID(8324,336534
get_process_owner_SID(8341,336989
os_validate_owner_equals(8368,337890
os_filesystem_supports_ownership(8462,341443
open_trusted_cache_root_directory(8501,342835
os_user_directory_supports_ownership(8550,344902
os_validate_user_owned(8589,346726
os_current_user_directory(8625,348143
os_check_option_compatibility(8720,352540

win32/callback.c,6037
static LPTOP_LEVEL_EXCEPTION_FILTER app_top_handler;82,3121
ALIGN_VAR(92,3558
#define CURRENTLY_UNKNOWN 129,4852
#define INTERCEPT_POINT(132,4926
#undef INTERCEPT_POINT136,5052
typedef struct _intercept_map_elem_t 140,5158
    byte *interception_pc;interception_pc141,5197
    app_pc original_app_pc;142,5224
    size_t displace_length;143,5252
    size_t orig_length;144,5304
    struct _intercept_map_elem_t *next;next145,5328
} intercept_map_elem_t;146,5368
typedef struct _intercept_map_t 148,5393
    intercept_map_elem_t *head;head149,5427
    intercept_map_elem_t *tail;tail150,5459
} intercept_map_t;151,5491
static intercept_map_t *intercept_map;intercept_map153,5511
static byte *LdrInitializeThunk LdrInitializeThunk172,6273
static byte *RtlUserThreadStart RtlUserThreadStart179,6779
static byte *KiFastSystemCall KiFastSystemCall183,6911
get_setcontext_interceptor(187,6978
set_asynch_interception(194,7116
intercept_asynch_global(205,7448
intercept_asynch_common(212,7623
intercept_asynch_for_thread(244,8840
intercept_asynch_for_self(254,9163
#define APP 543,20103
insert_let_go_cleanup(547,20219
#define JMP_SIZE 702,27947
emit_landing_pad_code(704,28028
finalize_landing_pad_code(767,30183
copy_app_code(796,31698
emit_intercept_code(865,34883
# define STACK_ALIGNMENT 1174,49898
#undef APP1347,57624
map_intercept_pc_to_app_pc(1350,57648
unmap_intercept_pc(1377,58426
free_intercept_list(1413,59508
get_app_pc_from_intercept_pc(1440,60543
is_intercepted_app_pc(1462,61172
emit_resume_jmp(1499,62611
intercept_call(1568,65960
un_intercept_call(1773,74455
clean_syscall_wrapper(1829,76694
#define APP(1891,79182
#undef APP1963,82753
syscall_wrapper_ilist(2083,88664
#           define CHROME_HOOK_DISTANCE_JMP_TO_SKIP 2366,102714
intercept_syscall_wrapper(2453,106359
insert_trampoline(2593,112197
remove_trampoline(2627,113748
is_in_interception_buffer(2633,113843
is_part_of_interception(2640,113990
is_on_interception_initial_route(2647,114141
is_syscall_trampoline(2665,114681
make_writable_incr(2711,116186
make_inaccessible(2728,116634
wipe_out_ntdll(2745,117063
asynch_retakeover_if_native(2795,118650
asynch_take_over(2816,119510
possible_new_thread_wait_for_dr_init(2855,121117
intercept_new_thread(2878,122009
#define BASE_THREAD_START_THUNK_USHORT 3032,129414
#define LDR_INIT_CXT_XSP_OFFSET 3159,136428
intercept_ldr_init(3162,136538
#define APC_CONTEXT_XSP_OFFS 3291,142032
#define APC_TARGET_XSP_OFFS 3292,142082
intercept_apc(3298,142404
check_apc_context_offset(3504,153206
intercept_nt_continue(3570,156169
intercept_nt_setcontext(3673,161528
our_top_handler(3745,164665
transfer_to_fcache_return(3756,164978
    MOD_CODE_TAKEOVER 3785,166024
    MOD_CODE_TAKEOVER      = 0x01,x013785,166024
    MOD_CODE_EMULATE_WRITE 3786,166059
    MOD_CODE_EMULATE_WRITE = 0x02,x023786,166059
    MOD_CODE_APP_CXT 3787,166094
    MOD_CODE_APP_CXT       = 0x04,x043787,166094
found_modified_code(3799,166591
is_dstack_overflow(4025,177443
check_for_modified_code(4052,178633
get_exception_list(4177,184716
exception_frame_chain_depth(4197,185493
dump_context_info(4264,188478
#define DUMP(4266,188539
#define DUMPNM(4267,188606
#define NEWLINE 4268,188679
#undef DUMP4356,191111
#undef DUMPNM4357,191123
#undef NEWLINE4358,191137
exception_access_violation_type(4362,191175
dump_exception_info(4375,191521
dump_exception_frames(4394,192285
typedef struct scopetable_entry_t 4436,193809
    DWORD previousTryLevel;4437,193845
    PVOID lpfnFilter;4438,193873
    PVOID lpfnHandler;4439,193895
} scopetable_entry_t;4440,193918
typedef struct _vc_exception_registration_t4443,193996
    EXCEPTION_REGISTRATION   exception_base;4445,194042
    struct scopetable_entry_t *scopetable;scopetable4446,194087
    int                      trylevel;4447,194130
    int                      _ebp;4448,194169
} vc_exception_registration_t;4449,194204
void dump_vc_exception_frame(4456,194454
report_app_exception(4473,195062
report_internal_exception(4488,195782
internal_exception_info(4569,199615
internal_dynamo_exception(4578,199973
is_execution_exception(4610,201166
client_exception_event(4668,203320
check_internal_exception(4744,206833
intercept_exception(4927,216314
intercept_raise_exception(5573,249411
initialize_exception_record(5604,250545
os_forge_exception(5652,252528
intercept_callback_start(5808,260474
callback_setup(5992,269432
callback_start_return(6138,275386
get_prev_swapped_dcontext(6296,282559
get_pc_after_call(6319,283314
intercept_load_dll(6395,286515
intercept_unload_dll(6522,292843
#       define HACK_EXE_NAME 6550,294137
#       define L_PIN_DLL_NAME 6551,294194
retakeover_after_native(6635,298099
remove_image_entry_trampoline(6749,303478
take_over_primary_thread(6769,304400
intercept_image_entry(6840,307474
insert_image_entry_trampoline(7001,315384
callback_interception_init_start(7094,319908
callback_interception_init_finish(7260,327537
callback_interception_unintercept(7444,335879
callback_interception_exit(7482,337421
swap_dcontexts(7497,337925
at_initial_stack_bottom(7545,340225
at_xdata_rct_exception(7608,343091
at_driver_rct_exception(7626,343729
at_fiber_init_known_exception(7714,347817
            SUB_RSP_LENGTH 7736,348736
            FIBER_SEH_LENGTH 7737,348768
    MAX_SEH_TRYLEVEL 7805,351659
    INSTR_PUSH_IMMED32_LENGTH 7806,351685
    INSTR_PUSH_IMMED32_OPCODE 7807,351720
    INSTR_PUSH_IMMED32_OPCODE = 0x68,x687807,351720
at_SEH_rct_exception(7850,353246
bool seen_Borland_SEH 7904,355723
at_Borland_SEH_rct_exemption(7924,356947
at_rct_exempt_module(7976,359643
at_known_exception(8074,364630
callback_init(8133,366752
callback_exit(8138,366778
get_drmarker(8149,366997
hook_text(8159,367229
unhook_text(8199,368974
insert_jmp_at_tramp_entry(8206,369169
get_segment_base(8223,369680
get_app_segment_base(8237,370020
thread_attach_takeover_callee(8244,370170
emit_takeover_code(8255,370461

win32/drmarker.c,757
# define WIN32_LEAN_AND_MEAN51,2191
# define READ_FUNC 60,2438
# define DR_MARKER_VERSION_CURRENT 61,2480
typedef unsigned char byte;68,2962
# define PAGE_START(70,2998
# define PAGE_SIZE 71,3060
# define READ_FUNC 72,3088
#define OP_jmp_byte 75,3133
is_wow64_process(80,3228
    typedef DWORD (WINAPI 83,3313
read_and_verify_dr_marker_common(109,4189
read_and_verify_dr_marker_64(173,6476
read_and_verify_dr_marker(180,6626
#define DR_MARKER_MAGIC1 190,7110
#define DR_MARKER_MAGIC2 191,7146
#define DR_MARKER_MAGIC3 192,7182
#define DR_MARKER_MAGIC4 193,7218
dr_marker_verify(196,7260
dr_marker_magic_init(208,7695
init_dr_marker(227,8352
get_drmarker_hotp_policy_status_table(259,9494
set_drmarker_hotp_policy_status_table(272,9790

win32/diagnost.h,2530
#define _DIAGNOST_H_ 40,1807
#define DIAGNOSTICS_LOGDIR_KEY 43,1902
#define DIAGNOSTICS_FILE_XML_EXTENSION 44,1953
#define DIAGNOSTICS_XML_FILE_VERSION 45,1999
#define DIAGNOSTICS_NTDLL_DLL_LOCATION 46,2042
#define DIAGNOSTICS_HARDWARE_REG_KEY 47,2104
#define DIAGNOSTICS_CONTROL_REG_KEY 48,2197
#define DIAGNOSTICS_TEST_REG_KEY 49,2292
#define DIAGNOSTICS_OS_REG_KEY 50,2358
#define DIAGNOSTICS_OS_HOTFIX_REG_KEY 51,2461
#define DIAGNOSTICS_BIOS_REG_KEY 52,2581
#define DIAGNOSTICS_SYSTEMROOT_REG_KEY 53,2668
#define DIAGNOSTICS_DESCRIPTION_KEY 54,2721
#define DIAGNOSTICS_MANUFACTURER_KEY 55,2771
#define DIAGNOSTICS_FRIENDLYNAME_KEY 56,2815
#define DIAGNOSTICS_MAX_REG_KEYS 58,2869
#define DIAGNOSTICS_MAX_REG_VALUES 59,2959
#define DIAGNOSTICS_MAX_RECURSION_LEVEL 60,3049
#define DIAGNOSTICS_MAX_NAME_AND_DATA_SIZE 61,3143
#define DIAGNOSTICS_MAX_KEY_NAME_SIZE 62,3233
#define DIAGNOSTICS_MAX_LOG_BUFFER_SIZE 63,3319
#define DIAGNOSTICS_MAX_LOG_FILES 64,3364
#define DIAGNOSTICS_MINI_DUMP_SIZE 65,3438
#define DIAGNOSTICS_REG_NAME 67,3536
#define DIAGNOSTICS_REG_DATA 68,3610
#define DIAGNOSTICS_REG_HARDWARE 69,3684
#define DIAGNOSTICS_REG_ALLKEYS 70,3766
#define DIAGNOSTICS_REG_ALLSUBKEYS 71,3843
#define DIAGNOSTICS_INITIAL_PROCESS_TOTAL 72,3934
#define DIAGNOSTICS_BYTES_PER_LINE 74,3980
#define DECREMENT_FOR_DATA_OFFSET 80,4367
typedef struct _DIAGNOSTICS_INFORMATION 82,4461
    SYSTEM_BASIC_INFORMATION sbasic_info;83,4503
    SYSTEM_PROCESSOR_INFORMATION sproc_info;84,4545
    SYSTEM_PERFORMANCE_INFORMATION sperf_info;85,4590
    SYSTEM_TIME_OF_DAY_INFORMATION stime_info;86,4637
    SYSTEM_PROCESSOR_TIMES sptime_info;87,4684
    SYSTEM_GLOBAL_FLAG global_flag;88,4724
} DIAGNOSTICS_INFORMATION, *PDIAGNOSTICS_INFORMATION;PDIAGNOSTICS_INFORMATION89,4760
typedef struct _DIAGNOSTICS_KEY_VALUE_FULL_INFORMATION 100,5452
    ULONG   TitleIndex;101,5509
    ULONG   Type;102,5533
    ULONG   DataOffset;103,5551
    ULONG   DataLength;104,5575
    ULONG   NameLength;105,5599
    BYTE    NameAndData[NameAndData106,5660
} DIAGNOSTICS_KEY_VALUE_FULL_INFORMATION, *PDIAGNOSTICS_KEY_VALUE_FULL_INFORMATION;PDIAGNOSTICS_KEY_VALUE_FULL_INFORMATION107,5721
typedef struct _DIAGNOSTICS_KEY_NAME_INFORMATION 110,5861
    LARGE_INTEGER   LastWriteTime;111,5912
    ULONG   TitleIndex;112,5947
    ULONG   NameLength;113,5971
    WCHAR   Name[Name114,6032
} DIAGNOSTICS_KEY_NAME_INFORMATION, *PDIAGNOSTICS_KEY_NAME_INFORMATION;PDIAGNOSTICS_KEY_NAME_INFORMATION115,6088

win32/syscallx.h,2561
#define NONE 90,3911
#define ACTION_LOG 92,4028
SYSCALL(Continue,96,4518
SYSCALL(CallbackReturn,97,4691
SYSCALL(SetContextThread,98,4864
SYSCALL(GetContextThread,99,5037
SYSCALL(CreateProcess,100,5210
SYSCALL(CreateProcessEx,101,5383
SYSCALL(CreateUserProcess,102,5556
SYSCALL(TerminateProcess,103,5729
SYSCALL(CreateThread,104,5902
SYSCALL(CreateThreadEx,105,6075
SYSCALL(CreateWorkerFactory,106,6248
SYSCALL(TerminateThread,107,6421
SYSCALL(SuspendThread,108,6594
SYSCALL(ResumeThread,109,6767
SYSCALL(AllocateVirtualMemory,110,6940
SYSCALL(FreeVirtualMemory,reeVirtualMemory111,7113
SYSCALL(ProtectVirtualMemory,112,7286
SYSCALL(QueryVirtualMemory,113,7459
SYSCALL(WriteVirtualMemory,114,7632
SYSCALL(MapViewOfSection,115,7805
SYSCALL(UnmapViewOfSection,116,7978
SYSCALL(UnmapViewOfSectionEx,117,8151
SYSCALL(FlushInstructionCache,lushInstructionCache118,8324
SYSCALL(FreeUserPhysicalPages,reeUserPhysicalPages119,8497
SYSCALL(MapUserPhysicalPages,120,8670
SYSCALL(SetInformationVirtualMemory,121,8843
SYSCALL(Wow64AllocateVirtualMemory64,122,9016
SYSCALL(OpenSection,125,9279
SYSCALL(CreateSection,126,9452
SYSCALL(Close,127,9625
SYSCALL(DuplicateObject,128,9798
SYSCALL(AlertResumeThread,134,10123
SYSCALL(OpenFile,136,10303
SYSCALL(TestAlert,138,10523
SYSCALL(RaiseException,139,10696
SYSCALL(CreateFile,140,10869
SYSCALL(CreateKey,141,11042
SYSCALL(OpenKey,142,11215
SYSCALL(OpenKeyEx,143,11388
SYSCALL(OpenProcess,144,11561
SYSCALL(OpenProcessToken,145,11734
SYSCALL(OpenProcessTokenEx,146,11907
SYSCALL(OpenThread,147,12080
SYSCALL(OpenThreadToken,148,12253
SYSCALL(OpenThreadTokenEx,149,12426
SYSCALL(QueryAttributesFile,150,12599
SYSCALL(QueryFullAttributesFile,151,12772
SYSCALL(SetInformationFile,152,12945
SYSCALL(SetInformationThread,153,13118
SYSCALL(SetValueKey,154,13291
#undef NONE156,13465
#undef ACTION_LOG157,13477
SYSCALL(AlertThread,193,15569
SYSCALL(DelayExecution,194,15705
SYSCALL(ReplyWaitReceivePort,195,15841
SYSCALL(ReplyWaitReceivePortEx,196,15977
SYSCALL(ReplyWaitReplyPort,197,16113
SYSCALL(ReplyWaitSendChannel,198,16249
SYSCALL(RequestWaitReplyPort,199,16385
SYSCALL(SendWaitReplyChannel,200,16521
SYSCALL(SetHighWaitLowEventPair,201,16657
SYSCALL(SetLowWaitHighEventPair,202,16793
SYSCALL(SignalAndWaitForSingleObject,203,16929
SYSCALL(WaitForDebugEvent,204,17065
SYSCALL(WaitForKeyedEvent,205,17201
SYSCALL(WaitForMultipleObjects,206,17337
SYSCALL(WaitForSingleObject,207,17473
SYSCALL(WaitHighEventPair,208,17609
SYSCALL(WaitLowEventPair,209,17745

win32/ntdll_types.h,14687
#define _NTDLL_TYPES_H_ 17,785
typedef unsigned int uint;28,1086
typedef LONG NTSTATUS;29,1113
#define NT_SUCCESS(31,1191
#define NT_ERROR(32,1244
#define STATUS_SUCCESS 33,1302
#define STATUS_UNSUCCESSFUL 34,1349
typedef struct _UNICODE_STRING 36,1402
    USHORT Length;38,1496
    USHORT MaximumLength;39,1515
    PWSTR  Buffer;40,1541
} UNICODE_STRING;41,1560
typedef UNICODE_STRING *PUNICODE_STRING;PUNICODE_STRING42,1578
typedef struct _STRING 44,1620
  USHORT  Length;45,1645
  USHORT  MaximumLength;46,1663
  PCHAR  Buffer;47,1688
} ANSI_STRING;48,1705
typedef ANSI_STRING *PANSI_STRING;PANSI_STRING49,1720
typedef ANSI_STRING OEM_STRING;50,1755
typedef struct _OBJECT_ATTRIBUTES 52,1788
    ULONG Length;53,1824
    HANDLE RootDirectory;54,1842
    PUNICODE_STRING ObjectName;55,1868
    ULONG Attributes;56,1900
    PSECURITY_DESCRIPTOR SecurityDescriptor;57,1922
    PVOID SecurityQualityOfService;58,1967
} OBJECT_ATTRIBUTES;59,2050
typedef OBJECT_ATTRIBUTES *POBJECT_ATTRIBUTES;POBJECT_ATTRIBUTES60,2071
#define InitializeObjectAttributes(62,2119
#define OBJ_INHERIT 72,2579
#define OBJ_PERMANENT 73,2623
#define OBJ_EXCLUSIVE 74,2667
#define OBJ_CASE_INSENSITIVE 75,2711
#define OBJ_OPENIF 76,2755
#define OBJ_OPENLINK 77,2799
#define OBJ_KERNEL_HANDLE 78,2843
#define OBJ_FORCE_ACCESS_CHECK 79,2936
typedef ULONG ACCESS_MASK;81,3017
typedef enum _SECTION_INHERIT 84,3064
    ViewShare 85,3096
    ViewUnmap 86,3115
} SECTION_INHERIT;87,3133
typedef struct _CLIENT_ID 89,3153
    HANDLE UniqueProcess;91,3213
    HANDLE UniqueThread;92,3239
} CLIENT_ID;93,3264
typedef CLIENT_ID *PCLIENT_ID;PCLIENT_ID94,3277
typedef enum _MEMORY_INFORMATION_CLASS 96,3309
    MemoryBasicInformation,97,3350
    MemoryWorkingSetList,98,3378
    MemorySectionName,99,3404
    MemoryBasicVlmInformation100,3427
} MEMORY_INFORMATION_CLASS;101,3457
typedef enum _PROCESSINFOCLASS 104,3539
    ProcessBasicInformation,105,3572
    ProcessQuotaLimits,106,3601
    ProcessIoCounters,107,3625
    ProcessVmCounters,108,3648
    ProcessTimes,109,3671
    ProcessBasePriority,110,3689
    ProcessRaisePriority,111,3714
    ProcessDebugPort,112,3740
    ProcessExceptionPort,113,3762
    ProcessAccessToken,114,3788
    ProcessLdtInformation,115,3812
    ProcessLdtSize,116,3839
    ProcessDefaultHardErrorMode,117,3859
    ProcessIoPortHandlers,118,3892
    ProcessPooledUsageAndLimits,119,3962
    ProcessWorkingSetWatch,120,3995
    ProcessUserModeIOPL,121,4023
    ProcessEnableAlignmentFaultFixup,122,4048
    ProcessPriorityClass,123,4086
    ProcessWx86Information,124,4112
    ProcessHandleCount,125,4140
    ProcessAffinityMask,126,4164
    ProcessPriorityBoost,127,4189
    ProcessDeviceMap,128,4215
    ProcessSessionInformation,129,4237
    ProcessForegroundInformation,130,4268
    ProcessWow64Information,131,4302
    ProcessImageFileName,133,4357
    ProcessLUIDDeviceMapsEnabled,134,4383
    ProcessBreakOnTermination,135,4417
    ProcessDebugObjectHandle,136,4448
    ProcessDebugFlags,137,4478
    ProcessHandleTracing,138,4501
    ProcessIoPriority,139,4527
    ProcessExecuteFlags,140,4550
    ProcessResourceManagement,141,4575
    ProcessCookie,142,4606
    ProcessImageInformation,143,4625
    MaxProcessInfoClass 144,4654
} PROCESSINFOCLASS;145,4744
typedef enum _THREADINFOCLASS 148,4798
    ThreadBasicInformation,149,4830
    ThreadTimes,150,4858
    ThreadPriority,151,4875
    ThreadBasePriority,152,4895
    ThreadAffinityMask,153,4919
    ThreadImpersonationToken,154,4943
    ThreadDescriptorTableEntry,155,4973
    ThreadEnableAlignmentFaultFixup,156,5005
    ThreadEventPair_Reusable,157,5042
    ThreadQuerySetWin32StartAddress,158,5072
    ThreadZeroTlsCell,159,5109
    ThreadPerformanceCount,160,5132
    ThreadAmILastThread,161,5160
    ThreadIdealProcessor,162,5185
    ThreadPriorityBoost,163,5211
    ThreadSetTlsArrayAddress,164,5236
    ThreadIsIoPending,165,5266
    ThreadHideFromDebugger,166,5289
    MaxThreadInfoClass167,5317
} THREADINFOCLASS;168,5340
typedef struct _USER_STACK 170,5360
    PVOID FixedStackBase;171,5389
    PVOID FixedStackLimit;172,5415
    PVOID ExpandableStackBase;173,5442
    PVOID ExpandableStackLimit;174,5473
    PVOID ExpandableStackBottom;175,5505
} USER_STACK, *PUSER_STACK;PUSER_STACK176,5538
typedef enum _SECTION_INFORMATION_CLASS 178,5567
    SectionBasicInformation,179,5609
    SectionImageInformation180,5638
} SECTION_INFORMATION_CLASS;181,5666
typedef struct _SECTION_BASIC_INFORMATION 183,5696
    PVOID BaseAddress;184,5763
    ULONG Attributes;185,5786
    LARGE_INTEGER Size;186,5808
} SECTION_BASIC_INFORMATION, *PSECTION_BASIC_INFORMATION;PSECTION_BASIC_INFORMATION187,5832
typedef struct _SECTION_IMAGE_INFORMATION 189,5891
    PVOID EntryPoint;190,5958
    ULONG Unknown1;191,5980
    ULONG StackReserve;192,6000
    ULONG StackCommit;193,6024
    ULONG Subsystem;194,6047
    USHORT MinorSubsystemVersion;195,6068
    USHORT MajorSubsystemVersion;196,6102
    ULONG Unknown2;197,6136
    ULONG Characteristics;198,6156
    USHORT ImageNumber;199,6183
    BOOLEAN Executable;200,6207
    UCHAR Unknown3;201,6231
    ULONG Unknown4[Unknown4202,6251
} SECTION_IMAGE_INFORMATION, *PSECTION_IMAGE_INFORMATION;PSECTION_IMAGE_INFORMATION203,6274
typedef struct _IO_STATUS_BLOCK 205,6333
        NTSTATUS Status;207,6379
        PVOID Pointer;208,6404
    ULONG_PTR Information;210,6434
} IO_STATUS_BLOCK, *PIO_STATUS_BLOCK;PIO_STATUS_BLOCK211,6461
typedef enum _KPROFILE_SOURCE 213,6500
    ProfileTime214,6532
} KPROFILE_SOURCE;215,6548
typedef enum _OBJECT_INFORMATION_CLASS 217,6568
    ObjectBasicInformation,218,6609
    ObjectNameInformation,219,6637
    ObjectTypeInformation,220,6664
    ObjectAllTypesInformation,221,6691
    ObjectHandleInformation 222,6722
} OBJECT_INFORMATION_CLASS;223,6779
typedef struct _OBJECT_BASIC_INFORMATION 225,6808
    ULONG Attributes;226,6851
    ACCESS_MASK GrantedAccess;227,6873
    ULONG HandleCount;228,6904
    ULONG PointerCount;229,6927
    ULONG PagePoolUsage;230,6951
    ULONG NonPagedPoolUsage;231,6976
    ULONG Reserved[Reserved232,7005
    ULONG NameInformationLength;233,7028
    ULONG TypeInformationLength;234,7061
    ULONG SecurityDescriptorLength;235,7094
    LARGE_INTEGER CreateTime;236,7130
} OBJECT_BASIC_INFORMATION, *POBJECT_BASIC_INFORMATION;POBJECT_BASIC_INFORMATION237,7160
typedef enum _FILE_INFORMATION_CLASS 242,7318
    FileDirectoryInformation 243,7357
    FileFullDirectoryInformation,244,7399
    FileBothDirectoryInformation,245,7440
    FileBasicInformation,246,7481
    FileStandardInformation,247,7527
    FileInternalInformation,248,7573
    FileEaInformation,249,7614
    FileAccessInformation,250,7655
    FileNameInformation,251,7696
    FileRenameInformation,252,7737
    FileLinkInformation,253,7779
    FileNamesInformation,254,7821
    FileDispositionInformation,255,7863
    FilePositionInformation,256,7905
    FileFullEaInformation,257,7951
    FileModeInformation,258,7993
    FileAlignmentInformation,259,8035
    FileAllInformation,260,8077
    FileAllocationInformation,261,8119
    FileEndOfFileInformation,262,8161
    FileAlternateNameInformation,263,8207
    FileStreamInformation,264,8249
    FilePipeInformation,265,8291
    FilePipeLocalInformation,266,8333
    FilePipeRemoteInformation,267,8375
    FileMailslotQueryInformation,268,8417
    FileMailslotSetInformation,269,8459
    FileCompressionInformation,270,8501
    FileObjectIdInformation,271,8543
    FileCompletionInformation,272,8585
    FileMoveClusterInformation,273,8627
    FileQuotaInformation,274,8669
    FileReparsePointInformation,275,8711
    FileNetworkOpenInformation,276,8753
    FileAttributeTagInformation,277,8795
    FileTrackingInformation,278,8837
    FileIdBothDirectoryInformation,279,8879
    FileIdFullDirectoryInformation,280,8921
    FileValidDataLengthInformation,282,9020
    FileShortNameInformation,283,9062
    FileMaximumInformation284,9104
} FILE_INFORMATION_CLASS, *PFILE_INFORMATION_CLASS;PFILE_INFORMATION_CLASS285,9131
typedef struct _FILE_BASIC_INFORMATION 290,9284
    LARGE_INTEGER CreationTime;291,9325
    LARGE_INTEGER LastAccessTime;292,9357
    LARGE_INTEGER LastWriteTime;293,9391
    LARGE_INTEGER ChangeTime;294,9424
    ULONG FileAttributes;295,9454
} FILE_BASIC_INFORMATION, *PFILE_BASIC_INFORMATION;PFILE_BASIC_INFORMATION296,9480
typedef enum _FS_INFORMATION_CLASS 302,9750
    FileFsVolumeInformation=303,9787
    FileFsLabelInformation,304,9818
    FileFsSizeInformation,305,9878
    FileFsDeviceInformation,306,9905
    FileFsAttributeInformation,307,9934
    FileFsControlInformation,308,9966
    FileFsFullSizeInformation,309,9996
    FileFsObjectIdInformation,310,10027
    FileFsDriverPathInformation,311,10058
    FileFsMaximumInformation312,10108
} FS_INFORMATION_CLASS, *PFS_INFORMATION_CLASS;PFS_INFORMATION_CLASS313,10137
typedef struct _FILE_FS_SIZE_INFORMATION 315,10186
    LARGE_INTEGER TotalAllocationUnits;316,10229
    LARGE_INTEGER AvailableAllocationUnits;317,10269
    ULONG SectorsPerAllocationUnit;318,10313
    ULONG BytesPerSector;319,10349
} FILE_FS_SIZE_INFORMATION, *PFILE_FS_SIZE_INFORMATION;PFILE_FS_SIZE_INFORMATION320,10375
typedef struct _FILE_FS_DEVICE_INFORMATION 322,10432
    ULONG /*DEVICE_TYPE*/ DeviceType;323,10477
    ULONG Characteristics;324,10515
} FILE_FS_DEVICE_INFORMATION, *PFILE_FS_DEVICE_INFORMATION;PFILE_FS_DEVICE_INFORMATION325,10542
typedef struct _FILE_FS_VOLUME_INFORMATION 327,10603
    LARGE_INTEGER VolumeCreationTime;328,10648
    ULONG VolumeSerialNumber;329,10686
    ULONG VolumeLabelLength;330,10716
    BOOLEAN SupportsObjects;331,10745
    WCHAR VolumeLabel[VolumeLabel332,10774
} FILE_FS_VOLUME_INFORMATION, *PFILE_FS_VOLUME_INFORMATION;PFILE_FS_VOLUME_INFORMATION333,10800
#define FILE_REMOVABLE_MEDIA 336,10910
#define FILE_READ_ONLY_DEVICE 337,10969
#define FILE_FLOPPY_DISKETTE 338,11028
#define FILE_WRITE_ONCE_MEDIA 339,11087
#define FILE_REMOTE_DEVICE 340,11146
typedef struct _FILE_FS_FULL_SIZE_INFORMATION 342,11206
    LARGE_INTEGER TotalAllocationUnits;343,11254
    LARGE_INTEGER CallerAvailableAllocationUnits;344,11294
    LARGE_INTEGER ActualAvailableAllocationUnits;345,11344
    ULONG SectorsPerAllocationUnit;346,11394
    ULONG BytesPerSector;347,11430
} FILE_FS_FULL_SIZE_INFORMATION, *PFILE_FS_FULL_SIZE_INFORMATION;PFILE_FS_FULL_SIZE_INFORMATION348,11456
typedef struct _FILE_NETWORK_OPEN_INFORMATION 350,11523
    LARGE_INTEGER CreationTime;351,11571
    LARGE_INTEGER LastAccessTime;352,11603
    LARGE_INTEGER LastWriteTime;353,11637
    LARGE_INTEGER ChangeTime;354,11670
    LARGE_INTEGER AllocationSize;355,11700
    LARGE_INTEGER EndOfFile;356,11734
    ULONG   FileAttributes;357,11763
} FILE_NETWORK_OPEN_INFORMATION, *PFILE_NETWORK_OPEN_INFORMATION;PFILE_NETWORK_OPEN_INFORMATION358,11791
typedef enum _KEY_VALUE_INFORMATION_CLASS 360,11858
    KeyValueBasicInformation,361,11902
    KeyValueFullInformation,362,11932
    KeyValuePartialInformation,363,11961
    KeyValueFullInformationAlign64,364,11993
    KeyValuePartialInformationAlign64365,12029
} KEY_VALUE_INFORMATION_CLASS;366,12067
typedef struct _KEY_VALUE_FULL_INFORMATION 368,12099
    ULONG   TitleIndex;369,12144
    ULONG   Type;370,12168
    ULONG   DataOffset;371,12186
    ULONG   DataLength;372,12210
    ULONG   NameLength;373,12234
    WCHAR   Name[Name374,12258
} KEY_VALUE_FULL_INFORMATION, *PKEY_VALUE_FULL_INFORMATION;PKEY_VALUE_FULL_INFORMATION376,12374
typedef struct _KEY_VALUE_PARTIAL_INFORMATION 378,12435
    ULONG   TitleIndex;379,12483
    ULONG   Type;380,12507
    ULONG   DataLength;381,12525
    UCHAR   Data[Data382,12549
} KEY_VALUE_PARTIAL_INFORMATION, *PKEY_VALUE_PARTIAL_INFORMATION;PKEY_VALUE_PARTIAL_INFORMATION383,12598
typedef enum _KEY_INFORMATION_CLASS 385,12665
    KeyBasicInformation,386,12703
    KeyNodeInformation,387,12728
    KeyFullInformation,388,12752
    KeyNameInformation389,12776
} KEY_INFORMATION_CLASS;390,12799
typedef struct _KEY_NAME_INFORMATION 392,12825
    ULONG   NameLength;393,12864
    WCHAR   Name[Name394,12888
} KEY_NAME_INFORMATION, *PKEY_NAME_INFORMATION;PKEY_NAME_INFORMATION395,12937
typedef enum _SYSTEM_INFORMATION_CLASS 397,12986
    SystemBasicInformation 398,13027
    SystemProcessorInformation 399,13059
    SystemPerformanceInformation 400,13095
    SystemTimeOfDayInformation 401,13133
    SystemProcessesAndThreadsInformation 402,13169
    SystemProcessorTimes 403,13215
    SystemGlobalFlag 404,13245
    SystemModuleInformation 405,13271
    SystemLockInformation 406,13305
    SystemHandleInformation 407,13337
    SystemObjectInformation 408,13371
} SYSTEM_INFORMATION_CLASS;410,13437
typedef enum _EVENT_TYPE 413,13498
    NotificationEvent,414,13525
    SynchronizationEvent 415,13627
} EVENT_TYPE, *PEVENT_TYPE;PEVENT_TYPE416,13735
(NTAPI *PIO_APC_ROUTINE)PIO_APC_ROUTINE421,13853
typedef VOID (NTAPI *  PKNORMAL_ROUTINE 427,14062
typedef struct _RTL_USER_PROCESS_PARAMETERS 432,14288
    ULONG MaximumLength;433,14334
    ULONG Length;434,14359
    ULONG Flags;435,14377
    ULONG DebugFlags;436,14394
    PVOID ConsoleHandle;437,14416
    ULONG ConsoleFlags;438,14441
    HANDLE StdInputHandle;439,14465
    HANDLE StdOutputHandle;440,14492
    HANDLE StdErrorHandle;441,14520
    UNICODE_STRING CurrentDirectoryPath;442,14547
    HANDLE CurrentDirectoryHandle;443,14588
    UNICODE_STRING DllPath;444,14623
    UNICODE_STRING ImagePathName;445,14651
    UNICODE_STRING CommandLine;446,14685
    PVOID Environment;447,14717
    ULONG StartingPositionLeft;448,14740
    ULONG StartingPositionTop;449,14772
    ULONG Width;450,14803
    ULONG Height;451,14820
    ULONG CharWidth;452,14838
    ULONG CharHeight;453,14859
    ULONG ConsoleTextAttributes;454,14881
    ULONG WindowFlags;455,14914
    ULONG ShowWindowFlags;456,14937
    UNICODE_STRING WindowTitle;457,14964
    UNICODE_STRING DesktopName;458,14996
    UNICODE_STRING ShellInfo;459,15028
    UNICODE_STRING RuntimeData;460,15058
} RTL_USER_PROCESS_PARAMETERS, *PRTL_USER_PROCESS_PARAMETERS;PRTL_USER_PROCESS_PARAMETERS462,15146
#define FILE_PIPE_BYTE_STREAM_TYPE 465,15264
#define FILE_PIPE_MESSAGE_TYPE 466,15319
#define FILE_PIPE_BYTE_STREAM_MODE 469,15434
#define FILE_PIPE_MESSAGE_MODE 470,15485
#define FILE_PIPE_QUEUE_OPERATION 473,15592
#define FILE_PIPE_COMPLETE_OPERATION 474,15643

win32/drwinapi/kernel32_redir.c,308
static strhash_table_t *kernel32_table;kernel32_table46,2052
static const redirect_import_t redirect_kernel32[redirect_kernel3248,2093
#define REDIRECT_KERNEL32_NUM 171,10228
kernel32_redir_init(174,10321
kernel32_redir_exit(196,11129
kernel32_redir_onload(206,11320
kernel32_redir_lookup(227,11912

win32/drwinapi/ntdll_redir.h,33
#define _NTDLL_REDIR_H_ 37,1843

win32/drwinapi/drwinapi.h,30
#define _DRWINAPI_H_ 39,1891

win32/drwinapi/kernel32_misc.c,104
redirect_GetLastError(40,1859
redirect_SetLastError(49,1943
unit_test_drwinapi_kernel32_misc(67,2252

win32/drwinapi/advapi32_redir.h,102
#define _ADVAPI32_REDIR_H_ 39,1837
# define __out_data_source(61,2200
typedef LONG LSTATUS;66,2302

win32/drwinapi/rpcrt4_redir.h,34
#define _RPCRT4_REDIR_H_ 40,1918

win32/drwinapi/kernel32_mem.c,1278
static ptr_uint_t magic_val;46,2107
kernel32_redir_init_mem(55,2381
kernel32_redir_exit_mem(61,2482
redirect_DecodePointer(68,2563
redirect_EncodePointer 77,2684
redirect_GetProcessHeap(86,2807
__bcount(98,3133
redirect_HeapCompact(112,3343
redirect_HeapCreate(127,3727
redirect_HeapDestroy(140,4084
redirect_HeapFree(149,4194
__bcount(158,4358
redirect_HeapSetInformation 173,4612
redirect_HeapSize(196,5332
redirect_HeapValidate(207,5508
redirect_HeapWalk(218,5704
typedef struct _local_header_t 247,6818
    ushort lock_count;248,6851
    ushort flags;249,6874
    struct _local_header_t *alloc;alloc250,6892
} local_header_t;251,6927
local_header_from_handle(254,6977
redirect_LocalAlloc(261,7079
redirect_LocalFree(299,8214
redirect_LocalReAlloc(318,8752
redirect_LocalLock(393,11755
redirect_LocalHandle(413,12162
redirect_LocalUnlock(428,12463
redirect_LocalSize(452,12974
redirect_LocalFlags(475,13572
redirect_IsBadReadPtr(500,14254
redirect_ReadProcessMemory(512,14461
__bcount(532,15093
redirect_VirtualFree(568,16268
redirect_VirtualProtect(593,16817
redirect_VirtualQuery(626,18003
redirect_VirtualQueryEx(637,18275
test_heap(658,18808
test_local(683,19560
test_syscalls(755,22107
unit_test_drwinapi_kernel32_mem(782,23034

win32/drwinapi/drwinapi.c,293
drwinapi_init(47,2032
drwinapi_exit(56,2165
drwinapi_onload(65,2298
drwinapi_redirect_imports(76,2612
ntstatus_to_last_error(118,4574
redirect_ignore_arg0(168,7563
redirect_ignore_arg4(174,7624
redirect_ignore_arg8(180,7691
redirect_ignore_arg12(186,7770
unit_test_drwinapi(201,8186

win32/drwinapi/kernel32_lib.c,279
kernel32_redir_onload_lib(50,2367
redirect_GetModuleHandleA(69,3316
redirect_GetModuleHandleW(88,3848
redirect_GetProcAddress(111,4564
redirect_LoadLibraryA(135,5485
redirect_LoadLibraryW(156,6342
redirect_GetModuleFileNameA(174,6908
redirect_GetModuleFileNameW(200,7698

win32/drwinapi/ntdll_redir.c,1977
static strhash_table_t *ntdll_table;ntdll_table46,2031
static strhash_table_t *ntdll_win7_table;ntdll_win7_table47,2068
static const redirect_import_t redirect_ntdll[redirect_ntdll60,2784
#define REDIRECT_NTDLL_NUM 149,8826
static const redirect_import_t redirect_ntdll_win7[redirect_ntdll_win7154,9005
#define REDIRECT_NTDLL_WIN7_NUM 158,9174
ntdll_redir_init(162,9279
ntdll_redir_exit(195,10724
ntdll_redir_lookup(204,10922
redirect_RtlCreateHeap(235,11919
redirect_heap_call(251,12624
redirect_RtlDestroyHeap(273,13381
wrapped_dr_alloc(291,13990
wrapped_dr_free(309,14516
wrapped_dr_size(316,14663
redirect_RtlAllocateHeap(322,14774
redirect_RtlReAllocateHeap(339,15326
redirect_RtlFreeHeap(388,17256
redirect_RtlSizeHeap(406,17902
redirect_RtlValidateHeap(420,18301
redirect_RtlLockHeap(432,18642
redirect_RtlUnlockHeap(446,18937
redirect_RtlSetHeapInformation(460,19227
redirect_RtlFreeUnicodeString(475,19757
redirect_RtlFreeAnsiString(488,20150
redirect_RtlFreeOemString(501,20532
# define RTL_CRITICAL_SECTION_FLAG_NO_DEBUG_INFO 517,21015
# define RTL_CRITICAL_SECTION_FLAG_STATIC_INIT 520,21127
redirect_RtlInitializeCriticalSection(524,21211
redirect_RtlInitializeCriticalSectionAndSpinCount(530,21362
redirect_RtlInitializeCriticalSectionEx(537,21616
redirect_RtlDeleteCriticalSection(582,23473
redirect_NtCreateFile(610,24504
redirect_NtCreateKey(636,25536
redirect_NtMapViewOfSection(650,26055
redirect_NtOpenFile(674,27096
redirect_NtOpenKey(690,27654
redirect_NtOpenKeyEx(701,27945
redirect_NtOpenProcess(713,28330
redirect_NtOpenProcessToken(725,28738
redirect_NtOpenProcessTokenEx(735,29068
redirect_NtOpenThread(747,29521
redirect_NtOpenThreadToken(759,29919
redirect_NtOpenThreadTokenEx(771,30338
redirect_NtQueryAttributesFile(785,30882
redirect_NtQueryFullAttributesFile(793,31159
redirect_NtSetInformationFile(801,31459
redirect_NtSetInformationThread(815,32035
redirect_NtUnmapViewOfSection(827,32552

win32/drwinapi/kernel32_redir.h,3425
#define _KERNEL32_REDIR_H_ 40,1922
#define _WIN32_WINNT 46,2035
#define WIN32_LEAN_AND_MEAN 47,2099
#undef _WIN32_WINNT49,2150
#undef WIN32_LEAN_AND_MEAN50,2170
# define __drv_interlocked 60,2391
    HeapEnableTerminationOnCorruption 65,2482
typedef struct _CONSOLE_READCONSOLE_CONTROL 69,2544
    ULONG nLength;70,2590
    ULONG nInitialChars;71,2609
    ULONG dwCtrlWakeupMask;72,2634
    ULONG dwControlKeyState;73,2662
} CONSOLE_READCONSOLE_CONTROL, *PCONSOLE_READCONSOLE_CONTROL;PCONSOLE_READCONSOLE_CONTROL74,2691
typedef enum _FILE_INFO_BY_HANDLE_CLASS 77,2770
    FileBasicInfo,78,2812
    FileStandardInfo,79,2831
    FileNameInfo,80,2853
    FileRenameInfo,81,2871
    FileDispositionInfo,82,2891
    FileAllocationInfo,83,2916
    FileEndOfFileInfo,84,2940
    FileStreamInfo,85,2963
    FileCompressionInfo,86,2983
    FileAttributeTagInfo,87,3008
    FileIdBothDirectoryInfo,88,3034
    FileIdBothDirectoryRestartInfo,89,3063
    FileIoPriorityHintInfo,90,3099
    FileRemoteProtocolInfo,91,3127
    MaximumFileInfoByHandleClass92,3155
} FILE_INFO_BY_HANDLE_CLASS, *PFILE_INFO_BY_HANDLE_CLASS;PFILE_INFO_BY_HANDLE_CLASS93,3188
#define UNWIND_HISTORY_TABLE_SIZE 97,3310
typedef struct _UNWIND_HISTORY_TABLE_ENTRY 99,3348
    DWORD64 ImageBase;100,3393
    PRUNTIME_FUNCTION FunctionEntry;101,3416
} UNWIND_HISTORY_TABLE_ENTRY, *PUNWIND_HISTORY_TABLE_ENTRY;PUNWIND_HISTORY_TABLE_ENTRY102,3453
typedef struct _UNWIND_HISTORY_TABLE 104,3514
    DWORD Count;105,3553
    BYTE  LocalHint;106,3570
    BYTE  GlobalHint;107,3591
    BYTE  Search;108,3613
    BYTE  Once;109,3631
    DWORD64 LowAddress;110,3647
    DWORD64 HighAddress;111,3671
    UNWIND_HISTORY_TABLE_ENTRY Entry[Entry112,3696
} UNWIND_HISTORY_TABLE, *PUNWIND_HISTORY_TABLE;PUNWIND_HISTORY_TABLE113,3761
typedef struct _KNONVOLATILE_CONTEXT_POINTERS 115,3810
        PM128A FloatingContext[FloatingContext117,3870
            PM128A Xmm0;119,3923
            PM128A Xmm1;120,3948
            PM128A Xmm2;121,3973
            PM128A Xmm3;122,3998
            PM128A Xmm4;123,4023
            PM128A Xmm5;124,4048
            PM128A Xmm6;125,4073
            PM128A Xmm7;126,4098
            PM128A Xmm8;127,4123
            PM128A Xmm9;128,4148
            PM128A Xmm10;129,4173
            PM128A Xmm11;130,4199
            PM128A Xmm12;131,4225
            PM128A Xmm13;132,4251
            PM128A Xmm14;133,4277
            PM128A Xmm15;134,4303
        } DUMMYSTRUCTNAME;135,4329
    } DUMMYUNIONNAME;136,4356
        PDWORD64 IntegerContext[IntegerContext139,4391
            PDWORD64 Rax;141,4445
            PDWORD64 Rcx;142,4471
            PDWORD64 Rdx;143,4497
            PDWORD64 Rbx;144,4523
            PDWORD64 Rsp;145,4549
            PDWORD64 Rbp;146,4575
            PDWORD64 Rsi;147,4601
            PDWORD64 Rdi;148,4627
            PDWORD64 R8;149,4653
            PDWORD64 R9;150,4678
            PDWORD64 R10;151,4703
            PDWORD64 R11;152,4729
            PDWORD64 R12;153,4755
            PDWORD64 R13;154,4781
            PDWORD64 R14;155,4807
            PDWORD64 R15;156,4833
        } DUMMYSTRUCTNAME;157,4859
    } DUMMYUNIONNAME2;158,4886
} KNONVOLATILE_CONTEXT_POINTERS, *PKNONVOLATILE_CONTEXT_POINTERS;PKNONVOLATILE_CONTEXT_POINTERS160,4910
# define RTL_CRITICAL_SECTION_FLAG_NO_DEBUG_INFO 164,5032
__bcount(560,11494

win32/drwinapi/kernel32_file.c,2711
static HANDLE base_named_obj_dir;44,2059
static HANDLE base_named_pipe_dir;45,2093
get_base_named_obj_dir_name(49,2214
kernel32_redir_init_file(97,4239
kernel32_redir_exit_file(114,4852
kernel32_redir_onload_file(121,4983
init_object_attr_for_files(128,5187
largeint_to_filetime(145,5958
create_dir_common(158,6261
redirect_CreateDirectoryA(195,7409
redirect_CreateDirectoryW(212,7870
redirect_RemoveDirectoryA(237,8576
redirect_RemoveDirectoryW(249,8821
redirect_GetCurrentDirectoryA(261,9068
redirect_GetCurrentDirectoryW(287,9857
redirect_SetCurrentDirectoryA(321,11060
redirect_SetCurrentDirectoryW(335,11369
file_create_disp_winapi_to_nt(357,12003
file_options_to_nt(371,12415
file_access_to_nt(409,13769
create_file_common(425,14230
redirect_CreateFileA(520,17798
redirect_CreateFileW(543,18563
redirect_DeleteFileA(575,19601
redirect_DeleteFileW(597,20114
redirect_ReadFile(625,20843
redirect_WriteFile(684,22794
redirect_GetFileAttributesA(749,24958
redirect_GetFileAttributesW(770,25473
redirect_GetFileInformationByHandle(805,26439
redirect_GetFileSize(862,28572
redirect_GetFileType(881,29079
redirect_CreateFileMappingA(932,30385
redirect_CreateFileMappingW(958,31197
redirect_MapViewOfFile(1021,33527
redirect_MapViewOfFileEx(1036,33955
redirect_UnmapViewOfFile(1083,35619
redirect_FlushViewOfFile(1097,35914
redirect_CreatePipe(1126,36689
redirect_DeviceIoControl(1213,40170
redirect_GetDiskFreeSpaceA(1280,42514
open_dir_from_path(1309,43481
redirect_GetDiskFreeSpaceW(1362,45150
redirect_GetDriveTypeA(1400,46269
redirect_GetDriveTypeW(1421,46766
redirect_CloseHandle(1470,48043
redirect_DuplicateHandle(1479,48153
redirect_GetStdHandle(1500,48924
redirect_FileTimeToLocalFileTime(1519,49366
redirect_LocalFileTimeToFileTime(1546,50233
redirect_FileTimeToSystemTime(1569,50905
redirect_SystemTimeToFileTime(1581,51194
redirect_GetSystemTimeAsFileTime(1595,51512
redirect_GetFileTime(1606,51724
redirect_SetFileTime(1635,52507
#define FIND_FILE_INFO_SZ 1674,53829
redirect_FindClose(1679,53937
find_next_file_common(1691,54271
find_first_file_common(1745,56445
find_nt_to_win32A(1815,59345
find_nt_to_win32W(1851,61003
redirect_FindFirstFileA(1882,62354
redirect_FindFirstFileW(1907,63187
redirect_FindNextFileA(1938,64191
redirect_FindNextFileW(1952,64647
redirect_FlushFileBuffers(1967,65128
test_directories(1991,65582
test_files(2027,66793
test_file_mapping(2145,71306
test_pipe(2206,73660
test_DeviceIoControl(2238,74623
within_one(2283,76168
test_file_times(2290,76285
test_find_file(2360,79044
test_file_paths(2456,83343
test_drive(2511,85818
test_handles(2561,88309
unit_test_drwinapi_kernel32_file(2574,88601

win32/drwinapi/rpcrt4_redir.c,345
static strhash_table_t *rpcrt4_table;rpcrt4_table46,2004
static const redirect_import_t redirect_rpcrt4[redirect_rpcrt448,2043
#define REDIRECT_RPCRT4_NUM 51,2168
rpcrt4_redir_init(54,2255
rpcrt4_redir_exit(72,2947
rpcrt4_redir_onload(78,3038
rpcrt4_redir_lookup(84,3108
redirect_UuidCreate 96,3363
unit_test_drwinapi_rpcrt4(123,4254

win32/drwinapi/drwinapi_private.h,170
#define _DRWINAPI_PRIVATE_H_ 36,1796
typedef struct _redirect_import_t 45,2162
    const char *name;name46,2198
    app_pc func;47,2220
} redirect_import_t;48,2237

win32/drwinapi/kernel32_sync.c,512
redirect_InitializeCriticalSection(42,1914
redirect_InitializeCriticalSectionAndSpinCount(57,2362
redirect_InitializeCriticalSectionEx(73,2746
redirect_DeleteCriticalSection(90,3140
redirect_EnterCriticalSection(99,3302
redirect_LeaveCriticalSection(112,3654
redirect_InterlockedCompareExchange 125,4006
redirect_InterlockedDecrement(136,4247
redirect_InterlockedExchange(145,4395
redirect_InterlockedIncrement(155,4569
redirect_WaitForSingleObject(164,4718
unit_test_drwinapi_kernel32_sync(190,5504

win32/drwinapi/advapi32_redir.c,690
#define MAX_REG_KEY_NAME_LEN 45,1933
static strhash_table_t *advapi32_table;advapi32_table48,2067
static const redirect_import_t redirect_advapi32[redirect_advapi3250,2108
#define REDIRECT_ADVAPI32_NUM 57,2525
advapi32_redir_init(60,2618
advapi32_redir_exit(78,3330
advapi32_redir_onload(84,3425
advapi32_redir_lookup(90,3497
redirect_RegCloseKey(102,3754
redirect_RegOpenKeyExA(113,3901
open_key_common(136,4555
key_is_special(149,4961
special_to_handle(158,5237
key_close_special(201,7010
redirect_RegOpenKeyExW(209,7160
redirect_RegQueryValueExA(251,8527
redirect_RegQueryValueExW(298,10320
unit_test_drwinapi_advapi32(371,12754
#   define REG_KEY_DATA_SZ 377,12925

win32/drwinapi/kernel32_proc.c,570
typedef struct _fls_cb_t 45,2117
    PFLS_CALLBACK_FUNCTION cb;46,2144
    struct _fls_cb_t *next;next47,2175
} fls_cb_t;48,2203
static fls_cb_t *fls_cb_list;fls_cb_list50,2216
kernel32_redir_init_proc(55,2415
kernel32_redir_exit_proc(65,2688
kernel32_redir_onload_proc(78,3034
redirect_GetCurrentProcess(90,3321
redirect_GetCurrentProcessId(99,3413
redirect_ExitProcess(109,3530
redirect_GetCurrentThread(128,3950
redirect_GetCurrentThreadId(137,4040
kernel32_redir_fls_cb(149,4219
redirect_FlsAlloc(198,6159
unit_test_drwinapi_kernel32_proc(238,7601

win32/module.c,8613
typedef struct _version_info_t 55,2290
    version_number_t file_version;56,2323
    version_number_t product_version;57,2358
    wchar_t *company_name;company_name58,2396
    wchar_t *product_name;product_name59,2423
    wchar_t *original_filename;original_filename60,2450
} version_info_t;61,2482
typedef struct _pe_module_import_iterator_t 76,2986
    dr_module_import_t module_import;77,3032
    byte *mod_base;mod_base79,3111
    size_t mod_size;80,3131
    IMAGE_IMPORT_DESCRIPTOR *cur_module;cur_module84,3273
    IMAGE_IMPORT_DESCRIPTOR safe_module;85,3314
    byte *imports_end;imports_end86,3393
    bool hasnext;87,3473
} pe_module_import_iterator_t;88,3552
typedef struct _pe_symbol_import_iterator_t 90,3584
    dr_symbol_import_t symbol_import;91,3630
    dr_symbol_import_t next_symbol;92,3713
    byte *mod_base;mod_base94,3783
    dr_module_import_iterator_t *mod_iter;mod_iter95,3803
    IMAGE_IMPORT_DESCRIPTOR *cur_module;cur_module96,3884
    IMAGE_THUNK_DATA *cur_thunk;cur_thunk98,4023
    bool hasnext;99,4056
} pe_symbol_import_iterator_t;100,4135
static generic_table_t *section2file_table;section2file_table107,4341
#define INIT_HTABLE_SIZE_SECTION 108,4385
typedef struct _section_to_file_t 110,4447
    HANDLE section_handle;111,4483
    const char *file_path;file_path112,4510
} section_to_file_t;113,4556
section_to_file_free(116,4590
section_to_file_lookup(124,4875
section_to_file_add_common(138,5326
section_to_file_add_wide(163,6278
section_to_file_add(170,6501
section_to_file_remove(177,6715
typedef struct export_entry_t 201,7494
    app_pc  entry_point;202,7526
    char *export_name;export_name203,7596
} export_entry_t;204,7619
typedef struct module_info_t 214,7992
    app_pc start;215,8023
    app_pc end;216,8041
    char * module_name;217,8097
    size_t exports_size;218,8121
    uint   exports_num;219,8187
    export_entry_t *exports_table;exports_table221,8251
} module_info_t;239,9136
typedef struct module_info_vector_t 253,9607
    struct module_info_t *buf;buf254,9645
    int   capacity;255,9676
    int   length;256,9696
    mutex_t lock;259,9829
} module_info_vector_t;260,9847
print_module_list(267,10099
module_info_compare(289,10697
lookup_module_info(308,11273
#define INITIAL_MODULE_NUMBER 337,12143
module_info_create(346,12434
remove_module_info_vector(400,14304
remove_module_info(445,15704
module_cleanup(466,16346
module_info_exit(492,17180
export_entry_compare(499,17275
find_predecessor(512,17721
remove_export_duplicates(538,18272
print_symbolic_address(563,18801
add_module_info(658,23238
print_ldr_data(804,30120
static LDR_MODULE *DR_module;DR_module875,33553
hide_from_module_lists(898,34725
print_modules(1001,39336
print_modules_ldrlist_and_ourlist(1008,39611
print_modules_safe(1126,44704
check_for_unsupported_modules(1173,46646
#define DOS_HEADER(1225,48825
#define NT_HEADER(1226,48880
#define VERIFY_DOS_HEADER(1229,49029
#define VERIFY_NT_HEADER(1234,49246
on_subset_of_pages(1246,49825
is_readable_pe_base(1253,50039
get_image_section_unpadded_size(1284,51381
get_image_section_size(1310,52925
get_image_section_map_size(1322,53497
get_image_section_file_offs(1342,54674
print_module_section_info(1351,55058
is_in_executable_file_section(1408,57643
module_pc_section_lookup(1536,64051
is_range_in_code_section(1550,64728
is_in_code_section(1563,65409
is_in_dot_data_section(1575,65940
is_in_xdata_section(1588,66572
is_in_any_section(1612,67697
get_executable_segment(1623,68154
is_mapped_as_image(1636,68728
module_get_nth_segment(1657,69412
module_get_header_size(1670,69856
get_named_section_bounds(1680,70126
get_IAT_section_bounds(1696,70664
is_IAT(1711,71256
is_in_IAT(1734,72043
get_module_entry(1746,72327
get_module_base(1767,73267
get_module_preferred_base(1783,73784
in_same_module(1801,74391
get_dll_short_name(1819,75170
get_all_module_short_names_uncached(1864,77240
get_module_short_name_uncached(2019,83911
get_module_short_name(2042,84879
get_module_preferred_base_delta(2056,85444
get_ldr_module_by_pc(2074,85997
get_module_name(2142,88539
get_module_base_reloc(2155,88916
get_module_characteristics(2225,91315
get_module_cor20_header(2245,92026
module_has_cor20_header(2309,94304
get_module_magic(2319,94566
module_is_32bit(2330,94816
module_is_64bit(2336,94939
is_module_patch_region(2353,95646
#define IMAGE_REL_BASED_TYPE(2475,101911
#define IMAGE_REL_BASED_OFFSET_MASK 2476,101960
#define IMAGE_REL_BASED_OFFSET(2477,102004
process_one_relocation(2494,102701
add_SEH_address(2597,107003
add_SEH_to_rct_table(2616,107759
rct_add_rip_rel_addr(2808,117521
rct_add_exports(2868,120300
find_relocation_references(2986,125669
find_address_references_by_region(3149,132766
add_rct_module(3196,134894
rct_analyze_module_at_load(3428,146802
rct_analyze_module_at_violation(3460,148130
rct_process_module_mmap(3519,150727
rct_is_exported_function(3688,158740
os_modules_init(3717,159619
os_modules_exit(3735,160261
free_module_names(3741,160356
os_module_area_reset(3757,160910
get_module_info_pe(3812,163160
os_module_area_init(3878,165944
get_module_preferred_base_safe(3983,170977
os_get_module_info(4015,172162
os_get_module_info_all_names(4063,174042
os_module_get_rct_htable(4133,176704
os_module_store_IAT_code(4145,176961
bool os_module_cmp_IAT_code(4164,177722
module_area_free_IAT(4201,179471
bool os_module_free_IAT_code(4220,180124
module_apply_relocations(4249,181114
typedef struct reloc_iterator_t 4397,187539
    app_pc relocs;4398,187573
    app_pc relocs_end;4399,187639
    app_pc relocs_block_end;4400,187702
    uint rva_page;4401,187768
    app_pc module_base;4402,187823
} reloc_iterator_t;4421,188786
module_reloc_iterator_next_block_internal(4424,188819
module_reloc_iterator_start(4455,190113
module_reloc_iterator_next(4524,192745
module_make_writable(4611,196186
module_restore_permissions(4642,197521
module_file_relocatable(4665,198274
module_rebase(4728,201069
module_dump_pe_file(4824,204635
ensure_section_readable(4937,209549
restore_unreadable_section(4979,211321
module_region_compare(5027,213198
module_pe_section_compare(5044,213936
aslr_compare_header(5137,218249
module_contents_compare(5248,222777
#define CHECK_SAFE_READ(5462,231916
#define GET_FOLLOWING_ADDRESS(5473,232542
get_resource_directory_entries(5476,232637
get_module_resource_directory(5482,232812
get_resource_directory_entry_by_id(5539,235343
get_module_resource_version_data(5583,237071
typedef struct ver_rsrc_header 5776,246007
    size_t length;5777,246040
    size_t value_length;5778,246094
    uint type;5779,246150
    wchar_t *key;key5780,246165
    size_t key_length;5781,246183
} ver_rsrc_header_t;5782,246249
typedef struct vs_version_info 5783,246270
    VS_FIXEDFILEINFO *info;info5784,246303
    void *string_or_var_info;string_or_var_info5785,246350
} vs_version_info_t;5789,246636
typedef struct string_file_info 5790,246657
    size_t size;5791,246691
    void *string_table;string_table5792,246751
} string_file_info_t;5793,246807
typedef struct string_table 5794,246829
    size_t size;5795,246859
    wchar_t *lang;lang5796,246913
    void *string;string5797,246958
} string_table_t;5798,247007
typedef struct rsrc_string 5799,247025
    size_t key_length;5800,247054
    size_t value_length;5801,247120
    wchar_t *key;key5802,247188
    wchar_t *value;value5803,247206
} rsrc_string_t;5804,247226
#define RSRC_TYPE_STRING 5807,247321
#define RSRC_TYPE_BINARY 5808,247348
#define RSRC_ALIGNMENT 5811,247426
read_version_struct_header(5821,247951
read_vs_version_info(5886,250535
read_string_or_var_info(5934,252473
read_string_table(6009,255605
read_rsrc_string(6058,257578
get_module_resource_version_info(6128,260768
get_module_company_name(6243,265998
get_module_original_filename(6260,266602
get_loader_lock_owner(6277,267180
get_shared_lib_name(6286,267373
os_module_has_dynamic_base(6292,267451
safe_read_cur_module(6306,267825
dr_module_import_iterator_start(6328,268643
dr_module_import_iterator_hasnext(6356,269627
dr_module_import_iterator_next(6363,269850
dr_module_import_iterator_stop(6385,270738
pe_symbol_import_iterator_read_thunk(6397,271113
pe_symbol_import_iterator_first_thunk(6424,272103
pe_symbol_import_iterator_next_module(6442,272700
dr_symbol_import_iterator_start(6462,273422
dr_symbol_import_iterator_hasnext(6496,274541
dr_symbol_import_iterator_next(6503,274764
dr_symbol_import_iterator_stop(6527,275647

win32/ntdll.h,44699
#define _NTDLL_H_ 48,2221
#define WIN32_LEAN_AND_MEAN50,2242
#define GET_NTDLL(74,3151
#define NT_CURRENT_PROCESS 88,3772
#define NT_CURRENT_THREAD 89,3829
typedef struct ALIGN_VAR(92,3897
#define DIRECTORY_QUERY 103,4192
#define DIRECTORY_TRAVERSE 104,4241
#define DIRECTORY_CREATE_OBJECT 105,4290
#define DIRECTORY_CREATE_SUBDIRECTORY 106,4339
#define DIRECTORY_ALL_ACCESS 107,4388
typedef struct _PEB_LDR_DATA 110,4497
    ULONG Length;111,4530
    BOOLEAN Initialized;112,4548
    PVOID SsHandle;113,4573
    LIST_ENTRY InLoadOrderModuleList;114,4593
    LIST_ENTRY InMemoryOrderModuleList;115,4631
    LIST_ENTRY InInitializationOrderModuleList;116,4671
} PEB_LDR_DATA, *PPEB_LDR_DATA;PPEB_LDR_DATA117,4719
typedef struct _LDR_MODULE 122,4914
    LIST_ENTRY InLoadOrderModuleList;123,4943
    LIST_ENTRY InMemoryOrderModuleList;124,4981
    LIST_ENTRY InInitializationOrderModuleList;125,5021
    PVOID BaseAddress;126,5069
    PVOID EntryPoint;127,5092
    ULONG SizeOfImage;128,5114
    UNICODE_STRING FullDllName;129,5137
    UNICODE_STRING BaseDllName;130,5169
    ULONG Flags;131,5201
    SHORT LoadCount;132,5218
    SHORT TlsIndex;133,5239
    LIST_ENTRY HashTableEntry;134,5259
    ULONG TimeDateStamp;136,5448
} LDR_MODULE, *PLDR_MODULE;PLDR_MODULE137,5473
# define OPT_HDR(151,6141
# define OPT_HDR_P(152,6207
# define OPT_HDR_BASE(153,6284
# define OPT_HDR(158,6579
# define OPT_HDR_P(159,6648
enum {MAX_MODULE_LIST_INFINITE_LOOP_THRESHOLD MAX_MODULE_LIST_INFINITE_LOOP_THRESHOLD163,6784
#define LDR_IMAGE_IS_DLL 168,6960
#define LDR_LOAD_IN_PROGRESS 169,7011
#define LDR_UNLOAD_IN_PROGRESS 170,7062
#define LDR_NO_DLL_CALLS 171,7113
#define LDR_PROCESS_ATTACHED 172,7164
#define LDR_MODULE_REBASED 173,7215
typedef struct _PEBLOCKROUTINE *PPEBLOCKROUTINE;PPEBLOCKROUTINE175,7267
typedef struct _PEB_FREE_BLOCK *PPEB_FREE_BLOCK;PPEB_FREE_BLOCK176,7316
typedef PVOID *PPVOID;PPVOID177,7365
typedef struct _RTL_BITMAP 179,7389
    ULONG  SizeOfBitMap;180,7418
    LPBYTE BitMapBuffer;181,7478
} RTL_BITMAP, *PRTL_BITMAP;PRTL_BITMAP182,7556
typedef const RTL_BITMAP *PCRTL_BITMAP;PCRTL_BITMAP183,7584
typedef struct _PEB 189,7777
    BOOLEAN                      InheritedAddressSpace;190,7863
    BOOLEAN                      ReadImageFileExecOptions;191,7949
    BOOLEAN                      BeingDebugged;192,8035
    BOOLEAN                      ImageUsesLargePages:ImageUsesLargePages195,8213
    BOOLEAN                      SpareBits:SpareBits196,8299
    BOOLEAN                      ImageUsesLargePages;198,8391
    HANDLE                       Mutant;200,8484
    PVOID                        ImageBaseAddress;201,8570
    PPEB_LDR_DATA                LoaderData;202,8656
    PRTL_USER_PROCESS_PARAMETERS ProcessParameters;203,8742
    PVOID                        SubSystemData;204,8828
    PVOID                        ProcessHeap;205,8914
    PRTL_CRITICAL_SECTION        FastPebLock;206,9000
    PVOID                        AtlThunkSListPtr;209,9135
    PVOID                        SparePtr2;210,9221
    PPEBLOCKROUTINE              FastPebLockRoutine;213,9341
    PPEBLOCKROUTINE              FastPebUnlockRoutine;214,9427
    DWORD                        EnvironmentUpdateCount;216,9520
    PVOID                        KernelCallbackTable;217,9606
    DWORD                        SystemReserved[SystemReserved220,9741
    DWORD                        SpareUlong;221,9827
    DWORD                        EvengLogSection;224,9947
    DWORD                        EventLog;225,10033
    PPEB_FREE_BLOCK              FreeList;227,10126
    DWORD                        TlsExpansionCounter;228,10212
    PRTL_BITMAP                  TlsBitmap;229,10298
    DWORD                        TlsBitmapBits[TlsBitmapBits230,10384
    PVOID                        ReadOnlySharedMemoryBase;231,10470
    PVOID                        ReadOnlySharedMemoryHeap;232,10556
    PPVOID                       ReadOnlyStaticServerData;233,10642
    PVOID                        AnsiCodePageData;234,10728
    PVOID                        OemCodePageData;235,10814
    PVOID                        UnicodeCaseTableData;236,10900
    DWORD                        NumberOfProcessors;237,10986
    DWORD                        NtGlobalFlag;238,11072
    LARGE_INTEGER                CriticalSectionTimeout;239,11158
    ptr_uint_t                   HeapSegmentReserve;240,11244
    ptr_uint_t                   HeapSegmentCommit;241,11330
    ptr_uint_t                   HeapDeCommitTotalFreeThreshold;242,11416
    ptr_uint_t                   HeapDeCommitFreeBlockThreshold;243,11502
    DWORD                        NumberOfHeaps;244,11588
    DWORD                        MaximumNumberOfHeaps;245,11674
    PPVOID                       ProcessHeaps;246,11760
    PVOID                        GdiSharedHandleTable;247,11846
    PVOID                        ProcessStarterHelper;248,11932
    DWORD                        GdiDCAttributeList;249,12018
    PRTL_CRITICAL_SECTION        LoaderLock;250,12104
    DWORD                        OSMajorVersion;251,12190
    DWORD                        OSMinorVersion;252,12276
    WORD                         OSBuildNumber;253,12362
    WORD                         OSCSDVersion;254,12448
    DWORD                        OSPlatformId;255,12534
    DWORD                        ImageSubsystem;256,12620
    DWORD                        ImageSubsystemMajorVersion;257,12706
    DWORD                        ImageSubsystemMinorVersion;258,12792
    ptr_uint_t                   ImageProcessAffinityMask;259,12878
    DWORD                        GdiHandleBuffer[GdiHandleBuffer261,12975
    DWORD                        GdiHandleBuffer[GdiHandleBuffer263,13067
    PVOID                        PostProcessInitRoutine;265,13160
    PVOID                        TlsExpansionBitmap;266,13246
    DWORD                        TlsExpansionBitmapBits[TlsExpansionBitmapBits267,13332
    DWORD                        SessionId;268,13418
    ULARGE_INTEGER               AppCompatFlags;269,13504
    ULARGE_INTEGER               AppCompatFlagsUser;270,13590
    PVOID                        pShimData;271,13676
    PVOID                        AppCompatInfo;272,13762
    UNICODE_STRING               CSDVersion;273,13848
    PVOID                        ActivationContextData;274,13934
    PVOID                        ProcessAssemblyStorageMap;275,14020
    PVOID                        SystemDefaultActivationContextData;276,14106
    PVOID                        SystemAssemblyStorageMap;277,14194
    ptr_uint_t                   MinimumStackCommit;278,14280
    PPVOID                       FlsCallback;279,14366
    LIST_ENTRY                   FlsListHead;280,14452
    PVOID                        FlsBitmap;281,14538
    DWORD                        FlsBitmapBits[FlsBitmapBits282,14624
    DWORD                        FlsHighIndex;283,14710
    PVOID                        WerRegistrationData;284,14796
    PVOID                        WerShipAssertPtr;285,14882
    PVOID                        pUnused;286,14968
    PVOID                        pImageHeaderHash;287,15054
        ULONG                    TracingFlags;289,15152
            ULONG                HeapTracingEnabled:HeapTracingEnabled291,15255
            ULONG                CritSecTracingEnabled:CritSecTracingEnabled292,15341
            ULONG                LibLoaderTracingEnabled:LibLoaderTracingEnabled293,15427
            ULONG                SpareTracingBits:SpareTracingBits294,15513
    ULONG64                      CsrServerReadOnlySharedMemoryBase;297,15617
} PEB, *PPEB;PPEB298,15703
# define _W64301,15731
typedef _W64 long LONG_PTR,304,15764
typedef _W64 long LONG_PTR, *PLONG_PTR;PLONG_PTR304,15764
typedef _W64 unsigned long ULONG_PTR,305,15804
typedef _W64 unsigned long ULONG_PTR, *PULONG_PTR;PULONG_PTR305,15804
typedef ULONG KAFFINITY;306,15855
typedef LONG KPRIORITY;308,15887
typedef struct _KERNEL_USER_TIMES 310,15912
    LARGE_INTEGER CreateTime;311,15948
    LARGE_INTEGER ExitTime;312,15978
    LARGE_INTEGER KernelTime;313,16006
    LARGE_INTEGER UserTime;314,16036
} KERNEL_USER_TIMES;315,16064
typedef struct _PROCESS_BASIC_INFORMATION 319,16124
    NTSTATUS ExitStatus;320,16168
    PPEB PebBaseAddress;321,16193
    ULONG_PTR AffinityMask;322,16218
    KPRIORITY BasePriority;323,16246
    ULONG_PTR UniqueProcessId;324,16274
    ULONG_PTR InheritedFromUniqueProcessId;325,16305
} PROCESS_BASIC_INFORMATION;326,16349
typedef PROCESS_BASIC_INFORMATION *PPROCESS_BASIC_INFORMATION;PPROCESS_BASIC_INFORMATION327,16378
typedef struct _DESCRIPTOR_TABLE_ENTRY 329,16442
    ULONG Selector;330,16483
    LDT_ENTRY Descriptor;331,16503
} DESCRIPTOR_TABLE_ENTRY, *PDESCRIPTOR_TABLE_ENTRY;PDESCRIPTOR_TABLE_ENTRY332,16529
typedef struct _VM_COUNTERS 335,16657
    SIZE_T PeakVirtualSize;336,16687
    SIZE_T VirtualSize;337,16715
    ULONG PageFaultCount;338,16739
    SIZE_T PeakWorkingSetSize;339,16765
    SIZE_T WorkingSetSize;340,16796
    SIZE_T QuotaPeakPagedPoolUsage;341,16823
    SIZE_T QuotaPagedPoolUsage;342,16859
    SIZE_T QuotaPeakNonPagedPoolUsage;343,16891
    SIZE_T QuotaNonPagedPoolUsage;344,16930
    SIZE_T PagefileUsage;345,16965
    SIZE_T PeakPagefileUsage;346,16991
} VM_COUNTERS;347,17021
typedef struct _PROCESS_DEVICEMAP_INFORMATION 350,17111
            HANDLE DirectoryHandle;353,17188
        } Set;354,17224
            ULONG DriveMap;356,17256
            UCHAR DriveType[DriveType357,17284
        } Query;358,17317
    ULONG Flags;361,17352
} PROCESS_DEVICEMAP_INFORMATION, *PPROCESS_DEVICEMAP_INFORMATION;PPROCESS_DEVICEMAP_INFORMATION363,17376
typedef char bool;367,17489
typedef unsigned __int64 uint64;369,17527
typedef struct _PROCESS_WS_WATCH_INFORMATION 398,18650
    PVOID FaultingPc;399,18697
    PVOID FaultingVa;400,18719
} PROCESS_WS_WATCH_INFORMATION, *PPROCESS_WS_WATCH_INFORMATION;PPROCESS_WS_WATCH_INFORMATION401,18741
typedef struct _POOLED_USAGE_AND_LIMITS 404,18866
    SIZE_T PeakPagedPoolUsage;405,18908
    SIZE_T PagedPoolUsage;406,18939
    SIZE_T PagedPoolLimit;407,18966
    SIZE_T PeakNonPagedPoolUsage;408,18993
    SIZE_T NonPagedPoolUsage;409,19027
    SIZE_T NonPagedPoolLimit;410,19057
    SIZE_T PeakPagefileUsage;411,19087
    SIZE_T PagefileUsage;412,19117
    SIZE_T PagefileLimit;413,19143
} POOLED_USAGE_AND_LIMITS;414,19169
typedef POOLED_USAGE_AND_LIMITS *PPOOLED_USAGE_AND_LIMITS;PPOOLED_USAGE_AND_LIMITS415,19196
typedef struct _PROCESS_ACCESS_TOKEN 421,19397
    HANDLE Token;426,19567
    HANDLE Thread;435,19966
} PROCESS_ACCESS_TOKEN, *PPROCESS_ACCESS_TOKEN;PPROCESS_ACCESS_TOKEN436,19985
#define JOB_OBJECT_LIMIT_WORKINGSET 441,20155
#define JOB_OBJECT_LIMIT_PROCESS_TIME 442,20218
#define JOB_OBJECT_LIMIT_JOB_TIME 443,20281
#define JOB_OBJECT_LIMIT_ACTIVE_PROCESS 444,20344
#define JOB_OBJECT_LIMIT_AFFINITY 445,20407
#define JOB_OBJECT_LIMIT_PRIORITY_CLASS 446,20470
#define JOB_OBJECT_LIMIT_PRESERVE_JOB_TIME 447,20533
#define JOB_OBJECT_LIMIT_SCHEDULING_CLASS 448,20596
#define JOB_OBJECT_LIMIT_PROCESS_MEMORY 451,20742
#define JOB_OBJECT_LIMIT_JOB_MEMORY 452,20805
#define JOB_OBJECT_LIMIT_DIE_ON_UNHANDLED_EXCEPTION 453,20868
#define JOB_OBJECT_LIMIT_BREAKAWAY_OK 454,20931
#define JOB_OBJECT_LIMIT_SILENT_BREAKAWAY_OK 455,20994
#define JOB_OBJECT_LIMIT_KILL_ON_JOB_CLOSE 456,21057
typedef struct _EXCEPTION_REGISTRATION 463,21322
     struct _EXCEPTION_REGISTRATION* prev;464,21363
     PVOID                   handler;465,21406
} EXCEPTION_REGISTRATION, *PEXCEPTION_REGISTRATION;PEXCEPTION_REGISTRATION466,21444
typedef struct _GDI_TEB_BATCH468,21497
    ULONG  Offset;470,21529
    HANDLE HDC;471,21548
    ULONG  Buffer[Buffer472,21564
} GDI_TEB_BATCH;473,21590
typedef struct _TEB 478,21698
    PEXCEPTION_REGISTRATION   ExceptionList;480,21840
    PVOID                     StackBase;481,21920
    PVOID                     StackLimit;482,22000
    PVOID                     SubSystemTib;483,22080
        PVOID                 FiberData;485,22172
        DWORD                 Version;486,22252
    PVOID                     ArbitraryUserPointer;488,22339
    struct _TEB*              Self;489,22419
    PVOID                     EnvironmentPointer;490,22499
    CLIENT_ID                 ClientId;491,22579
    PVOID                     ActiveRpcHandle;492,22659
    PVOID                     ThreadLocalStoragePointer;493,22739
    PEB*                      ProcessEnvironmentBlock;494,22819
    DWORD                     LastErrorValue;495,22899
    DWORD                     CountOfOwnedCriticalSections;496,22979
    PVOID                     CsrClientThread;497,23059
    PVOID                     Win32ThreadInfo;498,23139
    DWORD                     User32Reserved[User32Reserved499,23219
    DWORD                     UserReserved[UserReserved500,23299
    PVOID                     WOW32Reserved;501,23379
    DWORD                     CurrentLocale;502,23459
    DWORD                     FpSoftwareStatusRegister;503,23539
    PVOID /* kernel32 data */ SystemReserved1[SystemReserved1504,23619
    LONG                      ExceptionCode;505,23699
    PVOID                     ActivationContextStackPointer;506,23779
    byte                      SpareBytes1[SpareBytes1509,23943
    byte                      SpareBytes1[SpareBytes1511,24029
    DWORD                     TxFsContext;513,24116
    GDI_TEB_BATCH             GdiTebBatch;514,24196
    CLIENT_ID                 RealClientId;515,24276
    PVOID                     GdiCachedProcessHandle;516,24356
    DWORD                     GdiClientPID;517,24436
    DWORD                     GdiClientTID;518,24516
    PVOID                     GdiThreadLocalInfo;519,24596
    ptr_uint_t                Win32ClientInfo[Win32ClientInfo520,24676
    PVOID                     glDispatchTable[glDispatchTable521,24756
    ptr_uint_t                glReserved1[glReserved1522,24836
    PVOID                     glReserved2;523,24917
    PVOID                     glSectionInfo;524,24998
    PVOID                     glSection;525,25079
    PVOID                     glTable;526,25160
    PVOID                     glCurrentRC;527,25241
    PVOID                     glContext;528,25322
    DWORD                     LastStatusValue;529,25403
    UNICODE_STRING            StaticUnicodeString;530,25484
    WORD                      StaticUnicodeBuffer[StaticUnicodeBuffer531,25565
    PVOID                     DeallocationStack;532,25646
    PVOID                     TlsSlots[TlsSlots533,25727
    LIST_ENTRY                TlsLinks;534,25808
    PVOID                     Vdm;535,25889
    PVOID                     ReservedForNtRpc;536,25970
    PVOID                     DbgSsReserved[DbgSsReserved537,26051
    DWORD                     HardErrorMode;538,26132
    PVOID                     Instrumentation[Instrumentation539,26213
    PVOID                     SubProcessTag;540,26294
    PVOID                     EtwTraceData;541,26375
    PVOID                     WinSockData;542,26456
    DWORD                     GdiBatchCount;543,26537
    byte                      InDbgPrint;544,26618
    byte                      FreeStackOnTermination;545,26699
    byte                      HasFiberData;546,26780
    byte                      IdealProcessor;547,26861
    DWORD                     GuaranteedStackBytes;548,26942
    PVOID                     ReservedForPerf;549,27023
    PVOID                     ReservedForOle;550,27104
    DWORD                     WaitingOnLoaderLock;551,27185
    ptr_uint_t                SparePointer1;552,27266
    ptr_uint_t                SoftPatchPtr1;553,27347
    ptr_uint_t                SoftPatchPtr2;554,27428
    PPVOID                    TlsExpansionSlots;555,27509
    PVOID                     DeallocationBStore;557,27601
    PVOID                     BStoreLimit;558,27682
    DWORD                     ImpersonationLocale;560,27770
    DWORD                     IsImpersonating;561,27851
    PVOID                     NlsCache;562,27932
    PVOID                     pShimData;563,28013
    DWORD                     HeapVirtualAffinity;564,28094
    PVOID                     CurrentTransactionHandle;565,28175
    PVOID                     ActiveFrame;566,28256
    PVOID                     FlsData;567,28337
    PVOID                     PreferredLanguages;569,28503
    PVOID                     UserPrefLanguages;570,28584
    PVOID                     MergedPrefLanguages;571,28665
    ULONG                     MuiImpersonation;572,28746
        USHORT                CrossTebFlags;574,28839
        USHORT                SpareCrossTebFlags:SpareCrossTebFlags575,28920
        USHORT                SameTebFlags;579,29024
            USHORT            SafeThunkCall:SafeThunkCall581,29122
            USHORT            InDebugPrint:InDebugPrint582,29203
            USHORT            HasFiberData2:HasFiberData2583,29284
            USHORT            SkipThreadAttach:SkipThreadAttach584,29365
            USHORT            WerInShipAssertCode:WerInShipAssertCode585,29446
            USHORT            RanProcessInit:RanProcessInit586,29527
            USHORT            ClonedThread:ClonedThread587,29608
            USHORT            SuppressDebugMsg:SuppressDebugMsg588,29689
            USHORT            DisableUserStackWalk:DisableUserStackWalk589,29770
            USHORT            RtlExceptionAttached:RtlExceptionAttached590,29851
            USHORT            InitialThread:InitialThread591,29932
            USHORT            SessionAware:SessionAware592,30013
            USHORT            SpareSameTebBits:SpareSameTebBits593,30094
    PVOID                     TxnScopeEntercallback;596,30193
    PVOID                     TxnScopeExitCAllback;597,30274
    PVOID                     TxnScopeContext;598,30355
    ULONG                     LockCount;599,30436
    ULONG                     SpareUlong0;600,30517
    PVOID                     ResourceRetValue;601,30598
    PVOID                     ReservedForWdf;602,30679
    byte                      SafeThunkCall;604,30783
    byte                      BooleanSpare[BooleanSpare605,30864
} TEB;607,30952
typedef struct _THREAD_BASIC_INFORMATION 609,30960
    NTSTATUS ExitStatus;610,31026
    PNT_TIB TebBaseAddress;611,31051
    CLIENT_ID ClientId;612,31079
    KAFFINITY AffinityMask;613,31103
    KPRIORITY Priority;614,31131
    KPRIORITY BasePriority;615,31155
} THREAD_BASIC_INFORMATION, *PTHREAD_BASIC_INFORMATION;PTHREAD_BASIC_INFORMATION616,31183
typedef struct _SYSTEM_BASIC_INFORMATION 618,31240
    ULONG   Unknown;619,31283
    ULONG   MaximumIncrement;620,31304
    ULONG   PhysicalPageSize;621,31334
    ULONG   NumberOfPhysicalPages;622,31364
    ULONG   LowestPhysicalPage;623,31399
    ULONG   HighestPhysicalPage;624,31431
    ULONG   AllocationGranularity;625,31464
    PVOID   LowestUserAddress;626,31499
    PVOID   HighestUserAddress;627,31530
    ULONG_PTR ActiveProcessors;628,31562
    UCHAR   NumberProcessors;629,31594
    ULONG   Unknown2;631,31635
} SYSTEM_BASIC_INFORMATION, *PSYSTEM_BASIC_INFORMATION;PSYSTEM_BASIC_INFORMATION633,31728
typedef struct _SYSTEM_PROCESSOR_INFORMATION 635,31785
    USHORT  ProcessorArchitecture;636,31832
    USHORT  ProcessorLevel;637,31867
    USHORT  ProcessorRevision;638,31895
    USHORT  Unknown;639,31926
    ULONG   FeatureBits;640,31947
} SYSTEM_PROCESSOR_INFORMATION, *PSYSTEM_PROCESSOR_INFORMATION;PSYSTEM_PROCESSOR_INFORMATION641,31972
typedef struct _SYSTEM_PERFORMANCE_INFORMATION 643,32037
    LARGE_INTEGER IdleTime;644,32086
    LARGE_INTEGER ReadTransferCount;645,32114
    LARGE_INTEGER WriteTransferCount;646,32151
    LARGE_INTEGER OtherTransferCount;647,32189
    ULONG   ReadOperationCount;648,32227
    ULONG   WriteOperationCount;649,32259
    ULONG   OtherOperationCount;650,32292
    ULONG   AvailablePages;651,32325
    ULONG   TotalCommittedPages;652,32353
    ULONG   TotalCommitLimit;653,32386
    ULONG   PeakCommitment;654,32416
    ULONG   PageFaults;655,32444
    ULONG   WriteCopyFaults;656,32468
    ULONG   TranstitionFaults;657,32497
    ULONG   Reserved1;658,32528
    ULONG   DemandZeroFaults;659,32551
    ULONG   PagesRead;660,32581
    ULONG   PageReadIos;661,32604
    ULONG   Reserved2[Reserved2662,32629
    ULONG   PageFilePagesWritten;663,32655
    ULONG   PageFilePagesWriteIos;664,32689
    ULONG   MappedFilePagesWritten;665,32724
    ULONG   PagedPoolUsage;666,32760
    ULONG   NonPagedPoolUsage;667,32788
    ULONG   PagedPoolAllocs;668,32819
    ULONG   PagedPoolFrees;669,32848
    ULONG   NonPagedPoolAllocs;670,32876
    ULONG   NonPagedPoolFrees;671,32908
    ULONG   TotalFreeSystemPtes;672,32939
    ULONG   SystemCodePage;673,32972
    ULONG   TotalSystemDriverPages;674,33000
    ULONG   TotalSystemCodePages;675,33036
    ULONG   SmallNonPagedLookasideListAllocateHits;676,33070
    ULONG   SmallPagedLookasieListAllocateHits;677,33122
    ULONG   Reserved3;678,33170
    ULONG   MmSystemCachePage;679,33193
    ULONG   PagedPoolPage;680,33224
    ULONG   SystemDriverPage;681,33251
    ULONG   FastReadNoWait;682,33281
    ULONG   FastReadWait;683,33309
    ULONG   FastReadResourceMiss;684,33335
    ULONG   FastReadNotPossible;685,33369
    ULONG   FastMdlReadNoWait;686,33402
    ULONG   FastMdlReadWait;687,33433
    ULONG   FastMdlReadResourceMiss;688,33462
    ULONG   FastMdlReadNotPossible;689,33499
    ULONG   MapDataNoWait;690,33535
    ULONG   MapDataWait;691,33562
    ULONG   MapDataNoWaitMiss;692,33587
    ULONG   MapDataWaitMiss;693,33618
    ULONG   PinMappedDataCount;694,33647
    ULONG   PinReadNoWait;695,33679
    ULONG   PinReadWait;696,33706
    ULONG   PinReadNoWaitMiss;697,33731
    ULONG   PinReadWaitMiss;698,33762
    ULONG   CopyReadNoWait;699,33791
    ULONG   CopyReadWait;700,33819
    ULONG   CopyReadNoWaitMiss;701,33845
    ULONG   CopyReadWaitMiss;702,33877
    ULONG   MdlReadNoWait;703,33907
    ULONG   MdlReadWait;704,33934
    ULONG   MdlReadNoWaitMiss;705,33959
    ULONG   MdlReadWaitMiss;706,33990
    ULONG   ReadAheadIos;707,34019
    ULONG   LazyWriteIos;708,34045
    ULONG   LazyWritePages;709,34071
    ULONG   DataFlushes;710,34099
    ULONG   DataPages;711,34124
    ULONG   ContextSwitches;712,34147
    ULONG   FirstLevelTbFills;713,34176
    ULONG   SecondLevelTbFills;714,34207
    ULONG   SystemCalls;715,34239
    ULONG   Unknown[Unknown717,34300
} SYSTEM_PERFORMANCE_INFORMATION, *PSYSTEM_PERFORMANCE_INFORMATION;PSYSTEM_PERFORMANCE_INFORMATION718,34324
typedef struct _SYSTEM_TIME_OF_DAY_INFORMATION 720,34393
    LARGE_INTEGER BootTime;721,34442
    LARGE_INTEGER CurrentTime;722,34470
    LARGE_INTEGER TimeZoneBias;723,34501
    ULONG   CurrentTimeZoneId;724,34533
} SYSTEM_TIME_OF_DAY_INFORMATION, *PSYSTEM_TIME_OF_DAY_INFORMATION;PSYSTEM_TIME_OF_DAY_INFORMATION725,34564
typedef struct _SYSTEM_PROCESSOR_TIMES 727,34633
    LARGE_INTEGER IdleTime;728,34674
    LARGE_INTEGER KernelTime;729,34702
    LARGE_INTEGER UserTime;730,34732
    LARGE_INTEGER DpcTime;731,34760
    LARGE_INTEGER InterruptTime;732,34787
    ULONG   InterruptCount;733,34820
} SYSTEM_PROCESSOR_TIMES, *PSYSTEM_PROCESSOR_TIMES;PSYSTEM_PROCESSOR_TIMES734,34848
typedef struct _IO_COUNTERSEX 736,34901
    LARGE_INTEGER ReadOperationCount;737,34933
    LARGE_INTEGER WriteOperationCount;738,34971
    LARGE_INTEGER OtherOperationCount;739,35010
    LARGE_INTEGER ReadTransferCount;740,35049
    LARGE_INTEGER WriteTransferCount;741,35086
    LARGE_INTEGER OtherTransferCount;742,35124
} IO_COUNTERSEX, *PIO_COUNTERSEX;PIO_COUNTERSEX743,35162
typedef enum _THREAD_STATE 745,35197
    StateInitialized,746,35226
    StateReady,747,35248
    StateRunning,748,35264
    StateStandby,749,35282
    StateTerminated,750,35300
    StateWait,751,35321
    StateTransition,752,35336
    StateUnknown753,35357
} THREAD_STATE;754,35374
typedef enum _KWAIT_REASON 756,35391
    Executive,757,35420
    FreePage,758,35435
    PageIn,759,35449
    PoolAllocation,760,35461
    DelayExecution,761,35481
    Suspended,762,35501
    UserRequest,763,35516
    WrExecutive,764,35533
    WrFreePage,765,35550
    WrPageIn,766,35566
    WrPoolAllocation,767,35580
    WrDelayExecution,768,35602
    WrSuspended,769,35624
    WrUserRequest,770,35641
    WrEventPair,771,35660
    WrQueue,772,35677
    WrLpcReceive,773,35690
    WrVirtualMemory,774,35708
    WrPageOut,775,35729
    WrRendevous,776,35744
    WrSpare2,777,35761
    WrSpare3,778,35775
    WrSpare4,779,35789
    WrSpare5,780,35803
    WrSpare6,781,35817
    WrKernel782,35831
} KWAIT_REASON;783,35844
typedef struct _SYSTEM_THREADS 785,35861
    LARGE_INTEGER CreateTime;786,35894
    LARGE_INTEGER UserTime;787,35924
    LARGE_INTEGER KernelTime;788,35952
    ULONG   WaitTime;789,35982
    PVOID   StartAddress;790,36004
    CLIENT_ID ClientId;791,36030
    KPRIORITY Priority;792,36054
    KPRIORITY BasePriority;793,36078
    ULONG   ContextSwitchCount;794,36106
    THREAD_STATE ThreadState;795,36138
    KWAIT_REASON WaitReason;796,36168
} SYSTEM_THREADS, *PSYSTEM_THREADS;PSYSTEM_THREADS797,36197
typedef struct _SYSTEM_PROCESSES 799,36234
    ULONG NextEntryDelta;800,36270
    ULONG ThreadCount;801,36296
    ULONG Reserved1[Reserved1802,36319
    LARGE_INTEGER CreateTime;803,36343
    LARGE_INTEGER UserTime;804,36373
    LARGE_INTEGER KernelTime;805,36401
    UNICODE_STRING ProcessName;806,36431
    KPRIORITY BasePriority;807,36463
    HANDLE ProcessId;808,36491
    HANDLE InheritedFromProcessId;809,36513
    ULONG HandleCount;810,36548
    ULONG SessionId;811,36571
    ULONG PageDirectoryFrame;812,36592
    VM_COUNTERS VmCounters;813,36622
    IO_COUNTERSEX IoCounters;814,36650
    SYSTEM_THREADS Threads[Threads815,36706
} SYSTEM_PROCESSES, *PSYSTEM_PROCESSES;PSYSTEM_PROCESSES816,36757
typedef struct _SYSTEM_GLOBAL_FLAG 819,36799
    ULONG   GlobalFlag;820,36836
} SYSTEM_GLOBAL_FLAG, *PSYSTEM_GLOBAL_FLAG;PSYSTEM_GLOBAL_FLAG821,36860
typedef struct _MEMORY_SECTION_NAME 823,36905
    UNICODE_STRING SectionFileName;824,36943
} MEMORY_SECTION_NAME, *PMEMORY_SECTION_NAME;PMEMORY_SECTION_NAME825,36979
#define SYMBOLIC_LINK_QUERY 827,37026
#define SYMBOLIC_LINK_ALL_ACCESS 828,37060
    THREAD_INFO_ELEMENT_BUFFER_IS_INOUT 838,37575
    THREAD_INFO_ELEMENT_BUFFER_IS_INOUT = 0x00000,x00000838,37575
    THREAD_INFO_ELEMENT_BUFFER_IS_OUT 839,37653
    THREAD_INFO_ELEMENT_BUFFER_IS_OUT   = 0x10000,x10000839,37653
    THREAD_INFO_ELEMENT_BUFFER_IS_IN 840,37727
    THREAD_INFO_ELEMENT_BUFFER_IS_IN    = 0x20000,x20000840,37727
} thread_info_elm_buf_access_t;841,37802
    THREAD_INFO_ELEMENT_CLIENT_ID 844,37885
    THREAD_INFO_ELEMENT_CLIENT_ID       = 0x3,x3844,37885
    THREAD_INFO_ELEMENT_TEB 845,37964
    THREAD_INFO_ELEMENT_TEB             = 0x4,x4845,37964
    THREAD_INFO_ELEMENT_NT_PATH_TO_EXE 846,38039
    THREAD_INFO_ELEMENT_NT_PATH_TO_EXE  = 0x5,x5846,38039
    THREAD_INFO_ELEMENT_EXE_STUFF 848,38204
    THREAD_INFO_ELEMENT_EXE_STUFF       = 0x6,x6848,38204
    THREAD_INFO_ELEMENT_UNKNOWN_1 850,38350
    THREAD_INFO_ELEMENT_UNKNOWN_1       = 0x9,x9850,38350
} thread_info_elm_buf_type_t;852,38500
typedef struct _thread_info_element_t 854,38531
    ptr_uint_t flags;855,38604
    size_t buffer_size;856,38692
    void *buffer;buffer857,38749
    ptr_uint_t unknown;858,38835
} thread_info_elm_t;859,38888
typedef struct _exe_stuff_t 861,38910
    OUT void *exe_entrypoint_addr;exe_entrypoint_addr862,38973
    ptr_uint_t unknown1[unknown1864,39137
    uint32 unknown2[unknown2865,39216
} exe_stuff_t;866,39299
typedef struct _create_proc_thread_info_t 868,39315
    size_t struct_size;869,39392
    thread_info_elm_t nt_path_to_exe;874,39694
    thread_info_elm_t client_id;879,39880
    thread_info_elm_t exe_stuff;884,40092
    thread_info_elm_t info[info891,40606
}  create_proc_thread_info_t;893,40643
typedef struct _create_thread_info_t 897,40776
    size_t struct_size;898,40848
    thread_info_elm_t client_id;906,41293
    thread_info_elm_t teb;911,41445
} create_thread_info_t;912,41472
typedef struct _BASE_STATIC_SERVER_DATA919,41753
    UNICODE_STRING WindowsDirectory;921,41795
    UNICODE_STRING WindowsSystemDirectory;922,41832
    UNICODE_STRING NamedObjectDirectory;923,41875
    USHORT WindowsMajorVersion;924,41916
    USHORT WindowsMinorVersion;925,41948
    USHORT BuildNumber;926,41980
} BASE_STATIC_SERVER_DATA, *PBASE_STATIC_SERVER_DATA;PBASE_STATIC_SERVER_DATA928,42039
typedef struct _BASE_STATIC_SERVER_DATA_64931,42106
    UNICODE_STRING_64 WindowsDirectory;933,42151
    UNICODE_STRING_64 WindowsSystemDirectory;934,42191
    UNICODE_STRING_64 NamedObjectDirectory;935,42237
    USHORT WindowsMajorVersion;936,42281
    USHORT WindowsMinorVersion;937,42313
    USHORT BuildNumber;938,42345
} BASE_STATIC_SERVER_DATA_64, *PBASE_STATIC_SERVER_DATA_64;PBASE_STATIC_SERVER_DATA_64940,42404
typedef struct _FILE_BOTH_DIR_INFORMATION 944,42525
    ULONG NextEntryOffset;945,42569
    ULONG FileIndex;946,42596
    LARGE_INTEGER CreationTime;947,42617
    LARGE_INTEGER LastAccessTime;948,42649
    LARGE_INTEGER LastWriteTime;949,42683
    LARGE_INTEGER ChangeTime;950,42716
    LARGE_INTEGER EndOfFile;951,42746
    LARGE_INTEGER AllocationSize;952,42775
    ULONG FileAttributes;953,42809
    ULONG FileNameLength;954,42835
    ULONG EaSize;955,42861
    CCHAR ShortNameLength;956,42879
    WCHAR ShortName[ShortName957,42906
    WCHAR FileName[FileName958,42931
} FILE_BOTH_DIR_INFORMATION, *PFILE_BOTH_DIR_INFORMATION;PFILE_BOTH_DIR_INFORMATION959,42954
typedef enum _NT_PRODUCT_TYPE 962,43032
    NtProductWinNt 963,43064
    NtProductLanManNt,964,43088
    NtProductServer965,43111
} NT_PRODUCT_TYPE, *PNT_PRODUCT_TYPE;PNT_PRODUCT_TYPE966,43131
typedef enum _ALTERNATIVE_ARCHITECTURE_TYPE 969,43189
    StandardDesign,970,43235
    NEC98x86,971,43303
    EndAlternatives 972,43367
} ALTERNATIVE_ARCHITECTURE_TYPE;973,43437
typedef struct _KSYSTEM_TIME 975,43471
    ULONG LowPart;976,43502
    LONG High1Time;977,43521
    LONG High2Time;978,43541
} KSYSTEM_TIME, *PKSYSTEM_TIME;PKSYSTEM_TIME979,43561
#define PROCESSOR_FEATURE_MAX 981,43594
typedef struct _KUSER_SHARED_DATA 983,43628
    ULONG TickCountLowDeprecated;991,43819
    ULONG TickCountMultiplier;992,43853
    volatile KSYSTEM_TIME InterruptTime;998,43953
    volatile KSYSTEM_TIME SystemTime;1004,44060
    volatile KSYSTEM_TIME TimeZoneBias;1010,44152
    USHORT ImageNumberLow;1018,44316
    USHORT ImageNumberHigh;1019,44343
    WCHAR NtSystemRoot[NtSystemRoot1025,44425
    ULONG MaxStackTraceDepth;1031,44525
    ULONG CryptoExponent;1037,44594
    ULONG TimeZoneId;1043,44654
    ULONG LargePageMinimum;1045,44677
    ULONG Reserved2[Reserved21046,44705
    NT_PRODUCT_TYPE NtProductType;1052,44767
    BOOLEAN ProductTypeIsValid;1053,44802
    ULONG NtMajorVersion;1061,45077
    ULONG NtMinorVersion;1062,45103
    BOOLEAN ProcessorFeatures[ProcessorFeatures1068,45175
    ULONG Reserved1;1073,45280
    ULONG Reserved3;1074,45301
    volatile ULONG TimeSlip;1080,45377
    ALTERNATIVE_ARCHITECTURE_TYPE AlternativeArchitecture;1086,45490
    LARGE_INTEGER SystemExpirationDate;1095,45830
    ULONG SuiteMask;1101,45907
    BOOLEAN KdDebuggerEnabled;1107,45998
    volatile ULONG ActiveConsoleId;1113,46110
    volatile ULONG DismountCount;1122,46373
    ULONG ComPlusPackage;1130,46645
    ULONG LastSystemRITEventTickCount;1139,46912
    ULONG NumberOfPhysicalPages;1147,47123
    BOOLEAN SafeBootMode;1153,47228
    ULONG TraceLogging;1162,47496
    ULONGLONG   Fill0;1174,47871
    ULONGLONG   SystemCall[SystemCall1175,47916
        volatile KSYSTEM_TIME TickCount;1182,48005
        volatile ULONG64 TickCountQuad;1183,48046
} KUSER_SHARED_DATA;1187,48139
#define KUSER_SHARED_DATA_ADDRESS 1190,48210
typedef enum {MEMORY_RESERVE_ONLY MEMORY_RESERVE_ONLY1195,48371
typedef enum {MEMORY_RESERVE_ONLY = MEM_RESERVE,1195,48371
              MEMORY_COMMIT 1196,48421
              MEMORY_COMMIT = MEM_RESERVE|MEM_RESERVE1196,48421
              MEMORY_COMMIT = MEM_RESERVE|MEM_COMMITMEM_COMMIT1196,48421
} memory_commit_status_t;1197,48474
#define DUPLICATE_SAME_ATTRIBUTES 1216,48755
typedef enum {THREAD_EXITED,THREAD_EXITED1225,49051
typedef enum {THREAD_EXITED, THREAD_NOT_EXITED,1225,49051
typedef enum {THREAD_EXITED, THREAD_NOT_EXITED, THREAD_EXIT_ERROR}THREAD_EXIT_ERROR1225,49051
typedef enum {THREAD_EXITED, THREAD_NOT_EXITED, THREAD_EXIT_ERROR} thread_exited_status_t;1225,49051
#define SEC_LARGE_PAGES 1414,53809
# define SEC_VLM 1417,53984
#define SEC_BASED_UNSUPPORTED 1420,54111
#define SEC_NO_CHANGE_UNSUPPORTED 1421,54156
typedef enum _reg_query_value_result 1448,54901
    REG_QUERY_FAILURE,1449,54940
    REG_QUERY_BUFFER_TOO_SMALL,1450,54963
    REG_QUERY_SUCCESS1451,54995
} reg_query_value_result_t;1452,55017
#define LengthRequiredSID(1478,55744
# define SECURITY_MAX_SID_SIZE 1484,56032
#define SECURITY_MAX_TOKEN_SIZE 1491,56233
#define FILE_ANY_ACCESS 1535,57646
#define FILE_SPECIAL_ACCESS 1536,57688
#define FILE_READ_ACCESS 1537,57737
#define FILE_WRITE_ACCESS 1538,57800
#define FILE_SHARE_VALID_FLAGS 1541,57917
#define FILE_ATTRIBUTE_VALID_FLAGS 1544,58026
#define FILE_ATTRIBUTE_VALID_SET_FLAGS 1545,58081
#define FILE_DIRECTORY_FILE 1549,58220
#define FILE_WRITE_THROUGH 1550,58279
#define FILE_SEQUENTIAL_ONLY 1551,58338
#define FILE_NO_INTERMEDIATE_BUFFERING 1552,58397
#define FILE_SYNCHRONOUS_IO_ALERT 1554,58457
#define FILE_SYNCHRONOUS_IO_NONALERT 1555,58516
#define FILE_NON_DIRECTORY_FILE 1556,58575
#define FILE_CREATE_TREE_CONNECTION 1557,58634
#define FILE_COMPLETE_IF_OPLOCKED 1559,58694
#define FILE_NO_EA_KNOWLEDGE 1560,58753
#define FILE_OPEN_FOR_RECOVERY 1561,58812
#define FILE_OPEN_REMOTE_INSTANCE 1562,58871
#define FILE_RANDOM_ACCESS 1563,58945
#define FILE_DELETE_ON_CLOSE 1565,59005
#define FILE_OPEN_BY_FILE_ID 1566,59064
#define FILE_OPEN_FOR_BACKUP_INTENT 1567,59123
#define FILE_NO_COMPRESSION 1568,59182
#define FILE_RESERVE_OPFILTER 1570,59242
#define FILE_OPEN_REPARSE_POINT 1571,59301
#define FILE_OPEN_NO_RECALL 1572,59360
#define FILE_OPEN_FOR_FREE_SPACE_QUERY 1573,59419
#define FILE_COPY_STRUCTURED_STORAGE 1575,59479
#define FILE_STRUCTURED_STORAGE 1576,59538
#define FILE_VALID_OPTION_FLAGS 1578,59598
#define FILE_VALID_PIPE_OPTION_FLAGS 1579,59657
#define FILE_VALID_MAILSLOT_OPTION_FLAGS 1580,59716
#define FILE_VALID_SET_FLAGS 1581,59775
#define FILE_SUPERSEDED 1584,59888
#define FILE_OPENED 1585,59927
#define FILE_CREATED 1586,59966
#define FILE_OVERWRITTEN 1587,60005
#define FILE_EXISTS 1588,60044
#define FILE_DOES_NOT_EXIST 1589,60083
#define FILE_SUPERSEDE 1592,60165
#define FILE_OPEN 1593,60216
#define FILE_CREATE 1594,60267
#define FILE_OPEN_IF 1595,60318
#define FILE_OVERWRITE 1596,60369
#define FILE_OVERWRITE_IF 1597,60420
#define FILE_MAXIMUM_DISPOSITION 1598,60471
#define FILE_DISPOSITION_SET_OWNER 1601,60593
#define FILE_WRITE_TO_END_OF_FILE 1604,60695
#define FILE_USE_FILE_POINTER_POSITION 1605,60746
# define STATUS_PENDING 1612,61104
#define FILE_DEVICE_FILE_SYSTEM 1616,61187
#define FILE_DEVICE_NAMED_PIPE 1617,61238
#define STATUS_NOT_IMPLEMENTED 1622,61408
#define STATUS_INFO_LENGTH_MISMATCH 1624,61474
#define STATUS_NOT_IMPLEMENTED 1627,61590
#define STATUS_NO_SUCH_FILE 1630,61687
#define STATUS_CONFLICTING_ADDRESSES 1633,61850
#define STATUS_END_OF_FILE 1638,62022
#define STATUS_INVALID_ADDRESS 1641,62151
#define STATUS_BUFFER_OVERFLOW 1644,62282
#define STATUS_NO_MORE_FILES 1647,62415
#define STATUS_INVALID_FILE_FOR_SECTION 1651,62587
#define STATUS_ACCESS_DENIED 1655,62770
#define STATUS_BUFFER_TOO_SMALL 1659,62940
#define STATUS_OBJECT_TYPE_MISMATCH 1664,63156
#define STATUS_OBJECT_NAME_INVALID 1667,63249
#define STATUS_OBJECT_NAME_NOT_FOUND 1670,63345
#define STATUS_OBJECT_NAME_COLLISION 1673,63451
#define STATUS_OBJECT_PATH_INVALID 1676,63573
#define STATUS_OBJECT_PATH_NOT_FOUND 1679,63670
#define STATUS_SECTION_TOO_BIG 1682,63792
#define STATUS_SHARING_VIOLATION 1685,63938
#define STATUS_INVALID_PAGE_PROTECTION 1688,64055
#define STATUS_FILE_LOCK_CONFLICT 1691,64200
#define STATUS_DELETE_PENDING 1694,64354
#define STATUS_FILE_INVALID 1699,64527
#define STATUS_FILE_IS_A_DIRECTORY 1704,64727
#define STATUS_OBJECT_NAME_EXISTS 1707,64885
#define STATUS_IMAGE_NOT_AT_BASE 1713,65120
#  define STATUS_NO_MEMORY 1718,65343
#define STATUS_PAGEFILE_QUOTA_EXCEEDED 1723,65556
#define STATUS_COMMITMENT_LIMIT 1730,65838
#define STATUS_COMMITMENT_MINIMUM 1740,66313
#define EXCEPTION_THROWN 1743,66447
#define STATUS_PROCESS_NOT_IN_JOB 1747,66590
#define STATUS_PROCESS_IN_JOB 1749,66702
#define STATUS_NO_SUCH_PRIVILEGE 1752,66812
#define STATUS_PRIVILEGE_NOT_HELD 1754,66932
#define STATUS_CALLBACK_POP_STACK 1757,67069
#define STATUS_INVALID_INFO_CLASS 1760,67162
#define STATUS_MAPPED_FILE_SIZE_ZERO 1765,67326
#define STATUS_PARTIAL_COPY 1767,67392
# define STATUS_INVALID_PARAMETER 1771,67555
#define STATUS_NOT_MAPPED_DATA 1775,67688
#define STATUS_INVALID_PARAMETER_1 1778,67840
#define STATUS_INVALID_PARAMETER_2 1781,67993
#define STATUS_INVALID_PARAMETER_3 1784,68145
#define STATUS_INVALID_PARAMETER_4 1787,68298
#define STATUS_INVALID_PARAMETER_5 1790,68450
#define STATUS_INVALID_PARAMETER_6 1793,68602
#define STATUS_INVALID_PARAMETER_7 1796,68756
#define STATUS_INVALID_PARAMETER_8 1799,68909
#define STATUS_INVALID_PARAMETER_9 1802,69061
#define STATUS_INVALID_PARAMETER_10 1805,69213
#define STATUS_INVALID_PARAMETER_11 1808,69368
#define STATUS_INVALID_PARAMETER_12 1811,69522
#define STATUS_THREAD_IS_TERMINATING 1814,69661
#define STATUS_PROCESS_IS_TERMINATING 1817,69783
#define STATUS_NOT_A_REPARSE_POINT 1820,69906
# define IMAGE_SIZEOF_BASE_RELOCATION 1824,70064
typedef struct _FILE_STANDARD_INFORMATION 1865,71387
    LARGE_INTEGER AllocationSize;1866,71448
    LARGE_INTEGER EndOfFile;1867,71509
    ULONG NumberOfLinks;1868,71570
    BOOLEAN DeletePending;1869,71631
    BOOLEAN Directory;1870,71692
} FILE_STANDARD_INFORMATION, *PFILE_STANDARD_INFORMATION;PFILE_STANDARD_INFORMATION1871,71753
typedef struct _FILE_INTERNAL_INFORMATION 1873,71815
    LARGE_INTEGER IndexNumber;1874,71859
} FILE_INTERNAL_INFORMATION, *PFILE_INTERNAL_INFORMATION;PFILE_INTERNAL_INFORMATION1875,71890
typedef struct _FILE_POSITION_INFORMATION 1877,71999
    LARGE_INTEGER CurrentByteOffset;1878,72060
} FILE_POSITION_INFORMATION, *PFILE_POSITION_INFORMATION;PFILE_POSITION_INFORMATION1879,72121
typedef struct _FILE_ALIGNMENT_INFORMATION 1881,72243
    ULONG AlignmentRequirement;1882,72304
} FILE_ALIGNMENT_INFORMATION, *PFILE_ALIGNMENT_INFORMATION;PFILE_ALIGNMENT_INFORMATION1883,72365
#define MAX_FILE_NAME_LENGTH 1885,72487
typedef struct _FILE_NAME_INFORMATION 1886,72525
    ULONG FileNameLength;1887,72586
    WCHAR FileName[FileName1888,72642
} FILE_NAME_INFORMATION, *PFILE_NAME_INFORMATION;PFILE_NAME_INFORMATION1891,72807
typedef struct _FILE_RENAME_INFORMATION 1893,72918
    BOOLEAN ReplaceIfExists;1894,72960
    HANDLE RootDirectory;1895,72989
    ULONG FileNameLength;1896,73015
    WCHAR FileName[FileName1897,73041
} FILE_RENAME_INFORMATION, *PFILE_RENAME_INFORMATION;PFILE_RENAME_INFORMATION1898,73083
typedef struct _FILE_ATTRIBUTE_TAG_INFORMATION 1900,73138
    ULONG FileAttributes;1901,73202
    ULONG ReparseTag;1902,73267
} FILE_ATTRIBUTE_TAG_INFORMATION, *PFILE_ATTRIBUTE_TAG_INFORMATION;PFILE_ATTRIBUTE_TAG_INFORMATION1903,73332
typedef struct _FILE_DISPOSITION_INFORMATION 1905,73467
    BOOLEAN DeleteFile;1906,73532
} FILE_DISPOSITION_INFORMATION, *PFILE_DISPOSITION_INFORMATION;PFILE_DISPOSITION_INFORMATION1907,73597
typedef struct _FILE_END_OF_FILE_INFORMATION 1909,73727
    LARGE_INTEGER EndOfFile;1910,73792
} FILE_END_OF_FILE_INFORMATION, *PFILE_END_OF_FILE_INFORMATION;PFILE_END_OF_FILE_INFORMATION1911,73857
typedef struct _FILE_VALID_DATA_LENGTH_INFORMATION 1913,73987
    LARGE_INTEGER ValidDataLength;1914,74076
} FILE_VALID_DATA_LENGTH_INFORMATION, *PFILE_VALID_DATA_LENGTH_INFORMATION;PFILE_VALID_DATA_LENGTH_INFORMATION1915,74165
typedef enum {WAIT_TIMEDOUT,WAIT_TIMEDOUT1924,74408
typedef enum {WAIT_TIMEDOUT, WAIT_SIGNALED,1924,74408
typedef enum {WAIT_TIMEDOUT, WAIT_SIGNALED, WAIT_ERROR}WAIT_ERROR1924,74408
typedef enum {WAIT_TIMEDOUT, WAIT_SIGNALED, WAIT_ERROR} wait_status_t;1924,74408
#define INFINITE_WAIT 1925,74479
#define TIMER_UNITS_PER_MILLISECOND 1946,75039
#define GET_OWN_CONTEXT(2022,77834
    X64_PEB_TIB_OFFSET 2049,79061
    X64_PEB_TIB_OFFSET        = 0x060,x0602049,79061
    X64_LDR_PEB_OFFSET 2050,79100
    X64_LDR_PEB_OFFSET        = 0x018,x0182050,79100
typedef struct _module_handle_t *module_handle_t;module_handle_t2096,80439
typedef void *module_base_t;module_base_t2097,80489
#define __IMAGE_COR20_HEADER_DEFINED__2112,80794
typedef enum replaces_cor_hdr_numeric_defines_t2114,80834
    COMIMAGE_FLAGS_ILONLY 2117,80918
    COMIMAGE_FLAGS_ILONLY               =0x00000001,x000000012117,80918
    COMIMAGE_FLAGS_32BITREQUIRED 2118,80971
    COMIMAGE_FLAGS_32BITREQUIRED        =0x00000002,x000000022118,80971
    COMIMAGE_FLAGS_IL_LIBRARY 2119,81024
    COMIMAGE_FLAGS_IL_LIBRARY           =0x00000004,x000000042119,81024
    COMIMAGE_FLAGS_STRONGNAMESIGNED 2120,81077
    COMIMAGE_FLAGS_STRONGNAMESIGNED     =0x00000008,x000000082120,81077
    COMIMAGE_FLAGS_TRACKDEBUGDATA 2121,81130
    COMIMAGE_FLAGS_TRACKDEBUGDATA       =0x00010000,x000100002121,81130
    COR_VERSION_MAJOR_V2 2124,81212
    COR_VERSION_MAJOR 2125,81256
    COR_VERSION_MAJOR                   =COR_VERSION_MAJOR_V2,2125,81256
    COR_VERSION_MINOR 2126,81319
    COR_DELETED_NAME_LENGTH 2127,81363
    COR_VTABLEGAP_NAME_LENGTH 2128,81407
    NATIVE_TYPE_MAX_CB 2131,81496
    COR_ILMETHOD_SECT_SMALL_MAX_DATASIZE=2132,81543
    COR_ILMETHOD_SECT_SMALL_MAX_DATASIZE=0xFF,xFF2132,81543
    IMAGE_COR_MIH_METHODRVA 2135,81621
    IMAGE_COR_MIH_METHODRVA             =0x01,x012135,81621
    IMAGE_COR_MIH_EHRVA 2136,81668
    IMAGE_COR_MIH_EHRVA                 =0x02,x022136,81668
    IMAGE_COR_MIH_BASICBLOCK 2137,81719
    IMAGE_COR_MIH_BASICBLOCK            =0x08,x082137,81719
    COR_VTABLE_32BIT 2140,81788
    COR_VTABLE_32BIT                    =0x01,x012140,81788
    COR_VTABLE_64BIT 2141,81885
    COR_VTABLE_64BIT                    =0x02,x022141,81885
    COR_VTABLE_FROM_UNMANAGED 2142,81982
    COR_VTABLE_FROM_UNMANAGED           =0x04,x042142,81982
    COR_VTABLE_CALL_MOST_DERIVED 2143,82076
    COR_VTABLE_CALL_MOST_DERIVED        =0x10,x102143,82076
    IMAGE_COR_EATJ_THUNK_SIZE 2146,82192
    MAX_CLASS_NAME 2150,82360
    MAX_PACKAGE_NAME 2151,82407
} replaces_cor_hdr_numeric_defines_t;2152,82454
typedef struct IMAGE_COR20_HEADER2155,82523
    DWORD                   cb;2158,82584
    WORD                    MajorRuntimeVersion;2159,82630
    WORD                    MinorRuntimeVersion;2160,82679
    IMAGE_DATA_DIRECTORY    MetaData;2163,82777
    DWORD                   Flags;2164,82823
    DWORD                   EntryPointToken;2165,82869
    IMAGE_DATA_DIRECTORY    Resources;2168,82946
    IMAGE_DATA_DIRECTORY    StrongNameSignature;2169,82985
    IMAGE_DATA_DIRECTORY    CodeManagerTable;2172,83080
    IMAGE_DATA_DIRECTORY    VTableFixups;2173,83126
    IMAGE_DATA_DIRECTORY    ExportAddressTableJumps;2174,83168
    IMAGE_DATA_DIRECTORY    ManagedNativeHeader;2177,83286
} IMAGE_COR20_HEADER, *PIMAGE_COR20_HEADER;PIMAGE_COR20_HEADER2179,83340
#define IMAGE_SCN_ALIGN_MASK 2185,83457
#define MAX_OBJECT_NAME_LENGTH 2205,84133
typedef struct _OBJECT_NAME_INFORMATION 2206,84173
    UNICODE_STRING ObjectName;2207,84215
    wchar_t object_name_buffer[object_name_buffer2210,84364
} OBJECT_NAME_INFORMATION, *POBJECT_NAME_INFORMATION;POBJECT_NAME_INFORMATION2211,84420
#define HEAP_CLASS_PRIVATE 2441,93429

win32/aslr.h,8020
#define ASLR_H42,1878
    ASLR_DISABLED 48,1956
    ASLR_DISABLED          = 0x00,x0048,1956
    ASLR_DLL 51,2041
    ASLR_DLL               = 0x01,x0151,2041
    ASLR_STACK 52,2113
    ASLR_STACK             = 0x02,x0252,2113
    ASLR_HEAP 55,2264
    ASLR_HEAP              = 0x04,x0455,2264
    ASLR_MAPPED 56,2343
    ASLR_MAPPED            = 0x08,x0856,2343
    ASLR_EXECUTABLE 57,2416
    ASLR_EXECUTABLE        = 0x10,x1057,2416
    ASLR_PROCESS_PARAM 59,2492
    ASLR_PROCESS_PARAM     = 0x20,x2059,2492
    ASLR_HEAP_FILL 67,2863
    ASLR_HEAP_FILL         = 0x40,x4067,2863
    ASLR_TEB 68,2947
    ASLR_TEB               = 0x80,x8068,2947
    ASLR_RANGE_BOTTOM_UP 89,3987
    ASLR_RANGE_BOTTOM_UP   = 0x00100,x0010089,3987
    ASLR_RANGE_TOP_DOWN 90,4059
    ASLR_RANGE_TOP_DOWN    = 0x00200,x0020090,4059
    ASLR_RANGE_RANDOM 93,4256
    ASLR_RANGE_RANDOM      = 0x00400,x0040093,4256
    ASLR_SHARE_DR_DLL 99,4597
    ASLR_SHARE_DR_DLL      = 0x10000000,x1000000099,4597
    ASLR_CLIENT_DEFAULT 105,4903
    ASLR_CLIENT_DEFAULT = ASLR_DLL 105,4903
    ASLR_CLIENT_DEFAULT = ASLR_DLL | ASLR_STACK 105,4903
    ASLR_CLIENT_DEFAULT = ASLR_DLL | ASLR_STACK | ASLR_HEAP,105,4903
} aslr_option_t;106,4974
    ASLR_PROCESS_PRIVATE 116,5307
    ASLR_PROCESS_PRIVATE           = 0x1,x1116,5307
    ASLR_SHARED_PER_USER 118,5389
    ASLR_SHARED_PER_USER           = 0x2,x2118,5389
    ASLR_SHARED_INHERIT 128,5877
    ASLR_SHARED_INHERIT            = 0x4,x4128,5877
    ASLR_SHARED_IN_SESSION 146,6639
    ASLR_SHARED_IN_SESSION         = 0x8,x8146,6639
    ASLR_SHARED_CONTENTS 160,7414
    ASLR_SHARED_CONTENTS           = 0x10,x10160,7414
    ASLR_SHARED_PUBLISHER 167,7698
    ASLR_SHARED_PUBLISHER          = 0x20,x20167,7698
    ASLR_SHARED_SUBSCRIBER 173,7942
    ASLR_SHARED_SUBSCRIBER         = 0x40,x40173,7942
    ASLR_SHARED_ANONYMOUS_CONSUMER 180,8212
    ASLR_SHARED_ANONYMOUS_CONSUMER = 0x80,x80180,8212
    ASLR_SHARED_FILE_PRODUCER 193,8808
    ASLR_SHARED_FILE_PRODUCER      = 0x100,x100193,8808
    ASLR_SHARED_WORKLIST 203,9210
    ASLR_SHARED_WORKLIST           = 0x200,x200203,9210
    ASLR_SHARED_INITIALIZE 209,9430
    ASLR_SHARED_INITIALIZE         = 0x1000,x1000209,9430
    ASLR_SHARED_INITIALIZE_NONPERMANENT 221,10069
    ASLR_SHARED_INITIALIZE_NONPERMANENT = 0x2000,x2000221,10069
    ASLR_PERSISTENT 228,10395
    ASLR_PERSISTENT                = 0x100000,x100000228,10395
    ASLR_ALLOW_ORIGINAL_CLOBBER 235,10697
    ASLR_ALLOW_ORIGINAL_CLOBBER  = 0x1000000,x1000000235,10697
    ASLR_RANDOMIZE_EXECUTABLE 247,11331
    ASLR_RANDOMIZE_EXECUTABLE    = 0x2000000,x2000000247,11331
    ASLR_AVOID_NET20_NATIVE_IMAGES 260,11964
    ASLR_AVOID_NET20_NATIVE_IMAGES = 0x4000000,x4000000260,11964
    ASLR_CACHE_DEFAULT 263,12072
    ASLR_CACHE_DEFAULT = ASLR_SHARED_PER_USER 263,12072
                         ASLR_SHARED_CONTENTS 264,12131
               ASLR_SHARED_ANONYMOUS_CONSUMER 265,12190
                     ASLR_SHARED_FILE_PRODUCER 266,12249
} aslr_cache_t;267,12308
    ASLR_CACHE_LIST_DEFAULT,272,12453
    ASLR_CACHE_LIST_INCLUDE,273,12482
    ASLR_CACHE_LIST_EXCLUDE 274,12545
} aslr_cache_list_t;278,12722
    ASLR_PERSISTENT_LAX 290,13212
    ASLR_PERSISTENT_LAX           = 0x0,x0290,13212
    ASLR_PERSISTENT_PARANOID 296,13392
    ASLR_PERSISTENT_PARANOID      = 0x1,x1296,13392
    ASLR_PERSISTENT_SOURCE_DIGEST 302,13602
    ASLR_PERSISTENT_SOURCE_DIGEST = 0x2,x2302,13602
    ASLR_PERSISTENT_TARGET_DIGEST 307,13790
    ASLR_PERSISTENT_TARGET_DIGEST = 0x4,x4307,13790
    ASLR_PERSISTENT_MODIFIED_TIME 323,14620
    ASLR_PERSISTENT_MODIFIED_TIME = 0x8,x8323,14620
    ASLR_PERSISTENT_NOTOWNER_PARANOIA 336,15237
    ASLR_PERSISTENT_NOTOWNER_PARANOIA = 0x10,x10336,15237
    ASLR_PERSISTENT_SHORT_DIGESTS 344,15602
    ASLR_PERSISTENT_SHORT_DIGESTS     = 0x20,x20344,15602
    ASLR_PERSISTENT_PARANOID_TRANSFORM_EXPLICITLY 352,15951
    ASLR_PERSISTENT_PARANOID_TRANSFORM_EXPLICITLY = 0x10000,x10000352,15951
    ASLR_PERSISTENT_PARANOID_PREFIX 362,16468
    ASLR_PERSISTENT_PARANOID_PREFIX = 0x20000,x20000362,16468
} aslr_consistency_check_t;375,17079
    ASLR_NO_ACTION 380,17158
    ASLR_NO_ACTION      = 0x0,x0380,17158
    ASLR_TRACK_AREAS 383,17269
    ASLR_TRACK_AREAS    = 0x1,x1383,17269
    ASLR_AVOID_AREAS 384,17338
    ASLR_AVOID_AREAS    = 0x2,x2384,17338
    ASLR_RESERVE_AREAS 385,17408
    ASLR_RESERVE_AREAS  = 0x4,x4385,17408
    ASLR_DETECT_EXECUTE 394,17759
    ASLR_DETECT_EXECUTE = 0x10,x10394,17759
    ASLR_DETECT_READ 397,17926
    ASLR_DETECT_READ    = 0x20,x20397,17926
    ASLR_DETECT_WRITE 398,17968
    ASLR_DETECT_WRITE   = 0x40,x40398,17968
    ASLR_REPORT 401,18046
    ASLR_REPORT         = 0x100,x100401,18046
    ASLR_HANDLING 407,18270
    ASLR_HANDLING =     0x1000,x1000407,18270
    ASLR_NORMALIZE_ID 411,18466
    ASLR_NORMALIZE_ID = 0x10000,x10000411,18466
} aslr_action_t;414,18673
    ASLR_INTERNAL_DEFAULT 418,18762
    ASLR_INTERNAL_DEFAULT       = 0x0000,x0000418,18762
    ASLR_INTERNAL_SAME_STRESS 422,18968
    ASLR_INTERNAL_SAME_STRESS   = 0x1000,x1000422,18968
    ASLR_INTERNAL_RANGE_NONE 425,19086
    ASLR_INTERNAL_RANGE_NONE    = 0x2000,x2000425,19086
    ASLR_INTERNAL_SHARED_NONUNIQUE 427,19130
    ASLR_INTERNAL_SHARED_NONUNIQUE = 0x800000,x800000427,19130
    ASLR_INTERNAL_SHARED_APPFILE 430,19218
    ASLR_INTERNAL_SHARED_APPFILE = 0x1000000,x1000000430,19218
    ASLR_INTERNAL_SHARED_AND_PRIVATE 433,19328
    ASLR_INTERNAL_SHARED_AND_PRIVATE = 0x2000000,x2000000433,19328
} aslr_internal_option_t;439,19577
    bool           sys_aslr_clobbered;442,19621
    HANDLE randomized_section_handle;450,20010
    app_pc original_section_base;451,20079
    uint   original_section_timestamp;452,20141
    uint   original_section_checksum;453,20202
    HANDLE original_image_section_handle;454,20262
    HANDLE last_app_section_handle;460,20529
    process_id_t last_child_padded;470,21077
} aslr_syscall_context_t;471,21123
#define ASLR_INVALID_SECTION_BASE 473,21150
#define MAX_PUBLISHED_SECTION_NAME 476,21263
aslr_timestamp_transformation(522,22957
    GBOP_DISABLED 546,23807
    GBOP_DISABLED          = 0x0,x0546,23807
    GBOP_IS_EXECUTABLE 557,24262
    GBOP_IS_EXECUTABLE     = 0x1,x1557,24262
    GBOP_IS_X 558,24337
    GBOP_IS_X              = 0x2,x2558,24337
    GBOP_IS_IMAGE 559,24421
    GBOP_IS_IMAGE          = 0x4,x4559,24421
    GBOP_IS_NOT_STACK 566,24748
    GBOP_IS_NOT_STACK      = 0x8,x8566,24748
    GBOP_CHECK_INSTR_TYPE 578,25227
    GBOP_CHECK_INSTR_TYPE  = 0x10,x10578,25227
    GBOP_IS_CALL 579,25318
    GBOP_IS_CALL           = 0x20,x20579,25318
    GBOP_IS_JMP 580,25402
    GBOP_IS_JMP            = 0x40,x40580,25402
    GBOP_IS_HOTPATCH_JMP 581,25492
    GBOP_IS_HOTPATCH_JMP   = 0x80,x80581,25492
    GBOP_EMULATE_SOURCE 595,26163
    GBOP_EMULATE_SOURCE   = 0x100,x100595,26163
    GBOP_IS_RET_TO_ENTRY 611,26961
    GBOP_IS_RET_TO_ENTRY  = 0x00200,x00200611,26961
    GBOP_IS_DGC 631,27923
    GBOP_IS_DGC           = 0x02000,x02000631,27923
    GBOP_IS_FUTURE_EXEC 642,28585
    GBOP_IS_FUTURE_EXEC   = 0x04000,x04000642,28585
    GBOP_DIAGNOSE_SOURCE 647,28713
    GBOP_DIAGNOSE_SOURCE  = 0x10000,x10000647,28713
    GBOP_CLIENT_DEFAULT 659,29246
    GBOP_CLIENT_DEFAULT = GBOP_IS_DGC 659,29246
    GBOP_CLIENT_DEFAULT = GBOP_IS_DGC | GBOP_IS_FUTURE_EXEC 659,29246
                          GBOP_CHECK_INSTR_TYPE 660,29331
                          GBOP_CHECK_INSTR_TYPE | GBOP_IS_CALL 660,29331
                          GBOP_IS_EXECUTABLE 661,29415
                          GBOP_IS_EXECUTABLE | GBOP_IS_X 661,29415
                          GBOP_IS_EXECUTABLE | GBOP_IS_X | GBOP_IS_IMAGE 661,29415
    const char *mod_name;mod_name667,29549
    const char *func_name;func_name668,29575
} gbop_hook_desc_t;669,29602

win32/os_exports.h,6168
#define _OS_EXPORTS_H_ 43,2007
typedef ushort cxt_seg_t;47,2126
# define CXT_XIP 48,2152
# define CXT_XAX 49,2173
# define CXT_XCX 50,2194
# define CXT_XDX 51,2215
# define CXT_XBX 52,2236
# define CXT_XSP 53,2257
# define CXT_XBP 54,2278
# define CXT_XSI 55,2299
# define CXT_XDI 56,2320
# define CXT_XMM(60,2497
# define CXT_XFLAGS 64,2748
typedef DWORD cxt_seg_t;66,2781
# define CXT_XIP 67,2806
# define CXT_XAX 68,2827
# define CXT_XCX 69,2848
# define CXT_XDX 70,2869
# define CXT_XBX 71,2890
# define CXT_XSP 72,2911
# define CXT_XBP 73,2932
# define CXT_XSI 74,2953
# define CXT_XDI 75,2974
# define CXT_XFLAGS 76,2995
# define FXSAVE_XMM0_OFFSET 81,3213
# define CXT_XMM(82,3245
#define WINDOWS_VERSION_8 94,3685
#define WINDOWS_VERSION_7 95,3719
#define WINDOWS_VERSION_VISTA 96,3753
#define WINDOWS_VERSION_2003 97,3787
#define WINDOWS_VERSION_XP 98,3821
#define WINDOWS_VERSION_2000 99,3855
#define WINDOWS_VERSION_NT 100,3889
    EXCEPTION_LIST_TIB_OFFSET 112,4328
    EXCEPTION_LIST_TIB_OFFSET = 0x000,x000112,4328
    TOP_STACK_TIB_OFFSET 113,4367
    TOP_STACK_TIB_OFFSET      = 0x008,x008113,4367
    BASE_STACK_TIB_OFFSET 114,4406
    BASE_STACK_TIB_OFFSET     = 0x010,x010114,4406
    FIBER_DATA_TIB_OFFSET 115,4445
    FIBER_DATA_TIB_OFFSET     = 0x020,x020115,4445
    SELF_TIB_OFFSET 116,4484
    SELF_TIB_OFFSET           = 0x030,x030116,4484
    PID_TIB_OFFSET 117,4523
    PID_TIB_OFFSET            = 0x040,x040117,4523
    TID_TIB_OFFSET 118,4562
    TID_TIB_OFFSET            = 0x048,x048118,4562
    ERRNO_TIB_OFFSET 119,4601
    ERRNO_TIB_OFFSET          = 0x068,x068119,4601
    WOW64_TIB_OFFSET 120,4640
    WOW64_TIB_OFFSET          = 0x100,x100120,4640
    PEB_TIB_OFFSET 121,4679
    PEB_TIB_OFFSET            = 0x060,x060121,4679
    FLS_DATA_TIB_OFFSET 122,4718
    FLS_DATA_TIB_OFFSET       = 0x17c8,x17c8122,4718
    NT_RPC_TIB_OFFSET 123,4758
    NT_RPC_TIB_OFFSET         = 0x1698,x1698123,4758
    NLS_CACHE_TIB_OFFSET 124,4798
    NLS_CACHE_TIB_OFFSET      = 0x17a0,x17a0124,4798
    EXCEPTION_LIST_TIB_OFFSET 126,4844
    EXCEPTION_LIST_TIB_OFFSET = 0x00,x00126,4844
    TOP_STACK_TIB_OFFSET 127,4882
    TOP_STACK_TIB_OFFSET      = 0x04,x04127,4882
    BASE_STACK_TIB_OFFSET 128,4920
    BASE_STACK_TIB_OFFSET     = 0x08,x08128,4920
    FIBER_DATA_TIB_OFFSET 129,4958
    FIBER_DATA_TIB_OFFSET     = 0x10,x10129,4958
    SELF_TIB_OFFSET 130,4996
    SELF_TIB_OFFSET           = 0x18,x18130,4996
    PID_TIB_OFFSET 131,5034
    PID_TIB_OFFSET            = 0x20,x20131,5034
    TID_TIB_OFFSET 132,5072
    TID_TIB_OFFSET            = 0x24,x24132,5072
    ERRNO_TIB_OFFSET 133,5110
    ERRNO_TIB_OFFSET          = 0x34,x34133,5110
    WOW64_TIB_OFFSET 134,5148
    WOW64_TIB_OFFSET          = 0xC0,xC0134,5148
    PEB_TIB_OFFSET 135,5186
    PEB_TIB_OFFSET            = 0x30,x30135,5186
    FLS_DATA_TIB_OFFSET 136,5224
    FLS_DATA_TIB_OFFSET       = 0xfb4,xfb4136,5224
    NT_RPC_TIB_OFFSET 137,5263
    NT_RPC_TIB_OFFSET         = 0xf1c,xf1c137,5263
    NLS_CACHE_TIB_OFFSET 138,5302
    NLS_CACHE_TIB_OFFSET      = 0xfa0,xfa0138,5302
# define SEG_TLS 143,5363
# define LIB_SEG_TLS 144,5387
# define SEG_TLS 146,5441
# define LIB_SEG_TLS 147,5485
#define get_tls(151,5630
set_tls(155,5755
#define get_own_teb(161,5965
#define OS_ALLOC_GRANULARITY 167,6189
#define MAP_FILE_VIEW_ALIGNMENT 168,6229
#define CONTEXT_HEAP_SIZE(184,6852
#define CONTEXT_HEAP_SIZE_OPAQUE 185,6937
# define ACTUAL_PRAGMA(216,8175
# define ACTUAL_PRAGMA(218,8222
#define START_DATA_SECTION(220,8270
#define VAR_IN_SECTION(221,8341
#define END_DATA_SECTION(222,8384
#define START_DO_NOT_OPTIMIZE 223,8439
#define END_DO_NOT_OPTIMIZE 224,8505
#define VSYSCALL_PAGE_START_BOOTSTRAP_VALUE 253,9396
#define VSYSCALL_BOOTSTRAP_ADDR 254,9474
#define VSYSCALL_AFTER_SYSCALL_BOOTSTRAP_VALUE 255,9540
file_t profile_file;274,10287
mutex_t profile_dump_lock;275,10308
typedef struct _profile_t 277,10336
    void *start;start278,10364
    void *end;end279,10381
    uint bucket_shift;280,10396
    uint *buffer;buffer281,10419
    size_t buffer_size;282,10437
    bool enabled;283,10476
    dcontext_t *dcontext;dcontext284,10494
    HANDLE handle;285,10520
} profile_t;286,10539
    HIDE_FROM_QUERY_TYPE_PROTECT 320,11285
    HIDE_FROM_QUERY_TYPE_PROTECT   = 0x1,x1320,11285
    HIDE_FROM_QUERY_BASE_SIZE 321,11355
    HIDE_FROM_QUERY_BASE_SIZE      = 0x2,x2321,11355
    HIDE_FROM_QUERY_RETURN_INVALID 323,11512
    HIDE_FROM_QUERY_RETURN_INVALID = 0x4,x4323,11512
enum tls_flags 328,11691
    TLS_FLAG_BITMAP_TOP_DOWN 329,11708
    TLS_FLAG_BITMAP_TOP_DOWN  = 0x1,x1329,11708
    TLS_FLAG_CACHE_LINE_START 332,11918
    TLS_FLAG_CACHE_LINE_START = 0x2,x2332,11918
    TLS_FLAG_BITMAP_FILL 336,12195
    TLS_FLAG_BITMAP_FILL      = 0x4,x4336,12195
    OS_ASLR_DISABLE_ASLR_ALL 347,12681
    OS_ASLR_DISABLE_ASLR_ALL      = 0x01,x01347,12681
    OS_ASLR_DISABLE_PCACHE_ALL 348,12757
    OS_ASLR_DISABLE_PCACHE_ALL    = 0x02,x02348,12757
    OS_ASLR_DISABLE_ASLR_DETECT 353,12956
    OS_ASLR_DISABLE_ASLR_DETECT   = 0x10,x10353,12956
    OS_ASLR_DISABLE_PCACHE_DETECT 354,13018
    OS_ASLR_DISABLE_PCACHE_DETECT = 0x20,x20354,13018
    DETACH_UNHANDLED_VIOLATION 361,13258
    DETACH_UNHANDLED_VIOLATION   = 0x01,x01361,13258
    DETACH_UNSUPPORTED_MODULE 364,13432
    DETACH_UNSUPPORTED_MODULE    = 0x02,x02364,13432
    DETACH_ON_TERMINATE 371,13850
    DETACH_ON_TERMINATE          = 0x010,x010371,13850
    DETACH_ON_TERMINATE_NO_CLEAN 373,13948
    DETACH_ON_TERMINATE_NO_CLEAN = 0x020,x020373,13948
    DETACH_ON_TERMINATE_NO_KILL 379,14233
    DETACH_ON_TERMINATE_NO_KILL  = 0x040,x040379,14233
    DETACH_ON_TERMINATE_NO_LOCKS 384,14525
    DETACH_ON_TERMINATE_NO_LOCKS = 0x080,x080384,14525
    DETACH_ON_TERMINATE_NO_HANG 387,14695
    DETACH_ON_TERMINATE_NO_HANG  = 0x100,x100387,14695
    DETACH_NORMAL_TYPE 396,14965
    DETACH_BAD_STATE 397,15003
    DETACH_BAD_STATE_NO_CLEANUP 398,15041
get_app_pc_from_intercept_pc_if_necessary(474,17798

win32/early_inject_helper1.c,73
#define WIN32_LEAN_AND_MEAN41,2034
__declspec(44,2084
DllMain(53,2359

win32/syscall.c,5254
int *syscalls syscalls49,2103
int *wow64_index wow64_index51,2210
app_pc int_syscall_address 59,2611
app_pc sysenter_ret_address 65,3029
#define SNAPSHOT_THRESHOLD 74,3487
const char * const syscall_names[syscall_names78,3589
#define SYSCALL(79,3628
#undef SYSCALL84,3920
const int windows_8_x64_syscalls[windows_8_x64_syscalls86,3938
#define SYSCALL(87,3977
#undef SYSCALL92,4265
const int windows_8_wow64_syscalls[windows_8_wow64_syscalls94,4283
#define SYSCALL(95,4324
#undef SYSCALL100,4612
const int windows_8_x86_syscalls[windows_8_x86_syscalls102,4630
#define SYSCALL(103,4669
#undef SYSCALL108,4957
const int windows_7_x64_syscalls[windows_7_x64_syscalls110,4975
#define SYSCALL(111,5014
#undef SYSCALL116,5302
const int windows_7_syscalls[windows_7_syscalls118,5320
#define SYSCALL(119,5355
#undef SYSCALL124,5643
const int windows_vista_sp1_x64_syscalls[windows_vista_sp1_x64_syscalls126,5661
#define SYSCALL(127,5708
#undef SYSCALL132,6001
const int windows_vista_sp1_syscalls[windows_vista_sp1_syscalls134,6019
#define SYSCALL(135,6062
#undef SYSCALL140,6351
const int windows_vista_sp0_x64_syscalls[windows_vista_sp0_x64_syscalls142,6369
#define SYSCALL(143,6416
#undef SYSCALL148,6709
const int windows_vista_sp0_syscalls[windows_vista_sp0_syscalls150,6727
#define SYSCALL(151,6770
#undef SYSCALL156,7059
const int windows_2003_syscalls[windows_2003_syscalls158,7077
#define SYSCALL(159,7115
#undef SYSCALL164,7402
const int windows_XP_x64_syscalls[windows_XP_x64_syscalls166,7420
#define SYSCALL(167,7460
#undef SYSCALL172,7747
const int windows_XP_wow64_index[windows_XP_wow64_index175,7810
#define SYSCALL(176,7849
#undef SYSCALL181,8137
const int windows_XP_syscalls[windows_XP_syscalls183,8155
#define SYSCALL(184,8191
#undef SYSCALL189,8476
const int windows_2000_syscalls[windows_2000_syscalls191,8494
#define SYSCALL(192,8532
#undef SYSCALL197,8818
const int windows_NT_sp4_syscalls[windows_NT_sp4_syscalls199,8836
#define SYSCALL(200,8876
#undef SYSCALL205,9164
const int windows_NT_sp3_syscalls[windows_NT_sp3_syscalls208,9244
#define SYSCALL(209,9284
#undef SYSCALL214,9572
const int windows_NT_sp0_syscalls[windows_NT_sp0_syscalls217,9652
#define SYSCALL(218,9692
#undef SYSCALL223,9980
const uint syscall_argsz[syscall_argsz227,10035
# define SYSCALL(229,10077
# define SYSCALL(234,10352
#undef SYSCALL240,10650
static const int syscall_requires_action[syscall_requires_action246,10828
#define SYSCALL(247,10875
#undef SYSCALL252,11161
static byte *syscall_trampoline_pc[syscall_trampoline_pc256,11226
static app_pc syscall_trampoline_skip_pc[syscall_trampoline_skip_pc257,11271
static app_pc syscall_trampoline_hook_pc[syscall_trampoline_hook_pc258,11322
static app_pc syscall_trampoline_copy_pc[syscall_trampoline_copy_pc259,11373
static byte syscall_trampoline_gbop_fpo_offset[syscall_trampoline_gbop_fpo_offset268,11746
#define MAX_NTOSKRNL_SYSCALL_NUM 320,14167
ignorable_system_call(323,14214
optimizable_system_call(345,15169
syscall_while_native(367,15788
intercept_syscall_for_thin_client(542,25256
intercept_native_syscall(558,25824
init_syscall_trampolines(594,27385
exit_syscall_trampolines(637,29676
check_syscall_array_sizes(655,30252
check_syscall_numbers(672,31124
align_page_boundary(705,32377
is_newly_created_process(721,33012
syscall_uses_wow64_index(799,36546
syscall_uses_edx_param_base(806,36692
#define SYSCALL_PC(820,37393
#define SET_RETURN_VAL(830,37827
pre_system_call_param_base(842,38193
presys_CreateProcess(859,38649
presys_CreateUserProcess(904,40639
presys_CreateThread(983,44492
presys_CreateThreadEx(1030,46824
presys_CreateWorkerFactory(1073,48629
static const char * const env_to_propagate[env_to_propagate1102,49594
static const wchar_t * const wenv_to_propagate[wenv_to_propagate1109,49786
#define NUM_ENV_TO_PROPAGATE 1116,49992
add_dr_env_vars(1120,50141
not_first_thread_in_new_process(1299,57446
presys_ResumeThread(1310,57801
presys_TerminateProcess(1382,61293
presys_TerminateThread(1469,65596
presys_SetContextThread(1546,69150
is_cb_return_syscall(1677,75644
presys_CallbackReturn(1690,76032
check_for_stack_free(1727,77960
presys_AllocateVirtualMemory(1759,79519
presys_FreeVirtualMemory(1851,84180
presys_ProtectVirtualMemory(1979,89681
presys_MapViewOfSection(2132,97047
presys_UnmapViewOfSection(2175,98950
presys_FlushInstructionCache(2250,102119
presys_CreateSection(2292,103675
presys_Close(2325,105101
presys_OpenFile(2339,105506
pre_system_call(2371,106860
postsys_CreateUserProcess(2599,116977
postsys_GetContextThread(2709,122479
postsys_SuspendThread(2856,129362
postsys_AllocateVirtualMemory(3002,136895
postsys_QueryVirtualMemory(3149,144072
postsys_create_or_open_section(3246,149216
postsys_CreateSection(3332,153515
postsys_OpenSection(3372,155328
postsys_MapViewOfSection(3457,159206
postsys_UnmapViewOfSection(3609,166174
postsys_DuplicateObject(3643,167617
void post_system_call(3671,169009
dr_syscall_get_param(3903,180494
dr_syscall_set_param(3919,181130
dr_syscall_get_result(3936,181768
dr_syscall_set_result(3946,182064
dr_syscall_set_sysnum(3957,182426
dr_syscall_invoke_another(3969,182824

win32/os_private.h,5666
#define _OS_PRIVATE_H_ 42,1937
#define GLOBAL_NT_PREFIX 47,2056
typedef struct _os_thread_data_t 53,2237
    byte *stack_base;stack_base60,2690
    byte *stack_top;stack_top61,2712
    bool teb_stack_no_longer_valid;62,2733
} os_thread_data_t;63,2769
    byte *dr_base;dr_base73,3016
    byte *ntdll_base;ntdll_base74,3035
    byte *tofree_base;tofree_base75,3057
    byte *hook_location;hook_location76,3080
    char dynamorio_lib_path[dynamorio_lib_path77,3105
} earliest_args_t;78,3144
#define EARLY_INJECT_HOOK_SIZE 85,3418
#define SYSCALL_NOT_PRESENT 155,5020
#define SYSCALL(193,6221
#undef SYSCALL198,6514
    SYS_MAX,199,6529
#define SYSCALL_PARAM_MAX_OFFSET 212,7188
# define SYSCALL_PARAM_OFFSET(215,7307
# define SYSCALL_PARAM_OFFSET(224,7680
sys_param_addr(233,8052
sys_param(251,8517
postsys_param(261,8831
#define INTERCEPTION_CODE_SIZE 304,10123
#define THREAD_START_ADDR 307,10243
#define THREAD_START_ARG 308,10299
#define UNDER_DYN_HACK 319,10444
#define IS_UNDER_DYN_HACK(320,10472
#define INTERCEPT_POINT(350,11437
#define INTERCEPT_ALL_POINTS 351,11475
    INTERCEPT_ALL_POINTS364,12101
} retakeover_point_t;365,12126
#undef INTERCEPT_POINT366,12148
# undef CONTEXT_XSTATE 397,13394
#define CONTEXT_XSTATE 409,13960
#define CONTEXT_XMM_FLAG 410,13998
#define CONTEXT_YMM_FLAG 411,14087
#define CONTEXT_PRESERVE_XMM 412,14127
#define CONTEXT_PRESERVE_YMM 413,14212
#define CONTEXT_DR_STATE_NO_YMM 414,14257
#define CONTEXT_DR_STATE 416,14411
#define CONTEXT_DR_STATE_ALLPROC 421,14699
#define XSTATE_HEADER_SIZE 424,14859
#define YMMH_AREA(425,14907
#define MAX_CONTEXT_64_SIZE 426,14967
# define MAX_CONTEXT_SIZE 428,15043
# define MAX_CONTEXT_SIZE 430,15101
      EXCEPTION_INFORMATION_READ_EXECUTE_FAULT 434,15181
      EXCEPTION_INFORMATION_WRITE_FAULT 437,15328
      EXCEPTION_INFORMATION_EXECUTE_FAULT 438,15380
typedef struct DECLSPEC_ALIGN(451,15906
typedef struct _XMM_SAVE_AREA32 456,16006
    WORD   ControlWord;457,16040
    WORD   StatusWord;458,16064
    BYTE  TagWord;459,16087
    BYTE  Reserved1;460,16106
    WORD   ErrorOpcode;461,16127
    DWORD ErrorOffset;462,16151
    WORD   ErrorSelector;463,16174
    WORD   Reserved2;464,16200
    DWORD DataOffset;465,16222
    WORD   DataSelector;466,16244
    WORD   Reserved3;467,16269
    DWORD MxCsr;468,16291
    DWORD MxCsr_Mask;469,16308
    M128A FloatRegisters[FloatRegisters470,16330
    M128A XmmRegisters[XmmRegisters471,16359
    BYTE  Reserved4[Reserved4472,16387
} XMM_SAVE_AREA32, *PXMM_SAVE_AREA32;PXMM_SAVE_AREA32473,16412
typedef XSAVE_FORMAT XMM_SAVE_AREA32,475,16457
typedef XSAVE_FORMAT XMM_SAVE_AREA32, *PXMM_SAVE_AREA32;PXMM_SAVE_AREA32475,16457
typedef struct DECLSPEC_ALIGN(478,16523
            M128A Header[Header558,17760
            M128A Legacy[Legacy559,17789
            M128A Xmm0;560,17818
            M128A Xmm1;561,17842
            M128A Xmm2;562,17866
            M128A Xmm3;563,17890
            M128A Xmm4;564,17914
            M128A Xmm5;565,17938
            M128A Xmm6;566,17962
            M128A Xmm7;567,17986
            M128A Xmm8;568,18010
            M128A Xmm9;569,18034
            M128A Xmm10;570,18058
            M128A Xmm11;571,18083
            M128A Xmm12;572,18108
            M128A Xmm13;573,18133
            M128A Xmm14;574,18158
            M128A Xmm15;575,18183
    } DUMMYUNIONNAME;577,18235
    M128A VectorRegister[VectorRegister583,18298
    DWORD64 VectorControl;584,18328
    DWORD64 DebugControl;590,18411
    DWORD64 LastBranchToRip;591,18437
    DWORD64 LastBranchFromRip;592,18466
    DWORD64 LastExceptionToRip;593,18497
    DWORD64 LastExceptionFromRip;594,18529
} CONTEXT_64,595,18563
} CONTEXT_64, *PCONTEXT_64;PCONTEXT_64595,18563
#define __IMAGE_UNWIND_INFO666,20486
typedef enum _unwind_opcode_t 681,21369
    UWOP_PUSH_NONVOL 682,21401
    UWOP_ALLOC_LARGE,683,21457
    UWOP_ALLOC_SMALL,684,21525
    UWOP_SET_FPREG,685,21592
    UWOP_SAVE_NONVOL,686,21671
    UWOP_SAVE_NONVOL_FAR,687,21748
    UWOP_SAVE_XMM128,688,21828
    UWOP_SAVE_XMM128_FAR,689,21904
    UWOP_PUSH_MACHFRAME 690,21983
} unwind_opcode_t;691,22055
typedef union _unwind_code_t 693,22075
        byte CodeOffset;695,22119
        byte UnwindOp 696,22144
        byte OpInfo 697,22170
    USHORT FrameOffset;699,22203
} unwind_code_t;700,22227
# define UNW_FLAG_EHANDLER 703,22271
# define UNW_FLAG_UHANDLER 704,22304
# define UNW_FLAG_CHAININFO 705,22337
typedef struct _unwind_info_t 708,22378
    byte Version 709,22410
    byte Flags 710,22436
    byte SizeOfProlog;711,22462
    byte CountOfCodes;712,22485
    byte FrameRegister:FrameRegister713,22508
    byte FrameOffset 714,22534
    unwind_code_t UnwindCode[UnwindCode715,22560
    unwind_code_t MoreUnwindCode[MoreUnwindCode719,22786
        OPTIONAL ULONG ExceptionHandler;721,22868
        OPTIONAL ULONG FunctionEntry;722,22909
    OPTIONAL ULONG ExceptionData[ExceptionData724,22954
} unwind_info_t;726,22997
#define UNWIND_INFO_PTR_ADDR(729,23072
#define UNWIND_INFO_PTR_RVA(733,23249
#define UNWIND_INFO_DATA_ADDR(736,23384
#define UNWIND_INFO_DATA_RVA(737,23460
typedef struct _scope_table_t 742,23667
    ULONG Count;743,23699
        ULONG BeginAddress;745,23729
        ULONG EndAddress;746,23757
        ULONG HandlerAddress;747,23783
        ULONG JumpTarget;748,23813
    } ScopeRecord[ScopeRecord749,23839
} scope_table_t;750,23861
#define RVA_TO_VA(756,23951
enum {SYMBOLS_LOGLEVEL SYMBOLS_LOGLEVEL795,24941
#define PAGE_PROTECTION_QUALIFIERS 872,27055
#define IPC_ALERT(880,27280

win32/drmarker.h,1566
#define _DRMARKER_H_44,1979
#define L_DR_MARKER_HOOKED_DLL 52,2042
# define DR_MARKER_HOOKED_DLL 54,2101
# define DR_MARKER_HOOKED_DLL 56,2160
#define DR_MARKER_HOOKED_FUNCTION 59,2210
#define DR_MARKER_HOOKED_FUNCTION_ARGS 60,2269
#define DR_MARKER_HOOKED_FUNCTION_STRING 62,2408
    DR_MARKER_RELEASE_BUILD 65,2494
    DR_MARKER_RELEASE_BUILD  = 0x1,x165,2494
    DR_MARKER_DEBUG_BUILD 66,2530
    DR_MARKER_DEBUG_BUILD    = 0x2,x266,2530
    DR_MARKER_PROFILE_BUILD 67,2566
    DR_MARKER_PROFILE_BUILD  = 0x4,x467,2566
    DR_MARKER_BUILD_TYPES 68,2602
        DR_MARKER_RELEASE_BUILD|DR_MARKER_RELEASE_BUILD69,2634
        DR_MARKER_RELEASE_BUILD|DR_MARKER_DEBUG_BUILD|DR_MARKER_DEBUG_BUILD69,2634
        DR_MARKER_RELEASE_BUILD|DR_MARKER_DEBUG_BUILD|DR_MARKER_PROFILE_BUILDDR_MARKER_PROFILE_BUILD69,2634
#define DR_MARKER_VERSION_1 72,2716
#define DR_MARKER_VERSION_2 73,2746
#define WINDBG_CMD_MAX_LEN 75,2777
typedef struct _dr_marker_t 85,3268
    uint magic1;86,3298
    uint magic2;87,3315
    uint magic3;88,3332
    uint magic4;89,3349
    uint flags;90,3366
    uint build_num;91,3382
    uint dr_marker_version;92,3402
    void *dr_base_addr;dr_base_addr93,3466
    void *dr_generic_nudge_target;dr_generic_nudge_target94,3490
    void *dr_hotp_policy_status_table;dr_hotp_policy_status_table95,3525
    struct _dr_statistics_t *stats;stats96,3564
    char windbg_cmds[windbg_cmds100,3735
} dr_marker_t;104,3900
    DR_MARKER_FOUND 107,3923
    DR_MARKER_NOT_FOUND 108,3966
    DR_MARKER_ERROR 109,4009

win32/diagnost.c,1178
static const char * const separator 63,2939
static const wchar_t * const HKLM_entries[HKLM_entries71,3321
static const wchar_t * const HKCU_entries[HKCU_entries101,5548
diagnostics_log_data(120,6559
open_diagnostics_file(175,9025
#define PRINT_MEM_BUF_BYTE 182,9243
#define PRINT_MEM_BUF_START 184,9321
#define PRINT_MEM_BUF_NO_ALIGN 187,9453
#define PRINT_MEM_BUF_ASCII 190,9559
print_memory_buffer(196,9855
report_addr_info(237,11445
report_src_info(274,13012
report_target_info(333,15397
report_preferred_target_info(347,15939
report_vm_counters(364,16497
report_dcontext_info(390,17473
report_internal_data_structures(448,19917
report_ntdll_info(547,24051
report_thread(598,26241
report_current_process(615,26927
get_system_processes(833,36831
report_processes(865,38101
report_registry_settings(936,40942
report_registry_settings_helper(955,41743
report_autostart_programs(1058,46469
report_intro(1104,48155
report_processor_info(1142,49588
report_system_diagnostics(1182,50962
add_diagnostics_xml_header(1370,60694
report_diagnostics_common(1386,61493
report_diagnostics(1463,65113
append_diagnostics(1502,66425
diagnost_exit(1516,66948

win32/eventlog.c,1736
#define NONCE_LENGTH 47,2029
#define MAX_MESSAGE_SIZE 49,2054
typedef struct eventlog_state_t 52,2164
    HANDLE eventlog_pipe;53,2198
    HANDLE eventlog_completion;54,2224
    uint message_seq;55,2287
    char nonce[nonce56,2339
    mutex_t eventlog_mutex;57,2417
    char outbuf[outbuf61,2736
    size_t outlen;62,2771
    char buf[buf63,2790
    int request_length;64,2822
} eventlog_state_t;65,2846
set_event_source_registry_values(91,3988
init_registry_source(147,5981
#define MAX_SYSLOG_ARGS 208,8382
void os_syslog(210,8493
#define FIELD(238,9527
#define VARFIELD(246,9888
#define PADDING(255,10282
append_string(272,11030
#define HEADER_SIZE 289,11465
#define HEADER_OFFSET 290,11488
prepend_header(294,11535
#define EVENTLOG 310,12011
#define RPC_VERSION_BOGUS 317,12312
#define RPC_VERSION_5 318,12375
static char hello_message[hello_message322,12597
#define REPORT 381,15162
#define REGISTER_UNKNOWN_HEADER 383,15189
#define REPORT_UNKNOWN_HEADER 384,15240
#define DEREGISTER_UNKNOWN_HEADER 385,15289
#define EVENTLOG_NAMED_PIPE 390,15507
#define PRINT(395,15597
print_buffer_as_bytes 397,15669
#undef PRINT420,16236
#define HELLO_RESPONSE_LENGTH 424,16340
#define REGISTER_RESPONSE_LENGTH 426,16431
#define REPORT_RESPONSE_LENGTH 427,16467
eventlog_register(432,16569
#define REPORT_IN_LOG 487,18985
get_computer_name(550,21780
eventlog_report(590,23537
eventlog_deregister(720,29340
static eventlog_state_t *shared_eventlog_connection;shared_eventlog_connection766,31192
static eventlog_state_t temp_shared_eventlog_connection;768,31316
eventlog_alloc(772,31453
eventlog_init(809,33083
eventlog_fast_exit(847,34448
eventlog_slow_exit(861,34952
os_eventlog(882,35854

win32/module_shared.c,1520
# define ASSERT(47,2225
# define ASSERT_NOT_REACHED(48,2244
# define ASSERT_NOT_IMPLEMENTED(49,2274
# define DODEBUG(50,2309
# define DOCHECK(51,2329
# define DECLARE_NEVERPROT_VAR(52,2352
# define ALIGN_BACKWARD(53,2412
# define PAGE_SIZE 54,2488
# undef strcasecmp74,3120
# define strcasecmp 75,3139
# define wcscasecmp 76,3168
# undef TRY_EXCEPT_ALLOW_NO_DCONTEXT77,3197
# define TRY_EXCEPT_ALLOW_NO_DCONTEXT(78,3234
# undef ASSERT_OWN_NO_LOCKS79,3293
# define ASSERT_OWN_NO_LOCKS(80,3321
# undef ASSERT_CURIOSITY81,3384
# define ASSERT_CURIOSITY(82,3409
# define convert_data_to_function(88,3725
# undef LOG 89,3791
# define LOG(90,3832
is_readable_without_exception(108,4623
get_module_exports_directory_common(146,6281
get_module_exports_directory_check_common(224,9491
get_proc_address_common(279,12420
get_module_exports_directory(439,19409
get_module_exports_directory_check(446,19627
get_proc_address(455,19947
get_proc_address_ex(464,20238
get_proc_address_by_ordinal(471,20497
get_proc_address_resolve_forward(479,20763
get_ldr_module_by_name(538,23575
typedef struct ALIGN_VAR(591,25758
typedef struct ALIGN_VAR(601,26012
typedef struct ALIGN_VAR(614,26464
typedef void (*void_func_t)void_func_t633,27014
get_own_x64_peb(651,27531
get_ldr_data_64(667,27867
get_ldr_module_64(680,28244
get_module_handle_64(733,30627
get_proc_address_64(744,30906
load_library_64(755,31273
free_library_64(835,34599
thread_get_context_64(850,35051
thread_set_context_64(864,35519

win32/injector.c,2489
#define WIN32_LEAN_AND_MEAN53,2342
#define VERBOSE 73,2758
# define DO_VERBOSE(75,2788
# undef printf76,2813
# define VERBOSE_PRINT 77,2828
# define DO_VERBOSE(79,2864
# define VERBOSE_PRINT(80,2888
#define FP 82,2923
#define HANDLE_CONTROL_C 89,3208
static int limit;92,3254
static BOOL showmem;93,3289
static BOOL showstats;94,3310
static BOOL inject;95,3333
static BOOL force_injection;96,3353
static BOOL use_environment 97,3382
static const char *ops_param;ops_param102,3709
static double wallclock;103,3739
# undef assert110,3935
#define assert 113,3998
#undef ASSERT115,4113
#   define ASSERT(119,4188
#   define ASSERT(121,4274
# define display_error(124,4381
# define ASSERT(125,4420
display_error_helper(133,4589
internal_error(153,5212
# define FILENAME_LENGTH 156,5291
# define FILENAME_LENGTH 159,5371
display_error(172,5720
BOOL WINAPI HandlerRoutine(186,6022
typedef struct _dr_inject_info_t 199,6391
    PROCESS_INFORMATION pi;200,6426
    bool using_debugger_injection;201,6454
    char image_name[image_name202,6489
} dr_inject_info_t;203,6524
dr_inject_get_image_name(207,6569
dr_inject_get_process_handle(217,6763
dr_inject_get_process_id(227,6984
dr_inject_using_debug_key(237,7177
dr_inject_print_stats(247,7385
static BOOL created_product_reg_key;309,9742
static BOOL created_image_reg_key;310,9779
static HKEY image_name_key;311,9814
static HKEY product_name_key;312,9842
#define DO_ENV_VARS(321,10184
#define TEMP_CMD(330,10587
set_registry_from_env(340,10985
#undef TEMP_CMD342,11058
#define TEMP_CMD(343,11074
#undef TEMP_CMD 354,11374
#define TEMP_CMD(355,11394
#undef TEMP_CMD420,14290
#define TEMP_CMD(421,14306
unset_registry_from_env(448,15904
#undef TEMP_CMD455,16063
#define TEMP_CMD(456,16079
#undef DO_ENV_VARS487,17563
#undef TEMP_CMD488,17582
static HKEY debugger_key;500,17994
static TCHAR debugger_key_full_name[debugger_key_full_name501,18020
static TCHAR debugger_key_value[debugger_key_value502,18067
static DWORD debugger_key_value_size 503,18112
using_debugger_key_injection(508,18255
void unset_debugger_key_injection(546,19688
void restore_debugger_key_injection(562,20191
enum { MAX_CMDLINE 585,21080
get_image_name(588,21136
exe_is_right_bitwidth(606,21756
append_app_arg_and_space(643,22981
dr_inject_process_create(726,27051
dr_inject_process_inject(796,29575
dr_inject_process_run(877,32822
dr_inject_wait_for_child(889,33099
dr_inject_process_exit(902,33508

win32/loader.c,2596
# define IMAGE_ORDINAL_FLAG 79,3254
# define IMAGE_ORDINAL_FLAG 81,3309
static char systemroot[systemroot91,3641
static bool windbg_cmds_initialized;93,3680
typedef BOOL (WINAPI *dllmain_t)dllmain_t96,3752
static PEB *private_peb;private_peb128,4681
static bool private_peb_initialized 129,4706
static void *pre_fls_data;pre_fls_data131,4833
static void *pre_nt_rpc;pre_nt_rpc133,4951
static void *pre_nls_cache;pre_nls_cache135,5059
static bool swapped_to_app_peb;137,5146
typedef ULONG_PTR (NTAPI *ntdll_NtTickCount_t)ntdll_NtTickCount_t146,5470
static ntdll_NtTickCount_t ntdll_NtTickCount;147,5524
os_loader_init_prologue(158,5845
os_loader_init_epilogue(292,12330
os_loader_exit(308,12785
os_loader_thread_init_prologue(338,13841
os_loader_thread_init_epilogue(386,16067
os_loader_thread_exit(401,16550
get_private_peb(409,16709
should_swap_peb_pointer(425,17327
get_teb_field(432,17479
set_teb_field(444,17760
is_using_app_peb(457,18092
swap_peb_pointer_ex(504,19947
swap_peb_pointer(602,25023
restore_peb_pointer_for_thread(611,25293
os_should_swap_state(635,26504
os_using_app_state(641,26612
os_swap_context(651,26821
privload_add_areas(662,27113
privload_remove_areas(669,27275
privload_unmap_file(675,27410
privload_unload_imports(681,27494
privload_map_and_relocate(718,28801
privload_lookup_locate_and_load(822,32888
privload_load_private_library(842,33586
privload_load_finalized(856,34002
privload_process_imports(863,34182
privload_get_import_descriptor(963,38309
privload_process_one_import(993,39526
privload_call_entry(1102,44406
map_api_set_dll(1163,47020
privload_map_name(1318,55291
privload_locate_and_load(1337,55994
privload_init_search_paths(1407,58947
privload_disable_console_init(1439,60379
privload_redirect_setup(1600,67123
privload_redirect_imports(1613,67554
private_lib_handle_cb(1620,67788
# define SECURITY_COOKIE_INITIAL 1630,68008
# define SECURITY_COOKIE_INITIAL 1632,68066
#define SECURITY_COOKIE_16BIT_INITIAL 1634,68117
get_tick_count(1637,68180
privload_set_security_cookie(1652,68674
privload_os_finalize(1733,71705
add_mod_to_drmarker(1750,72211
#define WINDBG_ADD_PATH 1767,72900
privload_add_windbg_cmds(1787,73846
privload_add_windbg_cmds_post_init(1819,74937
typedef NTSTATUS (NTAPI *nt_protect_t)nt_protect_t1843,75971
static nt_protect_t bootstrap_ProtectVirtualMemory;1845,76115
bootstrap_protect_virtual_memory(1849,76215
bootstrap_tolower(1861,76610
bootstrap_strcmp(1870,76739
privload_bootstrap_get_export(1900,77430
privload_bootstrap_dynamorio_imports(1954,79324

win32/inject_shared.h,242
#define INJECT_SHARED_H44,1965
    INJECT_FALSE 48,2084
    INJECT_TRUE 49,2109
    INJECT_EXCLUDED 50,2134
    INJECT_EXPLICIT 51,2159
} inject_setting_mask_t;52,2183
# define double_tcsrchr 180,6335
# define double_tcsrchr 182,6380

win32/ntdll.c,11140
# define ASSERT(45,2039
# define ASSERT_CURIOSITY(46,2058
# define ASSERT_NOT_REACHED(47,2087
# define ASSERT_NOT_IMPLEMENTED(48,2117
# define DODEBUG(49,2152
# define DOCHECK(50,2172
# define DEBUG_DECLARE(51,2195
# define INVALID_FILE 54,2411
# define snprintf 55,2454
# undef ASSERT_OWN_NO_LOCKS68,2872
# define ASSERT_OWN_NO_LOCKS(69,2900
# define VERBOSE 88,3501
# define VERBOSE 90,3526
# define NTPRINT(96,3677
# define NTPRINT(98,3742
uint context_xstate 102,3796
bool avx_supported 103,3821
# define GET_SYSCALL(108,4070
# define GET_RAW_SYSCALL 109,4138
# define NT_SYSCALL(110,4175
# define NTLOG(111,4231
# define NTLOG 113,4257
    DR_SYSCALL_INT2E,136,5527
    DR_SYSCALL_SYSENTER,137,5549
    DR_SYSCALL_SYSCALL,138,5574
    DR_SYSCALL_WOW64,139,5598
} dr_which_syscall_t;140,5620
# define GET_RAW_SYSCALL(146,5830
# define GET_SYSCALL(151,6061
# define NT_RAW_SYSCALL(171,7072
# define NT_SYSCALL(188,8479
#  define SYSNUM_OFFS 195,8755
#  define SYSNUM_OFFS 197,8786
# define CHECK_SYSNUM_AT(199,8818
# define ALLOW_HOOKER(204,9118
# define TEB_TLS64_OFFSET 220,9674
# define TEB_TLS64_OFFSET 222,9713
#undef CreateFile315,13669
typedef struct _context_chunk_t 351,15072
    LONG offset;352,15106
    DWORD length;353,15123
} context_chunk_t;354,15141
typedef struct _context_ex_t 357,15215
    context_chunk_t all;358,15246
    context_chunk_t legacy;359,15271
    context_chunk_t xstate;360,15299
} context_ex_t;361,15327
typedef int (WINAPI *ntdll_RtlGetExtendedContextLength_t)ntdll_RtlGetExtendedContextLength_t367,15537
typedef int (WINAPI *ntdll_RtlInitializeExtendedContext_t)ntdll_RtlInitializeExtendedContext_t368,15610
typedef CONTEXT* (WINAPI *ntdll_RtlLocateLegacyContext_t)ntdll_RtlLocateLegacyContext_t370,15706
ntdll_RtlGetExtendedContextLength_t ntdll_RtlGetExtendedContextLength 371,15788
ntdll_RtlInitializeExtendedContext_t ntdll_RtlInitializeExtendedContext 372,15868
ntdll_RtlLocateLegacyContext_t ntdll_RtlLocateLegacyContext 373,15948
typedef NTSTATUS (WINAPI *NtGetNextThread_t)NtGetNextThread_t377,16158
NtGetNextThread_t NtGetNextThread;383,16592
uint sysenter_tls_offset 393,16919
static bool nt_wrappers_intercepted 397,17226
syscalls_init_options_read(400,17276
syscalls_init(416,17850
use_ki_syscall_routines(568,24980
nt_get_context_extended_functions(585,25782
nt_init_dynamic_syscall_wrappers(603,26558
ntdll_init(610,26739
ntdll_exit(628,27377
query_thread_info(638,27549
query_seg_descriptor(652,28050
query_win32_start_addr(669,28673
query_system_info(683,29096
get_thread_id(703,29745
get_process_id(709,29842
get_last_error(715,29933
set_last_error(721,30002
get_stderr_handle(728,30116
get_stdout_handle(737,30292
get_stdin_handle(746,30469
is_thread_exited(755,30657
thread_id_from_handle(801,32677
query_process_info(813,32971
process_id_from_handle(827,33416
process_id_from_thread_handle(839,33704
process_handle_from_id(850,33961
thread_handle_from_id(871,34555
get_peb(898,35307
get_own_peb(909,35513
get_teb(926,36017
static app_pc ntdll_base;936,36222
get_ntdll_base(939,36256
set_ntdll_base(954,36696
is_in_ntdll(962,36825
context_ymmh_saved_area(977,37212
context_to_mcontext(1021,39041
mcontext_to_context(1083,41436
# define HEX(1147,44107
# define RAW(1148,44131
get_own_context_integer_control(1188,45851
get_own_context(1210,46824
#define TLS_SPAREBYTES_SLOTS 1231,47627
static bool alt_tls_spare_taken[alt_tls_spare_taken1233,47736
# define TLS_POSTTEB_SLOTS 1235,47802
static bool alt_tls_post_taken[alt_tls_post_taken1236,47832
# define TLS_POSTTEB_BASE_OFFS 1238,47930
tls_exit(1242,48029
alt_tls_acquire_helper(1251,48142
alt_tls_acquire(1294,49714
alt_tls_release_helper(1324,50886
alt_tls_release(1339,51302
tls_segment_offs(1366,52224
tls_find_free_block_sequence(1379,52692
tls_mark_taken_block_sequence(1459,55712
tls_alloc_helper(1477,56432
tls_alloc(1704,66618
tls_calloc(1715,66978
tls_free_helper(1722,67185
tls_free(1795,70269
tls_cfree(1801,70362
get_process_mem_stats(1810,70586
get_process_mem_quota(1822,70939
get_process_handle_count(1834,71290
get_process_load(1844,71555
is_wow64_process(1869,72429
nt_get_drive_map(1903,73604
nt_remote_allocate_virtual_memory(1914,73940
nt_remote_free_virtual_memory(1939,74930
nt_allocate_virtual_memory(1952,75351
nt_commit_virtual_memory(1962,75703
nt_decommit_virtual_memory(1980,76361
nt_free_virtual_memory(1996,76944
protect_virtual_memory(2012,77560
nt_remote_protect_virtual_memory(2025,78001
nt_remote_query_virtual_memory(2042,78687
query_virtual_memory(2056,79265
get_mapped_file_name(2078,79970
nt_raw_read_virtual_memory(2102,80910
nt_read_virtual_memory(2117,81532
nt_raw_write_virtual_memory(2125,81834
nt_write_virtual_memory(2140,82398
nt_continue(2149,82748
nt_get_context(2158,82981
nt_set_context(2182,84061
nt_thread_suspend(2192,84385
nt_thread_resume(2207,84989
nt_thread_iterator_next(2218,85382
nt_terminate_thread(2228,85673
nt_terminate_process(2243,86277
nt_terminate_process_for_app(2258,86872
am_I_sole_thread(2267,87176
check_sole_thread(2277,87446
nt_create_and_set_timer(2287,87601
        NotificationTimer,2292,87714
        SynchronizationTimer2293,87741
nt_sleep(2319,88743
nt_yield(2331,89080
get_section_address(2338,89168
get_section_attributes(2354,89665
nt_raw_close(2381,90584
close_handle(2389,90716
duplicate_handle(2396,90825
nt_get_handle_access_rights(2421,91870
nt_get_object_name(2435,92327
wchar_to_unicode(2446,92699
char_to_unicode(2460,93112
char_to_ansi(2467,93283
query_full_attributes_file(2479,93633
nt_query_value_key(2498,94184
reg_create_key(2517,95025
reg_open_key(2541,95734
reg_close_key(2570,96575
reg_delete_key(2577,96644
reg_query_value(2598,97424
reg_set_key_value(2640,98775
reg_set_dword_key_value(2659,99368
reg_flush_key(2678,100007
reg_enum_key(2700,100754
reg_enum_value(2740,102186
env_get_value(2771,103214
get_current_user_token(2793,104026
get_primary_user_token(2820,104811
get_primary_owner_token(2845,105463
get_current_user_SID(2868,106078
get_process_primary_SID(2896,106906
get_sd_pointers(2919,107458
get_owner_sd(2964,109164
initialize_security_descriptor(2984,109665
set_owner_sd(2998,110171
length_sid(3027,111092
equal_sid(3035,111248
get_application_name(3069,112298
get_application_short_name(3081,112575
get_application_short_unqualified_name(3093,112900
get_application_pid(3106,113334
get_process_param_buf(3120,113631
get_application_cmdline(3147,114687
query_time_100ns(3155,114896
query_time_millis(3170,115422
query_time_seconds(3177,115559
convert_100ns_to_system_time(3190,116001
convert_system_time_to_100ns(3206,116554
query_system_time(3223,117060
set_primary_user_owner(3234,117330
nt_create_file(3269,118698
create_file(3321,120855
nt_open_file(3363,122802
nt_delete_file(3383,123360
nt_flush_file_buffers(3423,124896
read_file(3434,125155
write_file(3461,126183
close_file(3489,127333
create_iocompletion(3495,127402
typedef struct _FILE_PIPE_INFORMATION 3518,128196
    ULONG ReadModeMessage;3519,128260
    ULONG WaitModeBlocking;3520,128287
} FILE_PIPE_INFORMATION, *PFILE_PIPE_INFORMATION;PFILE_PIPE_INFORMATION3521,128315
typedef struct _FILE_COMPLETION_INFORMATION 3523,128366
    HANDLE IoCompletionHandle;3524,128436
    ULONG CompletionKey;3525,128467
} FILE_COMPLETION_INFORMATION, *PFILE_COMPLETION_INFORMATION;PFILE_COMPLETION_INFORMATION3526,128492
open_pipe(3530,128622
#define STATUS_SHOW_MESSAGEBOX_UNDOCUMENTED 3615,132844
nt_messagebox(3618,132916
nt_raise_exception(3661,134561
nt_create_event(3677,135012
nt_close_event(3703,135777
nt_wait_event_with_timeout(3709,135852
nt_set_event(3723,136228
nt_clear_event(3749,137148
nt_signal_and_wait(3763,137400
nt_query_performance_counter(3782,138043
#define CTL_CODE(3800,138638
#define METHOD_BUFFERED 3805,138883
#define METHOD_IN_DIRECT 3806,138925
#define METHOD_OUT_DIRECT 3807,138967
#define METHOD_NEITHER 3808,139009
#define FILE_READ_ACCESS 3811,139100
#define FILE_WRITE_ACCESS 3812,139163
#define FSCTL_PIPE_TRANSCEIVE 3814,139227
static bool do_once_nt_pipe_transceive 3819,139460
nt_pipe_transceive(3828,139692
typedef struct _THREAD_IMPERSONATION_INFORMATION 3934,144651
    HANDLE ThreadImpersonationToken;3935,144702
} THREAD_IMPERSONATION_INFORMATION, *PTHREAD_IMPERSONATION_INFORMATION;PTHREAD_IMPERSONATION_INFORMATION3936,144739
get_thread_impersonation_token(3942,144903
set_thread_impersonation_token(3960,145332
nt_create_profile(3983,145960
nt_set_profile_interval(4011,146925
nt_query_profile_interval(4025,147244
nt_start_profile(4042,147604
nt_stop_profile(4054,147804
typedef struct _PORT_MESSAGE 4070,148155
    USHORT DataSize;4071,148186
    USHORT MessageSize;4072,148207
    USHORT MessageType;4073,148231
    USHORT VirtualRangesOffset;4074,148255
    CLIENT_ID ClientId;4075,148287
    ULONG MessageId;4076,148311
    ULONG SectionSize;4077,148332
} PORT_MESSAGE, *PPORT_MESSAGE;PPORT_MESSAGE4079,148376
typedef struct _CSRSS_MESSAGE 4081,148409
    ULONG Unknown1;4082,148441
    ULONG Opcode;4083,148461
    ULONG Status;4084,148479
    ULONG Unknown2;4085,148497
} CSRSS_MESSAGE, *PCSRSS_MESSAGE;PCSRSS_MESSAGE4086,148517
inform_csrss(4092,148685
        PORT_MESSAGE PortMessage;4110,149724
        CSRSS_MESSAGE CsrssMessage;4112,149808
        PROCESS_INFORMATION ProcessInformation;4114,149896
        CLIENT_ID Debugger;4115,149944
        ULONG CreationFlags;4116,149972
        ULONG VdmInfo[VdmInfo4117,150001
        ULONG Unknown[Unknown4121,150205
copy_environment(4147,151146
create_process_parameters(4172,151866
create_process(4218,154101
create_thread_common(4342,159348
create_thread(4441,163606
create_thread_have_stack(4485,165654
load_library(4536,168591
free_library(4563,169542
get_module_handle(4586,170445
#define LDR_GET_DLL_HANDLE_ARG1 4595,170845
nt_create_object_directory(4618,171704
nt_initialize_shared_directory(4674,174022
nt_open_object_directory(4742,176651
nt_close_object_directory(4788,178559
nt_get_symlink_target(4799,178883
nt_create_section(4874,182096
nt_open_section(4926,184008
are_mapped_files_the_same(4957,185110
nt_create_module_file(5005,186839
nt_query_file_info(5030,187861
nt_set_file_info(5054,188604
nt_query_volume_info(5082,189440
nt_query_security_object(5122,191069
initialize_known_SID(5159,192686
nt_initialize_context(5180,193307
nt_raw_CreateFile(5276,197051
nt_raw_OpenFile(5311,198159
nt_raw_OpenKey(5336,198861
nt_raw_OpenKeyEx(5355,199326
nt_raw_OpenProcessTokenEx(5378,200021
nt_raw_OpenThread(5399,200638
nt_raw_OpenThreadTokenEx(5420,201196
nt_raw_QueryAttributesFile(5443,201893
nt_raw_SetInformationFile(5460,202354
nt_raw_SetInformationThread(5483,203054
nt_raw_UnmapViewOfSection(5504,203711
nt_raw_MapViewOfSection(5555,205450
nt_raw_OpenProcess(5588,206532
nt_raw_QueryFullAttributesFile(5609,207098
nt_raw_CreateKey(5626,207582
nt_raw_OpenThreadToken(5653,208342
nt_raw_OpenProcessToken(5674,208911

win32/aslr.c,4855
enum {ASLR_MAP_GRANULARITY ASLR_MAP_GRANULARITY53,2183
    module_digest_t original_source;66,2774
    module_digest_t relocated_target;67,2811
    uint magic;79,3389
    uint version;84,3603
} aslr_persistent_digest_t;86,3700
enum {ASLR_PERSISTENT_CACHE_VERSION ASLR_PERSISTENT_CACHE_VERSION89,3769
enum {ASLR_PERSISTENT_CACHE_MAGIC ASLR_PERSISTENT_CACHE_MAGIC91,3836
enum {ASLR_PERSISTENT_CACHE_MAGIC = 0x45504441}x4550444191,3836
typedef struct _aslr_last_dll_bounds_t 97,4070
    app_pc end;98,4111
    app_pc start;101,4252
} aslr_last_dll_bounds_t;102,4270
static aslr_last_dll_bounds_t *aslr_last_dll_bounds;aslr_last_dll_bounds104,4297
vm_area_vector_t *aslr_wouldbe_areas;aslr_wouldbe_areas118,4897
vm_area_vector_t *aslr_heap_pad_areas;aslr_heap_pad_areas129,5422
HANDLE shared_object_directory 132,5516
HANDLE relocated_dlls_filecache_initial 137,5686
#define KNOWN_DLLS_OBJECT_DIRECTORY 139,5751
HANDLE known_dlls_object_directory 140,5802
#define KNOWN_DLL_PATH_SYMLINK 142,5862
wchar_t known_dll_path[known_dll_path143,5909
aslr_init(179,6975
aslr_exit(431,19074
aslr_thread_init(474,20680
aslr_thread_exit(479,20729
aslr_get_next_base(489,21021
aslr_get_fitting_base(534,23007
aslr_update_failed(613,26424
aslr_update_view_size(647,27698
aslr_track_randomized_dlls(686,29172
aslr_pre_process_mapview(796,34496
aslr_retry_map_syscall(1101,49868
aslr_get_module_mapping_size(1149,52280
#define SET_RETURN_VAL(1198,54206
aslr_post_process_mapview(1207,54485
void aslr_pre_process_unmapview(1897,87973
aslr_post_process_unmapview(1926,89172
aslr_doublecheck_wouldbe_areas(1943,89678
aslr_is_possible_attack(1964,90312
aslr_possible_preferred_address(1985,91189
aslr_reserve_remote_random_pad(2020,92746
aslr_maybe_pad_stack(2062,94573
#define LOADBLOCK_PAGE_PROTECT 2121,97163
aslr_force_dynamorio_rebase(2135,97729
aslr_free_dynamorio_loadblock(2180,99407
aslr_post_process_allocate_virtual_memory(2230,101432
aslr_pre_process_free_virtual_memory(2413,110905
aslr_reserve_initial_heap_pad(2475,113706
aslr_free_heap_pads(2543,117078
get_relocated_dlls_filecache_directory(2585,118622
open_relocated_dlls_filecache_directory(2610,119753
aslr_module_force_size(2725,125038
aslr_module_append_signature(2790,127262
aslr_module_read_signature(2844,129499
aslr_get_section_digest(2929,132629
aslr_create_private_module_section(2978,134469
aslr_get_file_digest(3011,135985
aslr_compare_in_place(3058,137611
aslr_module_verify_relocated_contents(3148,141119
aslr_verify_file_checksum(3337,149172
aslr_open_relocated_dll_file(3521,156357
aslr_check_low_disk_threshold(3650,162479
aslr_create_relocated_dll_file(3684,163958
is_aslr_exempted_file_name(3816,169767
get_file_short_name(3894,173204
calculate_publish_name(3922,174319
aslr_write_header(4042,179406
aslr_generate_relocated_section(4124,182896
aslr_experiment_with_section_handle(4385,194645
aslr_file_relocate_cow(4535,201556
aslr_module_get_times(4636,206611
aslr_produce_randomized_file(4732,210212
aslr_get_unique_wide_name(4949,219863
aslr_rename_temporary_file(4974,220918
aslr_publish_section_handle(5029,223292
aslr_set_randomized_handle(5315,236750
aslr_get_original_metadata(5386,239852
aslr_verify_section_backing(5454,242520
aslr_replace_section_handle(5475,243353
aslr_subscribe_section_handle(5559,246960
aslr_post_process_create_section_internal(5673,251555
aslr_publish_file(5792,256959
aslr_get_known_dll_path(5825,258097
aslr_is_handle_KnownDlls(5887,260322
aslr_recreate_known_dll_file(5940,262286
aslr_post_process_create_or_open_section(6035,266269
aslr_process_worklist(6088,268497
#define GBOP_DEFINE_HOOK(6144,270903
#define GBOP_DEFINE_HOOK_MODULE(6145,270963
static const gbop_hook_desc_t gbop_hooks[gbop_hooks6154,271455
#undef GBOP_DEFINE_HOOK6158,271525
#undef GBOP_DEFINE_HOOK_MODULE6159,271549
#define GBOP_HOOK_LIST_END_SENTINEL 6161,271581
#define GBOP_DEFINE_HOOK(6166,271802
#define GBOP_DEFINE_HOOK_MODULE(6167,271846
static const uint gbop_hooks_set_sizes[gbop_hooks_set_sizes6174,272163
#undef GBOP_DEFINE_HOOK6180,272321
#undef GBOP_DEFINE_HOOK_MODULE6181,272345
#define GBOP_DEFINE_HOOK_MODULE(6188,272630
static int gbop_hooks_set_enabled[gbop_hooks_set_enabled6190,272689
#undef GBOP_DEFINE_HOOK_MODULE6195,272841
static const uint gbop_num_hooks 6197,272873
bool gbop_vm_loaded 6206,273242
gbop_get_hook(6211,273416
gbop_get_num_hooks(6242,274528
gbop_exclude_filter(6290,276289
    CTI_MIN_LENGTH 6358,279118
    CTI_MIN_LENGTH = CTI_IND1_LENGTH,6358,279118
    CTI_MAX_LENGTH 6359,279156
    CTI_MAX_LENGTH = CTI_FAR_ABS_LENGTH,6359,279156
gbop_is_after_cti(6365,279305
check_exempt_gbop_addr(6510,285174
gbop_check_valid_caller(6558,287442
gbop_validate_and_act(6828,300350
gbop_init(6922,304619
gbop_exit(6956,305838

win32/early_inject_helper2.c,73
#define WIN32_LEAN_AND_MEAN41,2033
__declspec(44,2083
DllMain(51,2233

win32/pre_inject.c,763
#define WIN32_LEAN_AND_MEAN58,2532
# undef assert85,3307
#define assert 88,3370
#   define ASSERT(92,3503
#   define ASSERT(94,3589
# define ASSERT(97,3696
#define BUFFER_SIZE_BYTES(105,3901
#define BUFFER_SIZE_ELEMENTS(106,3949
#define BUFFER_LAST_ELEMENT(107,4027
#define NULL_TERMINATE_BUFFER(108,4098
#define VERBOSE 113,4380
# define VERBOSE_MESSAGE(118,4523
# define VERBOSE_MESSAGE(120,4596
display_error_helper(124,4646
internal_error(135,4976
# define FILENAME_LENGTH 138,5043
# define FILENAME_LENGTH 141,5123
display_error(154,5472
typedef int (*int_func_t)int_func_t163,5667
typedef void (*void_func_t)void_func_t164,5697
load_dynamorio_lib(171,5852
parameters_present(343,12842
process_attach(372,13705
__declspec(446,16469

win32/module.h,750
#define MODULE_H35,1769
#define OS_IMAGE_READ 42,1963
#define OS_IMAGE_WRITE 43,2007
#define OS_IMAGE_EXECUTE 44,2052
# define IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE 47,2146
typedef struct _os_module_data_t 50,2208
    app_pc preferred_base;51,2243
    uint checksum;52,2318
    uint timestamp;53,2379
    size_t module_internal_size;54,2442
    size_t code_size;56,2533
    version_number_t file_version;59,2632
    version_number_t product_version;60,2667
    char *company_name;company_name61,2705
    char *product_name;product_name62,2729
    HANDLE noclobber_section_handle;73,3198
    rct_module_table_t rct_table[rct_table87,3736
    byte *iat_code;iat_code94,3981
    size_t iat_len;95,4001
} os_module_data_t;96,4021

unit-rct.c,494
typedef int (*fconvert_t)fconvert_t51,2102
typedef int (*fmult_t)fmult_t52,2136
int foo(54,2166
int f2(65,2375
int f3(70,2410
int f7(75,2445
bar(81,2485
fmult_t farr[farr92,2714
test_indcalls(95,2756
test_switch_helper(109,3009
test_switch(121,3178
test_small_array(136,3525
test_lookup_delete(285,8326
test_self_direct(305,9005
test_rct_ind_branch_check(381,11867
test_loaddll(439,13750
void func2(455,14137
void func3(459,14196
void func4(463,14269
unit_main(470,14358

module_shared.h,2890
#define MODULE_LIST_H35,1774
typedef struct _module_handle_t * module_handle_t;57,2430
#define MODULE_FILE_VERSION_INVALID 61,2498
typedef union _version_number_t 67,2684
    uint64 version;68,2718
        uint ms;70,2796
        uint ls;71,2825
    } version_uint;72,2854
        ushort p2;74,2933
        ushort p1;75,2962
        ushort p4;76,2991
        ushort p3;77,3020
    } version_parts;78,3049
} version_number_t;79,3115
typedef struct _module_names_t 98,3673
    const char *module_name;module_name99,3706
    const char *file_name;file_name103,4054
    const char *exe_name;exe_name106,4222
    const char *rsrc_name;rsrc_name109,4458
    uint64 inode;113,4721
} module_names_t;115,4794
#define GET_MODULE_NAME(130,5333
#define GET_MODULE_NAME(140,5942
typedef struct _module_area_t 148,6386
    app_pc start;162,7326
    app_pc end;163,7344
    app_pc entry_point;165,7361
    uint flags;167,7386
    module_names_t names;169,7403
    char *full_path;full_path170,7429
    os_module_data_t os_data;172,7451
} module_area_t;173,7520
    MODULE_HAS_PRIMARY_COARSE 178,7671
    MODULE_HAS_PRIMARY_COARSE = 0x00000001,x00000001178,7671
    MODULE_RCT_LOADED 181,7847
    MODULE_RCT_LOADED      = 0x00000002,x00000002181,7847
    MODULE_HAS_BORLAND_SEH 184,7980
    MODULE_HAS_BORLAND_SEH = 0x00000004,x00000004184,7980
    MODULE_BEING_UNLOADED 187,8109
    MODULE_BEING_UNLOADED  = 0x00000008,x00000008187,8109
    MODULE_WAS_EXEMPTED 189,8220
    MODULE_WAS_EXEMPTED    = 0x00000010,x00000010189,8220
    MODULE_RCT_SCANNED 192,8397
    MODULE_RCT_SCANNED     = 0x00000020,x00000020192,8397
    MODULE_DO_NOT_PERSIST 196,8521
    MODULE_DO_NOT_PERSIST  = 0x00000040,x00000040196,8521
    MODULE_NULL_INSTRUMENT 199,8593
    MODULE_NULL_INSTRUMENT = 0x00000080,x00000080199,8593
typedef struct _module_iterator_t module_iterator_t;260,10997
typedef void *module_base_t;module_base_t300,13043
module_info_exists(359,15447
    byte full_MD5[full_MD5383,16248
    byte short_MD5[short_MD5392,16702
} module_digest_t;398,16952
typedef struct _privmod_t 429,18206
    app_pc base;430,18234
    size_t size;431,18251
    const char *name;name432,18268
    char path[path433,18290
    uint ref_count;434,18319
    bool externally_loaded;435,18339
    bool is_client;437,18391
    struct _privmod_t *next;next439,18437
    struct _privmod_t *prev;prev440,18466
    void *os_privmod_data;os_privmod_data441,18495
} privmod_t;442,18522
# define DLL_PROCESS_INIT 447,18583
# define DLL_PROCESS_EXIT 448,18628
# define DLL_THREAD_INIT 449,18673
# define DLL_THREAD_EXIT 450,18717
# define DLL_PROCESS_INIT 452,18767
# define DLL_PROCESS_EXIT 453,18795
# define DLL_THREAD_INIT 454,18823
# define DLL_THREAD_EXIT 455,18851
#define PRIVMOD_STATIC_NUM 459,18942
#define SEARCH_PATHS_NUM 464,19163

vmareas.c,13382
    VM_WRITABLE 76,2697
    VM_WRITABLE     = 0x0001,x000176,2697
    VM_UNMOD_IMAGE 80,2936
    VM_UNMOD_IMAGE  = 0x0002,x000280,2936
    VM_DELETE_ME 81,2966
    VM_DELETE_ME    = 0x0004,x000481,2966
    VM_WAS_FUTURE 85,3262
    VM_WAS_FUTURE   = 0x0008,x000885,3262
    VM_DR_HEAP 86,3337
    VM_DR_HEAP      = 0x0010,x001086,3337
    VM_ONCE_ONLY 87,3389
    VM_ONCE_ONLY    = 0x0020,x002087,3389
    VM_MADE_READONLY 93,3724
    VM_MADE_READONLY = VM_WRITABLE/VM_WRITABLE93,3724
    VM_DELAY_READONLY 97,4019
    VM_DELAY_READONLY = 0x0080,x008097,4019
    VM_PATTERN_REVERIFY 108,4690
    VM_PATTERN_REVERIFY = 0x0100,x0100108,4690
    VM_DRIVER_ADDRESS 111,4734
    VM_DRIVER_ADDRESS   = 0x0200,x0200111,4734
    VM_PERSISTED_CACHE 124,5347
    VM_PERSISTED_CACHE     = 0x0400,x0400124,5347
    VM_EXECUTED_FROM 127,5456
    VM_EXECUTED_FROM       = 0x0800,x0800127,5456
    VM_ADD_TO_SHARED_DATA 133,5684
    VM_ADD_TO_SHARED_DATA  = 0x1000,x1000133,5684
#define SANDBOX_FLAG(137,5764
typedef struct _ro_vs_sandbox_data_t 140,5895
    uint written_count;145,6128
    uint selfmod_execs;154,6614
    uint ro2s_xfers;156,6651
    uint s2ro_xfers;157,6672
} ro_vs_sandbox_data_t;159,6700
typedef struct vm_area_t 170,7259
    app_pc start;171,7286
    app_pc end;172,7304
    uint vm_flags;178,7604
    uint frag_flags;182,7728
    char *comment;comment184,7762
        fragment_t *frags;frags199,8414
        void *client;client201,8503
    } custom;202,8525
} vm_area_t;203,8539
typedef struct thread_data_t 208,8691
    vm_area_vector_t areas;209,8722
    vm_area_t *last_area;last_area211,8810
    app_pc last_decode_area_page_pc;220,9357
    bool   last_decode_area_valid;221,9394
    uint thrown_exceptions;223,9487
} thread_data_t;225,9572
#define SHOULD_LOCK_VECTOR(227,9590
#define LOCK_VECTOR(232,9820
#define UNLOCK_VECTOR(241,10268
static vm_area_vector_t *executable_areas;executable_areas256,11028
static vm_area_vector_t *dynamo_areas;dynamo_areas257,11071
static coarse_info_t **coarse_to_delete;coarse_to_delete264,11348
static vm_area_vector_t *pretend_writable_areas;pretend_writable_areas270,11556
vm_area_vector_t *patch_proof_areas;patch_proof_areas273,11668
vm_area_vector_t *emulate_write_areas;emulate_write_areas278,11849
vm_area_vector_t *IAT_areas;IAT_areas285,12154
static vm_area_vector_t *written_areas;written_areas290,12302
static vm_area_vector_t *futureexec_areas;futureexec_areas298,12581
static vm_area_vector_t *app_flushed_areas;app_flushed_areas303,12776
static app_pc tamper_resistant_region_start,311,12987
static app_pc tamper_resistant_region_start, tamper_resistant_region_end;311,12987
static thread_data_t *shared_data;shared_data324,13603
typedef struct _pending_delete_t 326,13674
    app_pc start;329,13793
    app_pc end;330,13811
    fragment_t *frags;frags333,13902
    uint ref_count;335,14002
    uint flushtime_deleted;336,14022
    struct _pending_delete_t *next;next338,14099
} pending_delete_t;339,14135
typedef struct _deletion_lists_t 342,14228
    pending_delete_t *shared_delete;shared_delete349,14642
    pending_delete_t *shared_delete_tail;shared_delete_tail351,14749
    uint shared_delete_count;353,14832
    fragment_t *lazy_delete_list;lazy_delete_list359,15066
    fragment_t *lazy_delete_tail;lazy_delete_tail361,15152
    uint lazy_delete_count;363,15231
    bool move_pending;365,15331
} deletion_lists_t;366,15354
static deletion_lists_t *todelete;todelete368,15375
typedef struct _last_deallocated_t 370,15411
    bool unload_in_progress;388,16429
    app_pc last_unload_base;389,16458
    size_t last_unload_size;390,16487
} last_deallocated_t;398,16919
static last_deallocated_t *last_deallocated;last_deallocated399,16941
#define MULTI_ALLOC_DC(412,17604
#define GET_DATA(413,17667
#define GET_VECTOR(416,17821
#define SHARED_VECTOR_RWLOCK(420,18121
#define ASSERT_VMAREA_DATA_PROTECTED(426,18383
# define ASSERT_VMAREA_VECTOR_PROTECTED(435,18804
# define ASSERT_VMAREA_VECTOR_PROTECTED(443,19261
#define MAXIMUM_VIOLATION_NAME_LENGTH 447,19392
#define VMVECTOR_INITIALIZE_VECTOR(449,19434
bool vm_areas_exited 523,21815
typedef struct _multi_entry_t 546,23067
    fragment_t *f;f547,23099
    uint      flags;552,23355
    fragment_t *next_vmarea;next_vmarea554,23462
    fragment_t *prev_vmarea;prev_vmarea555,23491
    fragment_t *also_vmarea;also_vmarea556,23520
    app_pc pc;559,23699
} multi_entry_t;560,23714
#define FRAG_MULTI(563,23807
#define FRAG_MULTI_INIT(565,23871
#define FRAG_NEXT(567,23971
#define FRAG_NEXT_ASSIGN(570,24099
#define FRAG_PREV(577,24304
#define FRAG_PREV_ASSIGN(580,24432
#define FRAG_ALSO(588,24713
#define FRAG_ALSO_DEL_OK(592,24967
#define FRAG_ALSO_ASSIGN(595,25107
#define FRAG_PC(605,25462
#define FRAG_PC_ASSIGN(608,25571
#define FRAG_FRAG(615,25761
#define FRAG_FRAG_ASSIGN(618,25870
#define FRAG_ID(625,26064
vm_make_writable(632,26305
vm_make_unwritable(643,26635
revert_memory_regions(671,27797
print_vm_flags(695,28689
print_vm_area(711,29313
print_vm_areas(769,31606
print_contig_vm_areas(780,31866
print_pending_list(797,32316
writelock_if_not_already(813,32857
vm_area_vector_check_size(823,33087
vm_area_merge_fraglists(848,34055
add_vm_area(895,36243
adjust_coarse_unit_bounds(1230,53123
remove_vm_area(1275,55066
binary_search(1452,63742
lookup_addr(1513,66074
vm_area_overlap(1523,66400
vm_areas_reset_init(1533,66721
dynamo_vm_areas_init(1541,66946
vm_areas_init(1552,67274
vm_areas_statistics(1627,70313
vm_areas_reset_free(1650,71146
vm_areas_exit(1665,71684
vm_areas_thread_reset_init(1772,75431
vm_areas_thread_init(1783,75878
vm_areas_thread_reset_free(1791,76101
vm_areas_thread_exit(1804,76540
vmvector_set_callbacks(1822,77138
vmvector_print(1839,77760
vmvector_add(1848,78001
vmvector_add_replace(1858,78358
vmvector_remove(1878,79014
vmvector_remove_containing_area(1894,79540
vmvector_overlap(1920,80342
vmvector_lookup(1938,80931
vmvector_lookup_data(1950,81289
vmvector_lookup_prev_next(1980,82301
vmvector_modify_data(2013,83346
vmvector_init_vector(2030,83943
vmvector_create_vector(2038,84160
vmvector_reset_vector(2048,84441
vmvector_free_vector(2089,86190
vmvector_delete_vector(2097,86401
vmvector_iterator_start(2116,87028
vmvector_iterator_hasnext(2127,87263
vmvector_iterator_startover(2134,87440
vmvector_iterator_peek(2150,87864
vmvector_iterator_next(2172,88636
vmvector_iterator_stop(2181,88893
print_executable_areas(2197,89329
print_dynamo_areas(2203,89419
print_futureexec_areas(2212,89601
print_written_areas(2220,89745
free_written_area(2227,89843
add_written_area(2239,90298
add_executable_vm_area_check_IAT(2316,93689
add_executable_vm_area_helper(2490,102891
vm_area_load_coarse_unit(2552,105680
add_executable_vm_area(2626,109551
add_executable_region(2730,113869
remove_executable_vm_area(2742,114363
remove_executable_region(2760,114994
vm_area_delay_load_coarse_units(2770,115303
free_nonexec_coarse_and_unlock(2812,117090
add_futureexec_vm_area(2859,118889
remove_futureexec_vm_area(2884,119897
futureexec_vm_area_overlap(2897,120330
is_executable_address(2909,120669
get_executable_area_vm_flags(2923,121030
get_executable_area_flags(2943,121578
get_coarse_info_internal(2963,122208
get_executable_area_coarse_info(3042,125919
mark_executable_area_coarse_frozen(3051,126181
executable_areas_match_flags(3088,127781
is_executable_area_writable(3130,129663
is_executable_area_writable_overlap(3152,130551
is_pretend_or_executable_writable(3165,130977
executable_vm_area_coarse_overlap(3178,131385
executable_vm_area_persisted_overlap(3192,131826
executable_vm_area_executed_from(3204,132247
executable_area_overlap_bounds(3232,133629
vm_area_coarse_iter_start(3282,135878
vm_area_coarse_iter_find_next(3297,136420
vm_area_coarse_iter_hasnext(3320,137331
vm_area_coarse_iter_next(3326,137573
vm_area_coarse_iter_stop(3333,137764
is_executable_area_on_all_selfmod_pages(3344,138074
was_executable_area_writable(3365,138972
is_executable_area_selfmod(3397,140377
is_executable_area_dyngen(3409,140672
is_valid_address(3421,140916
update_dynamo_vm_areas(3434,141330
are_dynamo_vm_areas_stale(3459,142199
mark_dynamo_vm_areas_stale(3470,142493
dynamo_vm_areas_lock(3480,142858
dynamo_vm_areas_unlock(3501,143594
self_owns_dynamo_vm_area_lock(3518,144137
dynamo_vm_areas_start_reading(3531,144635
dynamo_vm_areas_done_reading(3554,145442
add_dynamo_vm_area(3564,145735
remove_dynamo_vm_area(3591,146958
add_dynamo_heap_vm_area(3614,147735
is_dynamo_area_buffer(3636,148696
remove_dynamo_heap_areas(3643,148860
is_dynamo_address(3670,150016
is_pretend_writable_address(3687,150588
pretend_writable_vm_area_overlap(3702,151167
get_address_comment(3715,151510
executable_vm_area_overlap(3740,152154
executable_areas_lock(3752,152477
executable_areas_unlock(3758,152552
dynamo_vm_area_overlap(3766,152756
is_on_stack(3782,153253
is_address_on_stack(3829,155137
is_driver_address(3837,155372
#define MESSAGE_EXEC_VIOLATION 3856,155920
#define MESSAGE_CONTACT_VENDOR 3857,156001
const char * const action_message[action_message3858,156090
const uint action_event_id[action_event_id3868,156572
fill_security_violation_target(3881,156873
get_security_violation_name(3890,157128
is_exempt_threat_name(4001,161440
security_violation_report(4030,162530
security_violation_internal_main(4138,167266
security_violation_action(4474,182945
security_violation_main(4533,185401
security_violation_internal(4549,186080
security_violation(4574,187219
END_DATA_SECTION(4584,187621
is_in_futureexec_area(4601,188241
is_dyngen_code(4611,188460
is_direct_jmp_to_image(4625,188797
check_trampoline_displaced_code(4649,189672
check_origins_bb_pattern(4721,192900
check_origins_trim_region_helper(4966,204087
check_origins_helper(4985,204973
check_origins(5482,230354
vm_area_fragment_self_write(5526,232146
    SIMULATE_INIT 5570,234183
    SIMULATE_GENERIC 5571,234212
    SIMULATE_AT_ADDR 5572,234241
    SIMULATE_AT_FRAGNUM 5573,234270
    SIMULATE_WIPE_STACK 5574,234299
    SIMULATE_OVER 5575,234328
    SIMULATE_OVER       = 0x1000,x10005575,234328
next_simulate_at_fragment(5592,234959
simulate_attack(5641,236667
print_entry(5702,238798
print_fraglist(5722,239518
print_fraglists(5758,241112
print_frag_arealist(5771,241501
area_contains_frag_pc(5787,241976
prepend_entry_to_fraglist(5803,242464
prepend_fraglist(5828,243478
dyngen_diagnostics(5853,244447
app_memory_pre_alloc(5915,246711
app_memory_allocation(5959,248713
app_memory_deallocation(6075,253961
flush_and_remove_executable_vm_area(6160,258259
tamper_resistant_region_add(6186,259338
tamper_resistant_region_overlap(6209,260226
app_memory_protection_change(6237,261586
app_memory_flush(6915,296664
was_address_flush_start(6976,299309
handle_delay_readonly(6995,299995
check_thread_vm_area_cleanup(7034,301839
check_thread_vm_area_abort(7077,303700
allow_xfer_for_frag_flags(7093,304327
check_thread_vm_area(7159,307405
set_thread_decode_page_start(8018,348966
check_in_last_thread_vm_area(8052,350247
remove_shared_vmlist(8103,352972
vm_area_add_fragment(8164,355593
acquire_vm_areas_lock(8280,360065
acquire_vm_areas_lock_if_not_already(8287,360237
release_vm_areas_lock(8294,360422
frag_also_list_areas_unique(8306,360827
exec_area_bounds_match(8342,362237
vm_area_add_to_list(8383,363973
vm_area_destroy_list(8503,369458
vm_list_overlaps(8510,369614
remove_fraglist_entry(8545,370849
vm_area_check_clean_fraglist(8604,373050
vm_area_clean_fraglist(8641,374545
vm_area_remove_fragment(8695,377076
add_to_pending_list(8740,378629
print_lazy_deletion_list(8791,380674
check_lazy_deletion_list_consistency(8806,381072
remove_from_lazy_deletion_list(8819,381348
move_lazy_list_to_pending_delete(8845,382242
add_to_lazy_deletion_list(8905,385201
check_lazy_deletion_list(8989,389159
unlink_fragments_for_deletion(9044,391455
vm_area_unlink_fragments(9086,393078
vm_area_unlink_incoming(9283,403338
vm_area_check_shared_pending(9322,404750
vm_area_flush_fragments(9539,414668
vm_area_flush_coarse_unit(9637,418937
vm_area_allsynch_flush_fragments(9712,422411
vm_area_coarse_units_reset_free(9887,431165
coarse_region_should_persist(9937,433580
vm_area_coarse_region_freeze(10007,436518
vm_area_coarse_units_freeze(10118,442078
remove_thread_vm_area(10161,443847
thread_vm_area_overlap(10178,444456
handle_modified_code(10199,445181
get_selfmod_exec_counter(10621,466897
vm_area_selfmod_check_clear_exec_count(10672,469018
mark_unload_start(10833,476921
mark_unload_future_added(10853,477647
mark_unload_end(10874,478452
is_in_last_unloaded_region(10959,482626
is_currently_unloaded_region(10980,483269
is_unreadable_or_currently_unloaded_region(10993,483543
print_last_deallocated(11018,484319
safe_apc_or_thread_target(11055,485529
apc_thread_policy_helper(11070,485933
    enum {PIC_SHELLCODE_MATCH PIC_SHELLCODE_MATCH11098,487079
    enum {PIC_SHELLCODE_MATCH = 0x0000e853}x0000e85311098,487079
aslr_report_violation(11252,493790
# define INT_TO_PC(11324,496905
print_vector_msg(11327,496966
check_vec(11334,497107
vmvector_tests(11346,497471
unit_test_vmareas(11389,499277

perfctr.h,40
#define GUI_ALARM_UPDATE_RATIO 39,1842

config.c,2840
# define GLOBAL_CONFIG_DIR 52,2066
# define LOCAL_CONFIG_ENV 53,2110
# define LOCAL_CONFIG_SUBDIR 54,2143
# define GLOBAL_CONFIG_SUBDIR 55,2185
# define LOCAL_CONFIG_ENV 57,2224
# define LOCAL_CONFIG_SUBDIR 58,2264
# define GLOBAL_CONFIG_SUBDIR 59,2305
#define CFG_SFX_64 65,2461
#define CFG_SFX_32 66,2491
# define CFG_SFX 68,2532
# define CFG_SFX 70,2566
# define VERBOSE 75,2673
# define VERBOSE 77,2698
# undef ASSERT82,2877
# undef ASSERT_NOT_IMPLEMENTED83,2892
# undef ASSERT_NOT_TESTED84,2923
# undef ASSERT_NOT_REACHED85,2949
# undef FATAL_USAGE_ERROR86,2976
# undef USAGE_ERROR87,3002
# define ASSERT(88,3022
# define ASSERT_NOT_IMPLEMENTED(89,3055
# define ASSERT_NOT_TESTED(90,3104
# define ASSERT_NOT_REACHED(91,3148
# define FATAL_USAGE_ERROR(92,3192
# define USAGE_ERROR(93,3241
#   define print_file(97,3370
#   define print_file(99,3445
#  define print_file(102,3502
# undef STDERR104,3557
# define STDERR 105,3572
# undef our_snprintf106,3595
#  define our_snprintf 108,3632
#  define our_snprintf 110,3672
# undef DECLARE_NEVERPROT_VAR112,3712
# define DECLARE_NEVERPROT_VAR(113,3742
# define INFO(118,3870
# define INFO(122,4013
static const char *const config_var[config_var126,4112
static const wchar_t *const w_config_var[w_config_var140,4484
#define NUM_CONFIG_VAR 154,4875
typedef struct _config_val_t 159,5029
    char val[val160,5060
    bool has_value;162,5139
    bool app_specific;164,5223
    bool from_env;165,5246
} config_val_t;166,5265
typedef struct _config_vals_t 168,5282
    config_val_t vals[vals169,5314
} config_vals_t;170,5353
typedef struct _config_info_t 172,5371
    char fname_app[fname_app173,5403
    char fname_default[fname_default174,5437
    const char *query;query181,5831
            config_val_t answer;184,5883
            bool have_answer;185,5916
        } q;186,5946
        config_vals_t *v;v187,5959
    } u;188,5985
    bool has_1config;189,5994
} config_info_t;190,6016
static config_vals_t myvals;192,6034
static config_info_t config;193,6063
static bool config_initialized;194,6092
static config_info_t *config_reread_info;config_reread_info201,6424
static config_vals_t *config_reread_vals;config_reread_vals202,6466
my_getenv(206,6585
get_config_val_ex(223,6992
get_config_val(246,7727
set_config_from_env(252,7823
process_config_line(275,8721
read_config_file(331,11268
#   define BUFSIZE 340,11756
config_read(403,14070
config_reread(513,18838
get_config_val_other(584,21512
get_config_val_other_app(612,22578
get_config_val_other_arch(630,23261
config_init(638,23587
config_heap_init(650,23870
config_heap_exit(661,24231
config_exit(678,24674
get_parameter_ex(699,25339
get_parameter(720,25992
get_unqualified_parameter(726,26115
config_init(735,26355
config_exit(740,26383

hashtablex.h,2001
#define EXPANDKEY(151,6018
#define HTNAME(152,6067
#define KEY_STRING 153,6124
#define ENTRY_IS_REAL(155,6164
# define _IFLOOKUP(159,6299
# define IFLOOKUP_ELSE(160,6325
# define _IFLOOKUP(162,6363
# define IFLOOKUP_ELSE(163,6399
# define TAGS_ARE_EQUAL(167,6462
typedef struct HTNAME(_,NAME_KEY,_table_t)176,6717
HTNAME(309,12182
HTNAME(326,12750
HTNAME(336,13064
HTNAME(531,21906
HTNAME(564,23283
HTNAME(576,23711
HTNAME(598,24549
HTNAME(643,26374
HTNAME(709,29484
HTNAME(771,31745
HTNAME(787,32271
HTNAME(939,39504
HTNAME(1230,52556
HTNAME(1254,53528
HTNAME(1276,54545
HTNAME(1364,58622
HTNAME(1388,59593
HTNAME(1409,60290
HTNAME(1445,61575
HTNAME(1494,63242
HTNAME(1552,65648
HTNAME(1636,68943
HTNAME(1685,70811
HTNAME(1719,72029
HTNAME(1871,77797
HTNAME(1966,81612
HTNAME(1981,82108
HTNAME(2041,84532
HTNAME(2059,85328
HTNAME(2079,85925
HTNAME(2120,87450
HTNAME(2149,88573
HTNAME(2183,90410
HTNAME(2214,91819
#undef NAME_KEY2253,93465
#undef ENTRY_TYPE2254,93481
#undef AUX_ENTRY_TYPE2255,93499
#undef CUSTOM_FIELDS2256,93521
#undef ENTRY_TAG2258,93543
#undef ENTRY_IS_EMPTY2259,93560
#undef ENTRY_IS_SENTINEL2260,93582
#undef ENTRY_IS_INVALID2261,93607
#undef ENTRIES_ARE_EQUAL2262,93631
#undef ENTRY_EMPTY2263,93656
#undef ENTRY_SENTINEL2264,93675
#undef TAGS_ARE_EQUAL2265,93697
#undef AUX_ENTRY_TAG2267,93720
#undef AUX_ENTRY_IS_EMPTY2268,93741
#undef AUX_ENTRY_IS_SENTINEL2269,93767
#undef AUX_ENTRY_IS_INVALID2270,93796
#undef AUX_PAYLOAD_IS_INVALID2271,93824
#undef AUX_ENTRY_SET_TO_SENTINEL2272,93854
#undef AUX_ENTRY_IS_SET_TO_ENTRY2273,93887
#undef AUX_ENTRY_SET_TO_ENTRY2274,93920
#undef AUX_ENTRY_FORMAT_STR2275,93950
#undef AUX_ENTRY_FORMAT_ARGS2276,93978
#undef HASHTABLE_WHICH_HEAP2278,94008
#undef HASHTABLE_USE_LOOKUPTABLE2279,94036
#undef HASHTABLE_ENTRY_STATS2280,94069
#undef HASHTABLE_SUPPORT_PERSISTENCE2281,94098
#undef HTLOCK_RANK2282,94135
#undef _IFLOOKUP2284,94155
#undef IFLOOKUP_ELSE2285,94172

fcache.h,483
#define _FCACHE_H_ 42,1915
#define IN_TRACE_CACHE(49,2129
#define PAD_FRAGMENT_JMPS(54,2339
#define PAD_JMPS_SHIFT_START(57,2448
    RESET_ALL 65,2752
    RESET_ALL              = 0x001,x00165,2752
    RESET_BASIC_BLOCKS 67,2837
    RESET_BASIC_BLOCKS     = 0x002,x00267,2837
    RESET_TRACES 69,2925
    RESET_TRACES           = 0x004,x00469,2925
    RESET_PENDING_DELETION 74,3163
    RESET_PENDING_DELETION = 0x008,x00874,3163
#define SELF_PROTECT_CACHE(123,4757

dispatch.c,786
# define DISPLAY_STRING(58,2414
# define DISPLAY_STRING(60,2468
#define NULL_TERMINATE(63,2529
long total_sec_sn=92,2977
long total_usec_sn=93,3016
found_client_sysenter(132,3944
void pk_dummy_func(141,4242
dispatch(159,4696
is_stopping_point(525,19027
dispatch_enter_fcache_stats(553,19891
dispatch_enter_fcache(633,23605
enter_fcache(779,30318
handle_special_tag(818,31590
dispatch_at_stopping_point(837,32272
dispatch_enter_native(875,33617
dispatch_enter_dynamorio(928,36125
dispatch_exit_fcache(1162,47669
dispatch_exit_fcache_stats(1390,58186
adjust_syscall_continuation(1879,79589
handle_system_call(1913,81114
handle_post_system_call(2169,92797
handle_callback_return(2227,94768
issue_last_system_call_from_app(2277,96958
transfer_to_dispatch(2299,97769

link.c,6386
#define FRAG_INCOMING_ADDR(55,2328
void *stub_heap;stub_heap113,4566
void *stub32_heap;stub32_heap115,4594
# define SEPARATE_STUB_HEAP(119,4632
# define SEPARATE_STUB_HEAP(121,4719
#define SEPARATE_STUB_ALLOC_SIZE(128,4948
#define COARSE_STUB_ALLOC_SIZE(135,5232
static const fragment_t linkstub_empty_fragment 147,5880
static const fragment_t linkstub_empty_fragment_x86 149,5963
static const linkstub_t linkstub_starting 151,6060
static const linkstub_t linkstub_reset 152,6125
static const linkstub_t linkstub_syscall 153,6190
static const linkstub_t linkstub_selfmod 154,6255
static const linkstub_t linkstub_ibl_deleted 155,6320
static const linkstub_t linkstub_sigreturn 157,6397
static const linkstub_t linkstub_asynch 159,6482
static const linkstub_t linkstub_native_exec 161,6554
static const linkstub_t linkstub_native_exec_syscall 163,6705
static const fragment_t linkstub_shared_syscall_trace_fragment 168,6851
static const fragment_t linkstub_shared_syscall_bb_fragment 170,6977
static const linkstub_t linkstub_shared_syscall_trace 185,7735
static const linkstub_t linkstub_shared_syscall_bb 187,7839
static const linkstub_t linkstub_shared_syscall_unlinked 191,8050
static const fragment_t coarse_fragment 196,8207
static const linkstub_t linkstub_coarse_exit 202,8520
static const linkstub_t linkstub_coarse_trace_head_exit 203,8585
static const linkstub_t linkstub_hot_patch 207,8749
static const linkstub_t linkstub_client 212,8913
static const fragment_t linkstub_ibl_trace_fragment 219,9152
static const fragment_t linkstub_ibl_bb_fragment 221,9248
static const linkstub_t linkstub_ibl_trace_ret 244,10397
static const linkstub_t linkstub_ibl_trace_jmp 246,10498
static const linkstub_t linkstub_ibl_trace_call 248,10596
static const linkstub_t linkstub_ibl_bb_ret 250,10696
static const linkstub_t linkstub_ibl_bb_jmp 252,10794
static const linkstub_t linkstub_ibl_bb_call 254,10889
static const linkstub_t linkstub_ibl_trace_ret_client 257,11012
static const linkstub_t linkstub_ibl_bb_ret_client 259,11120
is_empty_fragment(265,11262
empty_fragment_mark_x86(273,11453
typedef struct thread_link_data_t 281,11684
    linkstub_t linkstub_deleted;282,11720
    fragment_t linkstub_deleted_fragment;283,11753
    int linkstub_deleted_ordinal;289,11998
} thread_link_data_t;290,12032
link_reset_init(294,12133
link_reset_free(313,12858
link_init(325,13089
link_exit(332,13159
link_thread_init(340,13277
link_thread_exit(355,13824
linkstubs_init(363,14091
linkstub_size(384,14958
linkstub_propagatable_flags(397,15503
linkstub_frag_offs_at_end(406,15723
use_cbr_fallthrough_short(433,17040
linkstubs_heap_size(461,18263
linkstub_fragment(481,19026
linkstub_owned_by_fragment(551,22137
set_last_exit(582,23282
last_exit_deleted(600,24070
set_coarse_ibl_exit(678,27425
get_last_linkstub_ordinal(717,28781
get_deleted_linkstub(726,29020
get_starting_linkstub(735,29253
get_reset_linkstub(741,29332
get_syscall_linkstub(747,29405
get_selfmod_linkstub(753,29482
get_ibl_deleted_linkstub(759,29559
get_sigreturn_linkstub(766,29656
get_asynch_linkstub(772,29756
get_native_exec_linkstub(779,29838
get_native_exec_syscall_linkstub(785,29923
get_shared_syscalls_unlinked_linkstub(792,30039
get_shared_syscalls_trace_linkstub(798,30149
get_shared_syscalls_bb_linkstub(804,30253
get_hot_patch_linkstub(812,30402
get_client_linkstub(820,30514
is_ibl_sourceless_linkstub(827,30582
get_ibl_sourceless_linkstub(844,31065
is_client_ibl_linkstub(867,31759
get_client_ibl_linkstub(874,31925
get_coarse_exit_linkstub(886,32268
get_coarse_trace_head_exit_linkstub(893,32394
should_separate_stub(899,32487
local_exit_stub_size(905,32649
is_cbr_of_cbr_fallthrough(940,34223
separate_stub_create(949,34446
separate_stub_free(1004,37018
linkstub_shares_next_stub(1055,39260
linkstub_free_exitstubs(1072,39803
linkstubs_shift(1092,40531
is_linkable(1114,41453
link_branch(1169,43657
unlink_branch(1217,45671
incoming_direct_linkstubs_match(1262,47487
incoming_find_link(1278,48234
incoming_link_exists(1318,49878
incoming_remove_link_nosearch(1331,50349
incoming_remove_link_search(1394,53449
incoming_remove_link(1427,54894
add_to_incoming_list(1458,56171
add_private_check_shared(1491,57687
add_future_incoming(1531,59254
add_incoming(1569,60930
incoming_remove_fragment(1589,61715
debug_after_link_change(1732,68483
link_fragment_incoming(1744,68781
link_fragment_outgoing(1797,71128
unlink_fragment_incoming(1877,74466
unlink_fragment_outgoing(1916,76018
link_new_fragment(1950,77231
shift_links_to_new_fragment(2032,80896
static vm_area_vector_t *coarse_stub_areas;coarse_stub_areas2389,98705
coarse_stubs_init(2392,98762
coarse_stubs_free(2400,98969
num_coarse_stubs_for_prefix(2410,99314
coarse_stub_alignment(2419,99644
coarse_stubs_create(2428,99872
    special_heap_iterator_t shi;2478,102272
    cache_pc start,2479,102305
    cache_pc start, end,2479,102305
    cache_pc start, end, pc;2479,102305
    coarse_info_t *info;info2480,102334
} coarse_stubs_iterator_t;2481,102359
coarse_stubs_iterator_start(2484,102399
coarse_stubs_iterator_hasnext(2503,103103
coarse_stubs_iterator_next(2509,103268
coarse_stubs_iterator_stop(2531,103950
coarse_stubs_delete(2537,104060
entrance_stub_create(2579,105568
set_fake_direct_linkstub(2610,106941
print_coarse_incoming(2623,107414
prepend_new_coarse_incoming(2643,108119
fragment_coarse_link_wrapper(2689,109942
fragment_link_lookup_same_sharing(2703,110402
coarse_link_to_fine(2716,110983
coarse_link_direct(2768,113651
link_new_coarse_grain_fragment(2907,120290
coarse_remove_incoming(3143,131896
coarse_remove_outgoing(3184,133640
coarse_mark_trace_head(3247,136601
coarse_unit_unlink(3276,137762
coarse_unit_unlink_outgoing(3357,141190
coarse_unit_outgoing_linked(3386,142226
coarse_stub_lookup_by_target(3414,143043
coarse_lazy_link(3433,143832
fcache_return_coarse_prefix(3560,150240
trace_head_return_coarse_prefix(3577,150745
get_coarse_ibl_prefix(3594,151281
in_coarse_stubs(3613,151879
in_coarse_stub_prefixes(3619,151979
coarse_deref_ibl_prefix(3635,152492
get_stub_coarse_info(3649,152886
coarse_frozen_stub_size(3656,153087
coarse_update_outgoing(3718,155658
coarse_unit_shift_links(3797,159454
coarse_stubs_set_info(3849,161813
coarse_stubs_set_end_pc(3855,161919

module_shared.h,2890
#define MODULE_LIST_H35,1774
typedef struct _module_handle_t * module_handle_t;57,2430
#define MODULE_FILE_VERSION_INVALID 61,2498
typedef union _version_number_t 67,2684
    uint64 version;68,2718
        uint ms;70,2796
        uint ls;71,2825
    } version_uint;72,2854
        ushort p2;74,2933
        ushort p1;75,2962
        ushort p4;76,2991
        ushort p3;77,3020
    } version_parts;78,3049
} version_number_t;79,3115
typedef struct _module_names_t 98,3673
    const char *module_name;module_name99,3706
    const char *file_name;file_name103,4054
    const char *exe_name;exe_name106,4222
    const char *rsrc_name;rsrc_name109,4458
    uint64 inode;113,4721
} module_names_t;115,4794
#define GET_MODULE_NAME(130,5333
#define GET_MODULE_NAME(140,5942
typedef struct _module_area_t 148,6386
    app_pc start;162,7326
    app_pc end;163,7344
    app_pc entry_point;165,7361
    uint flags;167,7386
    module_names_t names;169,7403
    char *full_path;full_path170,7429
    os_module_data_t os_data;172,7451
} module_area_t;173,7520
    MODULE_HAS_PRIMARY_COARSE 178,7671
    MODULE_HAS_PRIMARY_COARSE = 0x00000001,x00000001178,7671
    MODULE_RCT_LOADED 181,7847
    MODULE_RCT_LOADED      = 0x00000002,x00000002181,7847
    MODULE_HAS_BORLAND_SEH 184,7980
    MODULE_HAS_BORLAND_SEH = 0x00000004,x00000004184,7980
    MODULE_BEING_UNLOADED 187,8109
    MODULE_BEING_UNLOADED  = 0x00000008,x00000008187,8109
    MODULE_WAS_EXEMPTED 189,8220
    MODULE_WAS_EXEMPTED    = 0x00000010,x00000010189,8220
    MODULE_RCT_SCANNED 192,8397
    MODULE_RCT_SCANNED     = 0x00000020,x00000020192,8397
    MODULE_DO_NOT_PERSIST 196,8521
    MODULE_DO_NOT_PERSIST  = 0x00000040,x00000040196,8521
    MODULE_NULL_INSTRUMENT 199,8593
    MODULE_NULL_INSTRUMENT = 0x00000080,x00000080199,8593
typedef struct _module_iterator_t module_iterator_t;260,10997
typedef void *module_base_t;module_base_t300,13043
module_info_exists(359,15447
    byte full_MD5[full_MD5383,16248
    byte short_MD5[short_MD5392,16702
} module_digest_t;398,16952
typedef struct _privmod_t 429,18206
    app_pc base;430,18234
    size_t size;431,18251
    const char *name;name432,18268
    char path[path433,18290
    uint ref_count;434,18319
    bool externally_loaded;435,18339
    bool is_client;437,18391
    struct _privmod_t *next;next439,18437
    struct _privmod_t *prev;prev440,18466
    void *os_privmod_data;os_privmod_data441,18495
} privmod_t;442,18522
# define DLL_PROCESS_INIT 447,18583
# define DLL_PROCESS_EXIT 448,18628
# define DLL_THREAD_INIT 449,18673
# define DLL_THREAD_EXIT 450,18717
# define DLL_PROCESS_INIT 452,18767
# define DLL_PROCESS_EXIT 453,18795
# define DLL_THREAD_INIT 454,18823
# define DLL_THREAD_EXIT 455,18851
#define PRIVMOD_STATIC_NUM 459,18942
#define SEARCH_PATHS_NUM 464,19163

unix/signal.c,10773
#undef errno44,2007
typedef void (*handler_t)handler_t105,3786
    DEFAULT_TERMINATE,109,3869
    DEFAULT_TERMINATE_CORE,110,3892
    DEFAULT_IGNORE,111,3920
    DEFAULT_STOP,112,3940
    DEFAULT_CONTINUE,113,3958
int default_action[default_action116,3984
bool can_always_delay[can_always_delay192,6914
sig_is_alarm_signal(263,9683
#define SIGSTACK_SIZE 273,10048
#define SA_RESTORER 276,10135
void kernel_sigemptyset(284,10397
void kernel_sigfillset(290,10508
void kernel_sigaddset(296,10619
void kernel_sigdelset(306,10851
bool kernel_sigismember(316,11089
void copy_kernel_sigset_to_sigset(327,11417
void copy_sigset_to_kernel_sigset(346,11876
struct _kernel_sigaction_t 369,12761
    handler_t handler;370,12790
    unsigned long flags;371,12813
    void (*restorer)restorer372,12838
    kernel_sigset_t mask;373,12866
    unsigned long     uc_flags;380,13045
    struct ucontext  *uc_link;uc_link381,13077
    stack_t           uc_stack;382,13108
    struct sigcontext uc_mcontext;383,13140
    kernel_sigset_t   uc_sigmask;384,13175
} kernel_ucontext_t;385,13243
#define RETCODE_SIZE 391,13428
typedef struct sigframe 393,13452
    char *pretcode;pretcode394,13478
    int sig;395,13498
    struct sigcontext sc;396,13511
    struct _fpstate fpstate;400,13676
    unsigned long extramask[extramask401,13705
    char retcode[retcode402,13749
    int sig_noclobber;413,14354
} sigframe_plain_t;415,14424
typedef struct rt_sigframe 418,14495
    char *pretcode;pretcode419,14524
    siginfo_t info;422,14576
    kernel_ucontext_t uc;423,14596
    kernel_ucontext_t uc;425,14629
    siginfo_t info;426,14655
    int sig;429,14689
    siginfo_t *pinfo;pinfo430,14702
    void *puc;puc431,14724
    siginfo_t info;432,14739
    kernel_ucontext_t uc;433,14759
    char retcode[retcode441,15205
} sigframe_rt_t;444,15291
#define IS_RT_FOR_APP(448,15371
#define APP_HAS_SIGSTACK(458,15870
#define AVX_ALIGNMENT 464,16120
#define FPSTATE_ALIGNMENT 465,16145
#define XSTATE_ALIGNMENT 466,16174
typedef struct _sigpending_t 474,16489
    sigframe_rt_t rt_frame;475,16520
    struct _xstate __attribute__ ((aligned (AVX_ALIGNMENT))) xstate;480,16759
    byte *access_address;access_address483,16936
    bool use_sigcontext;486,17054
    struct _sigpending_t *next;next487,17079
} sigpending_t;488,17111
#define AVX_FRAME_EXTRA 496,17447
#define FPSTATE_FRAME_EXTRA 497,17520
#define XSTATE_FRAME_EXTRA 498,17598
#define AVX_DATA_SIZE 500,17682
#define FPSTATE_DATA_SIZE 501,17733
#define XSTATE_DATA_SIZE 502,17785
typedef struct _itimer_info_t 505,17941
    uint64 interval;507,18053
    uint64 value;508,18074
} itimer_info_t;509,18092
typedef struct _thread_itimer_info_t 511,18110
    itimer_info_t app;512,18149
    itimer_info_t app_saved;513,18172
    itimer_info_t dr;514,18201
    itimer_info_t actual;515,18223
    void (*cb)cb516,18249
    void (*cb_api)cb_api518,18328
} thread_itimer_info_t;519,18379
#define NUM_ITIMERS 524,18526
#define SKIP_ALARM_XL8_MAX 527,18623
typedef struct _sigfd_pipe_t sigfd_pipe_t;530,18675
#define EMULATE_SIGMASK(537,18967
typedef struct _thread_sig_info_t 540,19079
    kernel_sigaction_t **app_sigaction;app_sigaction545,19313
    bool fully_initialized;550,19500
    bool shared_app_sigaction;553,19593
    mutex_t *shared_lock;shared_lock554,19624
    int *shared_refcount;shared_refcount555,19650
    bool *we_intercept;we_intercept557,19729
    bool shared_itimer;564,20030
    recursive_lock_t *shared_itimer_lock;shared_itimer_lock568,20208
    int *shared_itimer_refcount;shared_itimer_refcount572,20374
    int *shared_itimer_underDR;shared_itimer_underDR573,20407
    thread_itimer_info_t (*itimer)itimer574,20485
    int restorer_valid[restorer_valid577,20611
    stack_t app_sigstack;580,20679
    sigpending_t *sigpending[sigpending581,20705
    bool accessing_sigpending;583,20831
    kernel_sigset_t app_sigblocked;584,20862
    kernel_sigset_t pre_syscall_app_sigblocked;586,20952
    kernel_sigset_t pre_syscall_app_sigprocmask;588,21054
    uint skip_alarm_xl8;592,21258
    sigfd_pipe_t *signalfd[signalfd594,21329
    bool in_sigsuspend;597,21432
    kernel_sigset_t app_sigblocked_save;598,21456
    volatile int num_unstarted_children;601,21571
    mutex_t child_lock;602,21612
    stack_t sigstack;605,21666
    void *sigheap;sigheap606,21688
    fragment_t *interrupted;interrupted607,21726
    cache_pc interrupted_pc;608,21798
    app_pc signal_restorer_retaddr;611,21906
} thread_sig_info_t;613,22001
typedef struct _clone_record_t 617,22143
    byte *dstack;dstack618,22176
    reg_t app_thread_xsp;619,22260
    app_pc continuation_pc;620,22333
    thread_id_t caller_id;621,22361
    int clone_sysnum;622,22388
    uint clone_flags;623,22410
    thread_sig_info_t info;624,22432
    thread_sig_info_t *parent_info;parent_info625,22460
    void *pcprofile_info;pcprofile_info626,22496
    reg_t for_dynamorio_clone[for_dynamorio_clone630,22619
} clone_record_t;631,22653
static thread_sig_info_t init_info;634,22740
static kernel_sigset_t init_sigmask;635,22776
static bool removed_sig_handler;638,22827
sigaction_syscall(713,24945
sigaltstack_syscall(727,25428
getitimer_syscall(733,25585
setitimer_syscall(739,25720
sigprocmask_syscall(745,25883
unblock_all_signals(752,26094
set_default_signal_action(761,26296
handler_free(779,26827
handler_alloc(785,26955
struct i387_fsave_struct 799,27352
    long        cwd;800,27379
    long        swd;801,27400
    long        twd;802,27421
    long        fip;803,27442
    long        fcs;804,27463
    long        foo;805,27484
    long        fos;806,27505
    long        st_space[st_space807,27526
    long        status;808,27602
struct i387_fxsave_struct 814,27765
    unsigned short      cwd;815,27793
    unsigned short      swd;816,27822
    unsigned short      twd;817,27851
    unsigned short      fop;818,27880
    long        rip;820,27920
    long        rdp;821,27941
    int         mxcsr;822,27962
    int         mxcsr_mask;823,27985
    int         st_space[st_space824,28013
    int         xmm_space[xmm_space825,28090
    int         padding[padding826,28169
    long        fip;828,28204
    long        fcs;829,28225
    long        foo;830,28246
    long        fos;831,28267
    long        mxcsr;832,28288
    long        reserved;833,28311
    long        st_space[st_space834,28337
    long        xmm_space[xmm_space835,28414
    long        padding[padding836,28492
union i387_union 840,28563
    struct i387_fsave_struct    fsave;841,28582
    struct i387_fxsave_struct   fxsave;842,28621
twd_fxsr_to_i387(850,28839
convert_fxsave_to_fpstate(893,30053
save_xmm(919,30810
save_fpstate(963,32404
os_itimers_thread_shared(1027,35147
signal_init(1062,36363
signal_exit(1085,37196
signal_thread_init(1097,37465
create_clone_record(1157,39991
set_clone_record_fields(1198,41848
get_clone_record(1219,42759
get_clone_record_app_xsp(1247,43926
get_clone_record_dstack(1254,44061
signal_info_init_sigaction(1262,44272
signal_info_exit_sigaction(1274,44894
signal_thread_inherit(1317,46761
share_siginfo_after_take_over(1553,57635
signal_fork_init(1578,58696
sigsegv_handler_is_ours(1637,61153
signal_thread_exit(1647,61383
set_our_handler_sigact(1768,66342
intercept_signal(1811,68114
handle_clone(1875,70488
handle_sigaction(1939,73233
handle_post_sigaction(2027,76711
handle_sigaltstack(2069,78504
set_blocked(2095,79406
check_signals_pending(2121,80364
handle_sigprocmask(2143,80980
handle_post_sigprocmask(2228,84871
handle_sigsuspend(2257,86010
static generic_table_t *sigfd_table;sigfd_table2304,87882
struct _sigfd_pipe_t 2306,87920
    file_t write_fd;2307,87943
    file_t read_fd;2308,87964
    uint refcount;2309,87984
    dcontext_t *dcontext;dcontext2310,88003
sigfd_pipe_free(2314,88045
signalfd_init(2340,88936
#   define SIGNALFD_HTABLE_INIT_SIZE 2342,88958
signalfd_exit(2358,89749
signalfd_thread_exit(2364,89842
handle_pre_signalfd(2379,90300
notify_signalfd(2473,94110
signal_handle_dup(2517,95941
signal_handle_close(2535,96555
dump_fpstate(2556,97257
dump_sigcontext(2640,100856
dump_sigset(2687,103133
safe_is_in_fcache(2707,103923
safe_is_in_coarse_stubs(2719,104284
is_on_alt_stack(2731,104657
sigcontext_to_mcontext(2744,105049
mcontext_to_sigcontext(2797,106923
translate_sigcontext(2846,108561
thread_set_self_context(2894,110450
thread_set_self_mcontext(2934,112270
sig_has_restorer(2943,112464
get_app_frame_size(2993,114594
get_sigcontext_from_rt_frame(3002,114801
get_sigcontext_from_app_frame(3008,114943
get_sigcontext_from_pending(3021,115315
get_sigstack_frame_ptr(3034,115839
convert_frame_to_nonrt(3112,119032
convert_frame_to_nonrt_partial(3137,120173
fixup_rtframe_pointers(3154,120860
copy_frame_to_stack(3241,124382
copy_frame_to_pending(3368,129684
send_signal_to_client(3408,131418
handle_client_action_from_cache(3484,135125
abort_on_fault(3544,137794
abort_on_DR_fault(3575,139037
unlink_fragment_for_signal(3587,139428
interrupted_inlined_syscall(3640,141907
sysnum_is_not_restartable(3687,143938
adjust_syscall_for_restart(3719,145396
record_pending_signal(3827,149895
is_sys_kill(4211,168295
compute_memory_target(4229,168930
check_for_modified_code(4350,173506
struct clone_and_swap_args 4429,176969
    byte *stack;stack4430,176998
    byte *tos;tos4431,177015
sig_should_swap_stack(4436,177092
sig_take_over(4464,178098
is_safe_read_ucxt(4473,178269
master_signal_handler_C(4486,178603
execute_handler_from_cache(4888,196607
execute_handler_from_dispatch(4999,201762
terminate_via_kill(5184,209574
execute_default_action(5203,210278
execute_default_from_cache(5400,220183
execute_default_from_dispatch(5407,220408
receive_pending_signal(5413,220563
handle_sigreturn(5478,223325
is_signal_restorer_code(5630,229865
#   define reverse(5644,230399
os_forge_exception(5674,231465
os_request_fatal_coredump(5759,235410
os_request_live_coredump(5775,236004
os_dump_core(5789,236310
at_known_exception(5836,237991
timeval_to_usec(5928,242216
usec_to_timeval(5934,242333
init_itimer(5941,242480
set_actual_itimer(5976,243959
itimer_new_settings(6000,244942
set_itimer_callback(6056,247578
get_itimer_frequency(6084,248669
handle_alarm(6102,249246
start_itimer(6198,253349
stop_itimer(6236,254788
handle_pre_setitimer(6273,256190
handle_post_setitimer(6300,257386
handle_post_getitimer(6325,258406
handle_pre_alarm(6362,259961
handle_post_alarm(6373,260241
handle_suspend_signal(6384,260542
dr_setjmp_sigmask(6486,264809
handle_nudge_signal(6502,265344

unix/loader.c,3231
#define SYSTEM_LIBRARY_PATH_VAR 60,2634
char *ld_library_path ld_library_path61,2684
static const char *system_lib_paths[system_lib_paths62,2714
#define NUM_SYSTEM_LIB_PATHS 83,3292
#define RPATH_ORIGIN 86,3383
static os_privmod_data_t *libdr_opd;libdr_opd88,3415
static bool privmod_initialized 89,3452
static size_t max_client_tls_size 90,3493
static bool printed_gdb_commands 93,3596
static char gdb_priv_cmds[gdb_priv_cmds95,3683
static size_t gdb_priv_cmds_sofar;96,3716
struct _IO_FILE  **privmod_stdout;privmod_stdout102,3881
struct _IO_FILE  **privmod_stderr;privmod_stderr103,3916
struct _IO_FILE  **privmod_stdin;privmod_stdin104,3951
#define LIBC_STDOUT_NAME 105,3985
#define LIBC_STDERR_NAME 106,4019
#define LIBC_STDIN_NAME 107,4053
os_loader_init_prologue(142,4878
os_loader_init_epilogue(167,5653
privload_add_gdb_cmd(189,6571
os_loader_exit(199,6885
os_loader_thread_init_prologue(213,7314
os_loader_thread_init_epilogue(229,7847
os_loader_thread_exit(235,7931
privload_add_areas(241,8006
privload_remove_areas(265,8865
privload_unmap_file(288,9740
privload_unload_imports(310,10486
dr_gdb_add_symbol_file(322,10881
privload_map_and_relocate(334,11330
privload_process_imports(405,13966
privload_call_entry(442,15242
privload_redirect_setup(494,17120
privload_os_finalize(500,17236
privload_init_search_paths(506,17314
privload_locate_and_load(513,17457
privload_load_private_library(522,17732
privload_load_finalized(539,18172
privload_search_rpath(545,18261
privload_locate(606,20871
get_private_library_address(695,24019
privload_call_modules_entry(744,25887
privload_call_lib_func(774,26960
get_private_library_bounds(790,27418
privload_relocate_mod(808,27871
privload_create_os_privmod_data(858,30102
privload_delete_os_privmod_data(877,30786
#define MAX_NUM_TLS_MOD 927,33148
typedef struct _tls_info_t 928,33175
    uint num_mods;929,33204
    int  offset;930,33223
    int  max_align;931,33240
    int  offs[offs932,33260
    privmod_t *mods[mods933,33292
} tls_info_t;934,33330
static tls_info_t tls_info;935,33344
static size_t tcb_size 961,34915
typedef struct _tcb_head_t 966,35072
    void *tcb;tcb967,35101
    void *dtv;dtv968,35116
    void *self;self969,35131
    int multithread;970,35147
    int gscope_flag;972,35179
    ptr_uint_t sysinfo;974,35207
    ptr_uint_t stack_guard;977,35276
    ptr_uint_t pointer_guard;978,35304
} tcb_head_t;979,35334
#define APP_LIBC_TLS_SIZE 987,35737
privload_mod_tls_init(991,35842
privload_tls_init(1034,37546
privload_tls_exit(1097,40158
typedef struct _tls_index_t 1110,40628
  unsigned long int ti_module;1111,40658
  unsigned long int ti_offset;1112,40689
} tls_index_t;1113,40720
redirect___tls_get_addr(1116,40750
redirect____tls_get_addr(1126,41083
typedef struct _redirect_import_t 1140,41576
    const char *name;name1141,41612
    app_pc func;1142,41634
} redirect_import_t;1143,41651
static const redirect_import_t redirect_imports[redirect_imports1145,41673
#define REDIRECT_IMPORTS_NUM 1157,42199
privload_redirect_sym(1160,42289
privload_setup_auxv(1182,43006
takeover_ptrace(1230,44689
reserve_brk(1277,46919
privload_early_inject(1291,47375

unix/native_elf.c,923
enum { DL_RUNTIME_RESOLVE_IDX 73,2938
typedef void *(*fixup_fn_t)fixup_fn_t76,3034
app_pc app_dl_runtime_resolve;79,3170
fixup_fn_t app_dl_fixup;80,3201
enum { MAX_STUB_SIZE 82,3227
static byte plt_stub_template[plt_stub_template84,3257
static uint plt_stub_immed_offset;85,3303
static uint plt_stub_jmp_tgt_offset;86,3338
static size_t plt_stub_size;87,3375
static app_pc stub_heap;88,3404
static app_pc reachability_stub;90,3440
module_contains_pc(94,3493
find_dl_fixup(104,3821
initialize_plt_stub_template(137,4853
replace_module_resolver(184,6887
create_plt_stub(243,8975
destroy_plt_stub(266,9695
plt_reloc_entry_size(276,9929
is_special_stub(290,10191
update_plt_relocations(312,10797
module_change_hooks(347,12116
native_module_hook(393,13713
native_module_unhook(400,13875
find_plt_reloc(407,14057
dynamorio_dl_fixup(443,14931
native_module_init(470,15841
native_module_exit(488,16437

unix/injector.c,2733
static bool verbose 67,2475
static volatile int timeout_expired;71,2539
typedef enum _inject_method_t 73,2577
    INJECT_EARLY,74,2609
    INJECT_LD_PRELOAD,75,2665
    INJECT_PTRACE 76,2721
} inject_method_t;77,2780
typedef struct _dr_inject_info_t 80,2844
    process_id_t pid;81,2879
    const char *exe;exe82,2901
    const char *image_name;image_name83,2963
    const char **argv;argv84,3017
    int pipe_fd;85,3074
    bool exec_self;87,3092
    inject_method_t method;88,3161
    bool killpg;90,3190
    bool exited;91,3207
    int exitcode;92,3224
} dr_inject_info_t;93,3242
get_application_short_name(107,3613
safe_read(115,3734
internal_error(126,4074
ignore_assert(134,4248
report_dynamorio_problem(140,4333
pre_execve_ld_preload(162,4932
pre_execve_early(210,6837
fork_suspended_child(216,6956
write_pipe_cmd(266,8730
inject_early(282,9115
inject_ld_preload(302,9781
create_inject_info(319,10343
get_elf_platform_path(333,10730
exe_is_right_bitwidth(345,11007
dr_inject_process_create(370,11782
dr_inject_prepare_to_exec(406,12769
dr_inject_prepare_to_ptrace(428,13371
dr_inject_prepare_new_process_group(441,13629
dr_inject_get_process_id(459,14037
dr_inject_get_image_name(467,14174
option_present(477,14462
dr_inject_process_inject(488,14742
alarm_handler(544,16578
dr_inject_process_run(551,16649
dr_inject_wait_for_child(573,17303
dr_inject_process_exit(608,18348
enum { MAX_SHELL_CODE 652,19933
# define REG_PC_FIELD 655,19977
# define REG_SP_FIELD 656,20021
# define REG_RETVAL_FIELD 657,20065
enum { REG_PC_OFFSET 662,20190
enum { REG_PC_OFFSET = offsetof(662,20190
enum { REG_PC_OFFSET = offsetof(struct user_regs_struct,662,20190
enum { REG_PC_OFFSET = offsetof(struct user_regs_struct, REG_PC_FIELD)662,20190
#define APP 664,20265
static bool op_exec_gdb 666,20296
static dr_inject_info_t *injector_info;injector_info669,20388
static file_t injector_dr_fd;670,20428
static file_t injectee_dr_fd;671,20458
typedef struct _enum_name_pair_t 673,20489
    const int enum_val;674,20524
    const char * const enum_name;675,20548
} enum_name_pair_t;676,20582
static const enum_name_pair_t pt_req_map[pt_req_map681,20693
our_ptrace(714,22118
#define ptrace 735,22859
ptrace_read_memory(740,22974
ptrace_write_memory(760,23604
gen_push_string(783,24334
gen_syscall(795,24776
gen_print(823,25733
unexpected_trace_event(835,26089
wait_until_signal(847,26475
continue_until_break(865,26931
injectee_run_get_retval(878,27363
injectee_open(950,29805
injectee_mmap(966,30384
injectee_map_file(990,31457
injectee_unmap(1022,32451
injectee_prot(1044,33122
user_regs_to_mc(1069,33938
detach_and_exec_gdb(1112,35027
inject_ptrace(1150,36458

unix/preload.c,272
#define START_DYNAMO 44,2080
#define VERBOSE_INIT_FINI 45,2142
#define VERBOSE 46,2214
#define INIT_BEFORE_LIBC 47,2232
#define pf(62,2505
#define pf(64,2559
#define MAX_COMMAND_LENGTH 82,3183
int nothing 85,3257
take_over(96,3733
_init(152,5381
_fini 211,6782

unix/os.c,18823
#define _LARGEFILE64_SOURCE50,2488
# define MAP_32BIT 56,2646
# define F_DUPFD_CLOEXEC 90,3490
# define SYSNUM_STAT 95,3597
# define SYSNUM_FSTAT 96,3627
# define SYSNUM_STAT 98,3665
# define SYSNUM_FSTAT 99,3697
typedef int (*init_fn_t)init_fn_t103,3789
char **our_environ;our_environ110,4127
#undef errno113,4233
# define _GNU_SOURCE 125,4567
# define __USE_GNU 127,4659
# undef ASSERT153,5306
# undef ASSERT_NOT_IMPLEMENTED154,5321
# undef ASSERT_NOT_TESTED155,5352
# undef ASSERT_CURIOSITY156,5378
# define ASSERT(157,5403
# define ASSERT_NOT_IMPLEMENTED(158,5436
# define ASSERT_NOT_TESTED(159,5485
# define ASSERT_CURIOSITY(160,5529
# undef LOG161,5572
# undef DOSTATS162,5584
# define LOG(163,5600
# define DOSTATS(164,5632
typedef struct _our_modify_ldt_t 172,5988
    unsigned int  entry_number;173,6023
    unsigned int  base_addr;174,6055
    unsigned int  limit;175,6084
    unsigned int  seg_32bit:seg_32bit176,6109
    unsigned int  contents:contents177,6140
    unsigned int  read_exec_only:read_exec_only178,6170
    unsigned int  limit_in_pages:limit_in_pages179,6206
    unsigned int  seg_not_present:seg_not_present180,6242
    unsigned int  useable:useable181,6279
} our_modify_ldt_t;182,6308
# define FS_TLS 195,6671
# define GS_TLS 196,6723
#define GDT_NUM_TLS_SLOTS 205,6988
#define GDT_ENTRY_TLS_MIN_32 206,7016
#define GDT_ENTRY_TLS_MIN_64 207,7047
static uint gdt_entry_tls_min 212,7251
static bool return_stolen_lib_tls_gdt;221,7657
#define MAX_THREADS 231,8058
typedef struct _tls_slot_t 232,8082
    thread_id_t tid;233,8111
    dcontext_t *dcontext;dcontext234,8132
} tls_slot_t;235,8158
static tls_slot_t *tls_table;tls_table237,8207
#define MAX_NUM_CLIENT_TLS 242,8376
static bool client_tls_allocated[client_tls_allocated247,8531
static char dynamorio_library_path[dynamorio_library_path265,9332
static char dynamorio_alt_arch_path[dynamorio_alt_arch_path267,9425
#define DR_LIBDIR_X86 269,9525
#define DR_LIBDIR_X64 270,9569
static app_pc dynamo_dll_start 273,9658
static app_pc dynamo_dll_end 274,9697
static app_pc executable_start 276,9752
static app_pc executable_end 277,9791
static char executable_path[executable_path280,9867
static char *executable_basename;executable_basename281,9910
static bool kernel_thread_groups;284,10033
bool kernel_futex_support 289,10168
static bool kernel_64bit;291,10204
pid_t pid_cached;293,10231
static bool fault_handling_initialized;295,10250
uint kilo_hertz;298,10312
static mutex_t memory_info_buf_lock 302,10436
static mutex_t maps_iter_buf_lock 304,10572
DR_API file_t our_stdout 307,10721
DR_API file_t our_stderr 308,10763
DR_API file_t our_stdin 309,10805
static struct rlimit app_rlimit_nofile;312,10878
static generic_table_t *fd_table;fd_table318,11116
#define INIT_HTABLE_SIZE_FD 319,11150
IF_DEBUG_ELSE(328,11546
typedef struct _allmem_info_t 330,11606
    uint prot;331,11638
    dr_mem_type_t type;332,11653
    bool shareable;333,11677
} allmem_info_t;334,11697
typedef struct _maps_iter_t 363,12716
    app_pc vm_start;364,12746
    app_pc vm_end;365,12767
    uint prot;366,12786
    size_t offset;367,12801
    uint64 inode;368,12860
    const char *comment;comment373,13296
    bool may_alloc;379,13616
    file_t maps;380,13636
    char *newline;newline381,13653
    int bufread;382,13672
    int bufwant;383,13689
    char *buf;buf384,13706
    char *comment_buffer;comment_buffer385,13721
} maps_iter_t;386,13747
typedef struct _dir_iterator_t 395,14084
    file_t fd;396,14117
    int off;397,14132
    int end;398,14145
    const char *name;name399,14158
    char buf[buf400,14224
} dir_iterator_t;401,14299
app_pc vsyscall_page_start 417,14993
app_pc vsyscall_syscall_end_pc 419,15076
app_pc vsyscall_sysenter_return_pc 421,15177
#define VSYSCALL_PAGE_START_HARDCODED 422,15220
# define VSYSCALL_REGION_MAPS_NAME 428,15467
static int init_errno;445,16316
__errno_location(448,16385
static int libc_errno_tls_offs;479,17658
our_libc_errno_loc(481,17703
typedef int *(*errno_loc_t)errno_loc_t505,18553
get_libc_errno_location(508,18608
get_libc_errno(566,21025
our_unsetenv(600,22160
getenv(641,23101
dynamorio_set_envp(670,24111
our_init(677,24202
init_array[init_array717,25563
_init(724,25670
kernel_is_64bit(731,25768
get_uname(737,25832
os_init(757,26595
os_file_init(823,28989
get_application_pid_helper(864,31048
get_application_pid(877,31348
set_executable_path(886,31541
get_application_name_helper(894,31771
get_application_name(929,33128
get_application_short_name(941,33628
#define PROC_CPUINFO 947,33784
#define CPUMHZ_LINE_LENGTH 948,33821
#define CPUMHZ_LINE_FORMAT 949,33852
get_timer_frequency_cpuinfo(954,34129
get_timer_frequency(993,35373
#define UTC_TO_EPOCH_SECONDS 1006,35704
query_time_seconds(1010,35776
query_time_millis(1017,35922
find_stack_bottom(1037,36609
os_slow_exit(1062,37370
os_fast_exit(1081,37799
os_terminate_with_code(1087,37846
os_terminate(1104,38512
os_timeout(1110,38631
# define ARCH_SET_GS 1126,39115
# define ARCH_SET_FS 1127,39143
# define ARCH_GET_FS 1128,39171
# define ARCH_GET_GS 1129,39199
    TLS_TYPE_NONE,1134,39329
    TLS_TYPE_LDT,1135,39348
    TLS_TYPE_GDT,1136,39366
    TLS_TYPE_ARCH_PRCTL,1138,39395
} tls_type_t;1140,39427
static tls_type_t tls_type;1142,39442
static bool tls_using_msr;1144,39481
static int tls_gdt_index 1151,39623
static int lib_tls_gdt_index 1153,39701
# define GDT_NO_SIZE_LIMIT 1154,39736
#  define GDT_32BIT 1156,39786
#  define GDT_64BIT 1157,39831
modify_ldt_syscall(1161,39897
    unsigned int limit1500:limit15001168,40134
    unsigned int base1500:base15001169,40165
    unsigned int base2316:base23161170,40195
    unsigned int type:type1171,40224
    unsigned int not_system:not_system1172,40249
    unsigned int privilege_level:privilege_level1173,40280
    unsigned int seg_present:seg_present1174,40316
    unsigned int limit1916:limit19161175,40348
    unsigned int custom:custom1176,40378
    unsigned int zero:zero1177,40405
    unsigned int seg_32bit:seg_32bit1178,40430
    unsigned int limit_in_pages:limit_in_pages1179,40460
    unsigned int base3124:base31241180,40495
} raw_ldt_entry_t;1181,40524
    LDT_TYPE_CODE 1184,40551
    LDT_TYPE_CODE      = 0x8,x81184,40551
    LDT_TYPE_DOWN 1185,40581
    LDT_TYPE_DOWN      = 0x4,x41185,40581
    LDT_TYPE_WRITE 1186,40611
    LDT_TYPE_WRITE     = 0x2,x21186,40611
    LDT_TYPE_ACCESSED 1187,40641
    LDT_TYPE_ACCESSED  = 0x1,x11187,40641
#define LDT_BASE(1190,40675
print_raw_ldt(1201,41025
print_all_ldt(1230,42128
#define LDT_ENTRIES_TO_CHECK 1255,43194
find_unused_ldt_index(1259,43282
initialize_ldt_struct(1287,44196
clear_ldt_struct(1305,44872
create_ldt_entry(1315,45131
clear_ldt_entry(1325,45383
#define USER_PRIVILEGE 1339,45736
#define LDT_NOT_GDT 1340,45762
#define GDT_NOT_LDT 1341,45788
#define SELECTOR_IS_LDT 1342,45814
#define LDT_SELECTOR(1343,45843
#define GDT_SELECTOR(1344,45924
#define SELECTOR_INDEX(1345,46005
#define WRITE_DR_SEG(1347,46047
#define WRITE_LIB_SEG(1352,46261
read_selector(1358,46496
typedef struct _os_seg_info_t 1379,47130
    int   tls_type;1380,47162
    void *dr_fs_base;dr_fs_base1381,47182
    void *dr_gs_base;dr_gs_base1382,47204
    our_modify_ldt_t app_thread_areas[app_thread_areas1383,47226
} os_seg_info_t;1384,47284
typedef struct _os_local_state_t 1387,47326
    local_state_extended_t state;1390,47485
    struct _os_local_state_t *self;self1392,47556
    tls_type_t tls_type;1394,47661
    int ldt_index;1397,47799
    thread_id_t tid;1399,47878
    ushort app_gs;1401,47961
    ushort app_fs;1402,48021
    void  *app_gs_base;app_gs_base1403,48081
    void  *app_fs_base;app_fs_base1404,48145
        os_seg_info_t os_seg_info;1410,48437
        void *client_tls[client_tls1411,48472
} os_local_state_t;1413,48525
#define TLS_LOCAL_STATE_OFFSET 1415,48546
#define TLS_OS_LOCAL_STATE 1418,48644
#define TLS_SELF_OFFSET 1420,48681
#define TLS_THREAD_ID_OFFSET 1421,48768
#define TLS_DCONTEXT_OFFSET 1422,48854
#define TLS_APP_GS_BASE_OFFSET 1425,49016
#define TLS_APP_FS_BASE_OFFSET 1426,49089
#define TLS_APP_GS_OFFSET 1427,49162
#define TLS_APP_FS_OFFSET 1428,49225
#define WRITE_TLS_SLOT_IMM(1440,49888
#define READ_TLS_SLOT_IMM(1445,50172
#define WRITE_TLS_SLOT(1451,50482
#define READ_TLS_SLOT(1459,50951
is_segment_register_initialized(1468,51440
os_tls_offset(1498,52576
os_get_dr_seg_base(1510,52920
get_os_tls(1529,53411
get_os_tls_from_dc(1541,53719
os_get_app_seg_base(1552,54005
os_get_app_seg_base_offset(1576,54760
os_get_app_seg_offset(1589,55067
get_tls(1602,55358
set_tls(1610,55458
get_segment_base(1623,55748
get_app_segment_base(1689,58299
get_local_state_extended(1701,58635
get_local_state(1710,58837
os_handle_mov_seg(1724,59181
choose_gdt_slots(1785,61295
os_tls_app_seg_init(1891,65288
os_tls_init(1951,67510
os_tls_exit(2161,77352
os_tls_get_gdt_index(2213,79233
os_tls_pre_init(2224,79520
os_tls_calloc(2245,80219
os_tls_cfree(2279,81182
os_thread_init(2296,81600
os_thread_exit(2341,83310
os_fork_pre(2374,84402
os_fork_post(2420,86610
os_fork_init(2439,87383
os_should_swap_state(2486,89069
os_using_app_state(2494,89312
os_swap_context(2514,90016
os_thread_under_dynamo(2521,90198
os_thread_not_under_dynamo(2528,90342
get_process_group_id(2535,90497
get_process_id(2542,90665
get_parent_id(2549,90825
get_sys_thread_id(2555,90909
get_thread_id(2565,91100
get_tls_thread_id(2578,91442
get_thread_private_dcontext(2594,92084
set_thread_private_dcontext(2659,94995
replace_thread_id(2705,96281
permstr_to_memprot(2734,97140
memprot_to_osprot(2750,97540
osprot_to_memprot(2764,97908
osprot_replace_memprot(2779,98313
mprotect_syscall(2790,98636
mmap_syscall_succeeded(2796,98758
mmap_syscall(2818,99566
munmap_syscall(2825,99824
os_raw_mem_free(2833,100013
os_raw_mem_alloc(2852,100492
dr_raw_mremap(2891,101821
dr_raw_brk(2916,102765
os_heap_free(2936,103425
os_heap_reserve(2957,104119
find_free_memory_in_region(3024,106989
os_heap_reserve_in_region(3053,107938
os_heap_commit(3095,109506
os_heap_decommit(3120,110304
os_heap_systemwide_overcommit(3141,110998
os_heap_get_commit_limit(3148,111131
futex_wait(3160,111533
futex_wake(3178,112096
futex_wake_all(3194,112524
thread_yield(3212,112940
thread_signal(3218,113015
thread_sleep(3230,113465
thread_suspend(3262,114810
thread_resume(3310,116660
thread_terminate(3353,118134
is_thread_terminated(3366,118555
os_wait_thread_terminated(3374,118740
thread_get_mcontext(3391,119264
thread_set_mcontext(3407,119758
is_thread_currently_native(3423,120255
client_thread_run(3430,120423
dr_create_client_thread(3468,121991
get_num_processors(3533,125048
load_shared_library(3574,126584
lookup_library_routine(3596,127377
unload_shared_library(3607,127698
shared_library_error(3620,128009
shared_library_bounds(3640,128621
llseek_syscall(3675,129938
os_file_exists(3687,130312
os_files_same(3702,130792
os_get_file_size(3719,131301
os_get_file_size_by_handle(3734,131728
os_create_dir(3752,132262
open_syscall(3762,132662
close_syscall(3769,132811
dup_syscall(3775,132890
read_syscall(3781,132969
write_syscall(3787,133089
fcntl_syscall(3794,133254
#    define O_LARGEFILE 3804,133492
#    define O_LARGEFILE 3806,133529
os_open(3816,133829
os_open_directory(3846,135046
os_close(3853,135184
fd_priv_dup(3863,135337
fd_mark_close_on_exec(3889,136447
fd_table_add(3900,136746
fd_is_dr_owned(3928,137831
fd_is_in_private_range(3939,138122
os_open_protected(3947,138305
os_close_protected(3974,139059
os_write(3988,139478
os_read(3995,139623
os_flush(4001,139716
os_seek(4008,139895
os_tell(4020,140118
os_delete_file(4034,140296
os_rename_file(4040,140397
os_delete_mapped_file(4063,141239
os_map_file(4069,141332
#   define MAX_MMAP_LOOP_ITERS 4077,141577
os_unmap_file(4149,144346
os_get_disk_free_space(4159,144579
exit_process_syscall(4185,145688
exit_thread_syscall(4201,146324
os_syslog(4211,146558
all_memory_areas_initialized(4229,147210
print_all_memory_areas(4238,147467
safe_read_via_query(4262,148299
safe_read_ex(4285,149062
safe_read(4302,149751
safe_write_ex(4308,149869
is_readable_without_exception_internal(4363,151864
is_readable_without_exception(4383,152542
is_readable_without_exception_query_os(4396,153050
is_user_address(4402,153189
os_set_protection(4415,153507
set_protection(4457,155108
change_protection(4478,156007
make_writable(4486,156228
bool make_copy_on_writable(4539,158508
make_unwritable(4547,158691
ignorable_system_call(4610,161413
        unsigned long addr;4688,163108
        unsigned long len;4689,163136
        unsigned long prot;4690,163163
        unsigned long flags;4691,163191
        unsigned long fd;4692,163220
        unsigned long offset;4693,163246
} mmap_arg_struct_t;4694,163276
const reg_id_t syscall_regparms[syscall_regparms4698,163380
sys_param_addr(4719,163762
sys_param(4763,165517
#define SET_RETURN_VAL(4769,165677
dr_syscall_get_param(4774,165779
dr_syscall_set_param(4784,166089
dr_syscall_get_result(4795,166486
dr_syscall_set_result(4805,166781
dr_syscall_set_sysnum(4816,167143
dr_syscall_invoke_another(4828,167541
is_clone_thread_syscall_helper(4845,168245
is_clone_thread_syscall(4853,168420
was_clone_thread_syscall(4860,168602
is_sigreturn_syscall_helper(4868,168863
is_sigreturn_syscall(4874,168993
was_sigreturn_syscall(4881,169145
handle_self_signal(4888,169329
    ENV_PROP_RUNUNDER,4922,170781
    ENV_PROP_OPTIONS,4923,170804
static const char * const env_to_propagate[env_to_propagate4925,170829
#define NUM_ENV_TO_PROPAGATE 4932,171027
handle_execve(4935,171124
handle_execve_post(5221,183530
cleanup_after_vfork_execve(5261,185177
handle_close_pre(5284,185912
#define SYSCALL_PC(5359,189239
handle_exit(5367,189544
os_set_app_thread_area(5454,193613
os_get_app_thread_area(5511,196056
os_switch_lib_tls(5536,197227
os_switch_seg_to_context(5542,197365
pre_system_call(5642,201255
allmem_info_free(6406,232548
allmem_info_dup(6412,232679
allmem_should_merge(6423,232939
allmem_info_merge(6437,233401
sync_all_memory_areas(6451,233782
add_all_memory_area(6465,234185
update_all_memory_areas(6482,234821
remove_from_all_memory_areas(6571,238943
mmap_check_for_module_overlap(6585,239438
process_mmap(6646,243041
os_set_dr_seg(6818,251828
handle_post_arch_prctl(6832,252227
handle_app_mremap(6894,254641
handle_app_brk(6943,256770
post_system_call(6986,258509
#define PROC_SELF_MAPS 7485,278789
#define MAPS_LINE_LENGTH 7488,278889
#define MAPS_LINE_FORMAT4 7490,278969
#define MAPS_LINE_MAX4 7491,279060
#define MAPS_LINE_FORMAT8 7493,279171
#define MAPS_LINE_MAX8 7494,279265
#define MAPS_LINE_MAX 7496,279337
#define BUFSIZE 7505,279711
static char buf_scratch[buf_scratch7506,279748
static char comment_buf_scratch[comment_buf_scratch7507,279782
static char buf_iter[buf_iter7514,280178
static char comment_buf_iter[comment_buf_iter7515,280209
maps_iterator_start(7519,280289
maps_iterator_stop(7559,281592
maps_iterator_next(7573,281979
typedef struct _dl_iterate_data_t 7693,287118
    app_pc target_addr;7694,287154
    const char *target_path;target_path7695,287178
    char *path_out;path_out7696,287207
    size_t path_size;7697,287227
    app_pc mod_start;7698,287249
    app_pc mod_end;7699,287271
} dl_iterate_data_t;7700,287291
dl_iterate_get_path_cb(7703,287324
get_library_bounds(7779,291312
get_dynamo_library_bounds(7948,298800
get_dynamorio_library_path(8015,301539
read_proc_self_exe(8029,301920
get_application_base(8057,302928
get_application_end(8083,303724
get_image_entry(8091,303853
mem_stats_snapshot(8112,304463
is_in_dynamo_dll(8119,304522
get_dynamorio_dll_start(8134,304914
get_dynamorio_dll_end(8143,305090
get_dynamorio_dll_preferred_base(8152,305258
# define VSYSCALL_PAGE_SO_NAME 8164,305612
# define USER_MAX 8169,305852
dl_iterate_get_areas_cb(8173,305971
probe_address(8249,309255
probe_add_region(8309,311235
find_vm_areas_via_probe(8332,312059
find_executable_vm_areas(8430,315932
find_dynamo_library_vm_areas(8623,325241
get_stack_bounds(8644,325985
at_initial_stack_bottom(8681,327610
query_memory_ex(8706,328569
get_memory_info(8817,333526
query_memory_ex_from_os(8843,334347
get_memory_info_from_os(8969,339370
all_memory_areas_lock(8988,339984
all_memory_areas_unlock(9009,340733
mutex_wait_contended_lock(9030,341401
mutex_notify_released_lock(9099,344055
rwlock_wait_contended_writer(9117,344706
rwlock_notify_writer(9123,344792
rwlock_wait_contended_reader(9129,344879
rwlock_notify_readers(9135,344965
typedef struct linux_event_t 9143,345187
    volatile int signaled;9149,345465
    mutex_t lock;9150,345492
} linux_event_t;9151,345510
create_event(9158,345713
destroy_event(9167,345962
signal_event(9174,346092
reset_event(9184,346323
wait_for_event(9195,346643
struct linux_dirent 9239,348209
    long           d_ino;9240,348231
    off_t          d_off;9241,348283
    unsigned short d_reclen;9242,348350
    char           d_name[d_name9243,348417
    char           d_pad;9245,348551
    char           d_type;9246,348602
#define CURRENT_DIRENT(9250,348681
os_dir_iterator_start(9254,348782
os_dir_iterator_next(9262,348911
typedef struct _takeover_record_t 9297,350205
    thread_id_t tid;9298,350241
    event_t event;9299,350262
} takeover_record_t;9300,350281
static takeover_record_t *thread_takeover_records;thread_takeover_records9310,350708
static uint num_thread_takeover_records;9311,350759
static dcontext_t *takeover_dcontext;takeover_dcontext9317,350989
os_list_threads(9324,351238
os_take_over_all_unknown_threads(9383,353578
os_thread_take_over(9467,356681
os_thread_take_over_suspended_native(9514,358233
os_random_seed(9534,358855
rct_analyze_module_at_violation(9552,359360
rct_add_rip_rel_addr(9600,360972
get_drmarker_hotp_policy_status_table(9610,361186
set_drmarker_hotp_policy_status_table(9617,361288
hook_text(9623,361390
unhook_text(9634,361748
insert_jmp_at_tramp_entry(9640,361845
aslr_is_possible_attack(9647,361985
aslr_possible_preferred_address(9654,362092
take_over_primary_thread(9661,362209
os_current_user_directory(9667,362275
os_validate_user_owned(9694,363352
os_check_option_compatibility(9702,363538
os_file_has_elf_so_header(9709,363654
uint64_divmod(9730,364207
        uint64 v64;9734,364336
            uint32 lo;9736,364373
            uint32 hi;9737,364396
__udivdi3(9775,365583
__umoddi3(9783,365749
test_uint64_divmod(9796,366040
unit_test_os(9836,367268

unix/os_private.h,1397
#define _OS_PRIVATE_H_ 40,1890
# define ASM_XAX 50,2164
# define ASM_XDX 51,2187
# define ASM_XBP 52,2210
# define ASM_XSP 53,2233
# define ASM_XAX 55,2262
# define ASM_XDX 56,2285
# define ASM_XBP 57,2308
# define ASM_XSP 58,2331
#define SUSPEND_SIGNAL 62,2416
#define PTHREAD_CLONE_FLAGS 66,2530
enum { MAX_SYSCALL_ARGS 71,2803
typedef struct _os_thread_data_t 74,2893
    app_pc stack_base;78,3098
    app_pc stack_top;79,3121
    app_pc stack_bottom_pc;82,3169
    mutex_t suspend_lock;92,3632
    int suspend_count;93,3658
    thread_record_t **fork_threads;fork_threads96,3740
    int fork_num_threads;97,3776
    volatile int suspended;107,4153
    volatile int wakeup;108,4181
    volatile int resumed;109,4206
    struct sigcontext *suspended_sigcxt;suspended_sigcxt110,4232
    bool terminate;113,4318
    volatile int terminated;119,4583
    volatile bool retakeover;121,4613
    int processing_signal;124,4716
    void *dr_fs_base;dr_fs_base130,4976
    void *dr_gs_base;dr_gs_base131,4998
    void *app_thread_areas;app_thread_areas132,5020
} os_thread_data_t;133,5096
enum { ARGC_PTRACE_SENTINEL 135,5117
typedef struct ptrace_stack_args_t 138,5223
    ptr_int_t argc;139,5260
    priv_mcontext_t mc;140,5327
    char home_dir[home_dir141,5391
} ptrace_stack_args_t;142,5474
typedef struct _kernel_sigaction_t kernel_sigaction_t;173,5964

unix/module.h,5107
#define MODULE_H35,1769
# define ELF_HEADER_TYPE 42,1991
# define ELF_PROGRAM_HEADER_TYPE 43,2027
# define ELF_SECTION_HEADER_TYPE 44,2071
# define ELF_DYNAMIC_ENTRY_TYPE 45,2115
# define ELF_ADDR 46,2157
# define ELF_WORD 47,2186
# define ELF_HALF 48,2216
# define ELF_SYM_TYPE 49,2245
# define ELF_ST_TYPE 50,2277
# define ELF_WORD_SIZE 51,2312
# define ELF_ST_BIND 52,2363
# define ELF_ST_VISIBILITY 53,2398
# define ELF_REL_TYPE 54,2445
# define ELF_RELA_TYPE 55,2477
# define ELF_AUXV_TYPE 56,2511
# define ELF_HEADER_TYPE 58,2553
# define ELF_PROGRAM_HEADER_TYPE 59,2589
# define ELF_SECTION_HEADER_TYPE 60,2633
# define ELF_DYNAMIC_ENTRY_TYPE 61,2677
# define ELF_ADDR 62,2719
# define ELF_WORD 63,2748
# define ELF_HALF 64,2777
# define ELF_SYM_TYPE 65,2806
# define ELF_ST_TYPE 66,2838
# define ELF_WORD_SIZE 67,2873
# define ELF_ST_BIND 68,2924
# define ELF_ST_VISIBILITY 69,2959
# define ELF_REL_TYPE 70,3006
# define ELF_RELA_TYPE 71,3038
# define ELF_AUXV_TYPE 72,3072
# define ELF_R_TYPE 77,3159
# define ELF_R_SYM 78,3194
# define ELF_R_INFO 79,3228
# define ELF_R_NONE 81,3285
# define ELF_R_DIRECT 82,3346
# define ELF_R_PC32 83,3412
# define ELF_R_COPY 84,3490
# define ELF_R_GLOB_DAT 85,3565
# define ELF_R_JUMP_SLOT 86,3627
# define ELF_R_RELATIVE 87,3689
#  define R_X86_64_IRELATIVE 89,3793
# define ELF_R_IRELATIVE 91,3833
# define ELF_R_TLS_DTPMOD 93,3938
# define ELF_R_TLS_TPOFF 94,4000
# define ELF_R_TLS_DTPOFF 95,4081
#  define R_X86_64_TLSDESC 97,4187
# define ELF_R_TLS_DESC 99,4227
# define ELF_R_TYPE 105,4593
# define ELF_R_SYM 106,4628
# define ELF_R_INFO 107,4662
# define ELF_R_NONE 109,4719
# define ELF_R_DIRECT 110,4775
# define ELF_R_PC32 111,4836
# define ELF_R_COPY 112,4903
# define ELF_R_GLOB_DAT 113,4973
# define ELF_R_JUMP_SLOT 114,5030
# define ELF_R_RELATIVE 115,5087
#  define R_386_IRELATIVE 117,5183
# define ELF_R_IRELATIVE 119,5220
# define ELF_R_TLS_DTPMOD 121,5319
# define ELF_R_TLS_TPOFF 122,5381
# define ELF_R_TLS_DTPOFF 123,5469
#  define R_386_TLS_DESC 125,5565
# define ELF_R_TLS_DESC 127,5603
#define OS_IMAGE_READ 135,6036
#define OS_IMAGE_WRITE 136,6076
#define OS_IMAGE_EXECUTE 137,6117
typedef struct _module_segment_t 142,6315
    app_pc start;144,6420
    app_pc end;145,6438
    uint prot;146,6454
} module_segment_t;147,6469
typedef struct _os_module_data_t 149,6490
    app_pc base_address;157,6976
    size_t alignment;158,7002
    size_t checksum;161,7103
    size_t timestamp;162,7124
    bool   hash_is_gnu;167,7284
    app_pc hashtab;168,7335
    size_t num_buckets;169,7403
    app_pc buckets;170,7460
    size_t num_chain;171,7527
    app_pc chain;172,7583
    app_pc dynsym;173,7649
    app_pc dynstr;174,7706
    size_t dynstr_size;175,7763
    size_t symentry_size;176,7811
    app_pc gnu_bitmask;178,7891
    ptr_uint_t gnu_shift;179,7915
    ptr_uint_t gnu_bitidx;180,7941
    size_t gnu_symbias;181,7968
    bool contiguous;184,8098
    uint num_segments;185,8119
    uint alloc_segments;186,8192
    module_segment_t *segments;segments187,8250
} os_module_data_t;188,8282
typedef void (*fp_t)fp_t190,8303
typedef struct _os_privmod_data_t 194,8458
    os_module_data_t os_data;195,8494
    ELF_DYNAMIC_ENTRY_TYPE *dyn;dyn196,8524
    ptr_int_t      load_delta;197,8557
    char          *soname;soname198,8621
    ELF_ADDR       pltgot;199,8648
    size_t         pltrelsz;200,8675
    ELF_WORD       pltrel;201,8704
    bool           textrel;202,8731
    app_pc         jmprel;203,8759
    ELF_REL_TYPE  *rel;rel204,8786
    size_t         relsz;205,8810
    size_t         relent;206,8836
    ELF_RELA_TYPE *rela;rela207,8863
    size_t         relasz;208,8888
    size_t         relaent;209,8915
    app_pc         verneed;210,8943
    int            verneednum;211,8971
    int            relcount;212,9002
    ELF_HALF      *versym;versym213,9031
    fp_t           init;215,9105
    fp_t           fini;216,9130
    fp_t          *init_array;init_array217,9155
    fp_t          *fini_array;fini_array218,9220
    size_t         init_arraysz;219,9285
    size_t         fini_arraysz;220,9318
    uint           tls_block_size;222,9370
    uint           tls_align;223,9440
    uint           tls_modid;224,9510
    uint           tls_offset;225,9585
    uint           tls_image_size;226,9652
    uint           tls_first_byte;227,9724
    app_pc         tls_image;228,9804
} os_privmod_data_t;229,9873
typedef struct elf_loader_t 307,11864
    const char *filename;filename308,11894
    file_t fd;309,11920
    ELF_HEADER_TYPE *ehdr;ehdr310,11935
    ELF_PROGRAM_HEADER_TYPE *phdrs;phdrs311,11998
    app_pc load_base;312,12073
    ptr_int_t load_delta;313,12130
    size_t image_size;314,12203
    void *file_map;file_map315,12275
    size_t file_size;316,12348
    byte buf[buf324,12783
} elf_loader_t;325,12861
typedef byte *(*map_fn_t)map_fn_t327,12878
typedef bool (*unmap_fn_t)unmap_fn_t329,13033
typedef bool (*prot_fn_t)prot_fn_t330,13085

unix/diagnost.c,118
report_diagnostics(41,1901
append_diagnostics(49,2105
diagnost_exit(55,2254
check_for_unsupported_modules(60,2280

unix/symtab.h,28
#define _SYMTAB_H_ 43,1964

unix/pcprofile.c,1173
#define USE_SYMTAB 58,2504
static bool valid_symtab;61,2560
typedef struct _pc_profile_entry_t 74,3083
    void *                  pc;75,3120
    app_pc                 tag;76,3170
    int                     id;78,3246
    ushort              offset;80,3315
    where_am_i_t    whereami:whereami81,3395
    bool               trace:trace82,3453
    bool             retired:retired83,3527
    int                counter;84,3598
    struct _pc_profile_entry_t *next;next85,3659
} pc_profile_entry_t;86,3725
#define HASH_BITS 88,3748
typedef struct _thread_pc_info_t 91,3814
    bool thread_shared;92,3849
    pc_profile_entry_t **htable;htable93,3873
    void *special_heap;special_heap94,3958
    file_t file;95,3982
    int where[where96,3999
} thread_pc_info_t;97,4026
#define ALARM_FREQUENCY 99,4047
pcprofile_thread_init(110,4530
pcprofile_thread_exit(155,6376
pcprofile_fork_init(184,7339
pcprof_dump_callstack(198,7816
pcprofile_alarm(230,8898
pcprofile_add_entry(297,11484
pcprofile_lookup(327,12252
pcprofile_fragment_deleted(344,12716
pcprofile_destroy_entry(369,13394
pcprofile_reset(392,14012
pcprofile_results(417,14878

unix/stackdump.c,408
#define DEBUGGER 56,2238
#define QUIET_MODE 58,2307
#define TEMPORARY_FILENAME 59,2331
#define CORE_NAME 60,2385
#define VERBOSE 62,2411
#define BATCH_MODE 69,2650
#define DEBUGGER_COMMAND 71,2686
#define DEBUGGER_COMMAND 77,2901
wait_syscall(81,2961
execve_syscall(87,3074
fork_syscall(93,3209
#   define CLONE_CHILD_CLEARTID 117,4417
#   define CLONE_CHILD_SETTID 119,4563
stackdump(148,5787

unix/os_exports.h,1980
#define _OS_EXPORTS_H_ 43,2007
# define _XOPEN_SOURCE 48,2092
# define getpid 53,2244
#define DYNAMORIO_LIBRARY_NAME 56,2304
#define DYNAMORIO_PRELOAD_NAME 57,2353
#define OS_ALLOC_GRANULARITY 60,2450
#define MAP_FILE_VIEW_ALIGNMENT 61,2492
# define SEG_TLS 72,2890
# define ASM_SEG 73,2914
# define LIB_SEG_TLS 74,2937
# define LIB_ASM_SEG 75,2987
# define SEG_TLS 77,3020
# define ASM_SEG 78,3044
# define LIB_SEG_TLS 79,3067
# define LIB_ASM_SEG 80,3117
#define unsetenv 128,4850
# define DECLARE_DATA_SECTION(141,5336
# define DECLARE_DATA_SECTION(145,5454
# define END_DATA_SECTION_DECLARATIONS(157,5989
# define END_DATA_SECTION_DECLARATIONS(162,6119
#define START_DATA_SECTION(169,6306
#define END_DATA_SECTION(170,6357
# define VAR_IN_SECTION(177,6637
# define VAR_IN_SECTION(179,6715
#define VSYSCALL_PAGE_MAPS_NAME 188,7052
#define NUM_NONRT 209,7618
#define OFFS_RT 210,7658
#define NUM_RT 211,7681
#define MAX_SIGNUM 213,7801
#define SIGARRAY_SIZE 216,7926
# define _NSIG_BPW 220,7996
# define _NSIG_BPW 222,8024
#define _NSIG_WORDS 225,8054
typedef struct _kernel_sigset_t 230,8213
    unsigned long sig[sig231,8247
} kernel_sigset_t;232,8283
#  define SIGCXT_TYPE 240,8490
#  define SIGCXT_TYPE 242,8538
# define SIGCXT_TYPE 245,8591
#define CONTEXT_HEAP_SIZE(247,8637
#define CONTEXT_HEAP_SIZE_OPAQUE 248,8680
# define SC_FIELD(253,8884
# define SC_FIELD(255,8928
# define SC_XIP 258,8975
# define SC_XAX 259,9005
# define SC_XCX 260,9035
# define SC_XDX 261,9065
# define SC_XBX 262,9095
# define SC_XSP 263,9125
# define SC_XBP 264,9155
# define SC_XSI 265,9185
# define SC_XDI 266,9215
#  define SC_XFLAGS 268,9259
#  define SC_XFLAGS 270,9303
# define SC_XIP 273,9354
# define SC_XAX 274,9384
# define SC_XCX 275,9414
# define SC_XDX 276,9444
# define SC_XBX 277,9474
# define SC_XSP 278,9504
# define SC_XBP 279,9534
# define SC_XSI 280,9564
# define SC_XDI 281,9594
# define SC_XFLAGS 282,9624

unix/include/syscall.h,46281
#define _SYSCALL_H_ 14,659
# define __NR_read 19,760
# define __NR_write 20,810
# define __NR_open 21,860
# define __NR_close 22,910
# define __NR_stat 23,960
# define __NR_fstat 24,1010
# define __NR_lstat 25,1060
# define __NR_poll 26,1110
# define __NR_lseek 27,1160
# define __NR_mmap 28,1210
# define __NR_mprotect 29,1260
# define __NR_munmap 30,1311
# define __NR_brk 31,1362
# define __NR_rt_sigaction 32,1413
# define __NR_rt_sigprocmask 33,1464
# define __NR_rt_sigreturn 34,1515
# define __NR_ioctl 35,1566
# define __NR_pread64 36,1617
# define __NR_pwrite64 37,1668
# define __NR_readv 38,1719
# define __NR_writev 39,1770
# define __NR_access 40,1821
# define __NR_pipe 41,1872
# define __NR_select 42,1923
# define __NR_sched_yield 43,1974
# define __NR_mremap 44,2025
# define __NR_msync 45,2076
# define __NR_mincore 46,2127
# define __NR_madvise 47,2178
# define __NR_shmget 48,2229
# define __NR_shmat 49,2280
# define __NR_shmctl 50,2331
# define __NR_dup 51,2382
# define __NR_dup2 52,2433
# define __NR_pause 53,2484
# define __NR_nanosleep 54,2535
# define __NR_getitimer 55,2586
# define __NR_alarm 56,2637
# define __NR_setitimer 57,2688
# define __NR_getpid 58,2739
# define __NR_sendfile 59,2790
# define __NR_socket 60,2841
# define __NR_connect 61,2892
# define __NR_accept 62,2943
# define __NR_sendto 63,2994
# define __NR_recvfrom 64,3045
# define __NR_sendmsg 65,3096
# define __NR_recvmsg 66,3147
# define __NR_shutdown 67,3198
# define __NR_bind 68,3249
# define __NR_listen 69,3300
# define __NR_getsockname 70,3351
# define __NR_getpeername 71,3402
# define __NR_socketpair 72,3453
# define __NR_setsockopt 73,3504
# define __NR_getsockopt 74,3555
# define __NR_clone 75,3606
# define __NR_fork 76,3657
# define __NR_vfork 77,3708
# define __NR_execve 78,3759
# define __NR_exit 79,3810
# define __NR_wait4 80,3861
# define __NR_kill 81,3912
# define __NR_uname 82,3963
# define __NR_semget 83,4014
# define __NR_semop 84,4065
# define __NR_semctl 85,4116
# define __NR_shmdt 86,4167
# define __NR_msgget 87,4218
# define __NR_msgsnd 88,4269
# define __NR_msgrcv 89,4320
# define __NR_msgctl 90,4371
# define __NR_fcntl 91,4422
# define __NR_flock 92,4473
# define __NR_fsync 93,4524
# define __NR_fdatasync 94,4575
# define __NR_truncate 95,4626
# define __NR_ftruncate 96,4677
# define __NR_getdents 97,4728
# define __NR_getcwd 98,4779
# define __NR_chdir 99,4830
# define __NR_fchdir 100,4881
# define __NR_rename 101,4932
# define __NR_mkdir 102,4983
# define __NR_rmdir 103,5034
# define __NR_creat 104,5085
# define __NR_link 105,5136
# define __NR_unlink 106,5187
# define __NR_symlink 107,5238
# define __NR_readlink 108,5289
# define __NR_chmod 109,5340
# define __NR_fchmod 110,5391
# define __NR_chown 111,5442
# define __NR_fchown 112,5493
# define __NR_lchown 113,5544
# define __NR_umask 114,5595
# define __NR_gettimeofday 115,5646
# define __NR_getrlimit 116,5697
# define __NR_getrusage 117,5748
# define __NR_sysinfo 118,5799
# define __NR_times 119,5850
# define __NR_ptrace 120,5902
# define __NR_getuid 121,5954
# define __NR_syslog 122,6006
# define __NR_getgid 124,6128
# define __NR_setuid 125,6180
# define __NR_setgid 126,6232
# define __NR_geteuid 127,6284
# define __NR_getegid 128,6336
# define __NR_setpgid 129,6388
# define __NR_getppid 130,6440
# define __NR_getpgrp 131,6492
# define __NR_setsid 132,6544
# define __NR_setreuid 133,6596
# define __NR_setregid 134,6648
# define __NR_getgroups 135,6700
# define __NR_setgroups 136,6752
# define __NR_setresuid 137,6804
# define __NR_getresuid 138,6856
# define __NR_setresgid 139,6908
# define __NR_getresgid 140,6960
# define __NR_getpgid 141,7012
# define __NR_setfsuid 142,7064
# define __NR_setfsgid 143,7116
# define __NR_getsid 144,7168
# define __NR_capget 145,7220
# define __NR_capset 146,7272
# define __NR_rt_sigpending 147,7324
# define __NR_rt_sigtimedwait 148,7376
# define __NR_rt_sigqueueinfo 149,7428
# define __NR_rt_sigsuspend 150,7480
# define __NR_sigaltstack 151,7532
# define __NR_utime 152,7584
# define __NR_mknod 153,7636
# define __NR_uselib 155,7716
# define __NR_personality 156,7768
# define __NR_ustat 157,7820
# define __NR_statfs 158,7872
# define __NR_fstatfs 159,7924
# define __NR_sysfs 160,7976
# define __NR_getpriority 161,8028
# define __NR_setpriority 162,8080
# define __NR_sched_setparam 163,8132
# define __NR_sched_getparam 164,8184
# define __NR_sched_setscheduler 165,8236
# define __NR_sched_getscheduler 166,8288
# define __NR_sched_get_priority_max 167,8340
# define __NR_sched_get_priority_min 168,8392
# define __NR_sched_rr_get_interval 169,8444
# define __NR_mlock 170,8496
# define __NR_munlock 171,8548
# define __NR_mlockall 172,8600
# define __NR_munlockall 173,8652
# define __NR_vhangup 174,8704
# define __NR_modify_ldt 175,8756
# define __NR_pivot_root 176,8808
# define __NR__sysctl 177,8860
# define __NR_prctl 178,8912
# define __NR_arch_prctl 179,8964
# define __NR_adjtimex 180,9016
# define __NR_setrlimit 181,9068
# define __NR_chroot 182,9120
# define __NR_sync 183,9172
# define __NR_acct 184,9224
# define __NR_settimeofday 185,9276
# define __NR_mount 186,9328
# define __NR_umount2 187,9380
# define __NR_swapon 188,9432
# define __NR_swapoff 189,9484
# define __NR_reboot 190,9536
# define __NR_sethostname 191,9588
# define __NR_setdomainname 192,9640
# define __NR_iopl 193,9692
# define __NR_ioperm 194,9744
# define __NR_create_module 195,9796
# define __NR_init_module 196,9848
# define __NR_delete_module 197,9900
# define __NR_get_kernel_syms 198,9952
# define __NR_query_module 199,10004
# define __NR_quotactl 200,10056
# define __NR_nfsservctl 201,10108
# define __NR_getpmsg 203,10191
# define __NR_putpmsg 204,10243
# define __NR_afs_syscall 206,10318
# define __NR_tuxcall 208,10393
# define __NR_security 209,10445
# define __NR_gettid 210,10497
# define __NR_readahead 211,10549
# define __NR_setxattr 212,10601
# define __NR_lsetxattr 213,10653
# define __NR_fsetxattr 214,10705
# define __NR_getxattr 215,10757
# define __NR_lgetxattr 216,10809
# define __NR_fgetxattr 217,10861
# define __NR_listxattr 218,10913
# define __NR_llistxattr 219,10965
# define __NR_flistxattr 220,11017
# define __NR_removexattr 221,11069
# define __NR_lremovexattr 222,11121
# define __NR_fremovexattr 223,11173
# define __NR_tkill 224,11225
# define __NR_time 225,11277
# define __NR_futex 226,11329
# define __NR_sched_setaffinity 227,11381
# define __NR_sched_getaffinity 228,11433
# define __NR_set_thread_area 229,11485
# define __NR_io_setup 230,11537
# define __NR_io_destroy 231,11589
# define __NR_io_getevents 232,11641
# define __NR_io_submit 233,11693
# define __NR_io_cancel 234,11745
# define __NR_get_thread_area 235,11797
# define __NR_lookup_dcookie 236,11849
# define __NR_epoll_create 237,11901
# define __NR_epoll_ctl_old 238,11953
# define __NR_epoll_wait_old 239,12005
# define __NR_remap_file_pages 240,12057
# define __NR_getdents64 241,12109
# define __NR_set_tid_address 242,12161
# define __NR_restart_syscall 243,12213
# define __NR_semtimedop 244,12265
# define __NR_fadvise64 245,12317
# define __NR_timer_create 246,12369
# define __NR_timer_settime 247,12421
# define __NR_timer_gettime 248,12473
# define __NR_timer_getoverrun 249,12525
# define __NR_timer_delete 250,12577
# define __NR_clock_settime 251,12629
# define __NR_clock_gettime 252,12681
# define __NR_clock_getres 253,12733
# define __NR_clock_nanosleep 254,12785
# define __NR_exit_group 255,12837
# define __NR_epoll_wait 256,12889
# define __NR_epoll_ctl 257,12941
# define __NR_tgkill 258,12993
# define __NR_utimes 259,13045
# define __NR_vserver 260,13097
# define __NR_mbind 261,13149
# define __NR_set_mempolicy 262,13201
# define __NR_get_mempolicy 263,13253
# define __NR_mq_open 264,13305
# define __NR_mq_unlink 265,13357
# define __NR_mq_timedsend 266,13409
# define __NR_mq_timedreceive 267,13461
# define __NR_mq_notify 268,13513
# define __NR_mq_getsetattr 269,13565
# define __NR_kexec_load 270,13617
# define __NR_waitid 271,13669
# define __NR_add_key 272,13721
# define __NR_request_key 273,13773
# define __NR_keyctl 274,13825
# define __NR_ioprio_set 275,13877
# define __NR_ioprio_get 276,13929
# define __NR_inotify_init 277,13981
# define __NR_inotify_add_watch 278,14033
# define __NR_inotify_rm_watch 279,14085
# define __NR_migrate_pages 280,14137
# define __NR_openat 281,14189
# define __NR_mkdirat 282,14241
# define __NR_mknodat 283,14293
# define __NR_fchownat 284,14345
# define __NR_futimesat 285,14397
# define __NR_newfstatat 286,14449
# define __NR_unlinkat 287,14501
# define __NR_renameat 288,14553
# define __NR_linkat 289,14605
# define __NR_symlinkat 290,14657
# define __NR_readlinkat 291,14709
# define __NR_fchmodat 292,14761
# define __NR_faccessat 293,14813
# define __NR_pselect6 294,14865
# define __NR_ppoll 295,14917
# define __NR_unshare 296,14969
# define __NR_set_robust_list 297,15021
# define __NR_get_robust_list 298,15073
# define __NR_splice 299,15125
# define __NR_tee 300,15177
# define __NR_sync_file_range 301,15229
# define __NR_vmsplice 302,15281
# define __NR_move_pages 303,15333
# define __NR_utimensat 304,15385
# define __IGNORE_getcpu 305,15437
# define __NR_epoll_pwait 306,15509
# define __NR_signalfd 307,15561
# define __NR_timerfd 308,15613
# define __NR_eventfd 309,15665
# define __NR_fallocate 310,15717
# define __NR_timerfd_settime 311,15769
# define __NR_timerfd_gettime 312,15821
# define __NR_accept4 313,15873
# define __NR_signalfd4 314,15925
# define __NR_eventfd2 315,15977
# define __NR_epoll_create1 316,16029
# define __NR_dup3 317,16081
# define __NR_pipe2 318,16133
# define __NR_inotify_init1 319,16185
# define __NR_preadv 320,16237
# define __NR_pwritev 321,16289
# define __NR_rt_tgsigqueueinfo 322,16341
# define __NR_perf_event_open 323,16393
# define __NR_recvmmsg 324,16445
# define __NR_fanotify_init 325,16497
# define __NR_fanotify_mark 326,16549
# define __NR_prlimit64 327,16601
# define __NR_name_to_handle_at 328,16653
# define __NR_open_by_handle_at 329,16705
# define __NR_clock_adjtime 330,16757
# define __NR_syncfs 331,16809
# define __NR_sendmmsg 332,16861
# define __NR_setns 333,16913
# define __NR_getcpu 334,16965
# define __NR_process_vm_readv 335,17017
# define __NR_process_vm_writev 336,17069
# define __NR_kcmp 337,17121
# define __NR_finit_module 338,17173
#  define __ARCH_WANT_OLD_READDIR340,17245
#  define __ARCH_WANT_OLD_STAT341,17279
#  define __ARCH_WANT_SYS_ALARM342,17310
#  define __ARCH_WANT_SYS_GETHOSTNAME343,17342
#  define __ARCH_WANT_SYS_PAUSE344,17380
#  define __ARCH_WANT_SYS_SGETMASK345,17412
#  define __ARCH_WANT_SYS_SIGNAL346,17447
#  define __ARCH_WANT_SYS_UTIME347,17480
#  define __ARCH_WANT_SYS_WAITPID348,17512
#  define __ARCH_WANT_SYS_SOCKETCALL349,17546
#  define __ARCH_WANT_SYS_FADVISE64350,17583
#  define __ARCH_WANT_SYS_GETPGRP351,17619
#  define __ARCH_WANT_SYS_LLSEEK352,17653
#  define __ARCH_WANT_SYS_NICE353,17686
#  define __ARCH_WANT_SYS_OLD_GETRLIMIT354,17717
#  define __ARCH_WANT_SYS_OLDUMOUNT355,17757
#  define __ARCH_WANT_SYS_SIGPENDING356,17793
#  define __ARCH_WANT_SYS_SIGPROCMASK357,17830
#  define __ARCH_WANT_SYS_RT_SIGACTION358,17868
#  define __ARCH_WANT_SYS_RT_SIGSUSPEND359,17907
#  define __ARCH_WANT_SYS_TIME360,17947
#  define __ARCH_WANT_COMPAT_SYS_TIME361,17978
# define __NR_restart_syscall 367,18115
# define __NR_exit 368,18152
# define __NR_fork 369,18189
# define __NR_read 370,18226
# define __NR_write 371,18263
# define __NR_open 372,18300
# define __NR_close 373,18337
# define __NR_waitpid 374,18374
# define __NR_creat 375,18411
# define __NR_link 376,18448
# define __NR_unlink 377,18485
# define __NR_execve 378,18522
# define __NR_chdir 379,18559
# define __NR_time 380,18596
# define __NR_mknod 381,18633
# define __NR_chmod 382,18670
# define __NR_lchown 383,18707
# define __NR_break 384,18744
# define __NR_oldstat 385,18781
# define __NR_lseek 386,18818
# define __NR_getpid 387,18855
# define __NR_mount 388,18892
# define __NR_umount 389,18929
# define __NR_setuid 390,18966
# define __NR_getuid 391,19003
# define __NR_stime 392,19040
# define __NR_ptrace 393,19077
# define __NR_alarm 394,19114
# define __NR_oldfstat 395,19151
# define __NR_pause 396,19188
# define __NR_utime 397,19225
# define __NR_stty 398,19262
# define __NR_gtty 399,19299
# define __NR_access 400,19336
# define __NR_nice 401,19373
# define __NR_ftime 402,19410
# define __NR_sync 403,19447
# define __NR_kill 404,19484
# define __NR_rename 405,19521
# define __NR_mkdir 406,19558
# define __NR_rmdir 407,19595
# define __NR_dup 408,19632
# define __NR_pipe 409,19669
# define __NR_times 410,19706
# define __NR_prof 411,19743
# define __NR_brk 412,19780
# define __NR_setgid 413,19817
# define __NR_getgid 414,19854
# define __NR_signal 415,19891
# define __NR_geteuid 416,19928
# define __NR_getegid 417,19965
# define __NR_acct 418,20002
# define __NR_umount2 419,20039
# define __NR_lock 420,20076
# define __NR_ioctl 421,20113
# define __NR_fcntl 422,20150
# define __NR_mpx 423,20187
# define __NR_setpgid 424,20224
# define __NR_ulimit 425,20261
# define __NR_oldolduname 426,20298
# define __NR_umask 427,20335
# define __NR_chroot 428,20372
# define __NR_ustat 429,20409
# define __NR_dup2 430,20446
# define __NR_getppid 431,20483
# define __NR_getpgrp 432,20520
# define __NR_setsid 433,20557
# define __NR_sigaction 434,20594
# define __NR_sgetmask 435,20631
# define __NR_ssetmask 436,20668
# define __NR_setreuid 437,20705
# define __NR_setregid 438,20742
# define __NR_sigsuspend 439,20779
# define __NR_sigpending 440,20816
# define __NR_sethostname 441,20853
# define __NR_setrlimit 442,20890
# define __NR_getrlimit 443,20927
# define __NR_getrusage 444,21010
# define __NR_gettimeofday 445,21047
# define __NR_settimeofday 446,21084
# define __NR_getgroups 447,21121
# define __NR_setgroups 448,21158
# define __NR_select 449,21195
# define __NR_symlink 450,21232
# define __NR_oldlstat 451,21269
# define __NR_readlink 452,21306
# define __NR_uselib 453,21343
# define __NR_swapon 454,21380
# define __NR_reboot 455,21417
# define __NR_readdir 456,21454
# define __NR_mmap 457,21491
# define __NR_munmap 458,21528
# define __NR_truncate 459,21565
# define __NR_ftruncate 460,21602
# define __NR_fchmod 461,21639
# define __NR_fchown 462,21676
# define __NR_getpriority 463,21713
# define __NR_setpriority 464,21750
# define __NR_profil 465,21787
# define __NR_statfs 466,21824
# define __NR_fstatfs 467,21861
# define __NR_ioperm 468,21898
# define __NR_socketcall 469,21935
# define __NR_syslog 470,21972
# define __NR_setitimer 471,22009
# define __NR_getitimer 472,22046
# define __NR_stat 473,22083
# define __NR_lstat 474,22120
# define __NR_fstat 475,22157
# define __NR_olduname 476,22194
# define __NR_iopl 477,22231
# define __NR_vhangup 478,22268
# define __NR_idle 479,22305
# define __NR_vm86old 480,22342
# define __NR_wait4 481,22379
# define __NR_swapoff 482,22416
# define __NR_sysinfo 483,22453
# define __NR_ipc 484,22490
# define __NR_fsync 485,22527
# define __NR_sigreturn 486,22564
# define __NR_clone 487,22601
# define __NR_setdomainname 488,22638
# define __NR_uname 489,22675
# define __NR_modify_ldt 490,22712
# define __NR_adjtimex 491,22749
# define __NR_mprotect 492,22786
# define __NR_sigprocmask 493,22823
# define __NR_create_module 494,22860
# define __NR_init_module 495,22897
# define __NR_delete_module 496,22934
# define __NR_get_kernel_syms 497,22971
# define __NR_quotactl 498,23008
# define __NR_getpgid 499,23045
# define __NR_fchdir 500,23082
# define __NR_bdflush 501,23119
# define __NR_sysfs 502,23156
# define __NR_personality 503,23193
# define __NR_afs_syscall 504,23230
# define __NR_setfsuid 505,23304
# define __NR_setfsgid 506,23341
# define __NR__llseek 507,23378
# define __NR_getdents 508,23415
# define __NR__newselect 509,23452
# define __NR_flock 510,23489
# define __NR_msync 511,23526
# define __NR_readv 512,23563
# define __NR_writev 513,23600
# define __NR_getsid 514,23637
# define __NR_fdatasync 515,23674
# define __NR__sysctl 516,23711
# define __NR_mlock 517,23748
# define __NR_munlock 518,23785
# define __NR_mlockall 519,23822
# define __NR_munlockall 520,23859
# define __NR_sched_setparam 521,23896
# define __NR_sched_getparam 522,23941
# define __NR_sched_setscheduler 523,23986
# define __NR_sched_getscheduler 524,24031
# define __NR_sched_yield 525,24076
# define __NR_sched_get_priority_max 526,24121
# define __NR_sched_get_priority_min 527,24166
# define __NR_sched_rr_get_interval 528,24211
# define __NR_nanosleep 529,24256
# define __NR_mremap 530,24293
# define __NR_setresuid 531,24330
# define __NR_getresuid 532,24367
# define __NR_vm86 533,24404
# define __NR_query_module 534,24441
# define __NR_poll 535,24478
# define __NR_nfsservctl 536,24515
# define __NR_setresgid 537,24552
# define __NR_getresgid 538,24589
# define __NR_prctl 539,24626
# define __NR_rt_sigreturn 540,24663
# define __NR_rt_sigaction 541,24700
# define __NR_rt_sigprocmask 542,24737
# define __NR_rt_sigpending 543,24774
# define __NR_rt_sigtimedwait 544,24811
# define __NR_rt_sigqueueinfo 545,24848
# define __NR_rt_sigsuspend 546,24885
# define __NR_pread64 547,24922
# define __NR_pwrite64 548,24959
# define __NR_chown 549,24996
# define __NR_getcwd 550,25033
# define __NR_capget 551,25070
# define __NR_capset 552,25107
# define __NR_sigaltstack 553,25144
# define __NR_sendfile 554,25181
# define __NR_getpmsg 555,25218
# define __NR_putpmsg 556,25299
# define __NR_vfork 557,25380
# define __NR_ugetrlimit 558,25417
# define __NR_mmap2 559,25488
# define __NR_truncate64 560,25525
# define __NR_ftruncate64 561,25562
# define __NR_stat64 562,25599
# define __NR_lstat64 563,25636
# define __NR_fstat64 564,25673
# define __NR_lchown32 565,25710
# define __NR_getuid32 566,25747
# define __NR_getgid32 567,25784
# define __NR_geteuid32 568,25821
# define __NR_getegid32 569,25858
# define __NR_setreuid32 570,25895
# define __NR_setregid32 571,25932
# define __NR_getgroups32 572,25969
# define __NR_setgroups32 573,26006
# define __NR_fchown32 574,26043
# define __NR_setresuid32 575,26080
# define __NR_getresuid32 576,26117
# define __NR_setresgid32 577,26154
# define __NR_getresgid32 578,26191
# define __NR_chown32 579,26228
# define __NR_setuid32 580,26265
# define __NR_setgid32 581,26302
# define __NR_setfsuid32 582,26339
# define __NR_setfsgid32 583,26376
# define __NR_pivot_root 584,26413
# define __NR_mincore 585,26450
# define __NR_madvise 586,26487
# define __NR_madvise1 587,26524
# define __NR_getdents64 588,26605
# define __NR_fcntl64 589,26642
# define __NR_gettid 591,26699
# define __NR_readahead 592,26736
# define __NR_setxattr 593,26773
# define __NR_lsetxattr 594,26810
# define __NR_fsetxattr 595,26847
# define __NR_getxattr 596,26884
# define __NR_lgetxattr 597,26921
# define __NR_fgetxattr 598,26958
# define __NR_listxattr 599,26995
# define __NR_llistxattr 600,27032
# define __NR_flistxattr 601,27069
# define __NR_removexattr 602,27106
# define __NR_lremovexattr 603,27143
# define __NR_fremovexattr 604,27180
# define __NR_tkill 605,27217
# define __NR_sendfile64 606,27254
# define __NR_futex 607,27291
# define __NR_sched_setaffinity 608,27328
# define __NR_sched_getaffinity 609,27365
# define __NR_set_thread_area 610,27402
# define __NR_get_thread_area 611,27439
# define __NR_io_setup 612,27476
# define __NR_io_destroy 613,27513
# define __NR_io_getevents 614,27550
# define __NR_io_submit 615,27587
# define __NR_io_cancel 616,27624
# define __NR_fadvise64 617,27661
# define __NR_exit_group 619,27766
# define __NR_lookup_dcookie 620,27803
# define __NR_epoll_create 621,27840
# define __NR_epoll_ctl 622,27877
# define __NR_epoll_wait 623,27914
# define __NR_remap_file_pages 624,27951
# define __NR_set_tid_address 625,27988
# define __NR_timer_create 626,28025
# define __NR_timer_settime 627,28062
# define __NR_timer_gettime 628,28117
# define __NR_timer_getoverrun 629,28172
# define __NR_timer_delete 630,28227
# define __NR_clock_settime 631,28282
# define __NR_clock_gettime 632,28337
# define __NR_clock_getres 633,28392
# define __NR_clock_nanosleep 634,28447
# define __NR_statfs64 635,28502
# define __NR_fstatfs64 636,28539
# define __NR_tgkill 637,28576
# define __NR_utimes 638,28613
# define __NR_fadvise64_64 639,28650
# define __NR_vserver 640,28687
# define __NR_mbind 641,28724
# define __NR_get_mempolicy 642,28761
# define __NR_set_mempolicy 643,28798
# define __NR_mq_open 644,28835
# define __NR_mq_unlink 645,28872
# define __NR_mq_timedsend 646,28922
# define __NR_mq_timedreceive 647,28972
# define __NR_mq_notify 648,29022
# define __NR_mq_getsetattr 649,29072
# define __NR_kexec_load 650,29122
# define __NR_waitid 651,29159
# define __NR_add_key 653,29235
# define __NR_request_key 654,29272
# define __NR_keyctl 655,29309
# define __NR_ioprio_set 656,29346
# define __NR_ioprio_get 657,29383
# define __NR_inotify_init 658,29420
# define __NR_inotify_add_watch 659,29457
# define __NR_inotify_rm_watch 660,29494
# define __NR_migrate_pages 661,29531
# define __NR_openat 662,29568
# define __NR_mkdirat 663,29605
# define __NR_mknodat 664,29642
# define __NR_fchownat 665,29679
# define __NR_futimesat 666,29716
# define __NR_fstatat64 667,29753
# define __NR_unlinkat 668,29790
# define __NR_renameat 669,29827
# define __NR_linkat 670,29864
# define __NR_symlinkat 671,29901
# define __NR_readlinkat 672,29938
# define __NR_fchmodat 673,29975
# define __NR_faccessat 674,30012
# define __NR_pselect6 675,30049
# define __NR_ppoll 676,30086
# define __NR_unshare 677,30123
# define __NR_set_robust_list 678,30160
# define __NR_get_robust_list 679,30197
# define __NR_splice 680,30234
# define __NR_sync_file_range 681,30271
# define __NR_tee 682,30308
# define __NR_vmsplice 683,30345
# define __NR_move_pages 684,30382
# define __NR_getcpu 685,30419
# define __NR_epoll_pwait 686,30456
# define __NR_utimensat 687,30493
# define __NR_signalfd 688,30530
# define __NR_timerfd 689,30567
# define __NR_eventfd 690,30604
# define __NR_fallocate 691,30641
# define __NR_timerfd_settime 692,30678
# define __NR_timerfd_gettime 693,30715
# define __NR_signalfd4 694,30752
# define __NR_eventfd2 695,30789
# define __NR_epoll_create1 696,30826
# define __NR_dup3 697,30863
# define __NR_pipe2 698,30900
# define __NR_inotify_init1 699,30937
# define __NR_preadv 700,30974
# define __NR_pwritev 701,31011
# define __NR_rt_tgsigqueueinfo 702,31048
# define __NR_perf_event_open 703,31085
# define __NR_recvmmsg 704,31122
# define __NR_fanotify_init 705,31159
# define __NR_fanotify_mark 706,31196
# define __NR_prlimit64 707,31233
# define __NR_name_to_handle_at 708,31270
# define __NR_open_by_handle_at 709,31307
# define __NR_clock_adjtime 710,31344
# define __NR_syncfs 711,31381
# define __NR_sendmmsg 712,31418
# define __NR_setns 713,31455
# define __NR_process_vm_readv 714,31492
# define __NR_process_vm_writev 715,31529
# define __NR_kcmp 716,31566
# define __NR_finit_module 717,31603
# define SYS__sysctl 722,31706
# define SYS_accept 723,31740
# define SYS_accept4 724,31772
# define SYS_access 725,31806
# define SYS_acct 726,31838
# define SYS_add_key 727,31866
# define SYS_adjtimex 728,31900
# define SYS_afs_syscall 729,31936
# define SYS_alarm 730,31978
# define SYS_arch_prctl 731,32008
# define SYS_bind 732,32048
# define SYS_brk 733,32076
# define SYS_capget 734,32102
# define SYS_capset 735,32134
# define SYS_chdir 736,32166
# define SYS_chmod 737,32196
# define SYS_chown 738,32226
# define SYS_chroot 739,32256
# define SYS_clock_adjtime 740,32288
# define SYS_clock_getres 741,32334
# define SYS_clock_gettime 742,32378
# define SYS_clock_nanosleep 743,32424
# define SYS_clock_settime 744,32474
# define SYS_clone 745,32520
# define SYS_close 746,32550
# define SYS_connect 747,32580
# define SYS_creat 748,32614
# define SYS_create_module 749,32644
# define SYS_delete_module 750,32690
# define SYS_dup 751,32736
# define SYS_dup2 752,32762
# define SYS_dup3 753,32790
# define SYS_epoll_create 754,32818
# define SYS_epoll_create1 755,32862
# define SYS_epoll_ctl 756,32908
# define SYS_epoll_ctl_old 757,32946
# define SYS_epoll_pwait 758,32992
# define SYS_epoll_wait 759,33034
# define SYS_epoll_wait_old 760,33074
# define SYS_eventfd 761,33122
# define SYS_eventfd2 762,33156
# define SYS_execve 763,33192
# define SYS_exit 764,33224
# define SYS_exit_group 765,33252
# define SYS_faccessat 766,33292
# define SYS_fadvise64 767,33330
# define SYS_fallocate 768,33368
# define SYS_fanotify_init 769,33406
# define SYS_fanotify_mark 770,33452
# define SYS_fchdir 771,33498
# define SYS_fchmod 772,33530
# define SYS_fchmodat 773,33562
# define SYS_fchown 774,33598
# define SYS_fchownat 775,33630
# define SYS_fcntl 776,33666
# define SYS_fdatasync 777,33696
# define SYS_fgetxattr 778,33734
# define SYS_flistxattr 779,33772
# define SYS_flock 780,33812
# define SYS_fork 781,33842
# define SYS_fremovexattr 782,33870
# define SYS_fsetxattr 783,33914
# define SYS_fstat 784,33952
# define SYS_fstatfs 785,33982
# define SYS_fsync 786,34016
# define SYS_ftruncate 787,34046
# define SYS_futex 788,34084
# define SYS_futimesat 789,34114
# define SYS_get_kernel_syms 790,34152
# define SYS_get_mempolicy 791,34202
# define SYS_get_robust_list 792,34248
# define SYS_get_thread_area 793,34298
# define SYS_getcpu 794,34348
# define SYS_getcwd 795,34380
# define SYS_getdents 796,34412
# define SYS_getdents64 797,34448
# define SYS_getegid 798,34488
# define SYS_geteuid 799,34522
# define SYS_getgid 800,34556
# define SYS_getgroups 801,34588
# define SYS_getitimer 802,34626
# define SYS_getpeername 803,34664
# define SYS_getpgid 804,34706
# define SYS_getpgrp 805,34740
# define SYS_getpid 806,34774
# define SYS_getpmsg 807,34806
# define SYS_getppid 808,34840
# define SYS_getpriority 809,34874
# define SYS_getresgid 810,34916
# define SYS_getresuid 811,34954
# define SYS_getrlimit 812,34992
# define SYS_getrusage 813,35030
# define SYS_getsid 814,35068
# define SYS_getsockname 815,35100
# define SYS_getsockopt 816,35142
# define SYS_gettid 817,35182
# define SYS_gettimeofday 818,35214
# define SYS_getuid 819,35258
# define SYS_getxattr 820,35290
# define SYS_init_module 821,35326
# define SYS_inotify_add_watch 822,35368
# define SYS_inotify_init 823,35422
# define SYS_inotify_init1 824,35466
# define SYS_inotify_rm_watch 825,35512
# define SYS_io_cancel 826,35564
# define SYS_io_destroy 827,35602
# define SYS_io_getevents 828,35642
# define SYS_io_setup 829,35686
# define SYS_io_submit 830,35722
# define SYS_ioctl 831,35760
# define SYS_ioperm 832,35790
# define SYS_iopl 833,35822
# define SYS_ioprio_get 834,35850
# define SYS_ioprio_set 835,35890
# define SYS_kcmp 836,35930
# define SYS_kexec_load 837,35958
# define SYS_keyctl 838,35998
# define SYS_kill 839,36030
# define SYS_lchown 840,36058
# define SYS_lgetxattr 841,36090
# define SYS_link 842,36128
# define SYS_linkat 843,36156
# define SYS_listen 844,36188
# define SYS_listxattr 845,36220
# define SYS_llistxattr 846,36258
# define SYS_lookup_dcookie 847,36298
# define SYS_lremovexattr 848,36346
# define SYS_lseek 849,36390
# define SYS_lsetxattr 850,36420
# define SYS_lstat 851,36458
# define SYS_madvise 852,36488
# define SYS_mbind 853,36522
# define SYS_migrate_pages 854,36552
# define SYS_mincore 855,36598
# define SYS_mkdir 856,36632
# define SYS_mkdirat 857,36662
# define SYS_mknod 858,36696
# define SYS_mknodat 859,36726
# define SYS_mlock 860,36760
# define SYS_mlockall 861,36790
# define SYS_mmap 862,36826
# define SYS_modify_ldt 863,36854
# define SYS_mount 864,36894
# define SYS_move_pages 865,36924
# define SYS_mprotect 866,36964
# define SYS_mq_getsetattr 867,37000
# define SYS_mq_notify 868,37046
# define SYS_mq_open 869,37084
# define SYS_mq_timedreceive 870,37118
# define SYS_mq_timedsend 871,37168
# define SYS_mq_unlink 872,37212
# define SYS_mremap 873,37250
# define SYS_msgctl 874,37282
# define SYS_msgget 875,37314
# define SYS_msgrcv 876,37346
# define SYS_msgsnd 877,37378
# define SYS_msync 878,37410
# define SYS_munlock 879,37440
# define SYS_munlockall 880,37474
# define SYS_munmap 881,37514
# define SYS_name_to_handle_at 882,37546
# define SYS_nanosleep 883,37600
# define SYS_newfstatat 884,37638
# define SYS_nfsservctl 885,37678
# define SYS_open 886,37718
# define SYS_open_by_handle_at 887,37746
# define SYS_openat 888,37800
# define SYS_pause 889,37832
# define SYS_perf_event_open 890,37862
# define SYS_personality 891,37912
# define SYS_pipe 892,37954
# define SYS_pipe2 893,37982
# define SYS_pivot_root 894,38012
# define SYS_poll 895,38052
# define SYS_ppoll 896,38080
# define SYS_prctl 897,38110
# define SYS_pread64 898,38140
# define SYS_preadv 899,38174
# define SYS_prlimit64 900,38206
# define SYS_process_vm_readv 901,38244
# define SYS_process_vm_writev 902,38296
# define SYS_pselect6 903,38350
# define SYS_ptrace 904,38386
# define SYS_putpmsg 905,38418
# define SYS_pwrite64 906,38452
# define SYS_pwritev 907,38488
# define SYS_query_module 908,38522
# define SYS_quotactl 909,38566
# define SYS_read 910,38602
# define SYS_readahead 911,38630
# define SYS_readlink 912,38668
# define SYS_readlinkat 913,38704
# define SYS_readv 914,38744
# define SYS_reboot 915,38774
# define SYS_recvfrom 916,38806
# define SYS_recvmmsg 917,38842
# define SYS_recvmsg 918,38878
# define SYS_remap_file_pages 919,38912
# define SYS_removexattr 920,38964
# define SYS_rename 921,39006
# define SYS_renameat 922,39038
# define SYS_request_key 923,39074
# define SYS_restart_syscall 924,39116
# define SYS_rmdir 925,39166
# define SYS_rt_sigaction 926,39196
# define SYS_rt_sigpending 927,39240
# define SYS_rt_sigprocmask 928,39286
# define SYS_rt_sigqueueinfo 929,39334
# define SYS_rt_sigreturn 930,39384
# define SYS_rt_sigsuspend 931,39428
# define SYS_rt_sigtimedwait 932,39474
# define SYS_rt_tgsigqueueinfo 933,39524
# define SYS_sched_get_priority_max 934,39578
# define SYS_sched_get_priority_min 935,39642
# define SYS_sched_getaffinity 936,39706
# define SYS_sched_getparam 937,39760
# define SYS_sched_getscheduler 938,39808
# define SYS_sched_rr_get_interval 939,39864
# define SYS_sched_setaffinity 940,39926
# define SYS_sched_setparam 941,39980
# define SYS_sched_setscheduler 942,40028
# define SYS_sched_yield 943,40084
# define SYS_security 944,40126
# define SYS_select 945,40162
# define SYS_semctl 946,40194
# define SYS_semget 947,40226
# define SYS_semop 948,40258
# define SYS_semtimedop 949,40288
# define SYS_sendfile 950,40328
# define SYS_sendmmsg 951,40364
# define SYS_sendmsg 952,40400
# define SYS_sendto 953,40434
# define SYS_set_mempolicy 954,40466
# define SYS_set_robust_list 955,40512
# define SYS_set_thread_area 956,40562
# define SYS_set_tid_address 957,40612
# define SYS_setdomainname 958,40662
# define SYS_setfsgid 959,40708
# define SYS_setfsuid 960,40744
# define SYS_setgid 961,40780
# define SYS_setgroups 962,40812
# define SYS_sethostname 963,40850
# define SYS_setitimer 964,40892
# define SYS_setns 965,40930
# define SYS_setpgid 966,40960
# define SYS_setpriority 967,40994
# define SYS_setregid 968,41036
# define SYS_setresgid 969,41072
# define SYS_setresuid 970,41110
# define SYS_setreuid 971,41148
# define SYS_setrlimit 972,41184
# define SYS_setsid 973,41222
# define SYS_setsockopt 974,41254
# define SYS_settimeofday 975,41294
# define SYS_setuid 976,41338
# define SYS_setxattr 977,41370
# define SYS_shmat 978,41406
# define SYS_shmctl 979,41436
# define SYS_shmdt 980,41468
# define SYS_shmget 981,41498
# define SYS_shutdown 982,41530
# define SYS_sigaltstack 983,41566
# define SYS_signalfd 984,41608
# define SYS_signalfd4 985,41644
# define SYS_socket 986,41682
# define SYS_socketpair 987,41714
# define SYS_splice 988,41754
# define SYS_stat 989,41786
# define SYS_statfs 990,41814
# define SYS_swapoff 991,41846
# define SYS_swapon 992,41880
# define SYS_symlink 993,41912
# define SYS_symlinkat 994,41946
# define SYS_sync 995,41984
# define SYS_sync_file_range 996,42012
# define SYS_syncfs 997,42062
# define SYS_sysfs 998,42094
# define SYS_sysinfo 999,42124
# define SYS_syslog 1000,42158
# define SYS_tee 1001,42190
# define SYS_tgkill 1002,42216
# define SYS_time 1003,42248
# define SYS_timer_create 1004,42276
# define SYS_timer_delete 1005,42320
# define SYS_timer_getoverrun 1006,42364
# define SYS_timer_gettime 1007,42416
# define SYS_timer_settime 1008,42462
# define SYS_timerfd_create 1009,42508
# define SYS_timerfd_gettime 1010,42556
# define SYS_timerfd_settime 1011,42606
# define SYS_times 1012,42656
# define SYS_tkill 1013,42686
# define SYS_truncate 1014,42716
# define SYS_tuxcall 1015,42752
# define SYS_umask 1016,42786
# define SYS_umount2 1017,42816
# define SYS_uname 1018,42850
# define SYS_unlink 1019,42880
# define SYS_unlinkat 1020,42912
# define SYS_unshare 1021,42948
# define SYS_uselib 1022,42982
# define SYS_ustat 1023,43014
# define SYS_utime 1024,43044
# define SYS_utimensat 1025,43074
# define SYS_utimes 1026,43112
# define SYS_vfork 1027,43144
# define SYS_vhangup 1028,43174
# define SYS_vmsplice 1029,43208
# define SYS_vserver 1030,43244
# define SYS_wait4 1031,43278
# define SYS_waitid 1032,43308
# define SYS_write 1033,43340
# define SYS_writev 1034,43370
# define SYS__llseek 1037,43409
# define SYS__newselect 1038,43443
# define SYS__sysctl 1039,43483
# define SYS_access 1040,43517
# define SYS_acct 1041,43549
# define SYS_add_key 1042,43577
# define SYS_adjtimex 1043,43611
# define SYS_afs_syscall 1044,43647
# define SYS_alarm 1045,43689
# define SYS_bdflush 1046,43719
# define SYS_break 1047,43753
# define SYS_brk 1048,43783
# define SYS_capget 1049,43809
# define SYS_capset 1050,43841
# define SYS_chdir 1051,43873
# define SYS_chmod 1052,43903
# define SYS_chown 1053,43933
# define SYS_chown32 1054,43963
# define SYS_chroot 1055,43997
# define SYS_clock_adjtime 1056,44029
# define SYS_clock_getres 1057,44075
# define SYS_clock_gettime 1058,44119
# define SYS_clock_nanosleep 1059,44165
# define SYS_clock_settime 1060,44215
# define SYS_clone 1061,44261
# define SYS_close 1062,44291
# define SYS_creat 1063,44321
# define SYS_create_module 1064,44351
# define SYS_delete_module 1065,44397
# define SYS_dup 1066,44443
# define SYS_dup2 1067,44469
# define SYS_dup3 1068,44497
# define SYS_epoll_create 1069,44525
# define SYS_epoll_create1 1070,44569
# define SYS_epoll_ctl 1071,44615
# define SYS_epoll_pwait 1072,44653
# define SYS_epoll_wait 1073,44695
# define SYS_eventfd 1074,44735
# define SYS_eventfd2 1075,44769
# define SYS_execve 1076,44805
# define SYS_exit 1077,44837
# define SYS_exit_group 1078,44865
# define SYS_faccessat 1079,44905
# define SYS_fadvise64 1080,44943
# define SYS_fadvise64_64 1081,44981
# define SYS_fallocate 1082,45025
# define SYS_fanotify_init 1083,45063
# define SYS_fanotify_mark 1084,45109
# define SYS_fchdir 1085,45155
# define SYS_fchmod 1086,45187
# define SYS_fchmodat 1087,45219
# define SYS_fchown 1088,45255
# define SYS_fchown32 1089,45287
# define SYS_fchownat 1090,45323
# define SYS_fcntl 1091,45359
# define SYS_fcntl64 1092,45389
# define SYS_fdatasync 1093,45423
# define SYS_fgetxattr 1094,45461
# define SYS_flistxattr 1095,45499
# define SYS_flock 1096,45539
# define SYS_fork 1097,45569
# define SYS_fremovexattr 1098,45597
# define SYS_fsetxattr 1099,45641
# define SYS_fstat 1100,45679
# define SYS_fstat64 1101,45709
# define SYS_fstatat64 1102,45743
# define SYS_fstatfs 1103,45781
# define SYS_fstatfs64 1104,45815
# define SYS_fsync 1105,45853
# define SYS_ftime 1106,45883
# define SYS_ftruncate 1107,45913
# define SYS_ftruncate64 1108,45951
# define SYS_futex 1109,45993
# define SYS_futimesat 1110,46023
# define SYS_get_kernel_syms 1111,46061
# define SYS_get_mempolicy 1112,46111
# define SYS_get_robust_list 1113,46157
# define SYS_get_thread_area 1114,46207
# define SYS_getcpu 1115,46257
# define SYS_getcwd 1116,46289
# define SYS_getdents 1117,46321
# define SYS_getdents64 1118,46357
# define SYS_getegid 1119,46397
# define SYS_getegid32 1120,46431
# define SYS_geteuid 1121,46469
# define SYS_geteuid32 1122,46503
# define SYS_getgid 1123,46541
# define SYS_getgid32 1124,46573
# define SYS_getgroups 1125,46609
# define SYS_getgroups32 1126,46647
# define SYS_getitimer 1127,46689
# define SYS_getpgid 1128,46727
# define SYS_getpgrp 1129,46761
# define SYS_getpid 1130,46795
# define SYS_getpmsg 1131,46827
# define SYS_getppid 1132,46861
# define SYS_getpriority 1133,46895
# define SYS_getresgid 1134,46937
# define SYS_getresgid32 1135,46975
# define SYS_getresuid 1136,47017
# define SYS_getresuid32 1137,47055
# define SYS_getrlimit 1138,47097
# define SYS_getrusage 1139,47135
# define SYS_getsid 1140,47173
# define SYS_gettid 1141,47205
# define SYS_gettimeofday 1142,47237
# define SYS_getuid 1143,47281
# define SYS_getuid32 1144,47313
# define SYS_getxattr 1145,47349
# define SYS_gtty 1146,47385
# define SYS_idle 1147,47413
# define SYS_init_module 1148,47441
# define SYS_inotify_add_watch 1149,47483
# define SYS_inotify_init 1150,47537
# define SYS_inotify_init1 1151,47581
# define SYS_inotify_rm_watch 1152,47627
# define SYS_io_cancel 1153,47679
# define SYS_io_destroy 1154,47717
# define SYS_io_getevents 1155,47757
# define SYS_io_setup 1156,47801
# define SYS_io_submit 1157,47837
# define SYS_ioctl 1158,47875
# define SYS_ioperm 1159,47905
# define SYS_iopl 1160,47937
# define SYS_ioprio_get 1161,47965
# define SYS_ioprio_set 1162,48005
# define SYS_ipc 1163,48045
# define SYS_kcmp 1164,48071
# define SYS_kexec_load 1165,48099
# define SYS_keyctl 1166,48139
# define SYS_kill 1167,48171
# define SYS_lchown 1168,48199
# define SYS_lchown32 1169,48231
# define SYS_lgetxattr 1170,48267
# define SYS_link 1171,48305
# define SYS_linkat 1172,48333
# define SYS_listxattr 1173,48365
# define SYS_llistxattr 1174,48403
# define SYS_lock 1175,48443
# define SYS_lookup_dcookie 1176,48471
# define SYS_lremovexattr 1177,48519
# define SYS_lseek 1178,48563
# define SYS_lsetxattr 1179,48593
# define SYS_lstat 1180,48631
# define SYS_lstat64 1181,48661
# define SYS_madvise 1182,48695
# define SYS_mbind 1183,48729
# define SYS_migrate_pages 1184,48759
# define SYS_mincore 1185,48805
# define SYS_mkdir 1186,48839
# define SYS_mkdirat 1187,48869
# define SYS_mknod 1188,48903
# define SYS_mknodat 1189,48933
# define SYS_mlock 1190,48967
# define SYS_mlockall 1191,48997
# define SYS_mmap 1192,49033
# define SYS_mmap2 1193,49061
# define SYS_modify_ldt 1194,49091
# define SYS_mount 1195,49131
# define SYS_move_pages 1196,49161
# define SYS_mprotect 1197,49201
# define SYS_mpx 1198,49237
# define SYS_mq_getsetattr 1199,49263
# define SYS_mq_notify 1200,49309
# define SYS_mq_open 1201,49347
# define SYS_mq_timedreceive 1202,49381
# define SYS_mq_timedsend 1203,49431
# define SYS_mq_unlink 1204,49475
# define SYS_mremap 1205,49513
# define SYS_msync 1206,49545
# define SYS_munlock 1207,49575
# define SYS_munlockall 1208,49609
# define SYS_munmap 1209,49649
# define SYS_name_to_handle_at 1210,49681
# define SYS_nanosleep 1211,49735
# define SYS_nfsservctl 1212,49773
# define SYS_nice 1213,49813
# define SYS_oldfstat 1214,49841
# define SYS_oldlstat 1215,49877
# define SYS_oldolduname 1216,49913
# define SYS_oldstat 1217,49955
# define SYS_olduname 1218,49989
# define SYS_open 1219,50025
# define SYS_open_by_handle_at 1220,50053
# define SYS_openat 1221,50107
# define SYS_pause 1222,50139
# define SYS_perf_event_open 1223,50169
# define SYS_personality 1224,50219
# define SYS_pipe 1225,50261
# define SYS_pipe2 1226,50289
# define SYS_pivot_root 1227,50319
# define SYS_poll 1228,50359
# define SYS_ppoll 1229,50387
# define SYS_prctl 1230,50417
# define SYS_pread64 1231,50447
# define SYS_preadv 1232,50481
# define SYS_prlimit64 1233,50513
# define SYS_process_vm_readv 1234,50551
# define SYS_process_vm_writev 1235,50603
# define SYS_prof 1236,50657
# define SYS_profil 1237,50685
# define SYS_pselect6 1238,50717
# define SYS_ptrace 1239,50753
# define SYS_putpmsg 1240,50785
# define SYS_pwrite64 1241,50819
# define SYS_pwritev 1242,50855
# define SYS_query_module 1243,50889
# define SYS_quotactl 1244,50933
# define SYS_read 1245,50969
# define SYS_readahead 1246,50997
# define SYS_readdir 1247,51035
# define SYS_readlink 1248,51069
# define SYS_readlinkat 1249,51105
# define SYS_readv 1250,51145
# define SYS_reboot 1251,51175
# define SYS_recvmmsg 1252,51207
# define SYS_remap_file_pages 1253,51243
# define SYS_removexattr 1254,51295
# define SYS_rename 1255,51337
# define SYS_renameat 1256,51369
# define SYS_request_key 1257,51405
# define SYS_restart_syscall 1258,51447
# define SYS_rmdir 1259,51497
# define SYS_rt_sigaction 1260,51527
# define SYS_rt_sigpending 1261,51571
# define SYS_rt_sigprocmask 1262,51617
# define SYS_rt_sigqueueinfo 1263,51665
# define SYS_rt_sigreturn 1264,51715
# define SYS_rt_sigsuspend 1265,51759
# define SYS_rt_sigtimedwait 1266,51805
# define SYS_rt_tgsigqueueinfo 1267,51855
# define SYS_sched_get_priority_max 1268,51909
# define SYS_sched_get_priority_min 1269,51973
# define SYS_sched_getaffinity 1270,52037
# define SYS_sched_getparam 1271,52091
# define SYS_sched_getscheduler 1272,52139
# define SYS_sched_rr_get_interval 1273,52195
# define SYS_sched_setaffinity 1274,52257
# define SYS_sched_setparam 1275,52311
# define SYS_sched_setscheduler 1276,52359
# define SYS_sched_yield 1277,52415
# define SYS_select 1278,52457
# define SYS_sendfile 1279,52489
# define SYS_sendfile64 1280,52525
# define SYS_sendmmsg 1281,52565
# define SYS_set_mempolicy 1282,52601
# define SYS_set_robust_list 1283,52647
# define SYS_set_thread_area 1284,52697
# define SYS_set_tid_address 1285,52747
# define SYS_setdomainname 1286,52797
# define SYS_setfsgid 1287,52843
# define SYS_setfsgid32 1288,52879
# define SYS_setfsuid 1289,52919
# define SYS_setfsuid32 1290,52955
# define SYS_setgid 1291,52995
# define SYS_setgid32 1292,53027
# define SYS_setgroups 1293,53063
# define SYS_setgroups32 1294,53101
# define SYS_sethostname 1295,53143
# define SYS_setitimer 1296,53185
# define SYS_setns 1297,53223
# define SYS_setpgid 1298,53253
# define SYS_setpriority 1299,53287
# define SYS_setregid 1300,53329
# define SYS_setregid32 1301,53365
# define SYS_setresgid 1302,53405
# define SYS_setresgid32 1303,53443
# define SYS_setresuid 1304,53485
# define SYS_setresuid32 1305,53523
# define SYS_setreuid 1306,53565
# define SYS_setreuid32 1307,53601
# define SYS_setrlimit 1308,53641
# define SYS_setsid 1309,53679
# define SYS_settimeofday 1310,53711
# define SYS_setuid 1311,53755
# define SYS_setuid32 1312,53787
# define SYS_setxattr 1313,53823
# define SYS_sgetmask 1314,53859
# define SYS_sigaction 1315,53895
# define SYS_sigaltstack 1316,53933
# define SYS_signal 1317,53975
# define SYS_signalfd 1318,54007
# define SYS_signalfd4 1319,54043
# define SYS_sigpending 1320,54081
# define SYS_sigprocmask 1321,54121
# define SYS_sigreturn 1322,54163
# define SYS_sigsuspend 1323,54201
# define SYS_socketcall 1324,54241
# define SYS_splice 1325,54281
# define SYS_ssetmask 1326,54313
# define SYS_stat 1327,54349
# define SYS_stat64 1328,54377
# define SYS_statfs 1329,54409
# define SYS_statfs64 1330,54441
# define SYS_stime 1331,54477
# define SYS_stty 1332,54507
# define SYS_swapoff 1333,54535
# define SYS_swapon 1334,54569
# define SYS_symlink 1335,54601
# define SYS_symlinkat 1336,54635
# define SYS_sync 1337,54673
# define SYS_sync_file_range 1338,54701
# define SYS_syncfs 1339,54751
# define SYS_sysfs 1340,54783
# define SYS_sysinfo 1341,54813
# define SYS_syslog 1342,54847
# define SYS_tee 1343,54879
# define SYS_tgkill 1344,54905
# define SYS_time 1345,54937
# define SYS_timer_create 1346,54965
# define SYS_timer_delete 1347,55009
# define SYS_timer_getoverrun 1348,55053
# define SYS_timer_gettime 1349,55105
# define SYS_timer_settime 1350,55151
# define SYS_timerfd_create 1351,55197
# define SYS_timerfd_gettime 1352,55245
# define SYS_timerfd_settime 1353,55295
# define SYS_times 1354,55345
# define SYS_tkill 1355,55375
# define SYS_truncate 1356,55405
# define SYS_truncate64 1357,55441
# define SYS_ugetrlimit 1358,55481
# define SYS_ulimit 1359,55521
# define SYS_umask 1360,55553
# define SYS_umount 1361,55583
# define SYS_umount2 1362,55615
# define SYS_uname 1363,55649
# define SYS_unlink 1364,55679
# define SYS_unlinkat 1365,55711
# define SYS_unshare 1366,55747
# define SYS_uselib 1367,55781
# define SYS_ustat 1368,55813
# define SYS_utime 1369,55843
# define SYS_utimensat 1370,55873
# define SYS_utimes 1371,55911
# define SYS_vfork 1372,55943
# define SYS_vhangup 1373,55973
# define SYS_vm86 1374,56007
# define SYS_vm86old 1375,56035
# define SYS_vmsplice 1376,56069
# define SYS_vserver 1377,56105
# define SYS_wait4 1378,56139
# define SYS_waitid 1379,56169
# define SYS_waitpid 1380,56201
# define SYS_write 1381,56235
# define SYS_writev 1382,56265

unix/include/sigcontext.h,4028
#define _SIGCONTEXT_H_14,662
#define _BITS_SIGCONTEXT_H 17,734
#define _ASM_X86_SIGCONTEXT_H 21,895
#define _ASMi386_SIGCONTEXT_H 22,927
#define _ASM_X86_64_SIGCONTEXT_H 23,959
#define _ASM_X86_SIGCONTEXT32_H 24,994
#define FP_XSTATE_MAGIC1	28,1055
#define FP_XSTATE_MAGIC2	29,1092
#define FP_XSTATE_MAGIC2_SIZE	30,1129
struct _fpx_sw_bytes 44,1790
	__u32 magic1;45,1813
	__u32 extended_size;46,1852
	__u64 xstate_bv;49,1964
	__u32 xstate_size;54,2100
	__u32 padding[padding59,2272
struct _fpreg 77,2855
	unsigned short significand[significand78,2871
	unsigned short exponent;79,2903
struct _fpxreg 82,2933
	unsigned short significand[significand83,2950
	unsigned short exponent;84,2982
	unsigned short padding[padding85,3008
struct _xmmreg 88,3040
	unsigned long element[element89,3057
struct _fpstate 92,3088
	unsigned long	cw;94,3137
	unsigned long	sw;95,3156
	unsigned long	tag;96,3175
	unsigned long	ipoff;97,3195
	unsigned long	cssel;98,3217
	unsigned long	dataoff;99,3239
	unsigned long	datasel;100,3263
	struct _fpreg	_st[_st101,3287
	unsigned short	status;102,3310
	unsigned short	magic;103,3334
	unsigned long	_fxsr_env[_fxsr_env106,3424
	unsigned long	mxcsr;107,3483
	unsigned long	reserved;108,3505
	struct _fpxreg	_fxsr_st[_fxsr_st109,3530
	struct _xmmreg	_xmm[_xmm110,3594
	unsigned long	padding1[padding1111,3619
		unsigned long	padding2[padding2114,3658
		struct _fpx_sw_bytes sw_reserved;115,3688
#define X86_FXSR_MAGIC	120,3784
struct sigcontext 125,3877
	unsigned short gs,126,3897
	unsigned short gs, __gsh;126,3897
	unsigned short fs,127,3924
	unsigned short fs, __fsh;127,3924
	unsigned short es,128,3951
	unsigned short es, __esh;128,3951
	unsigned short ds,129,3978
	unsigned short ds, __dsh;129,3978
	unsigned long edi;130,4005
	unsigned long esi;131,4025
	unsigned long ebp;132,4045
	unsigned long esp;133,4065
	unsigned long ebx;134,4085
	unsigned long edx;135,4105
	unsigned long ecx;136,4125
	unsigned long eax;137,4145
	unsigned long trapno;138,4165
	unsigned long err;139,4188
	unsigned long eip;140,4208
	unsigned short cs,141,4228
	unsigned short cs, __csh;141,4228
	unsigned long eflags;142,4255
	unsigned long esp_at_signal;143,4278
	unsigned short ss,144,4308
	unsigned short ss, __ssh;144,4308
	struct _fpstate *fpstate;fpstate145,4335
	unsigned long oldmask;146,4362
	unsigned long cr2;147,4386
struct _fpstate 155,4569
	__u16	cwd;156,4587
	__u16	swd;157,4599
	__u16	twd;158,4611
	__u16	fop;160,4690
	__u64	rip;161,4702
	__u64	rdp;162,4714
	__u32	mxcsr;163,4726
	__u32	mxcsr_mask;164,4740
	__u32	st_space[st_space165,4759
	__u32	xmm_space[xmm_space166,4813
	__u32	reserved2[reserved2167,4871
		__u32	reserved3[reserved3169,4902
		struct _fpx_sw_bytes sw_reserved;170,4925
struct sigcontext 178,5089
	unsigned long r8;179,5109
	unsigned long r9;180,5128
	unsigned long r10;181,5147
	unsigned long r11;182,5167
	unsigned long r12;183,5187
	unsigned long r13;184,5207
	unsigned long r14;185,5227
	unsigned long r15;186,5247
	unsigned long rdi;187,5267
	unsigned long rsi;188,5287
	unsigned long rbp;189,5307
	unsigned long rbx;190,5327
	unsigned long rdx;191,5347
	unsigned long rax;192,5367
	unsigned long rcx;193,5387
	unsigned long rsp;194,5407
	unsigned long rip;195,5427
	unsigned long eflags;196,5447
	unsigned short cs;197,5484
	unsigned short gs;198,5504
	unsigned short fs;199,5524
	unsigned short __pad0;200,5544
	unsigned long err;201,5568
	unsigned long trapno;202,5588
	unsigned long oldmask;203,5611
	unsigned long cr2;204,5635
	struct _fpstate *fpstate;fpstate205,5655
	unsigned long reserved1[reserved1206,5713
struct _xsave_hdr 211,5770
	__u64 xstate_bv;212,5790
	__u64 reserved1[reserved1213,5808
	__u64 reserved2[reserved2214,5829
struct _ymmh_state 217,5854
	__u32 ymmh_space[ymmh_space219,5914
struct _xstate 228,6185
	struct _fpstate fpstate;229,6202
	struct _xsave_hdr xstate_hdr;230,6228
	struct _ymmh_state ymmh;231,6259

unix/include/signalfd.h,565
#define _SIGNALFD_H14,659
#define SFD_CLOEXEC 19,731
#define SFD_NONBLOCK 20,761
struct signalfd_siginfo 22,794
	__u32 ssi_signo;23,820
	__s32 ssi_errno;24,838
	__s32 ssi_code;25,856
	__u32 ssi_pid;26,873
	__u32 ssi_uid;27,889
	__s32 ssi_fd;28,905
	__u32 ssi_tid;29,920
	__u32 ssi_band;30,936
	__u32 ssi_overrun;31,953
	__u32 ssi_trapno;32,973
	__s32 ssi_status;33,992
	__s32 ssi_int;34,1011
	__u64 ssi_ptr;35,1027
	__u64 ssi_utime;36,1043
	__u64 ssi_stime;37,1061
	__u64 ssi_addr;38,1079
	__u16 ssi_addr_lsb;39,1096
	__u8 __pad[__pad50,1498

unix/symtab.c,360
static uint bfd_symcount,51,2242
static uint bfd_symcount, nonnull_symcount;51,2242
static asymbol **bfd_syms bfd_syms52,2286
static bfd *infile infile53,2320
compare_symbols 56,2367
sort_symtab(78,3009
lookup_symbol_address(102,3709
prepare_symtab(138,4758
get_symtab(157,5273
symtab_init(191,6217
symtab_exit(229,7180
symtab_lookup_pc(235,7235

unix/module.c,3303
typedef union _elf_generic_header_t 44,2100
    Elf64_Ehdr elf64;45,2138
    Elf32_Ehdr elf32;46,2160
} elf_generic_header_t;47,2182
# undef LOG50,2240
# define LOG(51,2252
typedef struct _elf_import_iterator_t 55,2348
    dr_symbol_import_t symbol_import;56,2388
    ELF_SYM_TYPE *dynsym;dynsym61,2605
    size_t symentry_size;62,2676
    const char *dynstr;dynstr63,2746
    size_t dynstr_size;64,2817
    ELF_SYM_TYPE *cur_sym;cur_sym66,2880
    ELF_SYM_TYPE safe_cur_sym;67,2960
    ELF_SYM_TYPE *import_end;import_end68,3034
    bool error_occurred;69,3106
} elf_import_iterator_t;70,3175
# define DT_GNU_HASH 75,3330
# define STT_GNU_IFUNC 79,3392
is_elf_so_header_common(108,4700
is_elf_so_header(172,7103
os_modules_init(178,7210
os_modules_exit(184,7260
elf_dt_abs_addr(193,7421
module_segment_prot_to_osprot(233,9203
module_add_segment_data(249,9670
module_fill_os_data(305,12144
module_walk_program_headers(415,17128
module_num_program_headers(481,20179
module_vaddr_from_prog_header(495,20578
module_read_program_header(525,21696
module_hashtab_init(559,23134
os_module_area_init(590,24451
free_module_names(693,28806
print_modules(704,29118
os_module_area_reset(735,30237
elf_hash(765,31527
elf_gnu_hash(780,31787
elf_sym_matches(789,31971
gnu_hash_lookup(811,32790
elf_hash_lookup(856,34285
get_proc_address_from_os_data(894,35454
get_proc_address_ex(928,36911
get_proc_address(967,38485
get_named_section_bounds(974,38664
rct_is_exported_function(987,38989
get_module_short_name(996,39179
get_module_company_name(1004,39377
get_module_base(1011,39519
is_range_in_code_section(1025,39844
is_in_code_section(1034,40148
is_in_dot_data_section(1043,40421
is_in_any_section(1052,40702
is_mapped_as_image(1060,40890
os_get_module_info(1083,41830
os_get_module_info_all_names(1134,43502
os_module_get_rct_htable(1147,43940
module_get_nth_segment(1158,44270
module_get_header_size(1187,45247
get_elf_platform(1201,45656
file_is_elf64(1220,46263
module_has_text_relocs(1237,46793
module_has_text_relocs_ex(1282,48362
module_get_section_with_name(1294,48686
module_read_os_data(1322,49775
get_shared_lib_name(1351,50828
module_get_os_privmod_data(1365,51188
module_find_phdr(1501,56077
module_get_relro(1516,56467
module_lookup_symbol(1534,57056
module_undef_symbols(1596,59168
dr_module_import_iterator_start(1606,59407
dr_module_import_iterator_hasnext(1614,59601
dr_module_import_iterator_next(1620,59714
dr_module_import_iterator_stop(1626,59807
dynsym_next(1631,59890
dynsym_next_import(1638,60071
dr_symbol_import_iterator_start(1663,60933
dr_symbol_import_iterator_hasnext(1730,63562
dr_symbol_import_iterator_next(1738,63829
dr_symbol_import_iterator_stop(1752,64280
module_relocate_symbol(1762,64568
module_relocate_rel(1899,68984
module_relocate_rela(1911,69265
module_get_text_section(1928,69745
redirect_malloc(1958,70867
redirect_realloc(1977,71431
redirect_calloc(1996,71954
redirect_free(2011,72303
os_read_until(2025,72650
elf_loader_init(2039,72931
elf_loader_destroy(2048,73145
elf_loader_read_ehdr(2060,73401
elf_loader_map_file(2079,73996
elf_loader_read_phdrs(2100,74781
elf_loader_read_headers(2125,75724
elf_loader_map_phdrs(2137,76012
elf_loader_find_pt_interp(2255,81423

unix/nudgesig.c,64
create_nudge_signal_payload(51,2042
send_nudge_signal(77,2729

perscache.c,2357
#define MAX_PCACHE_OPTIONS_STRING 61,2293
#define OPTION_STRING_ALIGNMENT 64,2473
#define CLIENT_ALIGNMENT 66,2599
typedef struct _jmp_tgt_list_t 69,2667
    app_pc tag;70,2701
    cache_pc jmp_end_pc;71,2717
    struct _jmp_tgt_list_t *next;next72,2742
} jmp_tgt_list_t;73,2776
coarse_unit_mark_primary(110,4019
coarse_unit_unmark_primary(134,4881
coarse_unit_mark_in_use(149,5329
coarse_unit_create(156,5456
coarse_unit_free(221,8530
coarse_unit_init(245,9316
coarse_unit_reset_free_internal(260,9835
coarse_unit_reset_free(371,14327
static file_t perscache_user_directory 382,14757
perscache_init(385,14818
perscache_fast_exit(434,17055
perscache_slow_exit(449,17465
coarse_units_freeze_translate(460,17727
coarse_units_freeze_all(489,18871
coarse_replace_unit(611,24818
coarse_unit_freeze(668,27080
transfer_coarse_stub(882,36766
transfer_coarse_stub_fix_trace_head(936,39284
push_pending_freeze(959,40361
redirect_to_tgt_ibl_prefix(1021,43193
transfer_coarse_fragment(1041,44021
coarse_unit_shift_jmps_internal(1196,50728
coarse_unit_shift_jmps(1283,55112
coarse_merge_process_stub(1315,56648
coarse_merge_update_jmps(1421,62318
coarse_merge_without_dups(1548,68827
coarse_unit_merge(1840,84947
perscache_dirname(2139,98686
get_persist_dir(2178,100281
coarse_unit_check_persist_space(2205,101205
persist_get_options_level(2235,102318
persist_get_relevant_options(2255,103193
get_persist_filename(2275,104098
print_module_digest(2398,109246
persist_calculate_self_digest(2409,109622
persist_calculate_module_digest(2430,110491
persist_modinfo_cmp(2472,112583
persist_record_base_mismatch(2503,114386
get_unique_name(2525,115334
coarse_unit_merge_with_disk(2558,116782
coarse_unit_calculate_persist_info(2666,122175
coarse_unit_merge_persist_info(2788,127695
write_persist_file(2900,132548
pad_persist_file(2913,133020
coarse_unit_set_persist_data(2935,133815
coarse_unit_persist_rename(3125,141448
instrument_persist_section(3175,143726
dr_persist_start(3204,144874
dr_persist_size(3213,145072
dr_fragment_persistable(3222,145282
coarse_unit_persist(3251,146275
persist_check_option_compat(3603,161393
pcache_dir_check_permissions(3680,164691
persist_get_name_and_open(3719,166387
coarse_unit_load(3792,169448
exists_coarse_ibl_pending_table(4372,195071
mark_module_exempted(4396,196098

instrlist.h,225
#define _INSTRLIST_H_ 40,1907
struct _instr_list_t 42,1932
    instr_t *first;first43,1955
    instr_t *last;last44,1975
    int flags;45,1994
    app_pc translation_target;46,2009
    app_pc fall_through_bb;56,2566

nudge.c,251
nudge_terminate_on_dstack(65,2572
generic_nudge_target(81,3183
nudge_thread_cleanup(103,3925
generic_nudge_handler(196,8697
handle_nudge(282,11894
#define VALID_THIN_CLIENT_NUDGES 311,12921
nudge_add_pending(444,18727
nudge_internal(471,19566

synch.h,1308
#define SYNCH_H39,1808
    THREAD_SYNCH_NONE=46,2007
    THREAD_SYNCH_NO_LOCKS=50,2138
    THREAD_SYNCH_NO_LOCKS_NO_XFER=58,2466
    THREAD_SYNCH_VALID_MCONTEXT_NO_XFER=65,2742
    THREAD_SYNCH_VALID_MCONTEXT=69,2933
} thread_synch_permission_t;70,2967
    THREAD_SYNCH_SUSPENDED=77,3246
    THREAD_SYNCH_SUSPENDED_AND_CLEANED=78,3276
    THREAD_SYNCH_TERMINATED_AND_CLEANED=80,3403
    THREAD_SYNCH_SUSPENDED_VALID_MCONTEXT_OR_NO_XFER=85,3555
    THREAD_SYNCH_SUSPENDED_VALID_MCONTEXT=87,3612
} thread_synch_state_t;88,3656
    THREAD_SYNCH_RESULT_SUCCESS 91,3696
    THREAD_SYNCH_RESULT_SUSPEND_FAILURE 92,3741
    THREAD_SYNCH_RESULT_NOT_SAFE 93,3786
} thread_synch_result_t;94,3831
    THREAD_SYNCH_SUSPEND_FAILURE_ABORT 105,4273
    THREAD_SYNCH_SUSPEND_FAILURE_ABORT  = 0x00000001,x00000001105,4273
    THREAD_SYNCH_SUSPEND_FAILURE_IGNORE 106,4327
    THREAD_SYNCH_SUSPEND_FAILURE_IGNORE = 0x00000002,x00000002106,4327
    THREAD_SYNCH_SUSPEND_FAILURE_RETRY 111,4599
    THREAD_SYNCH_SUSPEND_FAILURE_RETRY  = 0x00000004,x00000004111,4599
    THREAD_SYNCH_SMALL_LOOP_MAX 114,4698
    THREAD_SYNCH_SMALL_LOOP_MAX         = 0x00000008,x00000008114,4698
#define THREAD_SYNCH_IS_CLEANED(118,4781
#define THREAD_SYNCH_IS_TERMINATED(122,5007
#define THREAD_SYNCH_SAFE(127,5255

vmareas.h,2137
#define _VMAREAS_H_ 42,1931
#define EMPTY_REGION_BASE 47,2074
#define EMPTY_REGION_SIZE 48,2161
#define UNIVERSAL_REGION_BASE 49,2201
#define UNIVERSAL_REGION_SIZE 51,2297
#define UNIVERSAL_REGION_END 53,2397
    VECTOR_SHARED 60,2531
    VECTOR_SHARED        = 0x0001,x000160,2531
    VECTOR_FRAGMENT_LIST 61,2566
    VECTOR_FRAGMENT_LIST = 0x0002,x000261,2566
    VECTOR_NEVER_MERGE_ADJACENT 63,2669
    VECTOR_NEVER_MERGE_ADJACENT = 0x0004,x000463,2669
    VECTOR_NEVER_OVERLAP 65,2776
    VECTOR_NEVER_OVERLAP = 0x0008,x000865,2776
    VECTOR_NO_LOCK 69,2938
    VECTOR_NO_LOCK       = 0x0010,x001069,2938
#define VECTOR_NEVER_MERGE 72,2977
struct vm_area_vector_t 82,3462
    struct vm_area_t *buf;buf83,3488
    int size;84,3515
    int length;85,3544
    uint flags;86,3560
    read_write_lock_t lock;91,3780
    void (*free_payload_func)free_payload_func95,3875
    void *(*split_payload_func)split_payload_func99,4015
    bool (*should_merge_func)should_merge_func108,4498
    void *(*merge_payload_func)merge_payload_func113,4754
#define VMVECTOR_ALLOC_VECTOR(119,5011
typedef struct vmvector_iterator_t 125,5260
    vm_area_vector_t *vector;vector126,5297
    int index;127,5327
} vmvector_iterator_t;128,5342
vmvector_empty(170,6689
#define USING_PRETEND_WRITABLE(419,13816
    ACTION_TERMINATE_PROCESS,545,18338
    ACTION_CONTINUE,546,18368
    ACTION_TERMINATE_THREAD,547,18418
    ACTION_THROW_EXCEPTION,548,18447
} action_type_t;549,18475
#  define USING_FUTURE_EXEC_LIST 572,19340
#  define USING_FUTURE_EXEC_LIST 577,19641
    DO_APP_MEM_PROT_CHANGE,597,20292
    FAIL_APP_MEM_PROT_CHANGE,598,20365
    PRETEND_APP_MEM_PROT_CHANGE,600,20493
    SUBSET_APP_MEM_PROT_CHANGE,601,20572
    DR_MODIFY_HALT 612,21026
    DR_MODIFY_NOP 613,21105
    DR_MODIFY_FAIL 614,21187
    DR_MODIFY_ALLOW 615,21241
    DR_MODIFY_OFF 616,21325
#    define APC_API 777,27109
#    define APC_API779,27163
    APC_TARGET_NATIVE,790,27384
    APC_TARGET_WINDOWS,791,27408
    THREAD_TARGET_NATIVE,792,27433
    THREAD_TARGET_WINDOWS793,27460
} apc_thread_type_t;794,27486

unit_tests.c,14
main(51,2012

perfctr.c,265
int perfctr_eventset;48,2017
struct {int num;49,2039
struct {int num;char *name;name49,2039
struct {int num;char *name;} papi_events[papi_events49,2039
void hardware_perfctr_init(82,3555
void hardware_perfctr_exit(132,4943
void perfctr_update_gui(154,5525

native_exec.c,639
vm_area_vector_t *native_exec_areas;native_exec_areas55,2374
static const app_pc retstub_start 57,2412
static const app_pc retstub_end 59,2497
native_exec_init(63,2584
native_exec_exit(75,2956
is_native_pc(85,3160
on_native_exec_list(91,3259
check_and_mark_native_exec(121,4321
native_exec_module_load(149,5309
native_exec_module_unload(157,5541
entering_native(169,5965
call_to_native(202,7356
return_to_native(242,8955
back_from_native_common(256,9312
pop_retaddr_for_index(289,10557
return_from_native(312,11514
native_module_callout(335,12301
interpret_back_from_native(353,12951
put_back_native_retaddrs(368,13596

hotpatch.h,260
#define _HOTPATCH_H_ 40,1831
    int vul_index;53,2284
    int set_index;56,2380
    int module_index;57,2399
    int ppoint_index;58,2471
} hotp_offset_match_t;59,2551
    CXT_TYPE_HOT_PATCH,69,3006
    CXT_TYPE_CORE_HOOK70,3030
} cxt_type_t;71,3053

x86/steal_reg.c,155
restore_state(92,3542
expand_pusha(135,4957
expand_popa(168,6063
use_edi(213,8030
use_different_reg(270,10462
use_ebx(409,16122
steal_reg(444,17269

x86/interp.c,4700
int app_jump=81,2921
instr_t *instr;instr82,2955
int sn_bb_skip_list[sn_bb_skip_list83,2989
int sn_list_length=84,3168
enum { DIRECT_XFER_LENGTH 111,3845
#define BRANCH_LIMIT 131,4878
volatile bool bb_lock_start;150,5789
file_t bbdump_file 153,5835
void surya_foo(159,5906
interp_init(170,5986
static int num_rets_removed;183,6255
interp_exit(189,6319
    app_pc start_pc;219,7126
    bool app_interp;220,7147
    bool for_cache;222,7315
    bool record_vmlist;223,7379
    bool mangle_ilist;224,7441
    bool record_translation;225,7504
    bool has_bb_building_lock;226,7580
    file_t outf;227,7668
    bool pass_to_client;230,7845
    bool post_client;234,8110
    bool for_trace;235,8186
    overlap_info_t *overlap_info;overlap_info239,8296
    instrlist_t *ilist;ilist243,8486
    uint flags;244,8510
    void *vmlist;vmlist245,8526
    app_pc end_pc;246,8544
    bool native_exec;247,8563
    bool native_call;248,8643
    instrlist_t **unmangled_ilist;unmangled_ilist250,8724
    bool full_decode;254,8839
    bool follow_direct;255,8924
    bool check_vm_area;256,8989
    uint num_elide_jmp;257,9063
    uint num_elide_call;258,9087
    app_pc last_page;259,9112
    app_pc cur_pc;260,9134
    app_pc instr_start;261,9153
    app_pc checked_end;262,9177
    cache_pc exit_target;263,9243
    uint exit_type;264,9314
    bool invalid_instr_hack;266,9384
    instr_t *instr;instr268,9420
    int eflags;269,9476
    app_pc pretend_pc;270,9492
} build_bb_t;272,9605
init_build_bb(279,9729
reset_overlap_info(300,10450
update_overlap_info(310,10741
# define BBPRINT(332,11649
#  define BBPRINT(339,11925
#  define BBPRINT(344,12131
static bool reached_image_entry 376,12855
check_for_image_entry(379,12923
set_reached_image_entry(390,13201
reached_image_entry_yet(398,13365
must_not_be_inlined(413,13741
must_not_be_elided(446,14915
must_escape_from(474,15914
bb_add_native_direct_xfer(526,17996
check_for_stopping_point(587,20871
eflags_analysis(633,22888
check_new_page_start(706,26099
check_new_page_contig(730,27165
check_new_page_jmp(764,28671
bb_process_invalid_instr(817,31127
follow_direct_jump(896,35012
bb_process_ubr(924,36136
follow_direct_call(1014,40445
bb_stop_prior_to_instr(1044,41570
bb_process_call_direct(1055,41919
instr_is_call_sysenter_pattern(1118,44475
bb_verify_sysenter_pattern(1170,46606
bb_process_SEH_push(1205,48029
        typedef struct _borland_seh_frame_t 1294,53263
            EXCEPTION_REGISTRATION reg;1295,53309
            reg_t xbp;1296,53349
        } borland_seh_frame_t;1297,53393
bb_process_fs_ref_opnd(1445,61713
bb_process_fs_ref(1489,63900
bb_process_mov_seg(1597,68707
bb_process_ignorable_syscall(1654,70934
bb_process_shared_syscall(1727,73968
bb_process_non_ignorable_syscall(1764,75391
bb_process_syscall(1790,76426
bb_process_indcall_syscall(1865,79165
bb_process_interrupt(1881,79652
bb_process_convertible_indcall(1921,81268
read_from_IAT(2140,90613
is_targeting_convertible_IAT(2153,90994
bb_process_IAT_convertible_indjmp(2241,94444
bb_process_IAT_convertible_indcall(2380,100066
bb_process_float_pc(2480,104019
instr_will_be_exit_cti(2495,104636
client_check_syscall(2509,105144
client_process_bb(2554,107147
build_bb_ilist(2900,123733
bb_build_abort(4263,188471
expand_should_set_translation(4301,190145
mangle_bb_ilist(4318,190729
build_app_bb_ilist(4387,193814
decode_as_bb(4405,194554
decode_trace(4439,195948
find_app_bb_end(4473,197113
app_bb_overlaps(4485,197523
report_native_module(4505,198201
build_native_exec_bb(4526,199027
at_native_exec_gateway(4655,204596
init_interp_build_bb(4834,213243
exit_interp_build_bb(4901,216475
build_basic_block_fragment(4916,217018
recreate_bb_ilist(5039,221788
recreate_fragment_ilist(5125,225656
process_nops_for_trace(5353,235637
regenerate_custom_exit_stub(5377,236773
tracelist_add(5451,239853
tracelist_add_after(5470,240477
insert_increment_stat_counter(5490,241092
insert_restore_spilled_xcx(5524,242784
insert_transparent_comparison(5558,244198
mangle_x64_ib_in_trace(5602,245921
mangle_indirect_branch_in_trace(5684,249725
fixup_last_cti(5906,258849
append_trace_speculate_last_ibl(6121,267430
append_ib_trace_last_ibl_exit_stat(6277,274131
extend_trace(6361,278011
create_exit_jmp(6464,282362
mangle_trace(6496,283462
instr_eflags_to_fragment_eflags(6770,295862
forward_eflags_analysis(6794,296715
#define DF_LOGLEVEL(6837,298785
decode_fragment(6841,298897
#undef DF_LOGLEVEL7527,333778
decode_fragment_exact(7533,333907
copy_fragment(7554,334701
shift_ctis_in_fragment(7666,339239
add_profile_call(7783,344643
emulate(7810,345546

x86/sideline.c,2677
#    define RUN_SIG 52,2211
#    define RUN_SIG60,2519
     typedef pid_t thread_t;61,2539
#    define THREAD_STACK_SIZE 62,2568
#define OPTVERB_3 81,2995
#define VERB_3 83,3034
#define VERB_2 84,3051
#define SAMPLE_COUNT_THRESHOLD 87,3129
#define SAMPLE_TO_OPTIMIZE_RATIO 89,3236
volatile fragment_t * sideline_trace;95,3425
int num_processors;98,3508
thread_id_t pause_for_sideline;101,3593
event_t paused_for_sideline_event;102,3625
event_t resume_from_sideline_event;103,3660
file_t logfile;108,3802
typedef struct _sample_entry_t 123,4412
    ptr_uint_t    tag;124,4445
    int     counter;125,4468
    struct  _sample_entry_t * next;126,4489
} sample_entry_t;127,4555
typedef struct _sample_table_t 129,4574
    uint  hash_bits;130,4607
    uint  hash_mask;131,4628
    hash_function_t  hash_func;132,4649
    uint           hash_mask_offset;133,4681
    uint  capacity;134,4757
    uint  entries;135,4777
    mutex_t         lock;136,4796
    sample_entry_t **table;table137,4868
} sample_table_t;138,4938
#define INITIAL_HASH_BITS 140,4957
static sample_table_t table;142,4987
static fragment_t * fragment_now_optimizing;144,5103
typedef struct _remember_entry_t 151,5322
    fragment_t  *f;f152,5357
    fragment_t  *replacement;replacement154,5405
    struct _remember_entry_t * next;156,5442
} remember_entry_t;157,5479
typedef struct _remember_list_t 159,5500
    dcontext_t *dcontext;dcontext160,5534
    remember_entry_t *list;list161,5560
    struct _remember_list_t * next;162,5588
} remember_list_t;163,5624
static remember_list_t *remember;remember165,5644
static int num_samples;168,5763
static int num_optimized;171,5801
static int num_opt_with_no_synch;172,5827
static thread_id_t child_tid;178,5978
static HANDLE child_handle;180,6023
static thread_t child;182,6068
static void *stack;stack183,6091
static event_t wake_event;186,6119
static event_t asleep_event;187,6146
static event_t exited_event;188,6175
static volatile bool child_sleep;191,6265
static volatile bool child_exit;192,6299
sideline_init(218,7156
sideline_exit(298,9652
add_sideline_prefix(386,12151
finalize_sideline_prefix(396,12531
remove_sideline_profiling(409,12930
sideline_start(422,13374
sideline_stop(432,13573
sideline_run(446,13952
optimize_trace_wrapper(484,15022
sideline_sample(490,15171
sideline_examine_traces(525,16418
sideline_optimize(579,18326
sideline_cleanup_replacement(771,25649
find_hottest_entry(834,27785
update_sample_entry(854,28220
sideline_fragment_delete(887,28998
remove_sample_entry(904,29569
add_remember_entry(925,30136
create_thread(973,31715
delete_thread(1002,32589

x86/instrument.h,9239
#define _INSTRUMENT_H_ 43,1995
#define CURRENT_API_VERSION 56,2373
    DR_EMIT_DEFAULT 109,3923
    DR_EMIT_STORE_TRANSLATIONS 121,4462
    DR_EMIT_STORE_TRANSLATIONS   = 0x01,x01121,4462
    DR_EMIT_PERSISTABLE 131,4937
    DR_EMIT_PERSISTABLE          = 0x02,x02131,4937
    DR_EMIT_MUST_END_TRACE 141,5479
    DR_EMIT_MUST_END_TRACE       = 0x04,x04141,5479
    DR_EMIT_GO_NATIVE 153,6138
    DR_EMIT_GO_NATIVE           = 0x08,x08153,6138
} dr_emit_flags_t;154,6178
    CUSTOM_TRACE_DR_DECIDES,498,24030
    CUSTOM_TRACE_END_NOW,499,24059
    CUSTOM_TRACE_CONTINUE500,24085
} dr_custom_trace_action_t;501,24111
typedef struct _dr_fault_fragment_info_t 635,30057
    void *tag;tag641,30289
    byte *cache_start_pc;cache_start_pc649,30647
    bool is_trace;651,30743
    bool app_code_consistent;659,31128
} dr_fault_fragment_info_t;660,31162
typedef struct _dr_restore_state_info_t 668,31403
    dr_mcontext_t *mcontext;mcontext675,31710
    bool raw_mcontext_valid;677,31781
    dr_mcontext_t *raw_mcontext;raw_mcontext685,32144
    dr_fault_fragment_info_t fragment_info;690,32304
} dr_restore_state_info_t;691,32348
    DR_EXIT_MULTI_THREAD 807,37156
    DR_EXIT_MULTI_THREAD           = 0x01,x01807,37156
    DR_EXIT_SKIP_THREAD_EXIT 816,37634
    DR_EXIT_SKIP_THREAD_EXIT        = 0x02,x02816,37634
} dr_exit_flags_t;817,37678
typedef struct _dr_exception_t 914,41140
    dr_mcontext_t *mcontext;mcontext919,41316
    EXCEPTION_RECORD *record;record920,41345
    dr_mcontext_t *raw_mcontext;raw_mcontext929,41770
    dr_fault_fragment_info_t fault_fragment_info;934,41929
} dr_exception_t;935,41979
typedef struct _dr_siginfo_t 1124,49935
    int sig;1126,49996
    void *drcontext;drcontext1128,50068
    dr_mcontext_t *mcontext;mcontext1134,50266
    dr_mcontext_t *raw_mcontext;raw_mcontext1143,50680
    bool raw_mcontext_valid;1145,50755
    byte *access_address;access_address1150,50917
    bool blocked;1157,51224
    dr_fault_fragment_info_t fault_fragment_info;1162,51371
} dr_siginfo_t;1163,51421
    DR_SIGNAL_DELIVER,1171,51618
    DR_SIGNAL_SUPPRESS,1173,51697
    DR_SIGNAL_BYPASS,1178,51858
    DR_SIGNAL_REDIRECT,1183,52025
} dr_signal_action_t;1184,52049
    DR_RCO_STACK_VIOLATION,1304,57713
    DR_RCO_HEAP_VIOLATION,1305,57741
    DR_RCT_RETURN_VIOLATION,1306,57768
    DR_RCT_INDIRECT_CALL_VIOLATION,1307,57797
    DR_RCT_INDIRECT_JUMP_VIOLATION,1308,57833
    DR_UNKNOWN_VIOLATION,1309,57869
} dr_security_violation_type_t;1310,57895
    DR_VIOLATION_ACTION_CONTINUE,1341,59903
    DR_VIOLATION_ACTION_CONTINUE_CHANGED_CONTEXT,1342,59937
    DR_VIOLATION_ACTION_KILL_PROCESS,1343,59987
    DR_VIOLATION_ACTION_KILL_THREAD,1344,60025
    DR_VIOLATION_ACTION_THROW_EXCEPTION,1345,60062
} dr_security_violation_action_t;1346,60103
#define GLOBAL_DCONTEXT 1575,69691
# define DR_ASSERT_MSG(1587,69968
# define DR_ASSERT_MSG(1592,70149
#define DR_ASSERT(1603,70466
    DR_WINDOWS_VERSION_8 1693,73044
    DR_WINDOWS_VERSION_7 1694,73079
    DR_WINDOWS_VERSION_VISTA 1695,73114
    DR_WINDOWS_VERSION_2003 1696,73149
    DR_WINDOWS_VERSION_XP 1697,73226
    DR_WINDOWS_VERSION_2000 1698,73261
    DR_WINDOWS_VERSION_NT 1699,73296
} dr_os_version_t;1700,73331
typedef struct _dr_os_version_info_t 1703,73403
    size_t size;1705,73524
    dr_os_version_t version;1707,73581
    uint service_pack_major;1709,73651
    uint service_pack_minor;1711,73721
} dr_os_version_info_t;1712,73750
    DR_ALLOC_NON_HEAP 1830,76881
    DR_ALLOC_NON_HEAP             = 0x0001,x00011830,76881
    DR_ALLOC_THREAD_PRIVATE 1839,77301
    DR_ALLOC_THREAD_PRIVATE       = 0x0002,x00021839,77301
    DR_ALLOC_CACHE_REACHABLE 1851,77912
    DR_ALLOC_CACHE_REACHABLE      = 0x0004,x00041851,77912
    DR_ALLOC_FIXED_LOCATION 1860,78341
    DR_ALLOC_FIXED_LOCATION       = 0x0008,x00081860,78341
    DR_ALLOC_LOW_2GB 1869,78769
    DR_ALLOC_LOW_2GB              = 0x0010,x00101869,78769
    DR_ALLOC_NON_DR 1879,79267
    DR_ALLOC_NON_DR               = 0x0020,x00201879,79267
    DR_ALLOC_RESERVE_ONLY 1888,79677
    DR_ALLOC_RESERVE_ONLY         = 0x0040,x00401888,79677
    DR_ALLOC_COMMIT_ONLY 1901,80412
    DR_ALLOC_COMMIT_ONLY          = 0x0080,x00801901,80412
} dr_alloc_flags_t;1903,80463
#define DR_TRY_EXCEPT(2229,91378
typedef void * dr_module_iterator_t;2606,102920
typedef struct _module_segment_data_t 2617,103379
    app_pc start;2618,103419
    app_pc end;2619,103498
    uint prot;2620,103574
} module_segment_data_t;2621,103637
struct _module_data_t 2633,104222
        app_pc start;2635,104258
        module_handle_t handle;2636,104320
    app_pc end;2643,104726
    app_pc entry_point;2645,104743
    uint flags;2647,104832
    module_names_t names;2649,104876
    char *full_path;full_path2653,105085
    version_number_t file_version;2656,105172
    version_number_t product_version;2657,105254
    uint checksum;2658,105342
    uint timestamp;2659,105405
    size_t module_internal_size;2660,105470
    bool contiguous;2662,105568
    uint num_segments;2663,105642
    module_segment_data_t *segments;segments2668,105829
typedef struct _dr_module_import_iterator_t dr_module_import_iterator_t;2782,109483
typedef struct _dr_module_import_desc_t dr_module_import_desc_t;2788,109673
typedef struct _dr_module_import_t 2800,110159
    const char *modname;modname2804,110269
    dr_module_import_desc_t *module_import_desc;module_import_desc2810,110441
} dr_module_import_t;2811,110490
typedef struct _dr_symbol_import_iterator_t dr_symbol_import_iterator_t;2860,111868
typedef struct _dr_symbol_import_t 2869,112223
    const char *name;name2870,112260
    const char *modname;modname2871,112335
    bool delay_load;2872,112412
    bool by_ordinal;2873,112492
    ptr_uint_t ordinal;2874,112575
} dr_symbol_import_t;2880,112830
typedef struct _dr_export_info_t 2991,116515
    generic_func_t address;2997,116744
    bool is_indirect_code;3006,117148
} dr_export_info_t;3007,117175
#define DR_FILE_READ 3138,121315
#define DR_FILE_WRITE_REQUIRE_NEW 3140,121429
#define DR_FILE_WRITE_APPEND 3145,121581
#define DR_FILE_WRITE_OVERWRITE 3150,121721
#define DR_FILE_ALLOW_LARGE 3155,121918
#define DR_FILE_CLOSE_ON_FORK 3157,122026
#define DR_SEEK_SET 3241,124702
#define DR_SEEK_CUR 3242,124747
#define DR_SEEK_END 3243,124800
    DR_MAP_PRIVATE 3292,126040
    DR_MAP_PRIVATE             = 0x0001,x00013292,126040
    DR_MAP_FIXED 3300,126388
    DR_MAP_FIXED               = 0x0002,x00023300,126388
    DR_MAP_IMAGE 3307,126601
    DR_MAP_IMAGE               = 0x0004,x00043307,126601
    DR_MAP_CACHE_REACHABLE 3314,126897
    DR_MAP_CACHE_REACHABLE     = 0x0008,x00083314,126897
#define LOG_NONE 3385,129260
#define LOG_STATS 3386,129350
#define LOG_TOP 3387,129440
#define LOG_THREADS 3388,129530
#define LOG_SYSCALLS 3389,129620
#define LOG_ASYNCH 3390,129710
#define LOG_INTERP 3391,129800
#define LOG_EMIT 3392,129890
#define LOG_LINKS 3393,129980
#define LOG_CACHE 3394,130070
#define LOG_FRAGMENT 3395,130160
#define LOG_DISPATCH 3396,130250
#define LOG_MONITOR 3397,130340
#define LOG_HEAP 3398,130430
#define LOG_VMAREAS 3399,130521
#define LOG_SYNCH 3400,130611
#define LOG_MEMSTATS 3401,130701
#define LOG_OPTS 3402,130791
#define LOG_SIDELINE 3403,130881
#define LOG_SYMBOLS 3404,130967
#define LOG_RCT 3405,131048
#define LOG_NT 3406,131136
#define LOG_HOT_PATCHING 3407,131224
#define LOG_HTABLE 3408,131306
#define LOG_MODULEDB 3409,131387
#define LOG_ALL 3410,131476
    DR_SUSPEND_NATIVE 3916,150911
    DR_SUSPEND_NATIVE = 0x0001,x00013916,150911
} dr_suspend_flags_t;3917,150943
    SPILL_SLOT_1 4101,158761
    SPILL_SLOT_2 4102,158839
    SPILL_SLOT_3 4103,158917
    SPILL_SLOT_4 4104,158995
    SPILL_SLOT_5 4105,159073
    SPILL_SLOT_6 4106,159151
    SPILL_SLOT_7 4107,159229
    SPILL_SLOT_8 4108,159307
    SPILL_SLOT_9 4109,159385
    SPILL_SLOT_10 4111,159474
    SPILL_SLOT_11 4113,159595
    SPILL_SLOT_12 4115,159716
    SPILL_SLOT_13 4117,159837
    SPILL_SLOT_14 4119,159958
    SPILL_SLOT_15 4121,160079
    SPILL_SLOT_16 4123,160200
    SPILL_SLOT_17 4125,160321
    SPILL_SLOT_MAX 4127,160442
    SPILL_SLOT_MAX = SPILL_SLOT_17 4127,160442
    SPILL_SLOT_MAX 4130,160586
    SPILL_SLOT_MAX = SPILL_SLOT_9 4130,160586
} dr_spill_slot_t;4133,160729
#define MINSERT 4296,166905
    DR_CLEANCALL_SAVE_FLOAT 4426,172124
    DR_CLEANCALL_SAVE_FLOAT             = 0x0001,x00014426,172124
    DR_CLEANCALL_NOSAVE_FLAGS 4433,172453
    DR_CLEANCALL_NOSAVE_FLAGS           = 0x0002,x00024433,172453
    DR_CLEANCALL_NOSAVE_XMM 4435,172552
    DR_CLEANCALL_NOSAVE_XMM             = 0x0004,x00044435,172552
    DR_CLEANCALL_NOSAVE_XMM_NONPARAM 4437,172685
    DR_CLEANCALL_NOSAVE_XMM_NONPARAM    = 0x0008,x00084437,172685
    DR_CLEANCALL_NOSAVE_XMM_NONRET 4439,172821
    DR_CLEANCALL_NOSAVE_XMM_NONRET      = 0x0010,x00104439,172821
    DR_CLEANCALL_INDIRECT 4444,173038
    DR_CLEANCALL_INDIRECT               = 0x0020,x00204444,173038
} dr_cleancall_save_t;4445,173088
#define SPILL_SLOT_REDIRECT_NATIVE_TGT 4823,189116

x86/instr.c,12840
#define INSTR_INLINE 53,2567
# undef ASSERT_TRUNCATE76,3061
# undef ASSERT_BITFIELD_TRUNCATE77,3085
# undef ASSERT_NOT_REACHED78,3118
# define ASSERT_TRUNCATE 79,3145
# define ASSERT_BITFIELD_TRUNCATE 80,3214
# define ASSERT_NOT_REACHED 81,3292
#undef opnd_is_null96,3552
#undef opnd_is_immed_int97,3572
#undef opnd_is_immed_float98,3597
#undef opnd_is_near_pc99,3624
#undef opnd_is_near_instr100,3647
#undef opnd_is_reg101,3673
#undef opnd_is_base_disp102,3692
#undef opnd_is_far_pc103,3717
#undef opnd_is_far_instr104,3739
#undef opnd_is_mem_instr105,3764
#undef opnd_is_valid106,3789
bool opnd_is_null 107,3810
bool opnd_is_immed_int 108,3875
bool opnd_is_immed_float(109,3945
bool opnd_is_near_pc 110,4017
bool opnd_is_near_instr 111,4085
bool opnd_is_reg 112,4156
bool opnd_is_base_disp 113,4220
bool opnd_is_far_pc 114,4290
bool opnd_is_far_instr 115,4357
bool opnd_is_mem_instr 116,4427
bool opnd_is_valid 117,4497
#define opnd_is_null 118,4563
#define opnd_is_immed_int 119,4608
#define opnd_is_immed_float 120,4658
#define opnd_is_near_pc 121,4710
#define opnd_is_near_instr 122,4758
#define opnd_is_reg 123,4809
#define opnd_is_base_disp 124,4853
#define opnd_is_far_pc 125,4903
#define opnd_is_far_instr 126,4950
#define opnd_is_mem_instr 127,5000
#define opnd_is_valid 128,5050
# undef opnd_is_rel_addr131,5108
bool opnd_is_rel_addr(132,5133
# define opnd_is_rel_addr 133,5199
opnd_is_abs_base_disp(138,5346
bool opnd_is_abs_addr(142,5506
bool opnd_is_near_abs_addr(145,5623
bool opnd_is_far_abs_addr(148,5735
opnd_is_reg_32bit(153,5852
reg_is_32bit(161,5987
opnd_is_reg_64bit(167,6080
reg_is_64bit(175,6215
opnd_is_reg_pointer_sized(181,6308
reg_is_pointer_sized(189,6459
#undef opnd_get_reg198,6635
opnd_get_reg(200,6664
#define opnd_get_reg 204,6725
opnd_get_size(207,6772
opnd_set_size(236,7403
opnd_create_immed_int(257,7814
opnd_create_immed_float(282,8734
opnd_create_immed_float_zero(297,9165
opnd_get_immed_int(309,9493
opnd_get_immed_float(317,9729
opnd_create_far_pc(332,10150
opnd_create_instr_ex(342,10349
opnd_create_instr(353,10572
opnd_create_far_instr(359,10671
opnd_create_mem_instr(370,10894
opnd_get_pc(381,11128
opnd_get_segment_selector(393,11382
opnd_get_instr(404,11710
opnd_get_shift(413,11909
opnd_get_mem_instr_disp(420,12064
opnd_create_base_disp_ex(430,12299
opnd_create_base_disp(440,12754
opnd_create_far_base_disp_ex(448,13040
opnd_create_far_base_disp(479,14596
#undef opnd_get_base486,14892
#undef opnd_get_disp487,14913
#undef opnd_get_index488,14934
#undef opnd_get_scale489,14956
#undef opnd_get_segment490,14978
reg_id_t opnd_get_base 491,15002
int      opnd_get_disp 492,15073
reg_id_t opnd_get_index 493,15144
int      opnd_get_scale 494,15216
reg_id_t opnd_get_segment(495,15288
#define opnd_get_base 496,15362
#define opnd_get_disp 497,15399
#define opnd_get_index 498,15436
#define opnd_get_scale 499,15474
#define opnd_get_segment 500,15512
opnd_is_disp_encode_zero(503,15560
opnd_is_disp_force_full(512,15795
opnd_is_disp_short_addr(521,16027
opnd_set_disp(530,16259
opnd_set_disp_ex(539,16468
opnd_create_abs_addr(552,16993
opnd_create_far_abs_addr(558,17126
opnd_create_rel_addr(596,18641
opnd_create_far_rel_addr(608,19083
opnd_get_addr(624,19584
opnd_is_memory_reference(638,19984
opnd_is_far_memory_reference(646,20181
opnd_is_near_memory_reference(653,20355
opnd_num_regs_used(661,20571
opnd_get_reg_used(694,21353
const reg_id_t regparms[regparms757,23270
const reg_id_t dr_reg_fixer[dr_reg_fixer768,23489
reg_check_reg_fixer(795,25197
opnd_uses_reg(811,25764
opnd_replace_reg(847,26700
bool opnd_same_address(917,29113
opnd_same_sizes_ok(952,30188
bool opnd_same(970,30880
bool opnd_share_reg(1037,33700
range_overlap(1067,34510
bool opnd_defines_use(1087,35018
opnd_size_in_bytes(1148,37117
opnd_size_from_bytes(1232,39378
opnd_shrink_to_16_bits(1256,39980
opnd_shrink_to_32_bits(1276,40628
reg_get_value_helper(1294,41100
reg_get_value_priv(1308,41498
reg_get_value(1346,42812
reg_set_value_priv(1355,43142
reg_set_value(1368,43463
opnd_compute_address_priv(1381,43985
opnd_compute_address(1427,45524
get_register_name(1438,45912
reg_to_pointer_sized(1444,45985
reg_32_to_16(1450,46064
reg_32_to_8(1458,46272
reg_32_to_64(1476,46680
reg_64_to_32(1484,46888
reg_is_extended(1492,47092
reg_32_to_opsz(1508,47779
reg_resize_to_opsz(1528,48298
reg_parameter_num(1536,48539
opnd_get_reg_dcontext_offs(1547,48706
opnd_get_reg_mcontext_offs(1574,49488
reg_overlap(1580,49593
enum {REG_INVALID_BITS REG_INVALID_BITS1597,50125
enum {REG_INVALID_BITS = 0x0}x01597,50125
reg_get_bits(1599,50205
reg_get_size(1633,51659
instr_create(1674,52991
instr_destroy(1686,53432
instr_clone(1696,53740
instr_init(1746,55971
instr_free(1756,56314
instr_mem_usage(1789,57587
instr_reset(1822,58602
instr_reuse(1837,59128
instr_build(1884,60559
instr_build_bits(1893,60834
private_instr_encode(1907,61329
#define inlined_instr_get_opcode(1979,64535
instr_get_opcode(1985,64803
#define instr_get_opcode 1990,64957
instr_being_modified(1993,65027
instr_set_opcode(2004,65383
instr_valid(2025,66330
instr_get_app_pc(2033,66490
instr_opcode_valid(2044,66830
instr_get_instr_info(2051,66968
get_instr_info(2057,67078
#undef instr_get_src2062,67139
instr_get_src(2064,67167
#define instr_get_src 2068,67249
uint instr_get_src_kind(2073,67346
#undef instr_get_dst2079,67466
instr_get_dst(2081,67494
#define instr_get_dst 2085,67576
uint instr_get_dst_kind(2090,67673
instr_set_num_opnds(2100,67938
instr_set_src(2131,69395
instr_set_dst(2147,69959
#undef instr_get_target2157,70351
instr_get_target(2159,70382
#define instr_get_target 2163,70455
instr_set_target(2169,70594
instr_set_prefix_flag(2182,71032
instr_get_prefix_flag(2190,71202
instr_set_prefixes(2196,71309
instr_get_prefixes(2203,71461
instr_set_x86_mode(2214,71695
instr_get_x86_mode(2227,72007
instr_branch_targets_prefix(2246,72654
instr_branch_set_prefix_target(2265,73428
instr_branch_special_exit(2276,73720
instr_branch_set_special_exit(2285,73937
instr_exit_branch_type(2296,74194
instr_exit_branch_set_type(2304,74325
instr_set_ok_to_mangle(2313,74514
instr_is_meta_may_fault(2322,74686
instr_set_meta_may_fault(2329,74864
instr_set_meta_no_translation(2339,75163
instr_set_ok_to_emit(2346,75301
instr_set_exit_stub_code(2366,76051
instr_exit_stub_code(2394,77181
instr_get_eflags(2407,77494
instr_get_opcode_eflags(2445,78996
instr_get_arith_flags(2453,79197
instr_eflags_valid(2463,79416
instr_set_eflags_valid(2469,79516
instr_arith_flags_valid(2484,79939
instr_set_arith_flags_valid(2492,80156
instr_set_operands_valid(2503,80392
instr_set_raw_bits(2513,80632
instr_shift_raw_bits(2538,81553
instr_set_raw_bits_valid(2551,81884
instr_free_raw_bits(2569,82398
instr_allocate_raw_bits(2583,82842
instr_set_translation(2614,84075
instr_get_translation(2624,84307
instr_make_persistent(2637,84799
instr_get_raw_bits(2646,85054
instr_get_raw_byte(2653,85160
instr_get_raw_word(2662,85446
instr_set_raw_byte(2675,85892
instr_set_raw_bytes(2692,86508
instr_set_raw_word(2709,87139
instr_length(2722,87612
instr_expand(2778,89894
instr_is_level_0(2881,94200
instr_get_next_expanded(2912,95503
instr_get_prev_expanded(2923,95917
instrlist_first_expanded(2934,96333
instrlist_last_expanded(2946,96735
instr_decode_cti(2965,97556
instr_decode_opcode(2995,98904
instr_decode(3027,100244
instr_decode_with_current_dcontext(3062,101667
instrlist_decode_cti(3081,102437
loginst(3160,105704
logopnd(3170,105974
logtrace(3181,106242
instr_shrink_to_16_bits(3200,106858
instr_shrink_to_32_bits(3234,108008
instr_uses_reg(3255,108688
bool instr_reg_in_dst(3260,108809
instr_reg_in_src(3270,109026
instr_reads_from_reg(3283,109363
bool instr_writes_to_reg(3300,109735
bool instr_writes_to_exact_reg(3314,110126
bool instr_replace_src_opnd(3327,110412
bool instr_same(3344,110808
bool instr_reads_memory(3381,111827
bool instr_writes_memory(3403,112374
instr_rip_rel_valid(3430,113455
instr_set_rip_rel_valid(3436,113584
instr_get_rip_rel_pos(3445,113761
instr_set_rip_rel_pos(3451,113840
instr_get_rel_addr_target(3460,114109
instr_has_rel_addr_reference(3497,115194
instr_get_rel_addr_dst_idx(3503,115299
instr_get_rel_addr_src_idx(3519,115633
instr_is_our_mangling(3536,115985
instr_set_our_mangling(3542,116084
instr_compute_address_ex_priv(3554,116381
instr_compute_address_ex(3599,117726
instr_compute_address_ex_pos(3610,118147
instr_compute_address_priv(3625,118832
instr_compute_address(3635,119043
instr_memory_reference_size(3645,119379
decode_memory_reference_size(3670,120132
instr_get_label_data_area(3686,120618
instr_branch_type(3697,120865
instr_get_branch_target_pc(3746,122866
instr_set_branch_target_pc(3756,123160
instr_is_exit_cti(3770,123654
instr_is_mov(3786,124130
opcode_is_call(3797,124378
instr_is_call(3806,124548
instr_is_call_direct(3813,124660
instr_is_near_call_direct(3820,124798
instr_is_call_indirect(3827,124919
instr_is_return(3834,125066
opcode_is_cbr(3843,125285
instr_is_cbr(3851,125478
opcode_is_mbr(3858,125624
instr_is_mbr(3870,125890
instr_is_far_cti(3877,126027
instr_is_far_abs_cti(3889,126359
opcode_is_ubr(3896,126506
instr_is_ubr(3904,126635
instr_is_near_ubr(3911,126776
instr_is_cti(3919,126955
instr_is_cti_short(3931,127391
instr_is_cti_loop(3955,128349
instr_is_cti_short_rewrite(3972,129086
instr_is_interrupt(4021,131088
instr_get_interrupt_number(4028,131235
instr_is_syscall(4049,132019
instr_is_wow64_syscall(4079,132762
instr_is_mov_constant(4108,133726
bool instr_is_prefetch(4128,134289
instr_is_floating_ex(4144,134625
instr_is_floating(4385,144384
instr_saves_float_pc(4391,144474
opcode_is_mmx(4400,144761
opcode_is_sse_or_sse2(4416,145467
type_is_sse(4441,146750
instr_is_mmx(4447,146854
instr_is_sse_or_sse2(4466,147464
instr_is_mov_imm_to_tos(4478,147674
instr_is_label(4492,148214
instr_is_undefined(4499,148398
instr_invert_cbr(4511,148715
instr_convert_short_meta_jmp_to_long(4603,153007
instr_cbr_taken(4619,153708
opc_jcc_taken(4645,154653
instr_jcc_taken(4690,156364
instr_cmovcc_to_jcc(4703,156751
instr_cmovcc_triggered(4732,157753
instr_uses_fp_reg(4740,157942
reg_is_gpr(4771,158852
reg_is_segment(4777,158934
reg_is_ymm(4783,159018
reg_is_xmm(4789,159107
reg_is_mmx(4796,159223
reg_is_fp(4802,159312
instr_create_0dst_0src(4828,160184
instr_create_0dst_1src(4835,160327
instr_create_0dst_2src(4843,160513
instr_create_0dst_3src(4853,160769
instr_create_1dst_0src(4864,161070
instr_create_1dst_1src(4872,161256
instr_create_1dst_2src(4882,161508
instr_create_1dst_3src(4893,161807
instr_create_1dst_5src(4905,162151
instr_create_2dst_0src(4920,162608
instr_create_2dst_1src(4930,162864
instr_create_2dst_2src(4941,163163
instr_create_2dst_3src(4953,163509
instr_create_2dst_4src(4966,163900
instr_create_3dst_0src(4981,164359
instr_create_3dst_3src(4992,164660
instr_create_3dst_4src(5007,165119
instr_create_3dst_5src(5023,165623
instr_create_4dst_1src(5041,166195
instr_create_4dst_4src(5055,166607
instr_create_popa(5072,167155
instr_create_pusha(5089,167840
instr_create_raw_1byte(5112,168742
instr_create_raw_2bytes(5120,168930
instr_create_raw_3bytes(5130,169193
instr_create_raw_4bytes(5141,169506
instr_create_raw_5bytes(5154,169893
instr_create_raw_6bytes(5168,170330
instr_create_raw_7bytes(5184,170841
instr_create_raw_8bytes(5201,171402
instr_create_nbyte_nop(5220,172037
instr_is_nop(5256,173475
dcontext_opnd_common(5291,175169
opnd_create_dcontext_field_sz(5318,176424
opnd_create_dcontext_field(5324,176583
opnd_create_dcontext_field_via_reg_sz(5331,176800
opnd_create_dcontext_field_via_reg(5339,177094
opnd_create_dcontext_field_byte(5345,177266
instr_create_restore_from_dcontext(5351,177418
instr_create_save_to_dcontext(5362,177815
instr_create_restore_from_dc_via_reg(5378,178467
instr_create_save_to_dc_via_reg(5396,179232
instr_create_save_immed_to_dcontext(5411,179844
instr_create_jump_via_dcontext(5420,180196
instr_create_restore_dynamo_stack(5431,180559
update_dcontext_address(5437,180708
opnd_create_tls_slot(5468,182004
opnd_create_sized_tls_slot(5474,182102
instr_raw_is_tls_spill(5485,182504
instr_check_tls_spill_restore(5520,184056
instr_is_tls_spill(5560,185443
instr_is_tls_restore(5573,185890
instr_is_tls_xcx_spill(5587,186373
instr_check_mcontext_spill_restore(5599,186772
instr_is_reg_spill_or_restore(5643,188195
instr_create_save_to_tls(5676,189378
instr_create_restore_from_tls(5683,189606
instr_create_save_to_reg(5691,189915
instr_create_restore_from_reg(5697,190095
instr_raw_is_rip_rel_lea(5708,190437
move_mm_reg_opcode(5728,191126

x86/instr_inline.h,2309
#define _INSTR_INLINE_H_ 34,1706
# define MAKE_OPNDS_VALID(42,1845
#define CLIENT_ASSERT_(48,2089
#define MAKE_OPNDS_VALID(56,2428
#define CLIENT_ASSERT(60,2608
#define IF_DEBUG(61,2641
#define IF_DEBUG_(62,2664
#define OPND_IS_NULL(73,2982
#define OPND_IS_IMMED_INT(74,3039
#define OPND_IS_IMMED_FLOAT(75,3105
#define OPND_IS_NEAR_PC(76,3169
#define OPND_IS_NEAR_INSTR(77,3224
#define OPND_IS_REG(78,3282
#define OPND_IS_BASE_DISP(79,3338
#define OPND_IS_FAR_PC(80,3400
#define OPND_IS_FAR_INSTR(81,3459
#define OPND_IS_MEM_INSTR(82,3521
#define OPND_IS_VALID(83,3583
#define opnd_is_null 85,3640
#define opnd_is_immed_int 86,3685
#define opnd_is_immed_float 87,3735
#define opnd_is_near_pc 88,3787
#define opnd_is_near_instr 89,3835
#define opnd_is_reg 90,3886
#define opnd_is_base_disp 91,3930
#define opnd_is_far_pc 92,3980
#define opnd_is_far_instr 93,4027
#define opnd_is_mem_instr 94,4077
#define opnd_is_valid 95,4127
opnd_is_immed(100,4218
opnd_is_pc(107,4339
opnd_is_instr(113,4441
opnd_is_near_base_disp(120,4552
opnd_is_far_base_disp(127,4680
# define OPND_IS_REL_ADDR(134,4801
# define opnd_is_rel_addr 135,4862
opnd_is_near_rel_addr(139,4930
opnd_is_far_rel_addr(146,5062
opnd_create_null(160,5439
opnd_create_reg(169,5548
opnd_create_pc(181,5864
#define OPND_GET_REG(191,6002
#define opnd_get_reg 194,6134
#define GET_BASE_DISP(196,6169
#define OPND_GET_BASE(201,6343
#define OPND_GET_DISP(202,6403
#define OPND_GET_INDEX(203,6459
#define OPND_GET_SCALE(204,6520
#define opnd_get_base 206,6578
#define opnd_get_disp 207,6614
#define opnd_get_index 208,6650
#define opnd_get_scale 209,6688
#define OPND_GET_SEGMENT(211,6727
#define opnd_get_segment 217,7013
instr_ok_to_mangle(223,7099
instr_operands_valid(233,7374
instr_raw_bits_valid(240,7487
instr_has_allocated_bits(247,7600
instr_needs_encoding(254,7721
instr_ok_to_emit(261,7835
instr_num_srcs(270,8018
instr_num_dsts(278,8128
#define INSTR_GET_SRC(286,8293
#define INSTR_GET_DST(292,8636
#define INSTR_GET_TARGET(301,9033
#define instr_get_src 309,9498
#define instr_get_dst 310,9534
#define instr_get_target 311,9570
instr_set_note(315,9631
instr_get_note(322,9725
instr_get_next(329,9807
instr_get_prev(336,9889
instr_set_next(343,9967
instr_set_prev(350,10060

x86/optimize.c,5563
optimize_trace(131,5733
    uint loads_removed_from_loads;219,8105
    uint loads_removed_from_stores;220,8140
    uint ctis_in_load_removal;221,8176
    int reg_overwritten;222,8207
    int val_saved_in_dead_reg;223,8232
    uint loads_examined;224,8263
    int incs_examined;226,8307
    int incs_replaced;227,8330
    int loops_unrolled;229,8373
    int vals_spilled_to_xmm;231,8414
    int loads_replaced_by_xmm;232,8443
    int xmm_saves_to_mem;233,8474
    int stores_replaced_by_xmm;234,8500
    int xmm_restored_from_memory;235,8532
    int xmm_mov_to_dead_reg;236,8566
    int loadstore_combos_replaced_by_xmm;237,8595
    int xmm_traces;238,8637
    int mmx_traces;239,8657
    int num_instrs_simplified;241,8708
    int num_fail_simplified;242,8739
    int num_opnds_simplified;243,8768
    int num_const_add_const_mem;244,8798
    int num_jmps_simplified;245,8831
    int num_jecxz_instrs_removed;246,8860
    int dead_loads_removed;248,8922
    int xors_removed;250,8990
    int num_stack_adjust_removed;252,9049
    int pre_num_instrs_seen;254,9106
    int pre_num_jmps_seen;255,9135
    int post_num_instrs_seen;256,9162
    int post_num_jmps_seen;257,9192
    int num_returns_removed;259,9251
    int num_return_instrs_removed;260,9280
    bool i64_test;262,9335
    int ia64_num_entries;263,9354
} opt_stats_t;265,9387
print_optimization_stats(271,9562
generate_antialias_check(363,14121
#define MAX_INDUCTION_VARS 388,15186
#define MAX_LCDS 389,15215
#define MAX_INVARIANTS 390,15235
identify_for_loop(393,15274
unroll_loops(824,32491
static bool have_done 1074,41765
static bool checked 1075,41796
static int test1;1076,41825
static int test2;1077,41843
static int test3;1078,41861
test_i64(1081,41893
instr_counts(1219,47613
#define PS_VALID_VAL 1248,48565
#define PS_LVALID_VAL 1249,48597
#define PS_HVALID_VAL 1250,48674
#define PS_KEEP 1251,48706
#define NUM_CONSTANT_ADDRESS 1253,48739
#define NUM_STACK_SLOTS 1254,48772
static int cp_global_aggr;1257,48803
static int cp_local_aggr;1258,48830
typedef struct _prop_state_t 1261,48906
    dcontext_t *dcontext;dcontext1262,48937
    instrlist_t *trace;trace1263,48963
    instr_t *hint;hint1264,48987
    byte reg_state[reg_state1265,49006
    int reg_vals[reg_vals1266,49029
    int addresses[addresses1268,49077
    int address_vals[address_vals1269,49118
    byte address_state[address_state1270,49162
    int cur_scope;1273,49225
    int stack_offsets_ebp[stack_offsets_ebp1275,49245
    int stack_vals[stack_vals1276,49289
    int stack_scope[stack_scope1278,49327
    byte stack_address_state[stack_address_state1279,49365
    bool lost_scope_count;1281,49454
} prop_state_t;1282,49481
set_stack_val(1286,49513
update_stack_val(1316,50511
check_stack_val(1340,51253
clear_stack_val(1359,51767
set_address_val(1378,52377
update_address_val(1407,53367
clear_address_val(1430,54052
get_immutable_value(1450,54608
opnd_is_stack_address(1497,56011
const_address_const_mem(1507,56314
propagate_address(1542,57530
propagate_opnd(1606,59400
check_flag_val(1723,63806
compare_flag_vals(1737,64271
removable_jmp(1754,64814
do_forward_check_eflags(1835,67852
forward_check_eflags(1967,74233
make_imm_store(1973,74433
make_to_imm_store(1980,74677
make_to_nop(2018,76438
calculate_zf_pf_sf(2037,77065
prop_simplify(2060,77720
get_trace_constant(2470,96102
update_prop_state(2483,96824
typedef struct _two_entry_list_element_t 2628,104273
    int disp;2629,104316
    int scope;2630,104330
    struct _two_entry_list_element_t * next;2631,104345
} two_entry_list_element_t;2632,104390
typedef struct _start_list_element_t 2634,104419
    int endscope;2635,104458
    two_entry_list_element_t * next;2636,104476
} start_list_element_t;2637,104513
handle_stack(2645,104754
constant_propagation(2715,107856
remove_unnecessary_zeroing(2864,112981
#define NUM_ADD_CACHE 2922,115125
#define ADD_KEEP 2923,115151
#define ADD_DEAD 2924,115173
static int dc_global_aggr;2926,115196
static int dc_local_aggr;2927,115223
add_address(2930,115262
address_is_dead(2951,115851
address_set_dead(2961,116100
add_init(2980,116565
add_stack_address(2993,117295
stack_address_is_dead(3017,117984
stack_address_set_dead(3029,118306
remove_dead_code(3044,118715
is_stack_adjustment(3285,129770
get_stack_adjustment(3304,130545
set_stack_adjustment(3318,130931
stack_adjust_combiner(3337,131446
check_eflags_cr(3478,138342
remove_return_no_save_eflags(3497,138902
remove_return(3585,141842
is_return(3704,146183
check_return(3751,147774
#define CALL_RETURN_STACK_SIZE 3778,148686
call_return_matching(3783,148838
peephole_optimize(3848,151450
replace_inc_with_add(3894,153309
#define MAX_DIST 3981,156793
remove_redundant_loads(3983,156820
find_dead_register_across_instrs(4235,167924
find_dead_register_across_instrs_H(4255,168386
#define MIN_PREFETCH_DISTANCE 4302,169553
prefetch_optimize_trace(4305,169598
is_store_to_ecxoff(4404,173318
is_load_from_ecxoff(4413,173667
opnd_is_constant_address(4423,174080
is_zeroing_instr(4430,174285
is_dead_register(4440,174557
find_dead_register(4462,175160
is_dead_reg(4477,175565
replace_inst(4500,176204
remove_inst(4509,176440
instruction_affects_mem_access(4517,176669
safe_write(4533,177126
instr_get_src_mem_access(4550,177532
find_next_self_loop(4567,177861
replace_self_loop_with_instr(4586,178249
get_decision_instr(4618,179458
propagate_down(4637,179883
check_down(4654,180311
is_nop(4667,180865

x86/x86_to_x64.c,582
static const reg_id_t pushad_registers[pushad_registers49,2182
pre(54,2418
replace(62,2672
opnd_change_base_reg_to_64(71,2929
instr_is_string_operation(111,4436
instr_change_base_reg_to_64(130,5016
translate_indirect_jump(158,6090
translate_indirect_call(178,6817
translate_push(201,7742
translate_push_imm(275,11101
translate_pop(322,12855
translate_pusha(384,15525
translate_popa(425,17326
translate_into(466,19252
translate_load_far_pointer(480,19732
translate_leave(512,21113
translate_pushf(534,22008
translate_popf(562,23239
translate_x86_to_x64(582,24041

x86/loadtoconst.h,547
#define __LOADTOCONST_H_38,1851
#define NUM_VALUES_FOR_SPECULATION 40,1877
#define SAMPLE_PERCENT 41,1915
#define MAX_TRACES_WAITING_FOR_LTC 44,1947
struct ltc_mem_ref_data{ltc_mem_ref_data47,2005
    opnd_t opnd;48,2030
    int vals[vals49,2047
    int addresses[addresses50,2089
struct ltc_data{ltc_data52,2139
    struct ltc_mem_ref_data *mem_refs;mem_refs53,2156
    int num_mem_addresses;54,2195
    int num_mem_samples;55,2222
    bool ltc_already_optimized;56,2247
#define TRANSPOSE 95,4140
#define NO_TRANSPOSE 96,4163

x86/decode_fast.h,30
#define DECODE_FAST_H40,1904

x86/decode.h,7600
#define DECODE_H41,1961
#define PREFIX_LOCK 61,2645
#define PREFIX_JCC_NOT_TAKEN 62,2735
#define PREFIX_JCC_TAKEN 63,2819
#define PREFIX_DATA 72,3155
#define PREFIX_ADDR 73,3192
#define PREFIX_REX_W 74,3229
#define PREFIX_REX_R 75,3266
#define PREFIX_REX_X 76,3303
#define PREFIX_REX_B 77,3340
#define PREFIX_REX_GENERAL 78,3377
#define PREFIX_REX_ALL 79,3463
#define PREFIX_SIZE_SPECIFIERS 81,3599
#define PREFIX_REP 84,3749
#define PREFIX_REPNE 85,3786
#define PREFIX_SEG_FS 92,4050
#define PREFIX_SEG_GS 93,4087
#define PREFIX_VEX_2B 98,4245
#define PREFIX_VEX_3B 99,4282
#define PREFIX_VEX_L 100,4319
#define PREFIX_SIGNIFICANT 105,4511
#define SEG_JCC_NOT_TAKEN 108,4635
#define SEG_JCC_TAKEN 109,4672
    OPCODE_TWOBYTES 122,5194
    OPCODE_TWOBYTES = 0x00000010,x00000010122,5194
    OPCODE_REG 123,5228
    OPCODE_REG      = 0x00000020,x00000020123,5228
    OPCODE_MODRM 124,5262
    OPCODE_MODRM    = 0x00000040,x00000040124,5262
    OPCODE_SUFFIX 125,5296
    OPCODE_SUFFIX   = 0x00000080,x00000080125,5296
    OPCODE_THREEBYTES=126,5330
    OPCODE_THREEBYTES=0x00000008,x00000008126,5330
typedef struct instr_info_t 166,7046
    int type;167,7076
    uint opcode;192,8726
    const char *name;name193,8743
    byte dst1_type;197,8852
    byte dst1_type;  opnd_size_t dst1_size;197,8852
    byte dst2_type;198,8896
    byte dst2_type;  opnd_size_t dst2_size;198,8896
    byte src1_type;199,8940
    byte src1_type;  opnd_size_t src1_size;199,8940
    byte src2_type;200,8984
    byte src2_type;  opnd_size_t src2_size;200,8984
    byte src3_type;201,9028
    byte src3_type;  opnd_size_t src3_size;201,9028
    byte flags;202,9072
    uint eflags;203,9124
    ptr_int_t code;204,9194
} instr_info_t;209,9508
    INVALID 217,9684
    INVALID = OP_LAST 217,9684
    PREFIX,219,9733
    ESCAPE,221,9783
    FLOAT_EXT,223,9844
    EXTENSION,225,9909
    PREFIX_EXT,227,10003
    REP_EXT,229,10077
    REPNE_EXT,231,10150
    MOD_EXT,233,10226
    RM_EXT,235,10299
    SUFFIX_EXT,237,10384
    X64_EXT,239,10472
    ESCAPE_3BYTE_38,241,10547
    ESCAPE_3BYTE_3a,243,10620
    REX_B_EXT,245,10703
    REX_W_EXT,247,10780
    VEX_PREFIX_EXT,249,10866
    VEX_EXT,251,10948
    VEX_L_EXT,253,11033
    VEX_W_EXT,255,11096
#define HAS_MODRM 260,11212
#define HAS_EXTRA_OPERANDS 261,11270
#define EXTRAS_IN_CODE_FIELD 263,11369
#define X86_INVALID 267,11603
#define X64_INVALID 268,11638
#define REQUIRES_PREFIX 270,11747
#define REQUIRES_VEX 274,11905
#define REQUIRES_REX 279,12110
typedef struct decode_info_t 286,12360
    uint prefixes;293,12704
    byte seg_override;294,12723
    byte modrm;296,12807
    byte mod;297,12823
    byte reg;298,12837
    byte rm;299,12851
    bool has_sib;300,12864
    byte scale;301,12882
    byte index;302,12898
    byte base;303,12914
    bool has_disp;304,12929
    int disp;305,12948
    opnd_size_t size_immed;307,12983
    opnd_size_t size_immed2;308,13011
    bool immed_pc_relativize:immed_pc_relativize309,13040
    bool immed_subtract_length:immed_subtract_length310,13072
    bool immed_pc_rel_offs:immed_pc_rel_offs311,13106
    ushort immed_shift;312,13136
    ptr_int_t immed;313,13160
    ptr_int_t immed2;314,13181
    byte *start_pc;start_pc316,13338
    byte *final_pc;final_pc317,13358
    uint len;318,13378
    byte *disp_abs;disp_abs322,13526
    bool x86_mode;329,13830
    byte *orig_pc;orig_pc332,13919
    bool data_prefix;334,13987
    bool rep_prefix;335,14009
    bool repne_prefix;336,14030
    byte vex_vvvv;337,14053
    bool vex_encoded;338,14106
    ptr_int_t cur_note;340,14167
    bool has_instr_opnds;341,14191
} decode_info_t;342,14217
    TYPE_NONE,352,14421
    TYPE_A,353,14436
    TYPE_C,354,14489
    TYPE_D,355,14540
    TYPE_E,356,14589
    TYPE_G,358,14704
    TYPE_H,359,14752
    TYPE_I,360,14810
    TYPE_J,361,14838
    TYPE_L,362,14897
    TYPE_M,363,14965
    TYPE_O,364,15005
    TYPE_P,365,15055
    TYPE_Q,366,15098
    TYPE_R,367,15146
    TYPE_S,368,15187
    TYPE_V,369,15243
    TYPE_W,370,15286
    TYPE_X,371,15334
    TYPE_Y,372,15365
    TYPE_P_MODRM,373,15397
    TYPE_V_MODRM,374,15454
    TYPE_1,375,15511
    TYPE_FLOATCONST,376,15523
    TYPE_XLAT,377,15544
    TYPE_MASKMOVQ,378,15585
    TYPE_FLOATMEM,379,15623
    TYPE_REG,380,15642
    TYPE_VAR_REG,381,15685
    TYPE_VARZ_REG,384,15884
    TYPE_VAR_XREG,387,16066
    TYPE_VAR_ADDR_XREG,390,16273
    TYPE_REG_EX,397,16752
    TYPE_VAR_REG_EX,398,16839
    TYPE_VAR_XREG_EX,400,16984
    TYPE_VAR_REGX_EX,402,17113
    TYPE_INDIR_E,405,17301
    TYPE_INDIR_REG,406,17319
    TYPE_INDIR_VAR_XREG,407,17339
    TYPE_INDIR_VAR_REG,410,17560
    TYPE_INDIR_VAR_XIREG,413,17766
    TYPE_INDIR_VAR_XREG_OFFS_1,416,18009
    TYPE_INDIR_VAR_XREG_OFFS_8,418,18134
    TYPE_INDIR_VAR_XREG_OFFS_N,420,18287
    TYPE_INDIR_VAR_XIREG_OFFS_1,423,18508
    TYPE_INDIR_VAR_REG_OFFS_2,425,18636
    TYPE_INDIR_VAR_XREG_SIZEx8,431,19015
    TYPE_INDIR_VAR_REG_SIZEx2,433,19146
    TYPE_INDIR_VAR_REG_SIZEx3x5,435,19276
    OPSZ_NA 477,21573
    OPSZ_NA = DR_REG_INVALID+DR_REG_INVALID477,21573
    OPSZ_FIRST 478,21659
    OPSZ_FIRST = OPSZ_NA,478,21659
    OPSZ_0,479,21685
    OPSZ_1,481,21832
    OPSZ_2,482,21871
    OPSZ_4,483,21911
    OPSZ_6,484,21956
    OPSZ_8,485,22000
    OPSZ_10,486,22045
    OPSZ_16,488,22184
    OPSZ_14,489,22246
    OPSZ_28,490,22332
    OPSZ_94,491,22419
    OPSZ_108,492,22489
    OPSZ_512,493,22560
    OPSZ_2_short1,506,23412
    OPSZ_4_short2,509,23660
    OPSZ_4_rex8_short2,510,23708
    OPSZ_4_rex8,511,23763
    OPSZ_6_irex10_short4,512,23832
    OPSZ_8_short2,515,24094
    OPSZ_8_short4,516,24151
    OPSZ_28_short14,517,24214
    OPSZ_108_short94,518,24298
    OPSZ_4x8,520,24437
    OPSZ_6x10,522,24571
    OPSZ_4x8_short2,527,24797
    OPSZ_4x8_short2xi8,534,25234
    OPSZ_4_short2xi4,536,25380
    OPSZ_1_reg4,542,25631
    OPSZ_2_reg4,543,25706
    OPSZ_4_reg16,544,25781
    OPSZ_xsave,547,25943
    OPSZ_12,549,26087
    OPSZ_32,550,26133
    OPSZ_40,552,26248
    OPSZ_32_short16,553,26294
    OPSZ_8_rex16,554,26350
    OPSZ_8_rex16_short4,555,26405
    OPSZ_12_rex40_short6,556,26468
    OPSZ_16_vex32,557,26518
    OPSZ_LAST,559,26654
# define OPSZ_PTR 563,26684
# define OPSZ_STACK 564,26756
# define OPSZ_PTR 566,26848
# define OPSZ_STACK 567,26920
#define OPSZ_VARSTACK 569,27013
#define OPSZ_REXVARSTACK 571,27162
#define OPSZ_ret 574,27331
#define OPSZ_call 575,27409
#define OPSZ_lea 578,27539
#define OPSZ_invlpg 579,27623
#define OPSZ_xlat 580,27710
#define OPSZ_clflush 581,27795
#define OPSZ_prefetch 582,27883
#define OPSZ_lgdt 583,27973
#define OPSZ_sgdt 584,28058
#define OPSZ_lidt 585,28143
#define OPSZ_sidt 586,28228
#define OPSZ_bound 587,28313
#define OPSZ_maskmovq 588,28399
#define OPSZ_maskmovdqu 589,28488
#define OPSZ_fldenv 590,28579
#define OPSZ_fnstenv 591,28666
#define OPSZ_fnsave 592,28754
#define OPSZ_frstor 593,28841
#define OPSZ_fxsave 594,28928
#define OPSZ_fxrstor 595,29015
    OPSZ_4_of_8 602,29236
    OPSZ_4_of_8 = OPSZ_LAST,602,29236
    OPSZ_4_of_16,603,29313
    OPSZ_8_of_16,604,29378
    OPSZ_8_of_16_vex32,605,29443
    OPSZ_16_of_32,608,29609
    OPSZ_LAST_ENUM,609,29656
# define OPSZ_STATS 613,29724
# define OPSZ_STATS 615,29757
#define MODRM_BYTE(618,29792
#define DEFAULT_X86_MODE 647,31159
#define X64_MODE(649,31233
#define X64_MODE_DC(651,31311
#define X64_CACHE_MODE_DC(655,31528

x86/disassemble.h,469
#define DISASSEMBLE_H41,1966
#define MAX_OPND_DIS_SZ 46,2089
#define MAX_INSTR_DIS_SZ 50,2229
#define MAX_PC_DIS_SZ 54,2447
    DR_DISASM_DR 67,2779
    DR_DISASM_DR             =  0x0,x067,2779
    DR_DISASM_INTEL 73,3016
    DR_DISASM_INTEL          =  0x1,x173,3016
    DR_DISASM_ATT 79,3250
    DR_DISASM_ATT            =  0x2,x279,3250
    DR_DISASM_STRICT_INVALID 88,3709
    DR_DISASM_STRICT_INVALID =  0x4,x488,3709
} dr_disasm_flags_t;89,3746

x86/arch.c,5814
generated_code_t *shared_code shared_code69,2528
generated_code_t *shared_code_x86 shared_code_x8675,2788
generated_code_t *shared_code_x86_to_x64 shared_code_x86_to_x6479,2959
static int syscall_method 82,3016
byte *app_sysenter_instr_addr app_sysenter_instr_addr83,3074
static bool sysenter_hook_failed 85,3124
reg_spill_tls_offs(102,3677
dump_emitted_routines(117,4113
dump_emitted_routines_to_file(207,7690
code_align_forward(226,8325
move_to_start_of_cache_line(236,8531
#define GENCODE_RESERVE_SIZE 246,8922
#define GENCODE_COMMIT_SIZE 248,8966
check_size_and_cache_line(252,9090
release_final_page(267,9663
shared_gencode_init(288,10585
far_ibl_set_targets(514,20037
arch_init(538,21042
arch_extract_profile(640,25459
arch_profile_exit(728,29464
arch_exit(739,29742
emit_ibl_routine_and_template(762,30505
emit_ibl_routines(802,32180
emit_syscall_routines(862,35243
arch_thread_init(966,40382
arch_thread_profile_exit(1165,48794
arch_thread_exit(1172,48925
arch_patch_syscall_common(1205,50023
arch_patch_syscall(1217,50634
update_generated_hashtable_access(1228,51018
protect_generated_code(1234,51129
get_source_fragment_type(1260,52086
is_shared_syscall_routine(1274,52565
is_indirect_branch_lookup_routine(1296,53564
get_trace_ibl_routine(1309,54005
get_private_ibl_routine(1334,54861
get_shared_ibl_routine(1352,55451
get_alternate_ibl_routine(1369,55995
get_unlinked_type(1392,56894
get_linked_type(1405,57178
get_linked_entry(1418,57443
get_trace_cmp_entry(1443,58459
get_unlinked_entry(1456,58940
in_generated_shared_routine(1474,59665
in_generated_routine(1491,60346
in_context_switch_code(1502,60677
in_indirect_branch_lookup_code(1512,61060
fcache_enter_routine(1533,61853
get_fcache_enter_private_routine(1541,62085
get_reset_exit_stub(1547,62197
get_do_syscall_entry(1554,62353
get_fcache_enter_indirect_routine(1562,62531
get_do_callback_return_entry(1568,62743
get_do_int_syscall_entry(1576,62994
get_do_clone_syscall_entry(1583,63154
get_do_vmkuw_syscall_entry(1590,63338
fcache_return_routine(1599,63517
fcache_return_routine_ex(1606,63673
fcache_return_coarse_routine(1613,63886
trace_head_return_coarse_routine(1624,64196
get_clean_call_save(1635,64514
get_clean_call_restore(1647,64893
get_client_ibl_xfer_entry(1660,65302
get_ibl_routine_type_ex(1678,65885
get_ibl_routine_type(1775,69726
get_ibl_routine_template_type(1785,70106
get_branch_type_name(1825,71458
get_ibl_branch_type(1833,71683
get_ibl_routine_name(1852,72150
get_ibl_routine_code_internal(1947,77554
get_ibl_routine_ex(1990,79203
get_ibl_routine(2023,80345
get_ibl_routine_template(2032,80694
table_flags_to_frag_flags(2050,81455
get_target_delete_entry_pc(2078,82771
get_ibl_routine_code_ex(2105,83952
get_ibl_routine_code(2119,84450
shared_syscall_routine_ex(2140,85414
shared_syscall_routine(2152,85795
unlinked_shared_syscall_routine_ex(2158,85933
unlinked_shared_syscall_routine(2170,86332
after_shared_syscall_code(2176,86488
after_shared_syscall_code_ex(2182,86633
after_shared_syscall_addr(2190,86913
after_do_syscall_code(2204,87360
after_do_syscall_code_ex(2210,87497
after_do_syscall_addr(2218,87759
after_do_shared_syscall_addr(2229,88105
is_after_main_do_syscall_addr(2241,88609
is_after_do_syscall_addr(2250,88936
is_after_syscall_address(2263,89487
is_after_syscall_that_rets(2283,90102
get_new_thread_start(2303,90911
trace_head_incr_routine(2318,91324
get_pextrw_entry(2327,91522
get_pinsrw_entry(2334,91666
get_fcache_enter_shared_routine(2343,91856
fcache_enter_shared_routine(2349,91985
fcache_return_shared_routine(2357,92203
trace_head_incr_shared_routine(2369,92517
get_fcache_target(2382,92871
set_fcache_target(2393,93191
typedef struct _translate_walk_t 2419,94337
    priv_mcontext_t *mc;mc2421,94412
    byte *start_cache;start_cache2423,94494
    byte *end_cache;end_cache2424,94517
    bool reg_spilled[reg_spilled2428,94664
    bool reg_tls[reg_tls2429,94701
    int xsp_adjust;2434,94937
    bool unsupported_mangle;2436,95029
    bool in_mangle_region;2438,95104
    app_pc translation;2440,95201
} translate_walk_t;2441,95225
translate_walk_init(2444,95258
instr_check_xsp_mangling(2454,95528
instr_is_trace_cmp(2526,99121
instr_is_inline_syscall_jmp(2554,99990
instr_is_seg_ref_load(2566,100387
translate_walk_track(2589,101243
translate_walk_good_state(2745,108826
translate_walk_restore(2754,109154
translate_restore_clean_call(2810,111388
recreate_app_state_from_info(2834,112386
recreate_app_state_from_ilist(2969,118250
recreate_selfmod_ilist(3189,128796
recreate_app_state_internal(3235,131010
recreate_app_pc(3537,145635
recreate_app_state(3614,149143
translation_info_alloc_size(3657,150482
translation_info_alloc(3664,150721
translation_info_free(3676,151072
set_translation(3683,151284
translation_info_print(3708,152299
record_translation_info(3735,153486
#   define NUM_INITIAL_TRANSLATIONS 3776,155168
stress_test_recreate_state(3922,161720
get_global_do_syscall_entry(4027,166270
get_cleanup_and_terminate_global_do_syscall_entry(4077,167688
#define VSYS_DISPLACED_LEN 4142,170602
hook_vsyscall(4145,170644
#define CHECK(4170,171431
#undef CHECK4242,174421
unhook_vsyscall(4246,174442
check_syscall_method(4274,175336
get_syscall_method(4426,183067
does_syscall_ret_to_callsite(4433,183203
set_syscall_method(4441,183422
should_syscall_method_be_sysenter(4453,183788
get_app_sysenter_addr(4462,184032
copy_mcontext(4470,184261
dr_mcontext_to_priv_mcontext(4477,184380
priv_mcontext_to_dr_mcontext(4506,185347
dr_mcontext_as_priv_mcontext(4535,186327
dr_mcontext_init(4546,186696
dump_mcontext(4554,186831
__inline__ uint64 get_time(4623,189565
uint64 get_time(4630,189700
is_ibl_routine_type(4640,189823

x86/proc.h,3786
#define _PROC_H_ 43,2003
#define PAGE_SIZE 56,2371
#define PAGE_START(59,2502
    VENDOR_INTEL,63,2619
    VENDOR_AMD,64,2697
    VENDOR_UNKNOWN,65,2773
#define FAMILY_IA64 90,3952
#define FAMILY_LLANO 94,4086
#define FAMILY_ITANIUM_2_DC 95,4171
#define FAMILY_K8_MOBILE 96,4259
#define FAMILY_ITANIUM_2 97,4348
#define FAMILY_K8L 98,4433
#define FAMILY_K8 99,4516
#define FAMILY_PENTIUM_4 100,4598
#define FAMILY_P4 101,4683
#define FAMILY_ITANIUM 102,4768
#define FAMILY_P6 104,4928
#define FAMILY_IVYBRIDGE 105,5013
#define FAMILY_SANDYBRIDGE 106,5098
#define FAMILY_NEHALEM 107,5185
#define FAMILY_CORE_I7 108,5268
#define FAMILY_CORE_2 109,5351
#define FAMILY_CORE 110,5433
#define FAMILY_PENTIUM_M 111,5513
#define FAMILY_PENTIUM_3 112,5598
#define FAMILY_PENTIUM_2 113,5683
#define FAMILY_PENTIUM_PRO 114,5768
#define FAMILY_ATHLON 115,5855
#define FAMILY_K7 116,5937
#define FAMILY_P5 118,6039
#define FAMILY_PENTIUM 119,6124
#define FAMILY_K6 120,6207
#define FAMILY_K5 121,6285
#define FAMILY_486 123,6373
#define MODEL_IVYBRIDGE 128,6573
#define MODEL_I7_WESTMERE_EX 129,6642
#define MODEL_SANDYBRIDGE_E 130,6721
#define MODEL_I7_WESTMERE 131,6804
#define MODEL_SANDYBRIDGE 132,6872
#define MODEL_I7_CLARKDALE 133,6943
#define MODEL_I7_HAVENDALE 134,7031
#define MODEL_I7_CLARKSFIELD 135,7119
#define MODEL_ATOM_CEDARVIEW 136,7208
#define MODEL_ATOM_LINCROFT 137,7282
#define MODEL_ATOM 138,7355
#define MODEL_I7_GAINESTOWN 139,7419
#define MODEL_CORE_PENRYN 140,7497
#define MODEL_CORE_2 141,7570
#define MODEL_CORE 142,7649
#define MODEL_PENTIUM_M 143,7719
#define MODEL_PENTIUM_M_1MB 144,7795
    uint flags_edx;151,8002
    uint flags_ecx;152,8070
    uint ext_flags_edx;153,8138
    uint ext_flags_ecx;154,8215
} features_t;155,8292
    FEATURE_FPU 163,8514
    FEATURE_VME 164,8590
    FEATURE_DE 165,8661
    FEATURE_PSE 166,8729
    FEATURE_TSC 167,8797
    FEATURE_MSR 168,8864
    FEATURE_PAE 169,8937
    FEATURE_MCE 170,9012
    FEATURE_CX8 171,9084
    FEATURE_APIC 172,9163
    FEATURE_SEP 173,9243
    FEATURE_MTRR 174,9308
    FEATURE_PGE 175,9384
    FEATURE_MCA 176,9451
    FEATURE_CMOV 177,9526
    FEATURE_PAT 178,9603
    FEATURE_PSE_36 179,9672
    FEATURE_PSN 180,9747
    FEATURE_CLFSH 181,9832
    FEATURE_DS 182,9910
    FEATURE_ACPI 183,9970
    FEATURE_MMX 184,10050
    FEATURE_FXSR 185,10123
    FEATURE_SSE 186,10196
    FEATURE_SSE2 187,10269
    FEATURE_SS 188,10343
    FEATURE_HTT 189,10402
    FEATURE_TM 190,10477
    FEATURE_IA64 191,10551
    FEATURE_PBE 192,10617
    FEATURE_SSE3 194,10721
    FEATURE_PCLMULQDQ 195,10795
    FEATURE_MONITOR 196,10866
    FEATURE_DS_CPL 197,10951
    FEATURE_VMX 198,11025
    FEATURE_EST 199,11100
    FEATURE_TM2 200,11178
    FEATURE_SSSE3 201,11244
    FEATURE_CID 202,11319
    FEATURE_FMA 203,11379
    FEATURE_CX16 204,11454
    FEATURE_xPTR 205,11535
    FEATURE_SSE41 206,11611
    FEATURE_SSE42 207,11687
    FEATURE_MOVBE 208,11763
    FEATURE_POPCNT 209,11830
    FEATURE_AES 210,11898
    FEATURE_XSAVE 211,11973
    FEATURE_OSXSAVE 212,12041
    FEATURE_AVX 213,12122
    FEATURE_SYSCALL 215,12241
    FEATURE_XD_Bit 216,12327
    FEATURE_EM64T 217,12397
    FEATURE_LAHF 219,12519
} feature_bit_t;220,12602
    CACHE_SIZE_8_KB,231,12903
    CACHE_SIZE_16_KB,232,12964
    CACHE_SIZE_32_KB,233,13026
    CACHE_SIZE_64_KB,234,13088
    CACHE_SIZE_128_KB,235,13150
    CACHE_SIZE_256_KB,236,13213
    CACHE_SIZE_512_KB,237,13276
    CACHE_SIZE_1_MB,238,13339
    CACHE_SIZE_2_MB,239,13400
    CACHE_SIZE_UNKNOWN 240,13461
} cache_size_t;241,13522
#define CACHE_LINE_SIZE(248,13632
#define XCR0_AVX 251,13713
#define XCR0_SSE 252,13732
#define XCR0_FP 253,13751

x86/arch_exports.h,11998
#define _ARCH_EXPORTS_H_ 45,2094
#define XSP_SZ 48,2145
#define XMM_REG_SIZE 57,2517
#define YMM_REG_SIZE 58,2542
#define XMM_SAVED_REG_SIZE 59,2567
#define XMM_SLOTS_SIZE 60,2651
#define XMM_SAVED_SIZE 61,2710
#define YMM_ENABLED(63,2850
#define YMMH_REG_SIZE 64,2941
#define YMMH_SAVED_SIZE 65,2997
#define CLEANCALL_NUM_INLINE_SLOTS 68,3111
    IBL_NONE 71,3164
    IBL_RETURN 73,3266
    IBL_BRANCH_TYPE_START 74,3341
    IBL_BRANCH_TYPE_START = IBL_RETURN,74,3341
    IBL_INDCALL,75,3381
    IBL_INDJMP,76,3398
    IBL_GENERIC 77,3414
    IBL_GENERIC           = IBL_INDJMP,77,3414
    IBL_SHARED_SYSCALL 80,3599
    IBL_SHARED_SYSCALL    = IBL_GENERIC,80,3599
    IBL_BRANCH_TYPE_END81,3640
} ibl_branch_type_t;82,3664
#define IBL_HASH_FUNC_OFFSET_MAX 84,3686
typedef struct _lookup_table_access_t 100,4405
    ptr_uint_t hash_mask;101,4445
    struct _fragment_entry_t *lookuptable;lookuptable102,4471
} lookup_table_access_t;103,4514
typedef struct _table_stat_state_t 105,4540
    lookup_table_access_t table[table116,5091
    uint stats;121,5329
} table_stat_state_t;123,5352
typedef struct _spill_state_t 129,5551
    reg_t xax,131,5656
    reg_t xax, xbx,131,5656
    reg_t xax, xbx, xcx,131,5656
    reg_t xax, xbx, xcx, xdx;131,5656
    dcontext_t *dcontext;dcontext133,5791
} spill_state_t;134,5817
typedef struct _local_state_t 136,5835
    spill_state_t spill_space;137,5867
} local_state_t;138,5898
typedef struct _local_state_extended_t 140,5916
    spill_state_t spill_space;141,5957
    table_stat_state_t table_space;142,5988
} local_state_extended_t;143,6024
#define TLS_XAX_SLOT 149,6277
#define TLS_XBX_SLOT 150,6349
#define TLS_XCX_SLOT 151,6421
#define TLS_XDX_SLOT 152,6493
#define TLS_DCONTEXT_SLOT 153,6565
#define TABLE_OFFSET 155,6643
#define TLS_MASK_SLOT(156,6724
#define TLS_TABLE_SLOT(159,6969
# define TLS_HTABLE_STATS_SLOT 164,7247
#define TLS_NUM_SLOTS 169,7493
# define DETACH_CALLBACK_CODE_SIZE 175,7724
# define DETACH_CALLBACK_FINAL_JMP_SIZE 176,7763
typedef struct _detach_callback_stack_t 180,7981
    thread_id_t tid;181,8023
    ptr_uint_t count;182,8061
    app_pc *callback_addrs;callback_addrs183,8137
    reg_t xax_save;184,8217
    reg_t xbx_save;185,8276
    reg_t xcx_save;186,8335
    app_pc target;187,8394
    byte code_buf[code_buf189,8509
} detach_callback_stack_t;190,8560
#define PAD_JMPS_ALIGNMENT 231,10826
# define CHECK_JMP_TARGET_ALIGNMENT(235,10997
# define CHECK_JMP_TARGET_ALIGNMENT(242,11407
# define ATOMIC_4BYTE_WRITE(248,11663
#  define ATOMIC_8BYTE_WRITE(255,12039
# define ATOMIC_INC_int(271,12920
#  define ATOMIC_INC_int64(273,13050
# define ATOMIC_INC(275,13142
# define ATOMIC_DEC_int(276,13196
#  define ATOMIC_DEC_int64(278,13326
# define ATOMIC_DEC(280,13418
# define ATOMIC_ADD_int(282,13539
#  define ATOMIC_ADD_int64(285,13691
# define ATOMIC_COMPARE_EXCHANGE_int(288,13805
# define ATOMIC_COMPARE_EXCHANGE_int64(290,13944
# define ATOMIC_COMPARE_EXCHANGE 292,14090
# define ATOMIC_ADD(293,14151
#  define ATOMIC_ADD_PTR(295,14227
#  define ATOMIC_COMPARE_EXCHANGE_PTR 296,14295
#  define ATOMIC_ADD_PTR(298,14370
#  define ATOMIC_COMPARE_EXCHANGE_PTR 299,14436
# define SPINLOCK_PAUSE(301,14510
# define RDTSC_LL(302,14583
# define SERIALIZE_INSTRUCTIONS(303,14624
# define GET_FRAME_PTR(310,14893
# define GET_STACK_PTR(311,14945
static inline bool atomic_inc_and_test(314,15041
static inline bool atomic_dec_and_test(318,15191
static inline bool atomic_dec_becomes_zero(322,15340
static inline bool atomic_compare_exchange_int(326,15496
static inline bool atomic_compare_exchange_int64(330,15718
static inline int atomic_add_exchange_int(336,16051
static inline int64 atomic_add_exchange_int64(340,16236
# define atomic_add_exchange 344,16385
# define ATOMIC_4BYTE_WRITE(347,16456
#  define ATOMIC_8BYTE_WRITE(354,16853
# define ATOMIC_INC_suffix(363,17382
# define ATOMIC_INC_int(365,17500
# define ATOMIC_INC_int64(366,17557
# define ATOMIC_INC(367,17616
# define ATOMIC_DEC_suffix(368,17670
# define ATOMIC_DEC_int(370,17788
# define ATOMIC_DEC_int64(371,17845
# define ATOMIC_DEC(372,17904
# define ATOMIC_ADD_suffix(377,18099
# define ATOMIC_ADD_int(380,18293
# define ATOMIC_ADD_int64(381,18360
# define ATOMIC_ADD(382,18429
#  define ATOMIC_ADD_PTR(384,18505
#  define ATOMIC_ADD_PTR(386,18580
# define ATOMIC_ADD_EXCHANGE_suffix(389,18732
# define ATOMIC_ADD_EXCHANGE_int(392,18943
# define ATOMIC_ADD_EXCHANGE_int64(394,19044
# define ATOMIC_COMPARE_EXCHANGE_suffix(396,19147
# define ATOMIC_COMPARE_EXCHANGE_int(401,19456
# define ATOMIC_COMPARE_EXCHANGE_int64(403,19583
# define ATOMIC_COMPARE_EXCHANGE 405,19712
#  define ATOMIC_COMPARE_EXCHANGE_PTR 407,19785
#  define ATOMIC_COMPARE_EXCHANGE_PTR 409,19860
# define ATOMIC_EXCHANGE(411,19930
# define SPINLOCK_PAUSE(416,20136
# define RDTSC_LL(417,20194
# define SERIALIZE_INSTRUCTIONS(420,20323
# define GET_FRAME_PTR(423,20537
# define GET_STACK_PTR(424,20621
# define SET_FLAG(426,20706
# define SET_IF_NOT_ZERO(427,20786
# define SET_IF_NOT_LESS(428,20836
static inline bool atomic_inc_and_test(433,20999
static inline bool atomic_dec_and_test(448,21481
static inline bool atomic_dec_becomes_zero(463,21969
static inline bool atomic_compare_exchange_int(479,22457
atomic_exchange_int(494,23047
static inline bool atomic_compare_exchange_int64(505,23300
static inline int atomic_add_exchange_int(521,23956
static inline int64 atomic_add_exchange_int64(527,24120
# define atomic_add_exchange 533,24296
# undef ATOMIC_ADD_EXCHANGE_suffix534,24349
# undef ATOMIC_ADD_EXCHANGE_int535,24384
# undef ATOMIC_ADD_EXCHANGE_int64536,24416
#define atomic_compare_exchange 541,24471
# define atomic_compare_exchange_ptr(543,24542
# define ATOMIC_ADDR_WRITE 545,24672
# define atomic_compare_exchange_ptr(547,24724
# define ATOMIC_ADDR_WRITE 549,24846
#define ATOMIC_MAX_int(552,24900
# define ATOMIC_MAX_int64(567,25774
#define ATOMIC_MAX(582,26608
#define DEBUGGER_INTERRUPT_BYTE 584,26690
    TRANSLATE_IDENTICAL 633,28382
    TRANSLATE_IDENTICAL      = 0x0001,x0001633,28382
    TRANSLATE_OUR_MANGLING 634,28448
    TRANSLATE_OUR_MANGLING   = 0x0002,x0002634,28448
typedef struct _translation_entry_t 641,28775
    ushort cache_offs;643,28853
    ushort flags;645,28903
    app_pc app;646,28921
} translation_entry_t;647,28937
typedef struct _translation_info_t 657,29427
    uint num_entries;658,29464
    translation_entry_t translation[translation660,29529
} translation_info_t;661,29590
#define IS_SHARED_SYSCALL_THREAD_SHARED 664,29673
    RECREATE_FAILURE,670,29887
    RECREATE_SUCCESS_PC,671,29909
    RECREATE_SUCCESS_STATE,672,29934
} recreate_success_t;673,29962
typedef linkstub_t * (* fcache_enter_func_t)710,31754
    SYSCALL_METHOD_UNINITIALIZED,772,34638
    SYSCALL_METHOD_INT,773,34672
    SYSCALL_METHOD_SYSENTER,774,34696
    SYSCALL_METHOD_SYSCALL,775,34725
    SYSCALL_METHOD_WOW64,777,34768
enum { SYSCALL_METHOD_LONGEST_INSTR 781,34816
enum { BACK_FROM_NATIVE_RETSTUB_SIZE 848,37671
#define DYNAMO_START_XSP_ADJUST 869,38360
    CALLSTACK_USE_XML 893,39081
    CALLSTACK_USE_XML         = 0x00000001,x00000001893,39081
    CALLSTACK_ADD_HEADER 894,39125
    CALLSTACK_ADD_HEADER      = 0x00000002,x00000002894,39125
    CALLSTACK_MODULE_INFO 895,39169
    CALLSTACK_MODULE_INFO     = 0x00000004,x00000004895,39169
    CALLSTACK_MODULE_PATH 896,39213
    CALLSTACK_MODULE_PATH     = 0x00000008,x00000008896,39213
    CALLSTACK_FRAME_PTR 897,39257
    CALLSTACK_FRAME_PTR       = 0x00000010,x00000010897,39257
use_addr_prefix_on_short_disp(921,40057
#define SIZE64_MOV_XAX_TO_TLS 963,41794
#define SIZE64_MOV_XBX_TO_TLS 964,41834
#define SIZE64_MOV_PTR_IMM_TO_XAX 965,41874
#define SIZE64_MOV_PTR_IMM_TO_TLS 966,41914
#define SIZE64_MOV_R8_TO_XAX 967,41995
#define SIZE64_MOV_R9_TO_XCX 968,42035
#define SIZE32_MOV_XAX_TO_TLS 969,42075
#define SIZE32_MOV_XBX_TO_TLS 970,42115
#define SIZE32_MOV_XAX_TO_TLS_DISP32 971,42155
#define SIZE32_MOV_XBX_TO_TLS_DISP32 972,42195
#define SIZE32_MOV_XAX_TO_ABS 973,42235
#define SIZE32_MOV_XBX_TO_ABS 974,42275
#define SIZE32_MOV_PTR_IMM_TO_XAX 975,42315
#define SIZE32_MOV_PTR_IMM_TO_TLS 976,42355
# define FRAG_IS_32(979,42407
# define FRAG_IS_X86_TO_X64(980,42463
# define FRAG_IS_32(982,42537
# define FRAG_IS_X86_TO_X64(983,42569
#define SIZE_MOV_XAX_TO_TLS(986,42618
#define SIZE_MOV_XBX_TO_TLS(991,42855
#define SIZE_MOV_PTR_IMM_TO_XAX(996,43092
#define XCX_IN_TLS(1000,43247
#define FRAGMENT_BASE_PREFIX_SIZE(1001,43338
#define DIRECT_EXIT_STUB_SIZE32 1013,43866
#define DIRECT_EXIT_STUB_SIZE64 1015,43974
#define DIRECT_EXIT_STUB_SIZE(1017,44082
#define STUB_COARSE_DIRECT_SIZE32 1030,44723
#define STUB_COARSE_DIRECT_SIZE64 1031,44804
#define STUB_COARSE_DIRECT_SIZE(1032,44885
#define SET_TO_NOPS(1036,45048
#define SET_TO_DEBUG(1038,45153
#define IS_SET_TO_NOP(1040,45247
#define IS_SET_TO_DEBUG(1042,45362
#define CTI_PATCH_OFFSET 1045,45501
#define CTI_PATCH_SIZE 1047,45561
#define EXIT_STUB_PATCH_OFFSET 1050,45647
#define EXIT_STUB_PATCH_SIZE 1052,45714
#define MAX_PAD_SIZE 1055,45822
#define WITHIN_PAD_REGION(1058,45915
#define STATS_PAD_JMPS_ADD(1061,46002
    NOT_HOT_PATCHABLE=1133,48635
    NOT_HOT_PATCHABLE=false,1133,48635
    HOT_PATCHABLE=1134,48664
    HOT_PATCHABLE=true1134,48664
    MAX_INSTR_LENGTH 1213,51191
    CBR_LONG_LENGTH 1217,51309
    JMP_LONG_LENGTH 1218,51335
    JMP_SHORT_LENGTH 1219,51361
    CBR_SHORT_REWRITE_LENGTH 1220,51387
    RET_0_LENGTH 1221,51455
    PUSH_IMM32_LENGTH 1222,51481
    CTI_IND1_LENGTH 1225,51574
    CTI_IND2_LENGTH 1226,51656
    CTI_IND3_LENGTH 1227,51738
    CTI_DIRECT_LENGTH 1228,51820
    CTI_IAT_LENGTH 1229,51902
    CTI_FAR_ABS_LENGTH 1230,51984
    INT_LENGTH 1233,52149
    SYSCALL_LENGTH 1234,52169
    SYSENTER_LENGTH 1235,52193
#define REL32_REACHABLE_OFFS(1238,52222
#define REL32_REACHABLE(1240,52365
#define TRACE_CTI_MANGLE_SIZE_UPPER_BOUND 1293,54751
    app_pc region_start;1334,56462
    app_pc region_end;1335,56487
    app_pc start_pc;1336,56510
    app_pc min_pc;1337,56531
    app_pc max_pc;1338,56550
    app_pc bb_end;1339,56569
    bool contiguous;1340,56588
    bool overlap;1341,56609
} overlap_info_t;1342,56627
extract_branchtype(1539,64543
ibltype_to_linktype(1553,64940
convert_data_to_function(1577,65674
typedef struct dr_jmp_buf_t 1600,66493
    reg_t xbx;1601,66523
    reg_t xcx;1602,66538
    reg_t xdi;1603,66553
    reg_t xsi;1604,66568
    reg_t xbp;1605,66583
    reg_t xsp;1606,66598
    reg_t xip;1607,66613
    reg_t r8,1610,66727
    reg_t r8, r9,1610,66727
    reg_t r8, r9, r10,1610,66727
    reg_t r8, r9, r10, r11,1610,66727
    reg_t r8, r9, r10, r11, r12,1610,66727
    reg_t r8, r9, r10, r11, r12, r13,1610,66727
    reg_t r8, r9, r10, r11, r12, r13, r14,1610,66727
    reg_t r8, r9, r10, r11, r12, r13, r14, r15;1610,66727
    kernel_sigset_t sigmask;1617,67006
} dr_jmp_buf_t;1619,67042
#define DR_SETJMP(1643,67733
#define DR_LONGJMP(1645,67774
#  define APP_PARAM_0(1662,68368
#  define APP_PARAM_1(1663,68404
#  define APP_PARAM_2(1664,68440
#  define APP_PARAM_3(1665,68475
#  define APP_PARAM_4(1666,68510
#  define APP_PARAM_5(1667,68568
#  define APP_PARAM_6(1668,68626
#  define APP_PARAM_7(1669,68684
#  define APP_PARAM_8(1670,68742
#  define APP_PARAM_9(1671,68800
#  define APP_PARAM_10(1672,68859
#  define APP_PARAM_0(1674,68926
#  define APP_PARAM_1(1675,68962
#  define APP_PARAM_2(1676,68998
#  define APP_PARAM_3(1677,69034
#  define APP_PARAM_4(1678,69070
#  define APP_PARAM_5(1679,69105
#  define APP_PARAM_6(1680,69140
#  define APP_PARAM_7(1681,69198
#  define APP_PARAM_8(1682,69256
#  define APP_PARAM_9(1683,69314
#  define APP_PARAM_10(1684,69372
# define APP_PARAM(1687,69473
# define APP_PARAM(1690,69563

x86/instr_create.h,40259
#define _INSTR_CREATE_H_ 38,1892
#define LOCK(71,2995
#define INSTR_XL8(76,3211
#define OPND_CREATE_MEM64(80,3392
#define OPND_CREATE_MEM32(83,3542
#define OPND_CREATE_MEM16(86,3692
#define OPND_CREATE_MEM8(89,3842
# define OPND_CREATE_MEMPTR 93,4009
# define OPND_CREATE_ABSMEM(98,4199
# define OPND_CREATE_MEMPTR 102,4331
# define OPND_CREATE_ABSMEM(104,4420
#define OPND_CREATE_INT64(110,4568
# define OPND_CREATE_INTPTR 112,4704
# define OPND_CREATE_INTPTR 115,4813
#define OPND_CREATE_INT32(118,4916
#define OPND_CREATE_INT16(120,5045
#define OPND_CREATE_INT8(122,5174
#define OPND_CREATE_INT_32OR8(127,5374
#define OPND_CREATE_INT_16OR8(133,5638
#define OPND_CREATE_MEM_lea(139,5926
#define OPND_CREATE_MEM_invlpg(142,6120
#define OPND_CREATE_MEM_clflush(145,6321
#define OPND_CREATE_MEM_prefetch(148,6526
#define OPND_CREATE_MEM_lgdt(151,6728
#define OPND_CREATE_MEM_sgdt(154,6922
#define OPND_CREATE_MEM_lidt(157,7116
#define OPND_CREATE_MEM_sidt(160,7310
#define OPND_CREATE_MEM_bound(163,7505
#define OPND_CREATE_MEM_fldenv(166,7703
#define OPND_CREATE_MEM_fnstenv(169,7904
#define OPND_CREATE_MEM_fnsave(172,8106
#define OPND_CREATE_MEM_frstor(175,8306
#define OPND_CREATE_MEM_fxsave(178,8520
#define OPND_CREATE_MEM_fxrstor(181,8735
#define OPND_CREATE_MEM_xsave(187,9016
#define INSTR_CREATE_fwait(213,10181
#define INSTR_CREATE_hlt(214,10254
#define INSTR_CREATE_cmc(215,10325
#define INSTR_CREATE_clc(216,10396
#define INSTR_CREATE_stc(217,10467
#define INSTR_CREATE_cli(218,10538
#define INSTR_CREATE_sti(219,10609
#define INSTR_CREATE_cld(220,10680
#define INSTR_CREATE_std(221,10751
#define INSTR_CREATE_clts(222,10822
#define INSTR_CREATE_invd(223,10894
#define INSTR_CREATE_wbinvd(224,10966
#define INSTR_CREATE_ud2a(225,11040
#define INSTR_CREATE_emms(226,11112
#define INSTR_CREATE_rsm(227,11184
#define INSTR_CREATE_ud2b(228,11255
#define INSTR_CREATE_lfence(229,11327
#define INSTR_CREATE_mfence(230,11401
#define INSTR_CREATE_sfence(231,11475
#define INSTR_CREATE_nop(232,11549
#define INSTR_CREATE_pause(233,11620
#define INSTR_CREATE_fnop(234,11693
#define INSTR_CREATE_fdecstp(235,11765
#define INSTR_CREATE_fincstp(236,11840
#define INSTR_CREATE_fnclex(237,11915
#define INSTR_CREATE_fninit(238,11989
#define INSTR_CREATE_sysret(239,12063
#define INSTR_CREATE_femms(240,12137
#define INSTR_CREATE_swapgs(241,12210
#define INSTR_CREATE_vmcall(242,12284
#define INSTR_CREATE_vmlaunch(243,12358
#define INSTR_CREATE_vmresume(244,12434
#define INSTR_CREATE_vmxoff(245,12510
#define INSTR_CREATE_vmmcall(246,12584
#define INSTR_CREATE_stgi(247,12659
#define INSTR_CREATE_clgi(248,12731
#define INSTR_CREATE_int3(249,12803
#define INSTR_CREATE_into(250,12871
#define INSTR_CREATE_int1(251,12939
#define INSTR_CREATE_vzeroupper(252,13007
#define INSTR_CREATE_vzeroall(253,13087
#define INSTR_CREATE_label(261,13469
#define INSTR_CREATE_jcc_short(276,14235
#define INSTR_CREATE_jcc(287,14759
#define INSTR_CREATE_jmp(298,15342
#define INSTR_CREATE_jmp_short(300,15420
#define INSTR_CREATE_jmp_ind(310,15912
#define INSTR_CREATE_jmp_far(319,16362
#define INSTR_CREATE_jmp_far_ind(328,16825
#define INSTR_CREATE_lldt(338,17341
#define INSTR_CREATE_ltr(340,17421
#define INSTR_CREATE_verr(342,17499
#define INSTR_CREATE_verw(344,17579
#define INSTR_CREATE_vmptrld(346,17659
#define INSTR_CREATE_vmxon(348,17745
#define INSTR_CREATE_lgdt(357,18218
#define INSTR_CREATE_lidt(366,18689
#define INSTR_CREATE_lmsw(368,18769
#define INSTR_CREATE_invlpg(377,19242
#define INSTR_CREATE_fxrstor32(386,19720
#define INSTR_CREATE_fxrstor64(395,20204
#define INSTR_CREATE_ldmxcsr(397,20294
#define INSTR_CREATE_vldmxcsr(399,20380
#define INSTR_CREATE_nop_modrm(401,20468
#define INSTR_CREATE_prefetchnta(413,21095
#define INSTR_CREATE_prefetcht0(415,21189
#define INSTR_CREATE_prefetcht1(417,21281
#define INSTR_CREATE_prefetcht2(419,21373
#define INSTR_CREATE_prefetch(421,21465
#define INSTR_CREATE_prefetchw(423,21553
#define INSTR_CREATE_clflush(433,22070
#define INSTR_CREATE_int(442,22530
#define INSTR_CREATE_jmpe(448,22656
#define INSTR_CREATE_jmpe_abs(450,22736
#define INSTR_CREATE_fldenv(462,23251
#define INSTR_CREATE_fldcw(471,23736
#define INSTR_CREATE_frstor(480,24216
#define INSTR_CREATE_fxam(491,24663
#define INSTR_CREATE_sahf(493,24764
#define INSTR_CREATE_vmrun(495,24864
#define INSTR_CREATE_vmload(497,24967
#define INSTR_CREATE_vmsave(499,25072
#define INSTR_CREATE_skinit(501,25177
#define INSTR_CREATE_cmp(515,25859
#define INSTR_CREATE_test(517,25949
#define INSTR_CREATE_ptest(519,26041
#define INSTR_CREATE_vucomiss(522,26145
#define INSTR_CREATE_vucomisd(524,26245
#define INSTR_CREATE_vcomiss(526,26345
#define INSTR_CREATE_vcomisd(528,26443
#define INSTR_CREATE_vptest(530,26541
#define INSTR_CREATE_vtestps(532,26637
#define INSTR_CREATE_vtestpd(534,26735
#define INSTR_CREATE_bound(544,27290
#define INSTR_CREATE_bt(554,27809
#define INSTR_CREATE_ucomiss(556,27895
#define INSTR_CREATE_ucomisd(558,27993
#define INSTR_CREATE_comiss(560,28091
#define INSTR_CREATE_comisd(562,28187
#define INSTR_CREATE_invept(564,28283
#define INSTR_CREATE_invvpid(566,28379
#define INSTR_CREATE_jecxz(578,28932
#define INSTR_CREATE_jcxz(587,29381
#define INSTR_CREATE_out_1(598,29863
#define INSTR_CREATE_out_4(601,29997
#define INSTR_CREATE_out_1_imm(614,30668
#define INSTR_CREATE_out_4_imm(616,30780
#define INSTR_CREATE_mwait(628,31305
#define INSTR_CREATE_invlpga(631,31445
#define INSTR_CREATE_wrmsr(635,31630
#define INSTR_CREATE_monitor(638,31797
#define INSTR_CREATE_xsetbv(641,31970
#define INSTR_CREATE_xrstor32(655,32671
#define INSTR_CREATE_xrstor64(665,33183
#define INSTR_CREATE_fcom(683,34074
#define INSTR_CREATE_fcomp(685,34183
#define INSTR_CREATE_fcomi(698,34887
#define INSTR_CREATE_fcomip(700,34998
#define INSTR_CREATE_fucomi(702,35111
#define INSTR_CREATE_fucomip(704,35224
#define INSTR_CREATE_fucom(706,35339
#define INSTR_CREATE_fucomp(708,35450
#define INSTR_CREATE_fucompp(718,35938
#define INSTR_CREATE_fcompp(721,36080
#define INSTR_CREATE_setcc(735,36643
#define INSTR_CREATE_sldt(745,37167
#define INSTR_CREATE_str(747,37247
#define INSTR_CREATE_vmptrst(749,37325
#define INSTR_CREATE_vmclear(751,37411
#define INSTR_CREATE_sgdt(760,37893
#define INSTR_CREATE_sidt(769,38369
#define INSTR_CREATE_smsw(771,38449
#define INSTR_CREATE_fxsave32(780,38927
#define INSTR_CREATE_fxsave64(789,39413
#define INSTR_CREATE_stmxcsr(791,39501
#define INSTR_CREATE_vstmxcsr(793,39587
#define INSTR_CREATE_fnstenv(814,40669
#define INSTR_CREATE_fnstcw(816,40755
#define INSTR_CREATE_fnsave(825,41237
#define INSTR_CREATE_fnstsw(827,41321
#define INSTR_CREATE_ffree(838,41810
#define INSTR_CREATE_ffreep(840,41892
#define INSTR_CREATE_lahf(851,42355
#define INSTR_CREATE_sysenter(853,42455
#define INSTR_CREATE_sysexit(855,42564
#define INSTR_CREATE_syscall(857,42671
#define INSTR_CREATE_salc(859,42778
#define INSTR_CREATE_arpl(873,43441
#define INSTR_CREATE_lea(883,43992
#define INSTR_CREATE_mov_ld(885,44078
#define INSTR_CREATE_mov_st(887,44170
#define INSTR_CREATE_mov_imm(889,44262
#define INSTR_CREATE_mov_seg(891,44356
#define INSTR_CREATE_mov_priv(893,44450
#define INSTR_CREATE_lar(895,44546
#define INSTR_CREATE_lsl(897,44632
#define INSTR_CREATE_movntps(899,44718
#define INSTR_CREATE_movntpd(901,44812
#define INSTR_CREATE_movd(903,44906
#define INSTR_CREATE_movq(905,44994
#define INSTR_CREATE_movdqu(907,45082
#define INSTR_CREATE_movdqa(909,45174
#define INSTR_CREATE_movzx(911,45266
#define INSTR_CREATE_movsx(913,45356
#define INSTR_CREATE_bsf(915,45446
#define INSTR_CREATE_bsr(917,45532
#define INSTR_CREATE_pmovmskb(919,45618
#define INSTR_CREATE_movups(921,45714
#define INSTR_CREATE_movss(923,45806
#define INSTR_CREATE_movupd(925,45896
#define INSTR_CREATE_movsd(927,45988
#define INSTR_CREATE_movlps(929,46078
#define INSTR_CREATE_movlpd(931,46170
#define INSTR_CREATE_movhps(933,46262
#define INSTR_CREATE_movhpd(935,46354
#define INSTR_CREATE_movaps(937,46446
#define INSTR_CREATE_movapd(939,46538
#define INSTR_CREATE_cvtpi2ps(941,46630
#define INSTR_CREATE_cvtsi2ss(943,46726
#define INSTR_CREATE_cvtpi2pd(945,46822
#define INSTR_CREATE_cvtsi2sd(947,46918
#define INSTR_CREATE_cvttps2pi(949,47014
#define INSTR_CREATE_cvttss2si(951,47112
#define INSTR_CREATE_cvttpd2pi(953,47210
#define INSTR_CREATE_cvttsd2si(955,47308
#define INSTR_CREATE_cvtps2pi(957,47406
#define INSTR_CREATE_cvtss2si(959,47502
#define INSTR_CREATE_cvtpd2pi(961,47598
#define INSTR_CREATE_cvtsd2si(963,47694
#define INSTR_CREATE_cvtps2pd(965,47790
#define INSTR_CREATE_cvtss2sd(967,47886
#define INSTR_CREATE_cvtpd2ps(969,47982
#define INSTR_CREATE_cvtsd2ss(971,48078
#define INSTR_CREATE_cvtdq2ps(973,48174
#define INSTR_CREATE_cvttps2dq(975,48270
#define INSTR_CREATE_cvtps2dq(977,48368
#define INSTR_CREATE_cvtdq2pd(979,48464
#define INSTR_CREATE_cvttpd2dq(981,48560
#define INSTR_CREATE_cvtpd2dq(983,48658
#define INSTR_CREATE_movmskps(985,48754
#define INSTR_CREATE_movmskpd(987,48850
#define INSTR_CREATE_sqrtps(989,48946
#define INSTR_CREATE_sqrtss(991,49038
#define INSTR_CREATE_sqrtpd(993,49130
#define INSTR_CREATE_sqrtsd(995,49222
#define INSTR_CREATE_rsqrtps(997,49314
#define INSTR_CREATE_rsqrtss(999,49408
#define INSTR_CREATE_rcpps(1001,49502
#define INSTR_CREATE_rcpss(1003,49592
#define INSTR_CREATE_lddqu(1005,49682
#define INSTR_CREATE_movsldup(1007,49772
#define INSTR_CREATE_movshdup(1009,49868
#define INSTR_CREATE_movddup(1011,49964
#define INSTR_CREATE_pshufb(1013,50058
#define INSTR_CREATE_popcnt(1015,50150
#define INSTR_CREATE_movntss(1017,50242
#define INSTR_CREATE_movntsd(1019,50336
#define INSTR_CREATE_movntq(1021,50430
#define INSTR_CREATE_movntdq(1023,50522
#define INSTR_CREATE_movnti(1025,50616
#define INSTR_CREATE_lzcnt(1027,50708
#define INSTR_CREATE_pmovsxbw(1029,50798
#define INSTR_CREATE_pmovsxbd(1031,50894
#define INSTR_CREATE_pmovsxbq(1033,50990
#define INSTR_CREATE_pmovsxdw(1035,51086
#define INSTR_CREATE_pmovsxwq(1037,51182
#define INSTR_CREATE_pmovsxdq(1039,51278
#define INSTR_CREATE_movntdqa(1041,51374
#define INSTR_CREATE_pmovzxbw(1043,51470
#define INSTR_CREATE_pmovzxbd(1045,51566
#define INSTR_CREATE_pmovzxbq(1047,51662
#define INSTR_CREATE_pmovzxdw(1049,51758
#define INSTR_CREATE_pmovzxwq(1051,51854
#define INSTR_CREATE_pmovzxdq(1053,51950
#define INSTR_CREATE_phminposuw(1055,52046
#define INSTR_CREATE_vmread(1057,52146
#define INSTR_CREATE_vmwrite(1059,52238
#define INSTR_CREATE_movsxd(1061,52332
#define INSTR_CREATE_movbe(1063,52424
#define INSTR_CREATE_aesimc(1065,52514
#define INSTR_CREATE_vmovups(1068,52616
#define INSTR_CREATE_vmovupd(1070,52710
#define INSTR_CREATE_vmovsldup(1072,52804
#define INSTR_CREATE_vmovddup(1074,52902
#define INSTR_CREATE_vmovlps(1076,52998
#define INSTR_CREATE_vmovlpd(1078,53092
#define INSTR_CREATE_vmovshdup(1080,53186
#define INSTR_CREATE_vmovhps(1082,53284
#define INSTR_CREATE_vmovhpd(1084,53378
#define INSTR_CREATE_vmovaps(1086,53472
#define INSTR_CREATE_vmovapd(1088,53566
#define INSTR_CREATE_vmovntps(1090,53660
#define INSTR_CREATE_vmovntpd(1092,53756
#define INSTR_CREATE_vcvttss2si(1094,53852
#define INSTR_CREATE_vcvttsd2si(1096,53952
#define INSTR_CREATE_vcvtss2si(1098,54052
#define INSTR_CREATE_vcvtsd2si(1100,54150
#define INSTR_CREATE_vmovmskps(1102,54248
#define INSTR_CREATE_vmovmskpd(1104,54346
#define INSTR_CREATE_vsqrtps(1106,54444
#define INSTR_CREATE_vsqrtpd(1108,54538
#define INSTR_CREATE_vrsqrtps(1110,54632
#define INSTR_CREATE_vrcpps(1112,54728
#define INSTR_CREATE_vcvtps2pd(1114,54820
#define INSTR_CREATE_vcvtpd2ps(1116,54918
#define INSTR_CREATE_vcvtdq2ps(1118,55016
#define INSTR_CREATE_vcvttps2dq(1120,55114
#define INSTR_CREATE_vcvtps2dq(1122,55214
#define INSTR_CREATE_vmovd(1124,55312
#define INSTR_CREATE_vmovq(1126,55402
#define INSTR_CREATE_vpmovmskb(1128,55492
#define INSTR_CREATE_vcvtdq2pd(1130,55590
#define INSTR_CREATE_vcvttpd2dq(1132,55688
#define INSTR_CREATE_vcvtpd2dq(1134,55788
#define INSTR_CREATE_vmovntdq(1136,55886
#define INSTR_CREATE_vmovdqu(1138,55982
#define INSTR_CREATE_vmovdqa(1140,56076
#define INSTR_CREATE_vlddqu(1142,56170
#define INSTR_CREATE_vpshufb(1144,56262
#define INSTR_CREATE_vpmovsxbw(1146,56356
#define INSTR_CREATE_vpmovsxbd(1148,56454
#define INSTR_CREATE_vpmovsxbq(1150,56552
#define INSTR_CREATE_vpmovsxdw(1152,56650
#define INSTR_CREATE_vpmovsxwq(1154,56748
#define INSTR_CREATE_vpmovsxdq(1156,56846
#define INSTR_CREATE_vmovntdqa(1158,56944
#define INSTR_CREATE_vpmovzxbw(1160,57042
#define INSTR_CREATE_vpmovzxbd(1162,57140
#define INSTR_CREATE_vpmovzxbq(1164,57238
#define INSTR_CREATE_vpmovzxdw(1166,57336
#define INSTR_CREATE_vpmovzxwq(1168,57434
#define INSTR_CREATE_vpmovzxdq(1170,57532
#define INSTR_CREATE_vphminposuw(1172,57630
#define INSTR_CREATE_vaesimc(1174,57732
#define INSTR_CREATE_vmovss(1176,57826
#define INSTR_CREATE_vmovsd(1178,57918
#define INSTR_CREATE_vcvtph2ps(1180,58010
#define INSTR_CREATE_vbroadcastss(1182,58108
#define INSTR_CREATE_vbroadcastsd(1184,58212
#define INSTR_CREATE_vbroadcastf128(1186,58316
#define INSTR_CREATE_movq2dq(1188,58424
#define INSTR_CREATE_movdq2q(1190,58518
#define INSTR_CREATE_inc(1203,59125
#define INSTR_CREATE_dec(1205,59208
#define INSTR_CREATE_bswap(1208,59334
#define INSTR_CREATE_not(1210,59421
#define INSTR_CREATE_neg(1212,59504
#define INSTR_CREATE_cdq(1224,60013
#define INSTR_CREATE_daa(1227,60147
#define INSTR_CREATE_das(1230,60279
#define INSTR_CREATE_aaa(1233,60411
#define INSTR_CREATE_aas(1236,60543
#define INSTR_CREATE_cwde(1239,60675
#define INSTR_CREATE_xlat(1242,60810
#define INSTR_CREATE_in_1(1254,61367
#define INSTR_CREATE_in_4(1257,61499
#define INSTR_CREATE_in_1_imm(1270,62151
#define INSTR_CREATE_in_4_imm(1272,62261
#define INSTR_CREATE_fcmovcc(1286,62878
#define INSTR_CREATE_fst(1299,63635
#define INSTR_CREATE_fstp(1301,63742
#define INSTR_CREATE_fld(1313,64361
#define INSTR_CREATE_fist(1324,65038
#define INSTR_CREATE_fistp(1326,65147
#define INSTR_CREATE_fisttp(1328,65258
#define INSTR_CREATE_fbstp(1330,65371
#define INSTR_CREATE_fild(1342,66055
#define INSTR_CREATE_fbld(1344,66164
#define INSTR_CREATE_fchs(1354,66664
#define INSTR_CREATE_fabs(1357,66800
#define INSTR_CREATE_ftst(1360,66936
#define INSTR_CREATE_fld1(1363,67074
#define INSTR_CREATE_fldl2t(1367,67299
#define INSTR_CREATE_fldl2e(1370,67461
#define INSTR_CREATE_fldpi(1373,67614
#define INSTR_CREATE_fldlg2(1376,67759
#define INSTR_CREATE_fldln2(1379,67921
#define INSTR_CREATE_fldz(1382,68069
#define INSTR_CREATE_f2xm1(1385,68207
#define INSTR_CREATE_fptan(1388,68345
#define INSTR_CREATE_fxtract(1391,68483
#define INSTR_CREATE_fsqrt(1394,68625
#define INSTR_CREATE_fsincos(1397,68763
#define INSTR_CREATE_frndint(1400,68905
#define INSTR_CREATE_fsin(1403,69047
#define INSTR_CREATE_fcos(1406,69183
#define INSTR_CREATE_fscale(1410,69320
#define INSTR_CREATE_fyl2x(1414,69495
#define INSTR_CREATE_fyl2xp1(1418,69697
#define INSTR_CREATE_fpatan(1422,69903
#define INSTR_CREATE_fprem(1426,70107
#define INSTR_CREATE_fprem1(1430,70309
#define INSTR_CREATE_pshufw(1448,71218
#define INSTR_CREATE_pshufd(1450,71318
#define INSTR_CREATE_pshufhw(1452,71418
#define INSTR_CREATE_pshuflw(1454,71520
#define INSTR_CREATE_pinsrw(1456,71622
#define INSTR_CREATE_pextrw(1458,71722
#define INSTR_CREATE_pextrb(1461,71833
#define INSTR_CREATE_pextrd(1463,71933
#define INSTR_CREATE_extractps(1465,72033
#define INSTR_CREATE_roundps(1467,72139
#define INSTR_CREATE_roundpd(1469,72241
#define INSTR_CREATE_roundss(1471,72343
#define INSTR_CREATE_roundsd(1473,72445
#define INSTR_CREATE_pinsrb(1475,72547
#define INSTR_CREATE_insertps(1477,72647
#define INSTR_CREATE_pinsrd(1479,72751
#define INSTR_CREATE_aeskeygenassist(1481,72851
#define INSTR_CREATE_vmovlps_NDS(1497,73709
#define INSTR_CREATE_vmovlpd_NDS(1499,73819
#define INSTR_CREATE_vunpcklps(1501,73929
#define INSTR_CREATE_vunpcklpd(1503,74039
#define INSTR_CREATE_vunpckhps(1505,74149
#define INSTR_CREATE_vunpckhpd(1507,74259
#define INSTR_CREATE_vmovhps_NDS(1509,74369
#define INSTR_CREATE_vmovhpd_NDS(1511,74479
#define INSTR_CREATE_vcvtsi2ss(1513,74589
#define INSTR_CREATE_vcvtsi2sd(1515,74699
#define INSTR_CREATE_vsqrtss(1517,74809
#define INSTR_CREATE_vsqrtsd(1519,74915
#define INSTR_CREATE_vrsqrtss(1521,75021
#define INSTR_CREATE_vrcpss(1523,75129
#define INSTR_CREATE_vandps(1525,75233
#define INSTR_CREATE_vandpd(1527,75337
#define INSTR_CREATE_vandnps(1529,75441
#define INSTR_CREATE_vandnpd(1531,75547
#define INSTR_CREATE_vorps(1533,75653
#define INSTR_CREATE_vorpd(1535,75755
#define INSTR_CREATE_vxorps(1537,75857
#define INSTR_CREATE_vxorpd(1539,75961
#define INSTR_CREATE_vaddps(1541,76065
#define INSTR_CREATE_vaddss(1543,76169
#define INSTR_CREATE_vaddpd(1545,76273
#define INSTR_CREATE_vaddsd(1547,76377
#define INSTR_CREATE_vmulps(1549,76481
#define INSTR_CREATE_vmulss(1551,76585
#define INSTR_CREATE_vmulpd(1553,76689
#define INSTR_CREATE_vmulsd(1555,76793
#define INSTR_CREATE_vcvtss2sd(1557,76897
#define INSTR_CREATE_vcvtsd2ss(1559,77007
#define INSTR_CREATE_vsubps(1561,77117
#define INSTR_CREATE_vsubss(1563,77221
#define INSTR_CREATE_vsubpd(1565,77325
#define INSTR_CREATE_vsubsd(1567,77429
#define INSTR_CREATE_vminps(1569,77533
#define INSTR_CREATE_vminss(1571,77637
#define INSTR_CREATE_vminpd(1573,77741
#define INSTR_CREATE_vminsd(1575,77845
#define INSTR_CREATE_vdivps(1577,77949
#define INSTR_CREATE_vdivss(1579,78053
#define INSTR_CREATE_vdivpd(1581,78157
#define INSTR_CREATE_vdivsd(1583,78261
#define INSTR_CREATE_vmaxps(1585,78365
#define INSTR_CREATE_vmaxss(1587,78469
#define INSTR_CREATE_vmaxpd(1589,78573
#define INSTR_CREATE_vmaxsd(1591,78677
#define INSTR_CREATE_vpunpcklbw(1593,78781
#define INSTR_CREATE_vpunpcklwd(1595,78893
#define INSTR_CREATE_vpunpckldq(1597,79005
#define INSTR_CREATE_vpacksswb(1599,79117
#define INSTR_CREATE_vpcmpgtb(1601,79227
#define INSTR_CREATE_vpcmpgtw(1603,79335
#define INSTR_CREATE_vpcmpgtd(1605,79443
#define INSTR_CREATE_vpackuswb(1607,79551
#define INSTR_CREATE_vpunpckhbw(1609,79661
#define INSTR_CREATE_vpunpckhwd(1611,79773
#define INSTR_CREATE_vpunpckhdq(1613,79885
#define INSTR_CREATE_vpackssdw(1615,79997
#define INSTR_CREATE_vpunpcklqdq(1617,80107
#define INSTR_CREATE_vpunpckhqdq(1619,80221
#define INSTR_CREATE_vpshufhw(1621,80335
#define INSTR_CREATE_vpshufd(1623,80443
#define INSTR_CREATE_vpshuflw(1625,80549
#define INSTR_CREATE_vpcmpeqb(1627,80657
#define INSTR_CREATE_vpcmpeqw(1629,80765
#define INSTR_CREATE_vpcmpeqd(1631,80873
#define INSTR_CREATE_vpextrw(1633,80981
#define INSTR_CREATE_vpsrlw(1635,81087
#define INSTR_CREATE_vpsrld(1637,81191
#define INSTR_CREATE_vpsrlq(1639,81295
#define INSTR_CREATE_vpaddq(1641,81399
#define INSTR_CREATE_vpmullw(1643,81503
#define INSTR_CREATE_vpsubusb(1645,81609
#define INSTR_CREATE_vpsubusw(1647,81717
#define INSTR_CREATE_vpminub(1649,81825
#define INSTR_CREATE_vpand(1651,81931
#define INSTR_CREATE_vpaddusb(1653,82033
#define INSTR_CREATE_vpaddusw(1655,82141
#define INSTR_CREATE_vpmaxub(1657,82249
#define INSTR_CREATE_vpandn(1659,82355
#define INSTR_CREATE_vpavgb(1661,82459
#define INSTR_CREATE_vpsraw(1663,82563
#define INSTR_CREATE_vpsrad(1665,82667
#define INSTR_CREATE_vpavgw(1667,82771
#define INSTR_CREATE_vpmulhuw(1669,82875
#define INSTR_CREATE_vpmulhw(1671,82983
#define INSTR_CREATE_vpsubsb(1673,83089
#define INSTR_CREATE_vpsubsw(1675,83195
#define INSTR_CREATE_vpminsw(1677,83301
#define INSTR_CREATE_vpor(1679,83407
#define INSTR_CREATE_vpaddsb(1681,83507
#define INSTR_CREATE_vpaddsw(1683,83613
#define INSTR_CREATE_vpmaxsw(1685,83719
#define INSTR_CREATE_vpxor(1687,83825
#define INSTR_CREATE_vpsllw(1689,83927
#define INSTR_CREATE_vpslld(1691,84031
#define INSTR_CREATE_vpsllq(1693,84135
#define INSTR_CREATE_vpmuludq(1695,84239
#define INSTR_CREATE_vpmaddwd(1697,84347
#define INSTR_CREATE_vpsadbw(1699,84455
#define INSTR_CREATE_vpsubb(1701,84561
#define INSTR_CREATE_vpsubw(1703,84665
#define INSTR_CREATE_vpsubd(1705,84769
#define INSTR_CREATE_vpsubq(1707,84873
#define INSTR_CREATE_vpaddb(1709,84977
#define INSTR_CREATE_vpaddw(1711,85081
#define INSTR_CREATE_vpaddd(1713,85185
#define INSTR_CREATE_vpsrldq(1715,85289
#define INSTR_CREATE_vpslldq(1717,85395
#define INSTR_CREATE_vhaddpd(1719,85501
#define INSTR_CREATE_vhaddps(1721,85607
#define INSTR_CREATE_vhsubpd(1723,85713
#define INSTR_CREATE_vhsubps(1725,85819
#define INSTR_CREATE_vaddsubpd(1727,85925
#define INSTR_CREATE_vaddsubps(1729,86035
#define INSTR_CREATE_vphaddw(1731,86145
#define INSTR_CREATE_vphaddd(1733,86251
#define INSTR_CREATE_vphaddsw(1735,86357
#define INSTR_CREATE_vpmaddubsw(1737,86465
#define INSTR_CREATE_vphsubw(1739,86577
#define INSTR_CREATE_vphsubd(1741,86683
#define INSTR_CREATE_vphsubsw(1743,86789
#define INSTR_CREATE_vpsignb(1745,86897
#define INSTR_CREATE_vpsignw(1747,87003
#define INSTR_CREATE_vpsignd(1749,87109
#define INSTR_CREATE_vpmulhrsw(1751,87215
#define INSTR_CREATE_vpabsb(1753,87325
#define INSTR_CREATE_vpabsw(1755,87429
#define INSTR_CREATE_vpabsd(1757,87533
#define INSTR_CREATE_vpmuldq(1759,87637
#define INSTR_CREATE_vpcmpeqq(1761,87743
#define INSTR_CREATE_vpackusdw(1763,87851
#define INSTR_CREATE_vpcmpgtq(1765,87961
#define INSTR_CREATE_vpminsb(1767,88069
#define INSTR_CREATE_vpminsd(1769,88175
#define INSTR_CREATE_vpminuw(1771,88281
#define INSTR_CREATE_vpminud(1773,88387
#define INSTR_CREATE_vpmaxsb(1775,88493
#define INSTR_CREATE_vpmaxsd(1777,88599
#define INSTR_CREATE_vpmaxuw(1779,88705
#define INSTR_CREATE_vpmaxud(1781,88811
#define INSTR_CREATE_vpmulld(1783,88917
#define INSTR_CREATE_vaesenc(1785,89023
#define INSTR_CREATE_vaesenclast(1787,89129
#define INSTR_CREATE_vaesdec(1789,89243
#define INSTR_CREATE_vaesdeclast(1791,89349
#define INSTR_CREATE_vpextrb(1793,89463
#define INSTR_CREATE_vpextrd(1795,89569
#define INSTR_CREATE_vextractps(1797,89675
#define INSTR_CREATE_vroundps(1799,89787
#define INSTR_CREATE_vroundpd(1801,89895
#define INSTR_CREATE_vaeskeygenassist(1803,90003
#define INSTR_CREATE_vmovss_NDS(1805,90127
#define INSTR_CREATE_vmovsd_NDS(1807,90235
#define INSTR_CREATE_vcvtps2ph(1809,90343
#define INSTR_CREATE_vmaskmovps(1811,90453
#define INSTR_CREATE_vmaskmovpd(1813,90565
#define INSTR_CREATE_vpermilps(1815,90677
#define INSTR_CREATE_vpermilpd(1817,90787
#define INSTR_CREATE_vextractf128(1819,90897
#define INSTR_CREATE_add(1833,91626
#define INSTR_CREATE_or(1835,91717
#define INSTR_CREATE_adc(1837,91807
#define INSTR_CREATE_sbb(1839,91898
#define INSTR_CREATE_and(1841,91989
#define INSTR_CREATE_sub(1843,92080
#define INSTR_CREATE_xor(1845,92171
#define INSTR_CREATE_punpcklbw(1847,92262
#define INSTR_CREATE_punpcklwd(1849,92365
#define INSTR_CREATE_punpckldq(1851,92468
#define INSTR_CREATE_packsswb(1853,92571
#define INSTR_CREATE_pcmpgtb(1855,92672
#define INSTR_CREATE_pcmpgtw(1857,92771
#define INSTR_CREATE_pcmpgtd(1859,92870
#define INSTR_CREATE_packuswb(1861,92969
#define INSTR_CREATE_punpckhbw(1863,93070
#define INSTR_CREATE_punpckhwd(1865,93173
#define INSTR_CREATE_punpckhdq(1867,93276
#define INSTR_CREATE_packssdw(1869,93379
#define INSTR_CREATE_punpcklqdq(1871,93480
#define INSTR_CREATE_punpckhqdq(1873,93585
#define INSTR_CREATE_pcmpeqb(1875,93690
#define INSTR_CREATE_pcmpeqw(1877,93789
#define INSTR_CREATE_pcmpeqd(1879,93888
#define INSTR_CREATE_psrlw(1881,93987
#define INSTR_CREATE_psrld(1883,94082
#define INSTR_CREATE_psrlq(1885,94177
#define INSTR_CREATE_paddq(1887,94272
#define INSTR_CREATE_pmullw(1889,94367
#define INSTR_CREATE_psubusb(1891,94464
#define INSTR_CREATE_psubusw(1893,94563
#define INSTR_CREATE_pminub(1895,94662
#define INSTR_CREATE_pand(1897,94759
#define INSTR_CREATE_paddusb(1899,94852
#define INSTR_CREATE_paddusw(1901,94951
#define INSTR_CREATE_pmaxub(1903,95050
#define INSTR_CREATE_pandn(1905,95147
#define INSTR_CREATE_pavgb(1907,95242
#define INSTR_CREATE_psraw(1909,95337
#define INSTR_CREATE_psrad(1911,95432
#define INSTR_CREATE_pavgw(1913,95527
#define INSTR_CREATE_pmulhuw(1915,95622
#define INSTR_CREATE_pmulhw(1917,95721
#define INSTR_CREATE_psubsb(1919,95818
#define INSTR_CREATE_psubsw(1921,95915
#define INSTR_CREATE_pminsw(1923,96012
#define INSTR_CREATE_por(1925,96109
#define INSTR_CREATE_paddsb(1927,96200
#define INSTR_CREATE_paddsw(1929,96297
#define INSTR_CREATE_pmaxsw(1931,96394
#define INSTR_CREATE_pxor(1933,96491
#define INSTR_CREATE_psllw(1935,96584
#define INSTR_CREATE_pslld(1937,96679
#define INSTR_CREATE_psllq(1939,96774
#define INSTR_CREATE_pmuludq(1941,96869
#define INSTR_CREATE_pmaddwd(1943,96968
#define INSTR_CREATE_psadbw(1945,97067
#define INSTR_CREATE_psubb(1947,97164
#define INSTR_CREATE_psubw(1949,97259
#define INSTR_CREATE_psubd(1951,97354
#define INSTR_CREATE_psubq(1953,97449
#define INSTR_CREATE_paddb(1955,97544
#define INSTR_CREATE_paddw(1957,97639
#define INSTR_CREATE_paddd(1959,97734
#define INSTR_CREATE_psrldq(1961,97829
#define INSTR_CREATE_pslldq(1963,97926
#define INSTR_CREATE_unpcklps(1965,98023
#define INSTR_CREATE_unpcklpd(1967,98124
#define INSTR_CREATE_unpckhps(1969,98225
#define INSTR_CREATE_unpckhpd(1971,98326
#define INSTR_CREATE_andps(1973,98427
#define INSTR_CREATE_andpd(1975,98522
#define INSTR_CREATE_andnps(1977,98617
#define INSTR_CREATE_andnpd(1979,98714
#define INSTR_CREATE_orps(1981,98811
#define INSTR_CREATE_orpd(1983,98904
#define INSTR_CREATE_xorps(1985,98997
#define INSTR_CREATE_xorpd(1987,99092
#define INSTR_CREATE_addps(1989,99187
#define INSTR_CREATE_addss(1991,99282
#define INSTR_CREATE_addpd(1993,99377
#define INSTR_CREATE_addsd(1995,99472
#define INSTR_CREATE_mulps(1997,99567
#define INSTR_CREATE_mulss(1999,99662
#define INSTR_CREATE_mulpd(2001,99757
#define INSTR_CREATE_mulsd(2003,99852
#define INSTR_CREATE_subps(2005,99947
#define INSTR_CREATE_subss(2007,100042
#define INSTR_CREATE_subpd(2009,100137
#define INSTR_CREATE_subsd(2011,100232
#define INSTR_CREATE_minps(2013,100327
#define INSTR_CREATE_minss(2015,100422
#define INSTR_CREATE_minpd(2017,100517
#define INSTR_CREATE_minsd(2019,100612
#define INSTR_CREATE_divps(2021,100707
#define INSTR_CREATE_divss(2023,100802
#define INSTR_CREATE_divpd(2025,100897
#define INSTR_CREATE_divsd(2027,100992
#define INSTR_CREATE_maxps(2029,101087
#define INSTR_CREATE_maxss(2031,101182
#define INSTR_CREATE_maxpd(2033,101277
#define INSTR_CREATE_maxsd(2035,101372
#define INSTR_CREATE_haddpd(2038,101478
#define INSTR_CREATE_haddps(2040,101575
#define INSTR_CREATE_hsubpd(2042,101672
#define INSTR_CREATE_hsubps(2044,101769
#define INSTR_CREATE_addsubpd(2046,101866
#define INSTR_CREATE_addsubps(2048,101967
#define INSTR_CREATE_pavgusb(2051,102081
#define INSTR_CREATE_pfadd(2053,102180
#define INSTR_CREATE_pfacc(2055,102275
#define INSTR_CREATE_pfcmpge(2057,102370
#define INSTR_CREATE_pfcmpgt(2059,102469
#define INSTR_CREATE_pfcmpeq(2061,102568
#define INSTR_CREATE_pfmin(2063,102667
#define INSTR_CREATE_pfmax(2065,102762
#define INSTR_CREATE_pfmul(2067,102857
#define INSTR_CREATE_pfrcp(2069,102952
#define INSTR_CREATE_pfrcpit1(2071,103047
#define INSTR_CREATE_pfrcpit2(2073,103148
#define INSTR_CREATE_pfrsqrt(2075,103249
#define INSTR_CREATE_pfrsqit1(2077,103348
#define INSTR_CREATE_pmulhrw(2079,103449
#define INSTR_CREATE_pfsub(2081,103548
#define INSTR_CREATE_pfsubr(2083,103643
#define INSTR_CREATE_pi2fd(2085,103740
#define INSTR_CREATE_pf2id(2087,103835
#define INSTR_CREATE_pi2fw(2089,103930
#define INSTR_CREATE_pf2iw(2091,104025
#define INSTR_CREATE_pfnacc(2093,104120
#define INSTR_CREATE_pfpnacc(2095,104217
#define INSTR_CREATE_pswapd(2097,104316
#define INSTR_CREATE_phaddw(2100,104425
#define INSTR_CREATE_phaddd(2102,104522
#define INSTR_CREATE_phaddsw(2104,104619
#define INSTR_CREATE_pmaddubsw(2106,104718
#define INSTR_CREATE_phsubw(2108,104821
#define INSTR_CREATE_phsubd(2110,104918
#define INSTR_CREATE_phsubsw(2112,105015
#define INSTR_CREATE_psignb(2114,105114
#define INSTR_CREATE_psignw(2116,105211
#define INSTR_CREATE_psignd(2118,105308
#define INSTR_CREATE_pmulhrsw(2120,105405
#define INSTR_CREATE_pabsb(2122,105506
#define INSTR_CREATE_pabsw(2124,105601
#define INSTR_CREATE_pabsd(2126,105696
#define INSTR_CREATE_crc32(2129,105802
#define INSTR_CREATE_packusdw(2131,105897
#define INSTR_CREATE_pcmpeqq(2133,105998
#define INSTR_CREATE_pcmpgtq(2135,106097
#define INSTR_CREATE_pminsb(2137,106196
#define INSTR_CREATE_pminsd(2139,106293
#define INSTR_CREATE_pminuw(2141,106390
#define INSTR_CREATE_pminud(2143,106487
#define INSTR_CREATE_pmaxsb(2145,106584
#define INSTR_CREATE_pmaxsd(2147,106681
#define INSTR_CREATE_pmaxuw(2149,106778
#define INSTR_CREATE_pmaxud(2151,106875
#define INSTR_CREATE_pmuldq(2153,106972
#define INSTR_CREATE_pmulld(2155,107069
#define INSTR_CREATE_aesenc(2157,107166
#define INSTR_CREATE_aesenclast(2159,107263
#define INSTR_CREATE_aesdec(2161,107368
#define INSTR_CREATE_aesdeclast(2163,107465
#define INSTR_CREATE_bts(2177,108233
#define INSTR_CREATE_btr(2179,108326
#define INSTR_CREATE_btc(2181,108419
#define INSTR_CREATE_cmovcc(2194,108983
#define INSTR_CREATE_imul_imm(2208,109720
#define INSTR_CREATE_imul(2217,110195
#define INSTR_CREATE_imul_1(2229,110900
#define INSTR_CREATE_imul_4(2232,111044
#define INSTR_CREATE_mul_1(2235,111219
#define INSTR_CREATE_mul_4(2238,111361
#define INSTR_CREATE_div_1(2241,111534
#define INSTR_CREATE_div_4(2244,111704
#define INSTR_CREATE_idiv_1(2248,111912
#define INSTR_CREATE_idiv_4(2251,112084
#define INSTR_CREATE_rol(2272,113252
#define INSTR_CREATE_ror(2274,113345
#define INSTR_CREATE_rcl(2276,113438
#define INSTR_CREATE_rcr(2278,113531
#define INSTR_CREATE_shl(2280,113624
#define INSTR_CREATE_shr(2282,113717
#define INSTR_CREATE_sar(2284,113810
#define INSTR_CREATE_maskmovq(2297,114447
#define INSTR_CREATE_maskmovdqu(2301,114642
#define INSTR_CREATE_vmaskmovdqu(2305,114844
#define INSTR_CREATE_fadd(2326,115979
#define INSTR_CREATE_fmul(2328,116072
#define INSTR_CREATE_fdiv(2330,116165
#define INSTR_CREATE_fdivr(2332,116258
#define INSTR_CREATE_fsub(2334,116353
#define INSTR_CREATE_fsubr(2336,116446
#define INSTR_CREATE_faddp(2349,117127
#define INSTR_CREATE_fmulp(2351,117243
#define INSTR_CREATE_fdivp(2353,117359
#define INSTR_CREATE_fdivrp(2355,117475
#define INSTR_CREATE_fsubp(2357,117593
#define INSTR_CREATE_fsubrp(2359,117709
#define INSTR_CREATE_fiadd(2371,118430
#define INSTR_CREATE_fimul(2374,118576
#define INSTR_CREATE_fidiv(2377,118722
#define INSTR_CREATE_fidivr(2380,118868
#define INSTR_CREATE_fisub(2383,119016
#define INSTR_CREATE_fisubr(2386,119162
#define INSTR_CREATE_ficom(2389,119310
#define INSTR_CREATE_ficomp(2392,119456
#define INSTR_CREATE_extrq(2405,120067
#define INSTR_CREATE_extrq_imm(2419,120868
#define INSTR_CREATE_insertq(2429,121403
#define INSTR_CREATE_insertq_imm(2445,122336
#define INSTR_CREATE_xsave32(2458,123026
#define INSTR_CREATE_xsave64(2461,123176
#define INSTR_CREATE_xsaveopt32(2464,123326
#define INSTR_CREATE_xsaveopt64(2467,123482
#define INSTR_CREATE_aam(2482,124261
#define INSTR_CREATE_aad(2485,124401
#define INSTR_CREATE_loopne(2498,125069
#define INSTR_CREATE_loope(2501,125217
#define INSTR_CREATE_loop(2504,125363
#define INSTR_CREATE_popf(2517,125935
#define INSTR_CREATE_ret(2521,126143
#define INSTR_CREATE_ret_far(2527,126443
#define INSTR_CREATE_iret(2533,126771
#define INSTR_CREATE_vpblendvb(2552,127743
#define INSTR_CREATE_vblendvps(2554,127863
#define INSTR_CREATE_vblendvpd(2556,127983
#define INSTR_CREATE_vcmpps(2573,128893
#define INSTR_CREATE_vcmpss(2575,129005
#define INSTR_CREATE_vcmppd(2577,129117
#define INSTR_CREATE_vcmpsd(2579,129229
#define INSTR_CREATE_vpinsrw(2581,129341
#define INSTR_CREATE_vshufps(2583,129455
#define INSTR_CREATE_vshufpd(2585,129569
#define INSTR_CREATE_vpalignr(2587,129683
#define INSTR_CREATE_vblendps(2589,129799
#define INSTR_CREATE_vblendpd(2591,129915
#define INSTR_CREATE_vpblendw(2593,130031
#define INSTR_CREATE_vpinsrb(2595,130147
#define INSTR_CREATE_vinsertps(2597,130261
#define INSTR_CREATE_vpinsrd(2599,130379
#define INSTR_CREATE_vdpps(2601,130493
#define INSTR_CREATE_vdppd(2603,130603
#define INSTR_CREATE_vmpsadbw(2605,130713
#define INSTR_CREATE_vpclmulqdq(2607,130829
#define INSTR_CREATE_vroundss(2609,130949
#define INSTR_CREATE_vroundsd(2611,131065
#define INSTR_CREATE_vperm2f128(2613,131181
#define INSTR_CREATE_vinsertf128(2615,131301
#define INSTR_CREATE_shld(2633,132244
#define INSTR_CREATE_shrd(2635,132347
#define INSTR_CREATE_pclmulqdq(2649,133144
#define INSTR_CREATE_blendps(2651,133255
#define INSTR_CREATE_blendpd(2653,133362
#define INSTR_CREATE_pblendw(2655,133469
#define INSTR_CREATE_shufps(2669,134286
#define INSTR_CREATE_shufpd(2671,134392
#define INSTR_CREATE_cmpps(2673,134497
#define INSTR_CREATE_cmpss(2675,134600
#define INSTR_CREATE_cmppd(2677,134703
#define INSTR_CREATE_cmpsd(2679,134806
#define INSTR_CREATE_palignr(2681,134909
#define INSTR_CREATE_dpps(2683,135016
#define INSTR_CREATE_dppd(2685,135117
#define INSTR_CREATE_mpsadbw(2687,135218
#define INSTR_CREATE_vfmadd132ps(2702,135995
#define INSTR_CREATE_vfmadd132pd(2704,136114
#define INSTR_CREATE_vfmadd213ps(2706,136233
#define INSTR_CREATE_vfmadd213pd(2708,136352
#define INSTR_CREATE_vfmadd231ps(2710,136471
#define INSTR_CREATE_vfmadd231pd(2712,136590
#define INSTR_CREATE_vfmadd132ss(2714,136709
#define INSTR_CREATE_vfmadd132sd(2716,136828
#define INSTR_CREATE_vfmadd213ss(2718,136947
#define INSTR_CREATE_vfmadd213sd(2720,137066
#define INSTR_CREATE_vfmadd231ss(2722,137185
#define INSTR_CREATE_vfmadd231sd(2724,137304
#define INSTR_CREATE_vfmaddsub132ps(2726,137423
#define INSTR_CREATE_vfmaddsub132pd(2728,137548
#define INSTR_CREATE_vfmaddsub213ps(2730,137673
#define INSTR_CREATE_vfmaddsub213pd(2732,137798
#define INSTR_CREATE_vfmaddsub231ps(2734,137923
#define INSTR_CREATE_vfmaddsub231pd(2736,138048
#define INSTR_CREATE_vfmsubadd132ps(2738,138173
#define INSTR_CREATE_vfmsubadd132pd(2740,138298
#define INSTR_CREATE_vfmsubadd213ps(2742,138423
#define INSTR_CREATE_vfmsubadd213pd(2744,138548
#define INSTR_CREATE_vfmsubadd231ps(2746,138673
#define INSTR_CREATE_vfmsubadd231pd(2748,138798
#define INSTR_CREATE_vfmsub132ps(2750,138923
#define INSTR_CREATE_vfmsub132pd(2752,139042
#define INSTR_CREATE_vfmsub213ps(2754,139161
#define INSTR_CREATE_vfmsub213pd(2756,139280
#define INSTR_CREATE_vfmsub231ps(2758,139399
#define INSTR_CREATE_vfmsub231pd(2760,139518
#define INSTR_CREATE_vfmsub132ss(2762,139637
#define INSTR_CREATE_vfmsub132sd(2764,139756
#define INSTR_CREATE_vfmsub213ss(2766,139875
#define INSTR_CREATE_vfmsub213sd(2768,139994
#define INSTR_CREATE_vfmsub231ss(2770,140113
#define INSTR_CREATE_vfmsub231sd(2772,140232
#define INSTR_CREATE_vfnmadd132ps(2774,140351
#define INSTR_CREATE_vfnmadd132pd(2776,140472
#define INSTR_CREATE_vfnmadd213ps(2778,140593
#define INSTR_CREATE_vfnmadd213pd(2780,140714
#define INSTR_CREATE_vfnmadd231ps(2782,140835
#define INSTR_CREATE_vfnmadd231pd(2784,140956
#define INSTR_CREATE_vfnmadd132ss(2786,141077
#define INSTR_CREATE_vfnmadd132sd(2788,141198
#define INSTR_CREATE_vfnmadd213ss(2790,141319
#define INSTR_CREATE_vfnmadd213sd(2792,141440
#define INSTR_CREATE_vfnmadd231ss(2794,141561
#define INSTR_CREATE_vfnmadd231sd(2796,141682
#define INSTR_CREATE_vfnmsub132ps(2798,141803
#define INSTR_CREATE_vfnmsub132pd(2800,141924
#define INSTR_CREATE_vfnmsub213ps(2802,142045
#define INSTR_CREATE_vfnmsub213pd(2804,142166
#define INSTR_CREATE_vfnmsub231ps(2806,142287
#define INSTR_CREATE_vfnmsub231pd(2808,142408
#define INSTR_CREATE_vfnmsub132ss(2810,142529
#define INSTR_CREATE_vfnmsub132sd(2812,142650
#define INSTR_CREATE_vfnmsub213ss(2814,142771
#define INSTR_CREATE_vfnmsub213sd(2816,142892
#define INSTR_CREATE_vfnmsub231ss(2818,143013
#define INSTR_CREATE_vfnmsub231sd(2820,143134
#define INSTR_CREATE_pblendvb(2834,143822
#define INSTR_CREATE_blendvps(2836,143953
#define INSTR_CREATE_blendvpd(2838,144084
#define INSTR_CREATE_pcmpistrm(2854,144947
#define INSTR_CREATE_pcmpistri(2856,145087
#define INSTR_CREATE_vpcmpistrm(2858,145226
#define INSTR_CREATE_vpcmpistri(2861,145374
#define INSTR_CREATE_ret_imm(2878,146253
#define INSTR_CREATE_ret_far_imm(2884,146565
#define INSTR_CREATE_pcmpestrm(2902,147564
#define INSTR_CREATE_pcmpestri(2905,147768
#define INSTR_CREATE_vpcmpestrm(2909,147981
#define INSTR_CREATE_vpcmpestri(2912,148187
#define INSTR_CREATE_rdtsc(2923,148670
#define INSTR_CREATE_lds(2937,149364
#define INSTR_CREATE_lss(2939,149478
#define INSTR_CREATE_les(2941,149592
#define INSTR_CREATE_lfs(2943,149706
#define INSTR_CREATE_lgs(2945,149820
#define INSTR_CREATE_pushf(2957,150362
#define INSTR_CREATE_rdmsr(2961,150589
#define INSTR_CREATE_rdpmc(2964,150756
#define INSTR_CREATE_xgetbv(2967,150923
#define INSTR_CREATE_pop(2979,151477
#define INSTR_CREATE_xchg(2994,152276
#define INSTR_CREATE_xadd(2996,152374
#define INSTR_CREATE_ins_1(3010,153001
#define INSTR_CREATE_ins_4(3014,153248
#define INSTR_CREATE_stos_1(3019,153515
#define INSTR_CREATE_stos_4(3023,153764
#define INSTR_CREATE_lods_1(3028,154034
#define INSTR_CREATE_lods_4(3033,154289
#define INSTR_CREATE_movs_1(3039,154566
#define INSTR_CREATE_movs_4(3045,154934
#define INSTR_CREATE_rep_ins_1(3053,155342
#define INSTR_CREATE_rep_ins_4(3058,155661
#define INSTR_CREATE_rep_stos_1(3064,156000
#define INSTR_CREATE_rep_stos_4(3069,156321
#define INSTR_CREATE_rep_lods_1(3075,156663
#define INSTR_CREATE_rep_lods_4(3081,156990
#define INSTR_CREATE_rep_movs_1(3088,157338
#define INSTR_CREATE_rep_movs_4(3095,157778
#define INSTR_CREATE_outs_1(3104,158258
#define INSTR_CREATE_outs_4(3108,158507
#define INSTR_CREATE_cmps_1(3113,158776
#define INSTR_CREATE_cmps_4(3119,159144
#define INSTR_CREATE_scas_1(3127,159552
#define INSTR_CREATE_scas_4(3131,159801
#define INSTR_CREATE_rep_outs_1(3136,160071
#define INSTR_CREATE_rep_outs_4(3141,160392
#define INSTR_CREATE_rep_cmps_1(3147,160733
#define INSTR_CREATE_rep_cmps_4(3154,161173
#define INSTR_CREATE_repne_cmps_1(3163,161653
#define INSTR_CREATE_repne_cmps_4(3170,162097
#define INSTR_CREATE_rep_scas_1(3179,162581
#define INSTR_CREATE_rep_scas_4(3184,162902
#define INSTR_CREATE_repne_scas_1(3190,163244
#define INSTR_CREATE_repne_scas_4(3195,163569
#define INSTR_CREATE_fxch(3211,164344
#define INSTR_CREATE_call(3223,164915
#define INSTR_CREATE_call_ind(3234,165517
#define INSTR_CREATE_call_far(3246,166207
#define INSTR_CREATE_call_far_ind(3258,166890
#define INSTR_CREATE_push(3268,167421
#define INSTR_CREATE_push_imm(3279,168031
#define INSTR_CREATE_cmpxchg_1(3296,169006
#define INSTR_CREATE_cmpxchg_4(3299,169169
#define INSTR_CREATE_leave(3305,169418
#define INSTR_CREATE_pusha(3319,170083
#define INSTR_CREATE_rdtscp(3322,170183
#define INSTR_CREATE_cpuid(3327,170393
#define INSTR_CREATE_cmpxchg8b(3340,171018
#define INSTR_CREATE_enter(3357,171947
#define INSTR_CREATE_popa(3369,172513
#define INSTR_CREATE_nop1byte(3384,173235
#define INSTR_CREATE_nop2byte(3385,173290
#define INSTR_CREATE_nop3byte(3386,173366
INSTR_CREATE_nop2byte_reg(3401,174162
INSTR_CREATE_nop3byte_reg(3433,175419
#define INSTR_CREATE_nopNbyte(3462,176500
#define INSTR_CREATE_RAW_pushf(3465,176634
#define INSTR_CREATE_RAW_popf(3466,176702
#define INSTR_CREATE_RAW_pusha(3467,176770
#define INSTR_CREATE_RAW_popa(3468,176838
#define INSTR_CREATE_RAW_nop(3469,176906
#define INSTR_CREATE_RAW_nop1byte(3470,176974
# define INSTR_CREATE_RAW_nop2byte(3472,177048
# define INSTR_CREATE_RAW_nop3byte(3473,177127
# define INSTR_CREATE_RAW_nop2byte(3475,177218
# define INSTR_CREATE_RAW_nop3byte(3476,177297
#define INSTR_CREATE_RAW_nopNbyte(3478,177389

x86/instrument.c,14978
# undef ASSERT_TRUNCATE73,2957
# undef ASSERT_BITFIELD_TRUNCATE74,2981
# undef ASSERT_NOT_REACHED75,3014
# define ASSERT_TRUNCATE 76,3041
# define ASSERT_BITFIELD_TRUNCATE 77,3110
# define ASSERT_NOT_REACHED 78,3188
#define INSTRUMENT_INIT_NAME 85,3434
#define USES_DR_VERSION_NAME 92,3618
#define NEWEST_COMPATIBLE_VERSION 103,4136
DR_API const char *unique_build_number unique_build_number110,4447
typedef void (*callback_t)callback_t120,4904
typedef struct _callback_list_t 121,4938
    callback_t *callbacks;callbacks122,4972
    size_t num;123,5038
    size_t size;124,5107
} callback_list_t;125,5186
#define FAST_COPY_SIZE 145,6105
#define call_all_ret(146,6130
#define call_all(183,8834
static callback_list_t exit_callbacks 195,9411
static callback_list_t thread_init_callbacks 196,9457
static callback_list_t thread_exit_callbacks 197,9510
static callback_list_t fork_init_callbacks 199,9575
static callback_list_t bb_callbacks 201,9633
static callback_list_t trace_callbacks 202,9677
static callback_list_t end_trace_callbacks 204,9745
static callback_list_t fragdel_callbacks 206,9803
static callback_list_t restore_state_callbacks 207,9852
static callback_list_t restore_state_ex_callbacks 208,9907
static callback_list_t module_load_callbacks 209,9965
static callback_list_t module_unload_callbacks 210,10018
static callback_list_t filter_syscall_callbacks 211,10073
static callback_list_t pre_syscall_callbacks 212,10129
static callback_list_t post_syscall_callbacks 213,10182
static callback_list_t exception_callbacks 215,10251
static callback_list_t signal_callbacks 217,10308
static callback_list_t security_violation_callbacks 220,10390
static callback_list_t persist_ro_size_callbacks 222,10457
static callback_list_t persist_ro_callbacks 223,10514
static callback_list_t resurrect_ro_callbacks 224,10566
static callback_list_t persist_rx_size_callbacks 225,10620
static callback_list_t persist_rx_callbacks 226,10677
static callback_list_t resurrect_rx_callbacks 227,10729
static callback_list_t persist_rw_size_callbacks 228,10783
static callback_list_t persist_rw_callbacks 229,10840
static callback_list_t resurrect_rw_callbacks 230,10892
static callback_list_t persist_patch_callbacks 231,10946
typedef struct _client_lib_t 237,11163
    client_id_t id;238,11194
    char path[path239,11214
    shlib_handle_t lib;241,11306
    app_pc start;242,11330
    app_pc end;243,11348
    char options[options244,11364
    callback_list_t nudge_callbacks;249,11573
} client_lib_t;250,11610
static client_lib_t client_libs[client_libs255,11770
static size_t num_client_libs 256,11829
static void *persist_user_data[persist_user_data258,11865
static bool print_to_console;262,11983
static shlib_handle_t priv_kernel32;263,12013
typedef BOOL (WINAPI *kernel32_WriteFile_t)kernel32_WriteFile_t264,12050
static kernel32_WriteFile_t kernel32_WriteFile;266,12147
static bool block_client_nudge_threads 271,12247
static bool client_requested_exit;272,12295
static vm_area_vector_t *client_aux_libs;client_aux_libs285,12793
add_callback(296,13097
remove_callback(349,14767
add_client_lib(394,15930
instrument_load_client_libs(493,19693
init_client_aux_libs(536,20860
instrument_init(545,21065
free_callback_list(609,23700
void free_all_callback_lists(620,23984
instrument_exit(663,25494
is_in_client_lib(698,26577
get_client_bounds(718,27129
get_client_path_from_addr(731,27477
is_valid_client_id(745,27749
dr_register_exit_event(757,27946
dr_unregister_exit_event(763,28062
dr_register_bb_event(769,28190
dr_unregister_bb_event(782,28570
dr_register_trace_event(790,28826
dr_unregister_trace_event(803,29208
dr_register_end_trace_event(812,29484
dr_unregister_end_trace_event(824,29844
dr_register_delete_event(832,30077
dr_unregister_delete_event(843,30364
dr_register_restore_state_event(849,30519
dr_unregister_restore_state_event(862,30964
dr_register_restore_state_ex_event(870,31274
dr_unregister_restore_state_ex_event(882,31678
dr_register_thread_init_event(889,31946
dr_unregister_thread_init_event(895,32087
dr_register_thread_exit_event(901,32240
dr_unregister_thread_exit_event(907,32381
dr_register_fork_init_event(914,32546
dr_unregister_fork_init_event(920,32683
dr_register_module_load_event(927,32843
dr_unregister_module_load_event(934,33067
dr_register_module_unload_event(941,33305
dr_unregister_module_unload_event(948,33522
dr_register_exception_event(956,33768
dr_unregister_exception_event(962,33928
dr_register_signal_event(968,34105
dr_unregister_signal_event(975,34299
dr_register_filter_syscall_event(983,34528
dr_unregister_filter_syscall_event(989,34687
dr_register_pre_syscall_event(995,34858
dr_unregister_pre_syscall_event(1001,35011
dr_register_post_syscall_event(1007,35176
dr_unregister_post_syscall_event(1013,35331
dr_register_security_event(1020,35525
dr_unregister_security_event(1030,36000
dr_register_nudge_event(1041,36502
dr_unregister_nudge_event(1059,37121
dr_nudge_client_ex(1077,37806
dr_nudge_client(1103,38685
dr_is_nudge_thread(1111,38860
instrument_client_thread_init(1120,39090
instrument_thread_init(1146,40084
instrument_fork_init(1189,41576
instrument_thread_exit_event(1199,41817
instrument_thread_exit(1219,42526
dr_bb_hook_exists(1260,43766
dr_trace_hook_exists(1266,43835
dr_fragment_deleted_hook_exists(1272,43910
dr_end_trace_hook_exists(1278,43998
dr_thread_exit_hook_exists(1284,44081
dr_exit_hook_exists(1290,44168
dr_xl8_hook_exists(1296,44241
hide_tag_from_client(1303,44372
check_ilist_translations(1345,46345
instrument_basic_block(1388,48389
instrument_trace(1450,50619
instrument_fragment_deleted(1518,52978
instrument_restore_state(1543,53672
instrument_end_trace(1578,55196
create_and_initialize_module_data(1597,55712
copy_module_area_to_module_data(1650,57849
dr_copy_module_data(1680,59186
dr_free_module_data(1703,60079
instrument_module_load_trigger(1729,60969
instrument_module_load(1754,61850
instrument_module_unload(1777,62652
instrument_filter_syscall(1796,63155
instrument_pre_syscall(1810,63633
instrument_post_syscall(1831,64437
instrument_invoke_another_syscall(1842,64764
instrument_exception(1850,64973
instrument_signal(1865,65556
dr_signal_hook_exists(1880,66182
instrument_security_violation(1889,66363
instrument_nudge(2012,71059
get_num_client_threads(2088,74038
wait_for_outstanding_nudges(2100,74276
dr_standalone_init(2146,75883
dr_abort(2155,76038
dr_exit_process(2164,76210
dr_using_all_private_caches(2197,77465
dr_request_synchronized_exit(2204,77556
dr_set_process_exit_behavior(2212,77763
dr_get_options(2235,78630
dr_get_client_path(2251,78993
dr_get_client_base(2266,79284
dr_get_application_name(2280,79581
dr_get_process_id(2290,79755
dr_get_parent_id(2298,79861
dr_convert_handle_to_pid(2307,79959
dr_get_os_version(2319,80228
dr_is_wow64(2348,81497
dr_get_app_PEB(2355,81583
dr_get_time(2364,81687
dr_get_milliseconds(2371,81790
dr_get_random_value(2378,81865
dr_set_random_seed(2385,81954
dr_get_random_seed(2392,82028
dr_thread_alloc(2411,82541
dr_thread_free(2422,82842
dr_global_alloc(2435,83272
dr_global_free(2445,83484
dr_nonheap_alloc(2453,83657
dr_nonheap_free(2460,83784
raw_mem_alloc(2466,83899
raw_mem_free(2527,86289
dr_raw_mem_alloc(2563,87550
dr_raw_mem_free(2570,87681
custom_memory_shared(2576,87795
dr_custom_alloc(2672,92387
dr_custom_free(2680,92594
__wrap_malloc(2695,93077
__wrap_realloc(2707,93427
__wrap_calloc(2719,93793
__wrap_free(2730,94099
dr_memory_protect(2738,94170
dr_memory_is_readable(2775,95809
dr_query_memory(2783,96015
dr_query_memory_ex(2813,97054
dr_safe_read(2834,97728
dr_safe_write(2842,97971
dr_try_setup(2849,98131
dr_try_stop(2878,99327
dr_memory_is_dr_internal(2891,99840
dr_memory_is_in_client(2898,99940
instrument_client_lib_loaded(2904,100030
instrument_client_lib_unloaded(2919,100639
dr_load_aux_library(2932,100940
dr_lookup_aux_library_routine(2961,102010
dr_unload_aux_library(2970,102187
dr_load_aux_x64_library(3011,103553
dr_lookup_aux_x64_library_routine(3037,104490
dr_unload_aux_x64_library(3045,104717
dr_mutex_create(3063,105108
dr_mutex_destroy(3075,105390
dr_mutex_lock(3086,105658
dr_mutex_unlock(3107,106345
dr_mutex_trylock(3125,106919
dr_mutex_self_owns(3149,107726
dr_mutex_mark_as_app(3156,107836
dr_rwlock_create(3165,107974
dr_rwlock_destroy(3175,108270
dr_rwlock_read_lock(3184,108509
dr_rwlock_read_unlock(3191,108604
dr_rwlock_write_lock(3198,108703
dr_rwlock_write_unlock(3205,108800
dr_rwlock_write_trylock(3212,108901
dr_rwlock_self_owns_write_lock(3219,109011
dr_rwlock_mark_as_app(3226,109135
dr_recurlock_create(3235,109303
dr_recurlock_destroy(3245,109604
dr_recurlock_lock(3254,109846
dr_recurlock_unlock(3261,109953
dr_recurlock_trylock(3268,110062
dr_recurlock_self_owns(3275,110175
dr_recurlock_mark_as_app(3282,110296
dr_mark_safe_to_suspend(3291,110465
dr_atomic_add32_return_sum(3307,110910
dr_lookup_module(3320,111270
dr_get_main_module(3333,111560
dr_lookup_module_by_name(3342,111824
typedef struct _client_mod_iterator_list_t 3363,112679
    module_data_t *info;info3364,112724
    struct _client_mod_iterator_list_t *next;next3365,112749
} client_mod_iterator_list_t;3366,112795
    client_mod_iterator_list_t *current;current3369,112843
    client_mod_iterator_list_t *full_list;full_list3370,112884
} client_mod_iterator_t;3371,112927
dr_module_iterator_start(3376,113030
dr_module_iterator_hasnext(3409,114332
dr_module_iterator_next(3418,114628
dr_module_iterator_stop(3435,115166
dr_module_preferred_name(3459,115996
dr_lookup_module_section(3474,116363
dr_module_set_should_instrument(3489,116993
dr_module_should_instrument(3517,117999
dr_get_proc_address(3541,118766
dr_get_proc_address_ex(3552,118966
dr_create_dir(3572,119598
dr_directory_exists(3580,119744
dr_file_exists(3588,119882
dr_open_file(3598,120074
dr_close_file(3631,121075
dr_rename_file(3640,121226
dr_delete_file(3648,121374
dr_flush_file(3660,121609
dr_write_file(3670,121750
dr_read_file(3680,121945
dr_file_seek(3689,122165
dr_file_tell(3699,122495
dr_dup_file_handle(3706,122560
dr_file_size(3724,122967
dr_map_file(3731,123077
dr_unmap_file(3744,123578
dr_log(3766,124236
dr_get_logfile(3791,124856
dr_is_notify_on(3809,125252
dr_get_stdout_file(3816,125355
dr_get_stderr_file(3822,125431
dr_get_stdin_file(3828,125507
dr_write_forensics_report(3837,125614
dr_messagebox(3894,127521
dr_write_to_console(3915,128258
dr_using_console(3944,129267
dr_enable_console_printing(3957,129653
dr_printf(3998,131274
dr_fprintf(4012,131530
dr_snprintf(4026,131819
dr_vsnprintf(4042,132282
dr_snwprintf(4048,132408
dr_vsnwprintf(4059,132621
dr_sscanf(4065,132759
dr_get_token(4076,132954
dr_print_instr(4091,133449
dr_print_opnd(4103,133941
dr_get_current_drcontext(4121,134542
dr_get_thread_id(4129,134765
dr_get_dr_thread_handle(4141,135144
dr_get_tls_field(4152,135501
dr_set_tls_field(4162,135845
dr_get_dr_segment_base(4172,136204
dr_raw_tls_calloc(4179,136295
dr_raw_tls_cfree(4194,136777
dr_thread_yield(4202,136932
dr_sleep(4216,137392
dr_client_thread_set_suspendable(4230,137828
dr_suspend_all_other_threads_ex(4244,138219
dr_suspend_all_other_threads(4342,143218
dr_resume_all_other_threads(4351,143525
dr_is_thread_native(4381,144704
dr_retakeover_suspended_native_thread(4390,144930
dr_set_itimer(4407,145442
dr_get_itimer(4419,145887
instrlist_meta_preinsert(4432,146247
instrlist_meta_postinsert(4441,146503
instrlist_meta_append(4450,146758
instrlist_meta_fault_preinsert(4458,146909
instrlist_meta_fault_postinsert(4466,147095
instrlist_meta_fault_append(4474,147283
convert_va_list_to_opnd(4481,147440
dr_insert_call(4495,147917
dr_insert_call_ex(4519,148843
prepare_for_call_ex(4550,150077
cleanup_after_call_ex(4571,150769
dr_insert_clean_call_ex_varg(4610,152335
dr_insert_clean_call_ex(4751,158456
dr_insert_clean_call(4764,158851
dr_prepare_for_call(4783,159685
dr_cleanup_after_call(4792,160051
dr_swap_to_clean_stack(4804,160535
dr_restore_app_stack(4838,162207
#define SPILL_SLOT_TLS_MAX 4856,163002
#define NUM_TLS_SPILL_SLOTS 4857,163031
#define NUM_SPILL_SLOTS 4858,163084
static const ushort SPILL_SLOT_TLS_OFFS[SPILL_SLOT_TLS_OFFS4863,163472
static const reg_id_t SPILL_SLOT_MC_REG[SPILL_SLOT_MC_REG4867,163715
dr_save_reg(4874,163965
dr_restore_reg(4919,165842
dr_max_opnd_accessible_spill_slot(4957,167469
reg_spill_slot_opnd(4968,167726
dr_reg_spill_slot_opnd(4983,168242
dr_read_saved_reg(4998,168907
dr_write_saved_reg(5026,170189
dr_insert_read_tls_field(5058,171633
dr_insert_write_tls_field(5091,173041
dr_save_arith_flags(5123,174538
dr_restore_arith_flags(5138,175117
dr_save_arith_flags_to_xax(5153,175719
dr_restore_arith_flags_from_xax(5171,176325
dr_insert_call_instrumentation(5199,177379
dr_insert_mbr_instrumentation(5247,179741
dr_insert_cbr_instrumentation(5347,184396
dr_insert_ubr_instrumentation(5543,193750
dr_clobber_retaddr_after_read(5556,194167
dr_mcontext_xmm_fields_valid(5582,195178
dr_get_mcontext_priv(5592,195413
dr_get_mcontext(5697,199753
dr_set_mcontext(5705,199953
dr_redirect_execution(5747,201555
dr_redirect_native_target(5777,202679
dr_delete_fragment(5817,204143
dr_replace_fragment(5879,206778
void dr_flush_fragments(5938,209289
dr_flush_region(5986,211067
dr_unlink_flush_region(6026,213097
dr_delay_flush_region(6073,215675
dr_fragment_exists_at(6107,216797
dr_bb_exists_at(6123,217161
dr_fragment_size(6140,217600
dr_fragment_app_pc(6168,218510
dr_app_pc_for_decoding(6192,219299
dr_app_pc_from_cache_pc(6204,219485
dr_using_app_state(6225,220196
dr_switch_to_app_state(6233,220343
dr_switch_to_app_state_ex(6240,220456
dr_switch_to_dr_state(6248,220647
dr_switch_to_dr_state_ex(6255,220758
dr_mark_trace_head(6293,222373
dr_trace_head_at(6374,225557
dr_trace_exists_at(6402,226320
dr_add_prefixes_to_basic_blocks(6432,227250
dr_insert_get_seg_base(6454,228006
instrument_persist_ro_size(6514,230527
instrument_persist_ro(6559,232410
instrument_resurrect_ro(6586,233262
instrument_persist_rx_size(6619,234187
instrument_persist_rx(6637,234839
instrument_resurrect_rx(6651,235299
instrument_persist_rw_size(6665,235701
instrument_persist_rw(6683,236353
instrument_resurrect_rw(6697,236813
instrument_persist_patch(6710,237180
dr_register_persist_ro(6725,237647
dr_unregister_persist_ro(6742,238468
dr_register_persist_rx(6770,239527
dr_unregister_persist_rx(6787,240348
dr_register_persist_rw(6815,241407
dr_unregister_persist_rw(6832,242228
dr_register_persist_patch(6860,243287
dr_unregister_persist_patch(6872,243666
instrlist_insert_mov_immed_ptrsz(6885,244180
instrlist_insert_push_immed_ptrsz(6900,244799
instrlist_insert_mov_instr_addr(6910,245145
instrlist_insert_push_instr_addr(6928,245888

x86/emit_utils.c,6991
#define FRAGMENT_TAG_OFFS 69,2611
#define FRAGMENT_START_PC_OFFS 71,2747
#define FRAGMENT_COUNTER_OFFS 72,2813
#define FRAGMENT_PREFIX_SIZE_OFFS 73,2882
#define HASHLOOKUP_TAG_OFFS 75,2953
#define HASHLOOKUP_START_PC_OFFS 76,3030
#  define HASHLOOKUP_STAT_OFFS(79,3146
#  define LINKSTUB_TARGET_FRAG_OFFS 84,3294
#  define LINKSTUB_COUNT_OFFS 88,3411
#define UNPROT_OFFS(94,3603
#define POST 110,4200
#define PRE 111,4239
#define APP 112,4277
#  define FRAG_DB_SHARED(122,4598
#  define FRAG_DB_SHARED(124,4641
#define STUB_DIRECT_SIZE(194,6919
#define STUB_INDIRECT_SIZE32 200,7123
#define STUB_INDIRECT_SIZE64 202,7228
#define STUB_INDIRECT_SIZE(204,7333
#define STUB_COARSE_INDIRECT_SIZE(208,7491
#  define LINKCOUNT_INCSIZE 211,7587
#  define LINKCOUNT_INCSIZE 213,7625
#define LINKCOUNT_EFLAGS_SAVE 215,7666
#define LINKCOUNT_EFLAGS_RESTORE 216,7702
#define LINKCOUNT_FLAGSIZE 217,7741
#define LINKCOUNT_DIRECT_EXTRA(219,7820
#define LINKCOUNT_UNLINKED_ENTRY(221,7931
#define LINKCOUNT_NEVER_LINKED_SENTINEL 229,8310
exit_stub_size(235,8461
insert_relative_target(316,11781
insert_relative_jump(328,12137
insert_spill_or_restore(347,12701
insert_jmp_to_ibl(424,15874
insert_linkcount_inc(494,18687
insert_linkcount_saveflags(523,19524
insert_linkcount_restoreflags(538,19940
is_patchable_exit_stub_helper(552,20347
is_patchable_exit_stub(581,21150
is_exit_cti_stub_patchable(588,21381
bytes_for_exitstub_alignment(607,22056
extend_trace_pad_bytes(632,23062
pad_for_exitstub_alignment(659,24668
remove_nops_from_ilist(684,25742
nop_pad_ilist(714,26941
insert_inlined_ibl(828,32989
get_direct_exit_target(882,35429
insert_save_xax(898,36023
insert_restore_xax(908,36420
insert_exit_stub_other_flags(924,37102
insert_exit_stub(1085,43997
exit_cti_disp_pc(1092,44198
patch_branch(1142,45995
change_linkcount_target(1150,46221
optimize_linkcount_stub(1170,47050
patchable_exit_cti_align_offs(1256,50919
is_exit_cti_patchable(1273,51855
link_direct_exit(1324,53472
unlink_direct_exit(1418,57479
link_indirect_exit(1487,60193
linkstub_unlink_entry_offset(1568,63155
indirect_linkstub_stub_pc(1586,63704
indirect_linkstub_target(1624,65191
linkstub_cbr_disambiguate(1659,66769
cbr_fallthrough_exit_cti(1679,67354
unlink_indirect_exit(1695,68002
entrance_stub_jmp(1794,71723
coarse_is_entrance_stub(1811,72287
coarse_is_trace_head(1835,73097
entrance_stub_jmp_target(1849,73525
entrance_stub_target_tag(1860,73760
coarse_is_indirect_stub(1901,75391
coarse_cti_is_intra_fragment(1911,75667
coarse_indirect_stub_jmp_target(1943,77017
coarse_indirect_stub_size(1967,77774
entrance_stub_linked(1977,78097
patch_coarse_branch(1993,78785
link_entrance_stub(2032,80387
unlink_entrance_stub(2047,81054
entrance_stub_from_cti(2065,81715
init_patch_list(2076,81994
add_patch_entry_internal(2087,82421
add_patch_entry(2120,83768
add_patch_marker(2133,84297
remove_assembled_patch_markers(2142,84700
relocate_patch_list(2170,85511
encode_with_patch_list(2229,88161
print_patch_list(2318,91836
disassemble_with_annotations(2337,92462
patch_emitted_code(2364,93307
#define GET_IB_FTABLE(2441,96810
update_indirect_exit_stub(2450,97147
#define IBL_EFLAGS_IN_TLS(2510,99414
#define RESTORE_XAX_PREFIX(2512,99484
#define PREFIX_BASE(2515,99666
enum {PREFIX_SIZE_RESTORE_OF PREFIX_SIZE_RESTORE_OF2518,99763
      PREFIX_SIZE_FIVE_EFLAGS 2519,99819
use_ibt_prefix(2524,99932
ibl_use_target_prefix(2546,101003
fragment_prefix_size(2565,101874
insert_restore_xcx(2610,103771
insert_restore_register(2623,104339
insert_fragment_prefix(2650,105377
static uint profile_call_length 2741,109276
static int profile_call_fragment_offset 2742,109313
static int profile_call_call_offset 2743,109358
static byte profile_call_buf[profile_call_buf2744,109399
static dcontext_t *buffer_dcontext;buffer_dcontext2745,109434
profile_call_size(2749,109521
finalize_profile_call(2761,109815
insert_profile_call(2819,112250
build_profile_call_buffer(2835,112796
#define RESTORE_FROM_DC_VIA_REG(2952,117253
#define SAVE_TO_DC_VIA_REG(2957,117646
preinsert_swap_peb(3004,119998
#define RESTORE_FROM_DC(3145,127085
#define SAVE_TO_DC(3148,127270
#define OPND_TLS_FIELD(3151,127365
#define OPND_TLS_FIELD_SZ(3153,127437
#define SAVE_TO_TLS(3156,127532
#define RESTORE_FROM_TLS(3158,127613
#define SAVE_TO_REG(3161,127705
#define RESTORE_FROM_REG(3163,127788
#define OPND_DC_FIELD(3166,127882
#  define OPND_ARG1 3174,128257
#  define OPND_ARG1 3176,128310
# define OPND_ARG1 3179,128370
emit_fcache_enter_common(3293,132367
emit_fcache_enter(3521,142664
insert_shared_get_dcontext(3547,143707
insert_shared_restore_dcontext_reg(3577,145091
append_fcache_return_common(3724,150158
emit_fcache_return(3960,161005
emit_fcache_enter_shared(3978,161686
emit_fcache_return_shared(3985,161910
emit_fcache_return_coarse(4002,162552
emit_trace_head_return_coarse(4020,163275
coarse_exit_prefix_size(4051,164888
emit_coarse_exit_prefix(4070,165635
patch_coarse_exit_prefix(4219,172461
insert_save_eflags(4234,172920
insert_restore_eflags(4282,175170
append_increment_counter(4317,176854
append_empty_loop(4400,180890
instrlist_convert_to_x86(4422,181635
append_ibl_found(4436,182070
append_linkcount_incr(4591,188711
append_ibl_head(4672,193103
#define HEAD_START_PC_OFFS 4941,206128
#undef HEAD_START_PC_OFFS4948,206516
emit_inline_ibl_stub(4991,208006
#  define INSTR_CREATE_jmp_smart 5158,216060
#  define INSTR_CREATE_jmp_smart 5160,216116
emit_indirect_branch_lookup(5186,217208
update_ibl_routine(5932,253487
update_indirect_branch_lookup(5968,255218
emit_far_ibl(6052,258580
create_int_syscall_instr(6187,264708
create_syscall_instr(6208,265459
emit_shared_syscall(6400,272979
emit_dispatch_template(6937,297828
emit_shared_syscall_dispatch(6968,298819
emit_unlinked_shared_syscall_dispatch(6975,299019
link_shared_syscall_common(6990,299653
link_shared_syscall(7006,300120
unlink_shared_syscall_common(7027,300903
unlink_shared_syscall(7043,301371
emit_detach_callback_code(7143,305221
emit_detach_callback_final_jmp(7241,309808
emit_patch_syscall(7268,310666
emit_do_syscall_common(7323,313272
emit_fcache_enter_indirect(7422,316855
emit_do_callback_return(7433,317282
emit_do_clone_syscall(7465,318415
emit_do_vmkuw_syscall(7474,318797
emit_do_syscall(7487,319309
update_syscall(7499,319779
update_syscalls(7549,321523
decode_syscall_num(7567,321974
is_jmp_rel32(7617,324021
is_jmp_rel8(7632,324455
emit_new_thread_dynamo_start(7656,325129
emit_trace_head_incr(7732,328181
emit_trace_head_incr_shared(7819,332710
client_xfer_ibl_tgt(7830,332952
client_ibl_xfer_is_thread_private(7850,333947
emit_client_ibl_xfer(7861,334186
relink_client_ibl_xfer(7945,337299
link_client_ibl_xfer(7972,338311
unlink_client_ibl_xfer(7978,338414
client_clean_call_is_thread_private(7988,338671
emit_clean_call_save(7998,338829
emit_clean_call_restore(8041,340596

x86/instr.h,66717
#define _INSTR_H_ 41,2011
#define DR_REG_ENUM_COMPATIBILITY 52,2343
#define DR_FAST_IR 55,2443
# undef DR_FAST_IR62,2696
#  define INSTR_INLINE 106,4141
#  define INSTR_INLINE108,4178
    DR_REG_NULL,131,5106
    DR_REG_RAX,133,5222
    DR_REG_RAX,  DR_REG_RCX,133,5222
    DR_REG_RAX,  DR_REG_RCX,  DR_REG_RDX,133,5222
    DR_REG_RAX,  DR_REG_RCX,  DR_REG_RDX,  DR_REG_RBX,133,5222
    DR_REG_RSP,134,5277
    DR_REG_RSP,  DR_REG_RBP,134,5277
    DR_REG_RSP,  DR_REG_RBP,  DR_REG_RSI,134,5277
    DR_REG_RSP,  DR_REG_RBP,  DR_REG_RSI,  DR_REG_RDI,134,5277
    DR_REG_R8,135,5332
    DR_REG_R8,   DR_REG_R9,135,5332
    DR_REG_R8,   DR_REG_R9,   DR_REG_R10,135,5332
    DR_REG_R8,   DR_REG_R9,   DR_REG_R10,  DR_REG_R11,135,5332
    DR_REG_R12,136,5387
    DR_REG_R12,  DR_REG_R13,136,5387
    DR_REG_R12,  DR_REG_R13,  DR_REG_R14,136,5387
    DR_REG_R12,  DR_REG_R13,  DR_REG_R14,  DR_REG_R15,136,5387
    DR_REG_EAX,138,5475
    DR_REG_EAX,  DR_REG_ECX,138,5475
    DR_REG_EAX,  DR_REG_ECX,  DR_REG_EDX,138,5475
    DR_REG_EAX,  DR_REG_ECX,  DR_REG_EDX,  DR_REG_EBX,138,5475
    DR_REG_ESP,139,5530
    DR_REG_ESP,  DR_REG_EBP,139,5530
    DR_REG_ESP,  DR_REG_EBP,  DR_REG_ESI,139,5530
    DR_REG_ESP,  DR_REG_EBP,  DR_REG_ESI,  DR_REG_EDI,139,5530
    DR_REG_R8D,140,5585
    DR_REG_R8D,  DR_REG_R9D,140,5585
    DR_REG_R8D,  DR_REG_R9D,  DR_REG_R10D,140,5585
    DR_REG_R8D,  DR_REG_R9D,  DR_REG_R10D, DR_REG_R11D,140,5585
    DR_REG_R12D,141,5641
    DR_REG_R12D, DR_REG_R13D,141,5641
    DR_REG_R12D, DR_REG_R13D, DR_REG_R14D,141,5641
    DR_REG_R12D, DR_REG_R13D, DR_REG_R14D, DR_REG_R15D,141,5641
    DR_REG_AX,143,5730
    DR_REG_AX,   DR_REG_CX,143,5730
    DR_REG_AX,   DR_REG_CX,   DR_REG_DX,143,5730
    DR_REG_AX,   DR_REG_CX,   DR_REG_DX,   DR_REG_BX,143,5730
    DR_REG_SP,144,5784
    DR_REG_SP,   DR_REG_BP,144,5784
    DR_REG_SP,   DR_REG_BP,   DR_REG_SI,144,5784
    DR_REG_SP,   DR_REG_BP,   DR_REG_SI,   DR_REG_DI,144,5784
    DR_REG_R8W,145,5838
    DR_REG_R8W,  DR_REG_R9W,145,5838
    DR_REG_R8W,  DR_REG_R9W,  DR_REG_R10W,145,5838
    DR_REG_R8W,  DR_REG_R9W,  DR_REG_R10W, DR_REG_R11W,145,5838
    DR_REG_R12W,146,5894
    DR_REG_R12W, DR_REG_R13W,146,5894
    DR_REG_R12W, DR_REG_R13W, DR_REG_R14W,146,5894
    DR_REG_R12W, DR_REG_R13W, DR_REG_R14W, DR_REG_R15W,146,5894
    DR_REG_AL,148,5982
    DR_REG_AL,   DR_REG_CL,148,5982
    DR_REG_AL,   DR_REG_CL,   DR_REG_DL,148,5982
    DR_REG_AL,   DR_REG_CL,   DR_REG_DL,   DR_REG_BL,148,5982
    DR_REG_AH,149,6036
    DR_REG_AH,   DR_REG_CH,149,6036
    DR_REG_AH,   DR_REG_CH,   DR_REG_DH,149,6036
    DR_REG_AH,   DR_REG_CH,   DR_REG_DH,   DR_REG_BH,149,6036
    DR_REG_R8L,150,6090
    DR_REG_R8L,  DR_REG_R9L,150,6090
    DR_REG_R8L,  DR_REG_R9L,  DR_REG_R10L,150,6090
    DR_REG_R8L,  DR_REG_R9L,  DR_REG_R10L, DR_REG_R11L,150,6090
    DR_REG_R12L,151,6146
    DR_REG_R12L, DR_REG_R13L,151,6146
    DR_REG_R12L, DR_REG_R13L, DR_REG_R14L,151,6146
    DR_REG_R12L, DR_REG_R13L, DR_REG_R14L, DR_REG_R15L,151,6146
    DR_REG_SPL,152,6202
    DR_REG_SPL,  DR_REG_BPL,152,6202
    DR_REG_SPL,  DR_REG_BPL,  DR_REG_SIL,152,6202
    DR_REG_SPL,  DR_REG_BPL,  DR_REG_SIL,  DR_REG_DIL,152,6202
    DR_REG_MM0,154,6278
    DR_REG_MM0,  DR_REG_MM1,154,6278
    DR_REG_MM0,  DR_REG_MM1,  DR_REG_MM2,154,6278
    DR_REG_MM0,  DR_REG_MM1,  DR_REG_MM2,  DR_REG_MM3,154,6278
    DR_REG_MM4,155,6333
    DR_REG_MM4,  DR_REG_MM5,155,6333
    DR_REG_MM4,  DR_REG_MM5,  DR_REG_MM6,155,6333
    DR_REG_MM4,  DR_REG_MM5,  DR_REG_MM6,  DR_REG_MM7,155,6333
    DR_REG_XMM0,157,6410
    DR_REG_XMM0, DR_REG_XMM1,157,6410
    DR_REG_XMM0, DR_REG_XMM1, DR_REG_XMM2,157,6410
    DR_REG_XMM0, DR_REG_XMM1, DR_REG_XMM2, DR_REG_XMM3,157,6410
    DR_REG_XMM4,158,6466
    DR_REG_XMM4, DR_REG_XMM5,158,6466
    DR_REG_XMM4, DR_REG_XMM5, DR_REG_XMM6,158,6466
    DR_REG_XMM4, DR_REG_XMM5, DR_REG_XMM6, DR_REG_XMM7,158,6466
    DR_REG_XMM8,159,6522
    DR_REG_XMM8, DR_REG_XMM9,159,6522
    DR_REG_XMM8, DR_REG_XMM9, DR_REG_XMM10,159,6522
    DR_REG_XMM8, DR_REG_XMM9, DR_REG_XMM10,DR_REG_XMM11,159,6522
    DR_REG_XMM12,160,6579
    DR_REG_XMM12,DR_REG_XMM13,160,6579
    DR_REG_XMM12,DR_REG_XMM13,DR_REG_XMM14,160,6579
    DR_REG_XMM12,DR_REG_XMM13,DR_REG_XMM14,DR_REG_XMM15,160,6579
    DR_REG_ST0,162,6671
    DR_REG_ST0,  DR_REG_ST1,162,6671
    DR_REG_ST0,  DR_REG_ST1,  DR_REG_ST2,162,6671
    DR_REG_ST0,  DR_REG_ST1,  DR_REG_ST2,  DR_REG_ST3,162,6671
    DR_REG_ST4,163,6726
    DR_REG_ST4,  DR_REG_ST5,163,6726
    DR_REG_ST4,  DR_REG_ST5,  DR_REG_ST6,163,6726
    DR_REG_ST4,  DR_REG_ST5,  DR_REG_ST6,  DR_REG_ST7,163,6726
    DR_SEG_ES,165,6848
    DR_SEG_ES,   DR_SEG_CS,165,6848
    DR_SEG_ES,   DR_SEG_CS,   DR_SEG_SS,165,6848
    DR_SEG_ES,   DR_SEG_CS,   DR_SEG_SS,   DR_SEG_DS,165,6848
    DR_SEG_ES,   DR_SEG_CS,   DR_SEG_SS,   DR_SEG_DS,   DR_SEG_FS,165,6848
    DR_SEG_ES,   DR_SEG_CS,   DR_SEG_SS,   DR_SEG_DS,   DR_SEG_FS,   DR_SEG_GS,165,6848
    DR_REG_DR0,167,7017
    DR_REG_DR0,  DR_REG_DR1,167,7017
    DR_REG_DR0,  DR_REG_DR1,  DR_REG_DR2,167,7017
    DR_REG_DR0,  DR_REG_DR1,  DR_REG_DR2,  DR_REG_DR3,167,7017
    DR_REG_DR4,168,7072
    DR_REG_DR4,  DR_REG_DR5,168,7072
    DR_REG_DR4,  DR_REG_DR5,  DR_REG_DR6,168,7072
    DR_REG_DR4,  DR_REG_DR5,  DR_REG_DR6,  DR_REG_DR7,168,7072
    DR_REG_DR8,169,7127
    DR_REG_DR8,  DR_REG_DR9,169,7127
    DR_REG_DR8,  DR_REG_DR9,  DR_REG_DR10,169,7127
    DR_REG_DR8,  DR_REG_DR9,  DR_REG_DR10, DR_REG_DR11,169,7127
    DR_REG_DR12,170,7183
    DR_REG_DR12, DR_REG_DR13,170,7183
    DR_REG_DR12, DR_REG_DR13, DR_REG_DR14,170,7183
    DR_REG_DR12, DR_REG_DR13, DR_REG_DR14, DR_REG_DR15,170,7183
    DR_REG_CR0,172,7300
    DR_REG_CR0,  DR_REG_CR1,172,7300
    DR_REG_CR0,  DR_REG_CR1,  DR_REG_CR2,172,7300
    DR_REG_CR0,  DR_REG_CR1,  DR_REG_CR2,  DR_REG_CR3,172,7300
    DR_REG_CR4,173,7355
    DR_REG_CR4,  DR_REG_CR5,173,7355
    DR_REG_CR4,  DR_REG_CR5,  DR_REG_CR6,173,7355
    DR_REG_CR4,  DR_REG_CR5,  DR_REG_CR6,  DR_REG_CR7,173,7355
    DR_REG_CR8,174,7411
    DR_REG_CR8,  DR_REG_CR9,174,7411
    DR_REG_CR8,  DR_REG_CR9,  DR_REG_CR10,174,7411
    DR_REG_CR8,  DR_REG_CR9,  DR_REG_CR10, DR_REG_CR11,174,7411
    DR_REG_CR12,175,7467
    DR_REG_CR12, DR_REG_CR13,175,7467
    DR_REG_CR12, DR_REG_CR13, DR_REG_CR14,175,7467
    DR_REG_CR12, DR_REG_CR13, DR_REG_CR14, DR_REG_CR15,175,7467
    DR_REG_INVALID,176,7523
    DR_REG_YMM0,185,7841
    DR_REG_YMM0, DR_REG_YMM1,185,7841
    DR_REG_YMM0, DR_REG_YMM1, DR_REG_YMM2,185,7841
    DR_REG_YMM0, DR_REG_YMM1, DR_REG_YMM2, DR_REG_YMM3,185,7841
    DR_REG_YMM4,186,7897
    DR_REG_YMM4, DR_REG_YMM5,186,7897
    DR_REG_YMM4, DR_REG_YMM5, DR_REG_YMM6,186,7897
    DR_REG_YMM4, DR_REG_YMM5, DR_REG_YMM6, DR_REG_YMM7,186,7897
    DR_REG_YMM8,187,7953
    DR_REG_YMM8, DR_REG_YMM9,187,7953
    DR_REG_YMM8, DR_REG_YMM9, DR_REG_YMM10,187,7953
    DR_REG_YMM8, DR_REG_YMM9, DR_REG_YMM10,DR_REG_YMM11,187,7953
    DR_REG_YMM12,188,8010
    DR_REG_YMM12,DR_REG_YMM13,188,8010
    DR_REG_YMM12,DR_REG_YMM13,DR_REG_YMM14,188,8010
    DR_REG_YMM12,DR_REG_YMM13,DR_REG_YMM14,DR_REG_YMM15,188,8010
typedef byte reg_id_t;192,8149
typedef byte opnd_size_t;193,8208
# define DR_REG_XAX 197,8343
# define DR_REG_XCX 198,8429
# define DR_REG_XDX 199,8515
# define DR_REG_XBX 200,8601
# define DR_REG_XSP 201,8687
# define DR_REG_XBP 202,8773
# define DR_REG_XSI 203,8859
# define DR_REG_XDI 204,8945
# define DR_REG_XAX 206,9037
# define DR_REG_XCX 207,9123
# define DR_REG_XDX 208,9209
# define DR_REG_XBX 209,9295
# define DR_REG_XSP 210,9381
# define DR_REG_XBP 211,9467
# define DR_REG_XSI 212,9553
# define DR_REG_XDI 213,9639
#define DR_REG_START_GPR 222,9883
# define DR_REG_STOP_GPR 224,9976
# define DR_REG_STOP_GPR 226,10062
#define DR_NUM_GPR_REGS 229,10185
#define DR_REG_START_64 230,10246
#define DR_REG_STOP_64 231,10338
#define DR_REG_START_32 232,10430
#define DR_REG_STOP_32 233,10522
#define DR_REG_START_16 234,10614
#define DR_REG_STOP_16 235,10706
#define DR_REG_START_8 236,10798
#define DR_REG_STOP_8 237,10889
#define DR_REG_START_8HL 238,10980
#define DR_REG_STOP_8HL 239,11072
#define DR_REG_START_x86_8 240,11164
#define DR_REG_STOP_x86_8 241,11256
#define DR_REG_START_x64_8 242,11347
#define DR_REG_STOP_x64_8 243,11439
#define DR_REG_START_MMX 244,11530
#define DR_REG_STOP_MMX 245,11611
#define DR_REG_START_XMM 246,11692
#define DR_REG_STOP_XMM 247,11773
#define DR_REG_START_YMM 248,11854
#define DR_REG_STOP_YMM 249,11935
#define DR_REG_START_FLOAT 250,12016
#define DR_REG_STOP_FLOAT 251,12108
#define DR_REG_START_SEGMENT 252,12200
#define DR_REG_STOP_SEGMENT 253,12285
#define DR_REG_START_DR 254,12370
#define DR_REG_STOP_DR 255,12453
#define DR_REG_START_CR 256,12536
#define DR_REG_STOP_CR 257,12621
#define DR_REG_LAST_VALID_ENUM 262,12807
#define DR_REG_LAST_ENUM 263,12851
#define REG_START_SPILL 265,12952
#define REG_STOP_SPILL 266,12989
#define REG_SPILL_NUM 267,13026
# define REG_NULL 276,13408
# define REG_RAX 277,13449
# define REG_RCX 278,13489
# define REG_RDX 279,13529
# define REG_RBX 280,13569
# define REG_RSP 281,13609
# define REG_RBP 282,13649
# define REG_RSI 283,13689
# define REG_RDI 284,13729
# define REG_R8 285,13769
# define REG_R9 286,13808
# define REG_R10 287,13847
# define REG_R11 288,13887
# define REG_R12 289,13927
# define REG_R13 290,13967
# define REG_R14 291,14007
# define REG_R15 292,14047
# define REG_EAX 293,14087
# define REG_ECX 294,14127
# define REG_EDX 295,14167
# define REG_EBX 296,14207
# define REG_ESP 297,14247
# define REG_EBP 298,14287
# define REG_ESI 299,14327
# define REG_EDI 300,14367
# define REG_R8D 301,14407
# define REG_R9D 302,14447
# define REG_R10D 303,14487
# define REG_R11D 304,14528
# define REG_R12D 305,14569
# define REG_R13D 306,14610
# define REG_R14D 307,14651
# define REG_R15D 308,14692
# define REG_AX 309,14733
# define REG_CX 310,14772
# define REG_DX 311,14811
# define REG_BX 312,14850
# define REG_SP 313,14889
# define REG_BP 314,14928
# define REG_SI 315,14967
# define REG_DI 316,15006
# define REG_R8W 317,15045
# define REG_R9W 318,15085
# define REG_R10W 319,15125
# define REG_R11W 320,15166
# define REG_R12W 321,15207
# define REG_R13W 322,15248
# define REG_R14W 323,15289
# define REG_R15W 324,15330
# define REG_AL 325,15371
# define REG_CL 326,15410
# define REG_DL 327,15449
# define REG_BL 328,15488
# define REG_AH 329,15527
# define REG_CH 330,15566
# define REG_DH 331,15605
# define REG_BH 332,15644
# define REG_R8L 333,15683
# define REG_R9L 334,15723
# define REG_R10L 335,15763
# define REG_R11L 336,15804
# define REG_R12L 337,15845
# define REG_R13L 338,15886
# define REG_R14L 339,15927
# define REG_R15L 340,15968
# define REG_SPL 341,16009
# define REG_BPL 342,16049
# define REG_SIL 343,16089
# define REG_DIL 344,16129
# define REG_MM0 345,16169
# define REG_MM1 346,16209
# define REG_MM2 347,16249
# define REG_MM3 348,16289
# define REG_MM4 349,16329
# define REG_MM5 350,16369
# define REG_MM6 351,16409
# define REG_MM7 352,16449
# define REG_XMM0 353,16489
# define REG_XMM1 354,16530
# define REG_XMM2 355,16571
# define REG_XMM3 356,16612
# define REG_XMM4 357,16653
# define REG_XMM5 358,16694
# define REG_XMM6 359,16735
# define REG_XMM7 360,16776
# define REG_XMM8 361,16817
# define REG_XMM9 362,16858
# define REG_XMM10 363,16899
# define REG_XMM11 364,16941
# define REG_XMM12 365,16983
# define REG_XMM13 366,17025
# define REG_XMM14 367,17067
# define REG_XMM15 368,17109
# define REG_ST0 369,17151
# define REG_ST1 370,17191
# define REG_ST2 371,17231
# define REG_ST3 372,17271
# define REG_ST4 373,17311
# define REG_ST5 374,17351
# define REG_ST6 375,17391
# define REG_ST7 376,17431
# define SEG_ES 377,17471
# define SEG_CS 378,17510
# define SEG_SS 379,17549
# define SEG_DS 380,17588
# define SEG_FS 381,17627
# define SEG_GS 382,17666
# define REG_DR0 383,17705
# define REG_DR1 384,17745
# define REG_DR2 385,17785
# define REG_DR3 386,17825
# define REG_DR4 387,17865
# define REG_DR5 388,17905
# define REG_DR6 389,17945
# define REG_DR7 390,17985
# define REG_DR8 391,18025
# define REG_DR9 392,18065
# define REG_DR10 393,18105
# define REG_DR11 394,18146
# define REG_DR12 395,18187
# define REG_DR13 396,18228
# define REG_DR14 397,18269
# define REG_DR15 398,18310
# define REG_CR0 399,18351
# define REG_CR1 400,18391
# define REG_CR2 401,18431
# define REG_CR3 402,18471
# define REG_CR4 403,18511
# define REG_CR5 404,18551
# define REG_CR6 405,18591
# define REG_CR7 406,18631
# define REG_CR8 407,18671
# define REG_CR9 408,18711
# define REG_CR10 409,18751
# define REG_CR11 410,18792
# define REG_CR12 411,18833
# define REG_CR13 412,18874
# define REG_CR14 413,18915
# define REG_CR15 414,18956
# define REG_INVALID 415,18997
# define REG_XAX 416,19041
# define REG_XCX 417,19081
# define REG_XDX 418,19121
# define REG_XBX 419,19161
# define REG_XSP 420,19201
# define REG_XBP 421,19241
# define REG_XSI 422,19281
# define REG_XDI 423,19321
# define REG_START_64 424,19361
# define REG_STOP_64 425,19406
# define REG_START_32 426,19450
# define REG_STOP_32 427,19495
# define REG_START_16 428,19539
# define REG_STOP_16 429,19584
# define REG_START_8 430,19628
# define REG_STOP_8 431,19672
# define REG_START_8HL 432,19715
# define REG_STOP_8HL 433,19761
# define REG_START_x86_8 434,19806
# define REG_STOP_x86_8 435,19854
# define REG_START_x64_8 436,19901
# define REG_STOP_x64_8 437,19949
# define REG_START_MMX 438,19996
# define REG_STOP_MMX 439,20042
# define REG_START_YMM 440,20087
# define REG_STOP_YMM 441,20133
# define REG_START_XMM 442,20178
# define REG_STOP_XMM 443,20224
# define REG_START_FLOAT 444,20269
# define REG_STOP_FLOAT 445,20317
# define REG_START_SEGMENT 446,20364
# define REG_STOP_SEGMENT 447,20414
# define REG_START_DR 448,20463
# define REG_STOP_DR 449,20508
# define REG_START_CR 450,20552
# define REG_STOP_CR 451,20597
# define REG_LAST_VALID_ENUM 452,20641
# define REG_LAST_ENUM 453,20693
# define REG_YMM0 454,20739
# define REG_YMM1 455,20780
# define REG_YMM2 456,20821
# define REG_YMM3 457,20862
# define REG_YMM4 458,20903
# define REG_YMM5 459,20944
# define REG_YMM6 460,20985
# define REG_YMM7 461,21026
# define REG_YMM8 462,21067
# define REG_YMM9 463,21108
# define REG_YMM10 464,21149
# define REG_YMM11 465,21191
# define REG_YMM12 466,21233
# define REG_YMM13 467,21275
# define REG_YMM14 468,21317
# define REG_YMM15 469,21359
# define INT8_MIN 474,21482
# define INT8_MAX 475,21512
# define INT16_MIN 476,21542
# define INT16_MAX 477,21571
# define INT32_MIN 478,21600
# define INT32_MAX 479,21628
# define REG_SPECIFIER_BITS 490,21840
# define SCALE_SPECIFIER_BITS 491,21870
struct _opnd_t 501,22344
    byte kind;502,22361
    opnd_size_t size;509,22664
        ushort far_pc_seg_selector;514,22851
        reg_id_t segment : REG_SPECIFIER_BITS;516,23003
        ushort disp;518,23155
        ushort shift;519,23207
    } seg;520,23255
        ptr_int_t immed_int;524,23353
        float immed_float;525,23409
        app_pc pc;530,23673
        instr_t *instr;instr535,23941
        reg_id_t reg;536,24026
            int disp;538,24090
            reg_id_t base_reg : REG_SPECIFIER_BITS;539,24112
            reg_id_t index_reg : REG_SPECIFIER_BITS;540,24164
            byte scale : SCALE_SPECIFIER_BITS;544,24430
            byte/*bool*/ encode_zero_disp 545,24477
            byte/*bool*/ force_full_disp 546,24524
            byte/*bool*/ disp_short_addr 547,24612
        } base_disp;548,24700
        void *addr;addr549,24753
    } value;550,24823
struct _opnd_t 555,24906
    uint black_box_uint;557,24935
    uint64 black_box_uint64;558,24960
    uint black_box_uint[black_box_uint560,24996
#define EXPECTED_SIZEOF_OPND 573,25520
    NULL_kind,580,25756
    IMMED_INTEGER_kind,581,25771
    IMMED_FLOAT_kind,582,25795
    PC_kind,583,25817
    INSTR_kind,584,25830
    REG_kind,585,25846
    BASE_DISP_kind,586,25860
    FAR_PC_kind,587,25944
    FAR_INSTR_kind,588,26013
    REL_ADDR_kind,590,26093
    ABS_ADDR_kind,591,26149
    MEM_INSTR_kind,593,26216
    LAST_kind,594,26236
    INSTR_DIRECT_EXIT 1691,58002
    INSTR_DIRECT_EXIT           = LINK_DIRECT,1691,58002
    INSTR_INDIRECT_EXIT 1692,58049
    INSTR_INDIRECT_EXIT         = LINK_INDIRECT,1692,58049
    INSTR_RETURN_EXIT 1693,58098
    INSTR_RETURN_EXIT           = LINK_RETURN,1693,58098
    INSTR_CALL_EXIT 1697,58296
    INSTR_CALL_EXIT             = LINK_CALL,1697,58296
    INSTR_JMP_EXIT 1698,58341
    INSTR_JMP_EXIT              = LINK_JMP,1698,58341
    INSTR_IND_JMP_PLT_EXIT 1699,58385
    INSTR_IND_JMP_PLT_EXIT      = (INSTR_JMP_EXIT 1699,58385
    INSTR_IND_JMP_PLT_EXIT      = (INSTR_JMP_EXIT | INSTR_CALL_EXIT)1699,58385
    INSTR_FAR_EXIT 1700,58455
    INSTR_FAR_EXIT              = LINK_FAR,1700,58455
    INSTR_BRANCH_SPECIAL_EXIT 1701,58499
    INSTR_BRANCH_SPECIAL_EXIT   = LINK_SPECIAL_EXIT,1701,58499
    INSTR_BRANCH_TARGETS_PREFIX 1703,58575
    INSTR_BRANCH_TARGETS_PREFIX = LINK_TARGET_PREFIX,1703,58575
    INSTR_TRACE_CMP_EXIT 1709,58814
    INSTR_TRACE_CMP_EXIT        = LINK_TRACE_CMP,1709,58814
    INSTR_CALLBACK_RETURN 1712,58886
    INSTR_CALLBACK_RETURN       = LINK_CALLBACK_RETURN,1712,58886
    INSTR_NI_SYSCALL_INT 1714,58948
    INSTR_NI_SYSCALL_INT        = LINK_NI_SYSCALL_INT,1714,58948
    INSTR_NI_SYSCALL 1716,59010
    INSTR_NI_SYSCALL            = LINK_NI_SYSCALL,1716,59010
    INSTR_NI_SYSCALL_ALL 1717,59061
    INSTR_NI_SYSCALL_ALL        = LINK_NI_SYSCALL_ALL,1717,59061
    EXIT_CTI_TYPES 1719,59136
    EXIT_CTI_TYPES              = (INSTR_DIRECT_EXIT 1719,59136
    EXIT_CTI_TYPES              = (INSTR_DIRECT_EXIT | INSTR_INDIRECT_EXIT 1719,59136
                                   INSTR_RETURN_EXIT 1720,59213
                                   INSTR_RETURN_EXIT | INSTR_CALL_EXIT 1720,59213
                                   INSTR_JMP_EXIT 1721,59291
                                   INSTR_FAR_EXIT 1722,59343
                                   INSTR_BRANCH_SPECIAL_EXIT 1723,59395
                                   INSTR_BRANCH_TARGETS_PREFIX 1725,59481
                                   INSTR_TRACE_CMP_EXIT 1728,59564
                                   INSTR_CALLBACK_RETURN 1731,59644
                                   INSTR_NI_SYSCALL_INT 1733,59709
                                   INSTR_NI_SYSCALL)1735,59774
    INSTR_OPERANDS_VALID 1738,59886
    INSTR_OPERANDS_VALID        = 0x00010000,x000100001738,59886
    INSTR_FIRST_NON_LINK_SHARED_FLAG 1740,59952
    INSTR_FIRST_NON_LINK_SHARED_FLAG = INSTR_OPERANDS_VALID,1740,59952
    INSTR_EFLAGS_VALID 1741,60013
    INSTR_EFLAGS_VALID          = 0x00020000,x000200001741,60013
    INSTR_EFLAGS_6_VALID 1742,60059
    INSTR_EFLAGS_6_VALID        = 0x00040000,x000400001742,60059
    INSTR_RAW_BITS_VALID 1743,60105
    INSTR_RAW_BITS_VALID        = 0x00080000,x000800001743,60105
    INSTR_RAW_BITS_ALLOCATED 1744,60151
    INSTR_RAW_BITS_ALLOCATED    = 0x00100000,x001000001744,60151
    INSTR_DO_NOT_MANGLE 1746,60223
    INSTR_DO_NOT_MANGLE         = 0x00200000,x002000001746,60223
    INSTR_HAS_CUSTOM_STUB 1748,60293
    INSTR_HAS_CUSTOM_STUB       = 0x00400000,x004000001748,60293
    INSTR_IND_CALL_DIRECT 1750,60420
    INSTR_IND_CALL_DIRECT       = 0x00800000,x008000001750,60420
    INSTR_SHARED_SYSCALL 1753,60561
    INSTR_SHARED_SYSCALL        = 0x01000000,x010000001753,60561
    INSTR_CLOBBER_RETADDR 1757,60639
    INSTR_CLOBBER_RETADDR       = 0x02000000,x020000001757,60639
    INSTR_HOT_PATCHABLE 1764,60979
    INSTR_HOT_PATCHABLE         = 0x04000000,x040000001764,60979
    INSTR_IGNORE_INVALID 1767,61111
    INSTR_IGNORE_INVALID        = 0x08000000,x080000001767,61111
    INSTR_DO_NOT_EMIT 1772,61368
    INSTR_DO_NOT_EMIT           = 0x10000000,x100000001772,61368
    INSTR_RIP_REL_VALID 1774,61491
    INSTR_RIP_REL_VALID         = 0x20000000,x200000001774,61491
    INSTR_X86_MODE 1777,61608
    INSTR_X86_MODE              = 0x40000000,x400000001777,61608
    INSTR_OUR_MANGLING 1780,61736
    INSTR_OUR_MANGLING          = 0x80000000,x800000001780,61736
typedef struct _dr_instr_label_data_t 1790,62001
    ptr_uint_t data[data1791,62041
} dr_instr_label_data_t;1792,62121
struct _instr_t 1809,62812
    uint    flags;1811,62883
    byte    *bytes;bytes1814,62973
    uint    length;1815,62993
    app_pc  translation;1818,63058
    uint    opcode;1820,63084
    byte    rip_rel_pos;1824,63203
    byte    num_dsts;1831,63443
    byte    num_srcs;1832,63465
            opnd_t    src0;1840,63771
            opnd_t    *srcs;srcs1841,63799
            opnd_t    *dsts;dsts1842,63868
        dr_instr_label_data_t label_data;1844,63908
    uint    prefixes;1847,63958
    uint    eflags;1848,64028
    void *note;note1855,64348
    instr_t   *prev;prev1858,64431
    instr_t   *next;next1859,64452
    DR_FP_STATE,3233,104512
    DR_FP_MOVE,3234,104595
    DR_FP_CONVERT,3235,104680
    DR_FP_MATH,3236,104750
} dr_fp_type_t;3237,104824
#define EFLAGS_READ_CF 3732,121887
#define EFLAGS_READ_PF 3733,121967
#define EFLAGS_READ_AF 3734,122047
#define EFLAGS_READ_ZF 3735,122127
#define EFLAGS_READ_SF 3736,122207
#define EFLAGS_READ_TF 3737,122287
#define EFLAGS_READ_IF 3738,122367
#define EFLAGS_READ_DF 3739,122447
#define EFLAGS_READ_OF 3740,122527
#define EFLAGS_READ_NT 3741,122607
#define EFLAGS_READ_RF 3742,122687
#define EFLAGS_WRITE_CF 3743,122767
#define EFLAGS_WRITE_PF 3744,122848
#define EFLAGS_WRITE_AF 3745,122929
#define EFLAGS_WRITE_ZF 3746,123010
#define EFLAGS_WRITE_SF 3747,123091
#define EFLAGS_WRITE_TF 3748,123172
#define EFLAGS_WRITE_IF 3749,123253
#define EFLAGS_WRITE_DF 3750,123334
#define EFLAGS_WRITE_OF 3751,123415
#define EFLAGS_WRITE_NT 3752,123496
#define EFLAGS_WRITE_RF 3753,123577
#define EFLAGS_READ_ALL 3755,123659
#define EFLAGS_WRITE_ALL 3756,123724
#define EFLAGS_READ_6 3759,123923
#define EFLAGS_WRITE_6 3761,124023
#define EFLAGS_WRITE_TO_READ(3764,124142
#define EFLAGS_READ_TO_WRITE(3766,124268
    EFLAGS_CF 3774,124487
    EFLAGS_CF = 0x00000001,x000000013774,124487
    EFLAGS_PF 3775,124574
    EFLAGS_PF = 0x00000004,x000000043775,124574
    EFLAGS_AF 3776,124662
    EFLAGS_AF = 0x00000010,x000000103776,124662
    EFLAGS_ZF 3777,124753
    EFLAGS_ZF = 0x00000040,x000000403777,124753
    EFLAGS_SF 3778,124839
    EFLAGS_SF = 0x00000080,x000000803778,124839
    EFLAGS_DF 3779,124925
    EFLAGS_DF = 0x00000400,x000004003779,124925
    EFLAGS_OF 3780,125016
    EFLAGS_OF = 0x00000800,x000008003780,125016
#define PC_RELATIVE_TARGET(3786,125223
    RAW_OPCODE_nop 3789,125298
    RAW_OPCODE_nop             = 0x90,x903789,125298
    RAW_OPCODE_jmp_short 3790,125337
    RAW_OPCODE_jmp_short       = 0xeb,xeb3790,125337
    RAW_OPCODE_call 3791,125376
    RAW_OPCODE_call            = 0xe8,xe83791,125376
    RAW_OPCODE_ret 3792,125415
    RAW_OPCODE_ret             = 0xc3,xc33792,125415
    RAW_OPCODE_jmp 3793,125454
    RAW_OPCODE_jmp             = 0xe9,xe93793,125454
    RAW_OPCODE_push_imm32 3794,125493
    RAW_OPCODE_push_imm32      = 0x68,x683794,125493
    RAW_OPCODE_jcc_short_start 3795,125532
    RAW_OPCODE_jcc_short_start = 0x70,x703795,125532
    RAW_OPCODE_jcc_short_end 3796,125571
    RAW_OPCODE_jcc_short_end   = 0x7f,x7f3796,125571
    RAW_OPCODE_jcc_byte1 3797,125610
    RAW_OPCODE_jcc_byte1       = 0x0f,x0f3797,125610
    RAW_OPCODE_jcc_byte2_start 3798,125649
    RAW_OPCODE_jcc_byte2_start = 0x80,x803798,125649
    RAW_OPCODE_jcc_byte2_end 3799,125688
    RAW_OPCODE_jcc_byte2_end   = 0x8f,x8f3799,125688
    RAW_OPCODE_loop_start 3800,125727
    RAW_OPCODE_loop_start      = 0xe0,xe03800,125727
    RAW_OPCODE_loop_end 3801,125766
    RAW_OPCODE_loop_end        = 0xe3,xe33801,125766
    RAW_OPCODE_lea 3802,125805
    RAW_OPCODE_lea             = 0x8d,x8d3802,125805
    RAW_PREFIX_jcc_not_taken 3803,125844
    RAW_PREFIX_jcc_not_taken   = 0x2e,x2e3803,125844
    RAW_PREFIX_jcc_taken 3804,125883
    RAW_PREFIX_jcc_taken       = 0x3e,x3e3804,125883
    RAW_PREFIX_lock 3805,125922
    RAW_PREFIX_lock            = 0xf0,xf03805,125922
    FS_SEG_OPCODE 3809,126006
    FS_SEG_OPCODE        = 0x64,x643809,126006
    GS_SEG_OPCODE 3810,126039
    GS_SEG_OPCODE        = 0x65,x653810,126039
    TLS_SEG_OPCODE 3818,126359
    TLS_SEG_OPCODE       = GS_SEG_OPCODE,3818,126359
    TLS_SEG_OPCODE 3820,126407
    TLS_SEG_OPCODE       = FS_SEG_OPCODE,3820,126407
    DATA_PREFIX_OPCODE 3823,126457
    DATA_PREFIX_OPCODE   = 0x66,x663823,126457
    ADDR_PREFIX_OPCODE 3824,126490
    ADDR_PREFIX_OPCODE   = 0x67,x673824,126490
    REPNE_PREFIX_OPCODE 3825,126523
    REPNE_PREFIX_OPCODE  = 0xf2,xf23825,126523
    REP_PREFIX_OPCODE 3826,126556
    REP_PREFIX_OPCODE    = 0xf3,xf33826,126556
    REX_PREFIX_BASE_OPCODE 3827,126589
    REX_PREFIX_BASE_OPCODE = 0x40,x403827,126589
    REX_PREFIX_W_OPFLAG 3828,126624
    REX_PREFIX_W_OPFLAG    = 0x8,x83828,126624
    REX_PREFIX_R_OPFLAG 3829,126658
    REX_PREFIX_R_OPFLAG    = 0x4,x43829,126658
    REX_PREFIX_X_OPFLAG 3830,126692
    REX_PREFIX_X_OPFLAG    = 0x2,x23830,126692
    REX_PREFIX_B_OPFLAG 3831,126726
    REX_PREFIX_B_OPFLAG    = 0x1,x13831,126726
    REX_PREFIX_ALL_OPFLAGS 3832,126760
    REX_PREFIX_ALL_OPFLAGS = 0xf,xf3832,126760
    MOV_REG2MEM_OPCODE 3833,126794
    MOV_REG2MEM_OPCODE   = 0x89,x893833,126794
    MOV_MEM2REG_OPCODE 3834,126827
    MOV_MEM2REG_OPCODE   = 0x8b,x8b3834,126827
    MOV_XAX2MEM_OPCODE 3835,126860
    MOV_XAX2MEM_OPCODE   = 0xa3,xa33835,126860
    MOV_MEM2XAX_OPCODE 3836,126908
    MOV_MEM2XAX_OPCODE   = 0xa1,xa13836,126908
    MOV_IMM2XAX_OPCODE 3837,126956
    MOV_IMM2XAX_OPCODE   = 0xb8,xb83837,126956
    MOV_IMM2XBX_OPCODE 3838,127004
    MOV_IMM2XBX_OPCODE   = 0xbb,xbb3838,127004
    MOV_IMM2MEM_OPCODE 3839,127052
    MOV_IMM2MEM_OPCODE   = 0xc7,xc73839,127052
    JECXZ_OPCODE 3840,127101
    JECXZ_OPCODE         = 0xe3,xe33840,127101
    JMP_SHORT_OPCODE 3841,127134
    JMP_SHORT_OPCODE     = 0xeb,xeb3841,127134
    JMP_OPCODE 3842,127167
    JMP_OPCODE           = 0xe9,xe93842,127167
    JNE_OPCODE_1 3843,127200
    JNE_OPCODE_1         = 0x0f,x0f3843,127200
    SAHF_OPCODE 3844,127233
    SAHF_OPCODE          = 0x9e,x9e3844,127233
    LAHF_OPCODE 3845,127266
    LAHF_OPCODE          = 0x9f,x9f3845,127266
    SETO_OPCODE_1 3846,127299
    SETO_OPCODE_1        = 0x0f,x0f3846,127299
    SETO_OPCODE_2 3847,127332
    SETO_OPCODE_2        = 0x90,x903847,127332
    ADD_AL_OPCODE 3848,127365
    ADD_AL_OPCODE        = 0x04,x043848,127365
    INC_MEM32_OPCODE_1 3849,127398
    INC_MEM32_OPCODE_1   = 0xff,xff3849,127398
    MODRM16_DISP16 3850,127452
    MODRM16_DISP16       = 0x06,x063850,127452
    SIB_DISP32 3851,127522
    SIB_DISP32           = 0x25,x253851,127522
#define CTI_SHORT_REWRITE_LENGTH 3855,127676
    NUM_REGPARM 3862,127845
    REGPARM_0 3863,127875
    REGPARM_0            = REG_RDI,3863,127875
    REGPARM_1 3864,127911
    REGPARM_1            = REG_RSI,3864,127911
    REGPARM_2 3865,127947
    REGPARM_2            = REG_RDX,3865,127947
    REGPARM_3 3866,127983
    REGPARM_3            = REG_RCX,3866,127983
    REGPARM_4 3867,128019
    REGPARM_4            = REG_R8,3867,128019
    REGPARM_5 3868,128054
    REGPARM_5            = REG_R9,3868,128054
    REGPARM_MINSTACK 3869,128089
    REDZONE_SIZE 3870,128119
    NUM_REGPARM 3873,128203
    REGPARM_0 3874,128233
    REGPARM_0            = REG_RCX,3874,128233
    REGPARM_1 3875,128269
    REGPARM_1            = REG_RDX,3875,128269
    REGPARM_2 3876,128305
    REGPARM_2            = REG_R8,3876,128305
    REGPARM_3 3877,128340
    REGPARM_3            = REG_R9,3877,128340
    REGPARM_MINSTACK 3878,128375
    REGPARM_MINSTACK     = 4*sizeof(sizeof3878,128375
    REGPARM_MINSTACK     = 4*sizeof(XSP_SZ)3878,128375
    REDZONE_SIZE 3879,128420
    REGPARM_END_ALIGN 3886,128726
    NUM_REGPARM 3888,128763
    REGPARM_MINSTACK 3889,128793
    REDZONE_SIZE 3890,128823
    REGPARM_END_ALIGN 3891,128853
    REGPARM_END_ALIGN    = sizeof(3891,128853
    REGPARM_END_ALIGN    = sizeof(XSP_SZ)3891,128853
/*   0 */     OP_INVALID,3924,129902
/*   1 */     OP_UNDECODED,3925,129964
/*   2 */     OP_CONTD,3926,130030
/*   3 */     OP_LABEL,3927,130090
/*   4 */     OP_add,3929,130151
/*   5 */     OP_or,3930,130222
/*   6 */     OP_adc,3931,130292
/*   7 */     OP_sbb,3932,130363
/*   8 */     OP_and,3933,130434
/*   9 */     OP_daa,3934,130505
/*  10 */     OP_sub,3935,130576
/*  11 */     OP_das,3936,130647
/*  12 */     OP_xor,3937,130718
/*  13 */     OP_aaa,3938,130789
/*  14 */     OP_cmp,3939,130860
/*  15 */     OP_aas,3940,130931
/*  16 */     OP_inc,3941,131002
/*  17 */     OP_dec,3942,131077
/*  18 */     OP_push,3943,131152
/*  19 */     OP_push_imm,3944,131224
/*  20 */     OP_pop,3945,131300
/*  21 */     OP_pusha,3946,131371
/*  22 */     OP_popa,3947,131444
/*  23 */     OP_bound,3948,131516
/*  24 */     OP_arpl,3949,131589
/*  25 */     OP_imul,3950,131666
/*  26 */     OP_jo_short,3952,131740
/*  27 */     OP_jno_short,3953,131820
/*  28 */     OP_jb_short,3954,131901
/*  29 */     OP_jnb_short,3955,131981
/*  30 */     OP_jz_short,3956,132062
/*  31 */     OP_jnz_short,3957,132142
/*  32 */     OP_jbe_short,3958,132223
/*  33 */     OP_jnbe_short,3959,132304
/*  34 */     OP_js_short,3960,132386
/*  35 */     OP_jns_short,3961,132466
/*  36 */     OP_jp_short,3962,132547
/*  37 */     OP_jnp_short,3963,132627
/*  38 */     OP_jl_short,3964,132708
/*  39 */     OP_jnl_short,3965,132788
/*  40 */     OP_jle_short,3966,132869
/*  41 */     OP_jnle_short,3967,132950
/*  42 */     OP_call,3969,133033
/*  43 */     OP_call_ind,3970,133111
/*  44 */     OP_call_far,3971,133194
/*  45 */     OP_call_far_ind,3972,133276
/*  46 */     OP_jmp,3973,133363
/*  47 */     OP_jmp_short,3974,133440
/*  48 */     OP_jmp_ind,3975,133523
/*  49 */     OP_jmp_far,3976,133605
/*  50 */     OP_jmp_far_ind,3977,133686
/*  51 */     OP_loopne,3979,133773
/*  52 */     OP_loope,3980,133847
/*  53 */     OP_loop,3981,133920
/*  54 */     OP_jecxz,3982,133992
/*  55 */     OP_mov_ld,3986,134204
/*  56 */     OP_mov_st,3987,134281
/*  57 */     OP_mov_imm,3990,134517
/*  58 */     OP_mov_seg,3991,134595
/*  59 */     OP_mov_priv,3992,134673
/*  60 */     OP_test,3994,134754
/*  61 */     OP_lea,3995,134826
/*  62 */     OP_xchg,3996,134897
/*  63 */     OP_cwde,3997,134969
/*  64 */     OP_cdq,3998,135041
/*  65 */     OP_fwait,3999,135112
/*  66 */     OP_pushf,4000,135185
/*  67 */     OP_popf,4001,135258
/*  68 */     OP_sahf,4002,135330
/*  69 */     OP_lahf,4003,135402
/*  70 */     OP_ret,4005,135475
/*  71 */     OP_ret_far,4006,135547
/*  72 */     OP_les,4008,135624
/*  73 */     OP_lds,4009,135706
/*  74 */     OP_enter,4010,135788
/*  75 */     OP_leave,4011,135861
/*  76 */     OP_int3,4012,135934
/*  77 */     OP_int,4013,136006
/*  78 */     OP_into,4014,136077
/*  79 */     OP_iret,4015,136149
/*  80 */     OP_aam,4016,136221
/*  81 */     OP_aad,4017,136292
/*  82 */     OP_xlat,4018,136363
/*  83 */     OP_in,4019,136435
/*  84 */     OP_out,4020,136505
/*  85 */     OP_hlt,4021,136576
/*  86 */     OP_cmc,4022,136647
/*  87 */     OP_clc,4023,136718
/*  88 */     OP_stc,4024,136789
/*  89 */     OP_cli,4025,136860
/*  90 */     OP_sti,4026,136931
/*  91 */     OP_cld,4027,137002
/*  92 */     OP_std,4028,137073
/*  93 */     OP_lar,4031,137146
/*  94 */     OP_lsl,4032,137222
/*  95 */     OP_syscall,4033,137298
/*  96 */     OP_clts,4034,137378
/*  97 */     OP_sysret,4035,137455
/*  98 */     OP_invd,4036,137534
/*  99 */     OP_wbinvd,4037,137611
/* 100 */     OP_ud2a,4038,137690
/* 101 */     OP_nop_modrm,4039,137767
/* 102 */     OP_movntps,4040,137849
/* 103 */     OP_movntpd,4041,137936
/* 104 */     OP_wrmsr,4042,138023
/* 105 */     OP_rdtsc,4043,138101
/* 106 */     OP_rdmsr,4044,138179
/* 107 */     OP_rdpmc,4045,138257
/* 108 */     OP_sysenter,4046,138335
/* 109 */     OP_sysexit,4047,138416
/* 110 */     OP_cmovo,4049,138497
/* 111 */     OP_cmovno,4050,138575
/* 112 */     OP_cmovb,4051,138654
/* 113 */     OP_cmovnb,4052,138732
/* 114 */     OP_cmovz,4053,138811
/* 115 */     OP_cmovnz,4054,138889
/* 116 */     OP_cmovbe,4055,138968
/* 117 */     OP_cmovnbe,4056,139047
/* 118 */     OP_cmovs,4057,139127
/* 119 */     OP_cmovns,4058,139205
/* 120 */     OP_cmovp,4059,139284
/* 121 */     OP_cmovnp,4060,139362
/* 122 */     OP_cmovl,4061,139441
/* 123 */     OP_cmovnl,4062,139519
/* 124 */     OP_cmovle,4063,139598
/* 125 */     OP_cmovnle,4064,139677
/* 126 */     OP_punpcklbw,4066,139758
/* 127 */     OP_punpcklwd,4067,139847
/* 128 */     OP_punpckldq,4068,139936
/* 129 */     OP_packsswb,4069,140025
/* 130 */     OP_pcmpgtb,4070,140113
/* 131 */     OP_pcmpgtw,4071,140200
/* 132 */     OP_pcmpgtd,4072,140287
/* 133 */     OP_packuswb,4073,140374
/* 134 */     OP_punpckhbw,4074,140462
/* 135 */     OP_punpckhwd,4075,140551
/* 136 */     OP_punpckhdq,4076,140640
/* 137 */     OP_packssdw,4077,140729
/* 138 */     OP_punpcklqdq,4078,140817
/* 139 */     OP_punpckhqdq,4079,140907
/* 140 */     OP_movd,4080,140997
/* 141 */     OP_movq,4081,141081
/* 142 */     OP_movdqu,4082,141166
/* 143 */     OP_movdqa,4083,141254
/* 144 */     OP_pshufw,4084,141341
/* 145 */     OP_pshufd,4085,141427
/* 146 */     OP_pshufhw,4086,141513
/* 147 */     OP_pshuflw,4087,141600
/* 148 */     OP_pcmpeqb,4088,141687
/* 149 */     OP_pcmpeqw,4089,141774
/* 150 */     OP_pcmpeqd,4090,141861
/* 151 */     OP_emms,4091,141948
/* 152 */     OP_jo,4093,142031
/* 153 */     OP_jno,4094,142102
/* 154 */     OP_jb,4095,142174
/* 155 */     OP_jnb,4096,142245
/* 156 */     OP_jz,4097,142317
/* 157 */     OP_jnz,4098,142388
/* 158 */     OP_jbe,4099,142460
/* 159 */     OP_jnbe,4100,142532
/* 160 */     OP_js,4101,142605
/* 161 */     OP_jns,4102,142676
/* 162 */     OP_jp,4103,142748
/* 163 */     OP_jnp,4104,142819
/* 164 */     OP_jl,4105,142891
/* 165 */     OP_jnl,4106,142962
/* 166 */     OP_jle,4107,143034
/* 167 */     OP_jnle,4108,143106
/* 168 */     OP_seto,4110,143180
/* 169 */     OP_setno,4111,143257
/* 170 */     OP_setb,4112,143335
/* 171 */     OP_setnb,4113,143412
/* 172 */     OP_setz,4114,143490
/* 173 */     OP_setnz,4115,143567
/* 174 */     OP_setbe,4116,143645
/* 175 */     OP_setnbe,4117,143723
/* 176 */     OP_sets,4118,143804
/* 177 */     OP_setns,4119,143881
/* 178 */     OP_setp,4120,143959
/* 179 */     OP_setnp,4121,144036
/* 180 */     OP_setl,4122,144114
/* 181 */     OP_setnl,4123,144191
/* 182 */     OP_setle,4124,144269
/* 183 */     OP_setnle,4125,144347
/* 184 */     OP_cpuid,4127,144429
/* 185 */     OP_bt,4128,144507
/* 186 */     OP_shld,4129,144582
/* 187 */     OP_rsm,4130,144659
/* 188 */     OP_bts,4131,144735
/* 189 */     OP_shrd,4132,144811
/* 190 */     OP_cmpxchg,4133,144888
/* 191 */     OP_lss,4134,144968
/* 192 */     OP_btr,4135,145044
/* 193 */     OP_lfs,4136,145120
/* 194 */     OP_lgs,4137,145196
/* 195 */     OP_movzx,4138,145272
/* 196 */     OP_ud2b,4139,145350
/* 197 */     OP_btc,4140,145427
/* 198 */     OP_bsf,4141,145503
/* 199 */     OP_bsr,4142,145579
/* 200 */     OP_movsx,4143,145663
/* 201 */     OP_xadd,4144,145741
/* 202 */     OP_movnti,4145,145818
/* 203 */     OP_pinsrw,4146,145897
/* 204 */     OP_pextrw,4147,145983
/* 205 */     OP_bswap,4148,146069
/* 206 */     OP_psrlw,4149,146147
/* 207 */     OP_psrld,4150,146232
/* 208 */     OP_psrlq,4151,146317
/* 209 */     OP_paddq,4152,146402
/* 210 */     OP_pmullw,4153,146487
/* 211 */     OP_pmovmskb,4154,146573
/* 212 */     OP_psubusb,4155,146661
/* 213 */     OP_psubusw,4156,146748
/* 214 */     OP_pminub,4157,146835
/* 215 */     OP_pand,4158,146921
/* 216 */     OP_paddusb,4159,147005
/* 217 */     OP_paddusw,4160,147092
/* 218 */     OP_pmaxub,4161,147179
/* 219 */     OP_pandn,4162,147265
/* 220 */     OP_pavgb,4163,147350
/* 221 */     OP_psraw,4164,147435
/* 222 */     OP_psrad,4165,147520
/* 223 */     OP_pavgw,4166,147605
/* 224 */     OP_pmulhuw,4167,147690
/* 225 */     OP_pmulhw,4168,147777
/* 226 */     OP_movntq,4169,147863
/* 227 */     OP_movntdq,4170,147949
/* 228 */     OP_psubsb,4171,148036
/* 229 */     OP_psubsw,4172,148122
/* 230 */     OP_pminsw,4173,148208
/* 231 */     OP_por,4174,148294
/* 232 */     OP_paddsb,4175,148377
/* 233 */     OP_paddsw,4176,148463
/* 234 */     OP_pmaxsw,4177,148549
/* 235 */     OP_pxor,4178,148635
/* 236 */     OP_psllw,4179,148719
/* 237 */     OP_pslld,4180,148804
/* 238 */     OP_psllq,4181,148889
/* 239 */     OP_pmuludq,4182,148974
/* 240 */     OP_pmaddwd,4183,149061
/* 241 */     OP_psadbw,4184,149148
/* 242 */     OP_maskmovq,4185,149234
/* 243 */     OP_maskmovdqu,4186,149322
/* 244 */     OP_psubb,4187,149412
/* 245 */     OP_psubw,4188,149497
/* 246 */     OP_psubd,4189,149582
/* 247 */     OP_psubq,4190,149667
/* 248 */     OP_paddb,4191,149752
/* 249 */     OP_paddw,4192,149837
/* 250 */     OP_paddd,4193,149922
/* 251 */     OP_psrldq,4194,150008
/* 252 */     OP_pslldq,4195,150095
/* 253 */     OP_rol,4198,150184
/* 254 */     OP_ror,4199,150261
/* 255 */     OP_rcl,4200,150338
/* 256 */     OP_rcr,4201,150415
/* 257 */     OP_shl,4202,150492
/* 258 */     OP_shr,4203,150569
/* 259 */     OP_sar,4204,150646
/* 260 */     OP_not,4205,150723
/* 261 */     OP_neg,4206,150800
/* 262 */     OP_mul,4207,150877
/* 263 */     OP_div,4208,150954
/* 264 */     OP_idiv,4209,151031
/* 265 */     OP_sldt,4210,151109
/* 266 */     OP_str,4211,151187
/* 267 */     OP_lldt,4212,151264
/* 268 */     OP_ltr,4213,151342
/* 269 */     OP_verr,4214,151419
/* 270 */     OP_verw,4215,151497
/* 271 */     OP_sgdt,4216,151575
/* 272 */     OP_sidt,4217,151656
/* 273 */     OP_lgdt,4218,151737
/* 274 */     OP_lidt,4219,151818
/* 275 */     OP_smsw,4220,151899
/* 276 */     OP_lmsw,4221,151977
/* 277 */     OP_invlpg,4222,152055
/* 278 */     OP_cmpxchg8b,4223,152138
/* 279 */     OP_fxsave32,4224,152221
/* 280 */     OP_fxrstor32,4225,152306
/* 281 */     OP_ldmxcsr,4226,152392
/* 282 */     OP_stmxcsr,4227,152477
/* 283 */     OP_lfence,4228,152562
/* 284 */     OP_mfence,4229,152645
/* 285 */     OP_clflush,4230,152728
/* 286 */     OP_sfence,4231,152812
/* 287 */     OP_prefetchnta,4232,152895
/* 288 */     OP_prefetcht0,4233,152980
/* 289 */     OP_prefetcht1,4234,153064
/* 290 */     OP_prefetcht2,4235,153148
/* 291 */     OP_prefetch,4236,153232
/* 292 */     OP_prefetchw,4237,153314
/* 293 */     OP_movups,4240,153399
/* 294 */     OP_movss,4241,153484
/* 295 */     OP_movupd,4242,153568
/* 296 */     OP_movsd,4243,153653
/* 297 */     OP_movlps,4244,153737
/* 298 */     OP_movlpd,4245,153822
/* 299 */     OP_unpcklps,4246,153907
/* 300 */     OP_unpcklpd,4247,153994
/* 301 */     OP_unpckhps,4248,154081
/* 302 */     OP_unpckhpd,4249,154168
/* 303 */     OP_movhps,4250,154255
/* 304 */     OP_movhpd,4251,154340
/* 305 */     OP_movaps,4252,154425
/* 306 */     OP_movapd,4253,154510
/* 307 */     OP_cvtpi2ps,4254,154595
/* 308 */     OP_cvtsi2ss,4255,154682
/* 309 */     OP_cvtpi2pd,4256,154769
/* 310 */     OP_cvtsi2sd,4257,154856
/* 311 */     OP_cvttps2pi,4258,154943
/* 312 */     OP_cvttss2si,4259,155031
/* 313 */     OP_cvttpd2pi,4260,155119
/* 314 */     OP_cvttsd2si,4261,155207
/* 315 */     OP_cvtps2pi,4262,155295
/* 316 */     OP_cvtss2si,4263,155382
/* 317 */     OP_cvtpd2pi,4264,155469
/* 318 */     OP_cvtsd2si,4265,155556
/* 319 */     OP_ucomiss,4266,155643
/* 320 */     OP_ucomisd,4267,155729
/* 321 */     OP_comiss,4268,155815
/* 322 */     OP_comisd,4269,155900
/* 323 */     OP_movmskps,4270,155985
/* 324 */     OP_movmskpd,4271,156072
/* 325 */     OP_sqrtps,4272,156159
/* 326 */     OP_sqrtss,4273,156244
/* 327 */     OP_sqrtpd,4274,156329
/* 328 */     OP_sqrtsd,4275,156414
/* 329 */     OP_rsqrtps,4276,156499
/* 330 */     OP_rsqrtss,4277,156585
/* 331 */     OP_rcpps,4278,156671
/* 332 */     OP_rcpss,4279,156755
/* 333 */     OP_andps,4280,156839
/* 334 */     OP_andpd,4281,156923
/* 335 */     OP_andnps,4282,157007
/* 336 */     OP_andnpd,4283,157092
/* 337 */     OP_orps,4284,157177
/* 338 */     OP_orpd,4285,157260
/* 339 */     OP_xorps,4286,157343
/* 340 */     OP_xorpd,4287,157427
/* 341 */     OP_addps,4288,157511
/* 342 */     OP_addss,4289,157595
/* 343 */     OP_addpd,4290,157679
/* 344 */     OP_addsd,4291,157763
/* 345 */     OP_mulps,4292,157847
/* 346 */     OP_mulss,4293,157931
/* 347 */     OP_mulpd,4294,158015
/* 348 */     OP_mulsd,4295,158099
/* 349 */     OP_cvtps2pd,4296,158183
/* 350 */     OP_cvtss2sd,4297,158270
/* 351 */     OP_cvtpd2ps,4298,158357
/* 352 */     OP_cvtsd2ss,4299,158444
/* 353 */     OP_cvtdq2ps,4300,158531
/* 354 */     OP_cvttps2dq,4301,158618
/* 355 */     OP_cvtps2dq,4302,158706
/* 356 */     OP_subps,4303,158793
/* 357 */     OP_subss,4304,158877
/* 358 */     OP_subpd,4305,158961
/* 359 */     OP_subsd,4306,159045
/* 360 */     OP_minps,4307,159129
/* 361 */     OP_minss,4308,159213
/* 362 */     OP_minpd,4309,159297
/* 363 */     OP_minsd,4310,159381
/* 364 */     OP_divps,4311,159465
/* 365 */     OP_divss,4312,159549
/* 366 */     OP_divpd,4313,159633
/* 367 */     OP_divsd,4314,159717
/* 368 */     OP_maxps,4315,159801
/* 369 */     OP_maxss,4316,159885
/* 370 */     OP_maxpd,4317,159969
/* 371 */     OP_maxsd,4318,160053
/* 372 */     OP_cmpps,4319,160137
/* 373 */     OP_cmpss,4320,160221
/* 374 */     OP_cmppd,4321,160305
/* 375 */     OP_cmpsd,4322,160389
/* 376 */     OP_shufps,4323,160473
/* 377 */     OP_shufpd,4324,160558
/* 378 */     OP_cvtdq2pd,4325,160643
/* 379 */     OP_cvttpd2dq,4326,160730
/* 380 */     OP_cvtpd2dq,4327,160818
/* 381 */     OP_nop,4328,160905
/* 382 */     OP_pause,4329,160985
/* 383 */     OP_ins,4331,161071
/* 384 */     OP_rep_ins,4332,161150
/* 385 */     OP_outs,4333,161233
/* 386 */     OP_rep_outs,4334,161313
/* 387 */     OP_movs,4335,161397
/* 388 */     OP_rep_movs,4336,161477
/* 389 */     OP_stos,4337,161561
/* 390 */     OP_rep_stos,4338,161641
/* 391 */     OP_lods,4339,161725
/* 392 */     OP_rep_lods,4340,161805
/* 393 */     OP_cmps,4341,161889
/* 394 */     OP_rep_cmps,4342,161971
/* 395 */     OP_repne_cmps,4343,162057
/* 396 */     OP_scas,4344,162145
/* 397 */     OP_rep_scas,4345,162227
/* 398 */     OP_repne_scas,4346,162313
/* 399 */     OP_fadd,4349,162403
/* 400 */     OP_fmul,4350,162481
/* 401 */     OP_fcom,4351,162559
/* 402 */     OP_fcomp,4352,162637
/* 403 */     OP_fsub,4353,162716
/* 404 */     OP_fsubr,4354,162794
/* 405 */     OP_fdiv,4355,162873
/* 406 */     OP_fdivr,4356,162951
/* 407 */     OP_fld,4357,163030
/* 408 */     OP_fst,4358,163107
/* 409 */     OP_fstp,4359,163184
/* 410 */     OP_fldenv,4360,163262
/* 411 */     OP_fldcw,4361,163342
/* 412 */     OP_fnstenv,4362,163421
/* 413 */     OP_fnstcw,4363,163502
/* 414 */     OP_fiadd,4364,163582
/* 415 */     OP_fimul,4365,163661
/* 416 */     OP_ficom,4366,163740
/* 417 */     OP_ficomp,4367,163819
/* 418 */     OP_fisub,4368,163899
/* 419 */     OP_fisubr,4369,163978
/* 420 */     OP_fidiv,4370,164058
/* 421 */     OP_fidivr,4371,164137
/* 422 */     OP_fild,4372,164217
/* 423 */     OP_fist,4373,164295
/* 424 */     OP_fistp,4374,164373
/* 425 */     OP_frstor,4375,164452
/* 426 */     OP_fnsave,4376,164532
/* 427 */     OP_fnstsw,4377,164612
/* 428 */     OP_fbld,4379,164693
/* 429 */     OP_fbstp,4380,164771
/* 430 */     OP_fxch,4383,164852
/* 431 */     OP_fnop,4384,164935
/* 432 */     OP_fchs,4385,165018
/* 433 */     OP_fabs,4386,165101
/* 434 */     OP_ftst,4387,165184
/* 435 */     OP_fxam,4388,165267
/* 436 */     OP_fld1,4389,165350
/* 437 */     OP_fldl2t,4390,165433
/* 438 */     OP_fldl2e,4391,165518
/* 439 */     OP_fldpi,4392,165603
/* 440 */     OP_fldlg2,4393,165687
/* 441 */     OP_fldln2,4394,165772
/* 442 */     OP_fldz,4395,165857
/* 443 */     OP_f2xm1,4396,165940
/* 444 */     OP_fyl2x,4397,166024
/* 445 */     OP_fptan,4398,166108
/* 446 */     OP_fpatan,4399,166192
/* 447 */     OP_fxtract,4400,166277
/* 448 */     OP_fprem1,4401,166363
/* 449 */     OP_fdecstp,4402,166448
/* 450 */     OP_fincstp,4403,166534
/* 451 */     OP_fprem,4404,166620
/* 452 */     OP_fyl2xp1,4405,166704
/* 453 */     OP_fsqrt,4406,166790
/* 454 */     OP_fsincos,4407,166874
/* 455 */     OP_frndint,4408,166960
/* 456 */     OP_fscale,4409,167046
/* 457 */     OP_fsin,4410,167131
/* 458 */     OP_fcos,4411,167214
/* 459 */     OP_fcmovb,4412,167297
/* 460 */     OP_fcmove,4413,167382
/* 461 */     OP_fcmovbe,4414,167467
/* 462 */     OP_fcmovu,4415,167553
/* 463 */     OP_fucompp,4416,167638
/* 464 */     OP_fcmovnb,4417,167724
/* 465 */     OP_fcmovne,4418,167810
/* 466 */     OP_fcmovnbe,4419,167896
/* 467 */     OP_fcmovnu,4420,167983
/* 468 */     OP_fnclex,4421,168069
/* 469 */     OP_fninit,4422,168154
/* 470 */     OP_fucomi,4423,168239
/* 471 */     OP_fcomi,4424,168324
/* 472 */     OP_ffree,4425,168408
/* 473 */     OP_fucom,4426,168492
/* 474 */     OP_fucomp,4427,168576
/* 475 */     OP_faddp,4428,168661
/* 476 */     OP_fmulp,4429,168745
/* 477 */     OP_fcompp,4430,168829
/* 478 */     OP_fsubrp,4431,168914
/* 479 */     OP_fsubp,4432,168999
/* 480 */     OP_fdivrp,4433,169083
/* 481 */     OP_fdivp,4434,169168
/* 482 */     OP_fucomip,4435,169252
/* 483 */     OP_fcomip,4436,169338
/* 484 */     OP_fisttp,4439,169452
/* 485 */     OP_haddpd,4440,169535
/* 486 */     OP_haddps,4441,169622
/* 487 */     OP_hsubpd,4442,169709
/* 488 */     OP_hsubps,4443,169796
/* 489 */     OP_addsubpd,4444,169883
/* 490 */     OP_addsubps,4445,169972
/* 491 */     OP_lddqu,4446,170061
/* 492 */     OP_monitor,4447,170147
/* 493 */     OP_mwait,4448,170229
/* 494 */     OP_movsldup,4449,170309
/* 495 */     OP_movshdup,4450,170397
/* 496 */     OP_movddup,4451,170485
/* 497 */     OP_femms,4454,170604
/* 498 */     OP_unknown_3dnow,4455,170684
/* 499 */     OP_pavgusb,4456,170775
/* 500 */     OP_pfadd,4457,170860
/* 501 */     OP_pfacc,4458,170943
/* 502 */     OP_pfcmpge,4459,171026
/* 503 */     OP_pfcmpgt,4460,171111
/* 504 */     OP_pfcmpeq,4461,171196
/* 505 */     OP_pfmin,4462,171281
/* 506 */     OP_pfmax,4463,171364
/* 507 */     OP_pfmul,4464,171447
/* 508 */     OP_pfrcp,4465,171530
/* 509 */     OP_pfrcpit1,4466,171614
/* 510 */     OP_pfrcpit2,4467,171701
/* 511 */     OP_pfrsqrt,4468,171788
/* 512 */     OP_pfrsqit1,4469,171874
/* 513 */     OP_pmulhrw,4470,171961
/* 514 */     OP_pfsub,4471,172047
/* 515 */     OP_pfsubr,4472,172131
/* 516 */     OP_pi2fd,4473,172216
/* 517 */     OP_pf2id,4474,172300
/* 518 */     OP_pi2fw,4475,172384
/* 519 */     OP_pf2iw,4476,172468
/* 520 */     OP_pfnacc,4477,172552
/* 521 */     OP_pfpnacc,4478,172637
/* 522 */     OP_pswapd,4479,172723
/* 523 */     OP_pshufb,4482,172825
/* 524 */     OP_phaddw,4483,172914
/* 525 */     OP_phaddd,4484,173003
/* 526 */     OP_phaddsw,4485,173092
/* 527 */     OP_pmaddubsw,4486,173182
/* 528 */     OP_phsubw,4487,173274
/* 529 */     OP_phsubd,4488,173363
/* 530 */     OP_phsubsw,4489,173452
/* 531 */     OP_psignb,4490,173542
/* 532 */     OP_psignw,4491,173631
/* 533 */     OP_psignd,4492,173720
/* 534 */     OP_pmulhrsw,4493,173809
/* 535 */     OP_pabsb,4494,173900
/* 536 */     OP_pabsw,4495,173988
/* 537 */     OP_pabsd,4496,174076
/* 538 */     OP_palignr,4497,174164
/* 539 */     OP_popcnt,4500,174335
/* 540 */     OP_movntss,4501,174424
/* 541 */     OP_movntsd,4502,174513
/* 542 */     OP_extrq,4503,174602
/* 543 */     OP_insertq,4504,174690
/* 544 */     OP_lzcnt,4505,174780
/* 545 */     OP_pblendvb,4506,174868
/* 546 */     OP_blendvps,4507,174951
/* 547 */     OP_blendvpd,4508,175034
/* 548 */     OP_ptest,4509,175117
/* 549 */     OP_pmovsxbw,4510,175200
/* 550 */     OP_pmovsxbd,4511,175286
/* 551 */     OP_pmovsxbq,4512,175372
/* 552 */     OP_pmovsxdw,4513,175458
/* 553 */     OP_pmovsxwq,4514,175544
/* 554 */     OP_pmovsxdq,4515,175630
/* 555 */     OP_pmuldq,4516,175716
/* 556 */     OP_pcmpeqq,4517,175801
/* 557 */     OP_movntdqa,4518,175887
/* 558 */     OP_packusdw,4519,175974
/* 559 */     OP_pmovzxbw,4520,176061
/* 560 */     OP_pmovzxbd,4521,176148
/* 561 */     OP_pmovzxbq,4522,176235
/* 562 */     OP_pmovzxdw,4523,176322
/* 563 */     OP_pmovzxwq,4524,176409
/* 564 */     OP_pmovzxdq,4525,176496
/* 565 */     OP_pcmpgtq,4526,176583
/* 566 */     OP_pminsb,4527,176669
/* 567 */     OP_pminsd,4528,176754
/* 568 */     OP_pminuw,4529,176839
/* 569 */     OP_pminud,4530,176924
/* 570 */     OP_pmaxsb,4531,177009
/* 571 */     OP_pmaxsd,4532,177094
/* 572 */     OP_pmaxuw,4533,177179
/* 573 */     OP_pmaxud,4534,177264
/* 574 */     OP_pmulld,4535,177349
/* 575 */     OP_phminposuw,4536,177434
/* 576 */     OP_crc32,4537,177523
/* 577 */     OP_pextrb,4538,177611
/* 578 */     OP_pextrd,4539,177696
/* 579 */     OP_extractps,4540,177781
/* 580 */     OP_roundps,4541,177869
/* 581 */     OP_roundpd,4542,177955
/* 582 */     OP_roundss,4543,178041
/* 583 */     OP_roundsd,4544,178127
/* 584 */     OP_blendps,4545,178213
/* 585 */     OP_blendpd,4546,178299
/* 586 */     OP_pblendw,4547,178385
/* 587 */     OP_pinsrb,4548,178471
/* 588 */     OP_insertps,4549,178556
/* 589 */     OP_pinsrd,4550,178643
/* 590 */     OP_dpps,4551,178728
/* 591 */     OP_dppd,4552,178811
/* 592 */     OP_mpsadbw,4553,178894
/* 593 */     OP_pcmpestrm,4554,178980
/* 594 */     OP_pcmpestri,4555,179068
/* 595 */     OP_pcmpistrm,4556,179156
/* 596 */     OP_pcmpistri,4557,179244
/* 597 */     OP_movsxd,4560,179347
/* 598 */     OP_swapgs,4561,179432
/* 599 */     OP_vmcall,4564,179530
/* 600 */     OP_vmlaunch,4565,179613
/* 601 */     OP_vmresume,4566,179698
/* 602 */     OP_vmxoff,4567,179783
/* 603 */     OP_vmptrst,4568,179866
/* 604 */     OP_vmptrld,4569,179948
/* 605 */     OP_vmxon,4570,180038
/* 606 */     OP_vmclear,4571,180126
/* 607 */     OP_vmread,4572,180216
/* 608 */     OP_vmwrite,4573,180305
/* 609 */     OP_int1,4576,180419
/* 610 */     OP_salc,4577,180497
/* 611 */     OP_ffreep,4578,180575
/* 612 */     OP_vmrun,4581,180683
/* 613 */     OP_vmmcall,4582,180765
/* 614 */     OP_vmload,4583,180849
/* 615 */     OP_vmsave,4584,180932
/* 616 */     OP_stgi,4585,181015
/* 617 */     OP_clgi,4586,181096
/* 618 */     OP_skinit,4587,181177
/* 619 */     OP_invlpga,4588,181260
/* 620 */     OP_rdtscp,4590,181381
/* 621 */     OP_invept,4593,181495
/* 622 */     OP_invvpid,4594,181576
/* 623 */     OP_pclmulqdq,4597,181693
/* 624 */     OP_aesimc,4598,181781
/* 625 */     OP_aesenc,4599,181866
/* 626 */     OP_aesenclast,4600,181951
/* 627 */     OP_aesdec,4601,182040
/* 628 */     OP_aesdeclast,4602,182125
/* 629 */     OP_aeskeygenassist,4603,182214
/* 630 */     OP_movbe,4606,182340
/* 631 */     OP_xgetbv,4609,182467
/* 632 */     OP_xsetbv,4610,182550
/* 633 */     OP_xsave32,4611,182633
/* 634 */     OP_xrstor32,4612,182718
/* 635 */     OP_xsaveopt32,4613,182804
/* 636 */     OP_vmovss,4616,182907
/* 637 */     OP_vmovsd,4617,182992
/* 638 */     OP_vmovups,4618,183077
/* 639 */     OP_vmovupd,4619,183166
/* 640 */     OP_vmovlps,4620,183255
/* 641 */     OP_vmovsldup,4621,183344
/* 642 */     OP_vmovlpd,4622,183435
/* 643 */     OP_vmovddup,4623,183524
/* 644 */     OP_vunpcklps,4624,183614
/* 645 */     OP_vunpcklpd,4625,183705
/* 646 */     OP_vunpckhps,4626,183796
/* 647 */     OP_vunpckhpd,4627,183887
/* 648 */     OP_vmovhps,4628,183978
/* 649 */     OP_vmovshdup,4629,184067
/* 650 */     OP_vmovhpd,4630,184158
/* 651 */     OP_vmovaps,4631,184247
/* 652 */     OP_vmovapd,4632,184336
/* 653 */     OP_vcvtsi2ss,4633,184425
/* 654 */     OP_vcvtsi2sd,4634,184516
/* 655 */     OP_vmovntps,4635,184607
/* 656 */     OP_vmovntpd,4636,184697
/* 657 */     OP_vcvttss2si,4637,184787
/* 658 */     OP_vcvttsd2si,4638,184879
/* 659 */     OP_vcvtss2si,4639,184971
/* 660 */     OP_vcvtsd2si,4640,185062
/* 661 */     OP_vucomiss,4641,185153
/* 662 */     OP_vucomisd,4642,185243
/* 663 */     OP_vcomiss,4643,185333
/* 664 */     OP_vcomisd,4644,185422
/* 665 */     OP_vmovmskps,4645,185511
/* 666 */     OP_vmovmskpd,4646,185602
/* 667 */     OP_vsqrtps,4647,185693
/* 668 */     OP_vsqrtss,4648,185782
/* 669 */     OP_vsqrtpd,4649,185871
/* 670 */     OP_vsqrtsd,4650,185960
/* 671 */     OP_vrsqrtps,4651,186049
/* 672 */     OP_vrsqrtss,4652,186139
/* 673 */     OP_vrcpps,4653,186229
/* 674 */     OP_vrcpss,4654,186317
/* 675 */     OP_vandps,4655,186405
/* 676 */     OP_vandpd,4656,186493
/* 677 */     OP_vandnps,4657,186581
/* 678 */     OP_vandnpd,4658,186670
/* 679 */     OP_vorps,4659,186759
/* 680 */     OP_vorpd,4660,186846
/* 681 */     OP_vxorps,4661,186933
/* 682 */     OP_vxorpd,4662,187021
/* 683 */     OP_vaddps,4663,187109
/* 684 */     OP_vaddss,4664,187197
/* 685 */     OP_vaddpd,4665,187285
/* 686 */     OP_vaddsd,4666,187373
/* 687 */     OP_vmulps,4667,187461
/* 688 */     OP_vmulss,4668,187549
/* 689 */     OP_vmulpd,4669,187637
/* 690 */     OP_vmulsd,4670,187725
/* 691 */     OP_vcvtps2pd,4671,187813
/* 692 */     OP_vcvtss2sd,4672,187904
/* 693 */     OP_vcvtpd2ps,4673,187995
/* 694 */     OP_vcvtsd2ss,4674,188086
/* 695 */     OP_vcvtdq2ps,4675,188177
/* 696 */     OP_vcvttps2dq,4676,188268
/* 697 */     OP_vcvtps2dq,4677,188360
/* 698 */     OP_vsubps,4678,188451
/* 699 */     OP_vsubss,4679,188539
/* 700 */     OP_vsubpd,4680,188627
/* 701 */     OP_vsubsd,4681,188715
/* 702 */     OP_vminps,4682,188803
/* 703 */     OP_vminss,4683,188891
/* 704 */     OP_vminpd,4684,188979
/* 705 */     OP_vminsd,4685,189067
/* 706 */     OP_vdivps,4686,189155
/* 707 */     OP_vdivss,4687,189243
/* 708 */     OP_vdivpd,4688,189331
/* 709 */     OP_vdivsd,4689,189419
/* 710 */     OP_vmaxps,4690,189507
/* 711 */     OP_vmaxss,4691,189595
/* 712 */     OP_vmaxpd,4692,189683
/* 713 */     OP_vmaxsd,4693,189771
/* 714 */     OP_vpunpcklbw,4694,189859
/* 715 */     OP_vpunpcklwd,4695,189951
/* 716 */     OP_vpunpckldq,4696,190043
/* 717 */     OP_vpacksswb,4697,190135
/* 718 */     OP_vpcmpgtb,4698,190226
/* 719 */     OP_vpcmpgtw,4699,190316
/* 720 */     OP_vpcmpgtd,4700,190406
/* 721 */     OP_vpackuswb,4701,190496
/* 722 */     OP_vpunpckhbw,4702,190587
/* 723 */     OP_vpunpckhwd,4703,190679
/* 724 */     OP_vpunpckhdq,4704,190771
/* 725 */     OP_vpackssdw,4705,190863
/* 726 */     OP_vpunpcklqdq,4706,190954
/* 727 */     OP_vpunpckhqdq,4707,191047
/* 728 */     OP_vmovd,4708,191140
/* 729 */     OP_vpshufhw,4709,191227
/* 730 */     OP_vpshufd,4710,191317
/* 731 */     OP_vpshuflw,4711,191406
/* 732 */     OP_vpcmpeqb,4712,191496
/* 733 */     OP_vpcmpeqw,4713,191586
/* 734 */     OP_vpcmpeqd,4714,191676
/* 735 */     OP_vmovq,4715,191766
/* 736 */     OP_vcmpps,4716,191853
/* 737 */     OP_vcmpss,4717,191941
/* 738 */     OP_vcmppd,4718,192029
/* 739 */     OP_vcmpsd,4719,192117
/* 740 */     OP_vpinsrw,4720,192205
/* 741 */     OP_vpextrw,4721,192294
/* 742 */     OP_vshufps,4722,192383
/* 743 */     OP_vshufpd,4723,192472
/* 744 */     OP_vpsrlw,4724,192561
/* 745 */     OP_vpsrld,4725,192649
/* 746 */     OP_vpsrlq,4726,192737
/* 747 */     OP_vpaddq,4727,192825
/* 748 */     OP_vpmullw,4728,192913
/* 749 */     OP_vpmovmskb,4729,193002
/* 750 */     OP_vpsubusb,4730,193093
/* 751 */     OP_vpsubusw,4731,193183
/* 752 */     OP_vpminub,4732,193273
/* 753 */     OP_vpand,4733,193362
/* 754 */     OP_vpaddusb,4734,193449
/* 755 */     OP_vpaddusw,4735,193539
/* 756 */     OP_vpmaxub,4736,193629
/* 757 */     OP_vpandn,4737,193718
/* 758 */     OP_vpavgb,4738,193806
/* 759 */     OP_vpsraw,4739,193894
/* 760 */     OP_vpsrad,4740,193982
/* 761 */     OP_vpavgw,4741,194070
/* 762 */     OP_vpmulhuw,4742,194158
/* 763 */     OP_vpmulhw,4743,194248
/* 764 */     OP_vcvtdq2pd,4744,194337
/* 765 */     OP_vcvttpd2dq,4745,194428
/* 766 */     OP_vcvtpd2dq,4746,194520
/* 767 */     OP_vmovntdq,4747,194611
/* 768 */     OP_vpsubsb,4748,194701
/* 769 */     OP_vpsubsw,4749,194790
/* 770 */     OP_vpminsw,4750,194879
/* 771 */     OP_vpor,4751,194968
/* 772 */     OP_vpaddsb,4752,195054
/* 773 */     OP_vpaddsw,4753,195143
/* 774 */     OP_vpmaxsw,4754,195232
/* 775 */     OP_vpxor,4755,195321
/* 776 */     OP_vpsllw,4756,195408
/* 777 */     OP_vpslld,4757,195496
/* 778 */     OP_vpsllq,4758,195584
/* 779 */     OP_vpmuludq,4759,195672
/* 780 */     OP_vpmaddwd,4760,195762
/* 781 */     OP_vpsadbw,4761,195852
/* 782 */     OP_vmaskmovdqu,4762,195941
/* 783 */     OP_vpsubb,4763,196034
/* 784 */     OP_vpsubw,4764,196122
/* 785 */     OP_vpsubd,4765,196210
/* 786 */     OP_vpsubq,4766,196298
/* 787 */     OP_vpaddb,4767,196386
/* 788 */     OP_vpaddw,4768,196474
/* 789 */     OP_vpaddd,4769,196562
/* 790 */     OP_vpsrldq,4770,196651
/* 791 */     OP_vpslldq,4771,196741
/* 792 */     OP_vmovdqu,4772,196831
/* 793 */     OP_vmovdqa,4773,196921
/* 794 */     OP_vhaddpd,4774,197011
/* 795 */     OP_vhaddps,4775,197101
/* 796 */     OP_vhsubpd,4776,197191
/* 797 */     OP_vhsubps,4777,197281
/* 798 */     OP_vaddsubpd,4778,197371
/* 799 */     OP_vaddsubps,4779,197463
/* 800 */     OP_vlddqu,4780,197555
/* 801 */     OP_vpshufb,4781,197644
/* 802 */     OP_vphaddw,4782,197734
/* 803 */     OP_vphaddd,4783,197824
/* 804 */     OP_vphaddsw,4784,197914
/* 805 */     OP_vpmaddubsw,4785,198005
/* 806 */     OP_vphsubw,4786,198098
/* 807 */     OP_vphsubd,4787,198188
/* 808 */     OP_vphsubsw,4788,198278
/* 809 */     OP_vpsignb,4789,198369
/* 810 */     OP_vpsignw,4790,198459
/* 811 */     OP_vpsignd,4791,198549
/* 812 */     OP_vpmulhrsw,4792,198639
/* 813 */     OP_vpabsb,4793,198731
/* 814 */     OP_vpabsw,4794,198820
/* 815 */     OP_vpabsd,4795,198909
/* 816 */     OP_vpalignr,4796,198998
/* 817 */     OP_vpblendvb,4797,199089
/* 818 */     OP_vblendvps,4798,199177
/* 819 */     OP_vblendvpd,4799,199265
/* 820 */     OP_vptest,4800,199353
/* 821 */     OP_vpmovsxbw,4801,199438
/* 822 */     OP_vpmovsxbd,4802,199526
/* 823 */     OP_vpmovsxbq,4803,199614
/* 824 */     OP_vpmovsxdw,4804,199702
/* 825 */     OP_vpmovsxwq,4805,199790
/* 826 */     OP_vpmovsxdq,4806,199878
/* 827 */     OP_vpmuldq,4807,199966
/* 828 */     OP_vpcmpeqq,4808,200052
/* 829 */     OP_vmovntdqa,4809,200139
/* 830 */     OP_vpackusdw,4810,200227
/* 831 */     OP_vpmovzxbw,4811,200315
/* 832 */     OP_vpmovzxbd,4812,200403
/* 833 */     OP_vpmovzxbq,4813,200491
/* 834 */     OP_vpmovzxdw,4814,200579
/* 835 */     OP_vpmovzxwq,4815,200667
/* 836 */     OP_vpmovzxdq,4816,200755
/* 837 */     OP_vpcmpgtq,4817,200843
/* 838 */     OP_vpminsb,4818,200930
/* 839 */     OP_vpminsd,4819,201016
/* 840 */     OP_vpminuw,4820,201102
/* 841 */     OP_vpminud,4821,201188
/* 842 */     OP_vpmaxsb,4822,201274
/* 843 */     OP_vpmaxsd,4823,201360
/* 844 */     OP_vpmaxuw,4824,201446
/* 845 */     OP_vpmaxud,4825,201532
/* 846 */     OP_vpmulld,4826,201618
/* 847 */     OP_vphminposuw,4827,201704
/* 848 */     OP_vaesimc,4828,201794
/* 849 */     OP_vaesenc,4829,201880
/* 850 */     OP_vaesenclast,4830,201966
/* 851 */     OP_vaesdec,4831,202056
/* 852 */     OP_vaesdeclast,4832,202142
/* 853 */     OP_vpextrb,4833,202232
/* 854 */     OP_vpextrd,4834,202318
/* 855 */     OP_vextractps,4835,202404
/* 856 */     OP_vroundps,4836,202493
/* 857 */     OP_vroundpd,4837,202580
/* 858 */     OP_vroundss,4838,202667
/* 859 */     OP_vroundsd,4839,202754
/* 860 */     OP_vblendps,4840,202841
/* 861 */     OP_vblendpd,4841,202928
/* 862 */     OP_vpblendw,4842,203015
/* 863 */     OP_vpinsrb,4843,203102
/* 864 */     OP_vinsertps,4844,203188
/* 865 */     OP_vpinsrd,4845,203276
/* 866 */     OP_vdpps,4846,203362
/* 867 */     OP_vdppd,4847,203446
/* 868 */     OP_vmpsadbw,4848,203530
/* 869 */     OP_vpcmpestrm,4849,203617
/* 870 */     OP_vpcmpestri,4850,203706
/* 871 */     OP_vpcmpistrm,4851,203795
/* 872 */     OP_vpcmpistri,4852,203884
/* 873 */     OP_vpclmulqdq,4853,203973
/* 874 */     OP_vaeskeygenassist,4854,204062
/* 875 */     OP_vtestps,4855,204159
/* 876 */     OP_vtestpd,4856,204245
/* 877 */     OP_vzeroupper,4857,204331
/* 878 */     OP_vzeroall,4858,204421
/* 879 */     OP_vldmxcsr,4859,204509
/* 880 */     OP_vstmxcsr,4860,204596
/* 881 */     OP_vbroadcastss,4861,204683
/* 882 */     OP_vbroadcastsd,4862,204774
/* 883 */     OP_vbroadcastf128,4863,204866
/* 884 */     OP_vmaskmovps,4864,204960
/* 885 */     OP_vmaskmovpd,4865,205049
/* 886 */     OP_vpermilps,4866,205138
/* 887 */     OP_vpermilpd,4867,205226
/* 888 */     OP_vperm2f128,4868,205314
/* 889 */     OP_vinsertf128,4869,205403
/* 890 */     OP_vextractf128,4870,205493
/* 891 */     OP_vcvtph2ps,4871,205585
/* 892 */     OP_vcvtps2ph,4872,205673
/* 893 */     OP_vfmadd132ps,4875,205776
/* 894 */     OP_vfmadd132pd,4876,205868
/* 895 */     OP_vfmadd213ps,4877,205960
/* 896 */     OP_vfmadd213pd,4878,206052
/* 897 */     OP_vfmadd231ps,4879,206144
/* 898 */     OP_vfmadd231pd,4880,206236
/* 899 */     OP_vfmadd132ss,4881,206328
/* 900 */     OP_vfmadd132sd,4882,206420
/* 901 */     OP_vfmadd213ss,4883,206512
/* 902 */     OP_vfmadd213sd,4884,206604
/* 903 */     OP_vfmadd231ss,4885,206696
/* 904 */     OP_vfmadd231sd,4886,206788
/* 905 */     OP_vfmaddsub132ps,4887,206880
/* 906 */     OP_vfmaddsub132pd,4888,206975
/* 907 */     OP_vfmaddsub213ps,4889,207070
/* 908 */     OP_vfmaddsub213pd,4890,207165
/* 909 */     OP_vfmaddsub231ps,4891,207260
/* 910 */     OP_vfmaddsub231pd,4892,207355
/* 911 */     OP_vfmsubadd132ps,4893,207450
/* 912 */     OP_vfmsubadd132pd,4894,207545
/* 913 */     OP_vfmsubadd213ps,4895,207640
/* 914 */     OP_vfmsubadd213pd,4896,207735
/* 915 */     OP_vfmsubadd231ps,4897,207830
/* 916 */     OP_vfmsubadd231pd,4898,207925
/* 917 */     OP_vfmsub132ps,4899,208020
/* 918 */     OP_vfmsub132pd,4900,208112
/* 919 */     OP_vfmsub213ps,4901,208204
/* 920 */     OP_vfmsub213pd,4902,208296
/* 921 */     OP_vfmsub231ps,4903,208388
/* 922 */     OP_vfmsub231pd,4904,208480
/* 923 */     OP_vfmsub132ss,4905,208572
/* 924 */     OP_vfmsub132sd,4906,208664
/* 925 */     OP_vfmsub213ss,4907,208756
/* 926 */     OP_vfmsub213sd,4908,208848
/* 927 */     OP_vfmsub231ss,4909,208940
/* 928 */     OP_vfmsub231sd,4910,209032
/* 929 */     OP_vfnmadd132ps,4911,209124
/* 930 */     OP_vfnmadd132pd,4912,209217
/* 931 */     OP_vfnmadd213ps,4913,209310
/* 932 */     OP_vfnmadd213pd,4914,209403
/* 933 */     OP_vfnmadd231ps,4915,209496
/* 934 */     OP_vfnmadd231pd,4916,209589
/* 935 */     OP_vfnmadd132ss,4917,209682
/* 936 */     OP_vfnmadd132sd,4918,209775
/* 937 */     OP_vfnmadd213ss,4919,209868
/* 938 */     OP_vfnmadd213sd,4920,209961
/* 939 */     OP_vfnmadd231ss,4921,210054
/* 940 */     OP_vfnmadd231sd,4922,210147
/* 941 */     OP_vfnmsub132ps,4923,210240
/* 942 */     OP_vfnmsub132pd,4924,210333
/* 943 */     OP_vfnmsub213ps,4925,210426
/* 944 */     OP_vfnmsub213pd,4926,210519
/* 945 */     OP_vfnmsub231ps,4927,210612
/* 946 */     OP_vfnmsub231pd,4928,210705
/* 947 */     OP_vfnmsub132ss,4929,210798
/* 948 */     OP_vfnmsub132sd,4930,210891
/* 949 */     OP_vfnmsub213ss,4931,210984
/* 950 */     OP_vfnmsub213sd,4932,211077
/* 951 */     OP_vfnmsub231ss,4933,211170
/* 952 */     OP_vfnmsub231sd,4934,211263
/* 953 */     OP_movq2dq,4936,211357
/* 954 */     OP_movdq2q,4937,211446
/* 955 */     OP_fxsave64,4939,211536
/* 956 */     OP_fxrstor64,4940,211624
/* 957 */     OP_xsave64,4941,211713
/* 958 */     OP_xrstor64,4942,211800
/* 959 */     OP_xsaveopt64,4943,211888
/* 960 */     OP_jmpe,4947,212080
/* 961 */     OP_jmpe_abs,4948,212155
    OP_AFTER_LAST,4951,212242
    OP_FIRST 4952,212261
    OP_FIRST = OP_add,4952,212261
    OP_LAST 4953,212322
    OP_LAST  = OP_AFTER_LAST 4953,212322
#define OP_LAST 4958,212471
#define OP_cbw 4967,212734
#define OP_cwd 4968,212816
#define OP_jcxz 4969,212897
#define OP_jrcxz 4971,213028
#define OP_cmpxchg16b 4972,213115
#define OP_pextrq 4973,213202
#define OP_pinsrq 4974,213289
#define OP_movhlps 4976,213417
#define OP_movlhps 4977,213502
#define OP_jae_short 4979,213609
#define OP_jnae_short 4980,213678
#define OP_ja_short 4981,213747
#define OP_jna_short 4982,213816
#define OP_je_short 4983,213885
#define OP_jne_short 4984,213954
#define OP_jge_short 4985,214023
#define OP_jg_short 4986,214092
#define OP_jae 4987,214161
#define OP_jnae 4988,214224
#define OP_ja 4989,214287
#define OP_jna 4990,214350
#define OP_je 4991,214413
#define OP_jne 4992,214476
#define OP_jge 4993,214539
#define OP_jg 4994,214602
#define OP_setae 4995,214665
#define OP_setnae 4996,214728
#define OP_seta 4997,214791
#define OP_setna 4998,214854
#define OP_sete 4999,214917
#define OP_setne 5000,214980
#define OP_setge 5001,215043
#define OP_setg 5002,215106
#define OP_cmovae 5003,215169
#define OP_cmovnae 5004,215232
#define OP_cmova 5005,215295
#define OP_cmovna 5006,215358
#define OP_cmove 5007,215421
#define OP_cmovne 5008,215484
#define OP_cmovge 5009,215547
#define OP_cmovg 5010,215610
# define OP_fxsave 5012,215685
# define OP_fxrstor 5013,215753
# define OP_xsave 5014,215821
# define OP_xrstor 5015,215889
# define OP_xsaveopt 5016,215957
#define OP_icebp 5019,216059
#define OP_setalc 5020,216084

x86/sideline.h,30
#define _SIDELINE_H_ 41,1873

x86/steal_reg.h,136
#define X86_STEAL_REG_H40,1913
#define EDI_VAL_IN_MEM 58,2888
#define EDI_VAL_IN_EBX 59,2913
#define EDI_VAL_IN_EBX_AND_MEM 60,2938

x86/decode_table.c,8761
const instr_info_t * const op_instr[op_instr68,3181
#undef Jb1104,53953
#define xx 1106,53964
#define Ap 1109,54060
#define Cr 1110,54148
#define Dr 1111,54177
#define Eb 1112,54206
#define Ew 1113,54233
#define Ev 1114,54260
#define Esv 1115,54299
#define Ed 1116,54377
#define Ep 1117,54404
#define Ed_q 1118,54445
#define Rd_Mb 1119,54478
#define Rd_Mw 1120,54512
#define Gb 1121,54546
#define Gw 1122,54573
#define Gv 1123,54600
#define Gz 1124,54639
#define Gd 1125,54673
#define Gd_q 1126,54700
#define Gr 1127,54733
#define Ib 1128,54762
#define Iw 1129,54789
#define Iv 1130,54816
#define Iz 1131,54855
#define Jb 1132,54889
#define Jz 1133,54916
#define Ma 1134,54953
#define Mp 1135,54987
#define Ms 1136,55028
#define Ob 1137,55058
#define Ov 1138,55085
#define Pd 1139,55124
#define Pq 1140,55151
#define Pd_q 1141,55178
#define Ppi 1142,55211
#define Nq 1143,55238
#define Qd 1144,55271
#define Qq 1145,55298
#define Qpi 1146,55325
#define Rr 1147,55352
#define Sw 1148,55381
#define Vq 1149,55408
#define Vdq 1150,55435
#define Vd_dq 1151,55463
#define Vq_dq 1152,55498
#define Vps 1153,55533
#define Vpd 1154,55561
#define Vss 1155,55589
#define Vsd 1156,55622
#define Ups 1157,55655
#define Upd 1158,55689
#define Udq 1159,55723
#define Uq_dq 1160,55757
#define Wq 1161,55798
#define Wdq 1162,55825
#define Wq_dq 1163,55853
#define Wps 1164,55888
#define Wpd 1165,55916
#define Wss 1166,55944
#define Wsd 1167,55977
#define Udq_Md 1168,56010
#define Xb 1169,56046
#define Xv 1170,56073
#define Xz 1171,56112
#define Yb 1172,56146
#define Yv 1173,56173
#define Yz 1174,56212
#define Vvs 1177,56267
#define Vvd 1178,56301
#define Vvdq 1179,56335
#define Vqq 1180,56370
#define Vdq_qq 1181,56398
#define Wvs 1182,56435
#define Wvd 1183,56469
#define Wvdq 1184,56503
#define Uvs 1185,56538
#define Uvd 1186,56578
#define Uss 1187,56618
#define Usd 1188,56657
#define Hvs 1189,56696
#define Hvd 1190,56730
#define Hss 1191,56764
#define Hsd 1192,56797
#define Hq_dq 1193,56830
#define Hdq 1194,56865
#define Hvdq 1195,56893
#define Wvq_dq 1196,56928
#define Mvs 1197,56970
#define Mvd 1198,57004
#define Mvdq 1199,57038
#define Ldq 1200,57073
#define Lvdq 1201,57138
#define Mb 1207,57350
#define Md 1208,57377
#define Md_q 1209,57404
#define Mw 1210,57438
#define Mm 1211,57465
#define Me 1212,57494
#define Mxsave 1213,57523
#define Mps 1214,57557
#define Mpd 1215,57586
#define Mss 1216,57615
#define Msd 1217,57643
#define Mq 1218,57671
#define Mdq 1219,57698
#define Mq_dq 1220,57727
#define Mv 1221,57762
#define Zb 1222,57801
#define Bq 1223,57831
#define Bdq 1224,57865
#define Kw 1225,57901
#define Kd 1226,57935
#define Kq 1227,57969
#define Kx 1228,58003
#define Ky 1229,58038
#define Kz 1230,58102
#define i_dx 1231,58167
#define i_Ev 1232,58204
#define i_Exi 1233,58251
#define i_Ep 1234,58299
#define i_xSP 1235,58348
#define i_iSP 1236,58391
#define i_xBP 1237,58435
#define i_iSPo1 1239,58523
#define i_vSPo2 1240,58576
#define i_xSPo1 1241,58627
#define i_xSPo8 1242,58679
#define i_xSPs8 1243,58731
#define i_vSPs2 1244,58783
#define i_vSPs3 1245,58834
#define i_xSPoN 1247,58914
#define c1 1248,58966
#define cF 1249,58993
#define Av 1252,59050
#define eAX 1256,59144
#define eCX 1257,59178
#define eDX 1258,59212
#define eBX 1259,59246
#define eSP 1260,59280
#define eBP 1261,59314
#define eSI 1262,59348
#define eDI 1263,59382
#define zAX 1266,59479
#define zCX 1267,59514
#define zDX 1268,59549
#define zBX 1269,59584
#define zSP 1270,59619
#define zBP 1271,59654
#define zSI 1272,59689
#define zDI 1273,59724
#define xAX 1278,59898
#define xCX 1279,59933
#define xDX 1280,59968
#define xBX 1281,60003
#define xSP 1282,60038
#define xBP 1283,60073
#define xSI 1284,60108
#define xDI 1285,60143
#define axSP 1290,60318
#define axBP 1291,60359
#define axCX 1293,60433
#define axSI 1295,60502
#define axDI 1296,60543
#define axAX 1297,60584
#define al_x 1300,60704
#define cl_x 1301,60737
#define dl_x 1302,60770
#define bl_x 1303,60803
#define ah_x 1304,60836
#define ch_x 1305,60869
#define dh_x 1306,60902
#define bh_x 1307,60935
#define eAX_x 1310,61055
#define eCX_x 1311,61094
#define eDX_x 1312,61133
#define eBX_x 1313,61172
#define eSP_x 1314,61211
#define eBP_x 1315,61250
#define eSI_x 1316,61289
#define eDI_x 1317,61328
#define xAX_x 1320,61451
#define xCX_x 1321,61491
#define xDX_x 1322,61531
#define xBX_x 1323,61571
#define xSP_x 1324,61611
#define xBP_x 1325,61651
#define xSI_x 1326,61691
#define xDI_x 1327,61731
#define uAX_x 1330,61851
#define uCX_x 1331,61891
#define uDX_x 1332,61931
#define uBX_x 1333,61971
#define uSP_x 1334,62011
#define uBP_x 1335,62051
#define uSI_x 1336,62091
#define uDI_x 1337,62131
#define ax 1339,62172
#define cx 1340,62200
#define dx 1341,62228
#define bx 1342,62256
#define sp 1343,62284
#define bp 1344,62312
#define si 1345,62340
#define di 1346,62368
#define al 1348,62397
#define cl 1349,62425
#define dl 1350,62453
#define bl 1351,62481
#define ah 1352,62509
#define ch 1353,62537
#define dh 1354,62565
#define bh 1355,62593
#define eax 1357,62622
#define ecx 1358,62652
#define edx 1359,62682
#define ebx 1360,62712
#define esp 1361,62742
#define ebp 1362,62772
#define esi 1363,62802
#define edi 1364,62832
#define xsp 1366,62863
#define xcx 1367,62893
#define cs 1369,62924
#define ss 1370,62953
#define ds 1371,62982
#define es 1372,63011
#define fs 1373,63040
#define gs 1374,63069
#define st0 1376,63099
#define st1 1377,63129
#define st2 1378,63159
#define st3 1379,63189
#define st4 1380,63219
#define st5 1381,63249
#define st6 1382,63279
#define st7 1383,63309
#define xmm0 1385,63340
#define no 1388,63385
#define mrm 1389,63404
#define xop 1390,63431
#define mrm_xop 1391,63490
#define xop_next 1392,63559
#define i64 1393,63597
#define o64 1394,63626
#define reqp 1395,63655
#define vex 1396,63688
#define rex 1397,63718
#define x 1400,63762
#define fRC 1401,63778
#define fRP 1402,63807
#define fRA 1403,63836
#define fRZ 1404,63865
#define fRS 1405,63894
#define fRT 1406,63923
#define fRI 1407,63952
#define fRD 1408,63981
#define fRO 1409,64010
#define fRN 1410,64039
#define fRR 1411,64068
#define fRX 1412,64097
#define fR6 1413,64127
#define fWC 1414,64155
#define fWP 1415,64185
#define fWA 1416,64215
#define fWZ 1417,64245
#define fWS 1418,64275
#define fWT 1419,64305
#define fWI 1420,64335
#define fWD 1421,64365
#define fWO 1422,64395
#define fWN 1423,64425
#define fWR 1424,64455
#define fWX 1425,64485
#define fW6 1426,64516
#define fINT 1430,64619
#define NA 1433,64709
#define END_LIST 1434,64722
#define tfb 1435,64742
#define tsb 1436,64777
#define tex 1437,64813
#define t38 1438,64848
#define t3a 1439,64886
#define tpe 1440,64924
#define tvex 1441,64966
#define modx 1442,65006
#define tre 1443,65046
#define tne 1444,65085
#define tfl 1445,65126
#define tfh 1446,65166
#define exop 1447,65207
#define t64e 1448,65247
#define trexb 1449,65287
#define trexw 1450,65330
#define tvex 1451,65373
const instr_info_t invalid_instr 1456,65532
const instr_info_t first_byte[first_byte1463,65772
const instr_info_t second_byte[second_byte1766,86572
const instr_info_t extensions[extensions2082,107428
const instr_info_t prefix_extensions[prefix_extensions2412,127189
const instr_info_t vex_extensions[vex_extensions3991,223762
const instr_info_t mod_extensions[mod_extensions4240,240258
const instr_info_t rm_extensions[rm_extensions4293,242806
const instr_info_t x64_extensions[x64_extensions4349,246014
const instr_info_t vex_prefix_extensions[vex_prefix_extensions4408,249616
const instr_info_t vex_L_extensions[vex_L_extensions4422,250252
const instr_info_t rex_b_extensions[rex_b_extensions4452,251674
const instr_info_t rex_w_extensions[rex_w_extensions4471,252628
const byte third_byte_38_index[third_byte_38_index4514,254647
const instr_info_t third_byte_38[third_byte_384533,255788
const byte third_byte_3a_index[third_byte_3a_index4647,264166
const instr_info_t third_byte_3a[third_byte_3a4666,265307
const instr_info_t vex_W_extensions[vex_W_extensions4713,268359
const instr_info_t rep_extensions[rep_extensions4818,275293
const instr_info_t repne_extensions[repne_extensions4884,279209
const instr_info_t float_low_modrm[float_low_modrm4928,282190
const instr_info_t float_high_modrm[float_high_modrm5007,287562
const byte suffix_index[suffix_index5571,332824
const instr_info_t suffix_extensions[suffix_extensions5590,333958
const instr_info_t extra_operands[extra_operands5630,336879

x86/encode.c,1555
# undef ASSERT_TRUNCATE52,2229
# undef ASSERT_BITFIELD_TRUNCATE53,2253
# undef ASSERT_NOT_REACHED54,2286
# define ASSERT_TRUNCATE 55,2313
# define ASSERT_BITFIELD_TRUNCATE 56,2382
# define ASSERT_NOT_REACHED 57,2460
#define ENC_LEVEL 61,2613
const char * const type_names[type_names63,2634
const char * const reg_names[reg_names116,4523
const char * const size_names[size_names142,5969
template_optype_is_reg(264,11041
type_instr_uses_reg_bits(299,11947
type_uses_modrm_bits(315,12186
size_ok_varsz(338,12764
resolve_var_x64_size(480,19139
size_ok(511,20675
immed_size_ok(746,30100
reg_set_ext_prefixes(772,30834
reg_size_ok(787,31351
reg_rm_selectable(831,33194
mem_size_ok(839,33442
opnd_type_ok(861,34424
instr_info_extra_opnds(1176,51278
#define TEST_OPND(1188,51655
encoding_possible_pass(1213,53086
encoding_possible(1263,55472
instr_is_encoding_possible(1304,57249
get_encoding_info(1314,57519
instr_info_opnd_type(1332,58018
encode_immed(1376,59328
encode_reg_ext_prefixes(1503,63834
encode_rel_addr(1512,63999
encode_base_disp(1543,65302
set_immed(1714,72609
get_mem_instr_addr(1728,72985
encode_operand(1736,73244
encode_vex_final_prefix_byte(2047,87015
encode_vex_prefixes(2072,87817
encode_cti(2139,90388
copy_and_re_relativize_raw_instr(2226,93635
instr_encode_common(2315,97756
instr_encode_ignore_reachability(2705,113749
instr_encode_check_reachability(2712,114002
instr_encode_to_copy(2720,114293
instr_encode(2727,114522
instrlist_encode_to_copy(2737,114843
instrlist_encode(2764,115840

x86/mangle.c,5714
#define POST 72,2768
#define PRE 73,2807
    SLOT_NONE 82,3054
    SLOT_REG,83,3073
    SLOT_LOCAL,84,3087
    SLOT_FLAGS,85,3103
typedef byte slot_kind_t;87,3122
typedef struct _slot_t 94,3312
    slot_kind_t kind;95,3337
    byte value;96,3359
} slot_t;97,3375
typedef struct _callee_info_t 100,3441
    bool bailout;101,3473
    uint num_args;102,3545
    int num_instrs;103,3616
    app_pc start;104,3695
    app_pc bwd_tgt;105,3758
    app_pc fwd_tgt;106,3826
    int num_xmms_used;107,3889
    bool xmm_used[xmm_used108,3955
    bool reg_used[reg_used109,4019
    int num_callee_save_regs;110,4091
    bool callee_save_regs[callee_save_regs111,4155
    bool has_locals;112,4223
    bool xbp_is_fp;113,4288
    bool opt_inline;114,4356
    bool write_aflags;115,4414
    bool read_aflags;116,4481
    bool tls_used;117,4558
    reg_id_t spill_reg;118,4633
    uint slots_used;119,4699
    slot_t scratch_slots[scratch_slots120,4771
    instrlist_t *ilist;ilist121,4856
} callee_info_t;122,4933
static callee_info_t     default_callee_info;123,4950
static clean_call_info_t default_clean_call_info;124,4996
static generic_table_t  *callee_info_table;callee_info_table128,5120
static bool callee_info_table_exit 130,5241
#define INIT_HTABLE_SIZE_CALLEE 131,5285
callee_info_init(134,5358
callee_info_free(158,6112
callee_info_create(170,6446
callee_info_reserve_slot(183,6756
callee_info_slot_opnd(200,7385
callee_info_table_init(220,8168
callee_info_table_destroy(232,8598
callee_info_table_lookup(239,8755
callee_info_table_add(254,9244
clean_call_info_init(279,10139
convert_to_near_rel_common(301,10931
convert_to_near_rel_meta(440,16943
convert_to_near_rel(446,17099
remangle_short_rewrite(464,17854
get_clean_call_switch_stack_size(497,19116
get_clean_call_temp_stack_size(506,19287
insert_out_of_line_context_switch(512,19401
insert_clear_eflags(539,20508
insert_push_all_registers(571,21788
insert_pop_all_registers(684,27160
insert_get_mcontext_base(797,32157
clean_call_beyond_mcontext(814,32807
#define NUM_EXTRA_SLOTS 849,34275
prepare_for_clean_call(851,34323
cleanup_after_clean_call(960,38927
parameters_stack_padded(1026,41385
shrink_reg_for_param(1032,41501
insert_parameter_preparation(1075,43338
insert_meta_call_vargs(1392,59775
insert_clean_call_with_arg_jmp_if_ret_true(1431,61378
insert_reachable_cti(1479,63458
insert_mov_immed_common(1552,66479
insert_mov_immed_ptrsz(1621,69440
insert_mov_instr_addr(1630,69757
insert_push_immed_common(1646,70338
insert_push_immed_ptrsz(1695,72256
insert_push_instr_addr(1704,72561
stack_entry_size(1714,72965
insert_push_retaddr(1752,73953
insert_mov_ptr_uint_beyond_TOS(1789,75589
insert_push_cs(1833,77420
get_call_return_address(1859,78308
#define SAVE_TO_DC_OR_TLS(1916,80831
#define SAVE_TO_DC_OR_TLS_OR_REG(1922,81228
mangle_far_direct_helper(1928,81546
mangle_direct_call(1977,83917
mangle_seg_ref_opnd(2068,87621
mangle_far_indirect_helper(2123,89654
mangle_indirect_call(2198,92965
mangle_far_return_save_selector(2307,97488
mangle_return(2329,98413
mangle_indirect_jump(2530,107832
mangle_far_direct_jump(2595,110591
cti_is_normal_elision(2611,111106
find_syscall_num(2638,111893
mangle_insert_clone_code(2712,114878
mangle_syscall(2787,117902
mangle_clone_code(3012,128260
mangle_syscall_code(3069,130269
mangle_interrupt(3151,133353
#define FNSAVE_PC_OFFS 3177,134183
#define FXSAVE_PC_OFFS 3178,134210
#define FXSAVE_SIZE 3179,134237
float_pc_update(3182,134270
mangle_float_pc(3230,136279
#define CPUID_0_EAX 3374,142820
#define CPUID_0_EBX 3375,142852
#define CPUID_0_ECX 3376,142883
#define CPUID_0_EDX 3377,142914
#define CPUID_1_EAX 3380,143085
#define CPUID_1_EBX 3381,143116
#define CPUID_1_ECX 3382,143147
#define CPUID_1_EDX 3383,143178
mangle_cpuid(3386,143222
mangle_exit_cti_prefixes(3467,146038
mangle_rel_addr(3503,147414
instr_get_seg_ref_dst_idx(3645,154213
instr_get_seg_ref_src_idx(3663,154655
static ushort tls_slots[tls_slots3680,155086
mangle_mov_seg(3687,155296
mangle_seg_ref(3786,158882
mangle(3894,162938
#undef SAVE_TO_DC_OR_TLS4117,171868
# define SAVE_TO_DC_OR_TLS(4120,171985
# define RESTORE_FROM_DC_OR_TLS(4122,172096
# define SAVE_TO_DC_OR_TLS(4125,172223
# define RESTORE_FROM_DC_OR_TLS(4127,172338
sandbox_rep_instr(4132,172483
sandbox_write(4306,180021
sandbox_top_of_bb_check_s2ro(4506,188959
sandbox_top_of_bb(4516,189366
insert_selfmod_sandbox(4799,201040
static bool selfmod_s2ro[selfmod_s2ro4918,206728
static uint selfmod_eflags[selfmod_eflags4919,206774
#define SELFMOD_NUM_S2RO 4920,206857
#define SELFMOD_NUM_EFLAGS 4921,206931
static app_pc selfmod_gt4G[selfmod_gt4G4923,207065
# define SELFMOD_NUM_GT4G 4924,207151
set_selfmod_sandbox_offsets(4932,207435
finalize_selfmod_sandbox(4993,210005
#define MAX_NUM_FUNC_INSTRS 5017,211013
#define MAX_NUM_INLINE_INSTRS 5019,211115
mangle_init(5022,211154
mangle_exit(5037,211571
decode_callee_instr(5048,211772
check_callee_instr(5082,212844
check_callee_ilist(5214,218273
decode_callee_ilist(5259,219858
analyze_callee_regs_usage(5277,220355
analyze_callee_save_reg(5394,224879
analyze_callee_tls(5531,230789
analyze_callee_pick_spill_reg(5570,232196
analyze_callee_inline(5598,233208
analyze_callee_ilist(5830,242923
analyze_clean_call_aflags(5849,243562
analyze_clean_call_regs(5883,245030
analyze_clean_call_args(5955,248056
analyze_clean_call_inline(5981,248965
analyze_clean_call(6058,251642
insert_inline_reg_save(6105,253366
insert_inline_reg_restore(6153,255271
insert_inline_arg_setup(6192,256649
insert_inline_clean_call(6286,260340
analyze_clean_call(6340,262363

x86/proc.c,1673
# undef ASSERT_TRUNCATE52,2373
# undef ASSERT_BITFIELD_TRUNCATE53,2397
# undef ASSERT_NOT_REACHED54,2430
# define ASSERT_TRUNCATE 55,2457
# define ASSERT_BITFIELD_TRUNCATE 56,2526
# define ASSERT_NOT_REACHED 57,2604
#define INTEL_EBX 61,2740
#define INTEL_EDX 62,2780
#define INTEL_ECX 63,2820
#define AMD_EBX 66,2915
#define AMD_EDX 67,2953
#define AMD_ECX 68,2991
size_t cache_line_size 75,3221
static ptr_uint_t mask;76,3250
static uint L1_icache_size 78,3328
static uint L1_dcache_size 79,3377
static uint L2_cache_size 80,3426
static uint vendor 82,3476
static uint family 83,3515
static uint type 84,3541
static uint model 85,3567
static uint stepping 86,3593
static features_t features 92,3755
static uint brand_string[brand_string98,3990
set_cache_size(101,4060
get_cache_sizes_amd(119,4743
get_cache_sizes_intel(144,5447
get_processor_specific_info(218,8509
proc_init(375,13724
proc_get_vendor(429,16117
proc_set_vendor(436,16174
proc_get_family(452,16571
uint proc_get_type(457,16617
uint proc_get_model(463,16710
uint proc_get_stepping(468,16759
proc_has_feature(474,16819
proc_get_all_feature_bits(497,17423
proc_get_brand_string(503,17489
proc_get_L1_icache_size(509,17568
proc_get_L1_dcache_size(515,17643
proc_get_L2_cache_size(521,17718
proc_get_cache_size_str(527,17791
proc_get_cache_line_size(546,18175
proc_is_cache_aligned(553,18288
proc_bump_to_end_of_cache_line(561,18498
proc_get_containing_page(571,18768
machine_cache_sync(579,18995
proc_fpstate_save_size(589,19192
proc_save_fpstate(615,20243
proc_restore_fpstate(649,21212
dr_insert_save_fpstate(679,22029
dr_insert_restore_fpstate(705,23285

x86/retcheck.c,2601
#define SSE2_USE_STACK_POINTER 80,3119
#define USE_LOCAL_MPROT_STACK 83,3206
#define POST 91,3419
#define PRE 92,3453
emit_pextrw(107,3852
check_return_handle_call(148,5295
check_return_handle_return(226,8692
finalize_return_check(326,13238
typedef struct _call_stack_32 392,15822
    byte retaddr[retaddr393,15854
    struct _call_stack_32 *next;next394,15879
} call_stack_32_t;395,15912
check_return_too_deep(402,16065
check_return_too_shallow(496,19013
check_return_ra_mangled(569,21616
check_return_handle_call(609,23020
check_debug_regs(699,27143
check_debug(713,27727
check_return_handle_return(754,29197
finalize_return_check(894,35337
typedef struct _call_stack_32 898,35401
    byte retaddr[retaddr899,35433
    struct _call_stack_32 *next;next900,35458
} call_stack_32_t;901,35491
check_return_too_deep(908,35644
check_return_too_shallow(1004,38670
check_return_ra_mangled(1082,41342
add_call_site(1151,43727
find_call_site(1159,43951
is_observed_call_site(1169,44199
start_enforcing(1175,44340
add_return_target(1213,45634
unsigned first_ret_from[first_ret_from1251,47402
    RETURN_FROM_EXPECTED_CALLEE 1254,47484
    RETURN_FOR_FIRST_TIME 1255,47536
    RETURN_UNKNOWN_CALLEE 1260,47850
reverse_check_ret_source(1265,47912
at_iret_exception(1284,48627
at_pushregret_exception(1316,49925
at_vbjmp_exception(1349,51248
at_vbpop_exception(1384,52720
at_mso_rct_exception(1424,54624
    enum {MSO_PATTERN_SIZE MSO_PATTERN_SIZE1499,57993
          MSO_PATTERN_ADD_ESP 1500,58040
          MSO_PATTERN_ADD_ESP            = 0xc483,xc4831500,58040
          MSO_PATTERN_LEA_EBX_OFFSET 1501,58091
          MSO_PATTERN_LEA_EBX 1502,58137
          MSO_PATTERN_LEA_EBX            = 0x1d8d,x1d8d1502,58137
          MSO_PATTERN_LEA_EBX_DISP_OFFSET=1503,58188
          MSO_PATTERN_LEA_EBX_DISP_OFFSET= 2 + MSO_PATTERN_LEA_EBX_OFFSET,1503,58188
          MSO_PATTERN_POPAD_POPFD_OFFSET 1504,58263
          MSO_PATTERN_POPAD_POPFD 1505,58310
          MSO_PATTERN_POPAD_POPFD        = 0x9d61,x9d611505,58310
          MSO_PATTERN_MAX_AC_OFFSET 1506,58361
licdll_pattern_match(1609,62225
    enum {LICDLL_PATTERN_SIZE LICDLL_PATTERN_SIZE1611,62289
          LICDLL_PATTERN_MOV_EDX_ESP_24 1612,62339
          LICDLL_PATTERN_MOV_EDX_ESP_24     = 0x2424548b,x2424548b1612,62339
          LICDLL_PATTERN_24_POPFD_OFFSET 1613,62397
          LICDLL_PATTERN_24_POPFD_POPAD_RET 1614,62447
          LICDLL_PATTERN_24_POPFD_POPAD_RET = 0xc3619d24xc3619d241614,62447
at_licdll_rct_exception(1642,63195
ret_after_call_check(1685,65048

x86/arch.h,10377
#define X86_ARCH_H45,2079
#define CS32_SELECTOR 55,2406
#define CS64_SELECTOR 56,2433
mixed_mode_enabled(60,2491
#define PROT_OFFS 88,3457
#define MC_OFFS 89,3515
#define XAX_OFFSET 91,3586
#define XBX_OFFSET 92,3659
#define XCX_OFFSET 93,3732
#define XDX_OFFSET 94,3805
#define XSI_OFFSET 95,3878
#define XDI_OFFSET 96,3951
#define XBP_OFFSET 97,4024
#define XSP_OFFSET 98,4097
#define XFLAGS_OFFSET 99,4170
#define PC_OFFSET 100,4246
# define R8_OFFSET 102,4329
# define R9_OFFSET 103,4401
# define R10_OFFSET 104,4473
# define R11_OFFSET 105,4546
# define R12_OFFSET 106,4619
# define R13_OFFSET 107,4692
# define R14_OFFSET 108,4765
# define R15_OFFSET 109,4838
#define XMM_OFFSET 111,4918
#define ERRNO_OFFSET 113,4992
#define AT_SYSCALL_OFFSET 114,5059
#define EXIT_REASON_OFFSET 115,5131
#define NEXT_TAG_OFFSET 117,5206
#define LAST_EXIT_OFFSET 118,5282
#define DSTACK_OFFSET 119,5359
#define FRAGMENT_FIELD_OFFSET 121,5434
#define PRIVATE_CODE_OFFSET 122,5516
#  define APP_ERRNO_OFFSET 126,5637
#  define APP_FLS_OFFSET 127,5715
#  define PRIV_FLS_OFFSET 128,5796
#  define APP_RPC_OFFSET 129,5878
#  define PRIV_RPC_OFFSET 130,5957
#  define APP_NLS_CACHE_OFFSET 131,6037
#  define PRIV_NLS_CACHE_OFFSET 132,6119
#  define APP_STACK_LIMIT_OFFSET 133,6202
# define NONSWAPPED_SCRATCH_OFFSET 135,6295
# define TRACE_HEAD_PC_OFFSET 139,6424
# define SYSENTER_STORAGE_OFFSET 143,6528
# define IGNORE_ENTEREXIT_OFFSET 144,6614
# define CLIENT_DATA_OFFSET 148,6732
#define COARSE_IB_SRC_OFFSET 151,6819
#define COARSE_DIR_EXIT_OFFSET 152,6906
#define OPSZ_SAVED_XMM 157,7034
#define REG_SAVED_XMM0 158,7093
preserve_xmm_caller_saved(163,7305
    IBL_UNLINKED,177,7901
    IBL_DELETE,178,7919
    IBL_FAR,180,7975
    IBL_FAR_UNLINKED,181,7988
    IBL_TRACE_CMP,184,8099
    IBL_TRACE_CMP_UNLINKED,185,8118
    IBL_LINKED,187,8153
    IBL_TEMPLATE,189,8174
    IBL_LINK_STATE_END190,8241
} ibl_entry_point_type_t;191,8264
    IBL_BB_SHARED,197,8526
    IBL_SOURCE_TYPE_START 198,8546
    IBL_SOURCE_TYPE_START = IBL_BB_SHARED,198,8546
    IBL_TRACE_SHARED,199,8589
    IBL_BB_PRIVATE,200,8611
    IBL_TRACE_PRIVATE,201,8631
    IBL_COARSE_SHARED,202,8654
    IBL_SOURCE_TYPE_END203,8710
} ibl_source_fragment_type_t;204,8734
#define DEFAULT_IBL_BB(206,8765
#define DEFAULT_IBL_TRACE(208,8857
#define IS_IBL_BB(210,8961
#define IS_IBL_TRACE(212,9054
#define IS_IBL_LINKED(214,9156
#define IS_IBL_UNLINKED(217,9288
#define IBL_FRAG_FLAGS(221,9443
get_ibl_entry_type(225,9589
    ibl_entry_point_type_t link_state;240,9907
    ibl_source_fragment_type_t source_fragment_type;241,9946
    ibl_branch_type_t branch_type;242,9999
} ibl_type_t;243,10034
    GENCODE_X64 251,10311
    GENCODE_X86,252,10332
    GENCODE_X86_TO_X64,253,10349
    GENCODE_FROM_DCONTEXT,254,10373
} gencode_mode_t;255,10400
# define FRAGMENT_GENCODE_MODE(256,10418
# define SHARED_GENCODE(259,10595
# define SHARED_GENCODE_MATCH_THREAD(260,10683
# define THREAD_GENCODE(261,10770
# define GENCODE_IS_X64(262,10851
# define GENCODE_IS_X86(263,10921
# define GENCODE_IS_X86_TO_X64(264,10991
# define SHARED_GENCODE(266,11081
# define THREAD_GENCODE(267,11144
# define SHARED_GENCODE_MATCH_THREAD(268,11202
#define NUM_XMM_REGS 271,11274
#define NUM_GP_REGS 272,11310
typedef struct _clean_call_info_t 275,11457
    void *callee;callee276,11493
    uint num_args;277,11511
    bool save_fpstate;278,11530
    bool opt_inline;279,11553
    bool should_align;280,11574
    bool save_all_regs;281,11597
    bool skip_save_aflags;282,11621
    bool skip_clear_eflags;283,11648
    uint num_xmms_skip;284,11676
    bool xmm_skip[xmm_skip285,11700
    uint num_regs_skip;286,11733
    bool reg_skip[reg_skip287,11757
    bool preserve_mcontext;288,11789
    void *callee_info;callee_info289,11870
    instrlist_t *ilist;ilist290,11919
} clean_call_info_t;291,11990
#define GET_IBL_TARGET_TABLE(321,13777
    FCACHE_ENTER_TARGET_SLOT 434,18681
    FCACHE_ENTER_TARGET_SLOT    = TLS_XAX_SLOT,434,18681
    MANGLE_NEXT_TAG_SLOT 442,19008
    MANGLE_NEXT_TAG_SLOT        = TLS_XAX_SLOT,442,19008
    DIRECT_STUB_SPILL_SLOT 443,19056
    DIRECT_STUB_SPILL_SLOT      = TLS_XAX_SLOT,443,19056
    MANGLE_RIPREL_SPILL_SLOT 444,19104
    MANGLE_RIPREL_SPILL_SLOT    = TLS_XAX_SLOT,444,19104
    INDIRECT_STUB_SPILL_SLOT 446,19233
    INDIRECT_STUB_SPILL_SLOT    = TLS_XBX_SLOT,446,19233
    MANGLE_FAR_SPILL_SLOT 447,19281
    MANGLE_FAR_SPILL_SLOT       = TLS_XBX_SLOT,447,19281
    FLOAT_PC_STATE_SLOT 451,19484
    FLOAT_PC_STATE_SLOT         = TLS_XBX_SLOT,451,19484
    MANGLE_XCX_SPILL_SLOT 452,19532
    MANGLE_XCX_SPILL_SLOT       = TLS_XCX_SLOT,452,19532
    DCONTEXT_BASE_SPILL_SLOT 457,19756
    DCONTEXT_BASE_SPILL_SLOT    = TLS_XDX_SLOT,457,19756
    PREFIX_XAX_SPILL_SLOT 458,19804
    PREFIX_XAX_SPILL_SLOT       = TLS_XAX_SLOT,458,19804
    HTABLE_STATS_SPILL_SLOT 460,19880
    HTABLE_STATS_SPILL_SLOT     = TLS_HTABLE_STATS_SLOT,460,19880
typedef struct patch_entry_t 471,20248
        instr_t *instr;instr473,20291
        size_t   offset;474,20364
    } where;475,20429
    ptr_uint_t value_location_offset;476,20442
    ushort patch_flags;479,20656
    short  instr_offset;480,20738
} patch_entry_t;482,20878
    MAX_PATCH_ENTRIES 485,20903
    PATCH_TAKE_ADDRESS 492,21188
    PATCH_TAKE_ADDRESS      = 0x01,x01492,21188
    PATCH_PER_THREAD 493,21286
    PATCH_PER_THREAD        = 0x02,x02493,21286
    PATCH_UNPROT_STAT 494,21387
    PATCH_UNPROT_STAT       = 0x04,x04494,21387
    PATCH_MARKER 496,21574
    PATCH_MARKER            = 0x08,x08496,21574
    PATCH_ASSEMBLE_ABSOLUTE 497,21651
    PATCH_ASSEMBLE_ABSOLUTE = 0x10,x10497,21651
    PATCH_OFFSET_VALID 499,21821
    PATCH_OFFSET_VALID      = 0x20,x20499,21821
    PATCH_UINT_SIZED 501,21972
    PATCH_UINT_SIZED        = 0x40,x40501,21972
    PATCH_TYPE_ABSOLUTE 505,22080
    PATCH_TYPE_ABSOLUTE     = 0x0,x0505,22080
    PATCH_TYPE_INDIRECT_XDI 506,22169
    PATCH_TYPE_INDIRECT_XDI = 0x1,x1506,22169
    PATCH_TYPE_INDIRECT_FS 507,22258
    PATCH_TYPE_INDIRECT_FS  = 0x2,x2507,22258
} patch_list_type_t;508,22346
typedef struct patch_list_t 510,22368
    ushort num_relocations;511,22398
    ushort /* patch_list_type_t */ type;512,22426
    patch_entry_t entry[entry513,22467
} patch_list_t;514,22511
typedef struct _far_ref_t 529,22985
    uint pc;531,23084
    ushort selector;532,23097
} far_ref_t;533,23118
typedef struct ibl_code_t 537,23222
    bool initialized:initialized538,23250
    bool thread_shared_routine:thread_shared_routine539,23317
    bool ibl_head_is_inlined:ibl_head_is_inlined540,23351
    byte *indirect_branch_lookup_routine;indirect_branch_lookup_routine541,23383
    byte *far_ibl;far_ibl543,23456
    byte *far_ibl_unlinked;far_ibl_unlinked544,23475
    byte *trace_cmp_entry;trace_cmp_entry547,23577
    byte *trace_cmp_unlinked;trace_cmp_unlinked548,23604
    bool x86_mode;549,23634
    bool x86_to_x64_mode;550,23695
    far_ref_t far_jmp_opnd;552,23862
    far_ref_t far_jmp_unlinked_opnd;553,23890
    byte *unlinked_ibl_entry;unlinked_ibl_entry555,23934
    byte *target_delete_entry;target_delete_entry556,23964
    uint ibl_routine_length;557,23995
    patch_list_t ibl_patch;559,24059
    ibl_branch_type_t branch_type;560,24087
    ibl_source_fragment_type_t source_fragment_type;561,24122
    byte *inline_ibl_stub_template;inline_ibl_stub_template564,24245
    patch_list_t ibl_stub_patch;565,24281
    uint inline_stub_length;566,24314
    uint inline_linkstub_first_offs;569,24445
    uint inline_linkstub_second_offs;570,24482
    uint inline_unlink_offs;571,24520
    uint inline_linkedjmp_offs;572,24549
    uint inline_unlinkedjmp_offs;573,24581
    uint unprot_stats_offset;577,24716
    uint hashtable_stats_offset;578,24747
    uint entry_stats_to_lookup_table_offset;581,24975
} ibl_code_t;583,25074
typedef struct _generated_code_t 593,25434
    byte *fcache_enter;fcache_enter594,25469
    byte *fcache_return;fcache_return595,25493
    byte *fcache_enter_return_end;fcache_enter_return_end597,25543
    ibl_code_t trace_ibl[trace_ibl600,25586
    ibl_code_t bb_ibl[bb_ibl601,25633
    ibl_code_t coarse_ibl[coarse_ibl602,25677
    byte *ibl_routines_end;ibl_routines_end604,25750
    ibl_code_t shared_syscall_code;609,25842
    byte *shared_syscall;shared_syscall610,25878
    byte *unlinked_shared_syscall;unlinked_shared_syscall611,25904
    byte *end_shared_syscall;end_shared_syscall612,25939
    uint sys_syscall_offs;617,26169
    uint sys_unlink_offs;619,26258
    byte *do_syscall;do_syscall621,26291
    uint do_syscall_offs;622,26313
    byte *fcache_enter_indirect;fcache_enter_indirect624,26398
    byte *do_callback_return;do_callback_return625,26431
    byte *do_int_syscall;do_int_syscall631,26684
    uint do_int_syscall_offs;632,26710
    byte *do_clone_syscall;do_clone_syscall633,26784
    uint do_clone_syscall_offs;634,26812
    byte *do_vmkuw_syscall;do_vmkuw_syscall636,26909
    uint do_vmkuw_syscall_offs;637,26937
    byte *new_thread_dynamo_start;new_thread_dynamo_start642,27115
    byte *trace_head_incr;trace_head_incr645,27186
    byte *pextrw;pextrw648,27246
    byte *pinsrw;pinsrw649,27264
    profile_t *profile;profile652,27314
    byte *reset_exit_stub;reset_exit_stub658,27538
    byte *fcache_return_coarse;fcache_return_coarse665,27865
    byte *trace_head_return_coarse;trace_head_return_coarse666,27897
    byte *client_ibl_xfer;client_ibl_xfer669,28004
    uint client_ibl_unlink_offs;670,28031
    byte *clean_call_save;clean_call_save673,28126
    byte *clean_call_restore;clean_call_restore674,28153
    bool thread_shared;676,28184
    bool writable;677,28208
    gencode_mode_t gencode_mode;679,28238
    byte *gen_start_pc;gen_start_pc687,28589
    byte *gen_end_pc;gen_end_pc688,28643
    byte *commit_end_pc;commit_end_pc689,28693
} generated_code_t;691,28817
is_shared_gencode(728,30436
get_shared_gencode(741,30774
#define USE_SHARED_GENCODE_ALWAYS(769,31811
#define USE_SHARED_GENCODE(773,32009
#define USE_SHARED_BB_IBL(777,32237
#define USE_SHARED_TRACE_IBL(780,32331
get_emitted_routines_code(786,32580

x86/loadtoconst.c,1756
fragment_t *frags_waiting_LTC[frags_waiting_LTC60,2286
int num_frags_waiting_LTC;61,2345
int safe_taken,66,2480
int safe_taken,opt_taken,66,2480
int safe_taken,opt_taken,addrs_analyzed,66,2480
int safe_taken,opt_taken,addrs_analyzed,addrs_made_const,66,2480
int safe_taken,opt_taken,addrs_analyzed,addrs_made_const,traces_analyzed,66,2480
int safe_taken,opt_taken,addrs_analyzed,addrs_made_const,traces_analyzed,addrs_seen;66,2480
#define NUM_TMP_OPNDS 69,2573
static opnd_t tmpOpnds[tmpOpnds70,2599
analyze_memrefs(73,2644
check_mem_refs(273,10114
LTC_online_optimize_and_replace(388,14390
get_mem_address(442,16545
get_mem_val(479,17448
LTC_examine_traces(508,18282
LTC_fragment_delete(548,19558
remove_mem_ref_check(573,20258
pop_instr_off_list(625,22386
ltc_trace(634,22625
do_single_LTC(779,28192
*fix_cmp_containing_constant(fix_cmp_containing_constant842,30925
safe_to_transpose_cmp(947,35112
safe_to_delete_cmp(952,35245
instr_flag_write_necessary(959,35418
safe_to_modify_cmp(994,36592
pc_reads_flags_before_writes(1092,40668
becomes_ubr_from_cmp(1116,41353
change_cbr_due_to_reversed_cmp(1140,41997
should_replace_load(1168,42778
value_to_replace(1189,43387
should_replace_load(1198,43651
value_to_replace(1239,45111
save_eflags_list(1273,46102
restore_eflags_list(1302,47156
constant_propagate(1332,48139
instr_replace_reg_with_const_in_src(1478,54895
instr_replace_reg_with_const_in_dst(1536,57277
opnd_replace_reg_with_val(1562,58127
replace_self_loop_with_opnd(1639,60424
instr_arithmatic_simplify(1680,61794
instr_replace_inplace(1871,69364
instrlist_remove_nops(1887,69749
instrlist_depends_on_reg(1920,70701
instr_add_to_exitexec_list(1943,71181
instrlist_setup_pseudo_exitstubs(1955,71547

x86/decode_fast.c,2814
# undef ASSERT_TRUNCATE51,2206
# undef ASSERT_BITFIELD_TRUNCATE52,2230
# undef ASSERT_NOT_REACHED53,2263
# define ASSERT_TRUNCATE 54,2290
# define ASSERT_BITFIELD_TRUNCATE 55,2359
# define ASSERT_NOT_REACHED 56,2437
static const byte fixed_length[fixed_length75,3291
static const signed char immed_adjustment[immed_adjustment105,4730
static const signed char immed_adjustment_intel64[immed_adjustment_intel64129,6102
static const signed char disp_adjustment[disp_adjustment157,7634
static const char x64_adjustment[x64_adjustment185,9196
    VARLEN_NONE,222,11223
    VARLEN_MODRM,223,11240
    VARLEN_FP_OP,224,11258
    VARLEN_ESCAPE,225,11276
    VARLEN_3BYTE_38_ESCAPE,226,11316
    VARLEN_3BYTE_3A_ESCAPE,227,11371
#define m 231,11489
#define f 232,11512
#define e 233,11535
static const byte variable_length[variable_length238,11717
#undef m261,12741
#undef f262,12750
#undef e263,12759
static const byte escape_fixed_length[escape_fixed_length272,13019
#define m 303,14375
#define e1 304,14398
#define e2 305,14432
static const byte escape_variable_length[escape_variable_length310,14632
#undef m336,15566
#undef e337,15575
static const byte threebyte_38_fixed_length[threebyte_38_fixed_length346,15928
static const byte threebyte_3a_fixed_length[threebyte_3a_fixed_length367,16926
static const byte threebyte_38_vex_extra[threebyte_38_vex_extra388,17823
decode_sizeof(415,19036
sizeof_3byte_38(607,26733
sizeof_3byte_3a(622,27249
sizeof_escape(638,27935
sizeof_modrm(678,29287
sizeof_fp_op(739,31149
static const byte interesting[interesting757,31830
#define x 787,33096
#define RC 788,33112
#define RP 789,33140
#define RZ 790,33168
#define RS 791,33196
#define RO 792,33224
#define R6 793,33252
#define RB 794,33279
#define RL 795,33324
#define RE 796,33369
#define R5O 797,33429
#define WC 798,33478
#define WZ 799,33507
#define W6 800,33536
#define W5 801,33564
#define W5O 802,33615
#define BC 803,33666
#define BA 804,33711
#define BD 805,33756
#define B6 806,33816
#define EFLAGS_6_ESCAPE 807,33860
#define EFLAGS_6_SPECIAL 808,33888
#define E 809,33916
#define S 810,33942
static const int eflags_6[eflags_6812,33970
static const int escape_eflags_6[escape_eflags_6836,35112
#undef x857,36184
#undef RC858,36193
#undef RP859,36203
#undef RZ860,36213
#undef RS861,36223
#undef RO862,36233
#undef R6863,36243
#undef RB864,36253
#undef RL865,36263
#undef RE866,36273
#undef R5O867,36283
#undef WC868,36294
#undef WZ869,36304
#undef W6870,36314
#undef W5871,36324
#undef W5O872,36334
#undef BC873,36345
#undef BA874,36355
#undef BD875,36365
#undef B6876,36375
#undef E877,36385
#undef S878,36394
convert_8bit_offset(887,36735
decode_cti(912,37895
decode_next_pc(1324,54426
decode_raw(1344,55162

x86/decode.c,1586
# undef ASSERT_TRUNCATE73,3290
# undef ASSERT_BITFIELD_TRUNCATE74,3314
# undef ASSERT_NOT_REACHED75,3347
# define ASSERT_TRUNCATE 76,3374
# define ASSERT_BITFIELD_TRUNCATE 77,3443
# define ASSERT_NOT_REACHED 78,3521
#define xx 82,3629
static const instr_info_t escape_instr 83,3660
static const instr_info_t escape_38_instr 85,3764
static const instr_info_t escape_3a_instr 87,3880
#undef xx89,3996
static bool initexit_x86_mode 95,4138
set_x86_mode(105,4562
get_x86_mode(129,5398
is_variable_size(150,6229
resolve_var_reg_size(183,6919
resolve_variable_size(197,7344
resolve_variable_size_dc(262,10610
resolve_addr_size(271,10869
optype_is_indir_reg(280,11090
indir_var_reg_size(300,11592
indir_var_reg_offs_factor(336,12606
read_immed(354,13028
read_operand(390,14149
read_modrm(513,18797
read_vex(585,21262
read_instruction(689,24788
reg8_alternative(1081,41214
    DECODE_REG_REG,1095,41714
    DECODE_REG_BASE,1096,41734
    DECODE_REG_INDEX,1097,41755
    DECODE_REG_RM,1098,41777
} decode_reg_t;1099,41796
decode_reg(1105,41963
decode_modrm(1191,45104
get_immed(1354,52228
resolve_var_reg(1373,52868
ds_seg(1417,54379
decode_operand(1433,54873
decode_eflags_usage(1722,68813
decode_opcode(1748,69790
check_is_variable_size(1792,71587
decode_common(1814,72474
decode(1970,79030
decode_from_copy(1976,79148
get_next_instr_info(1982,79320
decode_first_opcode_byte(1988,79425
decode_opcode_name(1996,79592
unit_check_decode_ff_opcode(2011,80032
#define CHECK_ENCODE_OPCODE(2047,81255
unit_check_sse3(2058,81788
int main(2092,83629

x86/x86_code.c,264
get_xmm_vals(52,2281
thread_starting(67,2690
dynamo_start(79,3011
auto_setup(121,4579
native_get_retstack_idx(209,7532
new_thread_setup(229,8271
nt_continue_setup(286,10219
safe_read_fast(335,11944
is_safe_read_pc(347,12246
safe_read_resume_pc(355,12426

x86/decodelib.c,664
options_t dynamo_options;48,2084
file_t our_stdout 52,2202
file_t our_stderr 53,2237
file_t our_stdin 54,2272
dr_get_stdout_file(59,2343
dr_get_stderr_file(65,2431
dr_get_stdin_file(71,2518
static uint vendor 77,2597
proc_get_vendor(80,2652
proc_set_vendor(87,2709
heap_alloc(99,2948
heap_free(105,3058
get_thread_private_dcontext(111,3172
external_error(117,3244
proc_save_fpstate(124,3391
proc_restore_fpstate(130,3444
dr_mcontext_as_priv_mcontext(136,3533
instrlist_meta_postinsert(144,3783
double_print(156,4173
print_to_buffer(178,4852
#undef vsnprintf181,4956
print_file(204,5641
#define MAX_PRINT_FILE_LEN 211,5886
os_write(233,6438

x86/disassemble.c,1692
# undef ASSERT_TRUNCATE76,3202
# undef ASSERT_BITFIELD_TRUNCATE77,3226
# undef ASSERT_NOT_REACHED78,3259
# define ASSERT_TRUNCATE 79,3286
# define ASSERT_BITFIELD_TRUNCATE 80,3355
# define ASSERT_NOT_REACHED 81,3433
disassemble_set_syntax(90,3636
#define BYTES_PER_LINE 103,4016
immed_prefix(110,4221
postop_suffix(116,4325
reg_disassemble(122,4446
opnd_mem_disassemble_prefix(131,4760
opnd_base_disp_disassemble(153,5560
internal_opnd_disassemble(218,8100
opnd_disassemble(489,21795
opnd_disassemble_to_buffer(500,22224
print_bytes_to_buffer(510,22489
print_extra_bytes_to_buffer(533,23169
print_bytes_to_file(547,23671
print_extra_bytes_to_file(559,24098
internal_disassemble(575,24758
internal_disassemble_to_file(630,26543
disassemble(654,27552
disassemble_with_bytes(668,28093
disassemble_with_info(688,28838
disassemble_from_copy(705,29535
disassemble_to_buffer(713,29833
instr_implicit_reg(726,30278
opnd_disassemble_noimplicit(743,30786
instr_disassemble_opnds_noimplicit(825,33305
instr_opcode_name(888,35978
instr_opcode_name_suffix(910,36620
internal_instr_disassemble(981,39130
instr_disassemble(1125,44868
instr_disassemble_to_buffer(1149,45912
exit_stub_type_desc(1159,46198
common_disassemble_fragment(1189,47247
disassemble_fragment(1363,54347
disassemble_fragment_header(1375,54686
disassemble_fragment_body(1381,54845
disassemble_app_bb(1387,55002
instrlist_disassemble(1399,55365
callstack_dump_module_info(1511,59561
internal_dump_callstack_to_buffer(1529,60230
internal_dump_callstack(1591,62765
dump_callstack(1605,63307
dump_callstack_to_buffer(1611,63459
dump_mcontext_callstack(1620,63719
dump_dr_callstack(1630,64026

rct.h,157
#define RCT_H40,1789
enum {RCT_CACHE_EXEMPT_NONE RCT_CACHE_EXEMPT_NONE42,1804
      RCT_CACHE_EXEMPT_MODULES 43,1837
      RCT_CACHE_EXEMPT_ALL 44,1873

fragment.h,8348
#define _FRAGMENT_H_ 43,1990
#define FRAG_IS_FUTURE 49,2089
#define FRAG_TRACE_LINKS_SHIFTED 50,2134
#define FRAG_IS_TRACE 51,2179
#define FRAG_IS_TRACE_HEAD 52,2224
#define FRAG_LINKED_OUTGOING 53,2269
#define FRAG_LINKED_INCOMING 54,2314
#define FRAG_CANNOT_DELETE 55,2359
#define FRAG_CANNOT_BE_TRACE 56,2404
#define FRAG_FAKE 63,2731
#define FRAG_WRITES_EFLAGS_6 66,2848
#define FRAG_WRITES_EFLAGS_OF 68,2956
#define FRAG_FCACHE_FREE_LIST 76,3297
#define FRAG_HAS_SYSCALL 78,3343
#define FRAG_TRACE_BUILDING 80,3464
#define FRAG_WAS_DELETED 86,3699
#define FRAG_SELFMOD_SANDBOXED 88,3820
#define FRAG_HAS_DIRECT_CTI 90,3924
#define FRAG_IS_EMPTY_SLOT 92,4047
#define FRAG_IS_EXTRA_VMAREA 94,4170
#define FRAG_IS_EXTRA_VMAREA_INIT 95,4215
# define FRAG_DYNGEN 99,4360
#  define FRAG_DYNGEN_RESTRICTED 102,4497
# define FRAG_HAS_MOV_SEG 110,4691
# define FRAG_32_BIT 115,4796
#define FRAG_MUST_END_TRACE 118,4849
#define FRAG_SHARED 120,4895
#define FRAG_TEMP_PRIVATE 124,5025
#define FRAG_TRACE_OUTPUT 126,5071
#define FRAG_CBR_FALLTHROUGH_SHORT 128,5117
#define FRAG_COARSE_GRAIN 133,5263
#define FRAG_HAS_TRANSLATION_INFO 140,5606
# define FRAG_X86_TO_X64 144,5736
# define FRAG_DO_NOT_SIDELINE 149,5872
#define FRAG_FOLLOWS_FREE_ENTRY 153,5992
#define FUTURE_FLAGS_TRANSFER 164,6557
#define FUTURE_FLAGS_ALLOWED 166,6638
enum { MAX_FRAGMENT_SIZE 170,6864
enum { MAX_FRAGMENT_SIZE = USHRT_MAX 170,6864
struct _fragment_t 176,7058
    app_pc    tag;182,7336
    uint      flags;187,7548
    ushort       size;197,7974
    byte      prefix_size;204,8245
    byte      fcache_extra;205,8333
    cache_pc  start_pc;207,8428
        linkstub_t  *incoming_stubs;incoming_stubs215,8825
        translation_info_t *translation_info;translation_info219,8987
    } in_xlate;220,9033
    fragment_t  *next_vmarea;next_vmarea222,9050
    fragment_t  *prev_vmarea;prev_vmarea223,9128
        fragment_t  *also_vmarea;also_vmarea225,9218
        uint      flushtime;229,9459
    } also;230,9488
    int       id;233,9514
    int num_calls;237,9634
    int num_rets;238,9653
typedef struct _private_fragment_t 247,9903
    fragment_t  f;248,9940
    fragment_t  *next_fcache;next_fcache249,9959
    fragment_t  *prev_fcache;prev_fcache250,10037
} private_fragment_t;251,10115
struct _future_fragment_t 259,10409
    app_pc    tag;260,10437
    uint      flags;261,10514
    linkstub_t  *incoming_stubs;incoming_stubs262,10573
typedef struct _trace_bb_info_t 266,10709
    app_pc tag;267,10743
    uint num_exits;275,11111
} trace_bb_info_t;277,11138
typedef struct _trace_only_t 282,11300
    uint64    count;284,11352
    uint64    total_time;285,11428
    linkcount_type_t count_old_pre;289,11541
    linkcount_type_t count_old_post;290,11577
    trace_bb_info_t *bbs;bbs294,11697
    uint    num_bbs;295,11723
} trace_only_t;296,11744
struct _trace_t 299,11797
    fragment_t     f;300,11815
    trace_only_t t;301,11857
typedef struct _private_trace_t 305,11928
    private_fragment_t  f;306,11962
    trace_only_t        t;307,11989
} private_trace_t;308,12016
#define TRACE_FIELDS(311,12109
#define IS_IBL_TARGET(332,13201
#define HASHTABLE_IBL_OFFSET(338,13510
typedef struct _unprot_ht_statistics_t 344,13780
    hashtable_statistics_t trace_ibl_stats[trace_ibl_stats350,14191
    hashtable_statistics_t bb_ibl_stats[bb_ibl_stats351,14256
    hashtable_statistics_t shared_syscall_hit_stats;355,14404
} unprot_ht_statistics_t;357,14507
typedef struct _fragment_entry_t 363,14671
    app_pc    tag_fragment;364,14706
    cache_pc  start_pc_fragment;365,14783
} fragment_entry_t;366,14865
#define HASHLOOKUP_SENTINEL_START_PC 368,14886
#define FRAG_TABLE_INCLUSIVE_HIERARCHY 379,15360
#define FRAG_TABLE_IBL_TARGETED 381,15515
#define FRAG_TABLE_TARGET_SHARED 383,15663
#define FRAG_TABLE_SHARED 385,15768
#define FRAG_TABLE_PERSISTENT 387,15878
#define FRAG_TABLE_TRACE 389,15986
#define NAME_KEY 393,16173
#define ENTRY_TYPE 394,16199
#define HASHTABLEX_HEADER 396,16276
#define CUSTOM_FIELDS 397,16304
#undef HASHTABLEX_HEADER399,16361
#define NAME_KEY 404,16532
#define ENTRY_TYPE 405,16553
# define HASHTABLE_ENTRY_STATS 408,16662
# define CUSTOM_FIELDS 409,16695
# define CUSTOM_FIELDS 418,17109
#define HASHTABLEX_HEADER 421,17203
#undef HASHTABLEX_HEADER423,17255
#define NAME_KEY 428,17419
#define ENTRY_TYPE 429,17443
#define CUSTOM_FIELDS 431,17514
#define HASHTABLEX_HEADER 432,17547
#undef HASHTABLEX_HEADER434,17599
typedef struct _per_thread_t 456,18704
    ibl_table_t trace_ibt[trace_ibt457,18735
    ibl_table_t bb_ibt[bb_ibt458,18806
    fragment_table_t bb;459,18871
    fragment_table_t trace;460,18896
    fragment_table_t future;461,18924
    mutex_t fragment_delete_mutex;463,19011
    file_t tracefile;465,19053
    bool           could_be_linking;468,19140
    bool           wait_for_unlink;469,19216
    bool           about_to_exit;470,19303
    bool           flush_queue_nonempty;471,19401
    event_t        waiting_for_unlink;472,19490
    event_t        finished_with_unlink;473,19567
    event_t        finished_all_unlink;474,19620
    mutex_t          linking_lock;478,19831
    bool           soon_to_be_linking;479,19866
    uint           flushtime_last_update;481,19994
    bool           at_syscall_at_flush;486,20227
    uint tracedump_num_below_threshold;489,20293
    linkcount_type_t tracedump_count_below_threshold;490,20333
} per_thread_t;492,20394
#define FCACHE_ENTRY_PC(495,20412
#define FCACHE_PREFIX_ENTRY_PC(496,20470
#define FCACHE_IBT_ENTRY_PC(498,20579
#define FRAGMENT_STRUCT_SIZE(503,20777
#define FRAGMENT_EXIT_STUBS(509,21109
#define FRAGMENT_SELFMOD_COPY_SIZE(515,21398
#define FRAGMENT_SELFMOD_COPY_PC(518,21568
#define FRAGMENT_TRANSLATION_INFO_ADDR(522,21743
#define HAS_STORED_TRANSLATION_INFO(529,22118
#define FRAGMENT_TRANSLATION_INFO(533,22296
    FRAGDEL_ALL 614,24466
    FRAGDEL_ALL               = 0x000,x000614,24466
    FRAGDEL_NO_OUTPUT 615,24505
    FRAGDEL_NO_OUTPUT         = 0x001,x001615,24505
    FRAGDEL_NO_UNLINK 616,24544
    FRAGDEL_NO_UNLINK         = 0x002,x002616,24544
    FRAGDEL_NO_HTABLE 617,24583
    FRAGDEL_NO_HTABLE         = 0x004,x004617,24583
    FRAGDEL_NO_FCACHE 618,24622
    FRAGDEL_NO_FCACHE         = 0x008,x008618,24622
    FRAGDEL_NO_HEAP 619,24661
    FRAGDEL_NO_HEAP           = 0x010,x010619,24661
    FRAGDEL_NO_MONITOR 620,24700
    FRAGDEL_NO_MONITOR        = 0x020,x020620,24700
    FRAGDEL_NO_VMAREA 621,24739
    FRAGDEL_NO_VMAREA         = 0x040,x040621,24739
    FRAGDEL_NEED_CHLINK_LOCK 623,24779
    FRAGDEL_NEED_CHLINK_LOCK  = 0x080,x080623,24779
struct _rct_module_table_t 725,27923
    app_pc_table_t *persisted_table;persisted_table726,27952
    app_pc_table_t *live_table;live_table727,27989
    app_pc live_min;732,28236
    app_pc live_max;733,28257
typedef struct _app_to_cache_t 797,30051
    app_pc app;798,30084
    cache_pc cache;803,30325
} app_to_cache_t;804,30345
#define NAME_KEY 807,30442
#define ENTRY_TYPE 808,30466
#define CUSTOM_FIELDS 810,30545
#define HASHTABLEX_HEADER 812,30592
#undef HASHTABLEX_HEADER814,30644
#define PROTECT_FRAGMENT_ENABLED(1101,40521
get_ibl_per_type_statistics(1118,41061
typedef struct _tracedump_file_header_t 1162,42361
    int version;1163,42403
    bool x64;1164,42483
    int linkcount_size;1165,42571
} tracedump_file_header_t;1166,42657
typedef struct _tracedump_trace_header_t 1169,42752
    int frag_id;1170,42795
    app_pc tag;1171,42856
    app_pc cache_start_pc;1172,42931
    int entry_offs;1173,43004
    int num_exits;1174,43074
    int code_size;1175,43141
    uint num_bbs;1176,43215
    bool x64;1177,43306
} tracedump_trace_header_t;1178,43381
#define BB_ORIGIN_HEADER_SIZE 1181,43464
#define SEPARATE_STUB_MAX_SIZE 1184,43592
typedef struct _tracedump_stub_data 1187,43694
    int cti_offs;1188,43732
    app_pc stub_pc;1190,43874
    app_pc target;1191,43934
    bool linked;1192,43982
    int stub_size;1193,44052
        uint count32;1196,44198
        uint64 count64;1197,44257
    } count;1198,44318
    byte stub_code[stub_code1205,44678
} tracedump_stub_data_t;1206,44719
#define STUB_DATA_FIXED_SIZE 1209,44821

utils.c,7081
try_except_t global_try_except;77,2679
soft_terminate(87,2917
ignore_assert(112,3498
internal_error(137,4280
external_error(191,6386
struct _thread_locks_t 213,7205
    mutex_t *last_lock;last_lock214,7230
#define DUMP_NONZERO(230,8019
#define DUMP_LOCK_INFO_ARGS(233,8176
dump_mutex_callstack(249,9099
dump_owned_locks(269,9686
thread_owns_no_locks(286,10361
thread_owns_one_lock(295,10648
thread_owns_two_locks(307,11113
thread_owns_first_or_both_locks_only(322,11696
dump_process_locks(338,12390
locks_not_closed(373,13932
locks_thread_init(419,15874
locks_thread_exit(432,16381
add_process_lock(450,17326
remove_process_lock(482,18726
mutex_collect_callstack(508,19847
enum {LOCK_NOT_OWNABLE,LOCK_NOT_OWNABLE541,20878
enum {LOCK_NOT_OWNABLE, LOCK_OWNABLE}LOCK_OWNABLE541,20878
deadlock_avoidance_lock(548,21086
deadlock_avoidance_unlock(635,25326
#define DEADLOCK_AVOIDANCE_LOCK(689,27444
#define DEADLOCK_AVOIDANCE_UNLOCK(690,27551
#  define DEADLOCK_AVOIDANCE_LOCK(692,27647
#  define DEADLOCK_AVOIDANCE_UNLOCK(693,27723
mutex_fork_reset(698,27841
static uint spinlock_count 715,28491
utils_init(720,28720
spinmutex_trylock(750,29898
spinmutex_lock(761,30264
spinmutex_lock_no_yield(773,30567
spinmutex_unlock(791,31131
spinmutex_delete(805,31627
mutex_ownable(813,31825
mutex_lock(828,32129
mutex_trylock(888,34332
mutex_unlock(912,35044
mutex_delete(936,35700
mutex_mark_as_app(958,36342
own_recursive_lock(968,36469
acquire_recursive_lock(979,36767
try_recursive_lock(995,37127
release_recursive_lock(1009,37434
self_owns_recursive_lock(1021,37693
void read_lock(1074,40020
void write_lock(1191,45256
bool write_trylock(1221,46248
void read_unlock(1243,47037
void write_unlock(1282,48640
self_owns_write_lock(1309,49539
struct _broadcast_event_t 1322,49871
    event_t event;1323,49899
    volatile int num_waiting;1324,49918
create_broadcast_event(1328,49972
destroy_broadcast_event(1338,50204
signal_broadcast_event(1349,50565
intend_wait_broadcast_event_helper(1360,50878
unintend_wait_broadcast_event_helper(1365,50985
wait_broadcast_event_helper(1370,51093
hash_value(1386,51475
hashtable_num_bits(1465,54461
bitmap_find_first_set_bit(1489,55086
bitmap_find_set_block(1521,55589
bitmap_find_set_block_sequence(1540,56121
bitmap_initialize_free(1567,56986
bitmap_allocate_blocks(1573,57124
bitmap_free_blocks(1592,57569
bitmap_are_reserved_blocks(1604,57872
bitmap_count_set_bits(1617,58185
bitmap_check_consistency(1631,58364
get_thread_private_logfile(1651,58942
do_file_write(1669,59287
divide_uint64_print(1719,61428
double_print(1759,63363
display_error(1781,64021
print_symbolic_address(1793,64261
print_file(1800,64394
vprint_to_buffer(1814,64804
print_to_buffer(1837,65767
print_log(1853,66235
do_syslog(1880,66834
notify(1897,67406
# define REPORT_MSG_MAX 1994,71472
# define REPORT_MSG_MAX 1996,71552
#define REPORT_LEN_VERSION 1998,71596
#define REPORT_LEN_OPTIONS 2007,72008
#define REPORT_NUM_STACK 2013,72375
# define REPORT_LEN_STACK_EACH 2015,72449
# define REPORT_LEN_STACK_EACH 2017,72495
#define REPORT_LEN_STACK 2020,72617
# define REPORT_LEN_PRIVLIBS 2023,72786
#define ASSERT_ROOM(2035,73426
under_internal_exception(2044,73738
# define EXCEPTION_PREFIX 2060,74229
# define EXCEPTION_PREFIX 2062,74310
#  define CLIENT_EXCEPTION_PREFIX 2066,74420
#  define CLIENT_EXCEPTION_PREFIX 2068,74507
#define REPORT_EXCEPTION_SKIP_PREFIX 2071,74594
#define REPORT_CLIENT_EXCEPTION_SKIP_PREFIX 2072,74693
report_dynamorio_problem(2081,75059
report_app_problem(2258,82321
is_readable_without_exception_try(2297,83686
is_string_readable_without_exception(2341,85253
memprot_string(2387,86662
is_region_memset_to_char(2404,87353
double_strchr(2419,87789
double_strrchr(2434,88123
our_wcsnlen(2458,88961
strcasecmp_with_wildcards(2473,89159
str_case_prefix(2498,89762
check_filter_common(2514,90075
check_filter(2547,91172
check_filter_with_wildcards(2553,91315
static char logdir[logdir2559,91471
static bool logdir_initialized 2560,91505
static char basedir[basedir2561,91545
static bool basedir_initialized 2562,91580
static char old_basedir[old_basedir2566,91795
enable_new_log_dir(2577,92406
create_log_dir(2583,92469
get_log_dir(2722,98492
open_log_file(2759,99829
close_log_file(2813,101839
get_unique_logfile(2827,102360
get_app_name_for_path(2875,104174
get_short_name(2881,104266
print_statistics(2899,104690
stats_thread_init(2948,106178
stats_thread_exit(2966,106962
dump_thread_stats(2982,107523
#define STATS_DEF(3015,109171
#undef STATS_DEF3025,109814
dump_global_stats(3037,110111
#define STATS_DEF(3049,110549
#undef STATS_DEF3058,111208
print_timestamp(3085,111892
dump_buffer_as_ascii(3106,112465
dump_buffer_as_bytes 3116,112688
is_valid_xml_char(3212,116075
is_valid_xml_string(3226,116622
is_valid_xml_cdata_string(3240,116995
is_valid_xml_body_string(3250,117278
is_valid_xml_attribute_string(3259,117572
print_xml_cdata(3275,118249
print_version_and_app_info(3297,118928
utils_exit(3314,119575
get_random_offset(3334,120143
        LCM_A 3341,120366
        LCM_Q 3342,120393
        LCM_R 3343,120413
set_random_seed(3375,121571
get_random_seed(3381,121632
static const uint days_per_month_normal[days_per_month_normal3387,121718
static const uint days_per_month_leap[days_per_month_leap3389,121819
year_is_leap_year(3393,121931
convert_millis_to_date(3402,122140
#define BASE_YEAR 3427,123099
#define DAYS_IN_400_YEARS 3429,123179
#define DAYS_IN_100_YEARS 3430,123220
#define DAYS_IN_4_YEARS 3431,123261
convert_date_to_millis(3464,124300
const uint crctab[crctab3497,125203
crc32(3566,128636
#define PUT_64BIT_LE(3600,129930
#define PUT_32BIT_LE(3610,130541
static unsigned char PADDING[PADDING3616,130872
MD5Init(3627,131246
MD5Update(3641,131526
MD5Pad(3679,132580
MD5Final(3700,133130
#define F1(3716,133522
#define F2(3717,133562
#define F3(3718,133594
#define F4(3719,133626
#define MD5STEP(3722,133715
MD5Transform(3731,134069
#undef F13825,138154
#undef F23826,138164
#undef F33827,138174
#undef F43828,138184
#undef MD5STEP3829,138194
module_digests_equal(3833,138296
read_entire_file(3854,139103
check_low_disk_threshold(3902,140642
#define MD5_FILE_READ_BUF_SIZE 3966,143738
get_md5_for_file(3975,144060
get_application_md5(4024,145904
get_md5_for_region(4084,148412
md5_digests_equal(4099,148813
region_intersection(4113,149330
typedef struct _profile_callers_t 4135,150244
    app_pc caller[caller4136,150280
    uint count;4137,150323
    struct _profile_callers_t *next;next4138,150339
} profile_callers_t;4139,150376
profile_callers(4153,150909
profile_callers_exit(4208,152757
#  undef printf4237,153602
# define printf(4239,153626
unit_test_utils(4244,153748
# define DO_TEST(4251,153827
# undef DO_TEST4268,154730
# define DO_TEST(4269,154746
# undef DO_TEST4287,155727
# undef printf4298,156009
dr_strdup(4304,156068
dr_wstrdup(4322,156562
dr_strfree(4369,158387
array_merge(4387,159093

emit.h,26
#define _EMIT_H_ 42,1932

win32/early_inject_helper1.c,73
#define WIN32_LEAN_AND_MEAN41,2034
__declspec(44,2084
DllMain(53,2359

win32/ntdll.c,11140
# define ASSERT(45,2039
# define ASSERT_CURIOSITY(46,2058
# define ASSERT_NOT_REACHED(47,2087
# define ASSERT_NOT_IMPLEMENTED(48,2117
# define DODEBUG(49,2152
# define DOCHECK(50,2172
# define DEBUG_DECLARE(51,2195
# define INVALID_FILE 54,2411
# define snprintf 55,2454
# undef ASSERT_OWN_NO_LOCKS68,2872
# define ASSERT_OWN_NO_LOCKS(69,2900
# define VERBOSE 88,3501
# define VERBOSE 90,3526
# define NTPRINT(96,3677
# define NTPRINT(98,3742
uint context_xstate 102,3796
bool avx_supported 103,3821
# define GET_SYSCALL(108,4070
# define GET_RAW_SYSCALL 109,4138
# define NT_SYSCALL(110,4175
# define NTLOG(111,4231
# define NTLOG 113,4257
    DR_SYSCALL_INT2E,136,5527
    DR_SYSCALL_SYSENTER,137,5549
    DR_SYSCALL_SYSCALL,138,5574
    DR_SYSCALL_WOW64,139,5598
} dr_which_syscall_t;140,5620
# define GET_RAW_SYSCALL(146,5830
# define GET_SYSCALL(151,6061
# define NT_RAW_SYSCALL(171,7072
# define NT_SYSCALL(188,8479
#  define SYSNUM_OFFS 195,8755
#  define SYSNUM_OFFS 197,8786
# define CHECK_SYSNUM_AT(199,8818
# define ALLOW_HOOKER(204,9118
# define TEB_TLS64_OFFSET 220,9674
# define TEB_TLS64_OFFSET 222,9713
#undef CreateFile315,13669
typedef struct _context_chunk_t 351,15072
    LONG offset;352,15106
    DWORD length;353,15123
} context_chunk_t;354,15141
typedef struct _context_ex_t 357,15215
    context_chunk_t all;358,15246
    context_chunk_t legacy;359,15271
    context_chunk_t xstate;360,15299
} context_ex_t;361,15327
typedef int (WINAPI *ntdll_RtlGetExtendedContextLength_t)ntdll_RtlGetExtendedContextLength_t367,15537
typedef int (WINAPI *ntdll_RtlInitializeExtendedContext_t)ntdll_RtlInitializeExtendedContext_t368,15610
typedef CONTEXT* (WINAPI *ntdll_RtlLocateLegacyContext_t)ntdll_RtlLocateLegacyContext_t370,15706
ntdll_RtlGetExtendedContextLength_t ntdll_RtlGetExtendedContextLength 371,15788
ntdll_RtlInitializeExtendedContext_t ntdll_RtlInitializeExtendedContext 372,15868
ntdll_RtlLocateLegacyContext_t ntdll_RtlLocateLegacyContext 373,15948
typedef NTSTATUS (WINAPI *NtGetNextThread_t)NtGetNextThread_t377,16158
NtGetNextThread_t NtGetNextThread;383,16592
uint sysenter_tls_offset 393,16919
static bool nt_wrappers_intercepted 397,17226
syscalls_init_options_read(400,17276
syscalls_init(416,17850
use_ki_syscall_routines(568,24980
nt_get_context_extended_functions(585,25782
nt_init_dynamic_syscall_wrappers(603,26558
ntdll_init(610,26739
ntdll_exit(628,27377
query_thread_info(638,27549
query_seg_descriptor(652,28050
query_win32_start_addr(669,28673
query_system_info(683,29096
get_thread_id(703,29745
get_process_id(709,29842
get_last_error(715,29933
set_last_error(721,30002
get_stderr_handle(728,30116
get_stdout_handle(737,30292
get_stdin_handle(746,30469
is_thread_exited(755,30657
thread_id_from_handle(801,32677
query_process_info(813,32971
process_id_from_handle(827,33416
process_id_from_thread_handle(839,33704
process_handle_from_id(850,33961
thread_handle_from_id(871,34555
get_peb(898,35307
get_own_peb(909,35513
get_teb(926,36017
static app_pc ntdll_base;936,36222
get_ntdll_base(939,36256
set_ntdll_base(954,36696
is_in_ntdll(962,36825
context_ymmh_saved_area(977,37212
context_to_mcontext(1021,39041
mcontext_to_context(1083,41436
# define HEX(1147,44107
# define RAW(1148,44131
get_own_context_integer_control(1188,45851
get_own_context(1210,46824
#define TLS_SPAREBYTES_SLOTS 1231,47627
static bool alt_tls_spare_taken[alt_tls_spare_taken1233,47736
# define TLS_POSTTEB_SLOTS 1235,47802
static bool alt_tls_post_taken[alt_tls_post_taken1236,47832
# define TLS_POSTTEB_BASE_OFFS 1238,47930
tls_exit(1242,48029
alt_tls_acquire_helper(1251,48142
alt_tls_acquire(1294,49714
alt_tls_release_helper(1324,50886
alt_tls_release(1339,51302
tls_segment_offs(1366,52224
tls_find_free_block_sequence(1379,52692
tls_mark_taken_block_sequence(1459,55712
tls_alloc_helper(1477,56432
tls_alloc(1704,66618
tls_calloc(1715,66978
tls_free_helper(1722,67185
tls_free(1795,70269
tls_cfree(1801,70362
get_process_mem_stats(1810,70586
get_process_mem_quota(1822,70939
get_process_handle_count(1834,71290
get_process_load(1844,71555
is_wow64_process(1869,72429
nt_get_drive_map(1903,73604
nt_remote_allocate_virtual_memory(1914,73940
nt_remote_free_virtual_memory(1939,74930
nt_allocate_virtual_memory(1952,75351
nt_commit_virtual_memory(1962,75703
nt_decommit_virtual_memory(1980,76361
nt_free_virtual_memory(1996,76944
protect_virtual_memory(2012,77560
nt_remote_protect_virtual_memory(2025,78001
nt_remote_query_virtual_memory(2042,78687
query_virtual_memory(2056,79265
get_mapped_file_name(2078,79970
nt_raw_read_virtual_memory(2102,80910
nt_read_virtual_memory(2117,81532
nt_raw_write_virtual_memory(2125,81834
nt_write_virtual_memory(2140,82398
nt_continue(2149,82748
nt_get_context(2158,82981
nt_set_context(2182,84061
nt_thread_suspend(2192,84385
nt_thread_resume(2207,84989
nt_thread_iterator_next(2218,85382
nt_terminate_thread(2228,85673
nt_terminate_process(2243,86277
nt_terminate_process_for_app(2258,86872
am_I_sole_thread(2267,87176
check_sole_thread(2277,87446
nt_create_and_set_timer(2287,87601
        NotificationTimer,2292,87714
        SynchronizationTimer2293,87741
nt_sleep(2319,88743
nt_yield(2331,89080
get_section_address(2338,89168
get_section_attributes(2354,89665
nt_raw_close(2381,90584
close_handle(2389,90716
duplicate_handle(2396,90825
nt_get_handle_access_rights(2421,91870
nt_get_object_name(2435,92327
wchar_to_unicode(2446,92699
char_to_unicode(2460,93112
char_to_ansi(2467,93283
query_full_attributes_file(2479,93633
nt_query_value_key(2498,94184
reg_create_key(2517,95025
reg_open_key(2541,95734
reg_close_key(2570,96575
reg_delete_key(2577,96644
reg_query_value(2598,97424
reg_set_key_value(2640,98775
reg_set_dword_key_value(2659,99368
reg_flush_key(2678,100007
reg_enum_key(2700,100754
reg_enum_value(2740,102186
env_get_value(2771,103214
get_current_user_token(2793,104026
get_primary_user_token(2820,104811
get_primary_owner_token(2845,105463
get_current_user_SID(2868,106078
get_process_primary_SID(2896,106906
get_sd_pointers(2919,107458
get_owner_sd(2964,109164
initialize_security_descriptor(2984,109665
set_owner_sd(2998,110171
length_sid(3027,111092
equal_sid(3035,111248
get_application_name(3069,112298
get_application_short_name(3081,112575
get_application_short_unqualified_name(3093,112900
get_application_pid(3106,113334
get_process_param_buf(3120,113631
get_application_cmdline(3147,114687
query_time_100ns(3155,114896
query_time_millis(3170,115422
query_time_seconds(3177,115559
convert_100ns_to_system_time(3190,116001
convert_system_time_to_100ns(3206,116554
query_system_time(3223,117060
set_primary_user_owner(3234,117330
nt_create_file(3269,118698
create_file(3321,120855
nt_open_file(3363,122802
nt_delete_file(3383,123360
nt_flush_file_buffers(3423,124896
read_file(3434,125155
write_file(3461,126183
close_file(3489,127333
create_iocompletion(3495,127402
typedef struct _FILE_PIPE_INFORMATION 3518,128196
    ULONG ReadModeMessage;3519,128260
    ULONG WaitModeBlocking;3520,128287
} FILE_PIPE_INFORMATION, *PFILE_PIPE_INFORMATION;PFILE_PIPE_INFORMATION3521,128315
typedef struct _FILE_COMPLETION_INFORMATION 3523,128366
    HANDLE IoCompletionHandle;3524,128436
    ULONG CompletionKey;3525,128467
} FILE_COMPLETION_INFORMATION, *PFILE_COMPLETION_INFORMATION;PFILE_COMPLETION_INFORMATION3526,128492
open_pipe(3530,128622
#define STATUS_SHOW_MESSAGEBOX_UNDOCUMENTED 3615,132844
nt_messagebox(3618,132916
nt_raise_exception(3661,134561
nt_create_event(3677,135012
nt_close_event(3703,135777
nt_wait_event_with_timeout(3709,135852
nt_set_event(3723,136228
nt_clear_event(3749,137148
nt_signal_and_wait(3763,137400
nt_query_performance_counter(3782,138043
#define CTL_CODE(3800,138638
#define METHOD_BUFFERED 3805,138883
#define METHOD_IN_DIRECT 3806,138925
#define METHOD_OUT_DIRECT 3807,138967
#define METHOD_NEITHER 3808,139009
#define FILE_READ_ACCESS 3811,139100
#define FILE_WRITE_ACCESS 3812,139163
#define FSCTL_PIPE_TRANSCEIVE 3814,139227
static bool do_once_nt_pipe_transceive 3819,139460
nt_pipe_transceive(3828,139692
typedef struct _THREAD_IMPERSONATION_INFORMATION 3934,144651
    HANDLE ThreadImpersonationToken;3935,144702
} THREAD_IMPERSONATION_INFORMATION, *PTHREAD_IMPERSONATION_INFORMATION;PTHREAD_IMPERSONATION_INFORMATION3936,144739
get_thread_impersonation_token(3942,144903
set_thread_impersonation_token(3960,145332
nt_create_profile(3983,145960
nt_set_profile_interval(4011,146925
nt_query_profile_interval(4025,147244
nt_start_profile(4042,147604
nt_stop_profile(4054,147804
typedef struct _PORT_MESSAGE 4070,148155
    USHORT DataSize;4071,148186
    USHORT MessageSize;4072,148207
    USHORT MessageType;4073,148231
    USHORT VirtualRangesOffset;4074,148255
    CLIENT_ID ClientId;4075,148287
    ULONG MessageId;4076,148311
    ULONG SectionSize;4077,148332
} PORT_MESSAGE, *PPORT_MESSAGE;PPORT_MESSAGE4079,148376
typedef struct _CSRSS_MESSAGE 4081,148409
    ULONG Unknown1;4082,148441
    ULONG Opcode;4083,148461
    ULONG Status;4084,148479
    ULONG Unknown2;4085,148497
} CSRSS_MESSAGE, *PCSRSS_MESSAGE;PCSRSS_MESSAGE4086,148517
inform_csrss(4092,148685
        PORT_MESSAGE PortMessage;4110,149724
        CSRSS_MESSAGE CsrssMessage;4112,149808
        PROCESS_INFORMATION ProcessInformation;4114,149896
        CLIENT_ID Debugger;4115,149944
        ULONG CreationFlags;4116,149972
        ULONG VdmInfo[VdmInfo4117,150001
        ULONG Unknown[Unknown4121,150205
copy_environment(4147,151146
create_process_parameters(4172,151866
create_process(4218,154101
create_thread_common(4342,159348
create_thread(4441,163606
create_thread_have_stack(4485,165654
load_library(4536,168591
free_library(4563,169542
get_module_handle(4586,170445
#define LDR_GET_DLL_HANDLE_ARG1 4595,170845
nt_create_object_directory(4618,171704
nt_initialize_shared_directory(4674,174022
nt_open_object_directory(4742,176651
nt_close_object_directory(4788,178559
nt_get_symlink_target(4799,178883
nt_create_section(4874,182096
nt_open_section(4926,184008
are_mapped_files_the_same(4957,185110
nt_create_module_file(5005,186839
nt_query_file_info(5030,187861
nt_set_file_info(5054,188604
nt_query_volume_info(5082,189440
nt_query_security_object(5122,191069
initialize_known_SID(5159,192686
nt_initialize_context(5180,193307
nt_raw_CreateFile(5276,197051
nt_raw_OpenFile(5311,198159
nt_raw_OpenKey(5336,198861
nt_raw_OpenKeyEx(5355,199326
nt_raw_OpenProcessTokenEx(5378,200021
nt_raw_OpenThread(5399,200638
nt_raw_OpenThreadTokenEx(5420,201196
nt_raw_QueryAttributesFile(5443,201893
nt_raw_SetInformationFile(5460,202354
nt_raw_SetInformationThread(5483,203054
nt_raw_UnmapViewOfSection(5504,203711
nt_raw_MapViewOfSection(5555,205450
nt_raw_OpenProcess(5588,206532
nt_raw_QueryFullAttributesFile(5609,207098
nt_raw_CreateKey(5626,207582
nt_raw_OpenThreadToken(5653,208342
nt_raw_OpenProcessToken(5674,208911

win32/os_private.h,5666
#define _OS_PRIVATE_H_ 42,1937
#define GLOBAL_NT_PREFIX 47,2056
typedef struct _os_thread_data_t 53,2237
    byte *stack_base;stack_base60,2690
    byte *stack_top;stack_top61,2712
    bool teb_stack_no_longer_valid;62,2733
} os_thread_data_t;63,2769
    byte *dr_base;dr_base73,3016
    byte *ntdll_base;ntdll_base74,3035
    byte *tofree_base;tofree_base75,3057
    byte *hook_location;hook_location76,3080
    char dynamorio_lib_path[dynamorio_lib_path77,3105
} earliest_args_t;78,3144
#define EARLY_INJECT_HOOK_SIZE 85,3418
#define SYSCALL_NOT_PRESENT 155,5020
#define SYSCALL(193,6221
#undef SYSCALL198,6514
    SYS_MAX,199,6529
#define SYSCALL_PARAM_MAX_OFFSET 212,7188
# define SYSCALL_PARAM_OFFSET(215,7307
# define SYSCALL_PARAM_OFFSET(224,7680
sys_param_addr(233,8052
sys_param(251,8517
postsys_param(261,8831
#define INTERCEPTION_CODE_SIZE 304,10123
#define THREAD_START_ADDR 307,10243
#define THREAD_START_ARG 308,10299
#define UNDER_DYN_HACK 319,10444
#define IS_UNDER_DYN_HACK(320,10472
#define INTERCEPT_POINT(350,11437
#define INTERCEPT_ALL_POINTS 351,11475
    INTERCEPT_ALL_POINTS364,12101
} retakeover_point_t;365,12126
#undef INTERCEPT_POINT366,12148
# undef CONTEXT_XSTATE 397,13394
#define CONTEXT_XSTATE 409,13960
#define CONTEXT_XMM_FLAG 410,13998
#define CONTEXT_YMM_FLAG 411,14087
#define CONTEXT_PRESERVE_XMM 412,14127
#define CONTEXT_PRESERVE_YMM 413,14212
#define CONTEXT_DR_STATE_NO_YMM 414,14257
#define CONTEXT_DR_STATE 416,14411
#define CONTEXT_DR_STATE_ALLPROC 421,14699
#define XSTATE_HEADER_SIZE 424,14859
#define YMMH_AREA(425,14907
#define MAX_CONTEXT_64_SIZE 426,14967
# define MAX_CONTEXT_SIZE 428,15043
# define MAX_CONTEXT_SIZE 430,15101
      EXCEPTION_INFORMATION_READ_EXECUTE_FAULT 434,15181
      EXCEPTION_INFORMATION_WRITE_FAULT 437,15328
      EXCEPTION_INFORMATION_EXECUTE_FAULT 438,15380
typedef struct DECLSPEC_ALIGN(451,15906
typedef struct _XMM_SAVE_AREA32 456,16006
    WORD   ControlWord;457,16040
    WORD   StatusWord;458,16064
    BYTE  TagWord;459,16087
    BYTE  Reserved1;460,16106
    WORD   ErrorOpcode;461,16127
    DWORD ErrorOffset;462,16151
    WORD   ErrorSelector;463,16174
    WORD   Reserved2;464,16200
    DWORD DataOffset;465,16222
    WORD   DataSelector;466,16244
    WORD   Reserved3;467,16269
    DWORD MxCsr;468,16291
    DWORD MxCsr_Mask;469,16308
    M128A FloatRegisters[FloatRegisters470,16330
    M128A XmmRegisters[XmmRegisters471,16359
    BYTE  Reserved4[Reserved4472,16387
} XMM_SAVE_AREA32, *PXMM_SAVE_AREA32;PXMM_SAVE_AREA32473,16412
typedef XSAVE_FORMAT XMM_SAVE_AREA32,475,16457
typedef XSAVE_FORMAT XMM_SAVE_AREA32, *PXMM_SAVE_AREA32;PXMM_SAVE_AREA32475,16457
typedef struct DECLSPEC_ALIGN(478,16523
            M128A Header[Header558,17760
            M128A Legacy[Legacy559,17789
            M128A Xmm0;560,17818
            M128A Xmm1;561,17842
            M128A Xmm2;562,17866
            M128A Xmm3;563,17890
            M128A Xmm4;564,17914
            M128A Xmm5;565,17938
            M128A Xmm6;566,17962
            M128A Xmm7;567,17986
            M128A Xmm8;568,18010
            M128A Xmm9;569,18034
            M128A Xmm10;570,18058
            M128A Xmm11;571,18083
            M128A Xmm12;572,18108
            M128A Xmm13;573,18133
            M128A Xmm14;574,18158
            M128A Xmm15;575,18183
    } DUMMYUNIONNAME;577,18235
    M128A VectorRegister[VectorRegister583,18298
    DWORD64 VectorControl;584,18328
    DWORD64 DebugControl;590,18411
    DWORD64 LastBranchToRip;591,18437
    DWORD64 LastBranchFromRip;592,18466
    DWORD64 LastExceptionToRip;593,18497
    DWORD64 LastExceptionFromRip;594,18529
} CONTEXT_64,595,18563
} CONTEXT_64, *PCONTEXT_64;PCONTEXT_64595,18563
#define __IMAGE_UNWIND_INFO666,20486
typedef enum _unwind_opcode_t 681,21369
    UWOP_PUSH_NONVOL 682,21401
    UWOP_ALLOC_LARGE,683,21457
    UWOP_ALLOC_SMALL,684,21525
    UWOP_SET_FPREG,685,21592
    UWOP_SAVE_NONVOL,686,21671
    UWOP_SAVE_NONVOL_FAR,687,21748
    UWOP_SAVE_XMM128,688,21828
    UWOP_SAVE_XMM128_FAR,689,21904
    UWOP_PUSH_MACHFRAME 690,21983
} unwind_opcode_t;691,22055
typedef union _unwind_code_t 693,22075
        byte CodeOffset;695,22119
        byte UnwindOp 696,22144
        byte OpInfo 697,22170
    USHORT FrameOffset;699,22203
} unwind_code_t;700,22227
# define UNW_FLAG_EHANDLER 703,22271
# define UNW_FLAG_UHANDLER 704,22304
# define UNW_FLAG_CHAININFO 705,22337
typedef struct _unwind_info_t 708,22378
    byte Version 709,22410
    byte Flags 710,22436
    byte SizeOfProlog;711,22462
    byte CountOfCodes;712,22485
    byte FrameRegister:FrameRegister713,22508
    byte FrameOffset 714,22534
    unwind_code_t UnwindCode[UnwindCode715,22560
    unwind_code_t MoreUnwindCode[MoreUnwindCode719,22786
        OPTIONAL ULONG ExceptionHandler;721,22868
        OPTIONAL ULONG FunctionEntry;722,22909
    OPTIONAL ULONG ExceptionData[ExceptionData724,22954
} unwind_info_t;726,22997
#define UNWIND_INFO_PTR_ADDR(729,23072
#define UNWIND_INFO_PTR_RVA(733,23249
#define UNWIND_INFO_DATA_ADDR(736,23384
#define UNWIND_INFO_DATA_RVA(737,23460
typedef struct _scope_table_t 742,23667
    ULONG Count;743,23699
        ULONG BeginAddress;745,23729
        ULONG EndAddress;746,23757
        ULONG HandlerAddress;747,23783
        ULONG JumpTarget;748,23813
    } ScopeRecord[ScopeRecord749,23839
} scope_table_t;750,23861
#define RVA_TO_VA(756,23951
enum {SYMBOLS_LOGLEVEL SYMBOLS_LOGLEVEL795,24941
#define PAGE_PROTECTION_QUALIFIERS 872,27055
#define IPC_ALERT(880,27280

win32/inject.c,4484
#define WIN32_LEAN_AND_MEAN46,2163
# define GET_PROC_ADDR 60,2505
# define GET_PROC_ADDR 62,2551
#define DYNAMORIO_ENTRY 66,2651
# define display_error(73,2870
static ptr_uint_t addr_getprocaddr;79,3089
static ptr_uint_t addr_loadlibrarya;80,3125
static ptr_uint_t addr_debugbreak;82,3192
static bool inject_initialized 84,3234
inject_init(86,3279
#define SIZE_OF_LOAD_DYNAMO 104,3898
inject_into_thread(111,4096
    PUSHF 368,14987
    PUSHF                 = 0x9c,x9c368,14987
    POPF 369,15021
    POPF                  = 0x9d,x9d369,15021
    PUSHA 370,15055
    PUSHA                 = 0x60,x60370,15055
    POPA 371,15089
    POPA                  = 0x61,x61371,15089
    PUSH_EAX 372,15123
    PUSH_EAX              = 0x50,x50372,15123
    POP_EAX 373,15157
    POP_EAX               = 0x58,x58373,15157
    PUSH_ECX 374,15191
    PUSH_ECX              = 0x51,x51374,15191
    POP_ECX 375,15225
    POP_ECX               = 0x59,x59375,15225
    PUSH_IMM32 376,15259
    PUSH_IMM32            = 0x68,x68376,15259
    PUSH_IMM8 377,15293
    PUSH_IMM8             = 0x6a,x6a377,15293
    JMP_REL8 379,15328
    JMP_REL8              = 0xeb,xeb379,15328
    JMP_REL32 380,15362
    JMP_REL32             = 0xe9,xe9380,15362
    CALL_REL32 381,15396
    CALL_REL32            = 0xe8,xe8381,15396
    CALL_RM32 382,15430
    CALL_RM32             = 0xff,xff382,15430
    CALL_EAX_RM 383,15464
    CALL_EAX_RM           = 0xd0,xd0383,15464
    MOV_RM32_2_REG32 385,15499
    MOV_RM32_2_REG32      = 0x8b,x8b385,15499
    MOV_ESP_2_EAX_RM 386,15533
    MOV_ESP_2_EAX_RM      = 0xc4,xc4386,15533
    MOV_EAX_2_ECX_RM 387,15567
    MOV_EAX_2_ECX_RM      = 0xc8,xc8387,15567
    MOV_EAX_2_EDX_RM 388,15601
    MOV_EAX_2_EDX_RM      = 0xd0,xd0388,15601
    MOV_EAX_2_EAX_RM 389,15635
    MOV_EAX_2_EAX_RM      = 0xc0,xc0389,15635
    MOV_derefEAX_2_EAX_RM 390,15669
    MOV_derefEAX_2_EAX_RM = 0x00,x00390,15669
    MOV_deref_disp8_EAX_2_EAX_RM 391,15703
    MOV_deref_disp8_EAX_2_EAX_RM = 0x40,x40391,15703
    MOV_IMM8_2_RM8 392,15744
    MOV_IMM8_2_RM8        = 0xc6,xc6392,15744
    MOV_IMM32_2_RM32 393,15778
    MOV_IMM32_2_RM32      = 0xc7,xc7393,15778
    MOV_IMM_RM_ABS 394,15812
    MOV_IMM_RM_ABS        = 0x05,x05394,15812
    MOV_IMM_XAX 395,15846
    MOV_IMM_XAX           = 0xb8,xb8395,15846
    ADD_EAX_IMM32 397,15881
    ADD_EAX_IMM32         = 0x05,x05397,15881
    CMP_EAX_IMM32 399,15916
    CMP_EAX_IMM32         = 0x3d,x3d399,15916
    JZ_REL8 400,15950
    JZ_REL8               = 0x74,x74400,15950
    JNZ_REL8 401,15984
    JNZ_REL8              = 0x75,x75401,15984
    REX_W 404,16030
    REX_W                 = 0x48,x48404,16030
    REX_B 405,16064
    REX_B                 = 0x41,x41405,16064
    REX_R 406,16098
    REX_R                 = 0x44,x44406,16098
#define DEBUG_LOOP 410,16143
#define ASSERT_ROOM(412,16165
allocate_remote_code_buffer(431,16990
free_remote_code_buffer(490,19451
inject_gencode_at_ldr(497,19615
#define GET_PROC_ADDR_BAD_ADDR 523,20913
#define INSERT_INT(600,24369
#define INSERT_ADDR(605,24536
# define INSERT_PUSH_ALL_REG(610,24687
# define INSERT_PUSH_ALL_REG(636,25596
# define INSERT_POP_ALL_REG(641,25679
# define INSERT_POP_ALL_REG(667,26611
#define PUSH_IMMEDIATE(671,26681
#define PUSH_SHORT_IMMEDIATE(675,26774
# define PUSH_PTRSZ_IMMEDIATE(680,26897
# define PUSH_PTRSZ_IMMEDIATE(692,27387
#define MOV_ESP_TO_EAX(696,27461
# define MOV_EAX_TO_PARAM_0(703,27658
# define MOV_EAX_TO_PARAM_1(708,27843
# define MOV_EAX_TO_PARAM_2(713,28027
# define MOV_EAX_TO_PARAM_3(718,28211
# define MOV_TOS_TO_PARAM_0(723,28398
# define MOV_TOS_TO_PARAM_1(729,28615
# define MOV_TOS_TO_PARAM_2(735,28831
# define MOV_TOS_TO_PARAM_3(741,29047
#define ADD_TO_EAX(749,29311
#define ADD_IMM8_TO_ESP(754,29458
#define CMP_TO_EAX(760,29663
#define INSERT_REL32_ADDRESS(765,29810
# define CALL(773,30181
# define CALL(780,30431
#define PROT_IN_ECX 788,30762
#define CHANGE_PROTECTION(789,30829
#undef INSERT_INT990,40796
#undef PUSH_IMMEDIATE991,40814
#undef PUSH_SHORT_IMMEDIATE992,40836
#undef MOV_ESP_TO_EAX993,40864
#undef ADD_TO_EAX994,40886
#undef INSERT_REL32_ADDRESS995,40904
#undef CALL996,40932
#undef PROT_IN_ECX997,40944
#undef CHANGE_PROTECTION998,40963
#define APP 1007,41076
#define GDC 1008,41106
inject_gencode_earliest(1014,41302
inject_into_new_process(1202,49525

win32/os.c,12038
# undef ASSERT66,2516
# undef ASSERT_NOT_IMPLEMENTED67,2531
# undef ASSERT_NOT_TESTED68,2562
# undef ASSERT_CURIOSITY_ONCE69,2588
# define ASSERT(70,2618
# define ASSERT_NOT_IMPLEMENTED(71,2651
# define ASSERT_NOT_TESTED(72,2700
# define ASSERT_CURIOSITY_ONCE(73,2744
# undef LOG74,2792
# define LOG(75,2804
#define WOW64_SYSCALL_SETUP_SIZE 96,3839
#define WOW64_SYSCALL_STACK_SIZE 98,3963
const byte *wow64_syscall_stack wow64_syscall_stack102,4205
bool intercept_asynch 106,4339
bool intercept_callbacks 107,4370
process_id_t win32_pid 109,4477
void *peb_ptr;peb_ptr111,4579
static int os_version;112,4594
static uint os_service_pack_major;113,4617
static uint os_service_pack_minor;114,4652
static const char *os_name;os_name115,4687
app_pc vsyscall_page_start 116,4715
app_pc vsyscall_after_syscall 118,4804
app_pc vsyscall_syscall_end_pc 120,4890
uint kilo_hertz;125,5123
#define HEAP_INITIAL_SIZE 128,5170
app_pc dynamo_dll_start 131,5251
app_pc dynamo_dll_end 132,5283
static app_pc dynamo_dll_preferred_base 135,5380
enum {TLS_UNINITIALIZED TLS_UNINITIALIZED138,5462
enum {TLS_UNINITIALIZED = (ushort)138,5462
enum {TLS_UNINITIALIZED = (ushort) 0U}U138,5462
static ushort tls_local_state_offs 139,5502
static ushort tls_dcontext_offs 141,5604
app_pc parent_early_inject_address 144,5686
static int early_inject_location 148,5932
static app_pc early_inject_address 149,5992
static app_pc ldrpLoadDll_address_not_NT 150,6035
static app_pc ldrpLoadDll_address_NT 151,6084
static app_pc ldrpLoadImportModule_address 152,6129
dcontext_t *early_inject_load_helper_dcontext early_inject_load_helper_dcontext153,6180
get_nth_stack_frames_call_target(185,7060
check_for_ldrpLoadImportModule(216,8120
#define STACK_DEPTH_LdrpLoadImportModule 252,9812
DllMainThreadAttach(271,10414
DllMain(295,11271
#define STACK_DEPTH_LdrpLoadDll_NT 333,13337
#define STACK_DEPTH_LdrpLoadDll 334,13374
static profile_t *global_profile global_profile363,14553
static profile_t *dynamo_dll_profile dynamo_dll_profile364,14594
static profile_t *ntdll_profile ntdll_profile365,14639
file_t profile_file 366,14679
get_dll_bounds(370,14813
init_global_profiles(396,15595
dump_dll_profile(466,18572
exit_global_profiles(485,19216
os_supports_avx(522,20316
get_context_xstate_flag(533,20615
windows_version_init(554,21553
print_mem_quota(738,30527
os_init(770,31773
print_mem_stats(978,40063
os_fast_exit(1003,41120
os_slow_exit(1096,44542
os_terminate_wow64_stack(1118,45216
os_terminate_wow64_write_args(1155,46687
#define KILL_PROC_EXIT_STATUS 1171,47338
#define KILL_THREAD_EXIT_STATUS 1172,47371
os_terminate_static_arguments(1176,47476
    typedef struct _terminate_args_t 1181,47642
            const byte *debug_code;debug_code1183,47697
            byte pad_bytes[pad_bytes1184,47733
        } padding;1185,47787
            IN HANDLE ProcessOrThreadHandle;1187,47823
            IN NTSTATUS ExitStatus;1188,47868
        } args;1189,47904
    } terminate_args_t;1190,47920
os_terminate_common(1279,51939
os_terminate_with_code(1406,58239
os_terminate(1413,58434
os_tls_init(1419,58574
os_tls_exit(1425,58687
os_tls_calloc(1434,58963
os_tls_cfree(1441,59152
os_thread_init(1448,59265
os_thread_exit(1475,60201
os_thread_stack_exit(1487,60574
os_thread_under_dynamo(1561,64343
os_thread_not_under_dynamo(1570,64641
typedef struct _takeover_data_t 1583,65102
    app_pc continuation_pc;1584,65136
    bool in_progress;1585,65164
    thread_id_t tid;1586,65186
    HANDLE thread_handle;1589,65282
    CONTEXT_64 *cxt64;cxt641590,65308
    byte *cxt64_alloc;cxt64_alloc1591,65331
    ptr_uint_t memval_stack;1593,65423
    ptr_uint_t memval_r14;1594,65452
} takeover_data_t;1596,65486
typedef struct _thread_list_t 1599,65528
    HANDLE handle;1600,65560
    thread_id_t tid;1601,65579
    void *user_data;user_data1602,65656
} thread_list_t;1603,65705
    TAKEOVER_NEW 1607,65770
    TAKEOVER_TRIED,1608,65822
    TAKEOVER_SUCCESS,1609,65842
static generic_table_t *takeover_table;takeover_table1623,66482
#define INIT_HTABLE_SIZE_TAKEOVER 1624,66522
#define INVALID_PAYLOAD 1625,66584
takeover_table_entry_free(1628,66681
os_take_over_init(1645,67158
os_take_over_exit(1656,67617
os_take_over_mark_thread(1666,67910
os_take_over_unmark_thread(1675,68214
os_list_threads(1688,68734
thread_attach_remove_from_table(1751,71477
thread_attach_restore_full_state(1761,71786
thread_attach_translate(1789,72802
thread_attach_context_revert(1807,73460
thread_attach_exit(1823,74047
os_take_over_wow64_extra(1859,75777
os_take_over_thread(2010,82719
os_thread_take_over_suspended_native(2113,87720
os_take_over_all_unknown_threads(2128,88294
thread_attach_setup(2228,92792
client_thread_target(2306,95812
dr_create_client_thread(2328,96635
get_os_version(2363,97977
get_os_version_ex(2369,98027
is_in_dynamo_dll(2381,98385
mem_state_string(2388,98556
mem_type_string(2400,98810
prot_string(2412,99055
prot_is_readable(2429,99597
prot_is_writable(2448,100083
prot_is_executable(2456,100306
prot_is_copyonwrite(2465,100576
prot_is_guard(2477,100967
memprot_to_osprot(2484,101105
osprot_to_memprot(2509,101841
osprot_add_writecopy(2524,102188
osprot_add_write(2537,102574
osprot_replace_memprot(2550,102967
dump_mbi(2564,103415
dump_mbi_addr(2592,104608
is_pid_me(2618,105535
is_phandle_me(2624,105612
static char dynamorio_library_path[dynamorio_library_path2640,106123
get_dynamorio_library_path(2644,106269
should_inject_into_process(2668,107222
inject_into_process(2739,109977
is_first_thread_in_new_process(2828,114073
maybe_inject_into_process(2891,117355
is_child_in_thin_client(2936,119606
get_dynamorio_dll_start(2965,120526
get_dynamorio_dll_preferred_base(2972,120709
static app_pc highest_user_address 2982,121045
get_system_basic_info(2988,121265
is_user_address(3022,122580
merge_writecopy_pages(3040,123279
find_dynamo_library_vm_areas(3108,126327
print_dynamo_regions(3160,128459
# define MEM_STATS_ADD(3190,129555
add_mem_stats(3201,130026
mem_stats_snapshot(3254,132085
process_image(3394,137969
process_image_post_vmarea(3714,152981
process_memory_region(3761,154533
find_executable_vm_areas(3802,156397
void all_memory_areas_lock(3876,159702
void all_memory_areas_unlock(3877,159754
void update_all_memory_areas(3878,159806
bool remove_from_all_memory_areas(3881,159908
process_mmap(3889,160290
get_application_base(3939,162173
get_application_end(3951,162462
get_image_entry(3965,162822
os_tls_offset(3979,163284
get_local_state(3986,163467
get_local_state_extended(3993,163624
get_thread_private_dcontext(4001,163843
set_thread_private_dcontext(4015,164398
create_profile(4024,164575
free_profile(4063,166504
start_profile(4091,167669
stop_profile(4099,167812
dump_profile_range(4107,167953
dump_profile(4128,168888
sum_profile_range(4135,169054
sum_profile(4153,169738
reset_profile(4160,169896
os_raw_mem_free(4168,170051
os_raw_mem_alloc(4186,170625
os_heap_free(4215,171739
os_heap_reserve(4231,172256
find_free_memory_in_region(4249,172908
os_heap_reserve_in_region(4278,174062
#   define MAX_REGION_ITERS 4283,174253
os_heap_commit(4324,175852
os_heap_decommit(4344,176558
os_heap_systemwide_overcommit(4355,176875
os_heap_get_commit_limit(4377,177706
os_find_free_code_space_in_libs(4414,179370
thread_yield(4432,179952
thread_sleep(4439,180044
os_timeout(4450,180327
thread_suspend(4463,180685
thread_resume(4469,180779
thread_terminate(4475,180871
thread_get_mcontext(4481,180966
thread_set_mcontext(4493,181257
thread_get_context(4506,181666
thread_set_context(4512,181794
thread_set_self_context(4519,181957
thread_set_self_mcontext(4528,182163
get_num_processors(4539,182485
static wchar_t debugbox_title_buf[debugbox_title_buf4562,183494
static void init_debugbox_title_buf(4563,183546
debugbox(4579,184114
#define ID_MSGBOX_STATIC_TEXT 4604,184776
    char *message;message4607,184838
    char *title;title4608,184857
    HANDLE timer;4609,184874
    int seconds_left;4610,184892
    bool done;4611,184914
} timeout_context_t;4612,184929
#define print_timeout_message(4614,184951
message_box_timeout_thread(4626,185555
os_countdown_messagebox(4656,186563
os_countdown_messagebox(4698,187799
load_shared_library(4709,188136
lookup_library_routine(4727,188707
unload_shared_library(4733,188839
shared_library_error(4743,189058
shared_library_bounds(4756,189564
get_allocation_base(4774,190250
enum { MAX_QUERY_VM_BLOCKS 4795,190944
get_allocation_size_ex(4807,191401
get_allocation_size(4880,194270
query_memory_ex(4890,194609
get_memory_info(4962,197763
dr_virtual_query(4993,198790
get_stack_bounds(5012,199552
query_is_readable_without_exception(5096,203220
is_readable_without_exception_query_os(5121,204069
safe_read_syscall(5135,204727
safe_read_ex(5143,204962
safe_read(5160,205665
safe_write_ex(5170,206059
safe_write(5181,206453
get_current_protection(5194,206923
not_readable(5215,207700
mark_page_as_guard(5234,208287
internal_change_protection(5265,209478
os_set_protection(5465,218144
set_protection(5475,218419
change_protection(5490,219076
make_hookable(5500,219505
make_unhookable(5512,219993
make_writable(5526,220557
make_copy_on_writable(5537,220936
make_unwritable(5546,221263
convert_NT_to_Dos_path(5555,221520
convert_to_NT_file_path_wide(5645,225514
convert_to_NT_file_path_wide_free(5726,228529
convert_to_NT_file_path(5736,228839
os_internal_create_file(5842,233750
os_internal_create_file_test(5854,234188
os_file_exists(5867,234581
os_get_file_size(5883,235324
os_get_file_size_by_handle(5907,236082
os_set_file_size(5926,236698
os_get_disk_free_space(5946,237412
os_copy_file(6033,240944
os_create_dir(6050,241625
os_open_directory(6067,242401
os_open(6090,243276
os_close(6133,245295
os_open_protected(6140,245384
os_close_protected(6146,245492
os_write(6156,245772
os_read(6180,246422
os_flush(6200,246891
os_seek(6207,247042
os_tell(6245,248090
os_delete_mapped_file(6267,248774
os_delete_file_w(6340,251734
os_delete_file(6386,253458
os_rename_file(6404,254124
os_rename_file_in_directory(6466,256919
os_map_file(6508,258650
#   define MAX_MAP_LOOP_ITERS 6519,258974
os_unmap_file(6588,261918
translate_context(6603,262501
set_mcontext_for_syscall(6628,263440
os_raise_exception(6674,264963
    struct _raise_exception_arguments_t 6682,265261
        PEXCEPTION_RECORD ExceptionRecord;6683,265303
        PCONTEXT Context;6684,265346
        DWORD SearchFrames;6685,265372
os_dump_core_segment_info(6714,266558
os_dump_core_dump_thread(6739,267510
os_dump_core_live_dump(6788,269622
os_dump_core_external_dump(7020,279600
os_dump_core(7072,281960
END_DATA_SECTION(7128,283792
detach_helper(7284,291831
detach_internal(7669,309497
detach_internal_synch(7684,310073
is_thread_currently_native(7696,310399
mutex_get_contended_event(7705,310619
os_wait_event(7735,311687
os_wait_handle(7817,315435
mutex_wait_contended_lock(7833,315803
mutex_notify_released_lock(7852,316532
rwlock_wait_contended_writer(7860,316722
rwlock_notify_writer(7871,317141
rwlock_wait_contended_reader(7883,317518
rwlock_notify_readers(7894,317947
create_event(7905,318322
destroy_event(7911,318397
signal_event(7917,318455
reset_event(7923,318510
wait_for_event(7930,318634
get_timer_frequency(7936,318754
os_random_seed(7965,319698
early_inject_init(7983,320184
earliest_inject_init(8240,333326
earliest_inject_cleanup(8281,335035
#define SECURITY_MAX_SID_STRING_SIZE 8297,335590
get_process_SID_string(8304,335880
get_Everyone_SID(8324,336534
get_process_owner_SID(8341,336989
os_validate_owner_equals(8368,337890
os_filesystem_supports_ownership(8462,341443
open_trusted_cache_root_directory(8501,342835
os_user_directory_supports_ownership(8550,344902
os_validate_user_owned(8589,346726
os_current_user_directory(8625,348143
os_check_option_compatibility(8720,352540

win32/drmarker.c,757
# define WIN32_LEAN_AND_MEAN51,2191
# define READ_FUNC 60,2438
# define DR_MARKER_VERSION_CURRENT 61,2480
typedef unsigned char byte;68,2962
# define PAGE_START(70,2998
# define PAGE_SIZE 71,3060
# define READ_FUNC 72,3088
#define OP_jmp_byte 75,3133
is_wow64_process(80,3228
    typedef DWORD (WINAPI 83,3313
read_and_verify_dr_marker_common(109,4189
read_and_verify_dr_marker_64(173,6476
read_and_verify_dr_marker(180,6626
#define DR_MARKER_MAGIC1 190,7110
#define DR_MARKER_MAGIC2 191,7146
#define DR_MARKER_MAGIC3 192,7182
#define DR_MARKER_MAGIC4 193,7218
dr_marker_verify(196,7260
dr_marker_magic_init(208,7695
init_dr_marker(227,8352
get_drmarker_hotp_policy_status_table(259,9494
set_drmarker_hotp_policy_status_table(272,9790

win32/diagnost.h,2530
#define _DIAGNOST_H_ 40,1807
#define DIAGNOSTICS_LOGDIR_KEY 43,1902
#define DIAGNOSTICS_FILE_XML_EXTENSION 44,1953
#define DIAGNOSTICS_XML_FILE_VERSION 45,1999
#define DIAGNOSTICS_NTDLL_DLL_LOCATION 46,2042
#define DIAGNOSTICS_HARDWARE_REG_KEY 47,2104
#define DIAGNOSTICS_CONTROL_REG_KEY 48,2197
#define DIAGNOSTICS_TEST_REG_KEY 49,2292
#define DIAGNOSTICS_OS_REG_KEY 50,2358
#define DIAGNOSTICS_OS_HOTFIX_REG_KEY 51,2461
#define DIAGNOSTICS_BIOS_REG_KEY 52,2581
#define DIAGNOSTICS_SYSTEMROOT_REG_KEY 53,2668
#define DIAGNOSTICS_DESCRIPTION_KEY 54,2721
#define DIAGNOSTICS_MANUFACTURER_KEY 55,2771
#define DIAGNOSTICS_FRIENDLYNAME_KEY 56,2815
#define DIAGNOSTICS_MAX_REG_KEYS 58,2869
#define DIAGNOSTICS_MAX_REG_VALUES 59,2959
#define DIAGNOSTICS_MAX_RECURSION_LEVEL 60,3049
#define DIAGNOSTICS_MAX_NAME_AND_DATA_SIZE 61,3143
#define DIAGNOSTICS_MAX_KEY_NAME_SIZE 62,3233
#define DIAGNOSTICS_MAX_LOG_BUFFER_SIZE 63,3319
#define DIAGNOSTICS_MAX_LOG_FILES 64,3364
#define DIAGNOSTICS_MINI_DUMP_SIZE 65,3438
#define DIAGNOSTICS_REG_NAME 67,3536
#define DIAGNOSTICS_REG_DATA 68,3610
#define DIAGNOSTICS_REG_HARDWARE 69,3684
#define DIAGNOSTICS_REG_ALLKEYS 70,3766
#define DIAGNOSTICS_REG_ALLSUBKEYS 71,3843
#define DIAGNOSTICS_INITIAL_PROCESS_TOTAL 72,3934
#define DIAGNOSTICS_BYTES_PER_LINE 74,3980
#define DECREMENT_FOR_DATA_OFFSET 80,4367
typedef struct _DIAGNOSTICS_INFORMATION 82,4461
    SYSTEM_BASIC_INFORMATION sbasic_info;83,4503
    SYSTEM_PROCESSOR_INFORMATION sproc_info;84,4545
    SYSTEM_PERFORMANCE_INFORMATION sperf_info;85,4590
    SYSTEM_TIME_OF_DAY_INFORMATION stime_info;86,4637
    SYSTEM_PROCESSOR_TIMES sptime_info;87,4684
    SYSTEM_GLOBAL_FLAG global_flag;88,4724
} DIAGNOSTICS_INFORMATION, *PDIAGNOSTICS_INFORMATION;PDIAGNOSTICS_INFORMATION89,4760
typedef struct _DIAGNOSTICS_KEY_VALUE_FULL_INFORMATION 100,5452
    ULONG   TitleIndex;101,5509
    ULONG   Type;102,5533
    ULONG   DataOffset;103,5551
    ULONG   DataLength;104,5575
    ULONG   NameLength;105,5599
    BYTE    NameAndData[NameAndData106,5660
} DIAGNOSTICS_KEY_VALUE_FULL_INFORMATION, *PDIAGNOSTICS_KEY_VALUE_FULL_INFORMATION;PDIAGNOSTICS_KEY_VALUE_FULL_INFORMATION107,5721
typedef struct _DIAGNOSTICS_KEY_NAME_INFORMATION 110,5861
    LARGE_INTEGER   LastWriteTime;111,5912
    ULONG   TitleIndex;112,5947
    ULONG   NameLength;113,5971
    WCHAR   Name[Name114,6032
} DIAGNOSTICS_KEY_NAME_INFORMATION, *PDIAGNOSTICS_KEY_NAME_INFORMATION;PDIAGNOSTICS_KEY_NAME_INFORMATION115,6088

win32/callback.c,6037
static LPTOP_LEVEL_EXCEPTION_FILTER app_top_handler;82,3121
ALIGN_VAR(92,3558
#define CURRENTLY_UNKNOWN 129,4852
#define INTERCEPT_POINT(132,4926
#undef INTERCEPT_POINT136,5052
typedef struct _intercept_map_elem_t 140,5158
    byte *interception_pc;interception_pc141,5197
    app_pc original_app_pc;142,5224
    size_t displace_length;143,5252
    size_t orig_length;144,5304
    struct _intercept_map_elem_t *next;next145,5328
} intercept_map_elem_t;146,5368
typedef struct _intercept_map_t 148,5393
    intercept_map_elem_t *head;head149,5427
    intercept_map_elem_t *tail;tail150,5459
} intercept_map_t;151,5491
static intercept_map_t *intercept_map;intercept_map153,5511
static byte *LdrInitializeThunk LdrInitializeThunk172,6273
static byte *RtlUserThreadStart RtlUserThreadStart179,6779
static byte *KiFastSystemCall KiFastSystemCall183,6911
get_setcontext_interceptor(187,6978
set_asynch_interception(194,7116
intercept_asynch_global(205,7448
intercept_asynch_common(212,7623
intercept_asynch_for_thread(244,8840
intercept_asynch_for_self(254,9163
#define APP 543,20103
insert_let_go_cleanup(547,20219
#define JMP_SIZE 702,27947
emit_landing_pad_code(704,28028
finalize_landing_pad_code(767,30183
copy_app_code(796,31698
emit_intercept_code(865,34883
# define STACK_ALIGNMENT 1174,49898
#undef APP1347,57624
map_intercept_pc_to_app_pc(1350,57648
unmap_intercept_pc(1377,58426
free_intercept_list(1413,59508
get_app_pc_from_intercept_pc(1440,60543
is_intercepted_app_pc(1462,61172
emit_resume_jmp(1499,62611
intercept_call(1568,65960
un_intercept_call(1773,74455
clean_syscall_wrapper(1829,76694
#define APP(1891,79182
#undef APP1963,82753
syscall_wrapper_ilist(2083,88664
#           define CHROME_HOOK_DISTANCE_JMP_TO_SKIP 2366,102714
intercept_syscall_wrapper(2453,106359
insert_trampoline(2593,112197
remove_trampoline(2627,113748
is_in_interception_buffer(2633,113843
is_part_of_interception(2640,113990
is_on_interception_initial_route(2647,114141
is_syscall_trampoline(2665,114681
make_writable_incr(2711,116186
make_inaccessible(2728,116634
wipe_out_ntdll(2745,117063
asynch_retakeover_if_native(2795,118650
asynch_take_over(2816,119510
possible_new_thread_wait_for_dr_init(2855,121117
intercept_new_thread(2878,122009
#define BASE_THREAD_START_THUNK_USHORT 3032,129414
#define LDR_INIT_CXT_XSP_OFFSET 3159,136428
intercept_ldr_init(3162,136538
#define APC_CONTEXT_XSP_OFFS 3291,142032
#define APC_TARGET_XSP_OFFS 3292,142082
intercept_apc(3298,142404
check_apc_context_offset(3504,153206
intercept_nt_continue(3570,156169
intercept_nt_setcontext(3673,161528
our_top_handler(3745,164665
transfer_to_fcache_return(3756,164978
    MOD_CODE_TAKEOVER 3785,166024
    MOD_CODE_TAKEOVER      = 0x01,x013785,166024
    MOD_CODE_EMULATE_WRITE 3786,166059
    MOD_CODE_EMULATE_WRITE = 0x02,x023786,166059
    MOD_CODE_APP_CXT 3787,166094
    MOD_CODE_APP_CXT       = 0x04,x043787,166094
found_modified_code(3799,166591
is_dstack_overflow(4025,177443
check_for_modified_code(4052,178633
get_exception_list(4177,184716
exception_frame_chain_depth(4197,185493
dump_context_info(4264,188478
#define DUMP(4266,188539
#define DUMPNM(4267,188606
#define NEWLINE 4268,188679
#undef DUMP4356,191111
#undef DUMPNM4357,191123
#undef NEWLINE4358,191137
exception_access_violation_type(4362,191175
dump_exception_info(4375,191521
dump_exception_frames(4394,192285
typedef struct scopetable_entry_t 4436,193809
    DWORD previousTryLevel;4437,193845
    PVOID lpfnFilter;4438,193873
    PVOID lpfnHandler;4439,193895
} scopetable_entry_t;4440,193918
typedef struct _vc_exception_registration_t4443,193996
    EXCEPTION_REGISTRATION   exception_base;4445,194042
    struct scopetable_entry_t *scopetable;scopetable4446,194087
    int                      trylevel;4447,194130
    int                      _ebp;4448,194169
} vc_exception_registration_t;4449,194204
void dump_vc_exception_frame(4456,194454
report_app_exception(4473,195062
report_internal_exception(4488,195782
internal_exception_info(4569,199615
internal_dynamo_exception(4578,199973
is_execution_exception(4610,201166
client_exception_event(4668,203320
check_internal_exception(4744,206833
intercept_exception(4927,216314
intercept_raise_exception(5573,249411
initialize_exception_record(5604,250545
os_forge_exception(5652,252528
intercept_callback_start(5808,260474
callback_setup(5992,269432
callback_start_return(6138,275386
get_prev_swapped_dcontext(6296,282559
get_pc_after_call(6319,283314
intercept_load_dll(6395,286515
intercept_unload_dll(6522,292843
#       define HACK_EXE_NAME 6550,294137
#       define L_PIN_DLL_NAME 6551,294194
retakeover_after_native(6635,298099
remove_image_entry_trampoline(6749,303478
take_over_primary_thread(6769,304400
intercept_image_entry(6840,307474
insert_image_entry_trampoline(7001,315384
callback_interception_init_start(7094,319908
callback_interception_init_finish(7260,327537
callback_interception_unintercept(7444,335879
callback_interception_exit(7482,337421
swap_dcontexts(7497,337925
at_initial_stack_bottom(7545,340225
at_xdata_rct_exception(7608,343091
at_driver_rct_exception(7626,343729
at_fiber_init_known_exception(7714,347817
            SUB_RSP_LENGTH 7736,348736
            FIBER_SEH_LENGTH 7737,348768
    MAX_SEH_TRYLEVEL 7805,351659
    INSTR_PUSH_IMMED32_LENGTH 7806,351685
    INSTR_PUSH_IMMED32_OPCODE 7807,351720
    INSTR_PUSH_IMMED32_OPCODE = 0x68,x687807,351720
at_SEH_rct_exception(7850,353246
bool seen_Borland_SEH 7904,355723
at_Borland_SEH_rct_exemption(7924,356947
at_rct_exempt_module(7976,359643
at_known_exception(8074,364630
callback_init(8133,366752
callback_exit(8138,366778
get_drmarker(8149,366997
hook_text(8159,367229
unhook_text(8199,368974
insert_jmp_at_tramp_entry(8206,369169
get_segment_base(8223,369680
get_app_segment_base(8237,370020
thread_attach_takeover_callee(8244,370170
emit_takeover_code(8255,370461

win32/pre_inject.c,763
#define WIN32_LEAN_AND_MEAN58,2532
# undef assert85,3307
#define assert 88,3370
#   define ASSERT(92,3503
#   define ASSERT(94,3589
# define ASSERT(97,3696
#define BUFFER_SIZE_BYTES(105,3901
#define BUFFER_SIZE_ELEMENTS(106,3949
#define BUFFER_LAST_ELEMENT(107,4027
#define NULL_TERMINATE_BUFFER(108,4098
#define VERBOSE 113,4380
# define VERBOSE_MESSAGE(118,4523
# define VERBOSE_MESSAGE(120,4596
display_error_helper(124,4646
internal_error(135,4976
# define FILENAME_LENGTH 138,5043
# define FILENAME_LENGTH 141,5123
display_error(154,5472
typedef int (*int_func_t)int_func_t163,5667
typedef void (*void_func_t)void_func_t164,5697
load_dynamorio_lib(171,5852
parameters_present(343,12842
process_attach(372,13705
__declspec(446,16469

win32/early_inject_helper2.c,73
#define WIN32_LEAN_AND_MEAN41,2033
__declspec(44,2083
DllMain(51,2233

win32/aslr.c,4855
enum {ASLR_MAP_GRANULARITY ASLR_MAP_GRANULARITY53,2183
    module_digest_t original_source;66,2774
    module_digest_t relocated_target;67,2811
    uint magic;79,3389
    uint version;84,3603
} aslr_persistent_digest_t;86,3700
enum {ASLR_PERSISTENT_CACHE_VERSION ASLR_PERSISTENT_CACHE_VERSION89,3769
enum {ASLR_PERSISTENT_CACHE_MAGIC ASLR_PERSISTENT_CACHE_MAGIC91,3836
enum {ASLR_PERSISTENT_CACHE_MAGIC = 0x45504441}x4550444191,3836
typedef struct _aslr_last_dll_bounds_t 97,4070
    app_pc end;98,4111
    app_pc start;101,4252
} aslr_last_dll_bounds_t;102,4270
static aslr_last_dll_bounds_t *aslr_last_dll_bounds;aslr_last_dll_bounds104,4297
vm_area_vector_t *aslr_wouldbe_areas;aslr_wouldbe_areas118,4897
vm_area_vector_t *aslr_heap_pad_areas;aslr_heap_pad_areas129,5422
HANDLE shared_object_directory 132,5516
HANDLE relocated_dlls_filecache_initial 137,5686
#define KNOWN_DLLS_OBJECT_DIRECTORY 139,5751
HANDLE known_dlls_object_directory 140,5802
#define KNOWN_DLL_PATH_SYMLINK 142,5862
wchar_t known_dll_path[known_dll_path143,5909
aslr_init(179,6975
aslr_exit(431,19074
aslr_thread_init(474,20680
aslr_thread_exit(479,20729
aslr_get_next_base(489,21021
aslr_get_fitting_base(534,23007
aslr_update_failed(613,26424
aslr_update_view_size(647,27698
aslr_track_randomized_dlls(686,29172
aslr_pre_process_mapview(796,34496
aslr_retry_map_syscall(1101,49868
aslr_get_module_mapping_size(1149,52280
#define SET_RETURN_VAL(1198,54206
aslr_post_process_mapview(1207,54485
void aslr_pre_process_unmapview(1897,87973
aslr_post_process_unmapview(1926,89172
aslr_doublecheck_wouldbe_areas(1943,89678
aslr_is_possible_attack(1964,90312
aslr_possible_preferred_address(1985,91189
aslr_reserve_remote_random_pad(2020,92746
aslr_maybe_pad_stack(2062,94573
#define LOADBLOCK_PAGE_PROTECT 2121,97163
aslr_force_dynamorio_rebase(2135,97729
aslr_free_dynamorio_loadblock(2180,99407
aslr_post_process_allocate_virtual_memory(2230,101432
aslr_pre_process_free_virtual_memory(2413,110905
aslr_reserve_initial_heap_pad(2475,113706
aslr_free_heap_pads(2543,117078
get_relocated_dlls_filecache_directory(2585,118622
open_relocated_dlls_filecache_directory(2610,119753
aslr_module_force_size(2725,125038
aslr_module_append_signature(2790,127262
aslr_module_read_signature(2844,129499
aslr_get_section_digest(2929,132629
aslr_create_private_module_section(2978,134469
aslr_get_file_digest(3011,135985
aslr_compare_in_place(3058,137611
aslr_module_verify_relocated_contents(3148,141119
aslr_verify_file_checksum(3337,149172
aslr_open_relocated_dll_file(3521,156357
aslr_check_low_disk_threshold(3650,162479
aslr_create_relocated_dll_file(3684,163958
is_aslr_exempted_file_name(3816,169767
get_file_short_name(3894,173204
calculate_publish_name(3922,174319
aslr_write_header(4042,179406
aslr_generate_relocated_section(4124,182896
aslr_experiment_with_section_handle(4385,194645
aslr_file_relocate_cow(4535,201556
aslr_module_get_times(4636,206611
aslr_produce_randomized_file(4732,210212
aslr_get_unique_wide_name(4949,219863
aslr_rename_temporary_file(4974,220918
aslr_publish_section_handle(5029,223292
aslr_set_randomized_handle(5315,236750
aslr_get_original_metadata(5386,239852
aslr_verify_section_backing(5454,242520
aslr_replace_section_handle(5475,243353
aslr_subscribe_section_handle(5559,246960
aslr_post_process_create_section_internal(5673,251555
aslr_publish_file(5792,256959
aslr_get_known_dll_path(5825,258097
aslr_is_handle_KnownDlls(5887,260322
aslr_recreate_known_dll_file(5940,262286
aslr_post_process_create_or_open_section(6035,266269
aslr_process_worklist(6088,268497
#define GBOP_DEFINE_HOOK(6144,270903
#define GBOP_DEFINE_HOOK_MODULE(6145,270963
static const gbop_hook_desc_t gbop_hooks[gbop_hooks6154,271455
#undef GBOP_DEFINE_HOOK6158,271525
#undef GBOP_DEFINE_HOOK_MODULE6159,271549
#define GBOP_HOOK_LIST_END_SENTINEL 6161,271581
#define GBOP_DEFINE_HOOK(6166,271802
#define GBOP_DEFINE_HOOK_MODULE(6167,271846
static const uint gbop_hooks_set_sizes[gbop_hooks_set_sizes6174,272163
#undef GBOP_DEFINE_HOOK6180,272321
#undef GBOP_DEFINE_HOOK_MODULE6181,272345
#define GBOP_DEFINE_HOOK_MODULE(6188,272630
static int gbop_hooks_set_enabled[gbop_hooks_set_enabled6190,272689
#undef GBOP_DEFINE_HOOK_MODULE6195,272841
static const uint gbop_num_hooks 6197,272873
bool gbop_vm_loaded 6206,273242
gbop_get_hook(6211,273416
gbop_get_num_hooks(6242,274528
gbop_exclude_filter(6290,276289
    CTI_MIN_LENGTH 6358,279118
    CTI_MIN_LENGTH = CTI_IND1_LENGTH,6358,279118
    CTI_MAX_LENGTH 6359,279156
    CTI_MAX_LENGTH = CTI_FAR_ABS_LENGTH,6359,279156
gbop_is_after_cti(6365,279305
check_exempt_gbop_addr(6510,285174
gbop_check_valid_caller(6558,287442
gbop_validate_and_act(6828,300350
gbop_init(6922,304619
gbop_exit(6956,305838

win32/native_pe.c,114
native_module_init(41,1834
native_module_exit(47,1887
native_module_hook(53,1940
native_module_unhook(59,2043

win32/syscallx.h,2561
#define NONE 90,3911
#define ACTION_LOG 92,4028
SYSCALL(Continue,96,4518
SYSCALL(CallbackReturn,97,4691
SYSCALL(SetContextThread,98,4864
SYSCALL(GetContextThread,99,5037
SYSCALL(CreateProcess,100,5210
SYSCALL(CreateProcessEx,101,5383
SYSCALL(CreateUserProcess,102,5556
SYSCALL(TerminateProcess,103,5729
SYSCALL(CreateThread,104,5902
SYSCALL(CreateThreadEx,105,6075
SYSCALL(CreateWorkerFactory,106,6248
SYSCALL(TerminateThread,107,6421
SYSCALL(SuspendThread,108,6594
SYSCALL(ResumeThread,109,6767
SYSCALL(AllocateVirtualMemory,110,6940
SYSCALL(FreeVirtualMemory,reeVirtualMemory111,7113
SYSCALL(ProtectVirtualMemory,112,7286
SYSCALL(QueryVirtualMemory,113,7459
SYSCALL(WriteVirtualMemory,114,7632
SYSCALL(MapViewOfSection,115,7805
SYSCALL(UnmapViewOfSection,116,7978
SYSCALL(UnmapViewOfSectionEx,117,8151
SYSCALL(FlushInstructionCache,lushInstructionCache118,8324
SYSCALL(FreeUserPhysicalPages,reeUserPhysicalPages119,8497
SYSCALL(MapUserPhysicalPages,120,8670
SYSCALL(SetInformationVirtualMemory,121,8843
SYSCALL(Wow64AllocateVirtualMemory64,122,9016
SYSCALL(OpenSection,125,9279
SYSCALL(CreateSection,126,9452
SYSCALL(Close,127,9625
SYSCALL(DuplicateObject,128,9798
SYSCALL(AlertResumeThread,134,10123
SYSCALL(OpenFile,136,10303
SYSCALL(TestAlert,138,10523
SYSCALL(RaiseException,139,10696
SYSCALL(CreateFile,140,10869
SYSCALL(CreateKey,141,11042
SYSCALL(OpenKey,142,11215
SYSCALL(OpenKeyEx,143,11388
SYSCALL(OpenProcess,144,11561
SYSCALL(OpenProcessToken,145,11734
SYSCALL(OpenProcessTokenEx,146,11907
SYSCALL(OpenThread,147,12080
SYSCALL(OpenThreadToken,148,12253
SYSCALL(OpenThreadTokenEx,149,12426
SYSCALL(QueryAttributesFile,150,12599
SYSCALL(QueryFullAttributesFile,151,12772
SYSCALL(SetInformationFile,152,12945
SYSCALL(SetInformationThread,153,13118
SYSCALL(SetValueKey,154,13291
#undef NONE156,13465
#undef ACTION_LOG157,13477
SYSCALL(AlertThread,193,15569
SYSCALL(DelayExecution,194,15705
SYSCALL(ReplyWaitReceivePort,195,15841
SYSCALL(ReplyWaitReceivePortEx,196,15977
SYSCALL(ReplyWaitReplyPort,197,16113
SYSCALL(ReplyWaitSendChannel,198,16249
SYSCALL(RequestWaitReplyPort,199,16385
SYSCALL(SendWaitReplyChannel,200,16521
SYSCALL(SetHighWaitLowEventPair,201,16657
SYSCALL(SetLowWaitHighEventPair,202,16793
SYSCALL(SignalAndWaitForSingleObject,203,16929
SYSCALL(WaitForDebugEvent,204,17065
SYSCALL(WaitForKeyedEvent,205,17201
SYSCALL(WaitForMultipleObjects,206,17337
SYSCALL(WaitForSingleObject,207,17473
SYSCALL(WaitHighEventPair,208,17609
SYSCALL(WaitLowEventPair,209,17745

win32/drwinapi/kernel32_redir.h,3425
#define _KERNEL32_REDIR_H_ 40,1922
#define _WIN32_WINNT 46,2035
#define WIN32_LEAN_AND_MEAN 47,2099
#undef _WIN32_WINNT49,2150
#undef WIN32_LEAN_AND_MEAN50,2170
# define __drv_interlocked 60,2391
    HeapEnableTerminationOnCorruption 65,2482
typedef struct _CONSOLE_READCONSOLE_CONTROL 69,2544
    ULONG nLength;70,2590
    ULONG nInitialChars;71,2609
    ULONG dwCtrlWakeupMask;72,2634
    ULONG dwControlKeyState;73,2662
} CONSOLE_READCONSOLE_CONTROL, *PCONSOLE_READCONSOLE_CONTROL;PCONSOLE_READCONSOLE_CONTROL74,2691
typedef enum _FILE_INFO_BY_HANDLE_CLASS 77,2770
    FileBasicInfo,78,2812
    FileStandardInfo,79,2831
    FileNameInfo,80,2853
    FileRenameInfo,81,2871
    FileDispositionInfo,82,2891
    FileAllocationInfo,83,2916
    FileEndOfFileInfo,84,2940
    FileStreamInfo,85,2963
    FileCompressionInfo,86,2983
    FileAttributeTagInfo,87,3008
    FileIdBothDirectoryInfo,88,3034
    FileIdBothDirectoryRestartInfo,89,3063
    FileIoPriorityHintInfo,90,3099
    FileRemoteProtocolInfo,91,3127
    MaximumFileInfoByHandleClass92,3155
} FILE_INFO_BY_HANDLE_CLASS, *PFILE_INFO_BY_HANDLE_CLASS;PFILE_INFO_BY_HANDLE_CLASS93,3188
#define UNWIND_HISTORY_TABLE_SIZE 97,3310
typedef struct _UNWIND_HISTORY_TABLE_ENTRY 99,3348
    DWORD64 ImageBase;100,3393
    PRUNTIME_FUNCTION FunctionEntry;101,3416
} UNWIND_HISTORY_TABLE_ENTRY, *PUNWIND_HISTORY_TABLE_ENTRY;PUNWIND_HISTORY_TABLE_ENTRY102,3453
typedef struct _UNWIND_HISTORY_TABLE 104,3514
    DWORD Count;105,3553
    BYTE  LocalHint;106,3570
    BYTE  GlobalHint;107,3591
    BYTE  Search;108,3613
    BYTE  Once;109,3631
    DWORD64 LowAddress;110,3647
    DWORD64 HighAddress;111,3671
    UNWIND_HISTORY_TABLE_ENTRY Entry[Entry112,3696
} UNWIND_HISTORY_TABLE, *PUNWIND_HISTORY_TABLE;PUNWIND_HISTORY_TABLE113,3761
typedef struct _KNONVOLATILE_CONTEXT_POINTERS 115,3810
        PM128A FloatingContext[FloatingContext117,3870
            PM128A Xmm0;119,3923
            PM128A Xmm1;120,3948
            PM128A Xmm2;121,3973
            PM128A Xmm3;122,3998
            PM128A Xmm4;123,4023
            PM128A Xmm5;124,4048
            PM128A Xmm6;125,4073
            PM128A Xmm7;126,4098
            PM128A Xmm8;127,4123
            PM128A Xmm9;128,4148
            PM128A Xmm10;129,4173
            PM128A Xmm11;130,4199
            PM128A Xmm12;131,4225
            PM128A Xmm13;132,4251
            PM128A Xmm14;133,4277
            PM128A Xmm15;134,4303
        } DUMMYSTRUCTNAME;135,4329
    } DUMMYUNIONNAME;136,4356
        PDWORD64 IntegerContext[IntegerContext139,4391
            PDWORD64 Rax;141,4445
            PDWORD64 Rcx;142,4471
            PDWORD64 Rdx;143,4497
            PDWORD64 Rbx;144,4523
            PDWORD64 Rsp;145,4549
            PDWORD64 Rbp;146,4575
            PDWORD64 Rsi;147,4601
            PDWORD64 Rdi;148,4627
            PDWORD64 R8;149,4653
            PDWORD64 R9;150,4678
            PDWORD64 R10;151,4703
            PDWORD64 R11;152,4729
            PDWORD64 R12;153,4755
            PDWORD64 R13;154,4781
            PDWORD64 R14;155,4807
            PDWORD64 R15;156,4833
        } DUMMYSTRUCTNAME;157,4859
    } DUMMYUNIONNAME2;158,4886
} KNONVOLATILE_CONTEXT_POINTERS, *PKNONVOLATILE_CONTEXT_POINTERS;PKNONVOLATILE_CONTEXT_POINTERS160,4910
# define RTL_CRITICAL_SECTION_FLAG_NO_DEBUG_INFO 164,5032
__bcount(560,11494

win32/drwinapi/rpcrt4_redir.h,34
#define _RPCRT4_REDIR_H_ 40,1918

win32/drwinapi/drwinapi.h,30
#define _DRWINAPI_H_ 39,1891

win32/drwinapi/ntdll_redir.h,33
#define _NTDLL_REDIR_H_ 37,1843

win32/drwinapi/kernel32_misc.c,104
redirect_GetLastError(40,1859
redirect_SetLastError(49,1943
unit_test_drwinapi_kernel32_misc(67,2252

win32/drwinapi/advapi32_redir.c,690
#define MAX_REG_KEY_NAME_LEN 45,1933
static strhash_table_t *advapi32_table;advapi32_table48,2067
static const redirect_import_t redirect_advapi32[redirect_advapi3250,2108
#define REDIRECT_ADVAPI32_NUM 57,2525
advapi32_redir_init(60,2618
advapi32_redir_exit(78,3330
advapi32_redir_onload(84,3425
advapi32_redir_lookup(90,3497
redirect_RegCloseKey(102,3754
redirect_RegOpenKeyExA(113,3901
open_key_common(136,4555
key_is_special(149,4961
special_to_handle(158,5237
key_close_special(201,7010
redirect_RegOpenKeyExW(209,7160
redirect_RegQueryValueExA(251,8527
redirect_RegQueryValueExW(298,10320
unit_test_drwinapi_advapi32(371,12754
#   define REG_KEY_DATA_SZ 377,12925

win32/drwinapi/kernel32_sync.c,512
redirect_InitializeCriticalSection(42,1914
redirect_InitializeCriticalSectionAndSpinCount(57,2362
redirect_InitializeCriticalSectionEx(73,2746
redirect_DeleteCriticalSection(90,3140
redirect_EnterCriticalSection(99,3302
redirect_LeaveCriticalSection(112,3654
redirect_InterlockedCompareExchange 125,4006
redirect_InterlockedDecrement(136,4247
redirect_InterlockedExchange(145,4395
redirect_InterlockedIncrement(155,4569
redirect_WaitForSingleObject(164,4718
unit_test_drwinapi_kernel32_sync(190,5504

win32/drwinapi/kernel32_proc.c,570
typedef struct _fls_cb_t 45,2117
    PFLS_CALLBACK_FUNCTION cb;46,2144
    struct _fls_cb_t *next;next47,2175
} fls_cb_t;48,2203
static fls_cb_t *fls_cb_list;fls_cb_list50,2216
kernel32_redir_init_proc(55,2415
kernel32_redir_exit_proc(65,2688
kernel32_redir_onload_proc(78,3034
redirect_GetCurrentProcess(90,3321
redirect_GetCurrentProcessId(99,3413
redirect_ExitProcess(109,3530
redirect_GetCurrentThread(128,3950
redirect_GetCurrentThreadId(137,4040
kernel32_redir_fls_cb(149,4219
redirect_FlsAlloc(198,6159
unit_test_drwinapi_kernel32_proc(238,7601

win32/drwinapi/drwinapi.c,293
drwinapi_init(47,2032
drwinapi_exit(56,2165
drwinapi_onload(65,2298
drwinapi_redirect_imports(76,2612
ntstatus_to_last_error(118,4574
redirect_ignore_arg0(168,7563
redirect_ignore_arg4(174,7624
redirect_ignore_arg8(180,7691
redirect_ignore_arg12(186,7770
unit_test_drwinapi(201,8186

win32/drwinapi/ntdll_redir.c,1977
static strhash_table_t *ntdll_table;ntdll_table46,2031
static strhash_table_t *ntdll_win7_table;ntdll_win7_table47,2068
static const redirect_import_t redirect_ntdll[redirect_ntdll60,2784
#define REDIRECT_NTDLL_NUM 149,8826
static const redirect_import_t redirect_ntdll_win7[redirect_ntdll_win7154,9005
#define REDIRECT_NTDLL_WIN7_NUM 158,9174
ntdll_redir_init(162,9279
ntdll_redir_exit(195,10724
ntdll_redir_lookup(204,10922
redirect_RtlCreateHeap(235,11919
redirect_heap_call(251,12624
redirect_RtlDestroyHeap(273,13381
wrapped_dr_alloc(291,13990
wrapped_dr_free(309,14516
wrapped_dr_size(316,14663
redirect_RtlAllocateHeap(322,14774
redirect_RtlReAllocateHeap(339,15326
redirect_RtlFreeHeap(388,17256
redirect_RtlSizeHeap(406,17902
redirect_RtlValidateHeap(420,18301
redirect_RtlLockHeap(432,18642
redirect_RtlUnlockHeap(446,18937
redirect_RtlSetHeapInformation(460,19227
redirect_RtlFreeUnicodeString(475,19757
redirect_RtlFreeAnsiString(488,20150
redirect_RtlFreeOemString(501,20532
# define RTL_CRITICAL_SECTION_FLAG_NO_DEBUG_INFO 517,21015
# define RTL_CRITICAL_SECTION_FLAG_STATIC_INIT 520,21127
redirect_RtlInitializeCriticalSection(524,21211
redirect_RtlInitializeCriticalSectionAndSpinCount(530,21362
redirect_RtlInitializeCriticalSectionEx(537,21616
redirect_RtlDeleteCriticalSection(582,23473
redirect_NtCreateFile(610,24504
redirect_NtCreateKey(636,25536
redirect_NtMapViewOfSection(650,26055
redirect_NtOpenFile(674,27096
redirect_NtOpenKey(690,27654
redirect_NtOpenKeyEx(701,27945
redirect_NtOpenProcess(713,28330
redirect_NtOpenProcessToken(725,28738
redirect_NtOpenProcessTokenEx(735,29068
redirect_NtOpenThread(747,29521
redirect_NtOpenThreadToken(759,29919
redirect_NtOpenThreadTokenEx(771,30338
redirect_NtQueryAttributesFile(785,30882
redirect_NtQueryFullAttributesFile(793,31159
redirect_NtSetInformationFile(801,31459
redirect_NtSetInformationThread(815,32035
redirect_NtUnmapViewOfSection(827,32552

win32/drwinapi/drwinapi_private.h,170
#define _DRWINAPI_PRIVATE_H_ 36,1796
typedef struct _redirect_import_t 45,2162
    const char *name;name46,2198
    app_pc func;47,2220
} redirect_import_t;48,2237

win32/drwinapi/rpcrt4_redir.c,345
static strhash_table_t *rpcrt4_table;rpcrt4_table46,2004
static const redirect_import_t redirect_rpcrt4[redirect_rpcrt448,2043
#define REDIRECT_RPCRT4_NUM 51,2168
rpcrt4_redir_init(54,2255
rpcrt4_redir_exit(72,2947
rpcrt4_redir_onload(78,3038
rpcrt4_redir_lookup(84,3108
redirect_UuidCreate 96,3363
unit_test_drwinapi_rpcrt4(123,4254

win32/drwinapi/kernel32_file.c,2711
static HANDLE base_named_obj_dir;44,2059
static HANDLE base_named_pipe_dir;45,2093
get_base_named_obj_dir_name(49,2214
kernel32_redir_init_file(97,4239
kernel32_redir_exit_file(114,4852
kernel32_redir_onload_file(121,4983
init_object_attr_for_files(128,5187
largeint_to_filetime(145,5958
create_dir_common(158,6261
redirect_CreateDirectoryA(195,7409
redirect_CreateDirectoryW(212,7870
redirect_RemoveDirectoryA(237,8576
redirect_RemoveDirectoryW(249,8821
redirect_GetCurrentDirectoryA(261,9068
redirect_GetCurrentDirectoryW(287,9857
redirect_SetCurrentDirectoryA(321,11060
redirect_SetCurrentDirectoryW(335,11369
file_create_disp_winapi_to_nt(357,12003
file_options_to_nt(371,12415
file_access_to_nt(409,13769
create_file_common(425,14230
redirect_CreateFileA(520,17798
redirect_CreateFileW(543,18563
redirect_DeleteFileA(575,19601
redirect_DeleteFileW(597,20114
redirect_ReadFile(625,20843
redirect_WriteFile(684,22794
redirect_GetFileAttributesA(749,24958
redirect_GetFileAttributesW(770,25473
redirect_GetFileInformationByHandle(805,26439
redirect_GetFileSize(862,28572
redirect_GetFileType(881,29079
redirect_CreateFileMappingA(932,30385
redirect_CreateFileMappingW(958,31197
redirect_MapViewOfFile(1021,33527
redirect_MapViewOfFileEx(1036,33955
redirect_UnmapViewOfFile(1083,35619
redirect_FlushViewOfFile(1097,35914
redirect_CreatePipe(1126,36689
redirect_DeviceIoControl(1213,40170
redirect_GetDiskFreeSpaceA(1280,42514
open_dir_from_path(1309,43481
redirect_GetDiskFreeSpaceW(1362,45150
redirect_GetDriveTypeA(1400,46269
redirect_GetDriveTypeW(1421,46766
redirect_CloseHandle(1470,48043
redirect_DuplicateHandle(1479,48153
redirect_GetStdHandle(1500,48924
redirect_FileTimeToLocalFileTime(1519,49366
redirect_LocalFileTimeToFileTime(1546,50233
redirect_FileTimeToSystemTime(1569,50905
redirect_SystemTimeToFileTime(1581,51194
redirect_GetSystemTimeAsFileTime(1595,51512
redirect_GetFileTime(1606,51724
redirect_SetFileTime(1635,52507
#define FIND_FILE_INFO_SZ 1674,53829
redirect_FindClose(1679,53937
find_next_file_common(1691,54271
find_first_file_common(1745,56445
find_nt_to_win32A(1815,59345
find_nt_to_win32W(1851,61003
redirect_FindFirstFileA(1882,62354
redirect_FindFirstFileW(1907,63187
redirect_FindNextFileA(1938,64191
redirect_FindNextFileW(1952,64647
redirect_FlushFileBuffers(1967,65128
test_directories(1991,65582
test_files(2027,66793
test_file_mapping(2145,71306
test_pipe(2206,73660
test_DeviceIoControl(2238,74623
within_one(2283,76168
test_file_times(2290,76285
test_find_file(2360,79044
test_file_paths(2456,83343
test_drive(2511,85818
test_handles(2561,88309
unit_test_drwinapi_kernel32_file(2574,88601

win32/drwinapi/kernel32_redir.c,308
static strhash_table_t *kernel32_table;kernel32_table46,2052
static const redirect_import_t redirect_kernel32[redirect_kernel3248,2093
#define REDIRECT_KERNEL32_NUM 171,10228
kernel32_redir_init(174,10321
kernel32_redir_exit(196,11129
kernel32_redir_onload(206,11320
kernel32_redir_lookup(227,11912

win32/drwinapi/kernel32_mem.c,1278
static ptr_uint_t magic_val;46,2107
kernel32_redir_init_mem(55,2381
kernel32_redir_exit_mem(61,2482
redirect_DecodePointer(68,2563
redirect_EncodePointer 77,2684
redirect_GetProcessHeap(86,2807
__bcount(98,3133
redirect_HeapCompact(112,3343
redirect_HeapCreate(127,3727
redirect_HeapDestroy(140,4084
redirect_HeapFree(149,4194
__bcount(158,4358
redirect_HeapSetInformation 173,4612
redirect_HeapSize(196,5332
redirect_HeapValidate(207,5508
redirect_HeapWalk(218,5704
typedef struct _local_header_t 247,6818
    ushort lock_count;248,6851
    ushort flags;249,6874
    struct _local_header_t *alloc;alloc250,6892
} local_header_t;251,6927
local_header_from_handle(254,6977
redirect_LocalAlloc(261,7079
redirect_LocalFree(299,8214
redirect_LocalReAlloc(318,8752
redirect_LocalLock(393,11755
redirect_LocalHandle(413,12162
redirect_LocalUnlock(428,12463
redirect_LocalSize(452,12974
redirect_LocalFlags(475,13572
redirect_IsBadReadPtr(500,14254
redirect_ReadProcessMemory(512,14461
__bcount(532,15093
redirect_VirtualFree(568,16268
redirect_VirtualProtect(593,16817
redirect_VirtualQuery(626,18003
redirect_VirtualQueryEx(637,18275
test_heap(658,18808
test_local(683,19560
test_syscalls(755,22107
unit_test_drwinapi_kernel32_mem(782,23034

win32/drwinapi/kernel32_lib.c,279
kernel32_redir_onload_lib(50,2367
redirect_GetModuleHandleA(69,3316
redirect_GetModuleHandleW(88,3848
redirect_GetProcAddress(111,4564
redirect_LoadLibraryA(135,5485
redirect_LoadLibraryW(156,6342
redirect_GetModuleFileNameA(174,6908
redirect_GetModuleFileNameW(200,7698

win32/drwinapi/advapi32_redir.h,102
#define _ADVAPI32_REDIR_H_ 39,1837
# define __out_data_source(61,2200
typedef LONG LSTATUS;66,2302

win32/module.c,8613
typedef struct _version_info_t 55,2290
    version_number_t file_version;56,2323
    version_number_t product_version;57,2358
    wchar_t *company_name;company_name58,2396
    wchar_t *product_name;product_name59,2423
    wchar_t *original_filename;original_filename60,2450
} version_info_t;61,2482
typedef struct _pe_module_import_iterator_t 76,2986
    dr_module_import_t module_import;77,3032
    byte *mod_base;mod_base79,3111
    size_t mod_size;80,3131
    IMAGE_IMPORT_DESCRIPTOR *cur_module;cur_module84,3273
    IMAGE_IMPORT_DESCRIPTOR safe_module;85,3314
    byte *imports_end;imports_end86,3393
    bool hasnext;87,3473
} pe_module_import_iterator_t;88,3552
typedef struct _pe_symbol_import_iterator_t 90,3584
    dr_symbol_import_t symbol_import;91,3630
    dr_symbol_import_t next_symbol;92,3713
    byte *mod_base;mod_base94,3783
    dr_module_import_iterator_t *mod_iter;mod_iter95,3803
    IMAGE_IMPORT_DESCRIPTOR *cur_module;cur_module96,3884
    IMAGE_THUNK_DATA *cur_thunk;cur_thunk98,4023
    bool hasnext;99,4056
} pe_symbol_import_iterator_t;100,4135
static generic_table_t *section2file_table;section2file_table107,4341
#define INIT_HTABLE_SIZE_SECTION 108,4385
typedef struct _section_to_file_t 110,4447
    HANDLE section_handle;111,4483
    const char *file_path;file_path112,4510
} section_to_file_t;113,4556
section_to_file_free(116,4590
section_to_file_lookup(124,4875
section_to_file_add_common(138,5326
section_to_file_add_wide(163,6278
section_to_file_add(170,6501
section_to_file_remove(177,6715
typedef struct export_entry_t 201,7494
    app_pc  entry_point;202,7526
    char *export_name;export_name203,7596
} export_entry_t;204,7619
typedef struct module_info_t 214,7992
    app_pc start;215,8023
    app_pc end;216,8041
    char * module_name;217,8097
    size_t exports_size;218,8121
    uint   exports_num;219,8187
    export_entry_t *exports_table;exports_table221,8251
} module_info_t;239,9136
typedef struct module_info_vector_t 253,9607
    struct module_info_t *buf;buf254,9645
    int   capacity;255,9676
    int   length;256,9696
    mutex_t lock;259,9829
} module_info_vector_t;260,9847
print_module_list(267,10099
module_info_compare(289,10697
lookup_module_info(308,11273
#define INITIAL_MODULE_NUMBER 337,12143
module_info_create(346,12434
remove_module_info_vector(400,14304
remove_module_info(445,15704
module_cleanup(466,16346
module_info_exit(492,17180
export_entry_compare(499,17275
find_predecessor(512,17721
remove_export_duplicates(538,18272
print_symbolic_address(563,18801
add_module_info(658,23238
print_ldr_data(804,30120
static LDR_MODULE *DR_module;DR_module875,33553
hide_from_module_lists(898,34725
print_modules(1001,39336
print_modules_ldrlist_and_ourlist(1008,39611
print_modules_safe(1126,44704
check_for_unsupported_modules(1173,46646
#define DOS_HEADER(1225,48825
#define NT_HEADER(1226,48880
#define VERIFY_DOS_HEADER(1229,49029
#define VERIFY_NT_HEADER(1234,49246
on_subset_of_pages(1246,49825
is_readable_pe_base(1253,50039
get_image_section_unpadded_size(1284,51381
get_image_section_size(1310,52925
get_image_section_map_size(1322,53497
get_image_section_file_offs(1342,54674
print_module_section_info(1351,55058
is_in_executable_file_section(1408,57643
module_pc_section_lookup(1536,64051
is_range_in_code_section(1550,64728
is_in_code_section(1563,65409
is_in_dot_data_section(1575,65940
is_in_xdata_section(1588,66572
is_in_any_section(1612,67697
get_executable_segment(1623,68154
is_mapped_as_image(1636,68728
module_get_nth_segment(1657,69412
module_get_header_size(1670,69856
get_named_section_bounds(1680,70126
get_IAT_section_bounds(1696,70664
is_IAT(1711,71256
is_in_IAT(1734,72043
get_module_entry(1746,72327
get_module_base(1767,73267
get_module_preferred_base(1783,73784
in_same_module(1801,74391
get_dll_short_name(1819,75170
get_all_module_short_names_uncached(1864,77240
get_module_short_name_uncached(2019,83911
get_module_short_name(2042,84879
get_module_preferred_base_delta(2056,85444
get_ldr_module_by_pc(2074,85997
get_module_name(2142,88539
get_module_base_reloc(2155,88916
get_module_characteristics(2225,91315
get_module_cor20_header(2245,92026
module_has_cor20_header(2309,94304
get_module_magic(2319,94566
module_is_32bit(2330,94816
module_is_64bit(2336,94939
is_module_patch_region(2353,95646
#define IMAGE_REL_BASED_TYPE(2475,101911
#define IMAGE_REL_BASED_OFFSET_MASK 2476,101960
#define IMAGE_REL_BASED_OFFSET(2477,102004
process_one_relocation(2494,102701
add_SEH_address(2597,107003
add_SEH_to_rct_table(2616,107759
rct_add_rip_rel_addr(2808,117521
rct_add_exports(2868,120300
find_relocation_references(2986,125669
find_address_references_by_region(3149,132766
add_rct_module(3196,134894
rct_analyze_module_at_load(3428,146802
rct_analyze_module_at_violation(3460,148130
rct_process_module_mmap(3519,150727
rct_is_exported_function(3688,158740
os_modules_init(3717,159619
os_modules_exit(3735,160261
free_module_names(3741,160356
os_module_area_reset(3757,160910
get_module_info_pe(3812,163160
os_module_area_init(3878,165944
get_module_preferred_base_safe(3983,170977
os_get_module_info(4015,172162
os_get_module_info_all_names(4063,174042
os_module_get_rct_htable(4133,176704
os_module_store_IAT_code(4145,176961
bool os_module_cmp_IAT_code(4164,177722
module_area_free_IAT(4201,179471
bool os_module_free_IAT_code(4220,180124
module_apply_relocations(4249,181114
typedef struct reloc_iterator_t 4397,187539
    app_pc relocs;4398,187573
    app_pc relocs_end;4399,187639
    app_pc relocs_block_end;4400,187702
    uint rva_page;4401,187768
    app_pc module_base;4402,187823
} reloc_iterator_t;4421,188786
module_reloc_iterator_next_block_internal(4424,188819
module_reloc_iterator_start(4455,190113
module_reloc_iterator_next(4524,192745
module_make_writable(4611,196186
module_restore_permissions(4642,197521
module_file_relocatable(4665,198274
module_rebase(4728,201069
module_dump_pe_file(4824,204635
ensure_section_readable(4937,209549
restore_unreadable_section(4979,211321
module_region_compare(5027,213198
module_pe_section_compare(5044,213936
aslr_compare_header(5137,218249
module_contents_compare(5248,222777
#define CHECK_SAFE_READ(5462,231916
#define GET_FOLLOWING_ADDRESS(5473,232542
get_resource_directory_entries(5476,232637
get_module_resource_directory(5482,232812
get_resource_directory_entry_by_id(5539,235343
get_module_resource_version_data(5583,237071
typedef struct ver_rsrc_header 5776,246007
    size_t length;5777,246040
    size_t value_length;5778,246094
    uint type;5779,246150
    wchar_t *key;key5780,246165
    size_t key_length;5781,246183
} ver_rsrc_header_t;5782,246249
typedef struct vs_version_info 5783,246270
    VS_FIXEDFILEINFO *info;info5784,246303
    void *string_or_var_info;string_or_var_info5785,246350
} vs_version_info_t;5789,246636
typedef struct string_file_info 5790,246657
    size_t size;5791,246691
    void *string_table;string_table5792,246751
} string_file_info_t;5793,246807
typedef struct string_table 5794,246829
    size_t size;5795,246859
    wchar_t *lang;lang5796,246913
    void *string;string5797,246958
} string_table_t;5798,247007
typedef struct rsrc_string 5799,247025
    size_t key_length;5800,247054
    size_t value_length;5801,247120
    wchar_t *key;key5802,247188
    wchar_t *value;value5803,247206
} rsrc_string_t;5804,247226
#define RSRC_TYPE_STRING 5807,247321
#define RSRC_TYPE_BINARY 5808,247348
#define RSRC_ALIGNMENT 5811,247426
read_version_struct_header(5821,247951
read_vs_version_info(5886,250535
read_string_or_var_info(5934,252473
read_string_table(6009,255605
read_rsrc_string(6058,257578
get_module_resource_version_info(6128,260768
get_module_company_name(6243,265998
get_module_original_filename(6260,266602
get_loader_lock_owner(6277,267180
get_shared_lib_name(6286,267373
os_module_has_dynamic_base(6292,267451
safe_read_cur_module(6306,267825
dr_module_import_iterator_start(6328,268643
dr_module_import_iterator_hasnext(6356,269627
dr_module_import_iterator_next(6363,269850
dr_module_import_iterator_stop(6385,270738
pe_symbol_import_iterator_read_thunk(6397,271113
pe_symbol_import_iterator_first_thunk(6424,272103
pe_symbol_import_iterator_next_module(6442,272700
dr_symbol_import_iterator_start(6462,273422
dr_symbol_import_iterator_hasnext(6496,274541
dr_symbol_import_iterator_next(6503,274764
dr_symbol_import_iterator_stop(6527,275647

win32/inject_shared.c,2448
# undef assert64,2403
#define assert 67,2466
#  define display_warning 72,2704
#   undef ASSERT74,2760
#   define ASSERT(77,2804
#   define ASSERT(79,2891
#  define display_warning 82,3029
# define ASSERT(85,3127
# define display_error(86,3165
# define display_warning(87,3193
#define MAX_RUNVALUE_LENGTH 90,3231
# define VERBOSE 92,3333
# define VERBOSE 94,3358
    REGISTRY_DEFAULT,98,3400
    REGISTRY_32,100,3493
    REGISTRY_64,101,3555
} reg_platform_t;102,3611
ignore_assert(107,3741
report_dynamorio_problem(113,3826
notcore_mutex_lock(131,4506
notcore_mutex_unlock(139,4643
display_verbose_message(145,4706
double_strrchr(199,6935
wchar_to_char(212,7177
set_registry_parameter(242,8404
get_registry_parameter(271,9280
get_remote_process_ldr_status(365,13442
get_process_imgname_cmdline(400,14487
get_rununder_value(487,17629
#define DIRSEP 502,18081
#define ALT_DIRSEP 503,18101
double_wcsrchr(510,18212
w_get_short_name(523,18478
get_commandline_qualifier(556,19731
    QUALIFIED_FULL_NAME,619,21679
    QUALIFIED_SHORT_NAME,620,21705
    UNQUALIFIED_FULL_NAME,621,21731
    UNQUALIFIED_SHORT_NAME,622,21758
} qualified_name_type_t;623,21786
#define NAME_TYPE_IS_UNQUALIFIED(625,21812
#define NAME_TYPE_IS_SHORT(627,21938
commandline_qualifier_needed(646,22657
get_process_qualified_name(683,24346
get_own_qualified_name(778,28732
get_own_unqualified_name(793,29244
get_own_short_qualified_name(809,29803
get_own_short_unqualified_name(824,30306
get_subkey_parameter(844,31027
get_process_parameter_internal(895,33114
get_process_parameter(930,34423
get_parameter(938,34703
get_parameter_ex(946,34994
get_parameter_32(954,35214
get_parameter_64(962,35501
get_unqualified_parameter(972,35876
set_process_parameter(994,37011
get_parameter_from_registry(1027,38525
get_process_parameter_ex(1037,38893
get_process_parameter(1068,40170
get_parameter_64(1076,40379
is_nt_or_custom_safe_mode(1087,40664
is_windows_version_nt(1134,42793
is_windows_version_vista_plus(1144,43050
is_safe_mode(1154,43310
        MINIMAL 1160,43490
        NETWORK 1161,43511
systemwide_inject_enabled(1197,44749
check_commandline_match(1222,45770
systemwide_should_inject_common(1276,47841
systemwide_should_preinject_64(1369,51331
systemwide_should_inject(1376,51502
systemwide_should_preinject(1382,51664
check_for_run_once(1399,52372
test(1441,53964
nametest(1451,54216
main(1478,55122

win32/ntdll_imports.c,3611
#define WIN32_LEAN_AND_MEAN39,1940
#define NTEXPORT 47,2055
KiUserApcDispatcher(54,2203
KiUserCallbackDispatcher(63,2419
KiUserExceptionDispatcher(70,2569
KiRaiseUserExceptionDispatcher(76,2679
NtAllocateVirtualMemory(85,2833
NtQueryVirtualMemory(96,3177
NtFreeVirtualMemory(107,3563
NtProtectVirtualMemory(116,3795
NtCreateFile(126,4089
NtWriteVirtualMemory(143,4620
NtGetContextThread(154,4911
NtSetContextThread(161,5051
NtSuspendThread(168,5190
NtResumeThread(175,5344
NtTerminateThread(182,5496
NtClose(189,5645
NtDuplicateObject(195,5727
NtCreateSection(207,6100
NtOpenSection(219,6466
NtMapViewOfSection(227,6661
NtUnmapViewOfSection(242,7254
NtCallbackReturn(250,7417
NtTestAlert(258,7593
NtContinue(265,7668
NtQueryInformationThread(272,7789
NtQueryInformationProcess(283,8135
NtQueryInformationFile(294,8491
NtSetInformationFile(305,8829
NtQuerySection(316,9156
NtOpenFile(327,9466
NtOpenThreadToken(339,9763
NtOpenProcessToken(348,9997
NtQueryInformationToken(356,10189
NtYieldExecution(366,10524
NtQuerySystemInformation(373,10604
NtOpenProcess(382,10867
NtSetInformationThread(391,11100
NtReadVirtualMemory(400,11377
NtCreateTimer(410,11663
NtSetTimer(419,11907
NtDelayExecution(431,12227
NtQueryObject(438,12367
NtQueryFullAttributesFile(448,12666
NtCreateKey(455,12850
NtOpenKey(467,13196
NtSetValueKey(475,13375
NtDeleteKey(486,13645
NtQueryValueKey(493,13735
NtFlushKey(504,14068
NtEnumerateKey(511,14157
NtEnumerateValueKey(522,14447
NtQuerySystemTime(533,14773
NtDeleteFile(540,14878
NtFlushBuffersFile(547,14989
NtReadFile(554,15141
NtWriteFile(568,15548
NtCreateIoCompletion(582,15997
NtRaiseHardError(591,16275
NtRaiseException(603,16700
NtCreateEvent(611,16891
NtWaitForSingleObject(621,17162
NtSetEvent(629,17358
NtClearEvent(636,17493
NtSignalAndWaitForSingleObject(643,17586
NtQueryPerformanceCounter(652,17873
NtFsControlFile(659,18068
NtCancelIoFile(674,18708
NtCreateProfile(681,18852
NtSetIntervalProfile(695,19248
NtQueryIntervalProfile(702,19392
NtStartProfile(709,19542
NtStopProfile(716,19639
NtCreateProcess(723,19735
NtTerminateProcess(736,20177
NtCreateDirectoryObject(743,20329
NtOpenDirectoryObject(751,20556
NtOpenSymbolicLinkObject(759,20777
NtQuerySymbolicLinkObject(767,21007
ZwAreMappedFilesTheSame(775,21237
NtQueryVolumeInformationFile(782,21379
NtQuerySecurityObject(792,21724
NtQueueApcThread(803,22082
NtCreateThread(813,22367
NtOpenThread(826,22770
NtFlushInstructionCache(835,22998
NtQueryAttributesFile(843,23203
NtCreateNamedPipeFile(850,23383
NtDeviceIoControlFile(869,24140
NtQueryDirectoryFile(884,24715
NtFlushVirtualMemory(900,25355
RtlInitializeCriticalSection(913,25701
RtlDeleteCriticalSection(920,25819
RtlEnterCriticalSection(927,25929
RtlLeaveCriticalSection(934,26045
RtlTryEnterCriticalSection(941,26161
RtlInitUnicodeString(948,26280
RtlInitAnsiString(955,26444
RtlFreeUnicodeString(962,26594
RtlFreeAnsiString(967,26664
RtlFreeOemString(972,26728
RtlQueryEnvironmentVariable_U(977,26794
RtlConvertSidToUnicodeString(985,27004
RtlCreateProcessParameters(993,27230
RtlDestroyProcessParameters(1008,27942
RtlCreateHeap(1015,28076
RtlDestroyHeap(1022,28264
RtlAllocateHeap(1028,28346
RtlReAllocateHeap(1034,28445
RtlFreeHeap(1040,28555
RtlSizeHeap(1046,28649
RtlValidateHeap(1052,28737
RtlLockHeap(1059,28834
RtlUnlockHeap(1065,28902
RtlGetProcessHeaps(1071,28976
RtlWalkHeap(1078,29105
LdrLoadDll(1089,29306
LdrUnloadDll(1098,29524
LdrGetProcedureAddress(1105,29618
LdrGetDllHandle(1114,29888
CsrClientCallServer(1127,30215

win32/ntdll_types.h,14687
#define _NTDLL_TYPES_H_ 17,785
typedef unsigned int uint;28,1086
typedef LONG NTSTATUS;29,1113
#define NT_SUCCESS(31,1191
#define NT_ERROR(32,1244
#define STATUS_SUCCESS 33,1302
#define STATUS_UNSUCCESSFUL 34,1349
typedef struct _UNICODE_STRING 36,1402
    USHORT Length;38,1496
    USHORT MaximumLength;39,1515
    PWSTR  Buffer;40,1541
} UNICODE_STRING;41,1560
typedef UNICODE_STRING *PUNICODE_STRING;PUNICODE_STRING42,1578
typedef struct _STRING 44,1620
  USHORT  Length;45,1645
  USHORT  MaximumLength;46,1663
  PCHAR  Buffer;47,1688
} ANSI_STRING;48,1705
typedef ANSI_STRING *PANSI_STRING;PANSI_STRING49,1720
typedef ANSI_STRING OEM_STRING;50,1755
typedef struct _OBJECT_ATTRIBUTES 52,1788
    ULONG Length;53,1824
    HANDLE RootDirectory;54,1842
    PUNICODE_STRING ObjectName;55,1868
    ULONG Attributes;56,1900
    PSECURITY_DESCRIPTOR SecurityDescriptor;57,1922
    PVOID SecurityQualityOfService;58,1967
} OBJECT_ATTRIBUTES;59,2050
typedef OBJECT_ATTRIBUTES *POBJECT_ATTRIBUTES;POBJECT_ATTRIBUTES60,2071
#define InitializeObjectAttributes(62,2119
#define OBJ_INHERIT 72,2579
#define OBJ_PERMANENT 73,2623
#define OBJ_EXCLUSIVE 74,2667
#define OBJ_CASE_INSENSITIVE 75,2711
#define OBJ_OPENIF 76,2755
#define OBJ_OPENLINK 77,2799
#define OBJ_KERNEL_HANDLE 78,2843
#define OBJ_FORCE_ACCESS_CHECK 79,2936
typedef ULONG ACCESS_MASK;81,3017
typedef enum _SECTION_INHERIT 84,3064
    ViewShare 85,3096
    ViewUnmap 86,3115
} SECTION_INHERIT;87,3133
typedef struct _CLIENT_ID 89,3153
    HANDLE UniqueProcess;91,3213
    HANDLE UniqueThread;92,3239
} CLIENT_ID;93,3264
typedef CLIENT_ID *PCLIENT_ID;PCLIENT_ID94,3277
typedef enum _MEMORY_INFORMATION_CLASS 96,3309
    MemoryBasicInformation,97,3350
    MemoryWorkingSetList,98,3378
    MemorySectionName,99,3404
    MemoryBasicVlmInformation100,3427
} MEMORY_INFORMATION_CLASS;101,3457
typedef enum _PROCESSINFOCLASS 104,3539
    ProcessBasicInformation,105,3572
    ProcessQuotaLimits,106,3601
    ProcessIoCounters,107,3625
    ProcessVmCounters,108,3648
    ProcessTimes,109,3671
    ProcessBasePriority,110,3689
    ProcessRaisePriority,111,3714
    ProcessDebugPort,112,3740
    ProcessExceptionPort,113,3762
    ProcessAccessToken,114,3788
    ProcessLdtInformation,115,3812
    ProcessLdtSize,116,3839
    ProcessDefaultHardErrorMode,117,3859
    ProcessIoPortHandlers,118,3892
    ProcessPooledUsageAndLimits,119,3962
    ProcessWorkingSetWatch,120,3995
    ProcessUserModeIOPL,121,4023
    ProcessEnableAlignmentFaultFixup,122,4048
    ProcessPriorityClass,123,4086
    ProcessWx86Information,124,4112
    ProcessHandleCount,125,4140
    ProcessAffinityMask,126,4164
    ProcessPriorityBoost,127,4189
    ProcessDeviceMap,128,4215
    ProcessSessionInformation,129,4237
    ProcessForegroundInformation,130,4268
    ProcessWow64Information,131,4302
    ProcessImageFileName,133,4357
    ProcessLUIDDeviceMapsEnabled,134,4383
    ProcessBreakOnTermination,135,4417
    ProcessDebugObjectHandle,136,4448
    ProcessDebugFlags,137,4478
    ProcessHandleTracing,138,4501
    ProcessIoPriority,139,4527
    ProcessExecuteFlags,140,4550
    ProcessResourceManagement,141,4575
    ProcessCookie,142,4606
    ProcessImageInformation,143,4625
    MaxProcessInfoClass 144,4654
} PROCESSINFOCLASS;145,4744
typedef enum _THREADINFOCLASS 148,4798
    ThreadBasicInformation,149,4830
    ThreadTimes,150,4858
    ThreadPriority,151,4875
    ThreadBasePriority,152,4895
    ThreadAffinityMask,153,4919
    ThreadImpersonationToken,154,4943
    ThreadDescriptorTableEntry,155,4973
    ThreadEnableAlignmentFaultFixup,156,5005
    ThreadEventPair_Reusable,157,5042
    ThreadQuerySetWin32StartAddress,158,5072
    ThreadZeroTlsCell,159,5109
    ThreadPerformanceCount,160,5132
    ThreadAmILastThread,161,5160
    ThreadIdealProcessor,162,5185
    ThreadPriorityBoost,163,5211
    ThreadSetTlsArrayAddress,164,5236
    ThreadIsIoPending,165,5266
    ThreadHideFromDebugger,166,5289
    MaxThreadInfoClass167,5317
} THREADINFOCLASS;168,5340
typedef struct _USER_STACK 170,5360
    PVOID FixedStackBase;171,5389
    PVOID FixedStackLimit;172,5415
    PVOID ExpandableStackBase;173,5442
    PVOID ExpandableStackLimit;174,5473
    PVOID ExpandableStackBottom;175,5505
} USER_STACK, *PUSER_STACK;PUSER_STACK176,5538
typedef enum _SECTION_INFORMATION_CLASS 178,5567
    SectionBasicInformation,179,5609
    SectionImageInformation180,5638
} SECTION_INFORMATION_CLASS;181,5666
typedef struct _SECTION_BASIC_INFORMATION 183,5696
    PVOID BaseAddress;184,5763
    ULONG Attributes;185,5786
    LARGE_INTEGER Size;186,5808
} SECTION_BASIC_INFORMATION, *PSECTION_BASIC_INFORMATION;PSECTION_BASIC_INFORMATION187,5832
typedef struct _SECTION_IMAGE_INFORMATION 189,5891
    PVOID EntryPoint;190,5958
    ULONG Unknown1;191,5980
    ULONG StackReserve;192,6000
    ULONG StackCommit;193,6024
    ULONG Subsystem;194,6047
    USHORT MinorSubsystemVersion;195,6068
    USHORT MajorSubsystemVersion;196,6102
    ULONG Unknown2;197,6136
    ULONG Characteristics;198,6156
    USHORT ImageNumber;199,6183
    BOOLEAN Executable;200,6207
    UCHAR Unknown3;201,6231
    ULONG Unknown4[Unknown4202,6251
} SECTION_IMAGE_INFORMATION, *PSECTION_IMAGE_INFORMATION;PSECTION_IMAGE_INFORMATION203,6274
typedef struct _IO_STATUS_BLOCK 205,6333
        NTSTATUS Status;207,6379
        PVOID Pointer;208,6404
    ULONG_PTR Information;210,6434
} IO_STATUS_BLOCK, *PIO_STATUS_BLOCK;PIO_STATUS_BLOCK211,6461
typedef enum _KPROFILE_SOURCE 213,6500
    ProfileTime214,6532
} KPROFILE_SOURCE;215,6548
typedef enum _OBJECT_INFORMATION_CLASS 217,6568
    ObjectBasicInformation,218,6609
    ObjectNameInformation,219,6637
    ObjectTypeInformation,220,6664
    ObjectAllTypesInformation,221,6691
    ObjectHandleInformation 222,6722
} OBJECT_INFORMATION_CLASS;223,6779
typedef struct _OBJECT_BASIC_INFORMATION 225,6808
    ULONG Attributes;226,6851
    ACCESS_MASK GrantedAccess;227,6873
    ULONG HandleCount;228,6904
    ULONG PointerCount;229,6927
    ULONG PagePoolUsage;230,6951
    ULONG NonPagedPoolUsage;231,6976
    ULONG Reserved[Reserved232,7005
    ULONG NameInformationLength;233,7028
    ULONG TypeInformationLength;234,7061
    ULONG SecurityDescriptorLength;235,7094
    LARGE_INTEGER CreateTime;236,7130
} OBJECT_BASIC_INFORMATION, *POBJECT_BASIC_INFORMATION;POBJECT_BASIC_INFORMATION237,7160
typedef enum _FILE_INFORMATION_CLASS 242,7318
    FileDirectoryInformation 243,7357
    FileFullDirectoryInformation,244,7399
    FileBothDirectoryInformation,245,7440
    FileBasicInformation,246,7481
    FileStandardInformation,247,7527
    FileInternalInformation,248,7573
    FileEaInformation,249,7614
    FileAccessInformation,250,7655
    FileNameInformation,251,7696
    FileRenameInformation,252,7737
    FileLinkInformation,253,7779
    FileNamesInformation,254,7821
    FileDispositionInformation,255,7863
    FilePositionInformation,256,7905
    FileFullEaInformation,257,7951
    FileModeInformation,258,7993
    FileAlignmentInformation,259,8035
    FileAllInformation,260,8077
    FileAllocationInformation,261,8119
    FileEndOfFileInformation,262,8161
    FileAlternateNameInformation,263,8207
    FileStreamInformation,264,8249
    FilePipeInformation,265,8291
    FilePipeLocalInformation,266,8333
    FilePipeRemoteInformation,267,8375
    FileMailslotQueryInformation,268,8417
    FileMailslotSetInformation,269,8459
    FileCompressionInformation,270,8501
    FileObjectIdInformation,271,8543
    FileCompletionInformation,272,8585
    FileMoveClusterInformation,273,8627
    FileQuotaInformation,274,8669
    FileReparsePointInformation,275,8711
    FileNetworkOpenInformation,276,8753
    FileAttributeTagInformation,277,8795
    FileTrackingInformation,278,8837
    FileIdBothDirectoryInformation,279,8879
    FileIdFullDirectoryInformation,280,8921
    FileValidDataLengthInformation,282,9020
    FileShortNameInformation,283,9062
    FileMaximumInformation284,9104
} FILE_INFORMATION_CLASS, *PFILE_INFORMATION_CLASS;PFILE_INFORMATION_CLASS285,9131
typedef struct _FILE_BASIC_INFORMATION 290,9284
    LARGE_INTEGER CreationTime;291,9325
    LARGE_INTEGER LastAccessTime;292,9357
    LARGE_INTEGER LastWriteTime;293,9391
    LARGE_INTEGER ChangeTime;294,9424
    ULONG FileAttributes;295,9454
} FILE_BASIC_INFORMATION, *PFILE_BASIC_INFORMATION;PFILE_BASIC_INFORMATION296,9480
typedef enum _FS_INFORMATION_CLASS 302,9750
    FileFsVolumeInformation=303,9787
    FileFsLabelInformation,304,9818
    FileFsSizeInformation,305,9878
    FileFsDeviceInformation,306,9905
    FileFsAttributeInformation,307,9934
    FileFsControlInformation,308,9966
    FileFsFullSizeInformation,309,9996
    FileFsObjectIdInformation,310,10027
    FileFsDriverPathInformation,311,10058
    FileFsMaximumInformation312,10108
} FS_INFORMATION_CLASS, *PFS_INFORMATION_CLASS;PFS_INFORMATION_CLASS313,10137
typedef struct _FILE_FS_SIZE_INFORMATION 315,10186
    LARGE_INTEGER TotalAllocationUnits;316,10229
    LARGE_INTEGER AvailableAllocationUnits;317,10269
    ULONG SectorsPerAllocationUnit;318,10313
    ULONG BytesPerSector;319,10349
} FILE_FS_SIZE_INFORMATION, *PFILE_FS_SIZE_INFORMATION;PFILE_FS_SIZE_INFORMATION320,10375
typedef struct _FILE_FS_DEVICE_INFORMATION 322,10432
    ULONG /*DEVICE_TYPE*/ DeviceType;323,10477
    ULONG Characteristics;324,10515
} FILE_FS_DEVICE_INFORMATION, *PFILE_FS_DEVICE_INFORMATION;PFILE_FS_DEVICE_INFORMATION325,10542
typedef struct _FILE_FS_VOLUME_INFORMATION 327,10603
    LARGE_INTEGER VolumeCreationTime;328,10648
    ULONG VolumeSerialNumber;329,10686
    ULONG VolumeLabelLength;330,10716
    BOOLEAN SupportsObjects;331,10745
    WCHAR VolumeLabel[VolumeLabel332,10774
} FILE_FS_VOLUME_INFORMATION, *PFILE_FS_VOLUME_INFORMATION;PFILE_FS_VOLUME_INFORMATION333,10800
#define FILE_REMOVABLE_MEDIA 336,10910
#define FILE_READ_ONLY_DEVICE 337,10969
#define FILE_FLOPPY_DISKETTE 338,11028
#define FILE_WRITE_ONCE_MEDIA 339,11087
#define FILE_REMOTE_DEVICE 340,11146
typedef struct _FILE_FS_FULL_SIZE_INFORMATION 342,11206
    LARGE_INTEGER TotalAllocationUnits;343,11254
    LARGE_INTEGER CallerAvailableAllocationUnits;344,11294
    LARGE_INTEGER ActualAvailableAllocationUnits;345,11344
    ULONG SectorsPerAllocationUnit;346,11394
    ULONG BytesPerSector;347,11430
} FILE_FS_FULL_SIZE_INFORMATION, *PFILE_FS_FULL_SIZE_INFORMATION;PFILE_FS_FULL_SIZE_INFORMATION348,11456
typedef struct _FILE_NETWORK_OPEN_INFORMATION 350,11523
    LARGE_INTEGER CreationTime;351,11571
    LARGE_INTEGER LastAccessTime;352,11603
    LARGE_INTEGER LastWriteTime;353,11637
    LARGE_INTEGER ChangeTime;354,11670
    LARGE_INTEGER AllocationSize;355,11700
    LARGE_INTEGER EndOfFile;356,11734
    ULONG   FileAttributes;357,11763
} FILE_NETWORK_OPEN_INFORMATION, *PFILE_NETWORK_OPEN_INFORMATION;PFILE_NETWORK_OPEN_INFORMATION358,11791
typedef enum _KEY_VALUE_INFORMATION_CLASS 360,11858
    KeyValueBasicInformation,361,11902
    KeyValueFullInformation,362,11932
    KeyValuePartialInformation,363,11961
    KeyValueFullInformationAlign64,364,11993
    KeyValuePartialInformationAlign64365,12029
} KEY_VALUE_INFORMATION_CLASS;366,12067
typedef struct _KEY_VALUE_FULL_INFORMATION 368,12099
    ULONG   TitleIndex;369,12144
    ULONG   Type;370,12168
    ULONG   DataOffset;371,12186
    ULONG   DataLength;372,12210
    ULONG   NameLength;373,12234
    WCHAR   Name[Name374,12258
} KEY_VALUE_FULL_INFORMATION, *PKEY_VALUE_FULL_INFORMATION;PKEY_VALUE_FULL_INFORMATION376,12374
typedef struct _KEY_VALUE_PARTIAL_INFORMATION 378,12435
    ULONG   TitleIndex;379,12483
    ULONG   Type;380,12507
    ULONG   DataLength;381,12525
    UCHAR   Data[Data382,12549
} KEY_VALUE_PARTIAL_INFORMATION, *PKEY_VALUE_PARTIAL_INFORMATION;PKEY_VALUE_PARTIAL_INFORMATION383,12598
typedef enum _KEY_INFORMATION_CLASS 385,12665
    KeyBasicInformation,386,12703
    KeyNodeInformation,387,12728
    KeyFullInformation,388,12752
    KeyNameInformation389,12776
} KEY_INFORMATION_CLASS;390,12799
typedef struct _KEY_NAME_INFORMATION 392,12825
    ULONG   NameLength;393,12864
    WCHAR   Name[Name394,12888
} KEY_NAME_INFORMATION, *PKEY_NAME_INFORMATION;PKEY_NAME_INFORMATION395,12937
typedef enum _SYSTEM_INFORMATION_CLASS 397,12986
    SystemBasicInformation 398,13027
    SystemProcessorInformation 399,13059
    SystemPerformanceInformation 400,13095
    SystemTimeOfDayInformation 401,13133
    SystemProcessesAndThreadsInformation 402,13169
    SystemProcessorTimes 403,13215
    SystemGlobalFlag 404,13245
    SystemModuleInformation 405,13271
    SystemLockInformation 406,13305
    SystemHandleInformation 407,13337
    SystemObjectInformation 408,13371
} SYSTEM_INFORMATION_CLASS;410,13437
typedef enum _EVENT_TYPE 413,13498
    NotificationEvent,414,13525
    SynchronizationEvent 415,13627
} EVENT_TYPE, *PEVENT_TYPE;PEVENT_TYPE416,13735
(NTAPI *PIO_APC_ROUTINE)PIO_APC_ROUTINE421,13853
typedef VOID (NTAPI *  PKNORMAL_ROUTINE 427,14062
typedef struct _RTL_USER_PROCESS_PARAMETERS 432,14288
    ULONG MaximumLength;433,14334
    ULONG Length;434,14359
    ULONG Flags;435,14377
    ULONG DebugFlags;436,14394
    PVOID ConsoleHandle;437,14416
    ULONG ConsoleFlags;438,14441
    HANDLE StdInputHandle;439,14465
    HANDLE StdOutputHandle;440,14492
    HANDLE StdErrorHandle;441,14520
    UNICODE_STRING CurrentDirectoryPath;442,14547
    HANDLE CurrentDirectoryHandle;443,14588
    UNICODE_STRING DllPath;444,14623
    UNICODE_STRING ImagePathName;445,14651
    UNICODE_STRING CommandLine;446,14685
    PVOID Environment;447,14717
    ULONG StartingPositionLeft;448,14740
    ULONG StartingPositionTop;449,14772
    ULONG Width;450,14803
    ULONG Height;451,14820
    ULONG CharWidth;452,14838
    ULONG CharHeight;453,14859
    ULONG ConsoleTextAttributes;454,14881
    ULONG WindowFlags;455,14914
    ULONG ShowWindowFlags;456,14937
    UNICODE_STRING WindowTitle;457,14964
    UNICODE_STRING DesktopName;458,14996
    UNICODE_STRING ShellInfo;459,15028
    UNICODE_STRING RuntimeData;460,15058
} RTL_USER_PROCESS_PARAMETERS, *PRTL_USER_PROCESS_PARAMETERS;PRTL_USER_PROCESS_PARAMETERS462,15146
#define FILE_PIPE_BYTE_STREAM_TYPE 465,15264
#define FILE_PIPE_MESSAGE_TYPE 466,15319
#define FILE_PIPE_BYTE_STREAM_MODE 469,15434
#define FILE_PIPE_MESSAGE_MODE 470,15485
#define FILE_PIPE_QUEUE_OPERATION 473,15592
#define FILE_PIPE_COMPLETE_OPERATION 474,15643

win32/drmarker.h,1566
#define _DRMARKER_H_44,1979
#define L_DR_MARKER_HOOKED_DLL 52,2042
# define DR_MARKER_HOOKED_DLL 54,2101
# define DR_MARKER_HOOKED_DLL 56,2160
#define DR_MARKER_HOOKED_FUNCTION 59,2210
#define DR_MARKER_HOOKED_FUNCTION_ARGS 60,2269
#define DR_MARKER_HOOKED_FUNCTION_STRING 62,2408
    DR_MARKER_RELEASE_BUILD 65,2494
    DR_MARKER_RELEASE_BUILD  = 0x1,x165,2494
    DR_MARKER_DEBUG_BUILD 66,2530
    DR_MARKER_DEBUG_BUILD    = 0x2,x266,2530
    DR_MARKER_PROFILE_BUILD 67,2566
    DR_MARKER_PROFILE_BUILD  = 0x4,x467,2566
    DR_MARKER_BUILD_TYPES 68,2602
        DR_MARKER_RELEASE_BUILD|DR_MARKER_RELEASE_BUILD69,2634
        DR_MARKER_RELEASE_BUILD|DR_MARKER_DEBUG_BUILD|DR_MARKER_DEBUG_BUILD69,2634
        DR_MARKER_RELEASE_BUILD|DR_MARKER_DEBUG_BUILD|DR_MARKER_PROFILE_BUILDDR_MARKER_PROFILE_BUILD69,2634
#define DR_MARKER_VERSION_1 72,2716
#define DR_MARKER_VERSION_2 73,2746
#define WINDBG_CMD_MAX_LEN 75,2777
typedef struct _dr_marker_t 85,3268
    uint magic1;86,3298
    uint magic2;87,3315
    uint magic3;88,3332
    uint magic4;89,3349
    uint flags;90,3366
    uint build_num;91,3382
    uint dr_marker_version;92,3402
    void *dr_base_addr;dr_base_addr93,3466
    void *dr_generic_nudge_target;dr_generic_nudge_target94,3490
    void *dr_hotp_policy_status_table;dr_hotp_policy_status_table95,3525
    struct _dr_statistics_t *stats;stats96,3564
    char windbg_cmds[windbg_cmds100,3735
} dr_marker_t;104,3900
    DR_MARKER_FOUND 107,3923
    DR_MARKER_NOT_FOUND 108,3966
    DR_MARKER_ERROR 109,4009

win32/eventlog.c,1736
#define NONCE_LENGTH 47,2029
#define MAX_MESSAGE_SIZE 49,2054
typedef struct eventlog_state_t 52,2164
    HANDLE eventlog_pipe;53,2198
    HANDLE eventlog_completion;54,2224
    uint message_seq;55,2287
    char nonce[nonce56,2339
    mutex_t eventlog_mutex;57,2417
    char outbuf[outbuf61,2736
    size_t outlen;62,2771
    char buf[buf63,2790
    int request_length;64,2822
} eventlog_state_t;65,2846
set_event_source_registry_values(91,3988
init_registry_source(147,5981
#define MAX_SYSLOG_ARGS 208,8382
void os_syslog(210,8493
#define FIELD(238,9527
#define VARFIELD(246,9888
#define PADDING(255,10282
append_string(272,11030
#define HEADER_SIZE 289,11465
#define HEADER_OFFSET 290,11488
prepend_header(294,11535
#define EVENTLOG 310,12011
#define RPC_VERSION_BOGUS 317,12312
#define RPC_VERSION_5 318,12375
static char hello_message[hello_message322,12597
#define REPORT 381,15162
#define REGISTER_UNKNOWN_HEADER 383,15189
#define REPORT_UNKNOWN_HEADER 384,15240
#define DEREGISTER_UNKNOWN_HEADER 385,15289
#define EVENTLOG_NAMED_PIPE 390,15507
#define PRINT(395,15597
print_buffer_as_bytes 397,15669
#undef PRINT420,16236
#define HELLO_RESPONSE_LENGTH 424,16340
#define REGISTER_RESPONSE_LENGTH 426,16431
#define REPORT_RESPONSE_LENGTH 427,16467
eventlog_register(432,16569
#define REPORT_IN_LOG 487,18985
get_computer_name(550,21780
eventlog_report(590,23537
eventlog_deregister(720,29340
static eventlog_state_t *shared_eventlog_connection;shared_eventlog_connection766,31192
static eventlog_state_t temp_shared_eventlog_connection;768,31316
eventlog_alloc(772,31453
eventlog_init(809,33083
eventlog_fast_exit(847,34448
eventlog_slow_exit(861,34952
os_eventlog(882,35854

win32/diagnost.c,1178
static const char * const separator 63,2939
static const wchar_t * const HKLM_entries[HKLM_entries71,3321
static const wchar_t * const HKCU_entries[HKCU_entries101,5548
diagnostics_log_data(120,6559
open_diagnostics_file(175,9025
#define PRINT_MEM_BUF_BYTE 182,9243
#define PRINT_MEM_BUF_START 184,9321
#define PRINT_MEM_BUF_NO_ALIGN 187,9453
#define PRINT_MEM_BUF_ASCII 190,9559
print_memory_buffer(196,9855
report_addr_info(237,11445
report_src_info(274,13012
report_target_info(333,15397
report_preferred_target_info(347,15939
report_vm_counters(364,16497
report_dcontext_info(390,17473
report_internal_data_structures(448,19917
report_ntdll_info(547,24051
report_thread(598,26241
report_current_process(615,26927
get_system_processes(833,36831
report_processes(865,38101
report_registry_settings(936,40942
report_registry_settings_helper(955,41743
report_autostart_programs(1058,46469
report_intro(1104,48155
report_processor_info(1142,49588
report_system_diagnostics(1182,50962
add_diagnostics_xml_header(1370,60694
report_diagnostics_common(1386,61493
report_diagnostics(1463,65113
append_diagnostics(1502,66425
diagnost_exit(1516,66948

win32/gbop.h,635
#define GBOP_H43,1837
#define GBOP_DEFINE_KERNEL32_BASE_HOOKS(74,3064
#define GBOP_DEFINE_KERNEL32_MORE_HOOKS(113,5695
#define GBOP_DEFINE_WININET_BASE_HOOKS(166,9513
#define GBOP_DEFINE_MSVCRT_BASE_HOOKS(178,10255
#define GBOP_DEFINE_MSVCRT_MORE_HOOKS(182,10444
#define GBOP_DEFINE_WS2_32_BASE_HOOKS(224,13456
#define GBOP_DEFINE_WS2_32_MORE_HOOKS(233,13994
#define GBOP_DEFINE_USER32_BASE_HOOKS(245,14593
#define GBOP_DEFINE_SHELL32_BASE_HOOKS(258,15413
#define GBOP_DEFINE_NTDLL_MORE_HOOKS(280,16886
#define GBOP_ALL_HOOKS 303,18062
    GBOP_SET_NTDLL_BASE 321,18991
    GBOP_SET_NTDLL_BASE         = 0x1,x1321,18991

win32/syscall.c,5254
int *syscalls syscalls49,2103
int *wow64_index wow64_index51,2210
app_pc int_syscall_address 59,2611
app_pc sysenter_ret_address 65,3029
#define SNAPSHOT_THRESHOLD 74,3487
const char * const syscall_names[syscall_names78,3589
#define SYSCALL(79,3628
#undef SYSCALL84,3920
const int windows_8_x64_syscalls[windows_8_x64_syscalls86,3938
#define SYSCALL(87,3977
#undef SYSCALL92,4265
const int windows_8_wow64_syscalls[windows_8_wow64_syscalls94,4283
#define SYSCALL(95,4324
#undef SYSCALL100,4612
const int windows_8_x86_syscalls[windows_8_x86_syscalls102,4630
#define SYSCALL(103,4669
#undef SYSCALL108,4957
const int windows_7_x64_syscalls[windows_7_x64_syscalls110,4975
#define SYSCALL(111,5014
#undef SYSCALL116,5302
const int windows_7_syscalls[windows_7_syscalls118,5320
#define SYSCALL(119,5355
#undef SYSCALL124,5643
const int windows_vista_sp1_x64_syscalls[windows_vista_sp1_x64_syscalls126,5661
#define SYSCALL(127,5708
#undef SYSCALL132,6001
const int windows_vista_sp1_syscalls[windows_vista_sp1_syscalls134,6019
#define SYSCALL(135,6062
#undef SYSCALL140,6351
const int windows_vista_sp0_x64_syscalls[windows_vista_sp0_x64_syscalls142,6369
#define SYSCALL(143,6416
#undef SYSCALL148,6709
const int windows_vista_sp0_syscalls[windows_vista_sp0_syscalls150,6727
#define SYSCALL(151,6770
#undef SYSCALL156,7059
const int windows_2003_syscalls[windows_2003_syscalls158,7077
#define SYSCALL(159,7115
#undef SYSCALL164,7402
const int windows_XP_x64_syscalls[windows_XP_x64_syscalls166,7420
#define SYSCALL(167,7460
#undef SYSCALL172,7747
const int windows_XP_wow64_index[windows_XP_wow64_index175,7810
#define SYSCALL(176,7849
#undef SYSCALL181,8137
const int windows_XP_syscalls[windows_XP_syscalls183,8155
#define SYSCALL(184,8191
#undef SYSCALL189,8476
const int windows_2000_syscalls[windows_2000_syscalls191,8494
#define SYSCALL(192,8532
#undef SYSCALL197,8818
const int windows_NT_sp4_syscalls[windows_NT_sp4_syscalls199,8836
#define SYSCALL(200,8876
#undef SYSCALL205,9164
const int windows_NT_sp3_syscalls[windows_NT_sp3_syscalls208,9244
#define SYSCALL(209,9284
#undef SYSCALL214,9572
const int windows_NT_sp0_syscalls[windows_NT_sp0_syscalls217,9652
#define SYSCALL(218,9692
#undef SYSCALL223,9980
const uint syscall_argsz[syscall_argsz227,10035
# define SYSCALL(229,10077
# define SYSCALL(234,10352
#undef SYSCALL240,10650
static const int syscall_requires_action[syscall_requires_action246,10828
#define SYSCALL(247,10875
#undef SYSCALL252,11161
static byte *syscall_trampoline_pc[syscall_trampoline_pc256,11226
static app_pc syscall_trampoline_skip_pc[syscall_trampoline_skip_pc257,11271
static app_pc syscall_trampoline_hook_pc[syscall_trampoline_hook_pc258,11322
static app_pc syscall_trampoline_copy_pc[syscall_trampoline_copy_pc259,11373
static byte syscall_trampoline_gbop_fpo_offset[syscall_trampoline_gbop_fpo_offset268,11746
#define MAX_NTOSKRNL_SYSCALL_NUM 320,14167
ignorable_system_call(323,14214
optimizable_system_call(345,15169
syscall_while_native(367,15788
intercept_syscall_for_thin_client(542,25256
intercept_native_syscall(558,25824
init_syscall_trampolines(594,27385
exit_syscall_trampolines(637,29676
check_syscall_array_sizes(655,30252
check_syscall_numbers(672,31124
align_page_boundary(705,32377
is_newly_created_process(721,33012
syscall_uses_wow64_index(799,36546
syscall_uses_edx_param_base(806,36692
#define SYSCALL_PC(820,37393
#define SET_RETURN_VAL(830,37827
pre_system_call_param_base(842,38193
presys_CreateProcess(859,38649
presys_CreateUserProcess(904,40639
presys_CreateThread(983,44492
presys_CreateThreadEx(1030,46824
presys_CreateWorkerFactory(1073,48629
static const char * const env_to_propagate[env_to_propagate1102,49594
static const wchar_t * const wenv_to_propagate[wenv_to_propagate1109,49786
#define NUM_ENV_TO_PROPAGATE 1116,49992
add_dr_env_vars(1120,50141
not_first_thread_in_new_process(1299,57446
presys_ResumeThread(1310,57801
presys_TerminateProcess(1382,61293
presys_TerminateThread(1469,65596
presys_SetContextThread(1546,69150
is_cb_return_syscall(1677,75644
presys_CallbackReturn(1690,76032
check_for_stack_free(1727,77960
presys_AllocateVirtualMemory(1759,79519
presys_FreeVirtualMemory(1851,84180
presys_ProtectVirtualMemory(1979,89681
presys_MapViewOfSection(2132,97047
presys_UnmapViewOfSection(2175,98950
presys_FlushInstructionCache(2250,102119
presys_CreateSection(2292,103675
presys_Close(2325,105101
presys_OpenFile(2339,105506
pre_system_call(2371,106860
postsys_CreateUserProcess(2599,116977
postsys_GetContextThread(2709,122479
postsys_SuspendThread(2856,129362
postsys_AllocateVirtualMemory(3002,136895
postsys_QueryVirtualMemory(3149,144072
postsys_create_or_open_section(3246,149216
postsys_CreateSection(3332,153515
postsys_OpenSection(3372,155328
postsys_MapViewOfSection(3457,159206
postsys_UnmapViewOfSection(3609,166174
postsys_DuplicateObject(3643,167617
void post_system_call(3671,169009
dr_syscall_get_param(3903,180494
dr_syscall_set_param(3919,181130
dr_syscall_get_result(3936,181768
dr_syscall_set_result(3946,182064
dr_syscall_set_sysnum(3957,182426
dr_syscall_invoke_another(3969,182824

win32/loader.c,2596
# define IMAGE_ORDINAL_FLAG 79,3254
# define IMAGE_ORDINAL_FLAG 81,3309
static char systemroot[systemroot91,3641
static bool windbg_cmds_initialized;93,3680
typedef BOOL (WINAPI *dllmain_t)dllmain_t96,3752
static PEB *private_peb;private_peb128,4681
static bool private_peb_initialized 129,4706
static void *pre_fls_data;pre_fls_data131,4833
static void *pre_nt_rpc;pre_nt_rpc133,4951
static void *pre_nls_cache;pre_nls_cache135,5059
static bool swapped_to_app_peb;137,5146
typedef ULONG_PTR (NTAPI *ntdll_NtTickCount_t)ntdll_NtTickCount_t146,5470
static ntdll_NtTickCount_t ntdll_NtTickCount;147,5524
os_loader_init_prologue(158,5845
os_loader_init_epilogue(292,12330
os_loader_exit(308,12785
os_loader_thread_init_prologue(338,13841
os_loader_thread_init_epilogue(386,16067
os_loader_thread_exit(401,16550
get_private_peb(409,16709
should_swap_peb_pointer(425,17327
get_teb_field(432,17479
set_teb_field(444,17760
is_using_app_peb(457,18092
swap_peb_pointer_ex(504,19947
swap_peb_pointer(602,25023
restore_peb_pointer_for_thread(611,25293
os_should_swap_state(635,26504
os_using_app_state(641,26612
os_swap_context(651,26821
privload_add_areas(662,27113
privload_remove_areas(669,27275
privload_unmap_file(675,27410
privload_unload_imports(681,27494
privload_map_and_relocate(718,28801
privload_lookup_locate_and_load(822,32888
privload_load_private_library(842,33586
privload_load_finalized(856,34002
privload_process_imports(863,34182
privload_get_import_descriptor(963,38309
privload_process_one_import(993,39526
privload_call_entry(1102,44406
map_api_set_dll(1163,47020
privload_map_name(1318,55291
privload_locate_and_load(1337,55994
privload_init_search_paths(1407,58947
privload_disable_console_init(1439,60379
privload_redirect_setup(1600,67123
privload_redirect_imports(1613,67554
private_lib_handle_cb(1620,67788
# define SECURITY_COOKIE_INITIAL 1630,68008
# define SECURITY_COOKIE_INITIAL 1632,68066
#define SECURITY_COOKIE_16BIT_INITIAL 1634,68117
get_tick_count(1637,68180
privload_set_security_cookie(1652,68674
privload_os_finalize(1733,71705
add_mod_to_drmarker(1750,72211
#define WINDBG_ADD_PATH 1767,72900
privload_add_windbg_cmds(1787,73846
privload_add_windbg_cmds_post_init(1819,74937
typedef NTSTATUS (NTAPI *nt_protect_t)nt_protect_t1843,75971
static nt_protect_t bootstrap_ProtectVirtualMemory;1845,76115
bootstrap_protect_virtual_memory(1849,76215
bootstrap_tolower(1861,76610
bootstrap_strcmp(1870,76739
privload_bootstrap_get_export(1900,77430
privload_bootstrap_dynamorio_imports(1954,79324

win32/ntdll.h,44699
#define _NTDLL_H_ 48,2221
#define WIN32_LEAN_AND_MEAN50,2242
#define GET_NTDLL(74,3151
#define NT_CURRENT_PROCESS 88,3772
#define NT_CURRENT_THREAD 89,3829
typedef struct ALIGN_VAR(92,3897
#define DIRECTORY_QUERY 103,4192
#define DIRECTORY_TRAVERSE 104,4241
#define DIRECTORY_CREATE_OBJECT 105,4290
#define DIRECTORY_CREATE_SUBDIRECTORY 106,4339
#define DIRECTORY_ALL_ACCESS 107,4388
typedef struct _PEB_LDR_DATA 110,4497
    ULONG Length;111,4530
    BOOLEAN Initialized;112,4548
    PVOID SsHandle;113,4573
    LIST_ENTRY InLoadOrderModuleList;114,4593
    LIST_ENTRY InMemoryOrderModuleList;115,4631
    LIST_ENTRY InInitializationOrderModuleList;116,4671
} PEB_LDR_DATA, *PPEB_LDR_DATA;PPEB_LDR_DATA117,4719
typedef struct _LDR_MODULE 122,4914
    LIST_ENTRY InLoadOrderModuleList;123,4943
    LIST_ENTRY InMemoryOrderModuleList;124,4981
    LIST_ENTRY InInitializationOrderModuleList;125,5021
    PVOID BaseAddress;126,5069
    PVOID EntryPoint;127,5092
    ULONG SizeOfImage;128,5114
    UNICODE_STRING FullDllName;129,5137
    UNICODE_STRING BaseDllName;130,5169
    ULONG Flags;131,5201
    SHORT LoadCount;132,5218
    SHORT TlsIndex;133,5239
    LIST_ENTRY HashTableEntry;134,5259
    ULONG TimeDateStamp;136,5448
} LDR_MODULE, *PLDR_MODULE;PLDR_MODULE137,5473
# define OPT_HDR(151,6141
# define OPT_HDR_P(152,6207
# define OPT_HDR_BASE(153,6284
# define OPT_HDR(158,6579
# define OPT_HDR_P(159,6648
enum {MAX_MODULE_LIST_INFINITE_LOOP_THRESHOLD MAX_MODULE_LIST_INFINITE_LOOP_THRESHOLD163,6784
#define LDR_IMAGE_IS_DLL 168,6960
#define LDR_LOAD_IN_PROGRESS 169,7011
#define LDR_UNLOAD_IN_PROGRESS 170,7062
#define LDR_NO_DLL_CALLS 171,7113
#define LDR_PROCESS_ATTACHED 172,7164
#define LDR_MODULE_REBASED 173,7215
typedef struct _PEBLOCKROUTINE *PPEBLOCKROUTINE;PPEBLOCKROUTINE175,7267
typedef struct _PEB_FREE_BLOCK *PPEB_FREE_BLOCK;PPEB_FREE_BLOCK176,7316
typedef PVOID *PPVOID;PPVOID177,7365
typedef struct _RTL_BITMAP 179,7389
    ULONG  SizeOfBitMap;180,7418
    LPBYTE BitMapBuffer;181,7478
} RTL_BITMAP, *PRTL_BITMAP;PRTL_BITMAP182,7556
typedef const RTL_BITMAP *PCRTL_BITMAP;PCRTL_BITMAP183,7584
typedef struct _PEB 189,7777
    BOOLEAN                      InheritedAddressSpace;190,7863
    BOOLEAN                      ReadImageFileExecOptions;191,7949
    BOOLEAN                      BeingDebugged;192,8035
    BOOLEAN                      ImageUsesLargePages:ImageUsesLargePages195,8213
    BOOLEAN                      SpareBits:SpareBits196,8299
    BOOLEAN                      ImageUsesLargePages;198,8391
    HANDLE                       Mutant;200,8484
    PVOID                        ImageBaseAddress;201,8570
    PPEB_LDR_DATA                LoaderData;202,8656
    PRTL_USER_PROCESS_PARAMETERS ProcessParameters;203,8742
    PVOID                        SubSystemData;204,8828
    PVOID                        ProcessHeap;205,8914
    PRTL_CRITICAL_SECTION        FastPebLock;206,9000
    PVOID                        AtlThunkSListPtr;209,9135
    PVOID                        SparePtr2;210,9221
    PPEBLOCKROUTINE              FastPebLockRoutine;213,9341
    PPEBLOCKROUTINE              FastPebUnlockRoutine;214,9427
    DWORD                        EnvironmentUpdateCount;216,9520
    PVOID                        KernelCallbackTable;217,9606
    DWORD                        SystemReserved[SystemReserved220,9741
    DWORD                        SpareUlong;221,9827
    DWORD                        EvengLogSection;224,9947
    DWORD                        EventLog;225,10033
    PPEB_FREE_BLOCK              FreeList;227,10126
    DWORD                        TlsExpansionCounter;228,10212
    PRTL_BITMAP                  TlsBitmap;229,10298
    DWORD                        TlsBitmapBits[TlsBitmapBits230,10384
    PVOID                        ReadOnlySharedMemoryBase;231,10470
    PVOID                        ReadOnlySharedMemoryHeap;232,10556
    PPVOID                       ReadOnlyStaticServerData;233,10642
    PVOID                        AnsiCodePageData;234,10728
    PVOID                        OemCodePageData;235,10814
    PVOID                        UnicodeCaseTableData;236,10900
    DWORD                        NumberOfProcessors;237,10986
    DWORD                        NtGlobalFlag;238,11072
    LARGE_INTEGER                CriticalSectionTimeout;239,11158
    ptr_uint_t                   HeapSegmentReserve;240,11244
    ptr_uint_t                   HeapSegmentCommit;241,11330
    ptr_uint_t                   HeapDeCommitTotalFreeThreshold;242,11416
    ptr_uint_t                   HeapDeCommitFreeBlockThreshold;243,11502
    DWORD                        NumberOfHeaps;244,11588
    DWORD                        MaximumNumberOfHeaps;245,11674
    PPVOID                       ProcessHeaps;246,11760
    PVOID                        GdiSharedHandleTable;247,11846
    PVOID                        ProcessStarterHelper;248,11932
    DWORD                        GdiDCAttributeList;249,12018
    PRTL_CRITICAL_SECTION        LoaderLock;250,12104
    DWORD                        OSMajorVersion;251,12190
    DWORD                        OSMinorVersion;252,12276
    WORD                         OSBuildNumber;253,12362
    WORD                         OSCSDVersion;254,12448
    DWORD                        OSPlatformId;255,12534
    DWORD                        ImageSubsystem;256,12620
    DWORD                        ImageSubsystemMajorVersion;257,12706
    DWORD                        ImageSubsystemMinorVersion;258,12792
    ptr_uint_t                   ImageProcessAffinityMask;259,12878
    DWORD                        GdiHandleBuffer[GdiHandleBuffer261,12975
    DWORD                        GdiHandleBuffer[GdiHandleBuffer263,13067
    PVOID                        PostProcessInitRoutine;265,13160
    PVOID                        TlsExpansionBitmap;266,13246
    DWORD                        TlsExpansionBitmapBits[TlsExpansionBitmapBits267,13332
    DWORD                        SessionId;268,13418
    ULARGE_INTEGER               AppCompatFlags;269,13504
    ULARGE_INTEGER               AppCompatFlagsUser;270,13590
    PVOID                        pShimData;271,13676
    PVOID                        AppCompatInfo;272,13762
    UNICODE_STRING               CSDVersion;273,13848
    PVOID                        ActivationContextData;274,13934
    PVOID                        ProcessAssemblyStorageMap;275,14020
    PVOID                        SystemDefaultActivationContextData;276,14106
    PVOID                        SystemAssemblyStorageMap;277,14194
    ptr_uint_t                   MinimumStackCommit;278,14280
    PPVOID                       FlsCallback;279,14366
    LIST_ENTRY                   FlsListHead;280,14452
    PVOID                        FlsBitmap;281,14538
    DWORD                        FlsBitmapBits[FlsBitmapBits282,14624
    DWORD                        FlsHighIndex;283,14710
    PVOID                        WerRegistrationData;284,14796
    PVOID                        WerShipAssertPtr;285,14882
    PVOID                        pUnused;286,14968
    PVOID                        pImageHeaderHash;287,15054
        ULONG                    TracingFlags;289,15152
            ULONG                HeapTracingEnabled:HeapTracingEnabled291,15255
            ULONG                CritSecTracingEnabled:CritSecTracingEnabled292,15341
            ULONG                LibLoaderTracingEnabled:LibLoaderTracingEnabled293,15427
            ULONG                SpareTracingBits:SpareTracingBits294,15513
    ULONG64                      CsrServerReadOnlySharedMemoryBase;297,15617
} PEB, *PPEB;PPEB298,15703
# define _W64301,15731
typedef _W64 long LONG_PTR,304,15764
typedef _W64 long LONG_PTR, *PLONG_PTR;PLONG_PTR304,15764
typedef _W64 unsigned long ULONG_PTR,305,15804
typedef _W64 unsigned long ULONG_PTR, *PULONG_PTR;PULONG_PTR305,15804
typedef ULONG KAFFINITY;306,15855
typedef LONG KPRIORITY;308,15887
typedef struct _KERNEL_USER_TIMES 310,15912
    LARGE_INTEGER CreateTime;311,15948
    LARGE_INTEGER ExitTime;312,15978
    LARGE_INTEGER KernelTime;313,16006
    LARGE_INTEGER UserTime;314,16036
} KERNEL_USER_TIMES;315,16064
typedef struct _PROCESS_BASIC_INFORMATION 319,16124
    NTSTATUS ExitStatus;320,16168
    PPEB PebBaseAddress;321,16193
    ULONG_PTR AffinityMask;322,16218
    KPRIORITY BasePriority;323,16246
    ULONG_PTR UniqueProcessId;324,16274
    ULONG_PTR InheritedFromUniqueProcessId;325,16305
} PROCESS_BASIC_INFORMATION;326,16349
typedef PROCESS_BASIC_INFORMATION *PPROCESS_BASIC_INFORMATION;PPROCESS_BASIC_INFORMATION327,16378
typedef struct _DESCRIPTOR_TABLE_ENTRY 329,16442
    ULONG Selector;330,16483
    LDT_ENTRY Descriptor;331,16503
} DESCRIPTOR_TABLE_ENTRY, *PDESCRIPTOR_TABLE_ENTRY;PDESCRIPTOR_TABLE_ENTRY332,16529
typedef struct _VM_COUNTERS 335,16657
    SIZE_T PeakVirtualSize;336,16687
    SIZE_T VirtualSize;337,16715
    ULONG PageFaultCount;338,16739
    SIZE_T PeakWorkingSetSize;339,16765
    SIZE_T WorkingSetSize;340,16796
    SIZE_T QuotaPeakPagedPoolUsage;341,16823
    SIZE_T QuotaPagedPoolUsage;342,16859
    SIZE_T QuotaPeakNonPagedPoolUsage;343,16891
    SIZE_T QuotaNonPagedPoolUsage;344,16930
    SIZE_T PagefileUsage;345,16965
    SIZE_T PeakPagefileUsage;346,16991
} VM_COUNTERS;347,17021
typedef struct _PROCESS_DEVICEMAP_INFORMATION 350,17111
            HANDLE DirectoryHandle;353,17188
        } Set;354,17224
            ULONG DriveMap;356,17256
            UCHAR DriveType[DriveType357,17284
        } Query;358,17317
    ULONG Flags;361,17352
} PROCESS_DEVICEMAP_INFORMATION, *PPROCESS_DEVICEMAP_INFORMATION;PPROCESS_DEVICEMAP_INFORMATION363,17376
typedef char bool;367,17489
typedef unsigned __int64 uint64;369,17527
typedef struct _PROCESS_WS_WATCH_INFORMATION 398,18650
    PVOID FaultingPc;399,18697
    PVOID FaultingVa;400,18719
} PROCESS_WS_WATCH_INFORMATION, *PPROCESS_WS_WATCH_INFORMATION;PPROCESS_WS_WATCH_INFORMATION401,18741
typedef struct _POOLED_USAGE_AND_LIMITS 404,18866
    SIZE_T PeakPagedPoolUsage;405,18908
    SIZE_T PagedPoolUsage;406,18939
    SIZE_T PagedPoolLimit;407,18966
    SIZE_T PeakNonPagedPoolUsage;408,18993
    SIZE_T NonPagedPoolUsage;409,19027
    SIZE_T NonPagedPoolLimit;410,19057
    SIZE_T PeakPagefileUsage;411,19087
    SIZE_T PagefileUsage;412,19117
    SIZE_T PagefileLimit;413,19143
} POOLED_USAGE_AND_LIMITS;414,19169
typedef POOLED_USAGE_AND_LIMITS *PPOOLED_USAGE_AND_LIMITS;PPOOLED_USAGE_AND_LIMITS415,19196
typedef struct _PROCESS_ACCESS_TOKEN 421,19397
    HANDLE Token;426,19567
    HANDLE Thread;435,19966
} PROCESS_ACCESS_TOKEN, *PPROCESS_ACCESS_TOKEN;PPROCESS_ACCESS_TOKEN436,19985
#define JOB_OBJECT_LIMIT_WORKINGSET 441,20155
#define JOB_OBJECT_LIMIT_PROCESS_TIME 442,20218
#define JOB_OBJECT_LIMIT_JOB_TIME 443,20281
#define JOB_OBJECT_LIMIT_ACTIVE_PROCESS 444,20344
#define JOB_OBJECT_LIMIT_AFFINITY 445,20407
#define JOB_OBJECT_LIMIT_PRIORITY_CLASS 446,20470
#define JOB_OBJECT_LIMIT_PRESERVE_JOB_TIME 447,20533
#define JOB_OBJECT_LIMIT_SCHEDULING_CLASS 448,20596
#define JOB_OBJECT_LIMIT_PROCESS_MEMORY 451,20742
#define JOB_OBJECT_LIMIT_JOB_MEMORY 452,20805
#define JOB_OBJECT_LIMIT_DIE_ON_UNHANDLED_EXCEPTION 453,20868
#define JOB_OBJECT_LIMIT_BREAKAWAY_OK 454,20931
#define JOB_OBJECT_LIMIT_SILENT_BREAKAWAY_OK 455,20994
#define JOB_OBJECT_LIMIT_KILL_ON_JOB_CLOSE 456,21057
typedef struct _EXCEPTION_REGISTRATION 463,21322
     struct _EXCEPTION_REGISTRATION* prev;464,21363
     PVOID                   handler;465,21406
} EXCEPTION_REGISTRATION, *PEXCEPTION_REGISTRATION;PEXCEPTION_REGISTRATION466,21444
typedef struct _GDI_TEB_BATCH468,21497
    ULONG  Offset;470,21529
    HANDLE HDC;471,21548
    ULONG  Buffer[Buffer472,21564
} GDI_TEB_BATCH;473,21590
typedef struct _TEB 478,21698
    PEXCEPTION_REGISTRATION   ExceptionList;480,21840
    PVOID                     StackBase;481,21920
    PVOID                     StackLimit;482,22000
    PVOID                     SubSystemTib;483,22080
        PVOID                 FiberData;485,22172
        DWORD                 Version;486,22252
    PVOID                     ArbitraryUserPointer;488,22339
    struct _TEB*              Self;489,22419
    PVOID                     EnvironmentPointer;490,22499
    CLIENT_ID                 ClientId;491,22579
    PVOID                     ActiveRpcHandle;492,22659
    PVOID                     ThreadLocalStoragePointer;493,22739
    PEB*                      ProcessEnvironmentBlock;494,22819
    DWORD                     LastErrorValue;495,22899
    DWORD                     CountOfOwnedCriticalSections;496,22979
    PVOID                     CsrClientThread;497,23059
    PVOID                     Win32ThreadInfo;498,23139
    DWORD                     User32Reserved[User32Reserved499,23219
    DWORD                     UserReserved[UserReserved500,23299
    PVOID                     WOW32Reserved;501,23379
    DWORD                     CurrentLocale;502,23459
    DWORD                     FpSoftwareStatusRegister;503,23539
    PVOID /* kernel32 data */ SystemReserved1[SystemReserved1504,23619
    LONG                      ExceptionCode;505,23699
    PVOID                     ActivationContextStackPointer;506,23779
    byte                      SpareBytes1[SpareBytes1509,23943
    byte                      SpareBytes1[SpareBytes1511,24029
    DWORD                     TxFsContext;513,24116
    GDI_TEB_BATCH             GdiTebBatch;514,24196
    CLIENT_ID                 RealClientId;515,24276
    PVOID                     GdiCachedProcessHandle;516,24356
    DWORD                     GdiClientPID;517,24436
    DWORD                     GdiClientTID;518,24516
    PVOID                     GdiThreadLocalInfo;519,24596
    ptr_uint_t                Win32ClientInfo[Win32ClientInfo520,24676
    PVOID                     glDispatchTable[glDispatchTable521,24756
    ptr_uint_t                glReserved1[glReserved1522,24836
    PVOID                     glReserved2;523,24917
    PVOID                     glSectionInfo;524,24998
    PVOID                     glSection;525,25079
    PVOID                     glTable;526,25160
    PVOID                     glCurrentRC;527,25241
    PVOID                     glContext;528,25322
    DWORD                     LastStatusValue;529,25403
    UNICODE_STRING            StaticUnicodeString;530,25484
    WORD                      StaticUnicodeBuffer[StaticUnicodeBuffer531,25565
    PVOID                     DeallocationStack;532,25646
    PVOID                     TlsSlots[TlsSlots533,25727
    LIST_ENTRY                TlsLinks;534,25808
    PVOID                     Vdm;535,25889
    PVOID                     ReservedForNtRpc;536,25970
    PVOID                     DbgSsReserved[DbgSsReserved537,26051
    DWORD                     HardErrorMode;538,26132
    PVOID                     Instrumentation[Instrumentation539,26213
    PVOID                     SubProcessTag;540,26294
    PVOID                     EtwTraceData;541,26375
    PVOID                     WinSockData;542,26456
    DWORD                     GdiBatchCount;543,26537
    byte                      InDbgPrint;544,26618
    byte                      FreeStackOnTermination;545,26699
    byte                      HasFiberData;546,26780
    byte                      IdealProcessor;547,26861
    DWORD                     GuaranteedStackBytes;548,26942
    PVOID                     ReservedForPerf;549,27023
    PVOID                     ReservedForOle;550,27104
    DWORD                     WaitingOnLoaderLock;551,27185
    ptr_uint_t                SparePointer1;552,27266
    ptr_uint_t                SoftPatchPtr1;553,27347
    ptr_uint_t                SoftPatchPtr2;554,27428
    PPVOID                    TlsExpansionSlots;555,27509
    PVOID                     DeallocationBStore;557,27601
    PVOID                     BStoreLimit;558,27682
    DWORD                     ImpersonationLocale;560,27770
    DWORD                     IsImpersonating;561,27851
    PVOID                     NlsCache;562,27932
    PVOID                     pShimData;563,28013
    DWORD                     HeapVirtualAffinity;564,28094
    PVOID                     CurrentTransactionHandle;565,28175
    PVOID                     ActiveFrame;566,28256
    PVOID                     FlsData;567,28337
    PVOID                     PreferredLanguages;569,28503
    PVOID                     UserPrefLanguages;570,28584
    PVOID                     MergedPrefLanguages;571,28665
    ULONG                     MuiImpersonation;572,28746
        USHORT                CrossTebFlags;574,28839
        USHORT                SpareCrossTebFlags:SpareCrossTebFlags575,28920
        USHORT                SameTebFlags;579,29024
            USHORT            SafeThunkCall:SafeThunkCall581,29122
            USHORT            InDebugPrint:InDebugPrint582,29203
            USHORT            HasFiberData2:HasFiberData2583,29284
            USHORT            SkipThreadAttach:SkipThreadAttach584,29365
            USHORT            WerInShipAssertCode:WerInShipAssertCode585,29446
            USHORT            RanProcessInit:RanProcessInit586,29527
            USHORT            ClonedThread:ClonedThread587,29608
            USHORT            SuppressDebugMsg:SuppressDebugMsg588,29689
            USHORT            DisableUserStackWalk:DisableUserStackWalk589,29770
            USHORT            RtlExceptionAttached:RtlExceptionAttached590,29851
            USHORT            InitialThread:InitialThread591,29932
            USHORT            SessionAware:SessionAware592,30013
            USHORT            SpareSameTebBits:SpareSameTebBits593,30094
    PVOID                     TxnScopeEntercallback;596,30193
    PVOID                     TxnScopeExitCAllback;597,30274
    PVOID                     TxnScopeContext;598,30355
    ULONG                     LockCount;599,30436
    ULONG                     SpareUlong0;600,30517
    PVOID                     ResourceRetValue;601,30598
    PVOID                     ReservedForWdf;602,30679
    byte                      SafeThunkCall;604,30783
    byte                      BooleanSpare[BooleanSpare605,30864
} TEB;607,30952
typedef struct _THREAD_BASIC_INFORMATION 609,30960
    NTSTATUS ExitStatus;610,31026
    PNT_TIB TebBaseAddress;611,31051
    CLIENT_ID ClientId;612,31079
    KAFFINITY AffinityMask;613,31103
    KPRIORITY Priority;614,31131
    KPRIORITY BasePriority;615,31155
} THREAD_BASIC_INFORMATION, *PTHREAD_BASIC_INFORMATION;PTHREAD_BASIC_INFORMATION616,31183
typedef struct _SYSTEM_BASIC_INFORMATION 618,31240
    ULONG   Unknown;619,31283
    ULONG   MaximumIncrement;620,31304
    ULONG   PhysicalPageSize;621,31334
    ULONG   NumberOfPhysicalPages;622,31364
    ULONG   LowestPhysicalPage;623,31399
    ULONG   HighestPhysicalPage;624,31431
    ULONG   AllocationGranularity;625,31464
    PVOID   LowestUserAddress;626,31499
    PVOID   HighestUserAddress;627,31530
    ULONG_PTR ActiveProcessors;628,31562
    UCHAR   NumberProcessors;629,31594
    ULONG   Unknown2;631,31635
} SYSTEM_BASIC_INFORMATION, *PSYSTEM_BASIC_INFORMATION;PSYSTEM_BASIC_INFORMATION633,31728
typedef struct _SYSTEM_PROCESSOR_INFORMATION 635,31785
    USHORT  ProcessorArchitecture;636,31832
    USHORT  ProcessorLevel;637,31867
    USHORT  ProcessorRevision;638,31895
    USHORT  Unknown;639,31926
    ULONG   FeatureBits;640,31947
} SYSTEM_PROCESSOR_INFORMATION, *PSYSTEM_PROCESSOR_INFORMATION;PSYSTEM_PROCESSOR_INFORMATION641,31972
typedef struct _SYSTEM_PERFORMANCE_INFORMATION 643,32037
    LARGE_INTEGER IdleTime;644,32086
    LARGE_INTEGER ReadTransferCount;645,32114
    LARGE_INTEGER WriteTransferCount;646,32151
    LARGE_INTEGER OtherTransferCount;647,32189
    ULONG   ReadOperationCount;648,32227
    ULONG   WriteOperationCount;649,32259
    ULONG   OtherOperationCount;650,32292
    ULONG   AvailablePages;651,32325
    ULONG   TotalCommittedPages;652,32353
    ULONG   TotalCommitLimit;653,32386
    ULONG   PeakCommitment;654,32416
    ULONG   PageFaults;655,32444
    ULONG   WriteCopyFaults;656,32468
    ULONG   TranstitionFaults;657,32497
    ULONG   Reserved1;658,32528
    ULONG   DemandZeroFaults;659,32551
    ULONG   PagesRead;660,32581
    ULONG   PageReadIos;661,32604
    ULONG   Reserved2[Reserved2662,32629
    ULONG   PageFilePagesWritten;663,32655
    ULONG   PageFilePagesWriteIos;664,32689
    ULONG   MappedFilePagesWritten;665,32724
    ULONG   PagedPoolUsage;666,32760
    ULONG   NonPagedPoolUsage;667,32788
    ULONG   PagedPoolAllocs;668,32819
    ULONG   PagedPoolFrees;669,32848
    ULONG   NonPagedPoolAllocs;670,32876
    ULONG   NonPagedPoolFrees;671,32908
    ULONG   TotalFreeSystemPtes;672,32939
    ULONG   SystemCodePage;673,32972
    ULONG   TotalSystemDriverPages;674,33000
    ULONG   TotalSystemCodePages;675,33036
    ULONG   SmallNonPagedLookasideListAllocateHits;676,33070
    ULONG   SmallPagedLookasieListAllocateHits;677,33122
    ULONG   Reserved3;678,33170
    ULONG   MmSystemCachePage;679,33193
    ULONG   PagedPoolPage;680,33224
    ULONG   SystemDriverPage;681,33251
    ULONG   FastReadNoWait;682,33281
    ULONG   FastReadWait;683,33309
    ULONG   FastReadResourceMiss;684,33335
    ULONG   FastReadNotPossible;685,33369
    ULONG   FastMdlReadNoWait;686,33402
    ULONG   FastMdlReadWait;687,33433
    ULONG   FastMdlReadResourceMiss;688,33462
    ULONG   FastMdlReadNotPossible;689,33499
    ULONG   MapDataNoWait;690,33535
    ULONG   MapDataWait;691,33562
    ULONG   MapDataNoWaitMiss;692,33587
    ULONG   MapDataWaitMiss;693,33618
    ULONG   PinMappedDataCount;694,33647
    ULONG   PinReadNoWait;695,33679
    ULONG   PinReadWait;696,33706
    ULONG   PinReadNoWaitMiss;697,33731
    ULONG   PinReadWaitMiss;698,33762
    ULONG   CopyReadNoWait;699,33791
    ULONG   CopyReadWait;700,33819
    ULONG   CopyReadNoWaitMiss;701,33845
    ULONG   CopyReadWaitMiss;702,33877
    ULONG   MdlReadNoWait;703,33907
    ULONG   MdlReadWait;704,33934
    ULONG   MdlReadNoWaitMiss;705,33959
    ULONG   MdlReadWaitMiss;706,33990
    ULONG   ReadAheadIos;707,34019
    ULONG   LazyWriteIos;708,34045
    ULONG   LazyWritePages;709,34071
    ULONG   DataFlushes;710,34099
    ULONG   DataPages;711,34124
    ULONG   ContextSwitches;712,34147
    ULONG   FirstLevelTbFills;713,34176
    ULONG   SecondLevelTbFills;714,34207
    ULONG   SystemCalls;715,34239
    ULONG   Unknown[Unknown717,34300
} SYSTEM_PERFORMANCE_INFORMATION, *PSYSTEM_PERFORMANCE_INFORMATION;PSYSTEM_PERFORMANCE_INFORMATION718,34324
typedef struct _SYSTEM_TIME_OF_DAY_INFORMATION 720,34393
    LARGE_INTEGER BootTime;721,34442
    LARGE_INTEGER CurrentTime;722,34470
    LARGE_INTEGER TimeZoneBias;723,34501
    ULONG   CurrentTimeZoneId;724,34533
} SYSTEM_TIME_OF_DAY_INFORMATION, *PSYSTEM_TIME_OF_DAY_INFORMATION;PSYSTEM_TIME_OF_DAY_INFORMATION725,34564
typedef struct _SYSTEM_PROCESSOR_TIMES 727,34633
    LARGE_INTEGER IdleTime;728,34674
    LARGE_INTEGER KernelTime;729,34702
    LARGE_INTEGER UserTime;730,34732
    LARGE_INTEGER DpcTime;731,34760
    LARGE_INTEGER InterruptTime;732,34787
    ULONG   InterruptCount;733,34820
} SYSTEM_PROCESSOR_TIMES, *PSYSTEM_PROCESSOR_TIMES;PSYSTEM_PROCESSOR_TIMES734,34848
typedef struct _IO_COUNTERSEX 736,34901
    LARGE_INTEGER ReadOperationCount;737,34933
    LARGE_INTEGER WriteOperationCount;738,34971
    LARGE_INTEGER OtherOperationCount;739,35010
    LARGE_INTEGER ReadTransferCount;740,35049
    LARGE_INTEGER WriteTransferCount;741,35086
    LARGE_INTEGER OtherTransferCount;742,35124
} IO_COUNTERSEX, *PIO_COUNTERSEX;PIO_COUNTERSEX743,35162
typedef enum _THREAD_STATE 745,35197
    StateInitialized,746,35226
    StateReady,747,35248
    StateRunning,748,35264
    StateStandby,749,35282
    StateTerminated,750,35300
    StateWait,751,35321
    StateTransition,752,35336
    StateUnknown753,35357
} THREAD_STATE;754,35374
typedef enum _KWAIT_REASON 756,35391
    Executive,757,35420
    FreePage,758,35435
    PageIn,759,35449
    PoolAllocation,760,35461
    DelayExecution,761,35481
    Suspended,762,35501
    UserRequest,763,35516
    WrExecutive,764,35533
    WrFreePage,765,35550
    WrPageIn,766,35566
    WrPoolAllocation,767,35580
    WrDelayExecution,768,35602
    WrSuspended,769,35624
    WrUserRequest,770,35641
    WrEventPair,771,35660
    WrQueue,772,35677
    WrLpcReceive,773,35690
    WrVirtualMemory,774,35708
    WrPageOut,775,35729
    WrRendevous,776,35744
    WrSpare2,777,35761
    WrSpare3,778,35775
    WrSpare4,779,35789
    WrSpare5,780,35803
    WrSpare6,781,35817
    WrKernel782,35831
} KWAIT_REASON;783,35844
typedef struct _SYSTEM_THREADS 785,35861
    LARGE_INTEGER CreateTime;786,35894
    LARGE_INTEGER UserTime;787,35924
    LARGE_INTEGER KernelTime;788,35952
    ULONG   WaitTime;789,35982
    PVOID   StartAddress;790,36004
    CLIENT_ID ClientId;791,36030
    KPRIORITY Priority;792,36054
    KPRIORITY BasePriority;793,36078
    ULONG   ContextSwitchCount;794,36106
    THREAD_STATE ThreadState;795,36138
    KWAIT_REASON WaitReason;796,36168
} SYSTEM_THREADS, *PSYSTEM_THREADS;PSYSTEM_THREADS797,36197
typedef struct _SYSTEM_PROCESSES 799,36234
    ULONG NextEntryDelta;800,36270
    ULONG ThreadCount;801,36296
    ULONG Reserved1[Reserved1802,36319
    LARGE_INTEGER CreateTime;803,36343
    LARGE_INTEGER UserTime;804,36373
    LARGE_INTEGER KernelTime;805,36401
    UNICODE_STRING ProcessName;806,36431
    KPRIORITY BasePriority;807,36463
    HANDLE ProcessId;808,36491
    HANDLE InheritedFromProcessId;809,36513
    ULONG HandleCount;810,36548
    ULONG SessionId;811,36571
    ULONG PageDirectoryFrame;812,36592
    VM_COUNTERS VmCounters;813,36622
    IO_COUNTERSEX IoCounters;814,36650
    SYSTEM_THREADS Threads[Threads815,36706
} SYSTEM_PROCESSES, *PSYSTEM_PROCESSES;PSYSTEM_PROCESSES816,36757
typedef struct _SYSTEM_GLOBAL_FLAG 819,36799
    ULONG   GlobalFlag;820,36836
} SYSTEM_GLOBAL_FLAG, *PSYSTEM_GLOBAL_FLAG;PSYSTEM_GLOBAL_FLAG821,36860
typedef struct _MEMORY_SECTION_NAME 823,36905
    UNICODE_STRING SectionFileName;824,36943
} MEMORY_SECTION_NAME, *PMEMORY_SECTION_NAME;PMEMORY_SECTION_NAME825,36979
#define SYMBOLIC_LINK_QUERY 827,37026
#define SYMBOLIC_LINK_ALL_ACCESS 828,37060
    THREAD_INFO_ELEMENT_BUFFER_IS_INOUT 838,37575
    THREAD_INFO_ELEMENT_BUFFER_IS_INOUT = 0x00000,x00000838,37575
    THREAD_INFO_ELEMENT_BUFFER_IS_OUT 839,37653
    THREAD_INFO_ELEMENT_BUFFER_IS_OUT   = 0x10000,x10000839,37653
    THREAD_INFO_ELEMENT_BUFFER_IS_IN 840,37727
    THREAD_INFO_ELEMENT_BUFFER_IS_IN    = 0x20000,x20000840,37727
} thread_info_elm_buf_access_t;841,37802
    THREAD_INFO_ELEMENT_CLIENT_ID 844,37885
    THREAD_INFO_ELEMENT_CLIENT_ID       = 0x3,x3844,37885
    THREAD_INFO_ELEMENT_TEB 845,37964
    THREAD_INFO_ELEMENT_TEB             = 0x4,x4845,37964
    THREAD_INFO_ELEMENT_NT_PATH_TO_EXE 846,38039
    THREAD_INFO_ELEMENT_NT_PATH_TO_EXE  = 0x5,x5846,38039
    THREAD_INFO_ELEMENT_EXE_STUFF 848,38204
    THREAD_INFO_ELEMENT_EXE_STUFF       = 0x6,x6848,38204
    THREAD_INFO_ELEMENT_UNKNOWN_1 850,38350
    THREAD_INFO_ELEMENT_UNKNOWN_1       = 0x9,x9850,38350
} thread_info_elm_buf_type_t;852,38500
typedef struct _thread_info_element_t 854,38531
    ptr_uint_t flags;855,38604
    size_t buffer_size;856,38692
    void *buffer;buffer857,38749
    ptr_uint_t unknown;858,38835
} thread_info_elm_t;859,38888
typedef struct _exe_stuff_t 861,38910
    OUT void *exe_entrypoint_addr;exe_entrypoint_addr862,38973
    ptr_uint_t unknown1[unknown1864,39137
    uint32 unknown2[unknown2865,39216
} exe_stuff_t;866,39299
typedef struct _create_proc_thread_info_t 868,39315
    size_t struct_size;869,39392
    thread_info_elm_t nt_path_to_exe;874,39694
    thread_info_elm_t client_id;879,39880
    thread_info_elm_t exe_stuff;884,40092
    thread_info_elm_t info[info891,40606
}  create_proc_thread_info_t;893,40643
typedef struct _create_thread_info_t 897,40776
    size_t struct_size;898,40848
    thread_info_elm_t client_id;906,41293
    thread_info_elm_t teb;911,41445
} create_thread_info_t;912,41472
typedef struct _BASE_STATIC_SERVER_DATA919,41753
    UNICODE_STRING WindowsDirectory;921,41795
    UNICODE_STRING WindowsSystemDirectory;922,41832
    UNICODE_STRING NamedObjectDirectory;923,41875
    USHORT WindowsMajorVersion;924,41916
    USHORT WindowsMinorVersion;925,41948
    USHORT BuildNumber;926,41980
} BASE_STATIC_SERVER_DATA, *PBASE_STATIC_SERVER_DATA;PBASE_STATIC_SERVER_DATA928,42039
typedef struct _BASE_STATIC_SERVER_DATA_64931,42106
    UNICODE_STRING_64 WindowsDirectory;933,42151
    UNICODE_STRING_64 WindowsSystemDirectory;934,42191
    UNICODE_STRING_64 NamedObjectDirectory;935,42237
    USHORT WindowsMajorVersion;936,42281
    USHORT WindowsMinorVersion;937,42313
    USHORT BuildNumber;938,42345
} BASE_STATIC_SERVER_DATA_64, *PBASE_STATIC_SERVER_DATA_64;PBASE_STATIC_SERVER_DATA_64940,42404
typedef struct _FILE_BOTH_DIR_INFORMATION 944,42525
    ULONG NextEntryOffset;945,42569
    ULONG FileIndex;946,42596
    LARGE_INTEGER CreationTime;947,42617
    LARGE_INTEGER LastAccessTime;948,42649
    LARGE_INTEGER LastWriteTime;949,42683
    LARGE_INTEGER ChangeTime;950,42716
    LARGE_INTEGER EndOfFile;951,42746
    LARGE_INTEGER AllocationSize;952,42775
    ULONG FileAttributes;953,42809
    ULONG FileNameLength;954,42835
    ULONG EaSize;955,42861
    CCHAR ShortNameLength;956,42879
    WCHAR ShortName[ShortName957,42906
    WCHAR FileName[FileName958,42931
} FILE_BOTH_DIR_INFORMATION, *PFILE_BOTH_DIR_INFORMATION;PFILE_BOTH_DIR_INFORMATION959,42954
typedef enum _NT_PRODUCT_TYPE 962,43032
    NtProductWinNt 963,43064
    NtProductLanManNt,964,43088
    NtProductServer965,43111
} NT_PRODUCT_TYPE, *PNT_PRODUCT_TYPE;PNT_PRODUCT_TYPE966,43131
typedef enum _ALTERNATIVE_ARCHITECTURE_TYPE 969,43189
    StandardDesign,970,43235
    NEC98x86,971,43303
    EndAlternatives 972,43367
} ALTERNATIVE_ARCHITECTURE_TYPE;973,43437
typedef struct _KSYSTEM_TIME 975,43471
    ULONG LowPart;976,43502
    LONG High1Time;977,43521
    LONG High2Time;978,43541
} KSYSTEM_TIME, *PKSYSTEM_TIME;PKSYSTEM_TIME979,43561
#define PROCESSOR_FEATURE_MAX 981,43594
typedef struct _KUSER_SHARED_DATA 983,43628
    ULONG TickCountLowDeprecated;991,43819
    ULONG TickCountMultiplier;992,43853
    volatile KSYSTEM_TIME InterruptTime;998,43953
    volatile KSYSTEM_TIME SystemTime;1004,44060
    volatile KSYSTEM_TIME TimeZoneBias;1010,44152
    USHORT ImageNumberLow;1018,44316
    USHORT ImageNumberHigh;1019,44343
    WCHAR NtSystemRoot[NtSystemRoot1025,44425
    ULONG MaxStackTraceDepth;1031,44525
    ULONG CryptoExponent;1037,44594
    ULONG TimeZoneId;1043,44654
    ULONG LargePageMinimum;1045,44677
    ULONG Reserved2[Reserved21046,44705
    NT_PRODUCT_TYPE NtProductType;1052,44767
    BOOLEAN ProductTypeIsValid;1053,44802
    ULONG NtMajorVersion;1061,45077
    ULONG NtMinorVersion;1062,45103
    BOOLEAN ProcessorFeatures[ProcessorFeatures1068,45175
    ULONG Reserved1;1073,45280
    ULONG Reserved3;1074,45301
    volatile ULONG TimeSlip;1080,45377
    ALTERNATIVE_ARCHITECTURE_TYPE AlternativeArchitecture;1086,45490
    LARGE_INTEGER SystemExpirationDate;1095,45830
    ULONG SuiteMask;1101,45907
    BOOLEAN KdDebuggerEnabled;1107,45998
    volatile ULONG ActiveConsoleId;1113,46110
    volatile ULONG DismountCount;1122,46373
    ULONG ComPlusPackage;1130,46645
    ULONG LastSystemRITEventTickCount;1139,46912
    ULONG NumberOfPhysicalPages;1147,47123
    BOOLEAN SafeBootMode;1153,47228
    ULONG TraceLogging;1162,47496
    ULONGLONG   Fill0;1174,47871
    ULONGLONG   SystemCall[SystemCall1175,47916
        volatile KSYSTEM_TIME TickCount;1182,48005
        volatile ULONG64 TickCountQuad;1183,48046
} KUSER_SHARED_DATA;1187,48139
#define KUSER_SHARED_DATA_ADDRESS 1190,48210
typedef enum {MEMORY_RESERVE_ONLY MEMORY_RESERVE_ONLY1195,48371
typedef enum {MEMORY_RESERVE_ONLY = MEM_RESERVE,1195,48371
              MEMORY_COMMIT 1196,48421
              MEMORY_COMMIT = MEM_RESERVE|MEM_RESERVE1196,48421
              MEMORY_COMMIT = MEM_RESERVE|MEM_COMMITMEM_COMMIT1196,48421
} memory_commit_status_t;1197,48474
#define DUPLICATE_SAME_ATTRIBUTES 1216,48755
typedef enum {THREAD_EXITED,THREAD_EXITED1225,49051
typedef enum {THREAD_EXITED, THREAD_NOT_EXITED,1225,49051
typedef enum {THREAD_EXITED, THREAD_NOT_EXITED, THREAD_EXIT_ERROR}THREAD_EXIT_ERROR1225,49051
typedef enum {THREAD_EXITED, THREAD_NOT_EXITED, THREAD_EXIT_ERROR} thread_exited_status_t;1225,49051
#define SEC_LARGE_PAGES 1414,53809
# define SEC_VLM 1417,53984
#define SEC_BASED_UNSUPPORTED 1420,54111
#define SEC_NO_CHANGE_UNSUPPORTED 1421,54156
typedef enum _reg_query_value_result 1448,54901
    REG_QUERY_FAILURE,1449,54940
    REG_QUERY_BUFFER_TOO_SMALL,1450,54963
    REG_QUERY_SUCCESS1451,54995
} reg_query_value_result_t;1452,55017
#define LengthRequiredSID(1478,55744
# define SECURITY_MAX_SID_SIZE 1484,56032
#define SECURITY_MAX_TOKEN_SIZE 1491,56233
#define FILE_ANY_ACCESS 1535,57646
#define FILE_SPECIAL_ACCESS 1536,57688
#define FILE_READ_ACCESS 1537,57737
#define FILE_WRITE_ACCESS 1538,57800
#define FILE_SHARE_VALID_FLAGS 1541,57917
#define FILE_ATTRIBUTE_VALID_FLAGS 1544,58026
#define FILE_ATTRIBUTE_VALID_SET_FLAGS 1545,58081
#define FILE_DIRECTORY_FILE 1549,58220
#define FILE_WRITE_THROUGH 1550,58279
#define FILE_SEQUENTIAL_ONLY 1551,58338
#define FILE_NO_INTERMEDIATE_BUFFERING 1552,58397
#define FILE_SYNCHRONOUS_IO_ALERT 1554,58457
#define FILE_SYNCHRONOUS_IO_NONALERT 1555,58516
#define FILE_NON_DIRECTORY_FILE 1556,58575
#define FILE_CREATE_TREE_CONNECTION 1557,58634
#define FILE_COMPLETE_IF_OPLOCKED 1559,58694
#define FILE_NO_EA_KNOWLEDGE 1560,58753
#define FILE_OPEN_FOR_RECOVERY 1561,58812
#define FILE_OPEN_REMOTE_INSTANCE 1562,58871
#define FILE_RANDOM_ACCESS 1563,58945
#define FILE_DELETE_ON_CLOSE 1565,59005
#define FILE_OPEN_BY_FILE_ID 1566,59064
#define FILE_OPEN_FOR_BACKUP_INTENT 1567,59123
#define FILE_NO_COMPRESSION 1568,59182
#define FILE_RESERVE_OPFILTER 1570,59242
#define FILE_OPEN_REPARSE_POINT 1571,59301
#define FILE_OPEN_NO_RECALL 1572,59360
#define FILE_OPEN_FOR_FREE_SPACE_QUERY 1573,59419
#define FILE_COPY_STRUCTURED_STORAGE 1575,59479
#define FILE_STRUCTURED_STORAGE 1576,59538
#define FILE_VALID_OPTION_FLAGS 1578,59598
#define FILE_VALID_PIPE_OPTION_FLAGS 1579,59657
#define FILE_VALID_MAILSLOT_OPTION_FLAGS 1580,59716
#define FILE_VALID_SET_FLAGS 1581,59775
#define FILE_SUPERSEDED 1584,59888
#define FILE_OPENED 1585,59927
#define FILE_CREATED 1586,59966
#define FILE_OVERWRITTEN 1587,60005
#define FILE_EXISTS 1588,60044
#define FILE_DOES_NOT_EXIST 1589,60083
#define FILE_SUPERSEDE 1592,60165
#define FILE_OPEN 1593,60216
#define FILE_CREATE 1594,60267
#define FILE_OPEN_IF 1595,60318
#define FILE_OVERWRITE 1596,60369
#define FILE_OVERWRITE_IF 1597,60420
#define FILE_MAXIMUM_DISPOSITION 1598,60471
#define FILE_DISPOSITION_SET_OWNER 1601,60593
#define FILE_WRITE_TO_END_OF_FILE 1604,60695
#define FILE_USE_FILE_POINTER_POSITION 1605,60746
# define STATUS_PENDING 1612,61104
#define FILE_DEVICE_FILE_SYSTEM 1616,61187
#define FILE_DEVICE_NAMED_PIPE 1617,61238
#define STATUS_NOT_IMPLEMENTED 1622,61408
#define STATUS_INFO_LENGTH_MISMATCH 1624,61474
#define STATUS_NOT_IMPLEMENTED 1627,61590
#define STATUS_NO_SUCH_FILE 1630,61687
#define STATUS_CONFLICTING_ADDRESSES 1633,61850
#define STATUS_END_OF_FILE 1638,62022
#define STATUS_INVALID_ADDRESS 1641,62151
#define STATUS_BUFFER_OVERFLOW 1644,62282
#define STATUS_NO_MORE_FILES 1647,62415
#define STATUS_INVALID_FILE_FOR_SECTION 1651,62587
#define STATUS_ACCESS_DENIED 1655,62770
#define STATUS_BUFFER_TOO_SMALL 1659,62940
#define STATUS_OBJECT_TYPE_MISMATCH 1664,63156
#define STATUS_OBJECT_NAME_INVALID 1667,63249
#define STATUS_OBJECT_NAME_NOT_FOUND 1670,63345
#define STATUS_OBJECT_NAME_COLLISION 1673,63451
#define STATUS_OBJECT_PATH_INVALID 1676,63573
#define STATUS_OBJECT_PATH_NOT_FOUND 1679,63670
#define STATUS_SECTION_TOO_BIG 1682,63792
#define STATUS_SHARING_VIOLATION 1685,63938
#define STATUS_INVALID_PAGE_PROTECTION 1688,64055
#define STATUS_FILE_LOCK_CONFLICT 1691,64200
#define STATUS_DELETE_PENDING 1694,64354
#define STATUS_FILE_INVALID 1699,64527
#define STATUS_FILE_IS_A_DIRECTORY 1704,64727
#define STATUS_OBJECT_NAME_EXISTS 1707,64885
#define STATUS_IMAGE_NOT_AT_BASE 1713,65120
#  define STATUS_NO_MEMORY 1718,65343
#define STATUS_PAGEFILE_QUOTA_EXCEEDED 1723,65556
#define STATUS_COMMITMENT_LIMIT 1730,65838
#define STATUS_COMMITMENT_MINIMUM 1740,66313
#define EXCEPTION_THROWN 1743,66447
#define STATUS_PROCESS_NOT_IN_JOB 1747,66590
#define STATUS_PROCESS_IN_JOB 1749,66702
#define STATUS_NO_SUCH_PRIVILEGE 1752,66812
#define STATUS_PRIVILEGE_NOT_HELD 1754,66932
#define STATUS_CALLBACK_POP_STACK 1757,67069
#define STATUS_INVALID_INFO_CLASS 1760,67162
#define STATUS_MAPPED_FILE_SIZE_ZERO 1765,67326
#define STATUS_PARTIAL_COPY 1767,67392
# define STATUS_INVALID_PARAMETER 1771,67555
#define STATUS_NOT_MAPPED_DATA 1775,67688
#define STATUS_INVALID_PARAMETER_1 1778,67840
#define STATUS_INVALID_PARAMETER_2 1781,67993
#define STATUS_INVALID_PARAMETER_3 1784,68145
#define STATUS_INVALID_PARAMETER_4 1787,68298
#define STATUS_INVALID_PARAMETER_5 1790,68450
#define STATUS_INVALID_PARAMETER_6 1793,68602
#define STATUS_INVALID_PARAMETER_7 1796,68756
#define STATUS_INVALID_PARAMETER_8 1799,68909
#define STATUS_INVALID_PARAMETER_9 1802,69061
#define STATUS_INVALID_PARAMETER_10 1805,69213
#define STATUS_INVALID_PARAMETER_11 1808,69368
#define STATUS_INVALID_PARAMETER_12 1811,69522
#define STATUS_THREAD_IS_TERMINATING 1814,69661
#define STATUS_PROCESS_IS_TERMINATING 1817,69783
#define STATUS_NOT_A_REPARSE_POINT 1820,69906
# define IMAGE_SIZEOF_BASE_RELOCATION 1824,70064
typedef struct _FILE_STANDARD_INFORMATION 1865,71387
    LARGE_INTEGER AllocationSize;1866,71448
    LARGE_INTEGER EndOfFile;1867,71509
    ULONG NumberOfLinks;1868,71570
    BOOLEAN DeletePending;1869,71631
    BOOLEAN Directory;1870,71692
} FILE_STANDARD_INFORMATION, *PFILE_STANDARD_INFORMATION;PFILE_STANDARD_INFORMATION1871,71753
typedef struct _FILE_INTERNAL_INFORMATION 1873,71815
    LARGE_INTEGER IndexNumber;1874,71859
} FILE_INTERNAL_INFORMATION, *PFILE_INTERNAL_INFORMATION;PFILE_INTERNAL_INFORMATION1875,71890
typedef struct _FILE_POSITION_INFORMATION 1877,71999
    LARGE_INTEGER CurrentByteOffset;1878,72060
} FILE_POSITION_INFORMATION, *PFILE_POSITION_INFORMATION;PFILE_POSITION_INFORMATION1879,72121
typedef struct _FILE_ALIGNMENT_INFORMATION 1881,72243
    ULONG AlignmentRequirement;1882,72304
} FILE_ALIGNMENT_INFORMATION, *PFILE_ALIGNMENT_INFORMATION;PFILE_ALIGNMENT_INFORMATION1883,72365
#define MAX_FILE_NAME_LENGTH 1885,72487
typedef struct _FILE_NAME_INFORMATION 1886,72525
    ULONG FileNameLength;1887,72586
    WCHAR FileName[FileName1888,72642
} FILE_NAME_INFORMATION, *PFILE_NAME_INFORMATION;PFILE_NAME_INFORMATION1891,72807
typedef struct _FILE_RENAME_INFORMATION 1893,72918
    BOOLEAN ReplaceIfExists;1894,72960
    HANDLE RootDirectory;1895,72989
    ULONG FileNameLength;1896,73015
    WCHAR FileName[FileName1897,73041
} FILE_RENAME_INFORMATION, *PFILE_RENAME_INFORMATION;PFILE_RENAME_INFORMATION1898,73083
typedef struct _FILE_ATTRIBUTE_TAG_INFORMATION 1900,73138
    ULONG FileAttributes;1901,73202
    ULONG ReparseTag;1902,73267
} FILE_ATTRIBUTE_TAG_INFORMATION, *PFILE_ATTRIBUTE_TAG_INFORMATION;PFILE_ATTRIBUTE_TAG_INFORMATION1903,73332
typedef struct _FILE_DISPOSITION_INFORMATION 1905,73467
    BOOLEAN DeleteFile;1906,73532
} FILE_DISPOSITION_INFORMATION, *PFILE_DISPOSITION_INFORMATION;PFILE_DISPOSITION_INFORMATION1907,73597
typedef struct _FILE_END_OF_FILE_INFORMATION 1909,73727
    LARGE_INTEGER EndOfFile;1910,73792
} FILE_END_OF_FILE_INFORMATION, *PFILE_END_OF_FILE_INFORMATION;PFILE_END_OF_FILE_INFORMATION1911,73857
typedef struct _FILE_VALID_DATA_LENGTH_INFORMATION 1913,73987
    LARGE_INTEGER ValidDataLength;1914,74076
} FILE_VALID_DATA_LENGTH_INFORMATION, *PFILE_VALID_DATA_LENGTH_INFORMATION;PFILE_VALID_DATA_LENGTH_INFORMATION1915,74165
typedef enum {WAIT_TIMEDOUT,WAIT_TIMEDOUT1924,74408
typedef enum {WAIT_TIMEDOUT, WAIT_SIGNALED,1924,74408
typedef enum {WAIT_TIMEDOUT, WAIT_SIGNALED, WAIT_ERROR}WAIT_ERROR1924,74408
typedef enum {WAIT_TIMEDOUT, WAIT_SIGNALED, WAIT_ERROR} wait_status_t;1924,74408
#define INFINITE_WAIT 1925,74479
#define TIMER_UNITS_PER_MILLISECOND 1946,75039
#define GET_OWN_CONTEXT(2022,77834
    X64_PEB_TIB_OFFSET 2049,79061
    X64_PEB_TIB_OFFSET        = 0x060,x0602049,79061
    X64_LDR_PEB_OFFSET 2050,79100
    X64_LDR_PEB_OFFSET        = 0x018,x0182050,79100
typedef struct _module_handle_t *module_handle_t;module_handle_t2096,80439
typedef void *module_base_t;module_base_t2097,80489
#define __IMAGE_COR20_HEADER_DEFINED__2112,80794
typedef enum replaces_cor_hdr_numeric_defines_t2114,80834
    COMIMAGE_FLAGS_ILONLY 2117,80918
    COMIMAGE_FLAGS_ILONLY               =0x00000001,x000000012117,80918
    COMIMAGE_FLAGS_32BITREQUIRED 2118,80971
    COMIMAGE_FLAGS_32BITREQUIRED        =0x00000002,x000000022118,80971
    COMIMAGE_FLAGS_IL_LIBRARY 2119,81024
    COMIMAGE_FLAGS_IL_LIBRARY           =0x00000004,x000000042119,81024
    COMIMAGE_FLAGS_STRONGNAMESIGNED 2120,81077
    COMIMAGE_FLAGS_STRONGNAMESIGNED     =0x00000008,x000000082120,81077
    COMIMAGE_FLAGS_TRACKDEBUGDATA 2121,81130
    COMIMAGE_FLAGS_TRACKDEBUGDATA       =0x00010000,x000100002121,81130
    COR_VERSION_MAJOR_V2 2124,81212
    COR_VERSION_MAJOR 2125,81256
    COR_VERSION_MAJOR                   =COR_VERSION_MAJOR_V2,2125,81256
    COR_VERSION_MINOR 2126,81319
    COR_DELETED_NAME_LENGTH 2127,81363
    COR_VTABLEGAP_NAME_LENGTH 2128,81407
    NATIVE_TYPE_MAX_CB 2131,81496
    COR_ILMETHOD_SECT_SMALL_MAX_DATASIZE=2132,81543
    COR_ILMETHOD_SECT_SMALL_MAX_DATASIZE=0xFF,xFF2132,81543
    IMAGE_COR_MIH_METHODRVA 2135,81621
    IMAGE_COR_MIH_METHODRVA             =0x01,x012135,81621
    IMAGE_COR_MIH_EHRVA 2136,81668
    IMAGE_COR_MIH_EHRVA                 =0x02,x022136,81668
    IMAGE_COR_MIH_BASICBLOCK 2137,81719
    IMAGE_COR_MIH_BASICBLOCK            =0x08,x082137,81719
    COR_VTABLE_32BIT 2140,81788
    COR_VTABLE_32BIT                    =0x01,x012140,81788
    COR_VTABLE_64BIT 2141,81885
    COR_VTABLE_64BIT                    =0x02,x022141,81885
    COR_VTABLE_FROM_UNMANAGED 2142,81982
    COR_VTABLE_FROM_UNMANAGED           =0x04,x042142,81982
    COR_VTABLE_CALL_MOST_DERIVED 2143,82076
    COR_VTABLE_CALL_MOST_DERIVED        =0x10,x102143,82076
    IMAGE_COR_EATJ_THUNK_SIZE 2146,82192
    MAX_CLASS_NAME 2150,82360
    MAX_PACKAGE_NAME 2151,82407
} replaces_cor_hdr_numeric_defines_t;2152,82454
typedef struct IMAGE_COR20_HEADER2155,82523
    DWORD                   cb;2158,82584
    WORD                    MajorRuntimeVersion;2159,82630
    WORD                    MinorRuntimeVersion;2160,82679
    IMAGE_DATA_DIRECTORY    MetaData;2163,82777
    DWORD                   Flags;2164,82823
    DWORD                   EntryPointToken;2165,82869
    IMAGE_DATA_DIRECTORY    Resources;2168,82946
    IMAGE_DATA_DIRECTORY    StrongNameSignature;2169,82985
    IMAGE_DATA_DIRECTORY    CodeManagerTable;2172,83080
    IMAGE_DATA_DIRECTORY    VTableFixups;2173,83126
    IMAGE_DATA_DIRECTORY    ExportAddressTableJumps;2174,83168
    IMAGE_DATA_DIRECTORY    ManagedNativeHeader;2177,83286
} IMAGE_COR20_HEADER, *PIMAGE_COR20_HEADER;PIMAGE_COR20_HEADER2179,83340
#define IMAGE_SCN_ALIGN_MASK 2185,83457
#define MAX_OBJECT_NAME_LENGTH 2205,84133
typedef struct _OBJECT_NAME_INFORMATION 2206,84173
    UNICODE_STRING ObjectName;2207,84215
    wchar_t object_name_buffer[object_name_buffer2210,84364
} OBJECT_NAME_INFORMATION, *POBJECT_NAME_INFORMATION;POBJECT_NAME_INFORMATION2211,84420
#define HEAP_CLASS_PRIVATE 2441,93429

win32/injector.c,2489
#define WIN32_LEAN_AND_MEAN53,2342
#define VERBOSE 73,2758
# define DO_VERBOSE(75,2788
# undef printf76,2813
# define VERBOSE_PRINT 77,2828
# define DO_VERBOSE(79,2864
# define VERBOSE_PRINT(80,2888
#define FP 82,2923
#define HANDLE_CONTROL_C 89,3208
static int limit;92,3254
static BOOL showmem;93,3289
static BOOL showstats;94,3310
static BOOL inject;95,3333
static BOOL force_injection;96,3353
static BOOL use_environment 97,3382
static const char *ops_param;ops_param102,3709
static double wallclock;103,3739
# undef assert110,3935
#define assert 113,3998
#undef ASSERT115,4113
#   define ASSERT(119,4188
#   define ASSERT(121,4274
# define display_error(124,4381
# define ASSERT(125,4420
display_error_helper(133,4589
internal_error(153,5212
# define FILENAME_LENGTH 156,5291
# define FILENAME_LENGTH 159,5371
display_error(172,5720
BOOL WINAPI HandlerRoutine(186,6022
typedef struct _dr_inject_info_t 199,6391
    PROCESS_INFORMATION pi;200,6426
    bool using_debugger_injection;201,6454
    char image_name[image_name202,6489
} dr_inject_info_t;203,6524
dr_inject_get_image_name(207,6569
dr_inject_get_process_handle(217,6763
dr_inject_get_process_id(227,6984
dr_inject_using_debug_key(237,7177
dr_inject_print_stats(247,7385
static BOOL created_product_reg_key;309,9742
static BOOL created_image_reg_key;310,9779
static HKEY image_name_key;311,9814
static HKEY product_name_key;312,9842
#define DO_ENV_VARS(321,10184
#define TEMP_CMD(330,10587
set_registry_from_env(340,10985
#undef TEMP_CMD342,11058
#define TEMP_CMD(343,11074
#undef TEMP_CMD 354,11374
#define TEMP_CMD(355,11394
#undef TEMP_CMD420,14290
#define TEMP_CMD(421,14306
unset_registry_from_env(448,15904
#undef TEMP_CMD455,16063
#define TEMP_CMD(456,16079
#undef DO_ENV_VARS487,17563
#undef TEMP_CMD488,17582
static HKEY debugger_key;500,17994
static TCHAR debugger_key_full_name[debugger_key_full_name501,18020
static TCHAR debugger_key_value[debugger_key_value502,18067
static DWORD debugger_key_value_size 503,18112
using_debugger_key_injection(508,18255
void unset_debugger_key_injection(546,19688
void restore_debugger_key_injection(562,20191
enum { MAX_CMDLINE 585,21080
get_image_name(588,21136
exe_is_right_bitwidth(606,21756
append_app_arg_and_space(643,22981
dr_inject_process_create(726,27051
dr_inject_process_inject(796,29575
dr_inject_process_run(877,32822
dr_inject_wait_for_child(889,33099
dr_inject_process_exit(902,33508

win32/module_shared.c,1520
# define ASSERT(47,2225
# define ASSERT_NOT_REACHED(48,2244
# define ASSERT_NOT_IMPLEMENTED(49,2274
# define DODEBUG(50,2309
# define DOCHECK(51,2329
# define DECLARE_NEVERPROT_VAR(52,2352
# define ALIGN_BACKWARD(53,2412
# define PAGE_SIZE 54,2488
# undef strcasecmp74,3120
# define strcasecmp 75,3139
# define wcscasecmp 76,3168
# undef TRY_EXCEPT_ALLOW_NO_DCONTEXT77,3197
# define TRY_EXCEPT_ALLOW_NO_DCONTEXT(78,3234
# undef ASSERT_OWN_NO_LOCKS79,3293
# define ASSERT_OWN_NO_LOCKS(80,3321
# undef ASSERT_CURIOSITY81,3384
# define ASSERT_CURIOSITY(82,3409
# define convert_data_to_function(88,3725
# undef LOG 89,3791
# define LOG(90,3832
is_readable_without_exception(108,4623
get_module_exports_directory_common(146,6281
get_module_exports_directory_check_common(224,9491
get_proc_address_common(279,12420
get_module_exports_directory(439,19409
get_module_exports_directory_check(446,19627
get_proc_address(455,19947
get_proc_address_ex(464,20238
get_proc_address_by_ordinal(471,20497
get_proc_address_resolve_forward(479,20763
get_ldr_module_by_name(538,23575
typedef struct ALIGN_VAR(591,25758
typedef struct ALIGN_VAR(601,26012
typedef struct ALIGN_VAR(614,26464
typedef void (*void_func_t)void_func_t633,27014
get_own_x64_peb(651,27531
get_ldr_data_64(667,27867
get_ldr_module_64(680,28244
get_module_handle_64(733,30627
get_proc_address_64(744,30906
load_library_64(755,31273
free_library_64(835,34599
thread_get_context_64(850,35051
thread_set_context_64(864,35519

win32/module.h,750
#define MODULE_H35,1769
#define OS_IMAGE_READ 42,1963
#define OS_IMAGE_WRITE 43,2007
#define OS_IMAGE_EXECUTE 44,2052
# define IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE 47,2146
typedef struct _os_module_data_t 50,2208
    app_pc preferred_base;51,2243
    uint checksum;52,2318
    uint timestamp;53,2379
    size_t module_internal_size;54,2442
    size_t code_size;56,2533
    version_number_t file_version;59,2632
    version_number_t product_version;60,2667
    char *company_name;company_name61,2705
    char *product_name;product_name62,2729
    HANDLE noclobber_section_handle;73,3198
    rct_module_table_t rct_table[rct_table87,3736
    byte *iat_code;iat_code94,3981
    size_t iat_len;95,4001
} os_module_data_t;96,4021

win32/inject_shared.h,242
#define INJECT_SHARED_H44,1965
    INJECT_FALSE 48,2084
    INJECT_TRUE 49,2109
    INJECT_EXCLUDED 50,2134
    INJECT_EXPLICIT 51,2159
} inject_setting_mask_t;52,2183
# define double_tcsrchr 180,6335
# define double_tcsrchr 182,6380

win32/os_exports.h,6168
#define _OS_EXPORTS_H_ 43,2007
typedef ushort cxt_seg_t;47,2126
# define CXT_XIP 48,2152
# define CXT_XAX 49,2173
# define CXT_XCX 50,2194
# define CXT_XDX 51,2215
# define CXT_XBX 52,2236
# define CXT_XSP 53,2257
# define CXT_XBP 54,2278
# define CXT_XSI 55,2299
# define CXT_XDI 56,2320
# define CXT_XMM(60,2497
# define CXT_XFLAGS 64,2748
typedef DWORD cxt_seg_t;66,2781
# define CXT_XIP 67,2806
# define CXT_XAX 68,2827
# define CXT_XCX 69,2848
# define CXT_XDX 70,2869
# define CXT_XBX 71,2890
# define CXT_XSP 72,2911
# define CXT_XBP 73,2932
# define CXT_XSI 74,2953
# define CXT_XDI 75,2974
# define CXT_XFLAGS 76,2995
# define FXSAVE_XMM0_OFFSET 81,3213
# define CXT_XMM(82,3245
#define WINDOWS_VERSION_8 94,3685
#define WINDOWS_VERSION_7 95,3719
#define WINDOWS_VERSION_VISTA 96,3753
#define WINDOWS_VERSION_2003 97,3787
#define WINDOWS_VERSION_XP 98,3821
#define WINDOWS_VERSION_2000 99,3855
#define WINDOWS_VERSION_NT 100,3889
    EXCEPTION_LIST_TIB_OFFSET 112,4328
    EXCEPTION_LIST_TIB_OFFSET = 0x000,x000112,4328
    TOP_STACK_TIB_OFFSET 113,4367
    TOP_STACK_TIB_OFFSET      = 0x008,x008113,4367
    BASE_STACK_TIB_OFFSET 114,4406
    BASE_STACK_TIB_OFFSET     = 0x010,x010114,4406
    FIBER_DATA_TIB_OFFSET 115,4445
    FIBER_DATA_TIB_OFFSET     = 0x020,x020115,4445
    SELF_TIB_OFFSET 116,4484
    SELF_TIB_OFFSET           = 0x030,x030116,4484
    PID_TIB_OFFSET 117,4523
    PID_TIB_OFFSET            = 0x040,x040117,4523
    TID_TIB_OFFSET 118,4562
    TID_TIB_OFFSET            = 0x048,x048118,4562
    ERRNO_TIB_OFFSET 119,4601
    ERRNO_TIB_OFFSET          = 0x068,x068119,4601
    WOW64_TIB_OFFSET 120,4640
    WOW64_TIB_OFFSET          = 0x100,x100120,4640
    PEB_TIB_OFFSET 121,4679
    PEB_TIB_OFFSET            = 0x060,x060121,4679
    FLS_DATA_TIB_OFFSET 122,4718
    FLS_DATA_TIB_OFFSET       = 0x17c8,x17c8122,4718
    NT_RPC_TIB_OFFSET 123,4758
    NT_RPC_TIB_OFFSET         = 0x1698,x1698123,4758
    NLS_CACHE_TIB_OFFSET 124,4798
    NLS_CACHE_TIB_OFFSET      = 0x17a0,x17a0124,4798
    EXCEPTION_LIST_TIB_OFFSET 126,4844
    EXCEPTION_LIST_TIB_OFFSET = 0x00,x00126,4844
    TOP_STACK_TIB_OFFSET 127,4882
    TOP_STACK_TIB_OFFSET      = 0x04,x04127,4882
    BASE_STACK_TIB_OFFSET 128,4920
    BASE_STACK_TIB_OFFSET     = 0x08,x08128,4920
    FIBER_DATA_TIB_OFFSET 129,4958
    FIBER_DATA_TIB_OFFSET     = 0x10,x10129,4958
    SELF_TIB_OFFSET 130,4996
    SELF_TIB_OFFSET           = 0x18,x18130,4996
    PID_TIB_OFFSET 131,5034
    PID_TIB_OFFSET            = 0x20,x20131,5034
    TID_TIB_OFFSET 132,5072
    TID_TIB_OFFSET            = 0x24,x24132,5072
    ERRNO_TIB_OFFSET 133,5110
    ERRNO_TIB_OFFSET          = 0x34,x34133,5110
    WOW64_TIB_OFFSET 134,5148
    WOW64_TIB_OFFSET          = 0xC0,xC0134,5148
    PEB_TIB_OFFSET 135,5186
    PEB_TIB_OFFSET            = 0x30,x30135,5186
    FLS_DATA_TIB_OFFSET 136,5224
    FLS_DATA_TIB_OFFSET       = 0xfb4,xfb4136,5224
    NT_RPC_TIB_OFFSET 137,5263
    NT_RPC_TIB_OFFSET         = 0xf1c,xf1c137,5263
    NLS_CACHE_TIB_OFFSET 138,5302
    NLS_CACHE_TIB_OFFSET      = 0xfa0,xfa0138,5302
# define SEG_TLS 143,5363
# define LIB_SEG_TLS 144,5387
# define SEG_TLS 146,5441
# define LIB_SEG_TLS 147,5485
#define get_tls(151,5630
set_tls(155,5755
#define get_own_teb(161,5965
#define OS_ALLOC_GRANULARITY 167,6189
#define MAP_FILE_VIEW_ALIGNMENT 168,6229
#define CONTEXT_HEAP_SIZE(184,6852
#define CONTEXT_HEAP_SIZE_OPAQUE 185,6937
# define ACTUAL_PRAGMA(216,8175
# define ACTUAL_PRAGMA(218,8222
#define START_DATA_SECTION(220,8270
#define VAR_IN_SECTION(221,8341
#define END_DATA_SECTION(222,8384
#define START_DO_NOT_OPTIMIZE 223,8439
#define END_DO_NOT_OPTIMIZE 224,8505
#define VSYSCALL_PAGE_START_BOOTSTRAP_VALUE 253,9396
#define VSYSCALL_BOOTSTRAP_ADDR 254,9474
#define VSYSCALL_AFTER_SYSCALL_BOOTSTRAP_VALUE 255,9540
file_t profile_file;274,10287
mutex_t profile_dump_lock;275,10308
typedef struct _profile_t 277,10336
    void *start;start278,10364
    void *end;end279,10381
    uint bucket_shift;280,10396
    uint *buffer;buffer281,10419
    size_t buffer_size;282,10437
    bool enabled;283,10476
    dcontext_t *dcontext;dcontext284,10494
    HANDLE handle;285,10520
} profile_t;286,10539
    HIDE_FROM_QUERY_TYPE_PROTECT 320,11285
    HIDE_FROM_QUERY_TYPE_PROTECT   = 0x1,x1320,11285
    HIDE_FROM_QUERY_BASE_SIZE 321,11355
    HIDE_FROM_QUERY_BASE_SIZE      = 0x2,x2321,11355
    HIDE_FROM_QUERY_RETURN_INVALID 323,11512
    HIDE_FROM_QUERY_RETURN_INVALID = 0x4,x4323,11512
enum tls_flags 328,11691
    TLS_FLAG_BITMAP_TOP_DOWN 329,11708
    TLS_FLAG_BITMAP_TOP_DOWN  = 0x1,x1329,11708
    TLS_FLAG_CACHE_LINE_START 332,11918
    TLS_FLAG_CACHE_LINE_START = 0x2,x2332,11918
    TLS_FLAG_BITMAP_FILL 336,12195
    TLS_FLAG_BITMAP_FILL      = 0x4,x4336,12195
    OS_ASLR_DISABLE_ASLR_ALL 347,12681
    OS_ASLR_DISABLE_ASLR_ALL      = 0x01,x01347,12681
    OS_ASLR_DISABLE_PCACHE_ALL 348,12757
    OS_ASLR_DISABLE_PCACHE_ALL    = 0x02,x02348,12757
    OS_ASLR_DISABLE_ASLR_DETECT 353,12956
    OS_ASLR_DISABLE_ASLR_DETECT   = 0x10,x10353,12956
    OS_ASLR_DISABLE_PCACHE_DETECT 354,13018
    OS_ASLR_DISABLE_PCACHE_DETECT = 0x20,x20354,13018
    DETACH_UNHANDLED_VIOLATION 361,13258
    DETACH_UNHANDLED_VIOLATION   = 0x01,x01361,13258
    DETACH_UNSUPPORTED_MODULE 364,13432
    DETACH_UNSUPPORTED_MODULE    = 0x02,x02364,13432
    DETACH_ON_TERMINATE 371,13850
    DETACH_ON_TERMINATE          = 0x010,x010371,13850
    DETACH_ON_TERMINATE_NO_CLEAN 373,13948
    DETACH_ON_TERMINATE_NO_CLEAN = 0x020,x020373,13948
    DETACH_ON_TERMINATE_NO_KILL 379,14233
    DETACH_ON_TERMINATE_NO_KILL  = 0x040,x040379,14233
    DETACH_ON_TERMINATE_NO_LOCKS 384,14525
    DETACH_ON_TERMINATE_NO_LOCKS = 0x080,x080384,14525
    DETACH_ON_TERMINATE_NO_HANG 387,14695
    DETACH_ON_TERMINATE_NO_HANG  = 0x100,x100387,14695
    DETACH_NORMAL_TYPE 396,14965
    DETACH_BAD_STATE 397,15003
    DETACH_BAD_STATE_NO_CLEANUP 398,15041
get_app_pc_from_intercept_pc_if_necessary(474,17798

win32/aslr.h,8020
#define ASLR_H42,1878
    ASLR_DISABLED 48,1956
    ASLR_DISABLED          = 0x00,x0048,1956
    ASLR_DLL 51,2041
    ASLR_DLL               = 0x01,x0151,2041
    ASLR_STACK 52,2113
    ASLR_STACK             = 0x02,x0252,2113
    ASLR_HEAP 55,2264
    ASLR_HEAP              = 0x04,x0455,2264
    ASLR_MAPPED 56,2343
    ASLR_MAPPED            = 0x08,x0856,2343
    ASLR_EXECUTABLE 57,2416
    ASLR_EXECUTABLE        = 0x10,x1057,2416
    ASLR_PROCESS_PARAM 59,2492
    ASLR_PROCESS_PARAM     = 0x20,x2059,2492
    ASLR_HEAP_FILL 67,2863
    ASLR_HEAP_FILL         = 0x40,x4067,2863
    ASLR_TEB 68,2947
    ASLR_TEB               = 0x80,x8068,2947
    ASLR_RANGE_BOTTOM_UP 89,3987
    ASLR_RANGE_BOTTOM_UP   = 0x00100,x0010089,3987
    ASLR_RANGE_TOP_DOWN 90,4059
    ASLR_RANGE_TOP_DOWN    = 0x00200,x0020090,4059
    ASLR_RANGE_RANDOM 93,4256
    ASLR_RANGE_RANDOM      = 0x00400,x0040093,4256
    ASLR_SHARE_DR_DLL 99,4597
    ASLR_SHARE_DR_DLL      = 0x10000000,x1000000099,4597
    ASLR_CLIENT_DEFAULT 105,4903
    ASLR_CLIENT_DEFAULT = ASLR_DLL 105,4903
    ASLR_CLIENT_DEFAULT = ASLR_DLL | ASLR_STACK 105,4903
    ASLR_CLIENT_DEFAULT = ASLR_DLL | ASLR_STACK | ASLR_HEAP,105,4903
} aslr_option_t;106,4974
    ASLR_PROCESS_PRIVATE 116,5307
    ASLR_PROCESS_PRIVATE           = 0x1,x1116,5307
    ASLR_SHARED_PER_USER 118,5389
    ASLR_SHARED_PER_USER           = 0x2,x2118,5389
    ASLR_SHARED_INHERIT 128,5877
    ASLR_SHARED_INHERIT            = 0x4,x4128,5877
    ASLR_SHARED_IN_SESSION 146,6639
    ASLR_SHARED_IN_SESSION         = 0x8,x8146,6639
    ASLR_SHARED_CONTENTS 160,7414
    ASLR_SHARED_CONTENTS           = 0x10,x10160,7414
    ASLR_SHARED_PUBLISHER 167,7698
    ASLR_SHARED_PUBLISHER          = 0x20,x20167,7698
    ASLR_SHARED_SUBSCRIBER 173,7942
    ASLR_SHARED_SUBSCRIBER         = 0x40,x40173,7942
    ASLR_SHARED_ANONYMOUS_CONSUMER 180,8212
    ASLR_SHARED_ANONYMOUS_CONSUMER = 0x80,x80180,8212
    ASLR_SHARED_FILE_PRODUCER 193,8808
    ASLR_SHARED_FILE_PRODUCER      = 0x100,x100193,8808
    ASLR_SHARED_WORKLIST 203,9210
    ASLR_SHARED_WORKLIST           = 0x200,x200203,9210
    ASLR_SHARED_INITIALIZE 209,9430
    ASLR_SHARED_INITIALIZE         = 0x1000,x1000209,9430
    ASLR_SHARED_INITIALIZE_NONPERMANENT 221,10069
    ASLR_SHARED_INITIALIZE_NONPERMANENT = 0x2000,x2000221,10069
    ASLR_PERSISTENT 228,10395
    ASLR_PERSISTENT                = 0x100000,x100000228,10395
    ASLR_ALLOW_ORIGINAL_CLOBBER 235,10697
    ASLR_ALLOW_ORIGINAL_CLOBBER  = 0x1000000,x1000000235,10697
    ASLR_RANDOMIZE_EXECUTABLE 247,11331
    ASLR_RANDOMIZE_EXECUTABLE    = 0x2000000,x2000000247,11331
    ASLR_AVOID_NET20_NATIVE_IMAGES 260,11964
    ASLR_AVOID_NET20_NATIVE_IMAGES = 0x4000000,x4000000260,11964
    ASLR_CACHE_DEFAULT 263,12072
    ASLR_CACHE_DEFAULT = ASLR_SHARED_PER_USER 263,12072
                         ASLR_SHARED_CONTENTS 264,12131
               ASLR_SHARED_ANONYMOUS_CONSUMER 265,12190
                     ASLR_SHARED_FILE_PRODUCER 266,12249
} aslr_cache_t;267,12308
    ASLR_CACHE_LIST_DEFAULT,272,12453
    ASLR_CACHE_LIST_INCLUDE,273,12482
    ASLR_CACHE_LIST_EXCLUDE 274,12545
} aslr_cache_list_t;278,12722
    ASLR_PERSISTENT_LAX 290,13212
    ASLR_PERSISTENT_LAX           = 0x0,x0290,13212
    ASLR_PERSISTENT_PARANOID 296,13392
    ASLR_PERSISTENT_PARANOID      = 0x1,x1296,13392
    ASLR_PERSISTENT_SOURCE_DIGEST 302,13602
    ASLR_PERSISTENT_SOURCE_DIGEST = 0x2,x2302,13602
    ASLR_PERSISTENT_TARGET_DIGEST 307,13790
    ASLR_PERSISTENT_TARGET_DIGEST = 0x4,x4307,13790
    ASLR_PERSISTENT_MODIFIED_TIME 323,14620
    ASLR_PERSISTENT_MODIFIED_TIME = 0x8,x8323,14620
    ASLR_PERSISTENT_NOTOWNER_PARANOIA 336,15237
    ASLR_PERSISTENT_NOTOWNER_PARANOIA = 0x10,x10336,15237
    ASLR_PERSISTENT_SHORT_DIGESTS 344,15602
    ASLR_PERSISTENT_SHORT_DIGESTS     = 0x20,x20344,15602
    ASLR_PERSISTENT_PARANOID_TRANSFORM_EXPLICITLY 352,15951
    ASLR_PERSISTENT_PARANOID_TRANSFORM_EXPLICITLY = 0x10000,x10000352,15951
    ASLR_PERSISTENT_PARANOID_PREFIX 362,16468
    ASLR_PERSISTENT_PARANOID_PREFIX = 0x20000,x20000362,16468
} aslr_consistency_check_t;375,17079
    ASLR_NO_ACTION 380,17158
    ASLR_NO_ACTION      = 0x0,x0380,17158
    ASLR_TRACK_AREAS 383,17269
    ASLR_TRACK_AREAS    = 0x1,x1383,17269
    ASLR_AVOID_AREAS 384,17338
    ASLR_AVOID_AREAS    = 0x2,x2384,17338
    ASLR_RESERVE_AREAS 385,17408
    ASLR_RESERVE_AREAS  = 0x4,x4385,17408
    ASLR_DETECT_EXECUTE 394,17759
    ASLR_DETECT_EXECUTE = 0x10,x10394,17759
    ASLR_DETECT_READ 397,17926
    ASLR_DETECT_READ    = 0x20,x20397,17926
    ASLR_DETECT_WRITE 398,17968
    ASLR_DETECT_WRITE   = 0x40,x40398,17968
    ASLR_REPORT 401,18046
    ASLR_REPORT         = 0x100,x100401,18046
    ASLR_HANDLING 407,18270
    ASLR_HANDLING =     0x1000,x1000407,18270
    ASLR_NORMALIZE_ID 411,18466
    ASLR_NORMALIZE_ID = 0x10000,x10000411,18466
} aslr_action_t;414,18673
    ASLR_INTERNAL_DEFAULT 418,18762
    ASLR_INTERNAL_DEFAULT       = 0x0000,x0000418,18762
    ASLR_INTERNAL_SAME_STRESS 422,18968
    ASLR_INTERNAL_SAME_STRESS   = 0x1000,x1000422,18968
    ASLR_INTERNAL_RANGE_NONE 425,19086
    ASLR_INTERNAL_RANGE_NONE    = 0x2000,x2000425,19086
    ASLR_INTERNAL_SHARED_NONUNIQUE 427,19130
    ASLR_INTERNAL_SHARED_NONUNIQUE = 0x800000,x800000427,19130
    ASLR_INTERNAL_SHARED_APPFILE 430,19218
    ASLR_INTERNAL_SHARED_APPFILE = 0x1000000,x1000000430,19218
    ASLR_INTERNAL_SHARED_AND_PRIVATE 433,19328
    ASLR_INTERNAL_SHARED_AND_PRIVATE = 0x2000000,x2000000433,19328
} aslr_internal_option_t;439,19577
    bool           sys_aslr_clobbered;442,19621
    HANDLE randomized_section_handle;450,20010
    app_pc original_section_base;451,20079
    uint   original_section_timestamp;452,20141
    uint   original_section_checksum;453,20202
    HANDLE original_image_section_handle;454,20262
    HANDLE last_app_section_handle;460,20529
    process_id_t last_child_padded;470,21077
} aslr_syscall_context_t;471,21123
#define ASLR_INVALID_SECTION_BASE 473,21150
#define MAX_PUBLISHED_SECTION_NAME 476,21263
aslr_timestamp_transformation(522,22957
    GBOP_DISABLED 546,23807
    GBOP_DISABLED          = 0x0,x0546,23807
    GBOP_IS_EXECUTABLE 557,24262
    GBOP_IS_EXECUTABLE     = 0x1,x1557,24262
    GBOP_IS_X 558,24337
    GBOP_IS_X              = 0x2,x2558,24337
    GBOP_IS_IMAGE 559,24421
    GBOP_IS_IMAGE          = 0x4,x4559,24421
    GBOP_IS_NOT_STACK 566,24748
    GBOP_IS_NOT_STACK      = 0x8,x8566,24748
    GBOP_CHECK_INSTR_TYPE 578,25227
    GBOP_CHECK_INSTR_TYPE  = 0x10,x10578,25227
    GBOP_IS_CALL 579,25318
    GBOP_IS_CALL           = 0x20,x20579,25318
    GBOP_IS_JMP 580,25402
    GBOP_IS_JMP            = 0x40,x40580,25402
    GBOP_IS_HOTPATCH_JMP 581,25492
    GBOP_IS_HOTPATCH_JMP   = 0x80,x80581,25492
    GBOP_EMULATE_SOURCE 595,26163
    GBOP_EMULATE_SOURCE   = 0x100,x100595,26163
    GBOP_IS_RET_TO_ENTRY 611,26961
    GBOP_IS_RET_TO_ENTRY  = 0x00200,x00200611,26961
    GBOP_IS_DGC 631,27923
    GBOP_IS_DGC           = 0x02000,x02000631,27923
    GBOP_IS_FUTURE_EXEC 642,28585
    GBOP_IS_FUTURE_EXEC   = 0x04000,x04000642,28585
    GBOP_DIAGNOSE_SOURCE 647,28713
    GBOP_DIAGNOSE_SOURCE  = 0x10000,x10000647,28713
    GBOP_CLIENT_DEFAULT 659,29246
    GBOP_CLIENT_DEFAULT = GBOP_IS_DGC 659,29246
    GBOP_CLIENT_DEFAULT = GBOP_IS_DGC | GBOP_IS_FUTURE_EXEC 659,29246
                          GBOP_CHECK_INSTR_TYPE 660,29331
                          GBOP_CHECK_INSTR_TYPE | GBOP_IS_CALL 660,29331
                          GBOP_IS_EXECUTABLE 661,29415
                          GBOP_IS_EXECUTABLE | GBOP_IS_X 661,29415
                          GBOP_IS_EXECUTABLE | GBOP_IS_X | GBOP_IS_IMAGE 661,29415
    const char *mod_name;mod_name667,29549
    const char *func_name;func_name668,29575
} gbop_hook_desc_t;669,29602

heap.h,2821
#define _HEAP_H_ 43,1966
    ACCT_FRAGMENT=47,2024
    ACCT_COARSE_LINK,48,2045
    ACCT_FRAG_FUTURE,49,2067
    ACCT_FRAG_TABLE,50,2089
    ACCT_IBLTABLE,51,2110
    ACCT_TRACE,52,2129
    ACCT_FCACHE_EMPTY,53,2145
    ACCT_VMAREA_MULTI,54,2168
    ACCT_IR,55,2191
    ACCT_AFTER_CALL,56,2204
    ACCT_VMAREAS,57,2225
    ACCT_SYMBOLS,58,2243
    ACCT_SIDELINE,60,2278
    ACCT_THCOUNTER,62,2305
    ACCT_TOMBSTONE,63,2325
    ACCT_HOT_PATCHING,66,2441
    ACCT_THREAD_MGT,67,2464
    ACCT_MEM_MGT,68,2485
    ACCT_STATS,69,2503
    ACCT_SPECIAL,70,2519
    ACCT_CLIENT,72,2562
    ACCT_LIBDUP,74,2587
    ACCT_CLEANCALL,75,2652
    ACCT_OTHER,77,2746
    ACCT_LAST78,2762
} which_heap_t;79,2776
# define HEAPACCT(81,2793
# define IF_HEAPACCT_ELSE(82,2818
# define HEAPACCT(84,2858
# define IF_HEAPACCT_ELSE(85,2879
    MAP_FILE_COPY_ON_WRITE 89,2936
    MAP_FILE_COPY_ON_WRITE   = 0x0001,x000189,2936
    MAP_FILE_IMAGE 90,2975
    MAP_FILE_IMAGE           = 0x0002,x000290,2975
    MAP_FILE_FIXED 91,3033
    MAP_FILE_FIXED           = 0x0004,x000491,3033
    MAP_FILE_REACHABLE 92,3089
    MAP_FILE_REACHABLE       = 0x0008,x000892,3089
} map_flags_t;93,3172
typedef byte * heap_pc;95,3188
#define HEAP_ALIGNMENT 96,3212
#define UNPROTECTED_LOCAL_ALLOC(213,7559
#define UNPROTECTED_LOCAL_FREE(214,7643
#define UNPROTECTED_GLOBAL_ALLOC 215,7725
#define UNPROTECTED_GLOBAL_FREE 216,7788
#define FRAGMENT_ALLOC_DC(219,7927
#define FRAGMENT_TABLE_ALLOC_DC(220,8018
#define PROTECTED 226,8265
#define UNPROTECTED 227,8288
#define HEAP_ARRAY_ALLOC(228,8314
#define HEAP_TYPE_ALLOC(232,8549
#define HEAP_ARRAY_ALLOC_MEMSET(234,8655
#define HEAP_ARRAY_FREE(238,8836
#define HEAP_TYPE_FREE(242,9073
#define NONPERSISTENT_HEAP_ARRAY_ALLOC(246,9236
#define NONPERSISTENT_HEAP_TYPE_ALLOC(248,9377
#define NONPERSISTENT_HEAP_ARRAY_FREE(250,9489
#define NONPERSISTENT_HEAP_TYPE_FREE(252,9632
typedef struct _special_heap_iterator 268,10308
    void *heap;heap270,10412
    void *next_unit;next_unit271,10428
} special_heap_iterator_t;272,10449
# define HEAP_TO_BYTE_EX(315,12107
# define HEAP_TO_BYTE(316,12145
# define HEAP_TO_UINT_EX(317,12193
# define HEAP_TO_UINT(318,12246
#  define HEAP_TO_PTR_UINT_EX(320,12306
#  define HEAP_TO_PTR_UINT_EX(322,12391
# define HEAP_TO_PTR_UINT(324,12457
# define HEAP_UNALLOCATED 326,12514
# define HEAP_UNALLOCATED_BYTE 327,12543
# define HEAP_UNALLOCATED_UINT 328,12605
# define HEAP_UNALLOCATED_PTR_UINT 329,12667
# define HEAP_ALLOCATED 331,12738
# define HEAP_ALLOCATED_BYTE 332,12765
# define HEAP_ALLOCATED_UINT 333,12823
# define HEAP_ALLOCATED_PTR_UINT 334,12881
# define HEAP_PAD 336,12948
# define HEAP_PAD_BYTE 337,12969
# define HEAP_PAD_UINT 338,13015
# define HEAP_PAD_PTR_UINT 339,13061

iox.h,407
# define TCHAR 44,1987
# define _T(45,2010
# define TNAME(46,2030
# define IF_WIDE_ELSE(47,2057
# define TCHAR 49,2092
# define _T(50,2112
# define TNAME(51,2129
# define IF_WIDE_ELSE(52,2149
TNAME(66,2607
TNAME(90,3206
TNAME(116,3932
TNAME(162,5239
TNAME(197,6184
TNAME(267,8385
TNAME(704,24357
#undef TCHAR715,24575
#undef _T716,24588
#undef TNAME717,24598
#undef IF_WIDE_ELSE718,24611

options.h,3755
#define _OPTIONS_H_44,1923
    OPTION_ENABLED 57,2243
    OPTION_ENABLED     = 0x1,x157,2243
    OPTION_DISABLED 58,2314
    OPTION_DISABLED    = 0x0,x058,2314
    OPTION_BLOCK 75,3256
    OPTION_BLOCK       = 0x2,x275,3256
    OPTION_NO_BLOCK 76,3286
    OPTION_NO_BLOCK    = 0x0,x076,3286
    OPTION_HANDLING 79,3403
    OPTION_HANDLING    = 0x4,x479,3403
    OPTION_NO_HANDLING 80,3483
    OPTION_NO_HANDLING = 0x0,x080,3483
    OPTION_REPORT 83,3600
    OPTION_REPORT      = 0x8,x883,3600
    OPTION_NO_REPORT 84,3675
    OPTION_NO_REPORT   = 0x0,x084,3675
    OPTION_BLOCK_IGNORE_DETECT 87,3811
    OPTION_BLOCK_IGNORE_DETECT  = 0x20,x2087,3811
    OPTION_CUSTOM 90,3938
    OPTION_CUSTOM      = 0x100,x10090,3938
    OPTION_NO_CUSTOM 91,4027
    OPTION_NO_CUSTOM   = 0x0,x091,4027
} security_option_t;92,4116
    HOOKED_TRAMPOLINE_DIE 97,4231
    HOOKED_TRAMPOLINE_SQUASH 98,4302
    HOOKED_TRAMPOLINE_CHAIN 99,4387
    HOOKED_TRAMPOLINE_HOOK_DEEPER 100,4471
    HOOKED_TRAMPOLINE_MAX 101,4555
    APPFAULT_FAULT 109,4786
    APPFAULT_FAULT    = 0x0001,x0001109,4786
    APPFAULT_CRASH 110,4867
    APPFAULT_CRASH    = 0x0002,x0002110,4867
#define uint_size 118,5189
#define uint_time 119,5212
#define uint_addr 121,5306
#define ISSTRING_bool 127,5509
#define ISSTRING_uint 128,5533
#define ISSTRING_uint_size 129,5557
#define ISSTRING_uint_time 130,5586
#define ISSTRING_ptr_uint_t 131,5615
#define ISSTRING_pathstring_t 132,5645
#define ISSTRING_liststring_t 133,5677
    OP_PCACHE_NOP 137,5783
    OP_PCACHE_LOCAL 138,5836
    OP_PCACHE_GLOBAL 142,6081
} op_pcache_t;143,6158
#define OPTION_STRING(155,6762
#define EMPTY_STRING 156,6813
#define OPTION_COMMAND(157,6864
#define OPTION_COMMAND_INTERNAL(163,7229
enum option_is_internal 169,7589
#undef OPTION_COMMAND172,7643
#undef OPTION_COMMAND_INTERNAL173,7665
#undef OPTION_STRING174,7696
#undef EMPTY_STRING175,7717
#define OPTION_STRING(178,7770
#define EMPTY_STRING 179,7797
#  define OPTION_COMMAND_INTERNAL(183,7945
#  define OPTION_COMMAND_INTERNAL(187,8135
#define OPTION_COMMAND(191,8313
typedef struct _options_t 194,8496
} options_t;196,8549
#undef OPTION_COMMAND198,8563
#undef OPTION_COMMAND_INTERNAL199,8585
#  define OPTION_COMMAND(203,8705
#  define OPTION_COMMAND_INTERNAL(205,8857
typedef struct _internal_options_t 208,9046
} internal_options_t;210,9108
#  undef OPTION_COMMAND211,9130
#  undef OPTION_COMMAND_INTERNAL212,9154
#undef uint_size215,9195
#undef uint_time216,9212
#undef uint_addr217,9229
#define IS_OPTION_INTERNAL(232,9749
#define IS_OPTION_STRING(233,9810
#define DEFAULT_OPTION_VALUE(236,9995
#  define DEFAULT_INTERNAL_OPTION_VALUE 239,10182
#  define DEFAULT_INTERNAL_OPTION_VALUE(241,10249
#define SET_DEFAULT_VALUE(248,10593
#define SYNCHRONIZE_DYNAMIC_OPTION(277,11264
#define SHARED_FRAGMENTS_ENABLED(313,12496
#define SCRATCH_ALWAYS_TLS(322,12908
#define PRIVATE_TRACES_ENABLED(326,13087
#define SHARED_BB_IB_TARGETS(330,13227
#define SHARED_BB_ONLY_IB_TARGETS(340,13646
#define SHARED_IB_TARGETS(344,13791
#define SHARED_IBT_TABLES_ENABLED(348,13930
#define TRACEDUMP_ENABLED(351,14054
#define RUNNING_WITHOUT_CODE_CACHE(357,14283
# define CLIENT_OR_STANDALONE(361,14469
# define CLIENT_OR_STANDALONE(364,14582
#define IS_STRING_OPTION_EMPTY(375,14950
#define IS_LISTSTRING_OPTION_FORALL(380,15143
#  define IS_INTERNAL_STRING_OPTION_EMPTY(383,15247
#  define IS_INTERNAL_STRING_OPTION_EMPTY(385,15326
#define COARSE_FILL_IBL_MASK(389,15467
string_option_read_lock(393,15597
string_option_read_unlock(397,15678
    LIST_NO_MATCH 402,15760
    LIST_ON_DEFAULT 403,15814
    LIST_ON_APPEND 404,15839
} list_default_or_append_t;405,15864

hashtable.h,2101
#define _HASHTABLE_H_ 44,1899
#define HASHTABLE_SHARED 51,2044
#define HASHTABLE_ENTRY_SHARED 56,2240
#define HASHTABLE_LOCKLESS_ACCESS 58,2358
#define HASHTABLE_NOT_PRIMARY_STORAGE 60,2470
#define HASHTABLE_PERSISTENT 62,2572
#define HASHTABLE_USE_ENTRY_STATS 64,2673
#define HASHTABLE_RELAX_CLUSTER_CHECKS 66,2796
#define HASHTABLE_READ_ONLY 70,2971
#define HASHTABLE_ALIGN_TABLE 72,3067
#define HASHTABLE_CUSTOM_FLAGS_START 77,3250
#define HASHTABLE_COPY_IGNORE_FLAGS 80,3341
#define TABLE_NEEDS_LOCK(86,3556
#define ASSERT_TABLE_SYNCHRONIZED(91,3797
#define TABLE_RWLOCK(96,4120
#define TABLE_MEMOP(101,4271
#define TABLE_TYPE_MEMOP(105,4404
#define HASH_INDEX_WRAPAROUND(113,4738
# define INIT_HASHTABLE_STATS(118,4936
# define HTABLE_STAT_INC(122,5149
# define HTABLE_STAT_INC(124,5232
typedef struct _hashtable_statistics_t 129,5318
    uint hit_stat;130,5359
    uint collision_hit_stat;131,5419
    uint collision_stat;132,5491
    uint miss_stat;133,5565
    uint overwrap_stat;134,5642
    uint race_condition_stat;135,5728
    uint unlinked_count_stat;136,5817
    uint ib_stay_on_trace_stat;143,6141
    uint ib_stay_on_trace_stat_last;149,6489
    uint ib_stay_on_trace_stat_ovfl;150,6543
    uint ib_trace_last_ibl_exit;152,6632
    uint ib_trace_last_ibl_speculate_success;158,6891
} hashtable_statistics_t;160,7037
typedef struct _fragment_stat_entry_t 163,7140
    uint    hits;165,7234
    uint    age;167,7318
} fragment_stat_entry_t;168,7396
typedef struct _generic_entry_t 188,8106
    ptr_uint_t key;189,8140
    void *payload;payload190,8195
} generic_entry_t;191,8214
#define NAME_KEY 194,8307
#define ENTRY_TYPE 195,8332
#define CUSTOM_FIELDS 197,8414
#define HASHTABLEX_HEADER 199,8476
#undef HASHTABLEX_HEADER201,8528
typedef struct _strhash_entry_t 240,9856
    const char *key;key244,10011
    void *payload;payload245,10032
} strhash_entry_t;246,10051
#define NAME_KEY 248,10071
#define ENTRY_TYPE 249,10096
#define CUSTOM_FIELDS 251,10178
#define HASHTABLEX_HEADER 253,10240
#undef HASHTABLEX_HEADER255,10292

moduledb.h,1308
#define _MODULEDB_H_36,1758
    SECTION_NO_CHG 42,1943
    SECTION_IF_RX 43,1967
    SECTION_IF_X 44,1991
    SECTION_ALLOW 45,2015
    MODULEDB_ALL_SECTIONS_BITS 51,2164
    MODULEDB_ALL_SECTIONS_BITS   = 0x00000003,x0000000351,2164
    MODULEDB_ALL_SECTIONS_SHIFT 52,2247
    MODULEDB_RCT_EXEMPT_TO 53,2330
    MODULEDB_RCT_EXEMPT_TO       = 0x00000004,x0000000453,2330
    MODULEDB_REPORT_ON_LOAD 54,2377
    MODULEDB_REPORT_ON_LOAD      = 0x00000008,x0000000854,2377
    MODULEDB_DLL2HEAP 55,2424
    MODULEDB_DLL2HEAP            = 0x00000010,x0000001055,2424
    MODULEDB_DLL2STACK 56,2471
    MODULEDB_DLL2STACK           = 0x00000020,x0000002056,2471
    MODULEDB_EXEMPT_RCT 61,2608
    MODULEDB_EXEMPT_IMAGE 62,2646
    MODULEDB_EXEMPT_DLL2HEAP 63,2684
    MODULEDB_EXEMPT_DLL2STACK 64,2722
    MODULEDB_EXEMPT_NUM_LISTS 65,2760
} moduledb_exempt_list_t;66,2798
# define PROCESS_CONTROL_MODE_OFF 94,3455
# define PROCESS_CONTROL_MODE_WHITELIST 95,3511
# define PROCESS_CONTROL_MODE_BLACKLIST 96,3567
# define PROCESS_CONTROL_MODE_WHITELIST_INTEGRITY 101,3806
# define IS_PROCESS_CONTROL_MODE_WHITELIST(103,3863
# define IS_PROCESS_CONTROL_MODE_BLACKLIST(105,3986
# define IS_PROCESS_CONTROL_MODE_WHITELIST_INTEGRITY(107,4109
# define IS_PROCESS_CONTROL_ON(109,4252

config.c,2840
# define GLOBAL_CONFIG_DIR 52,2066
# define LOCAL_CONFIG_ENV 53,2110
# define LOCAL_CONFIG_SUBDIR 54,2143
# define GLOBAL_CONFIG_SUBDIR 55,2185
# define LOCAL_CONFIG_ENV 57,2224
# define LOCAL_CONFIG_SUBDIR 58,2264
# define GLOBAL_CONFIG_SUBDIR 59,2305
#define CFG_SFX_64 65,2461
#define CFG_SFX_32 66,2491
# define CFG_SFX 68,2532
# define CFG_SFX 70,2566
# define VERBOSE 75,2673
# define VERBOSE 77,2698
# undef ASSERT82,2877
# undef ASSERT_NOT_IMPLEMENTED83,2892
# undef ASSERT_NOT_TESTED84,2923
# undef ASSERT_NOT_REACHED85,2949
# undef FATAL_USAGE_ERROR86,2976
# undef USAGE_ERROR87,3002
# define ASSERT(88,3022
# define ASSERT_NOT_IMPLEMENTED(89,3055
# define ASSERT_NOT_TESTED(90,3104
# define ASSERT_NOT_REACHED(91,3148
# define FATAL_USAGE_ERROR(92,3192
# define USAGE_ERROR(93,3241
#   define print_file(97,3370
#   define print_file(99,3445
#  define print_file(102,3502
# undef STDERR104,3557
# define STDERR 105,3572
# undef our_snprintf106,3595
#  define our_snprintf 108,3632
#  define our_snprintf 110,3672
# undef DECLARE_NEVERPROT_VAR112,3712
# define DECLARE_NEVERPROT_VAR(113,3742
# define INFO(118,3870
# define INFO(122,4013
static const char *const config_var[config_var126,4112
static const wchar_t *const w_config_var[w_config_var140,4484
#define NUM_CONFIG_VAR 154,4875
typedef struct _config_val_t 159,5029
    char val[val160,5060
    bool has_value;162,5139
    bool app_specific;164,5223
    bool from_env;165,5246
} config_val_t;166,5265
typedef struct _config_vals_t 168,5282
    config_val_t vals[vals169,5314
} config_vals_t;170,5353
typedef struct _config_info_t 172,5371
    char fname_app[fname_app173,5403
    char fname_default[fname_default174,5437
    const char *query;query181,5831
            config_val_t answer;184,5883
            bool have_answer;185,5916
        } q;186,5946
        config_vals_t *v;v187,5959
    } u;188,5985
    bool has_1config;189,5994
} config_info_t;190,6016
static config_vals_t myvals;192,6034
static config_info_t config;193,6063
static bool config_initialized;194,6092
static config_info_t *config_reread_info;config_reread_info201,6424
static config_vals_t *config_reread_vals;config_reread_vals202,6466
my_getenv(206,6585
get_config_val_ex(223,6992
get_config_val(246,7727
set_config_from_env(252,7823
process_config_line(275,8721
read_config_file(331,11268
#   define BUFSIZE 340,11756
config_read(403,14070
config_reread(513,18838
get_config_val_other(584,21512
get_config_val_other_app(612,22578
get_config_val_other_arch(630,23261
config_init(638,23587
config_heap_init(650,23870
config_heap_exit(661,24231
config_exit(678,24674
get_parameter_ex(699,25339
get_parameter(720,25992
get_unqualified_parameter(726,26115
config_init(735,26355
config_exit(740,26383

monitor.h,1971
#define _MONITOR_H_ 42,1961
    TRACE_HEAD_YES 69,2998
    TRACE_HEAD_YES           = 0x01,x0169,2998
    TRACE_HEAD_OBTAINED_LOCK 70,3035
    TRACE_HEAD_OBTAINED_LOCK = 0x02,x0270,3035
typedef struct _trace_head_counter_t 117,5147
    app_pc tag;118,5186
    uint   counter;119,5202
    struct _trace_head_counter_t *next;next123,5314
} trace_head_counter_t;124,5354
typedef struct _trace_head_table_t 126,5379
    trace_head_counter_t **counter_table;counter_table127,5416
    uint  hash_bits;128,5458
    ptr_uint_t  hash_mask;129,5479
    uint  hash_mask_offset;130,5506
    hash_function_t hash_func;131,5534
    uint  capacity;132,5565
    uint  entries;133,5610
    uint  load_factor_percent;134,5629
    uint  resize_threshold;135,5699
} trace_head_table_t;136,5762
typedef struct _trace_bb_build_t 138,5785
    trace_bb_info_t info;139,5820
    void *vmlist;vmlist143,5960
    instr_t *end_instr;end_instr144,5978
    bool final_cti;149,6188
} trace_bb_build_t;150,6208
typedef struct _monitor_data_t 152,6229
    app_pc         trace_tag;157,6442
    uint           trace_flags;158,6502
    instrlist_t      trace;159,6570
    byte           *trace_buf;trace_buf160,6651
    uint           trace_buf_size;161,6732
    uint           trace_buf_top;162,6803
    void *         trace_vmlist;163,6886
    uint           num_blks;164,6958
    trace_bb_build_t *blk_info;blk_info165,7039
    uint           blk_info_length;166,7123
    uint           emitted_size;167,7190
    fragment_t *     last_copy;168,7273
    fragment_t *     last_fragment;171,7492
    uint           last_fragment_flags;172,7577
    trace_head_table_t thead_table;178,7842
    instrlist_t    unmangled_ilist;182,7967
    instrlist_t    *unmangled_bb_ilist;unmangled_bb_ilist183,8003
    bool           pass_to_client;185,8138
    uint           final_exit_flags;190,8291
    fragment_t     wrapper;193,8350
} monitor_data_t;195,8429

stats.c,1092
kstat_variables_t tkv;69,2965
kstat_stack_t ks;70,2988
kstat_init_variable(80,3149
kstats_evaluate_expressions(90,3398
#define KSTAT_SUM(95,3605
#define KSTAT_DEF(99,3832
#undef KSTAT_SUM101,3909
#undef KSTAT_DEF102,3926
#define KSTAT_SUM(106,4001
kstat_init_variables(109,4078
#define KSTAT_DEF(111,4124
#undef KSTAT_DEF113,4207
enum {KSTAT_OUTLIER_THRESHOLD_MS KSTAT_OUTLIER_THRESHOLD_MS123,4625
timestamp_t kstat_ignore_context_switch;124,4683
kstat_frequency_per_msec;127,4745
kstat_print_individual(131,4850
kstat_report(160,5945
#define KSTAT_DEF(165,6149
#undef KSTAT_DEF169,6374
kstats_main_logfile_name(179,6705
kstats_thread_logfile_name(185,6790
kstat_init(192,6861
kstat_exit(220,7653
kstat_calibrate(239,8076
kstat_thread_init(262,8695
kstat_merge_var(295,9912
kstat_merge(309,10453
#define KSTAT_DEF(311,10534
#undef KSTAT_DEF313,10649
dump_thread_kstats(317,10674
kstat_var_name(335,11430
#define KSTAT_DEF(338,11561
#undef KSTAT_DEF342,11668
kstats_dump_stack(348,11741
kstat_thread_exit(362,12164
kstat_test(392,13229
int main(454,14445

module_list.c,1387
vm_area_vector_t *loaded_module_areas;loaded_module_areas49,2274
os_get_module_info_lock(66,2959
os_get_module_info_unlock(74,3142
os_get_module_info_write_lock(83,3324
os_get_module_info_write_unlock(91,3514
os_get_module_info_locked(99,3708
os_get_module_info_write_locked(107,3860
module_area_create(118,4097
module_area_delete(132,4575
modules_init(143,4873
is_module_list_initialized(154,5217
modules_reset_list(160,5300
modules_exit(191,6369
module_list_add_mapping(211,6903
module_list_remove_mapping(231,7747
module_list_add(241,8156
module_list_remove(282,9905
os_module_set_flag_value(341,11977
os_module_set_flag(362,12479
os_module_clear_flag(368,12601
os_module_get_flag(374,12726
module_pc_lookup(394,13301
module_overlaps(403,13550
os_get_module_name_internal(414,13891
os_get_module_name(446,14988
os_get_module_name_strdup(461,15295
os_get_module_name_buf(472,15691
os_get_module_name_buf_strdup(486,16195
os_module_get_view_size(494,16481
struct _module_iterator_t 510,16833
    vmvector_iterator_t vmvi;511,16861
module_iterator_start(516,16954
module_iterator_hasnext(529,17406
module_iterator_next(547,17939
module_iterator_stop(560,18335
region_intersection_MD5update(573,18780
module_calculate_digest_helper(594,19583
ensure_section_readable(633,21479
restore_unreadable_section(679,23301
module_calculate_digest(730,25290

perfctr.h,40
#define GUI_ALARM_UPDATE_RATIO 39,1842

native_exec.h,74
#define _NATIVE_EXEC_H_ 34,1705
native_exec_is_back_from_native(96,3222

hotpatch.c,11551
#define HOTP_ONLY_GBOP_PRECEDENCE 78,2994
    MIN_HOTP_INTERFACE_VERSION 82,3113
    MIN_HOTP_INTERFACE_VERSION = HOTP_INTERFACE_VERSION,82,3113
    MAX_HOTP_INTERFACE_VERSION 83,3170
    MAX_HOTP_INTERFACE_VERSION = HOTP_INTERFACE_VERSION,83,3170
    MIN_NUM_VULNERABILITIES 84,3227
    MAX_NUM_VULNERABILITIES 85,3260
    MIN_VULNERABILITY_ID_LENGTH 86,3297
    MAX_VULNERABILITY_ID_LENGTH 87,3334
    MIN_POLICY_ID_LENGTH 88,3372
    MIN_POLICY_ID_LENGTH = HOTP_POLICY_ID_LENGTH,88,3372
    MAX_POLICY_ID_LENGTH 89,3422
    MAX_POLICY_ID_LENGTH = HOTP_POLICY_ID_LENGTH,89,3422
    MIN_POLICY_VERSION 90,3472
    MAX_POLICY_VERSION 91,3500
    MIN_NUM_SETS 92,3532
    MAX_NUM_SETS 93,3554
    MIN_NUM_MODULES 94,3580
    MAX_NUM_MODULES 95,3605
    MAX_MODULE_SIZE 98,3700
    MIN_PE_TIMESTAMP 106,4124
    MAX_PE_TIMESTAMP 107,4150
    MAX_PE_TIMESTAMP = UINT_MAX,107,4150
    PE_TIMESTAMP_IGNORE 108,4183
    PE_TIMESTAMP_IGNORE = UINT_MAX,108,4183
    PE_TIMESTAMP_UNAVAILABLE 109,4219
    PE_TIMESTAMP_UNAVAILABLE = PE_TIMESTAMP_IGNORE 109,4219
    MIN_PE_CHECKSUM 111,4276
    MAX_PE_CHECKSUM 112,4301
    MAX_PE_CHECKSUM = UINT_MAX,112,4301
    PE_CHECKSUM_IGNORE 113,4333
    PE_CHECKSUM_IGNORE = UINT_MAX,113,4333
    PE_CHECKSUM_UNAVAILABLE 114,4368
    PE_CHECKSUM_UNAVAILABLE = PE_CHECKSUM_IGNORE 114,4368
    MIN_PE_IMAGE_SIZE 116,4423
    MAX_PE_IMAGE_SIZE 117,4450
    MAX_PE_IMAGE_SIZE = UINT_MAX,117,4450
    PE_IMAGE_SIZE_IGNORE 118,4484
    PE_IMAGE_SIZE_IGNORE = UINT_MAX,118,4484
    PE_IMAGE_SIZE_UNAVAILABLE 119,4521
    PE_IMAGE_SIZE_UNAVAILABLE = PE_IMAGE_SIZE_IGNORE 119,4521
    MIN_PE_CODE_SIZE 121,4580
    MAX_PE_CODE_SIZE 122,4648
    MAX_PE_CODE_SIZE = UINT_MAX,122,4648
    PE_CODE_SIZE_IGNORE 123,4681
    PE_CODE_SIZE_IGNORE = UINT_MAX,123,4681
    PE_CODE_SIZE_UNAVAILABLE 124,4717
    PE_CODE_SIZE_UNAVAILABLE = PE_CODE_SIZE_IGNORE 124,4717
    MIN_PE_FILE_VERSION 126,4774
    MAX_PE_FILE_VERSION 127,4803
    MAX_PE_FILE_VERSION = ULLONG_MAX,127,4803
    PE_FILE_VERSION_IGNORE 128,4841
    PE_FILE_VERSION_IGNORE = IF_WINDOWS_ELSE(128,4841
    PE_FILE_VERSION_IGNORE = IF_WINDOWS_ELSE(MODULE_FILE_VERSION_INVALID,128,4841
    PE_FILE_VERSION_IGNORE = IF_WINDOWS_ELSE(MODULE_FILE_VERSION_INVALID, ULLONG_MAX)128,4841
    PE_FILE_VERSION_UNAVAILABLE 129,4928
    PE_FILE_VERSION_UNAVAILABLE = PE_FILE_VERSION_IGNORE 129,4928
    MIN_NUM_PATCH_POINT_HASHES 131,4991
    MAX_NUM_PATCH_POINT_HASHES 132,5027
    MIN_HASH_START_OFFSET 133,5067
    MAX_HASH_START_OFFSET 134,5098
    MAX_HASH_START_OFFSET = MAX_MODULE_SIZE,134,5098
    MIN_HASH_LENGTH 135,5178
    MAX_HASH_LENGTH 136,5203
    MAX_HASH_LENGTH = MAX_MODULE_SIZE,136,5203
    MIN_HASH_VALUE 137,5283
    MAX_HASH_VALUE 138,5307
    MAX_HASH_VALUE = UINT_MAX,138,5307
    MIN_NUM_PATCH_POINTS 140,5339
    MIN_NUM_PATCH_POINTS = MIN_NUM_PATCH_POINT_HASHES,140,5339
    MAX_NUM_PATCH_POINTS 141,5394
    MAX_NUM_PATCH_POINTS = MAX_NUM_PATCH_POINT_HASHES,141,5394
    MIN_PATCH_OFFSET 142,5449
    MAX_PATCH_OFFSET 143,5475
    MAX_PATCH_OFFSET = MAX_MODULE_SIZE,143,5475
    MIN_PATCH_PRECEDENCE 144,5555
    MAX_PATCH_PRECEDENCE 145,5585
    MIN_DETECTOR_OFFSET 146,5619
    MAX_DETECTOR_OFFSET 152,5950
    MIN_PROTECTOR_OFFSET 154,6070
    MAX_PROTECTOR_OFFSET 155,6100
    MAX_PROTECTOR_OFFSET = MAX_DETECTOR_OFFSET,155,6100
    MIN_RETURN_ADDR 159,6276
    MAX_RETURN_ADDR 164,6512
    MAX_RETURN_ADDR = MAX_PATCH_OFFSET,164,6512
    MIN_MODE 165,6552
    MIN_MODE = HOTP_MODE_OFF,165,6552
    MAX_MODE 166,6582
    MAX_MODE = HOTP_MODE_PROTECT,166,6582
    MAX_POLICY_FILE_SIZE 172,6905
#define PE_NAME_IGNORE 175,6947
#define PE_NAME_UNAVAILABLE 176,7021
    const char *pe_name;pe_name184,7314
    uint pe_checksum;189,7494
    uint pe_timestamp;190,7516
    size_t pe_image_size;191,7539
    size_t pe_code_size;210,8671
    uint64 pe_file_version;215,8834
} hotp_module_sig_t;216,8862
    app_rva_t offset;235,9801
    app_rva_t detector_fn;242,10133
    app_rva_t protector_fn;244,10267
    app_rva_t return_addr;245,10295
    uint precedence;251,10525
    byte *trampoline;trampoline264,11093
    byte *app_code_copy;app_code_copy270,11353
    byte *tramp_exit_tgt;tramp_exit_tgt277,11686
} hotp_patch_point_t;278,11712
#define HOTP_ONLY_TRAMPOLINE_SIZE 283,11882
#define HOTP_ONLY_NUM_THREADS_AT_INIT 284,11920
#define HOTP_ONLY_PATCH_REGION_SIZE 300,12699
#define HOTP_CACHE_PATCH_REGION_SIZE 301,12743
#define HOTP_BAD_PATCH_REGION_SIZE 302,12787
#define HOTP_PATCH_REGION_SIZE 303,12832
    app_rva_t start;319,13586
    uint len;320,13607
    uint hash_value;321,13685
} hotp_patch_point_hash_t;322,13706
    hotp_module_sig_t sig;325,13751
    uint num_patch_points;326,13778
    hotp_patch_point_t *patch_points;patch_points327,13805
    uint num_patch_point_hashes;328,13843
    hotp_patch_point_hash_t *hashes;hashes329,13876
    bool matched;332,13985
    app_pc base_address;333,14063
} hotp_module_t;334,14088
    uint num_modules;337,14123
    hotp_module_t *modules;modules338,14145
} hotp_set_t;339,14173
    hotp_exec_status_t exec_status;346,14411
    hotp_inject_status_t *inject_status;inject_status349,14522
    uint64 num_detected;355,14737
    uint64 num_not_detected;356,14762
    uint64 num_detector_error;357,14791
    uint64 num_protected;358,14822
    uint64 num_not_protected;359,14848
    uint64 num_kill_thread;360,14878
    uint64 num_kill_process;361,14906
    uint64 num_raise_exception;362,14935
    uint64 num_change_control_flow;363,14967
    uint64 num_protector_error;364,15003
    uint64 num_aborted;365,15035
} hotp_vul_info_t;366,15059
    HOTP_TYPE_HOT_PATCH 378,15544
    HOTP_TYPE_HOT_PATCH = 0x1,x1378,15544
    HOTP_TYPE_GBOP_HOOK 390,16200
    HOTP_TYPE_GBOP_HOOK = 0x2,x2390,16200
    HOTP_TYPE_PROBE 395,16346
    HOTP_TYPE_PROBE = 0x4x4395,16346
} hotp_type_t;396,16372
    const char *vul_id;vul_id405,16737
    const char *policy_id;policy_id413,17062
    uint policy_version;414,17089
    const char *hotp_dll;hotp_dll415,17114
    const char *hotp_dll_hash;hotp_dll_hash416,17140
    hotp_policy_mode_t mode;417,17171
    uint num_sets;419,17201
    hotp_set_t *sets;sets420,17220
    hotp_vul_info_t *info;info423,17314
    app_pc  hotp_dll_base;424,17341
    hotp_type_t type;440,18182
    unsigned int id;446,18426
} hotp_vul_t;447,18447
typedef struct hotp_vul_tab_t 458,19069
    hotp_vul_t *vul_tab;vul_tab459,19101
    uint num_vuls;460,19126
    struct hotp_vul_tab_t *next;next461,19145
} hotp_vul_tab_t;462,19178
typedef struct hotp_globals_t 470,19468
    bool ldr_safe_hook_removal;476,19797
    bool ldr_safe_hook_injection;477,19868
} hotp_globals_t;478,19939
#define VUL(493,20654
#define SET(494,20708
#define MODULE(495,20775
#define SIG(496,20848
#define PPOINT(497,20920
#define PPOINT_HASH(498,21004
#define NUM_GLOBAL_VULS 501,21094
#define GLOBAL_VUL_TABLE 502,21150
#define GLOBAL_VUL(503,21207
#define GLOBAL_SET(504,21272
#define GLOBAL_MODULE(505,21340
#define GLOBAL_SIG(506,21413
#define GLOBAL_PPOINT(507,21484
#define GLOBAL_HASH(508,21561
#define VUL_STAT_INC(517,22081
#define SET_NUM(519,22119
#define SET_STR_DUP(540,23613
#define SET_STR_PTR(549,24129
#define SET_STR(558,24643
#define HOTP_IS_IN_REGION(560,24704
#define HOTP_ONLY_IS_IN_TRAMPOLINE(564,24875
#define HOTP_ONLY_IS_IN_PATCH_REGION(569,25121
#define GENERATE_PROBE_ID(580,25738
hotp_policy_status_table_t *hotp_policy_status_table;hotp_policy_status_table627,28380
static hotp_vul_t *hotp_vul_table;hotp_vul_table630,28500
static uint hotp_num_vuls;631,28536
static hotp_vul_tab_t *hotp_old_vul_tabs;hotp_old_vul_tabs632,28564
static void *hotp_only_tramp_heap;hotp_only_tramp_heap636,28749
static void *hotp_only_tramp_heap_cache;hotp_only_tramp_heap_cache644,29157
static vm_area_vector_t *hotp_only_tramp_areas;hotp_only_tramp_areas651,29447
static vm_area_vector_t *hotp_patch_point_areas;hotp_patch_point_areas670,30537
static hotp_globals_t *hotp_globals;hotp_globals673,30600
static unsigned int probe_id_counter;681,30834
hotp_get_lock(688,31077
hotp_ppoint_addr(695,31197
hotp_ppoint_areas_add(710,31681
hotp_ppoint_areas_remove(745,32980
hotp_ppoint_areas_release(781,34178
hotp_get_next_str(806,35087
    POLICY_FILE 835,35758
    MODES_FILE836,35779
hotp_read_data_file(840,35812
hotp_read_policy_defs(920,38931
hotp_load_hotp_dlls(1147,49237
hotp_read_policy_modes(1283,55542
hotp_set_policy_status(1392,59653
hotp_init_policy_status_table(1444,62187
static void hotp_free_one_vul(1544,66875
hotp_free_vul_table(1627,70343
hotp_remove_patches_from_module(1658,71445
hotp_remove_hot_patches(1783,77889
hotp_module_match(1800,78683
hotp_compute_hash(1913,84115
hotp_process_image(2068,91872
hotp_ppoint_on_list(2079,92353
hotp_perscache_overlap(2106,93162
hotp_process_image_helper(2159,95542
hotp_patch_point_persist_helper(2604,118582
hotp_num_matched_patch_points(2658,120851
hotp_get_matched_patch_points(2669,121281
hotp_point_not_on_list(2681,121764
hotp_walk_loader_list(2759,125268
hotp_init(2819,127885
hotp_reset_init(2890,130745
hotp_reset_free(2899,130926
hotp_exit(2923,131742
nudge_action_read_policies(2993,134482
hotp_nudge_handler(3208,145034
hotp_only_lookup_patch_addr(3345,151561
hotp_lookup_patch_addr(3396,153861
hotp_does_region_need_patch(3483,157583
hotp_inject_gateway_call(3614,162715
#define HOTP_CONTEXT_OFFSET_ON_DSTACK 3625,163256
#define GET_FROM_DC_OFFS_TO_REG(3630,163477
hotp_inject(3715,167647
hotp_only_patch_region_valid(3815,172827
patch_cti_tgt(3967,180652
hotp_only_inject_patch(3994,181830
hotp_only_remove_patch(4293,195833
hotp_only_in_tramp(4386,200127
hotp_only_detach_helper(4408,201049
hotp_only_mem_prot_change(4449,202989
hotp_only_gateway(4557,207592
hotp_gateway(4617,210455
hotp_execute_patch(4981,227730
hotp_event_notify(5103,233469
hotp_spill_before_notify(5224,238610
hotp_restore_after_notify(5281,241073
hotp_dump_reg_state(5300,241685
hotp_update_vul_stats(5316,242536
#define CLEAN_CALL_XFLAGS_OFFSET 5411,246472
#define CLEAN_CALL_ERRNO_OFFSET 5412,246510
hotp_change_control_flow(5414,246560
hotp_print_diagnostics(5440,247503
hotp_only_contains_leaked_trampoline(5595,254962
hotp_only_gbop_detector(5644,257002
hotp_only_gbop_protector(5658,257515
hotp_only_read_gbop_policy_defs(5675,258107
    DR_PROBE_ADDR_VIRTUAL,5810,263549
    DR_PROBE_ADDR_LIB_OFFS,5820,263981
    DR_PROBE_ADDR_EXP_FUNC,5830,264506
} dr_probe_addr_t;5831,264534
    char *library;library5841,264974
    app_rva_t offset;5846,265197
} dr_probe_lib_offs_t;5847,265219
    char *library;library5857,265674
    char *func;func5861,265843
} dr_probe_exp_func_t;5862,265859
    dr_probe_addr_t type;5871,266185
        app_pc vaddr;5875,266286
        dr_probe_lib_offs_t lib_offs;5878,266366
        dr_probe_exp_func_t exp_func;5881,266465
} dr_probe_location_t;5883,266510
    DR_PROBE_RETURN_NORMAL 5897,266958
} dr_probe_return_t;5898,266990
    char *name;name5910,267356
    dr_probe_location_t insert_loc;5920,267857
    dr_probe_location_t callback_func;5937,268608
    unsigned int id;5940,268726
    dr_probe_status_t status;5943,268808
} dr_probe_desc_t;5944,268838
dr_register_probes(6074,275497
#define HOTP_PROBE_PRECEDENCE 6246,283398
dr_get_probe_status(6357,288415
hotp_read_policies(6395,289586

nudge.h,26
#define _NUDGE_H_35,1765

dynamo.c,3823
bool    dynamo_initialized 87,2900
bool    dynamo_heap_initialized 88,2936
bool    automatic_startup 89,2977
bool    control_all_threads 90,3012
bool    dr_early_injected 92,3064
int     dr_early_injected_location 93,3099
bool    dr_earliest_injected 94,3161
static void * dr_earliest_inject_args;95,3199
bool    dr_injected_primary_thread 103,3541
bool    dr_injected_secondary_thread 104,3585
bool    dr_late_injected_primary_thread 107,3710
bool    dr_api_entry 111,3878
bool    dr_api_exit 112,3908
bool    dr_preinjected 115,3970
static bool dynamo_exiting 118,4045
bool    dynamo_exited 120,4088
bool    dynamo_exited_and_cleaned 121,4119
bool    dynamo_exited_log_and_stats 123,4175
bool    dynamo_resetting 129,4445
bool    standalone_library 131,4542
bool    post_execve 134,4597
byte *  initstack;137,4683
#define EXCEPTION_STACK_SIZE 141,4833
END_DATA_SECTION(171,6099
const char * const DATASEC_NAMES[DATASEC_NAMES193,6763
typedef struct _protect_info_t 201,6994
    mutex_t lock;205,7124
    int num_threads_unprot;206,7142
    int num_threads_suspended;207,7197
} protect_info_t;208,7228
static protect_info_t *protect_info;protect_info209,7246
static uint starttime;228,7682
file_t main_logfile 230,7706
dr_statistics_t *stats stats234,7790
thread_record_t ** all_threads;245,8215
main_logfile_name(267,9253
thread_logfile_name(273,9338
statistics_pre_init(282,9498
statistics_init(300,10223
# define STATS_DEF(313,10569
# define RSTATS_DEF(315,10609
#undef STATS_DEF318,10672
#undef RSTATS_DEF319,10689
# define STATS_DEF(327,11003
# define RSTATS_DEF(332,11217
#undef STATS_DEF338,11454
#undef RSTATS_DEF339,11471
statistics_exit(343,11504
get_dr_stats(349,11567
dynamorio_app_init(359,11818
dynamorio_fork_init(705,25122
standalone_init(819,29259
standalone_exit(889,31513
dynamo_process_exit_with_thread_info(902,31820
dynamo_shared_exit(909,31983
dynamorio_app_exit(1090,37791
synch_with_threads_at_exit(1100,38036
dynamo_process_exit_cleanup(1153,40560
dynamo_nullcalls_exit(1235,43978
dynamo_process_exit(1258,44472
create_new_dynamo_context(1423,50486
delete_dynamo_context(1492,53602
initialize_dynamo_context(1524,54947
create_callback_dcontext(1621,58137
is_thread_initialized(1717,62327
is_thread_known(1732,62731
mark_thread_execve(1742,62973
get_num_threads(1762,63499
is_last_app_thread(1768,63591
get_list_of_threads_common(1784,64248
get_list_of_threads(1833,66161
get_list_of_threads_ex(1840,66297
thread_lookup(1850,66557
get_thread_num(1882,67335
add_thread(1892,67549
remove_thread(1953,70175
dynamo_thread_init(1997,71575
dynamo_thread_exit_pre_client(2210,79944
dynamo_thread_exit_common(2233,80732
dynamo_thread_exit(2454,88541
dynamo_other_thread_exit(2462,88795
dynamo_thread_stack_free_and_exit(2477,89415
dr_app_setup(2491,89754
dr_app_cleanup(2504,90175
dr_app_start_helper(2530,91273
dr_app_stop(2549,91870
dr_app_setup_and_start(2555,91958
dynamo_thread_under_dynamo(2567,92167
dynamo_thread_not_under_dynamo(2589,92844
#define MAX_TAKE_OVER_ATTEMPTS 2608,93398
dynamorio_take_over_threads(2613,93492
dynamorio_app_take_over_helper(2638,94324
dynamorio_app_init_and_early_takeover(2690,96351
dynamorio_earliest_init_takeover_C(2723,97950
dynamorio_protect(2770,99729
dynamorio_unprotect(2839,102477
get_data_section_name(2896,104914
check_should_be_protected(2907,105124
data_sections_enclose_region(2951,106704
get_data_section_bounds(2977,107708
DECLARE_DATA_SECTION(3012,109374
data_section_exit(3050,110546
#define DATASEC_WRITABLE_MOD(3067,111172
protect_data_section(3077,111623
entering_dynamorio(3133,114151
exiting_dynamorio(3148,114648
is_on_initstack(3165,115254
is_on_dstack(3172,115411
is_currently_on_dstack(3179,115567
pre_second_thread(3187,115713

io.c,1431
#  define _EXTERNALIZE_CTYPE_INLINES_TOP_50,2199
# undef CLIENT_ASSERT59,2421
# define CLIENT_ASSERT(60,2443
#define VA_ARG_CHAR2INT63,2517
#define BUF_SIZE 64,2541
const static double pos_inf 67,2574
const static double neg_inf 68,2613
const static double zerof 74,2860
# define pos_inf 75,2893
# define neg_inf 76,2922
double2int_trunc(81,2997
double2int(94,3260
utf8_to_utf16(131,4590
utf16_to_utf8(221,8256
utf16_to_utf8_size(303,10918
#undef IOX_WIDE_CHAR314,11240
#define IOX_WIDE_CHAR317,11279
typedef enum _specifier_t 324,11441
    SPEC_INT,325,11469
    SPEC_CHAR,326,11483
    SPEC_STRING327,11498
} specifer_t;328,11514
typedef enum _int_sz_t 330,11529
    SZ_SHORT,331,11554
    SZ_INT,332,11568
    SZ_LONG,333,11580
    SZ_LONGLONG,334,11593
    SZ_PTR 336,11647
    SZ_PTR = SZ_LONGLONG336,11647
    SZ_PTR 338,11678
    SZ_PTR = SZ_LONG338,11678
} int_sz_t;340,11706
our_isspace(347,11956
parse_int(354,12093
our_vsscanf(436,14240
our_sscanf(632,21008
# define MAPS_LINE_FORMAT4 652,21556
# define MAPS_LINE_FORMAT8 653,21619
test_sscanf_maps_x86(656,21704
test_sscanf_maps_x64(685,22597
test_sscanf_all_specs(714,23524
#  define RTLD_NEXT 794,26218
typedef void (*memcpy_t)memcpy_t796,26258
test_memcpy_offset_size(799,26335
test_our_memcpy(821,27079
test_memset_offset_size(844,27700
test_our_memset(861,28189
our_memcpy_vs_libc(880,28605
unit_test_io(923,30201

synch.c,1503
typedef struct _thread_synch_data_t 53,2185
    spin_mutex_t *synch_lock;synch_lock58,2483
    int pending_synch_count;61,2661
    thread_synch_permission_t synch_perm;64,2821
    bool synch_with_success;68,3038
    priv_mcontext_t *set_mcontext;set_mcontext73,3281
    void *set_context;set_context74,3316
    size_t set_context_size;75,3339
    byte *set_context_alloc;set_context_alloc78,3429
} thread_synch_data_t;80,3465
free_setcontext(92,3866
synch_thread_free_setcontext(104,4240
synch_init(113,4497
synch_exit(118,4524
synch_thread_init(124,4592
synch_thread_exit(142,5317
thread_synch_state_no_xfer(165,6270
thread_synch_successful(178,6825
is_at_do_syscall(189,7159
is_native_thread_state_valid(244,9451
translate_mcontext(309,12705
waiting_at_safe_spot(406,17258
should_suspend_client_thread(431,18198
at_safe_spot(451,19091
should_wait_at_safe_spot(542,23676
set_synch_state(550,23937
check_wait_at_safe_spot(566,24511
adjust_wait_at_safe_spot(666,28938
set_synched_thread_context(685,29789
#define SYNCH_ALL_THREADS_MAXIMUM_LOOPS 761,33290
#define SYNCH_MAXIMUM_LOOPS 762,33375
#define SYNCH_WITH_WAIT_MS 767,33676
synch_thread_yield(771,33821
synch_with_thread(810,35796
synch_with_all_threads(1051,47374
        SYNCH_WITH_ALL_NEW 1070,48312
        SYNCH_WITH_ALL_NOTIFIED 1071,48349
        SYNCH_WITH_ALL_SYNCHED 1072,48386
resume_all_threads(1450,66866
end_synch_with_all_threads(1490,68121
translate_from_synchall_to_dispatch(1517,69192

vmareas.c,13382
    VM_WRITABLE 76,2697
    VM_WRITABLE     = 0x0001,x000176,2697
    VM_UNMOD_IMAGE 80,2936
    VM_UNMOD_IMAGE  = 0x0002,x000280,2936
    VM_DELETE_ME 81,2966
    VM_DELETE_ME    = 0x0004,x000481,2966
    VM_WAS_FUTURE 85,3262
    VM_WAS_FUTURE   = 0x0008,x000885,3262
    VM_DR_HEAP 86,3337
    VM_DR_HEAP      = 0x0010,x001086,3337
    VM_ONCE_ONLY 87,3389
    VM_ONCE_ONLY    = 0x0020,x002087,3389
    VM_MADE_READONLY 93,3724
    VM_MADE_READONLY = VM_WRITABLE/VM_WRITABLE93,3724
    VM_DELAY_READONLY 97,4019
    VM_DELAY_READONLY = 0x0080,x008097,4019
    VM_PATTERN_REVERIFY 108,4690
    VM_PATTERN_REVERIFY = 0x0100,x0100108,4690
    VM_DRIVER_ADDRESS 111,4734
    VM_DRIVER_ADDRESS   = 0x0200,x0200111,4734
    VM_PERSISTED_CACHE 124,5347
    VM_PERSISTED_CACHE     = 0x0400,x0400124,5347
    VM_EXECUTED_FROM 127,5456
    VM_EXECUTED_FROM       = 0x0800,x0800127,5456
    VM_ADD_TO_SHARED_DATA 133,5684
    VM_ADD_TO_SHARED_DATA  = 0x1000,x1000133,5684
#define SANDBOX_FLAG(137,5764
typedef struct _ro_vs_sandbox_data_t 140,5895
    uint written_count;145,6128
    uint selfmod_execs;154,6614
    uint ro2s_xfers;156,6651
    uint s2ro_xfers;157,6672
} ro_vs_sandbox_data_t;159,6700
typedef struct vm_area_t 170,7259
    app_pc start;171,7286
    app_pc end;172,7304
    uint vm_flags;178,7604
    uint frag_flags;182,7728
    char *comment;comment184,7762
        fragment_t *frags;frags199,8414
        void *client;client201,8503
    } custom;202,8525
} vm_area_t;203,8539
typedef struct thread_data_t 208,8691
    vm_area_vector_t areas;209,8722
    vm_area_t *last_area;last_area211,8810
    app_pc last_decode_area_page_pc;220,9357
    bool   last_decode_area_valid;221,9394
    uint thrown_exceptions;223,9487
} thread_data_t;225,9572
#define SHOULD_LOCK_VECTOR(227,9590
#define LOCK_VECTOR(232,9820
#define UNLOCK_VECTOR(241,10268
static vm_area_vector_t *executable_areas;executable_areas256,11028
static vm_area_vector_t *dynamo_areas;dynamo_areas257,11071
static coarse_info_t **coarse_to_delete;coarse_to_delete264,11348
static vm_area_vector_t *pretend_writable_areas;pretend_writable_areas270,11556
vm_area_vector_t *patch_proof_areas;patch_proof_areas273,11668
vm_area_vector_t *emulate_write_areas;emulate_write_areas278,11849
vm_area_vector_t *IAT_areas;IAT_areas285,12154
static vm_area_vector_t *written_areas;written_areas290,12302
static vm_area_vector_t *futureexec_areas;futureexec_areas298,12581
static vm_area_vector_t *app_flushed_areas;app_flushed_areas303,12776
static app_pc tamper_resistant_region_start,311,12987
static app_pc tamper_resistant_region_start, tamper_resistant_region_end;311,12987
static thread_data_t *shared_data;shared_data324,13603
typedef struct _pending_delete_t 326,13674
    app_pc start;329,13793
    app_pc end;330,13811
    fragment_t *frags;frags333,13902
    uint ref_count;335,14002
    uint flushtime_deleted;336,14022
    struct _pending_delete_t *next;next338,14099
} pending_delete_t;339,14135
typedef struct _deletion_lists_t 342,14228
    pending_delete_t *shared_delete;shared_delete349,14642
    pending_delete_t *shared_delete_tail;shared_delete_tail351,14749
    uint shared_delete_count;353,14832
    fragment_t *lazy_delete_list;lazy_delete_list359,15066
    fragment_t *lazy_delete_tail;lazy_delete_tail361,15152
    uint lazy_delete_count;363,15231
    bool move_pending;365,15331
} deletion_lists_t;366,15354
static deletion_lists_t *todelete;todelete368,15375
typedef struct _last_deallocated_t 370,15411
    bool unload_in_progress;388,16429
    app_pc last_unload_base;389,16458
    size_t last_unload_size;390,16487
} last_deallocated_t;398,16919
static last_deallocated_t *last_deallocated;last_deallocated399,16941
#define MULTI_ALLOC_DC(412,17604
#define GET_DATA(413,17667
#define GET_VECTOR(416,17821
#define SHARED_VECTOR_RWLOCK(420,18121
#define ASSERT_VMAREA_DATA_PROTECTED(426,18383
# define ASSERT_VMAREA_VECTOR_PROTECTED(435,18804
# define ASSERT_VMAREA_VECTOR_PROTECTED(443,19261
#define MAXIMUM_VIOLATION_NAME_LENGTH 447,19392
#define VMVECTOR_INITIALIZE_VECTOR(449,19434
bool vm_areas_exited 523,21815
typedef struct _multi_entry_t 546,23067
    fragment_t *f;f547,23099
    uint      flags;552,23355
    fragment_t *next_vmarea;next_vmarea554,23462
    fragment_t *prev_vmarea;prev_vmarea555,23491
    fragment_t *also_vmarea;also_vmarea556,23520
    app_pc pc;559,23699
} multi_entry_t;560,23714
#define FRAG_MULTI(563,23807
#define FRAG_MULTI_INIT(565,23871
#define FRAG_NEXT(567,23971
#define FRAG_NEXT_ASSIGN(570,24099
#define FRAG_PREV(577,24304
#define FRAG_PREV_ASSIGN(580,24432
#define FRAG_ALSO(588,24713
#define FRAG_ALSO_DEL_OK(592,24967
#define FRAG_ALSO_ASSIGN(595,25107
#define FRAG_PC(605,25462
#define FRAG_PC_ASSIGN(608,25571
#define FRAG_FRAG(615,25761
#define FRAG_FRAG_ASSIGN(618,25870
#define FRAG_ID(625,26064
vm_make_writable(632,26305
vm_make_unwritable(643,26635
revert_memory_regions(671,27797
print_vm_flags(695,28689
print_vm_area(711,29313
print_vm_areas(769,31606
print_contig_vm_areas(780,31866
print_pending_list(797,32316
writelock_if_not_already(813,32857
vm_area_vector_check_size(823,33087
vm_area_merge_fraglists(848,34055
add_vm_area(895,36243
adjust_coarse_unit_bounds(1230,53123
remove_vm_area(1275,55066
binary_search(1452,63742
lookup_addr(1513,66074
vm_area_overlap(1523,66400
vm_areas_reset_init(1533,66721
dynamo_vm_areas_init(1541,66946
vm_areas_init(1552,67274
vm_areas_statistics(1627,70313
vm_areas_reset_free(1650,71146
vm_areas_exit(1665,71684
vm_areas_thread_reset_init(1772,75431
vm_areas_thread_init(1783,75878
vm_areas_thread_reset_free(1791,76101
vm_areas_thread_exit(1804,76540
vmvector_set_callbacks(1822,77138
vmvector_print(1839,77760
vmvector_add(1848,78001
vmvector_add_replace(1858,78358
vmvector_remove(1878,79014
vmvector_remove_containing_area(1894,79540
vmvector_overlap(1920,80342
vmvector_lookup(1938,80931
vmvector_lookup_data(1950,81289
vmvector_lookup_prev_next(1980,82301
vmvector_modify_data(2013,83346
vmvector_init_vector(2030,83943
vmvector_create_vector(2038,84160
vmvector_reset_vector(2048,84441
vmvector_free_vector(2089,86190
vmvector_delete_vector(2097,86401
vmvector_iterator_start(2116,87028
vmvector_iterator_hasnext(2127,87263
vmvector_iterator_startover(2134,87440
vmvector_iterator_peek(2150,87864
vmvector_iterator_next(2172,88636
vmvector_iterator_stop(2181,88893
print_executable_areas(2197,89329
print_dynamo_areas(2203,89419
print_futureexec_areas(2212,89601
print_written_areas(2220,89745
free_written_area(2227,89843
add_written_area(2239,90298
add_executable_vm_area_check_IAT(2316,93689
add_executable_vm_area_helper(2490,102891
vm_area_load_coarse_unit(2552,105680
add_executable_vm_area(2626,109551
add_executable_region(2730,113869
remove_executable_vm_area(2742,114363
remove_executable_region(2760,114994
vm_area_delay_load_coarse_units(2770,115303
free_nonexec_coarse_and_unlock(2812,117090
add_futureexec_vm_area(2859,118889
remove_futureexec_vm_area(2884,119897
futureexec_vm_area_overlap(2897,120330
is_executable_address(2909,120669
get_executable_area_vm_flags(2923,121030
get_executable_area_flags(2943,121578
get_coarse_info_internal(2963,122208
get_executable_area_coarse_info(3042,125919
mark_executable_area_coarse_frozen(3051,126181
executable_areas_match_flags(3088,127781
is_executable_area_writable(3130,129663
is_executable_area_writable_overlap(3152,130551
is_pretend_or_executable_writable(3165,130977
executable_vm_area_coarse_overlap(3178,131385
executable_vm_area_persisted_overlap(3192,131826
executable_vm_area_executed_from(3204,132247
executable_area_overlap_bounds(3232,133629
vm_area_coarse_iter_start(3282,135878
vm_area_coarse_iter_find_next(3297,136420
vm_area_coarse_iter_hasnext(3320,137331
vm_area_coarse_iter_next(3326,137573
vm_area_coarse_iter_stop(3333,137764
is_executable_area_on_all_selfmod_pages(3344,138074
was_executable_area_writable(3365,138972
is_executable_area_selfmod(3397,140377
is_executable_area_dyngen(3409,140672
is_valid_address(3421,140916
update_dynamo_vm_areas(3434,141330
are_dynamo_vm_areas_stale(3459,142199
mark_dynamo_vm_areas_stale(3470,142493
dynamo_vm_areas_lock(3480,142858
dynamo_vm_areas_unlock(3501,143594
self_owns_dynamo_vm_area_lock(3518,144137
dynamo_vm_areas_start_reading(3531,144635
dynamo_vm_areas_done_reading(3554,145442
add_dynamo_vm_area(3564,145735
remove_dynamo_vm_area(3591,146958
add_dynamo_heap_vm_area(3614,147735
is_dynamo_area_buffer(3636,148696
remove_dynamo_heap_areas(3643,148860
is_dynamo_address(3670,150016
is_pretend_writable_address(3687,150588
pretend_writable_vm_area_overlap(3702,151167
get_address_comment(3715,151510
executable_vm_area_overlap(3740,152154
executable_areas_lock(3752,152477
executable_areas_unlock(3758,152552
dynamo_vm_area_overlap(3766,152756
is_on_stack(3782,153253
is_address_on_stack(3829,155137
is_driver_address(3837,155372
#define MESSAGE_EXEC_VIOLATION 3856,155920
#define MESSAGE_CONTACT_VENDOR 3857,156001
const char * const action_message[action_message3858,156090
const uint action_event_id[action_event_id3868,156572
fill_security_violation_target(3881,156873
get_security_violation_name(3890,157128
is_exempt_threat_name(4001,161440
security_violation_report(4030,162530
security_violation_internal_main(4138,167266
security_violation_action(4474,182945
security_violation_main(4533,185401
security_violation_internal(4549,186080
security_violation(4574,187219
END_DATA_SECTION(4584,187621
is_in_futureexec_area(4601,188241
is_dyngen_code(4611,188460
is_direct_jmp_to_image(4625,188797
check_trampoline_displaced_code(4649,189672
check_origins_bb_pattern(4721,192900
check_origins_trim_region_helper(4966,204087
check_origins_helper(4985,204973
check_origins(5482,230354
vm_area_fragment_self_write(5526,232146
    SIMULATE_INIT 5570,234183
    SIMULATE_GENERIC 5571,234212
    SIMULATE_AT_ADDR 5572,234241
    SIMULATE_AT_FRAGNUM 5573,234270
    SIMULATE_WIPE_STACK 5574,234299
    SIMULATE_OVER 5575,234328
    SIMULATE_OVER       = 0x1000,x10005575,234328
next_simulate_at_fragment(5592,234959
simulate_attack(5641,236667
print_entry(5702,238798
print_fraglist(5722,239518
print_fraglists(5758,241112
print_frag_arealist(5771,241501
area_contains_frag_pc(5787,241976
prepend_entry_to_fraglist(5803,242464
prepend_fraglist(5828,243478
dyngen_diagnostics(5853,244447
app_memory_pre_alloc(5915,246711
app_memory_allocation(5959,248713
app_memory_deallocation(6075,253961
flush_and_remove_executable_vm_area(6160,258259
tamper_resistant_region_add(6186,259338
tamper_resistant_region_overlap(6209,260226
app_memory_protection_change(6237,261586
app_memory_flush(6915,296664
was_address_flush_start(6976,299309
handle_delay_readonly(6995,299995
check_thread_vm_area_cleanup(7034,301839
check_thread_vm_area_abort(7077,303700
allow_xfer_for_frag_flags(7093,304327
check_thread_vm_area(7159,307405
set_thread_decode_page_start(8018,348966
check_in_last_thread_vm_area(8052,350247
remove_shared_vmlist(8103,352972
vm_area_add_fragment(8164,355593
acquire_vm_areas_lock(8280,360065
acquire_vm_areas_lock_if_not_already(8287,360237
release_vm_areas_lock(8294,360422
frag_also_list_areas_unique(8306,360827
exec_area_bounds_match(8342,362237
vm_area_add_to_list(8383,363973
vm_area_destroy_list(8503,369458
vm_list_overlaps(8510,369614
remove_fraglist_entry(8545,370849
vm_area_check_clean_fraglist(8604,373050
vm_area_clean_fraglist(8641,374545
vm_area_remove_fragment(8695,377076
add_to_pending_list(8740,378629
print_lazy_deletion_list(8791,380674
check_lazy_deletion_list_consistency(8806,381072
remove_from_lazy_deletion_list(8819,381348
move_lazy_list_to_pending_delete(8845,382242
add_to_lazy_deletion_list(8905,385201
check_lazy_deletion_list(8989,389159
unlink_fragments_for_deletion(9044,391455
vm_area_unlink_fragments(9086,393078
vm_area_unlink_incoming(9283,403338
vm_area_check_shared_pending(9322,404750
vm_area_flush_fragments(9539,414668
vm_area_flush_coarse_unit(9637,418937
vm_area_allsynch_flush_fragments(9712,422411
vm_area_coarse_units_reset_free(9887,431165
coarse_region_should_persist(9937,433580
vm_area_coarse_region_freeze(10007,436518
vm_area_coarse_units_freeze(10118,442078
remove_thread_vm_area(10161,443847
thread_vm_area_overlap(10178,444456
handle_modified_code(10199,445181
get_selfmod_exec_counter(10621,466897
vm_area_selfmod_check_clear_exec_count(10672,469018
mark_unload_start(10833,476921
mark_unload_future_added(10853,477647
mark_unload_end(10874,478452
is_in_last_unloaded_region(10959,482626
is_currently_unloaded_region(10980,483269
is_unreadable_or_currently_unloaded_region(10993,483543
print_last_deallocated(11018,484319
safe_apc_or_thread_target(11055,485529
apc_thread_policy_helper(11070,485933
    enum {PIC_SHELLCODE_MATCH PIC_SHELLCODE_MATCH11098,487079
    enum {PIC_SHELLCODE_MATCH = 0x0000e853}x0000e85311098,487079
aslr_report_violation(11252,493790
# define INT_TO_PC(11324,496905
print_vector_msg(11327,496966
check_vec(11334,497107
vmvector_tests(11346,497471
unit_test_vmareas(11389,499277

perscache.h,6395
#define _PERSCACHE_H_ 41,1871
struct _coarse_info_t 70,3262
    bool frozen:frozen71,3286
    bool persisted:persisted72,3305
    bool in_use:in_use73,3327
    bool has_persist_info:has_persist_info77,3508
    bool primary_for_module:primary_for_module82,3734
    bool stubs_readonly:stubs_readonly84,3820
    bool is_local:is_local89,4011
    void *cache;cache92,4103
    void *htable;htable98,4352
    void *th_htable;th_htable99,4431
    void *pclookup_last_htable;pclookup_last_htable102,4579
    void *stubs;stubs104,4667
    cache_pc fcache_return_prefix;106,4711
    cache_pc trace_head_return_prefix;107,4746
    cache_pc ibl_ret_prefix;108,4785
    cache_pc ibl_call_prefix;109,4814
    cache_pc ibl_jmp_prefix;110,4844
    coarse_incoming_t *incoming;incoming112,4874
    cache_pc cache_start_pc;117,5053
    cache_pc cache_end_pc;118,5082
    cache_pc stubs_start_pc;119,5149
    cache_pc stubs_end_pc;120,5206
    size_t mmap_size;125,5502
    void *pclookup_htable;pclookup_htable127,5606
    uint flags;131,5760
    cache_pc mmap_pc;132,5834
    size_t mmap_ro_size;137,6079
    file_t fd;139,6183
    size_t persisted_source_mmap_size;144,6335
    app_pc_table_t *rct_table;rct_table147,6433
    app_pc_table_t *rac_table;rac_table148,6464
    uint ibl_pending_used;152,6630
    app_rva_t *hotp_ppoint_vec;hotp_ppoint_vec163,7156
    uint hotp_ppoint_vec_num;164,7188
    uint stubs_write_count;168,7332
    struct _coarse_info_t *non_frozen;non_frozen174,7562
    mutex_t lock;187,7985
    mutex_t incoming_lock;190,8145
    app_pc base_pc;195,8280
    app_pc end_pc;196,8339
    const char *module;module198,8410
    module_digest_t module_md5;203,8599
    app_pc persist_base;205,8656
    ssize_t mod_shift;207,8721
# define COARSE_32_FLAG(214,8902
# define COARSE_32_FLAG(216,8996
typedef struct _pending_freeze_t 243,9742
    bool entrance_stub;244,9777
    bool trace_head;245,9801
    app_pc tag;246,9822
    cache_pc cur_pc;247,9838
    cache_pc link_cti_opnd;248,9859
    bool elide_ubr;249,9930
    struct _pending_freeze_t *next;next250,10003
} pending_freeze_t;251,10039
struct _coarse_freeze_info_t 253,10060
    coarse_info_t *src_info;src_info254,10091
    coarse_info_t *dst_info;dst_info255,10120
    cache_pc cache_start_pc;256,10149
    cache_pc cache_cur_pc;257,10178
    cache_pc stubs_start_pc;258,10205
    cache_pc stubs_cur_pc;259,10234
    bool unlink;260,10261
    pending_freeze_t *pending;pending261,10278
    size_t app_code_size;264,10391
    uint num_cbr;265,10417
    uint num_jmp;266,10435
    uint num_call;267,10453
    uint num_indbr;268,10472
    uint num_elisions;270,10516
    uint added_fallthrough;272,10589
    uint added_indbr_mangle;273,10617
    uint added_indbr_stub;274,10701
    uint added_jecxz_mangle;275,10760
    PERSISTENT_CACHE_MAGIC 319,11928
    PERSISTENT_CACHE_MAGIC = 0x244f4952,x244f4952319,11928
    PERSISTENT_CACHE_VERSION 320,11980
    PERSCACHE_X86_32 326,12139
    PERSCACHE_X86_32             = 0x00000001,x00000001326,12139
    PERSCACHE_X86_64 327,12186
    PERSCACHE_X86_64             = 0x00000002,x00000002327,12186
    PERSCACHE_SEEN_BORLAND_SEH 335,12539
    PERSCACHE_SEEN_BORLAND_SEH   = 0x00000004,x00000004335,12539
    PERSCACHE_ELIDED_UBR 338,12629
    PERSCACHE_ELIDED_UBR         = 0x00000008,x00000008338,12629
    PERSCACHE_SUPPORT_RAC 341,12740
    PERSCACHE_SUPPORT_RAC        = 0x00000010,x00000010341,12740
    PERSCACHE_SUPPORT_RCT 342,12787
    PERSCACHE_SUPPORT_RCT        = 0x00000020,x00000020342,12787
    PERSCACHE_ENTIRE_MODULE_RCT 345,12897
    PERSCACHE_ENTIRE_MODULE_RCT  = 0x00000040,x00000040345,12897
    PERSCACHE_SUPPORT_TRACES 348,12990
    PERSCACHE_SUPPORT_TRACES     = 0x00000080,x00000080348,12990
    PERSCACHE_MAP_RW_SEPARATE 351,13108
    PERSCACHE_MAP_RW_SEPARATE    = 0x00000100,x00000100351,13108
    PERSCACHE_EXEMPTION_OPTIONS 354,13227
    PERSCACHE_EXEMPTION_OPTIONS  = 0x00000200,x00000200354,13227
    PERSCACHE_CODE_INVALID 362,13620
    PERSCACHE_CODE_INVALID       = 0x00000400,x00000400362,13620
    PERSCACHE_MODULE_MD5_SHORT 368,13761
    PERSCACHE_MODULE_MD5_SHORT       = 0x00000001,x00000001368,13761
    PERSCACHE_MODULE_MD5_COMPLETE 369,13834
    PERSCACHE_MODULE_MD5_COMPLETE    = 0x00000002,x00000002369,13834
    PERSCACHE_GENFILE_MD5_SHORT 371,13953
    PERSCACHE_GENFILE_MD5_SHORT      = 0x00000004,x00000004371,13953
    PERSCACHE_GENFILE_MD5_COMPLETE 372,14017
    PERSCACHE_GENFILE_MD5_COMPLETE   = 0x00000008,x00000008372,14017
    PERSCACHE_MODULE_MD5_AT_LOAD 376,14221
    PERSCACHE_MODULE_MD5_AT_LOAD     = 0x00000010,x00000010376,14221
typedef struct _persisted_module_info_t 384,14508
    app_pc base;385,14550
    uint checksum;386,14604
    uint timestamp;387,14623
    uint64 image_size;391,14778
    uint64 code_size;392,14801
    uint64 file_version;393,14875
    module_digest_t module_md5;402,15240
} persisted_module_info_t;403,15272
typedef struct _persisted_footer_t 409,15469
    module_digest_t self_md5;414,15715
    uint magic;415,15791
} persisted_footer_t;416,15807
typedef struct _coarse_persisted_info_t 438,17026
    uint magic;442,17153
    uint version;443,17169
    size_t header_len;449,17367
    size_t data_len;450,17390
    uint flags;455,17527
    uint build_number;458,17570
    persisted_module_info_t modinfo;461,17635
    size_t start_offs;464,17749
    size_t end_offs;465,17772
    uint tls_offs_base;468,17870
    size_t instrument_rw_len;474,18051
    size_t stubs_len;477,18111
    size_t ibl_jmp_prefix_len;478,18133
    size_t ibl_call_prefix_len;479,18164
    size_t ibl_ret_prefix_len;480,18196
    size_t trace_head_return_prefix_len;481,18227
    size_t fcache_return_prefix_len;482,18268
    size_t cache_len;485,18334
    size_t post_cache_pad_len;486,18356
    size_t pad_len;488,18504
    size_t instrument_rx_len;489,18563
    size_t view_pad_len;490,18593
    size_t stub_htable_len;493,18695
    size_t cache_htable_len;494,18723
    size_t rct_htable_len;495,18752
    size_t rac_htable_len;496,18779
    size_t reloc_len;497,18806
    size_t hotp_patch_list_len;499,18858
    size_t instrument_ro_len;501,18945
    size_t option_string_len;504,19054
} coarse_persisted_info_t;587,22089

instrlist.c,1118
# undef ASSERT 47,2118
# undef ASSERT_TRUNCATE48,2189
# undef ASSERT_BITFIELD_TRUNCATE49,2213
# undef ASSERT_NOT_REACHED50,2246
# define ASSERT 51,2273
# define ASSERT_TRUNCATE 52,2333
# define ASSERT_BITFIELD_TRUNCATE 53,2402
# define ASSERT_NOT_REACHED 54,2480
instrlist_create(59,2615
instrlist_init(70,2969
instrlist_destroy(83,3305
instrlist_clear(92,3607
instrlist_clear_and_destroy(103,3912
instrlist_set_fall_through_target(116,4330
instrlist_get_fall_through_target(123,4453
instrlist_set_return_target(134,4753
instrlist_get_return_target(141,4870
instrlist_set_translation_target(151,5122
instrlist_get_translation_target(157,5234
instrlist_set_our_mangling(163,5335
instrlist_get_our_mangling(172,5515
instrlist_first(179,5668
pk_test_func(186,5777
instrlist_last(192,5846
check_translation(198,5929
instrlist_append(209,6297
instrlist_prepend(235,6965
instrlist_preinsert(262,7644
instrlist_postinsert(297,8640
instrlist_replace(334,9696
instrlist_remove(353,10282
instrlist_clone(370,10721
instrlist_prepend_instrlist(431,12945
void instrlist_append_instrlist(442,13260

optionsx.h,1884
#define OPTION_DEFAULT(71,3068
#define OPTION_NAME_DEFAULT(75,3259
#define OPTION_NAME(79,3446
#define OPTION(82,3590
#define PC_OPTION_DEFAULT(85,3712
#define PC_OPTION(89,3905
#define PCL_OPTION_DEFAULT(92,4031
#define PCL_OPTION(96,4223
#define DYNAMIC_OPTION_DEFAULT(101,4470
#define DYNAMIC_OPTION(104,4631
#define DYNAMIC_PCL_OPTION_DEFAULT(107,4761
#define DYNAMIC_PCL_OPTION(110,4924
#define OPTION_ALIAS(115,5237
#define OPTION_DEFAULT_INTERNAL(125,5967
#define OPTION_NAME_INTERNAL(128,6163
#define OPTION_INTERNAL(131,6362
#define PC_OPTION_DEFAULT_INTERNAL(134,6474
#define PC_OPTION_INTERNAL(137,6676
#define DISABLE_RESET(141,6821
#define REENABLE_RESET(158,7752
#define DISABLE_TRACES(181,9264
#define REENABLE_TRACES(189,9672
#define ENABLE_SECURITY(198,10081
    DYNAMIC_OPTION_DEFAULT(218,11384
    PC_OPTION_INTERNAL(227,11757
    OPTION_DEFAULT(272,14364
#   define DISABLE_PROBE_API(447,23072
    PC_OPTION_INTERNAL(485,24803
    OPTION_DEFAULT_INTERNAL(714,37736
    OPTION_DEFAULT_INTERNAL(781,41700
    OPTION_DEFAULT(847,45016
    OPTION_DEFAULT(918,48790
    OPTION_DEFAULT(1235,66867
    OPTION_DEFAULT_INTERNAL(1245,67242
    DYNAMIC_PCL_OPTION(1534,84323
    DYNAMIC_OPTION(1540,84761
    DYNAMIC_OPTION(1549,85370
    DYNAMIC_OPTION_DEFAULT(1554,85738
    OPTION_DEFAULT(1802,101506
#   define ENABLE_COARSE_UNITS(1883,107296
    OPTION_ALIAS(1899,108247
    OPTION_DEFAULT(2085,118906
    OPTION_DEFAULT(2185,125580
    OPTION_DEFAULT(2481,141139
    OPTION_DEFAULT_INTERNAL(2580,146878
    OPTION_DEFAULT_INTERNAL(2614,148820
#define OPTIMIZE_OPTION(2644,150199
# undef OPTIMIZE_OPTION2683,151809
    DYNAMIC_OPTION_DEFAULT(2743,154829
#undef OPTION2826,159034
#undef OPTION_NAME2827,159048
#undef OPTION_DEFAULT2828,159067
#undef DYNAMIC_OPTION2830,159090
#undef DYNAMIC_OPTION_DEFAULT2831,159112

os_shared.h,11012
#define OS_SHARED_H41,1899
enum {VM_ALLOCATION_BOUNDARY VM_ALLOCATION_BOUNDARY43,1920
    HEAP_ERROR_SUCCESS 85,3468
    HEAP_ERROR_CANT_RESERVE_IN_REGION 87,3587
    HEAP_ERROR_NOT_AT_PREFERRED 89,3721
typedef uint heap_error_code_t;91,3761
    RAW_ALLOC_RESERVE_ONLY 97,3891
    RAW_ALLOC_RESERVE_ONLY = 0x0001,x000197,3891
    RAW_ALLOC_COMMIT_ONLY 98,3928
    RAW_ALLOC_COMMIT_ONLY  = 0x0002,x000298,3928
    RAW_ALLOC_32BIT 101,3984
    RAW_ALLOC_32BIT        = 0x0004,x0004101,3984
    DR_STATE_PEB 211,8133
    DR_STATE_PEB              = 0x0001,x0001211,8133
    DR_STATE_TEB_MISC 212,8205
    DR_STATE_TEB_MISC         = 0x0002,x0002212,8205
    DR_STATE_STACK_BOUNDS 213,8286
    DR_STATE_STACK_BOUNDS     = 0x0004,x0004213,8286
    DR_STATE_ALL 215,8377
    DR_STATE_ALL              =     ~0,215,8377
} dr_state_flags_t;216,8443
    TERMINATE_PROCESS 247,9129
    TERMINATE_PROCESS = 0x1,x1247,9129
    TERMINATE_THREAD 248,9158
    TERMINATE_THREAD  = 0x2,x2248,9158
    TERMINATE_CLEANUP 260,9893
    TERMINATE_CLEANUP = 0x4 x4260,9893
} terminate_flags_t;261,9977
    ILLEGAL_INSTRUCTION_EXCEPTION,267,10172
    UNREADABLE_MEMORY_EXECUTION_EXCEPTION,268,10207
    IN_PAGE_ERROR_EXCEPTION,269,10250
} exception_type_t;270,10279
    DUMPCORE_INTERNAL_EXCEPTION 278,10533
    DUMPCORE_INTERNAL_EXCEPTION = 0x0001,x0001278,10533
    DUMPCORE_SECURITY_VIOLATION 279,10575
    DUMPCORE_SECURITY_VIOLATION = 0x0002,x0002279,10575
    DUMPCORE_DEADLOCK 280,10617
    DUMPCORE_DEADLOCK           = 0x0004,x0004280,10617
    DUMPCORE_ASSERTION 281,10659
    DUMPCORE_ASSERTION          = 0x0008,x0008281,10659
    DUMPCORE_FATAL_USAGE_ERROR 282,10701
    DUMPCORE_FATAL_USAGE_ERROR  = 0x0010,x0010282,10701
    DUMPCORE_CLIENT_EXCEPTION 284,10767
    DUMPCORE_CLIENT_EXCEPTION   = 0x0020,x0020284,10767
    DUMPCORE_TIMEOUT 286,10816
    DUMPCORE_TIMEOUT            = 0x0040,x0040286,10816
    DUMPCORE_CURIOSITY 287,10858
    DUMPCORE_CURIOSITY          = 0x0080,x0080287,10858
    DUMPCORE_HOTP_FAILURE 290,11052
    DUMPCORE_HOTP_FAILURE       = 0x0100,x0100290,11052
    DUMPCORE_OUT_OF_MEM 292,11101
    DUMPCORE_OUT_OF_MEM         = 0x0200,x0200292,11101
    DUMPCORE_OUT_OF_MEM_SILENT 293,11143
    DUMPCORE_OUT_OF_MEM_SILENT  = 0x0400,x0400293,11143
    DUMPCORE_INCLUDE_STACKDUMP 295,11230
    DUMPCORE_INCLUDE_STACKDUMP  = 0x0800,x0800295,11230
    DUMPCORE_WAIT_FOR_DEBUGGER 296,11272
    DUMPCORE_WAIT_FOR_DEBUGGER  = 0x1000,x1000296,11272
    DUMPCORE_HOTP_DETECTION 299,11418
    DUMPCORE_HOTP_DETECTION     = 0x2000,x2000299,11418
    DUMPCORE_HOTP_PROTECTION 300,11493
    DUMPCORE_HOTP_PROTECTION    = 0x4000,x4000300,11493
    DUMPCORE_DR_ABORT 303,11599
    DUMPCORE_DR_ABORT           = 0x8000,x8000303,11599
    DUMPCORE_FORGE_ILLEGAL_INST 307,11793
    DUMPCORE_FORGE_ILLEGAL_INST = 0x10000,x10000307,11793
    DUMPCORE_FORGE_UNREAD_EXEC 308,11836
    DUMPCORE_FORGE_UNREAD_EXEC  = 0x20000,x20000308,11836
    DUMPCORE_APP_EXCEPTION 314,12244
    DUMPCORE_APP_EXCEPTION      = 0x40000,x40000314,12244
    DUMPCORE_TRY_EXCEPT 315,12287
    DUMPCORE_TRY_EXCEPT         = 0x80000,x80000315,12287
    DUMPCORE_UNSUPPORTED_APP 316,12367
    DUMPCORE_UNSUPPORTED_APP    = 0x100000,x100000316,12367
    DUMPCORE_OPTION_PAUSE 319,12424
    DUMPCORE_OPTION_PAUSE       = DUMPCORE_WAIT_FOR_DEBUGGER 319,12424
                                  DUMPCORE_INTERNAL_EXCEPTION 320,12488
                                  DUMPCORE_SECURITY_VIOLATION 321,12552
                                  DUMPCORE_DEADLOCK 322,12616
                                  DUMPCORE_ASSERTION 323,12680
                                  DUMPCORE_FATAL_USAGE_ERROR 324,12744
                                  DUMPCORE_CLIENT_EXCEPTION 326,12833
                                  DUMPCORE_UNSUPPORTED_APP 328,12905
                                  DUMPCORE_TIMEOUT 329,12969
                                  DUMPCORE_CURIOSITY 330,13033
                                  DUMPCORE_DR_ABORT 332,13122
                                  DUMPCORE_OUT_OF_MEM 334,13194
                                  DUMPCORE_OUT_OF_MEM_SILENT,335,13258
typedef void * dr_auxlib_handle_t;356,13898
typedef void (*dr_auxlib_routine_ptr_t)dr_auxlib_routine_ptr_t358,13998
typedef uint64 dr_auxlib64_handle_t;364,14235
typedef uint64 dr_auxlib64_routine_ptr_t;366,14344
typedef void * shlib_handle_t;375,14638
typedef void (*shlib_routine_ptr_t)shlib_routine_ptr_t376,14669
typedef uint64 dr_auxlib64_handle_t;381,14863
typedef uint64 dr_auxlib64_routine_ptr_t;382,14900
#define DR_MEMPROT_NONE 405,15658
#define DR_MEMPROT_READ 406,15735
#define DR_MEMPROT_WRITE 407,15790
#define DR_MEMPROT_EXEC 408,15846
# define DR_MEMPROT_GUARD 410,15919
#define DR_MEMPROT_PRETEND_WRITE 420,16411
    DR_MEMTYPE_FREE,426,16530
    DR_MEMTYPE_IMAGE,427,16588
    DR_MEMTYPE_DATA,428,16652
    DR_MEMTYPE_RESERVED,429,16716
} dr_mem_type_t;430,16798
typedef struct _dr_mem_info_t 435,16885
    byte          *base_pc;base_pc437,16962
    size_t        size;439,17016
    uint          prot;441,17093
    dr_mem_type_t type;443,17143
} dr_mem_info_t;444,17167
#define MEMPROT_NONE 448,17210
#define MEMPROT_READ 449,17248
#define MEMPROT_WRITE 450,17286
#define MEMPROT_EXEC 451,17325
# define MEMPROT_GUARD 453,17378
#define SAFE_READ_VAL(469,18099
    SELFPROT_DATA_RARE 527,20826
    SELFPROT_DATA_RARE   = 0x001,x001527,20826
    SELFPROT_DATA_FREQ 531,21018
    SELFPROT_DATA_FREQ   = 0x002,x002531,21018
    SELFPROT_DATA_CXTSW 535,21173
    SELFPROT_DATA_CXTSW  = 0x004,x004535,21173
    SELFPROT_GLOBAL 543,21481
    SELFPROT_GLOBAL      = 0x008,x008543,21481
    SELFPROT_DCONTEXT 544,21515
    SELFPROT_DCONTEXT    = 0x010,x010544,21515
    SELFPROT_LOCAL 546,21681
    SELFPROT_LOCAL       = 0x020,x020546,21681
    SELFPROT_CACHE 547,21715
    SELFPROT_CACHE       = 0x040,x040547,21715
    SELFPROT_STACK 548,21799
    SELFPROT_STACK       = 0x080,x080548,21799
    SELFPROT_GENCODE 551,22047
    SELFPROT_GENCODE     = 0x100,x100551,22047
    SELFPROT_ON_CXT_SWITCH 562,22513
    SELFPROT_ON_CXT_SWITCH = (SELFPROT_DATA_CXTSW 562,22513
    SELFPROT_ON_CXT_SWITCH = (SELFPROT_DATA_CXTSW | SELFPROT_GLOBAL562,22513
                              | SELFPROT_DATA_FREQ)565,22736
    SELFPROT_ANY_DATA_SECTION 566,22789
    SELFPROT_ANY_DATA_SECTION = (SELFPROT_DATA_RARE 566,22789
    SELFPROT_ANY_DATA_SECTION = (SELFPROT_DATA_RARE | SELFPROT_DATA_FREQ 566,22789
                                 SELFPROT_DATA_CXTSW)567,22864
    DATASEC_NEVER_PROT 574,23019
    DATASEC_RARELY_PROT,575,23047
    DATASEC_FREQ_PROT,576,23072
    DATASEC_CXTSW_PROT,577,23095
    DATASEC_NUM,578,23119
#define DATASEC_WRITABLE(591,23484
#define NEVER_PROTECTED_SECTION 598,23838
#define RARELY_PROTECTED_SECTION 599,23882
#define FREQ_PROTECTED_SECTION 600,23923
#define CXTSW_PROTECTED_SECTION 601,23967
#define DATASEC_PROTECTED(607,24184
#define DECLARE_FREQPROT_VAR(613,24449
#define DECLARE_CXTSWPROT_VAR(618,24666
#define DECLARE_NEVERPROT_VAR(623,24886
#define SELF_PROTECT_ON_CXT_SWITCH 628,25106
#define SELF_PROTECT_LOCAL(633,25330
#define SELF_PROTECT_GLOBAL(638,25507
#define ASSERT_LOCAL_HEAP_PROTECTED(643,25683
#define ASSERT_LOCAL_HEAP_UNPROTECTED(646,25841
#define SELF_PROTECT_DATASEC(650,26003
#define SELF_UNPROTECT_DATASEC(654,26181
#define OS_OPEN_READ 681,27082
#define OS_OPEN_WRITE 682,27115
#define OS_OPEN_APPEND 683,27148
#define OS_OPEN_REQUIRE_NEW 684,27221
#define OS_EXECUTE 685,27254
#define OS_SHARE_DELETE 686,27323
#define OS_OPEN_FORCE_OWNER 687,27392
#define OS_OPEN_ALLOW_LARGE 688,27461
#define OS_OPEN_CLOSE_ON_FORK 689,27532
#define OS_OPEN_RESERVED 690,27593
    CREATE_DIR_ALLOW_EXISTING 705,28322
    CREATE_DIR_ALLOW_EXISTING = 0x0,x0705,28322
    CREATE_DIR_REQUIRE_NEW 711,28603
    CREATE_DIR_REQUIRE_NEW    = 0x1,x1711,28603
    CREATE_DIR_FORCE_OWNER 712,28640
    CREATE_DIR_FORCE_OWNER    = 0x2,x2712,28640
} create_directory_flags_t;713,28677
#define OS_SEEK_SET 726,29270
#define OS_SEEK_CUR 727,29313
#define OS_SEEK_END 728,29364
    STACK_EXECUTION_VIOLATION 785,31858
    HEAP_EXECUTION_VIOLATION 786,31900
    RETURN_TARGET_VIOLATION 787,31942
    RETURN_DIRECT_RCT_VIOLATION 788,31985
    INDIRECT_CALL_RCT_VIOLATION 789,32055
    INDIRECT_JUMP_RCT_VIOLATION 790,32097
    HOT_PATCH_DETECTOR_VIOLATION 792,32170
    HOT_PATCH_PROTECTOR_VIOLATION 793,32212
    HOT_PATCH_FAILURE 795,32335
    ATTACK_SIMULATION_VIOLATION 798,32404
    ATTACK_SIM_NUDGE_VIOLATION 799,32447
    ASLR_TARGET_VIOLATION 802,32538
    GBOP_SOURCE_VIOLATION 804,32593
    PROCESS_CONTROL_VIOLATION 807,32677
    APC_THREAD_SHELLCODE_VIOLATION 809,32748
    INVALID_VIOLATION 811,32917
    ALLOWING_OK 816,33162
    ALLOWING_BAD 817,33204
    NO_VIOLATION_BAD_INTERNAL_STATE 819,33257
    NO_VIOLATION_OK_INTERNAL_STATE 820,33299
} security_violation_t;821,33340
    INITIAL_STACK_EMPTY 833,33770
    INITIAL_STACK_BOTTOM_REACHED 834,33812
    INITIAL_STACK_BOTTOM_NOT_REACHED 835,33854
} initial_call_stack_status_t;836,33895
typedef HANDLE event_t;855,34594
typedef struct linux_event_t *event_t;event_t857,34624
# define POST_SYSCALL_PC(911,36402
# define POST_SYSCALL_PC(918,36867
    AFTER_INTERCEPT_LET_GO,925,37052
    AFTER_INTERCEPT_LET_GO_ALT_DYN,926,37080
    AFTER_INTERCEPT_TAKE_OVER,930,37339
    AFTER_INTERCEPT_DYNAMIC_DECISION,931,37370
    AFTER_INTERCEPT_TAKE_OVER_SINGLE_SHOT,934,37513
} after_intercept_action_t;935,37598
    void *callee_arg;callee_arg945,37979
    app_pc start_pc;946,38053
    priv_mcontext_t mc;947,38118
} app_state_at_intercept_t;948,38171
typedef after_intercept_action_t intercept_function_t(952,38324
    JMP_REL32_OPCODE 958,38567
    JMP_REL32_OPCODE  = 0xe9,xe9958,38567
    JMP_REL32_SIZE 959,38597
    CALL_REL32_OPCODE 960,38667
    CALL_REL32_OPCODE = 0xe8,xe8960,38667
    JMP_ABS_IND64_OPCODE 962,38709
    JMP_ABS_IND64_OPCODE    = 0xff,xff962,38709
    JMP_ABS_IND64_SIZE 963,38745
    JMP_ABS_MEM_IND64_MODRM 964,38825
    JMP_ABS_MEM_IND64_MODRM = 0x25,x25964,38825
#define INJECT_LOCATION_IS_LDR(988,39977
#define INJECT_LOCATION_IS_LDR_NON_DEFAULT(989,40049
    INJECT_LOCATION_Invalid 991,40139
    INJECT_LOCATION_LdrpLoadDll 992,40207
    INJECT_LOCATION_LdrpLoadImportModule 993,40272
    INJECT_LOCATION_LdrCustom 994,40336
    INJECT_LOCATION_LdrLoadDll 995,40407
    INJECT_LOCATION_LdrDefault 996,40468
    INJECT_LOCATION_KiUserApc 1004,40973
    INJECT_LOCATION_KiUserException 1005,41015
    INJECT_LOCATION_MAX 1006,41088
    INJECT_LOCATION_MAX = INJECT_LOCATION_KiUserException,1006,41088
#define LANDING_PAD_AREA_SIZE 1038,42115
#define MAX_HOOK_DISPLACED_LENGTH 1039,42155
# define LANDING_PAD_SIZE 1044,42403
# define LANDING_PAD_SIZE 1049,42617

fcache.c,8727
#define FCACHE_OPTION(69,2920
#define MAX_SINGLE_MULTIPLE 87,3832
#define MIN_EMPTY_HOLE(117,5192
#define MIN_UNIT_END_HOLE(127,5632
#define START_PC_ALIGNMENT 130,5744
#define SLOT_ALIGNMENT(138,6129
typedef struct _live_header_t 148,6643
    fragment_t *f;f150,6739
} live_header_t;151,6758
#define HEADER_SIZE(156,6926
#define HEADER_SIZE_FROM_CACHE(158,7021
typedef struct _empty_slot_t 186,8282
    cache_pc  start_pc;187,8313
    uint      flags;191,8515
    fragment_t  *next_fcache;next_fcache192,8536
    fragment_t  *prev_fcache;prev_fcache193,8614
    uint      fcache_size;194,8692
} empty_slot_t;197,8926
#define FRAG_EMPTY(201,9018
#define FRAG_START(203,9080
#define FRAG_START_ASSIGN(210,9437
#define FRAG_START_PADDING(219,9795
#define FRAG_HDR_START(226,10257
#define FRAG_SIZE(228,10341
#define FRAG_SIZE_ASSIGN(236,10754
#define FIFO_NEXT(248,11677
#define FIFO_NEXT_ASSIGN(252,11874
#define FIFO_PREV(261,12160
#define FIFO_PREV_ASSIGN(265,12357
#define FRAG_TAG(274,12643
# define FRAG_ID(278,12769
#define FIFO_UNIT(281,12853
#define USE_FIFO(288,13140
#define USE_FREE_LIST(289,13193
#define USE_FIFO_FOR_CACHE(291,13318
#define USE_FREE_LIST_FOR_CACHE(292,13366
static const uint FREE_LIST_SIZES[FREE_LIST_SIZES298,13631
#define FREE_LIST_SIZES_NUM 315,14407
typedef struct _free_list_header_t 336,15383
    struct _free_list_header_t *next;next337,15420
    ushort flags;350,16242
    ushort size;351,16260
    struct _free_list_header_t *prev;prev352,16277
} free_list_header_t;353,16315
typedef struct _free_list_footer_t 359,16538
    ushort size;360,16575
} free_list_footer_t;361,16592
#define MAX_FREE_ENTRY_SIZE 363,16615
#define FRAG_IS_FREE_LIST(369,16859
#define FRAG_NEXT_SLOT(374,17079
#define FRAG_NEXT_FREE(377,17207
#define MIN_FCACHE_SLOT_SIZE(384,17550
#define UNIT_RESERVED_SIZE(392,17782
typedef struct _fcache_unit_t 394,17862
    cache_pc start_pc;395,17894
    cache_pc end_pc;396,17963
    cache_pc cur_pc;397,18045
    cache_pc reserved_end_pc;398,18120
    size_t size;399,18193
    bool full;400,18273
    struct _fcache *cache;cache401,18349
    dcontext_t *dcontext;dcontext403,18465
    bool writable;405,18498
    bool was_trace;410,18717
    bool was_shared;411,18737
    profile_t *profile;profile412,18758
    bool pending_free;414,18789
    bool pending_flush;416,18884
    uint flushtime;418,18980
    struct _fcache_unit_t *next_global;next_global420,19139
    struct _fcache_unit_t *prev_global;prev_global421,19208
    struct _fcache_unit_t *next_local;next_local422,19277
} fcache_unit_t;423,19356
    HISTOGRAM_GRANULARITY 428,19431
    HISTOGRAM_MAX_SIZE 429,19462
typedef struct _fcache 437,19668
    bool is_trace:is_trace439,19766
    bool is_shared:is_shared440,19833
    bool is_local:is_local447,20097
    bool is_coarse:is_coarse450,20242
    fragment_t *fifo;fifo451,20264
    fcache_unit_t *units;units454,20488
    size_t size;457,20688
    mutex_t lock;462,20877
    const char *name;name465,20909
    bool consistent;466,20931
    coarse_info_t *coarse_info;coarse_info470,21094
    uint max_size;478,21446
    uint max_unit_size;479,21504
    uint max_quadrupled_unit_size;480,21528
    uint free_upgrade_size;481,21563
    uint init_unit_size;482,21591
    bool finite_cache;483,21616
    uint regen_param;484,21639
    uint replace_param;485,21661
    uint      num_regenerated;488,21722
    uint      num_replaced;489,21753
    int      wset_check;493,21973
    bool     record_wset;497,22120
    free_list_header_t *free_list[free_list499,22147
    uint free_stats_freed[free_stats_freed501,22216
    uint free_stats_reused[free_stats_reused502,22282
    uint free_stats_coalesced[free_stats_coalesced503,22349
    uint free_stats_split[free_stats_split504,22419
    uint free_stats_charge[free_stats_charge505,22498
} fcache_t;510,22769
typedef struct _fcache_thread_units_t 515,22862
    fcache_t *bb;bb516,22902
    fcache_t *trace;trace517,22948
    cache_pc pending_unmap_pc;519,23048
    size_t pending_unmap_size;520,23079
    bool pending_flush;522,23174
} fcache_thread_units_t;523,23198
#define ALLOC_DC(525,23224
#define PROTECT_CACHE(531,23477
#define CACHE_PROTECTED(537,23747
typedef struct _fcache_list_t 544,23994
    fcache_unit_t *units;units546,24080
    fcache_unit_t *dead;dead547,24152
    uint num_dead;551,24389
    fcache_unit_t *units_to_flush;units_to_flush559,24719
    fcache_unit_t *units_to_free;units_to_free563,24897
    fcache_unit_t *units_to_free_tail;units_to_free_tail564,24931
} fcache_list_t;565,24970
static fcache_list_t *allunits;allunits568,25037
static fcache_t *shared_cache_bb;shared_cache_bb574,25284
static fcache_t *shared_cache_trace;shared_cache_trace575,25318
vm_area_vector_t *fcache_unit_areas;fcache_unit_areas584,25703
    CACHE_BB 602,26506
    CACHE_TRACE,603,26524
    CACHE_NUM_TYPES,604,26541
#define STATS_FCACHE_ADD(609,26707
#define STATS_FCACHE_SUB(623,27406
#define STATS_FCACHE_MAX(626,27507
#define CHECK_PARAMS(666,28971
#define CHECK_WSET_PARAM(711,32318
fcache_check_option_compatibility(740,34437
fcache_reset_init(812,37781
fcache_init(846,38975
fcache_unit_profile_stop(878,40061
remove_unit_from_cache(912,41077
fcache_really_free_unit(932,41763
fcache_stats_exit(968,42998
fcache_reset_free(1001,44177
fcache_exit(1063,46196
fcache_profile_exit(1098,47173
fcache_lookup_unit(1114,47534
fcache_fragment_pclookup(1123,47836
fcache_pc_in_live_unit(1185,50100
fcache_is_writable(1203,50582
fcache_change_fragment_protection(1214,50832
in_fcache(1255,52330
fcache_create_unit(1266,52610
fcache_free_unit(1399,57405
#define FCACHE_GUARDED(1471,60284
#define SET_CACHE_PARAMS(1477,60583
fcache_cache_init(1494,61651
fcache_cache_free(1566,64612
fcache_free_list_consistency(1609,66021
fcache_cache_stats(1685,69280
get_histogram_bucket(1755,72344
fcache_shift_fragments(1766,72642
cache_extend_commitment(1848,76021
fcache_increase_size(1872,76991
fcache_thread_reset_init(2072,85723
fcache_thread_init(2078,85798
fragment_lookup_deleted(2100,86597
fragment_lookup_cache_deleted(2115,87148
fcache_thread_exit_stats(2138,87975
fcache_thread_reset_free(2151,88329
fcache_thread_exit(2175,89192
print_fifo(2188,89628
verify_fifo(2202,90033
fifo_append(2229,90927
fifo_remove(2250,91617
fifo_prepend_empty(2279,92635
check_regen_replace_ratio(2340,95254
extend_unit_end(2432,99607
try_for_more_space(2476,101336
place_fragment(2647,109906
removed_fragment_stats(2695,112075
force_fragment_from_cache(2738,113785
replace_fragments(2757,114499
replace_fifo(2868,118740
find_free_list_bucket(2891,119477
free_list_footer_from_header(2902,119804
free_list_header_from_footer(2908,119986
remove_from_free_list(2914,120152
add_to_free_list(2943,121210
find_free_list_slot(3101,128612
add_fragment_common(3233,133900
fcache_shift_start_pc(3336,138023
fcache_return_extra_space(3383,139485
get_cache_for_new_fragment(3527,146044
fcache_add_fragment(3614,149309
fcache_remove_fragment(3718,153366
get_dcontext_for_fragment(3762,154959
fcache_is_flush_pending(3783,155751
append_units_to_free_list(3793,156034
chain_fragments_for_flush(3832,157403
fcache_flush_pending_units(3942,162331
fcache_free_pending_units(4050,166556
fcache_mark_units_for_free(4083,167834
fcache_flush_all_caches(4114,168975
fcache_reset_all_caches_proactively(4162,171200
schedule_reset(4399,182038
fcache_reset_cache(4412,182377
fcache_low_on_memory(4502,185888
get_fcache_coarse_info(4609,190646
fcache_coarse_cache_delete(4620,190995
coarse_frozen_cache_size(4641,191834
fcache_coarse_init_frozen(4662,192529
fcache_coarse_set_info(4683,193462
cache_pc get_initial_shared_coarse_cache_start_pc(4694,193717
cache_pc get_initial_shared_coarse_cache_end_pc(4699,193824
cache_pc get_initial_shared_coarse_cache_cur_pc(4703,193926
cache_pc get_initial_shared_cache_start_pc(4707,194028
cache_pc get_initial_shared_cache_end_pc(4711,194120
cache_pc get_initial_shared_cache_cur_pc(4715,194208
cache_pc get_initial_private_cache_start_pc(4719,194296
cache_pc get_initial_private_cache_end_pc(4723,194390
cache_pc get_initial_private_cache_cur_pc(4727,194480
const char* get_cache_name(4735,194655
cache_pc get_last_trace_cache_start_pc(4739,194712
cache_pc get_last_trace_cache_end_pc(4743,194785
cache_pc get_last_trace_cache_cur_pc(4747,194854
int is_last_trace_cache_resized(4751,194923
cache_pc get_shared_coarse_cache_prev_end_pc(4763,195121
cache_pc get_shared_cache_prev_end_pc(4767,195217
cache_pc get_private_cache_prev_end_pc(4771,195299

dispatch.h,286
#define _DISPATCH_H_ 40,1905
#define NO_HOOK 57,2341
#define HOOK_ENABLED_HELPER 59,2382
#define HOOK_ENABLED 61,2438
#define ENTER_DR_HOOK 63,2522
#define EXIT_DR_HOOK 64,2590
#define ENTERING_DR(66,2658
#define EXITING_DR(71,2769
#define BACK_TO_NATIVE_AFTER_SYSCALL 78,2955

hashtablex.h,2001
#define EXPANDKEY(151,6018
#define HTNAME(152,6067
#define KEY_STRING 153,6124
#define ENTRY_IS_REAL(155,6164
# define _IFLOOKUP(159,6299
# define IFLOOKUP_ELSE(160,6325
# define _IFLOOKUP(162,6363
# define IFLOOKUP_ELSE(163,6399
# define TAGS_ARE_EQUAL(167,6462
typedef struct HTNAME(_,NAME_KEY,_table_t)176,6717
HTNAME(309,12182
HTNAME(326,12750
HTNAME(336,13064
HTNAME(531,21906
HTNAME(564,23283
HTNAME(576,23711
HTNAME(598,24549
HTNAME(643,26374
HTNAME(709,29484
HTNAME(771,31745
HTNAME(787,32271
HTNAME(939,39504
HTNAME(1230,52556
HTNAME(1254,53528
HTNAME(1276,54545
HTNAME(1364,58622
HTNAME(1388,59593
HTNAME(1409,60290
HTNAME(1445,61575
HTNAME(1494,63242
HTNAME(1552,65648
HTNAME(1636,68943
HTNAME(1685,70811
HTNAME(1719,72029
HTNAME(1871,77797
HTNAME(1966,81612
HTNAME(1981,82108
HTNAME(2041,84532
HTNAME(2059,85328
HTNAME(2079,85925
HTNAME(2120,87450
HTNAME(2149,88573
HTNAME(2183,90410
HTNAME(2214,91819
#undef NAME_KEY2253,93465
#undef ENTRY_TYPE2254,93481
#undef AUX_ENTRY_TYPE2255,93499
#undef CUSTOM_FIELDS2256,93521
#undef ENTRY_TAG2258,93543
#undef ENTRY_IS_EMPTY2259,93560
#undef ENTRY_IS_SENTINEL2260,93582
#undef ENTRY_IS_INVALID2261,93607
#undef ENTRIES_ARE_EQUAL2262,93631
#undef ENTRY_EMPTY2263,93656
#undef ENTRY_SENTINEL2264,93675
#undef TAGS_ARE_EQUAL2265,93697
#undef AUX_ENTRY_TAG2267,93720
#undef AUX_ENTRY_IS_EMPTY2268,93741
#undef AUX_ENTRY_IS_SENTINEL2269,93767
#undef AUX_ENTRY_IS_INVALID2270,93796
#undef AUX_PAYLOAD_IS_INVALID2271,93824
#undef AUX_ENTRY_SET_TO_SENTINEL2272,93854
#undef AUX_ENTRY_IS_SET_TO_ENTRY2273,93887
#undef AUX_ENTRY_SET_TO_ENTRY2274,93920
#undef AUX_ENTRY_FORMAT_STR2275,93950
#undef AUX_ENTRY_FORMAT_ARGS2276,93978
#undef HASHTABLE_WHICH_HEAP2278,94008
#undef HASHTABLE_USE_LOOKUPTABLE2279,94036
#undef HASHTABLE_ENTRY_STATS2280,94069
#undef HASHTABLE_SUPPORT_PERSISTENCE2281,94098
#undef HTLOCK_RANK2282,94135
#undef _IFLOOKUP2284,94155
#undef IFLOOKUP_ELSE2285,94172

link.h,4173
#define _CORE_LINK_H_ 43,2030
    LINK_DIRECT 68,3105
    LINK_DIRECT          = 0x0001,x000168,3105
    LINK_INDIRECT 69,3140
    LINK_INDIRECT        = 0x0002,x000269,3140
    LINK_RETURN 76,3492
    LINK_RETURN          = 0x0004,x000476,3492
    LINK_CALL 78,3618
    LINK_CALL            = 0x0008,x000878,3618
    LINK_JMP 79,3653
    LINK_JMP             = 0x0010,x001079,3653
    LINK_FAR 82,3751
    LINK_FAR             = 0x0020,x002082,3751
    LINK_TARGET_PREFIX 85,3810
    LINK_TARGET_PREFIX   = 0x0040,x004085,3810
    LINK_TRACE_CMP 91,4030
    LINK_TRACE_CMP       = 0x0080,x008091,4030
    LINK_SPECIAL_EXIT 97,4243
    LINK_SPECIAL_EXIT    = 0x0100,x010097,4243
    LINK_CALLBACK_RETURN 99,4293
    LINK_CALLBACK_RETURN = 0x0200,x020099,4293
    LINK_NI_SYSCALL_INT 102,4421
    LINK_NI_SYSCALL_INT  = 0x0200,x0200102,4421
    LINK_NI_SYSCALL 105,4530
    LINK_NI_SYSCALL      = 0x0400,x0400105,4530
    LINK_FINAL_INSTR_SHARED_FLAG 106,4565
    LINK_FINAL_INSTR_SHARED_FLAG = LINK_NI_SYSCALL,106,4565
    LINK_FRAG_OFFS_AT_END=110,4715
    LINK_FRAG_OFFS_AT_END= 0x0800,x0800110,4715
    LINK_END_OF_LIST 112,4751
    LINK_END_OF_LIST     = 0x1000,x1000112,4751
    LINK_FAKE 114,4787
    LINK_FAKE            = 0x2000,x2000114,4787
    LINK_LINKED 116,4823
    LINK_LINKED          = 0x4000,x4000116,4823
    LINK_SEPARATE_STUB 118,4859
    LINK_SEPARATE_STUB   = 0x8000,x8000118,4859
# define LINK_NI_SYSCALL_ALL 124,4978
# define LINK_NI_SYSCALL_ALL 126,5053
#  define LINKCOUNT_FORMAT_STRING 131,5156
#  define LINKCOUNT_FORMAT_STRING 133,5202
struct _linkstub_t 167,6207
    ushort         flags;168,6228
    ushort         cti_offset;174,6493
    ushort         fixed_stub_offset;177,6602
    linkcount_type_t count;182,6817
typedef struct _common_direct_linkstub_t 188,6912
    linkstub_t       l;189,6955
    linkstub_t       *next_incoming;next_incoming200,7438
    fragment_t       *target_fragment;target_fragment207,7711
} common_direct_linkstub_t;209,7757
typedef struct _direct_linkstub_t 213,7836
    common_direct_linkstub_t cdl;214,7872
    app_pc         target_tag;220,8092
    cache_pc       stub_pc;226,8318
} direct_linkstub_t;227,8346
typedef struct _cbr_fallthrough_linkstub_t 239,8887
    common_direct_linkstub_t cdl;251,9481
} cbr_fallthrough_linkstub_t;252,9515
typedef struct _indirect_linkstub_t 256,9619
    linkstub_t       l;257,9657
} indirect_linkstub_t;258,9681
typedef struct _post_linkstub_t 265,9879
    ushort         fragment_offset;273,10318
    ushort         padding;279,10646
} post_linkstub_t;280,10674
typedef struct _coarse_incoming_t 287,10987
        cache_pc stub_pc;289,11035
        linkstub_t *fine_l;fine_l290,11061
    } in;291,11089
    bool coarse;292,11099
    struct _coarse_incoming_t *next;next293,11116
} coarse_incoming_t;294,11153
#define LINKSTUB_FAKE(297,11251
#define LINKSTUB_DIRECT(299,11362
#define LINKSTUB_NORMAL_DIRECT(300,11422
#define LINKSTUB_INDIRECT(302,11528
#define LINKSTUB_CBR_FALLTHROUGH(304,11629
#define EXIT_IS_CALL(308,11788
#define EXIT_IS_JMP(309,11867
#define EXIT_IS_IND_JMP_PLT(310,11945
#define LINKSTUB_FINAL(312,12020
#define LINKSTUB_COARSE_PROXY(315,12157
#define LINKSTUB_SIZE(319,12308
#define LINKSTUB_NEXT_EXIT(325,12592
#define LINKSTUB_NEXT_INCOMING(332,12820
#define CBR_FALLTHROUGH_STUB_OFFS(340,13220
#define EXIT_CTI_PC_HELPER(343,13339
#define EXIT_CTI_PC(347,13466
#define EXIT_STUB_PC_HELPER(352,13664
#define EXIT_STUB_PC(356,13800
#define EXIT_TARGET_TAG(363,14130
# define EXIT_FIXED_STUB_PC(370,14418
# define EXIT_TARGETS_SHARED_SYSCALL(374,14529
# define EXIT_TARGETS_SHARED_SYSCALL(378,14682
#define EXIT_HAS_STUB(382,14819
#define EXIT_HAS_LOCAL_STUB(389,15284
# define IS_COARSE_LINKSTUB(512,19200
# define IS_SHARED_SYSCALLS_UNLINKED_LINKSTUB(517,19401
# define IS_SHARED_SYSCALLS_LINKSTUB(522,19631
# define IS_SHARED_SYSCALLS_TRACE_LINKSTUB(526,19854
# define IS_SHARED_SYSCALLS_UNLINKED_LINKSTUB(529,19968
# define IS_SHARED_SYSCALLS_LINKSTUB(530,20023
# define IS_SHARED_SYSCALLS_TRACE_LINKSTUB(531,20069

stats.h,1775
#define STATS_H40,1821
    uint num_self;63,2199
    timestamp_t total_self;82,3050
    timestamp_t total_sub;83,3118
    timestamp_t min_cum;86,3253
    timestamp_t max_cum;87,3332
    timestamp_t total_outliers;88,3410
} kstat_variable_t;90,3570
#define KSTAT_DEF(96,3748
#define KSTAT_SUM(97,3801
#undef KSTAT_SUM99,3894
#undef KSTAT_DEF100,3911
} kstat_variables_t;101,3928
    kstat_variable_t *var;var105,4014
    timestamp_t      self_time;106,4041
    timestamp_t      subpath_time;107,4073
    timestamp_t      outlier_time;108,4108
} kstat_node_t;109,4143
enum {KSTAT_MAX_DEPTH KSTAT_MAX_DEPTH111,4160
    volatile uint depth;115,4256
    timestamp_t last_start_time;116,4316
    timestamp_t last_end_time;117,4349
    kstat_node_t node[node118,4380
} kstat_stack_t;119,4420
    thread_id_t       thread_id;123,4501
    kstat_variables_t vars_kstats;124,4534
    kstat_stack_t     stack_kstats;125,4569
    file_t           outfile_kstats;126,4605
} thread_kstats_t;127,4642
#define KSTAT_THREAD_NO_PV_START(132,4712
#define KSTAT_THREAD_NO_PV_END(137,5032
#define KSTAT_THREAD(143,5227
#define KSTAT_OTHER_THREAD(151,5660
# define KSTAT_TOS_MATCHING(160,6136
#define KSTAT_SERIALIZE_INSTRUCTIONS(166,6461
#  define CORRECT_OUTLIER(174,6810
#  define CORRECT_OUTLIER(179,7015
#define UPDATE_CURRENT_COUNTER(184,7138
#define KSTAT_INTERNAL_DEBUG(200,8087
#define KSTAT_DUMP_STACK(210,8727
#define kstat_start_var(229,9621
#define kstat_switch_var(246,10490
#define kstat_stop_not_matching_var(249,10636
#define kstat_stop_matching_var(256,11021
#define kstat_tos_matching_var(264,11413
#define kstat_stop_not_propagated_var(266,11495
#define kstat_stop_rewind_var(291,13304
#define kstat_stop_longjmp_var(299,13728

monitor.c,1804
# define MAX_TRACE_BUFFER_SIZE 69,2824
# define MAX_TRACE_BUFFER_SIZE 71,2880
# define INITIAL_TRACE_BUFFER_SIZE 77,3056
# define INITIAL_TRACE_BUFFER_SIZE 79,3119
#define INITIAL_NUM_BLKS 82,3182
#define INIT_COUNTER_TABLE_SIZE 84,3210
#define COUNTER_TABLE_LOAD 85,3244
#define COUNTER_ALLOC(90,3420
#define COUNTER_FREE(94,3621
#define TH_COUNTER_CREATED_TRACE_VALUE(107,4178
delete_private_copy(110,4272
create_private_copy(149,6062
extend_unmangled_ilist(228,9961
mangle_trace_at_end(285,12472
monitor_init(301,12901
monitor_thread_reset_init(312,13197
monitor_thread_reset_free(318,13293
trace_abort_and_delete(324,13389
monitor_exit(335,13704
monitor_thread_init(343,13878
monitor_thread_exit(383,15642
thcounter_lookup(426,17396
thcounter_add(439,17786
thcounter_remove(460,18531
thcounter_range_remove(480,19215
is_building_trace(506,20174
cur_trace_tag(513,20331
cur_trace_vmlist(520,20474
reset_trace_state(527,20628
monitor_delete_would_abort_trace(620,24956
monitor_remove_fragment(634,25393
unlink_ibt_trace_head(688,27587
mark_trace_head(738,29833
should_be_trace_head_internal_unsafe(884,37198
should_be_trace_head_internal(953,39985
should_be_trace_head(995,42019
check_for_trace_head(1005,42416
monitor_is_linkable(1030,43599
make_room_in_trace_buffer(1072,45232
trace_exit_stub_size_diff(1149,48311
enum { MAX_TRACE_FRACTION_OF_CACHE 1179,49688
get_and_check_add_size(1191,50238
trace_flags_from_component_flags(1229,52214
trace_flags_from_trace_head_flags(1235,52368
end_and_emit_trace(1255,53039
internal_extend_trace(1706,72680
internal_restore_last(1852,78602
monitor_cache_exit(1898,80758
check_fine_to_coarse_trace_head(1939,82674
monitor_cache_enter(1976,84435
trace_abort(2497,107293
get_trace_exit_component_tag(2555,109439

unit-rct.c,494
typedef int (*fconvert_t)fconvert_t51,2102
typedef int (*fmult_t)fmult_t52,2136
int foo(54,2166
int f2(65,2375
int f3(70,2410
int f7(75,2445
bar(81,2485
fmult_t farr[farr92,2714
test_indcalls(95,2756
test_switch_helper(109,3009
test_switch(121,3178
test_small_array(136,3525
test_lookup_delete(285,8326
test_self_direct(305,9005
test_rct_ind_branch_check(381,11867
test_loaddll(439,13750
void func2(455,14137
void func3(459,14196
void func4(463,14269
unit_main(470,14358

string.c,380
strlen(62,2642
wcslen(73,2797
strchr(87,3111
strrchr(104,3524
strncpy(121,3856
memmove(137,4271
void *__memmove_chk(__memmove_chk157,4927
void *__strncpy_chk(__strncpy_chk168,5250
strncat(183,5611
strcmp(195,5870
strncmp(209,6149
memcmp(223,6449
strstr(240,6814
tolower(255,7128
strcasecmp(264,7256
strtoul(286,7923
identity(303,8435
unit_test_string(309,8487

config.h,84
#define _CONFIG_H_ 39,1824
# define PARAM_STR(79,2705
# define PARAM_STR(90,2995

heap.c,10059
# define CHKLVL_MEMFILL 62,2473
static const uint BLOCK_SIZES[BLOCK_SIZES101,4441
#define BLOCK_TYPES 137,6292
#define HEADER_SIZE 155,7164
#define VARIABLE_SIZE(157,7236
#define MEMSET_HEADER(158,7292
#define GET_VARIABLE_ALLOCATION_SIZE(159,7367
#define HEAP_UNIT_MIN_SIZE 187,8908
#define HEAP_UNIT_MAX_SIZE 188,8975
#define GLOBAL_UNIT_MIN_SIZE 189,9038
#define GUARD_PAGE_ADJUSTMENT 191,9115
#define UNITROOM(194,9231
#define UNIT_RESERVED_ROOM(195,9288
#define UNIT_COMMIT_SIZE(199,9507
#define UNIT_RESERVED_SIZE(200,9571
#define UNIT_ALLOC_START(201,9647
#define UNIT_GET_START_PC(202,9711
#define UNIT_COMMIT_END(203,9787
#define UNIT_RESERVED_END(204,9826
#define UNITALLOC(207,9949
#define UNITOVERHEAD 211,10131
#define MAXROOM 214,10261
#define MAX_VALID_HEAP_ALLOCATION 217,10391
typedef struct _heap_unit_t 222,10542
    heap_pc start_pc;223,10572
    heap_pc end_pc;224,10638
    heap_pc cur_pc;225,10713
    heap_pc reserved_end_pc;226,10793
    bool in_vmarea_list;227,10883
    int      id;229,10975
    struct _heap_unit_t *next_local;next_local231,11033
    struct _heap_unit_t *next_global;next_global232,11105
    struct _heap_unit_t *prev_global;prev_global233,11172
} heap_unit_t;234,11239
typedef struct _heap_acct_t 237,11278
    size_t alloc_reuse[alloc_reuse238,11308
    size_t alloc_new[alloc_new239,11343
    size_t cur_usage[cur_usage240,11376
    size_t max_usage[max_usage241,11409
    size_t max_single[max_single242,11442
    uint num_alloc[num_alloc243,11476
} heap_acct_t;244,11507
typedef struct _thread_units_t 252,11748
    heap_unit_t *top_unit;top_unit253,11781
    heap_unit_t *cur_unit;cur_unit254,11849
    heap_pc free_list[free_list255,11908
    int num_units;257,11957
    dcontext_t *dcontext;dcontext259,12013
    bool writable;260,12068
    heap_acct_t acct;262,12156
} thread_units_t;264,12185
typedef struct _thread_heap_t 267,12232
    thread_units_t *local_heap;local_heap268,12264
    thread_units_t *nonpersistent_heap;nonpersistent_heap269,12296
} thread_heap_t;270,12336
typedef struct _heap_t 275,12473
    heap_unit_t *units;units276,12498
    heap_unit_t *dead;dead277,12560
    uint num_dead;281,12792
} heap_t;282,12811
static bool heap_exiting 285,12868
vm_area_vector_t *landing_pad_areas;landing_pad_areas317,14363
static app_pc lpad_temp_writable_start;320,14487
static size_t lpad_temp_writable_size;321,14527
safe_to_allocate_or_free_heap_units(329,14739
const char * whichheap_name[whichheap_name342,15133
# define ACCOUNT_FOR_ALLOC_HELPER(387,16368
# define ACCOUNT_FOR_ALLOC(397,16968
# define ACCOUNT_FOR_FREE(404,17326
# define ACCOUNT_FOR_ALLOC(411,17556
# define ACCOUNT_FOR_FREE(412,17618
typedef byte *vm_addr_t;vm_addr_t415,17669
static byte *heap_allowable_region_start heap_allowable_region_start419,17787
static byte *heap_allowable_region_end heap_allowable_region_end420,17850
request_region_be_heap_reachable(436,18632
vmcode_get_reachable_region(509,22274
    OOM_INIT 537,23539
    OOM_INIT    = 0x1,x1537,23539
    OOM_RESERVE 541,23671
    OOM_RESERVE = 0x2,x2541,23671
    OOM_COMMIT 550,24096
    OOM_COMMIT  = 0x4,x4550,24096
    OOM_EXTEND 559,24514
    OOM_EXTEND  = 0x8,x8559,24514
} oom_source_t;560,24537
enum {VMM_BLOCK_SIZE VMM_BLOCK_SIZE566,24706
enum {VMM_BLOCK_SIZE = IF_WINDOWS_ELSE(566,24706
    MAX_VMM_HEAP_UNIT_SIZE 582,25348
    MIN_VMM_HEAP_UNIT_SIZE 587,25590
    MIN_VMM_HEAP_UNIT_SIZE = VMM_BLOCK_SIZE 587,25590
    vm_addr_t start_addr;591,25656
    vm_addr_t end_addr;592,25717
    vm_addr_t alloc_start;593,25803
    size_t    alloc_size;594,25875
    uint    num_blocks;598,26061
    mutex_t   lock;600,26145
    uint    num_free_blocks;604,26458
} vm_heap_t;612,26943
typedef struct _heap_management_t 618,27131
    vm_heap_t vmheap;622,27332
    heap_t heap;623,27354
    thread_units_t global_units;625,27402
    thread_units_t global_nonpersistent_units;626,27435
    bool global_heap_writable;627,27482
    thread_units_t global_unprotected_units;628,27513
} heap_management_t;629,27558
static heap_management_t temp_heapmgt;634,27718
static heap_management_t *heapmgt heapmgt635,27757
static bool vmm_heap_exited 637,27843
vmm_addr_to_block(643,28082
vmm_block_to_addr(651,28296
vmm_in_same_block(658,28473
vmm_dump_map(666,28679
#define VMM_DUMP_MAP_LOG(683,29289
print_vmm_heap_data(702,30030
vmm_heap_initialize_unusable(713,30362
vmm_heap_unit_init(721,30516
vmm_heap_unit_exit(835,35397
vmm_is_reserved_unit(873,36811
is_vmm_reserved_address(890,37452
get_vmm_heap_bounds(905,37992
vmcode_get_start(917,38368
vmcode_get_end(925,38483
vmcode_unreachable_pc(933,38594
rel32_reachable_from_vmcode(944,38813
vmm_heap_reserve_blocks(965,39594
vmm_heap_free_blocks(1015,41175
at_reset_at_vmm_limit(1047,42209
vmm_heap_reserve(1060,42708
vmm_heap_commit(1171,47862
END_DATA_SECTION(1265,52920
vmm_heap_decommit(1305,54604
vmm_heap_alloc(1318,55106
vmm_heap_init_constraints(1331,55541
vmm_heap_init(1367,57170
vmm_heap_exit(1376,57373
heap_check_option_compatibility(1441,60354
heap_reset_init(1479,62103
heap_init(1489,62325
really_free_unit(1551,64985
heap_reset_free(1564,65518
heap_exit(1605,66860
heap_low_on_memory(1674,69172
get_oom_source_name(1720,71009
silent_oom_for_process(1739,71480
report_low_on_memory(1764,72345
account_for_memory(1804,74307
update_dynamo_areas_on_release(1834,75500
lockwise_safe_to_allocate_memory(1858,76452
get_real_memory(1872,76935
release_memory_and_update_areas(1914,78632
release_real_memory(1935,79553
extend_commitment(1950,80010
get_guarded_real_memory(1977,81179
release_guarded_real_memory(2033,83475
heap_mmap_ex(2060,84323
heap_mmap_reserve(2089,85563
heap_mmap_extend_commitment(2100,85942
heap_mmap_retract_commitment(2113,86355
heap_mmap_reserve_post_stack(2126,86827
heap_munmap_post_stack(2253,92680
heap_mmap(2289,94283
heap_munmap_ex(2296,94391
heap_munmap(2317,95089
# define STACK_GUARD_PAGES 2323,95198
stack_alloc(2331,95410
stack_free(2369,96643
is_stack_overflow(2386,97153
map_file(2405,97822
unmap_file(2422,98417
heap_vmareas_synch_units(2459,100058
common_global_heap_alloc(2583,106325
common_global_heap_free(2605,107084
global_heap_alloc(2631,107937
global_heap_free(2640,108207
global_heap_realloc(2653,108681
heap_create_unit(2668,109258
heap_free_unit(2758,112643
find_heap_unit(2851,116896
threadunits_init(2872,117881
#define MAX_5_DIGIT 2891,118396
print_tu_heap_statistics(2893,118434
print_heap_statistics(2923,119705
add_heapacct_to_global_stats(2958,121225
threadunits_exit(2982,122270
heap_thread_reset_init(3079,126264
heap_thread_init(3089,126556
heap_thread_reset_free(3106,127246
heap_thread_exit(3121,127740
print_free_list(3137,128355
common_heap_extend_commitment(3160,129023
heap_unit_extend_commitment(3200,130860
common_heap_alloc(3211,131217
heap_alloc(3519,145641
common_heap_free(3535,146139
heap_free(3694,152994
bool local_heap_protected(3707,153397
protect_local_units_helper(3715,153658
protect_threadunits(3728,154045
protect_local_heap(3738,154308
protect_global_heap(3750,154719
global_unprotected_heap_alloc(3793,156103
global_unprotected_heap_free(3803,156448
nonpersistent_heap_alloc(3811,156746
nonpersistent_heap_free(3832,157495
typedef struct _special_heap_unit_t 3865,158746
    heap_pc alloc_pc;3866,158784
    heap_pc start_pc;3867,158847
    heap_pc end_pc;3868,158924
    heap_pc cur_pc;3869,158995
    heap_pc reserved_end_pc;3870,159071
    profile_t *profile;profile3872,159182
    int      id;3875,159226
    struct _special_heap_unit_t *next;next3877,159284
} special_heap_unit_t;3878,159323
#define SPECIAL_UNIT_COMMIT_SIZE(3880,159347
#define SPECIAL_UNIT_RESERVED_SIZE(3881,159413
#define SPECIAL_UNIT_HEADER_INLINE(3882,159490
typedef struct _cfree_header 3885,159613
    struct _cfree_header *next_cfree;next_cfree3886,159644
    uint count;3887,159682
} cfree_header_t;3888,159698
typedef struct _special_units_t 3890,159717
    special_heap_unit_t *top_unit;top_unit3891,159751
    special_heap_unit_t *cur_unit;cur_unit3892,159827
    uint block_size;3893,159894
    heap_pc free_list;3894,159949
    cfree_header_t *cfree_list;cfree_list3895,159972
    int num_units;3897,160017
    bool writable:writable3899,160076
    bool executable:executable3900,160142
    bool use_lock:use_lock3904,160303
    bool in_iterator:in_iterator3905,160324
    bool persistent:persistent3906,160348
    mutex_t lock;3907,160371
    vm_area_vector_t *heap_areas;heap_areas3912,160526
    void *lookup_retval;lookup_retval3913,160560
    struct _special_units_t *next;next3916,160611
    heap_acct_t acct;3920,160760
} special_units_t;3922,160789
get_special_heap_header_size(3938,161479
static inline bool special_heap_profile_enabled(3945,161587
get_prot(3954,161812
special_unit_extend_commitment(3962,161983
special_heap_create_unit(3976,162571
special_heap_init_internal(4065,166117
special_heap_init(4134,168986
special_heap_pclookup_init(4143,169387
special_heap_set_vector_data(4154,169933
special_heap_set_unit_end(4174,170669
special_heap_profile_stop(4188,171067
special_heap_profile_exit(4207,171626
special_heap_exit(4229,172296
special_heap_calloc(4305,175173
special_heap_alloc(4410,179434
special_heap_cfree(4416,179522
special_heap_free(4447,180522
special_heap_iterator_start(4465,181349
special_heap_iterator_hasnext(4477,181653
special_heap_iterator_next(4494,182158
special_heap_iterator_stop(4516,182854
special_heap_delete_lock(4537,183557
    byte *start;start4587,185775
    byte *end;end4588,185830
    byte *commit_end;commit_end4589,185883
    byte *cur_ptr;cur_ptr4590,185960
    bool allocated;4591,186037
} landing_pad_area_t;4592,186105
alloc_landing_pad(4604,186597
trim_landing_pad(4805,196678
landing_pads_to_executable_areas(4827,197498
release_landing_pad_mem(4878,199441

globals.h,13747
#define _GLOBALS_H_ 43,2015
#define SN_INJ_BLKS 45,2038
#define SURYA_CODE_INJECT 46,2063
int sn_bb_cnt;50,2134
int sn_start_trace,51,2167
int sn_start_trace,sn_end_trace,51,2167
int sn_start_trace,sn_end_trace,sn_extend_trace;51,2167
int sn_instr_cnt;52,2234
int sn_trace_cnt;53,2270
int sn_trace_blk_cnt,54,2306
int sn_trace_blk_cnt,sn_trace_instr_cnt;54,2306
int sn_total_instr_exec_cnt;55,2365
int sn_total_branch_instr_exec_cnt;56,2485
int sn_total_direct_branch_instr_exec_cnt;57,2636
const char *sn_cache_name;sn_cache_name74,3481
int sn_private_cache;78,3712
int sn_shared_cache;79,3799
int sn_shared_coarse_cache;80,3884
int shared_coarse_cache_resize;81,3977
int shared_cache_resize;82,4082
int private_cache_resize;83,4173
#define _WIN32_WINNT 98,4799
#  define WIN32_LEAN_AND_MEAN100,4885
app_pc prev_trace_end_pc;136,6731
app_pc curr_trace_end_pc;137,6823
app_pc curr_trace_start_pc;138,6926
#define DYNAMORIO_STATS_EXPORTS 142,7057
#    define DYNAMORIO_EXPORT 158,7662
#    define DYNAMORIO_EXPORT 165,8023
#    define DYNAMORIO_EXPORT 168,8180
#  define DR_API 172,8248
#  define DR_API 174,8288
#  define DR_UNS_API 177,8336
#  define DR_UNS_API 179,8370
# define NOINLINE 183,8428
# define NOINLINE 185,8473
#define INLINE_ONCE 188,8525
typedef unsigned long ulong;199,8721
typedef unsigned short ushort;200,8750
typedef HANDLE file_t;209,9148
#define INVALID_FILE 210,9171
#define STDOUT 211,9213
#define STDERR 212,9256
#define STDIN 213,9299
#define DIRSEP 214,9341
#define ALT_DIRSEP 215,9361
typedef unsigned long ulong;220,9461
#define DIRSEP 223,9536
#define ALT_DIRSEP 224,9555
#define INVALID_THREAD_ID 234,9948
typedef unsigned char uchar;236,9978
typedef byte * cache_pc;237,10007
static cache_pc sn_shared_coarse_cache_start_pc;242,10086
static cache_pc sn_shared_coarse_cache_end_pc;243,10189
static cache_pc sn_shared_coarse_cache_cur_pc;244,10285
static cache_pc sn_shared_coarse_cache_prev_end_pc;245,10385
static cache_pc sn_shared_coarse_cache_initial_start_pc;246,10495
static cache_pc sn_shared_coarse_cache_initial_end_pc;247,10611
static cache_pc sn_shared_coarse_cache_initial_cur_pc;248,10723
static cache_pc sn_shared_cache_start_pc;250,10840
static cache_pc sn_shared_cache_end_pc;251,10926
static cache_pc sn_shared_cache_cur_pc;252,11007
static cache_pc sn_shared_cache_prev_end_pc;253,11092
static cache_pc sn_shared_cache_initial_start_pc;254,11188
static cache_pc sn_shared_cache_initial_end_pc;255,11294
static cache_pc sn_shared_cache_initial_cur_pc;256,11396
static cache_pc sn_private_cache_start_pc;258,11503
static cache_pc sn_private_cache_end_pc;259,11597
static cache_pc sn_private_cache_cur_pc;260,11687
static cache_pc sn_private_cache_prev_end_pc;261,11781
static cache_pc sn_private_cache_initial_start_pc;262,11885
static cache_pc sn_private_cache_initial_end_pc;263,12000
static cache_pc sn_private_cache_initial_cur_pc;264,12114
static cache_pc sn_cache_start_pc;267,12234
static cache_pc sn_cache_end_pc;268,12331
static cache_pc sn_cache_cur_pc;269,12424
#define SUCCESS 273,12547
#define FAILURE 274,12565
# define _IF_DGCDIAG(278,12666
# define IF_DGCDIAG_ELSE(279,12694
# define _IF_DGCDIAG(281,12733
# define IF_DGCDIAG_ELSE(282,12757
typedef struct _opnd_t opnd_t;324,13731
typedef struct _instr_t instr_t;326,13779
typedef struct _fragment_t fragment_t;329,13854
typedef struct _future_fragment_t future_fragment_t;331,13920
typedef struct _trace_t trace_t;333,13990
typedef struct _linkstub_t linkstub_t;335,14043
typedef struct _dcontext_t dcontext_t;337,14102
typedef struct vm_area_vector_t vm_area_vector_t;339,14166
typedef struct _coarse_info_t coarse_info_t;341,14239
typedef struct _coarse_freeze_info_t coarse_freeze_info_t;343,14314
typedef struct _instr_list_t instrlist_t;347,14462
typedef struct _module_data_t module_data_t;348,14504
    uint year;357,14694
    uint month;358,14725
    uint day_of_week;359,14756
    uint day;360,14787
    uint hour;361,14818
    uint minute;362,14849
    uint second;363,14880
    uint milliseconds;364,14911
} dr_time_t;365,14942
typedef struct _rct_module_table_t rct_module_table_t;370,15066
    RCT_RAC 373,15138
    RCT_RCT,374,15155
    RCT_NUM_TYPES,375,15168
} rct_type_t;376,15187
typedef struct _thread_record_t 379,15209
    thread_id_t id;380,15243
    HANDLE handle;382,15296
    bool retakeover;383,15344
    process_id_t pid;385,15371
    bool execve;386,15415
    uint num;388,15490
    bool under_dynamo_control;389,15535
    dcontext_t *dcontext;dcontext390,15618
    struct _thread_record_t * next;391,15700
} thread_record_t;392,15736
# undef DYNAMORIO_EXPORT401,16077
# define DYNAMORIO_EXPORT 402,16102
typedef uint linkcount_type_t;407,16198
typedef uint64 linkcount_type_t;409,16235
typedef struct _client_to_do_list_t 426,16506
    instrlist_t *ilist;ilist429,16680
    app_pc tag;430,16704
    struct _client_to_do_list_t *next;next431,16720
} client_todo_list_t;432,16759
typedef struct _client_flush_req_t 435,16860
    app_pc start;436,16897
    size_t size;437,16915
    uint   flush_id;438,16932
    void (*flush_callback)flush_callback439,17001
    struct _client_flush_req_t *next;next440,17034
} client_flush_req_t;441,17072
#define IS_CLIENT_THREAD(445,17268
typedef struct _client_data_t 451,17507
    void *         user_field;453,17588
    client_todo_list_t * to_do;454,17619
    client_flush_req_t *flush_list;flush_list455,17651
    mutex_t            sideline_mutex;457,17711
    module_data_t      *no_delete_mod_data;no_delete_mod_data460,17844
    bool           is_client_thread;477,18976
    bool           client_thread_safe_for_synch;478,19049
    bool           suspendable;479,19098
    bool           left_unsuspended;480,19167
    uint           mutex_count;481,19247
    void           *client_grab_mutex;client_grab_mutex482,19314
    bool           is_translating;484,19367
    bool           in_pre_syscall;488,19492
    bool           in_post_syscall;489,19527
    bool           invoke_another_syscall;491,19610
    bool           mcontext_in_dcontext;493,19707
    bool           suspended;494,19748
    priv_mcontext_t *cur_mc;cur_mc495,19778
} client_data_t;496,19807
# define IS_CLIENT_THREAD(498,19830
typedef struct _pending_nudge_t 503,19981
    nudge_arg_t arg;504,20015
    struct _pending_nudge_t *next;next505,20036
} pending_nudge_t;506,20071
#define DYNAMORIO_STACK_SIZE 510,20145
# define standalone_library 530,21162
#define ALL_THREADS_HASH_BITS 589,22960
    WHERE_APP=666,26073
    WHERE_INTERP,667,26091
    WHERE_DISPATCH,668,26109
    WHERE_MONITOR,669,26129
    WHERE_SYSCALL_HANDLER,670,26148
    WHERE_SIGNAL_HANDLER,671,26175
    WHERE_TRAMPOLINE,672,26201
    WHERE_CONTEXT_SWITCH,673,26223
    WHERE_IBL,674,26249
    WHERE_FCACHE,675,26264
    WHERE_UNKNOWN,676,26282
    WHERE_HOTPATCH,678,26331
    WHERE_LAST680,26358
} where_am_i_t;681,26373
    READONLY=687,26509
    READONLY=false,687,26509
    WRITABLE=688,26530
    WRITABLE=true688,26530
    EXIT_REASON_SELFMOD 694,26695
    EXIT_REASON_FLOAT_PC_FNSAVE,696,26782
    EXIT_REASON_FLOAT_PC_FXSAVE,697,26815
    EXIT_REASON_FLOAT_PC_FXSAVE64,698,26848
    EXIT_REASON_FLOAT_PC_XSAVE,699,26883
    EXIT_REASON_FLOAT_PC_XSAVE64,700,26915
enum { MAX_NATIVE_RETSTACK 709,27282
typedef struct _retaddr_and_retloc_t 711,27318
    app_pc retaddr;712,27357
    app_pc retloc;713,27377
} retaddr_and_retloc_t;714,27396
typedef struct try_except_context_t 717,27463
    dr_jmp_buf_t context;723,27790
    struct try_except_context_t *prev_context;prev_context725,27817
} try_except_context_t;726,27864
typedef struct _try_except_t 732,28065
    try_except_context_t *try_except_state;try_except_state733,28096
    bool unwinding_exception;734,28169
} try_except_t;736,28313
    priv_mcontext_t mcontext;744,28522
    int            errno;746,28618
    bool at_syscall;748,28710
    ushort exit_reason;752,28995
    reg_t inline_spill_slots[inline_spill_slots757,29224
} unprotected_context_t;759,29289
struct _dcontext_t 771,29723
        unprotected_context_t *separate_upcontext;separate_upcontext791,30575
        unprotected_context_t upcontext;792,30626
    } upcontext;793,30667
    unprotected_context_t *upcontext_ptr;upcontext_ptr797,30847
    app_pc         next_tag;804,31141
    linkstub_t *     last_exit;806,31171
    byte *         dstack;807,31236
    bool           is_exiting;809,31307
    int            app_errno;813,31450
    void *         app_fls_data;814,31480
    void *         priv_fls_data;815,31513
    void *         app_nt_rpc;816,31547
    void *         priv_nt_rpc;817,31578
    void *         app_nls_cache;818,31610
    void *         priv_nls_cache;819,31644
    void *         app_stack_limit;821,31692
    byte *         teb_base;824,31804
    app_pc         sysenter_storage;830,32099
    bool           ignore_enterexit;833,32219
        app_pc src_tag;843,32574
        coarse_info_t *dir_exit;dir_exit844,32598
    } coarse_exit;845,32631
    bool           initialized;852,32878
    thread_id_t      owning_thread;853,32952
    process_id_t     owning_process;855,33000
    thread_record_t   *thread_record;thread_record857,33093
    where_am_i_t       whereami;858,33174
    void *         allocated_start;859,33251
    fragment_t *     last_fragment;860,33318
    int            sys_num;862,33408
    reg_t *        sys_param_base;864,33491
    reg_t          sys_param0;867,33600
    reg_t          sys_param1;868,33668
    reg_t          sys_param2;869,33736
    reg_t          sys_param3;870,33804
    reg_t          sys_param4;873,33891
    bool           sys_was_int;874,33965
    bool           sys_xbp;875,34052
    bool           mprot_multi_areas;877,34134
    bool           x86_mode;887,34505
    void *         link_field;891,34597
    void *         monitor_field;892,34628
    void *         fcache_field;893,34662
    void *         fragment_field;894,34695
    void *         heap_field;895,34730
    void *         vm_areas_field;896,34761
    void *         os_field;897,34796
    void *         synch_field;898,34825
    void *         signal_field;900,34869
    void *         pcprofile_field;901,34902
    bool           signals_pending;902,34938
    void *         private_code;904,34981
    cache_pc       trace_head_pc;907,35091
    dcontext_t *next_saved;next_saved913,35283
    dcontext_t *prev_unused;prev_unused915,35319
    bool           valid;917,35426
    reg_t          nonswapped_scratch;923,35761
    app_pc         asynch_target;930,36008
    app_pc         native_exec_postsyscall;935,36166
    retaddr_and_retloc_t native_retstack[native_retstack940,36334
    uint native_retstack_cur;941,36397
    bool           alloc_no_reserve;944,36455
    int num_calls;948,36579
    int num_rets;949,36598
    int call_depth;950,36616
    int            call_depth;954,36670
    void *         call_stack;955,36701
    file_t                        logfile;959,36753
    thread_local_statistics_t *     thread_stats;960,36796
    bool                        expect_last_syscall_to_fail;961,36846
    bool                        in_opnd_disassemble;965,37042
    thread_locks_t *               thread_owned_locks;968,37140
    thread_kstats_t *              thread_kstats;971,37216
    uint64         cache_enter_time;975,37295
    uint64         start_time;976,37332
    fragment_t *     prev_fragment;977,37406
    uint64         cache_frag_count;979,37481
    uint64         cache_time[cache_time980,37562
    uint64         cache_count[cache_count981,37634
    client_data_t *client_data;client_data986,37776
    bool           trace_sysenter_exit;997,38337
    app_pc         forged_exception_addr;1001,38528
    bool           nudge_thread;1004,38629
    dr_jmp_buf_t   hotp_excpt_state;1005,38708
    try_except_t   try_except;1007,38793
    aslr_syscall_context_t aslr_context;1015,39145
    void           *nudge_target;nudge_target1026,39820
    bool           free_app_stack;1030,39981
    bool           nudge_terminate_process;1033,40071
    uint           nudge_exit_code;1034,40115
    local_state_t *local_state;local_state1040,40292
    app_pc win32_start_addr;1049,40698
    void *bb_build_info;bb_build_info1053,40819
    pending_nudge_t *nudge_pending;nudge_pending1059,40949
    fragment_t *interrupted_for_nudge;interrupted_for_nudge1061,41039
    int libc_errno;1064,41156
    bool post_syscall;1068,41204
#define GLOBAL_DCONTEXT 1076,41346
get_mcontext(1080,41518
    DUMP_XML=1092,41983
    DUMP_XML=true,1092,41983
    DUMP_NOT_XML=1093,42002
    DUMP_NOT_XML=false1093,42002
#undef snprintf 1103,42439
#define snprintf 1104,42478
#undef _snprintf1105,42508
#define _snprintf 1106,42525
#undef vsnprintf1107,42556
#define vsnprintf 1108,42573
#define snwprintf 1109,42605
#define _snwprintf 1110,42642
#define sscanf 1117,43019
#  define strcasecmp 1124,43126
#  define strncasecmp 1125,43156
#  define wcscasecmp 1126,43188
#  define printf 1130,43298
#  undef sprintf 1131,43343
#  define sprintf 1132,43383
#  define swprintf 1133,43429
#  undef vsprintf 1134,43476
#  define vsprintf 1135,43517
#  define __try 1136,43564
#  define mprotect 1139,43654
#  define mmap 1140,43705
#  define munmap 1141,43752
#  define getppid 1142,43801
#  define sched_yield 1143,43851
#  define dup 1144,43905
#  define sigaltstack 1145,43951
#  define setitimer 1146,44005
#  define _exit 1147,44057
#  define modify_ldt 1150,44347

options.c,4467
#  define inline 56,2235
#  define snprintf 57,2261
#  define WIN32_LEAN_AND_MEAN58,2290
typedef unsigned int uint;64,2426
# define print_file(66,2454
typedef char bool;69,2496
#  define true 72,2537
#  define false 73,2557
#  define NULL 76,2599
 struct stats_type 79,2628
     int logmask;80,2649
     int loglevel;81,2667
 } thestats;82,2686
 struct stats_type *stats stats84,2700
# define ASSERT(89,2921
# define OPTION_PARSE_ERROR(93,3055
static void ignore_varargs_function(95,3103
# define FATAL_USAGE_ERROR(97,3219
# define USAGE_ERROR 99,3312
# define DOLOG(100,3371
#  define OPTION_COMMAND_INTERNAL(109,3556
#  define OPTION_COMMAND(110,3692
const internal_options_t default_internal_options 115,3951
#undef OPTION_COMMAND_INTERNAL118,4032
#undef OPTION_COMMAND119,4063
#  define OPTION_COMMAND_INTERNAL 124,4125
#  define OPTION_COMMAND_INTERNAL(136,4778
#define OPTION_COMMAND(141,4950
const options_t default_options 146,5197
# define SELF_PROTECT_OPTIONS(152,5333
# define SELF_UNPROTECT_OPTIONS(153,5407
# define OPTIONS_PROTECTED(157,5608
char option_string[option_string162,5783
# define ASSERT_OWN_OPTIONS_LOCK(163,5830
# define CORE_STATIC 164,5897
options_t dynamo_options 166,5948
options_t temp_options 176,6413
# define ASSERT_OWN_OPTIONS_LOCK(187,6821
# define CORE_STATIC188,6860
#undef OPTION_COMMAND191,6954
set_dynamo_options_defaults(198,7072
#undef OPTION_COMMAND_INTERNAL203,7252
#  define OPTION_COMMAND_INTERNAL 207,7425
#  define OPTION_COMMAND_INTERNAL(209,7481
getword_common(219,7933
getword(281,9676
parse_word(288,9869
#define ISBOOL_bool 293,10034
#define ISBOOL_uint 294,10056
#define ISBOOL_uint_size 295,10078
#define ISBOOL_uint_time 296,10105
#define ISBOOL_uint_addr 297,10132
#define ISBOOL_pathstring_t 298,10159
#define ISBOOL_liststring_t 299,10189
parse_bool(302,10232
parse_uint(308,10311
parse_uint_size(325,10818
parse_uint_time(354,11717
parse_uint_addr(379,12519
parse_pathstring_t(395,13004
parse_liststring_t(407,13518
#define OPTION_COMMAND(439,14915
set_dynamo_options_common(464,16565
#undef OPTION_COMMAND520,18756
set_dynamo_options(523,18795
set_dynamo_options_other_process(530,18984
check_param_bounds(542,19332
PRINT_STRING_bool(579,20671
PRINT_STRING_uint(585,20852
#define PRINT_STRING_uint_size(592,21131
#define PRINT_STRING_uint_time(596,21367
#define PRINT_STRING_uint_addr(598,21497
#define PRINT_STRING_pathstring_t(600,21631
#define PRINT_STRING_liststring_t(601,21761
#define DIFF_bool(604,21893
#define DIFF_uint(605,21947
#define DIFF_uint_size(606,22001
#define DIFF_uint_time(607,22060
#define DIFF_uint_addr(608,22119
#define DIFF_pathstring_t(609,22178
#define DIFF_liststring_t(610,22243
#define COPY_bool(612,22309
#define COPY_uint(613,22362
#define COPY_uint_size(614,22415
#define COPY_uint_time(615,22473
#define COPY_uint_addr(616,22531
#define COPY_pathstring_t(617,22589
#define COPY_liststring_t(618,22670
get_dynamo_options_string(622,22815
#define OPTION_COMMAND(627,22958
#undef OPTION_COMMAND640,23803
get_pcache_dynamo_options_string(652,24071
#define OPTION_COMMAND(658,24267
#undef OPTION_COMMAND671,25115
has_pcache_dynamo_options(680,25319
#define OPTION_COMMAND(682,25394
#undef OPTION_COMMAND692,26020
enum {OPTION_TYPE_STATIC,OPTION_TYPE_STATIC696,26063
enum {OPTION_TYPE_STATIC, OPTION_TYPE_DYNAMIC}OPTION_TYPE_DYNAMIC696,26063
static char optionbuff[optionbuff701,26279
static char new_optionbuff[new_optionbuff702,26322
update_dynamic_options(708,26509
#define OPTION_COMMAND(715,26731
#undef OPTION_COMMAND742,28620
check_list_default_and_append(753,28966
#define SECURITY_OPTION_CONSISTENT(789,30395
check_option_compatibility_helper(800,31031
# define MAX_NUM_LIB_TLS_PAGES 1872,78965
check_option_compatibility(1903,80132
check_dynamic_option_compatibility(1912,80353
options_init(1922,80628
options_exit(1942,81284
options_make_writable(1949,81403
options_restore_readonly(1960,81660
synchronize_dynamic_options(1969,81867
get_process_options(2058,85276
dr_get_string_option(2103,87106
#define OPTION_COMMAND(2108,87289
#undef OPTION_COMMAND2116,87785
dr_get_integer_option(2125,87917
#define OPTION_COMMAND(2136,88397
#undef OPTION_COMMAND2144,88893
show_dynamo_options(2155,89042
show_dynamo_option_descriptions(2170,89536
#define OPTION_COMMAND(2172,89572
#undef OPTION_COMMAND2179,89982
unit_test_options(2183,90012

hashtable.c,1867
hashtable_bits_given_entries(44,2002
#define NAME_KEY 64,2742
#define ENTRY_TYPE 65,2767
#define ENTRY_TAG(67,2849
#define ENTRY_EMPTY 68,2894
#define ENTRY_SENTINEL 70,3009
#define ENTRY_IS_EMPTY(71,3077
#define ENTRY_IS_SENTINEL(72,3125
#define ENTRY_IS_INVALID(73,3183
#define ENTRIES_ARE_EQUAL(74,3250
#define HASHTABLE_WHICH_HEAP(76,3382
#define HTLOCK_RANK 77,3431
#define HASHTABLE_SUPPORT_PERSISTENCE 78,3478
#define GENERIC_ENTRY_IS_REAL(82,3597
hashtable_generic_init_internal_custom(87,3748
hashtable_generic_resized_custom(92,3865
hashtable_generic_study_custom(101,4216
hashtable_generic_free_entry(108,4420
generic_hash_create(119,4823
generic_hash_clear(134,5511
generic_hash_destroy(140,5634
generic_hash_lookup(159,6271
generic_hash_add(168,6501
generic_hash_remove(179,6815
generic_hash_iterate_next(194,7333
generic_hash_iterate_remove(220,8057
#define NAME_KEY 247,9046
#define ENTRY_TYPE 248,9071
#define ENTRY_TAG(250,9153
#define ENTRY_EMPTY 251,9210
#define STRHASH_SENTINEL 253,9325
#define ENTRY_SENTINEL 254,9393
#define ENTRY_IS_EMPTY(255,9444
#define ENTRY_IS_SENTINEL(256,9492
#define ENTRY_IS_INVALID(257,9552
#define TAGS_ARE_EQUAL(258,9619
#define ENTRIES_ARE_EQUAL(260,9775
#define HASHTABLE_WHICH_HEAP(262,9924
#define HTLOCK_RANK 263,9973
#define HASHTABLE_SUPPORT_PERSISTENCE 264,10020
#define STRHASH_CASE_INSENSITIVE 267,10093
strhash_key_cmp(270,10176
#define STRHASH_ENTRY_IS_REAL(280,10478
hashtable_strhash_init_internal_custom(285,10614
hashtable_strhash_resized_custom(290,10731
hashtable_strhash_study_custom(299,11084
hashtable_strhash_free_entry(306,11287
strhash_hash_create(317,11690
strhash_hash_clear(333,12467
strhash_hash_destroy(339,12590
strhash_hash_lookup(358,13227
strhash_hash_add(367,13470
strhash_hash_remove(378,13785
print_hashtable_stats(398,14422

moduledb.c,1011
static char **exemption_lists exemption_lists46,2172
#define GET_EXEMPT_LIST(47,2210
moduledb_add_to_exempt_list(55,2505
moduledb_remove_from_exempt_list(79,3334
moduledb_update_exempt_list(89,3745
moduledb_process_relaxation_flags(105,4366
START_DATA_SECTION(146,6247
#define MAX_COMPANY_NAME 166,6998
moduledb_process_image(169,7033
END_DATA_SECTION(240,10488
moduledb_init(246,10631
moduledb_exit(262,11103
moduledb_exempt_list_empty(283,11740
moduledb_check_exempt_list(291,11936
print_moduledb_exempt_lists(308,12498
    PROCESS_CONTROL_NO_HASHLIST,340,13711
    PROCESS_CONTROL_HASHLIST_EMPTY,341,13744
    PROCESS_CONTROL_LONG_LIST,347,13987
    PROCESS_CONTROL_NOT_MATCHED,349,14019
    PROCESS_CONTROL_MATCHED350,14052
# define IS_PROCESS_CONTROL_MATCHED(358,14388
process_control_report_long_list(366,14724
process_control_match(386,15445
process_control_whitelist(463,18925
process_control_blacklist(564,22997
process_control(625,25787
void process_control_init(662,27185

loader_shared.c,1050
static privmod_t *modlist;modlist54,2429
static privmod_t privmod_static[privmod_static71,2918
uint privmod_static_idx;73,3012
char search_paths[search_paths79,3257
uint search_paths_idx;81,3347
vm_area_vector_t *modlist_areas;modlist_areas84,3407
loader_init(99,3697
loader_exit(147,5699
loader_thread_init(164,6234
loader_thread_exit(207,8109
locate_and_load_private_library(239,9592
load_private_library(247,9842
unload_private_library(273,10524
in_private_library(286,10820
privload_lookup(294,10970
privload_lookup_by_base(318,11624
privload_insert(342,12260
privload_search_path_exists(405,14435
privload_read_drpath_file(421,14931
privload_load(475,17220
privload_unload(542,19898
# define LIB_SUBDIR 581,21438
# define LIB_SUBDIR 583,21472
#define EXT_SUBDIR 585,21507
privload_add_drext_path(587,21537
privload_load_finalize(624,23010
privload_has_thread_entry(657,23928
privload_modlist_initialized(663,24015
privload_next_module(669,24103
privload_first_module(676,24232
privload_print_modules(684,24378

rct.c,229
find_address_references(90,3521
rct_check_ref_and_add(175,6886
is_address_taken(243,9376
is_address_after_call(249,9521
rct_ind_branch_check(262,9954
rct_known_targets_init(537,21998
rct_init(556,22571
rct_exit(569,23034

fragment.c,13682
#define INIT_HTABLE_SIZE_SHARED_BB 59,2351
#define INIT_HTABLE_SIZE_SHARED_TRACE 60,2428
#define INIT_HTABLE_SIZE_BB 62,2528
#define INIT_HTABLE_SIZE_SHARED_FUTURE 64,2641
#  define INIT_HTABLE_SIZE_AFTER_CALL 67,2789
#define INIT_HTABLE_SIZE_FUTURE 70,2903
#define INIT_HTABLE_SIZE_COARSE 74,3038
#define INIT_HTABLE_SIZE_COARSE_TH 75,3072
#  define INIT_HTABLE_SIZE_RCT_IBT 80,3196
#define INIT_HTABLE_SIZE_TRACE 90,3484
static fragment_table_t *shared_bb;shared_bb106,4228
static fragment_table_t *shared_trace;shared_trace107,4264
static fragment_table_t *shared_future;shared_future110,4377
static per_thread_t *shared_pt;shared_pt116,4593
#define USE_SHARED_PT(118,4626
typedef struct _dead_fragment_table_t 125,4972
    fragment_entry_t *table_unaligned;table_unaligned126,5012
    uint table_flags;127,5051
    uint capacity;128,5073
    uint ref_count;129,5092
    struct _dead_fragment_table_t *next;next130,5112
} dead_fragment_table_t;131,5153
typedef struct _dead_table_lists_t 134,5251
    dead_fragment_table_t *dead_tables;dead_tables135,5288
    dead_fragment_table_t *dead_tables_tail;dead_tables_tail136,5328
} dead_table_lists_t;137,5373
static dead_table_lists_t *dead_lists;dead_lists139,5396
static rct_module_table_t rac_non_module_table;150,5881
rct_module_table_t rct_global_table;175,6856
#define NULL_TAG 178,6901
#define FAKE_TAG 180,7004
byte * hashlookup_null_target;189,7353
#define HASHLOOKUP_NULL_START_PC 190,7384
static const fragment_t null_fragment 191,7453
static const fragment_t sentinel_fragment 194,7666
static const fragment_t unlinked_fragment 204,8171
#define REAL_FRAGMENT(209,8422
#define GET_PT(214,8613
#define TABLE_PROTECTED(217,8743
#define GET_FTABLE_HELPER(221,8907
#define GET_FTABLE(229,9358
#define GET_IBT_TABLE(232,9512
#define SHOULD_OUTPUT_FRAGMENT(268,11209
#define FRAGMENT_COARSE_WRAPPER_FLAGS 273,11357
                     } coarse_emit_fragment,292,12167
typedef struct _thread_list_t 301,12522
    uint thread_num;302,12554
    uint count;303,12575
    struct _thread_list_t *next;next304,12591
} thread_list_t;305,12624
typedef struct _shared_entry_t 307,12642
    app_pc tag;308,12675
    uint num_threads;309,12691
    thread_list_t *threads;threads310,12713
    uint heap_size;311,12741
    uint cache_size;312,12761
    struct _shared_entry_t *next;next313,12782
} shared_entry_t;314,12816
# define SHARED_HASH_BITS 315,12834
static shared_entry_t ** shared_blocks;316,12863
static shared_entry_t ** shared_traces;319,13019
shared_block_lookup(325,13242
reset_shared_block_table(341,13600
add_shared_block(365,14373
print_shared_table_stats(430,16626
print_shared_stats(467,18027
static int bb_sizes[bb_sizes478,18417
static int trace_sizes[trace_sizes479,18446
static int num_bb 480,18477
static int num_traces 481,18500
record_fragment_size(484,18533
print_size_results(498,18810
#define FRAGTABLE_WHICH_HEAP(507,19117
# define UNPROT_STAT(512,19348
# define ALLOC_UNPROT_STATS(516,19488
# define DEALLOC_UNPROT_STATS(523,19970
# define CHECK_UNPROT_STATS(526,20203
check_stay_on_trace_stats_overflow(529,20286
update_lookuptable_tls(547,21115
static const char *ibl_bb_table_type_names[ibl_bb_table_type_names576,22280
static const char *ibl_trace_table_type_names[ibl_trace_table_type_names578,22390
dump_lookuptable_tls(584,22552
#define FRAGENTRY_FROM_FRAGMENT(613,23587
#define NAME_KEY 616,23727
#define ENTRY_TYPE 617,23748
static const fragment_entry_t fe_empty 620,23884
static const fragment_entry_t fe_sentinel 621,23965
#define ENTRY_TAG(622,24053
#define ENTRY_EMPTY 623,24115
#define ENTRY_SENTINEL 624,24156
#define IBL_ENTRY_IS_EMPTY(625,24200
#define IBL_ENTRY_IS_INVALID(628,24345
#define IBL_ENTRY_IS_SENTINEL(629,24410
#define ENTRY_IS_EMPTY(632,24564
#define ENTRY_IS_SENTINEL(633,24617
#define ENTRY_IS_INVALID(634,24673
#define IBL_ENTRIES_ARE_EQUAL(635,24728
#define ENTRIES_ARE_EQUAL(636,24811
#define HASHTABLE_WHICH_HEAP(637,24884
#define HTLOCK_RANK 638,24948
#define HASHTABLE_ENTRY_STATS 639,24995
hashtable_ibl_free_entry(647,25205
#define NAME_KEY 658,25565
#define ENTRY_TYPE 659,25591
#define ENTRY_TAG(662,25669
#define ENTRY_EMPTY 664,25780
#define ENTRY_SENTINEL 665,25845
#define ENTRY_IS_EMPTY(666,25914
#define ENTRY_IS_SENTINEL(667,25986
#define ENTRY_IS_INVALID(668,26062
#define ENTRIES_ARE_EQUAL(669,26138
#define HASHTABLE_WHICH_HEAP(670,26185
#define HTLOCK_RANK 671,26249
hashtable_fragment_resized_custom(677,26388
hashtable_fragment_init_internal_custom(686,26725
hashtable_fragment_study_custom(693,26860
hashtable_ibl_init_internal_custom(702,27151
hashtable_ibl_myinit(754,29252
hashtable_ibl_myfree(796,31187
hashtable_fragment_free_entry(808,31538
fragment_add_to_hashtable(822,31982
update_indirect_exit_stubs_from_table(861,33873
safely_nullify_tables(885,34673
add_to_dead_table_list(928,36714
hashtable_ibl_resized_custom(975,38714
hashtable_ibl_study_custom(1062,42987
hashtable_fragment_reset(1110,45441
#define APP_PC_EMPTY 1214,50145
#define APP_PC_SENTINEL 1216,50230
#define APP_PC_ENTRY_IS_EMPTY(1217,50288
#define APP_PC_ENTRY_IS_SENTINEL(1218,50348
#define APP_PC_ENTRY_IS_REAL(1219,50411
#define NAME_KEY 1222,50620
#define ENTRY_TYPE 1223,50644
#define ENTRY_TAG(1225,50715
#define ENTRY_EMPTY 1226,50767
#define ENTRY_SENTINEL 1227,50814
#define ENTRY_IS_EMPTY(1228,50864
#define ENTRY_IS_SENTINEL(1229,50923
#define ENTRY_IS_INVALID(1230,50985
#define ENTRIES_ARE_EQUAL(1231,51052
#define HASHTABLE_WHICH_HEAP(1232,51099
#define HTLOCK_RANK 1233,51153
#define HASHTABLE_SUPPORT_PERSISTENCE 1234,51207
hashtable_app_pc_init_internal_custom(1242,51425
hashtable_app_pc_resized_custom(1247,51540
hashtable_app_pc_study_custom(1256,51869
hashtable_app_pc_free_entry(1263,52071
fragment_initialized(1274,52390
fragment_reset_init(1281,52594
fragment_init(1396,58325
fragment_reset_free(1450,60362
fragment_exit(1576,65834
dec_table_ref_count(1718,71382
dec_all_table_ref_counts(1806,75475
fragment_thread_reset_init(1829,76405
fragment_thread_init(2006,85545
fragment_thread_reset_free(2060,87424
fragment_thread_exit(2185,92633
fragment_fork_init(2227,93880
fragment_heap_size(2253,94690
fragment_create_heap(2268,95256
fragment_init_heap(2286,96021
fragment_create(2341,97905
fragment_recreate_with_linkstubs(2497,104347
fragment_free(2551,106657
fragment_stubs_end_pc(2597,108203
fragment_body_end_pc(2607,108476
get_total_linkcount(2621,108873
fragment_get_fragment_delete_mutex(2638,109347
fragment_release_fragment_delete_mutex(2646,109571
    LOOKUP_TRACE 2658,109953
    LOOKUP_TRACE   = 0x001,x0012658,109953
    LOOKUP_BB 2659,109981
    LOOKUP_BB      = 0x002,x0022659,109981
    LOOKUP_PRIVATE 2660,110009
    LOOKUP_PRIVATE = 0x004,x0042660,110009
    LOOKUP_SHARED 2661,110037
    LOOKUP_SHARED  = 0x008,x0082661,110037
fragment_lookup_type(2666,110157
fragment_lookup(2758,114094
fragment_lookup_trace(2768,114437
fragment_lookup_bb(2777,114741
fragment_lookup_shared_bb(2786,115045
fragment_lookup_same_sharing(2796,115375
hashtable_pclookup(2805,115725
fragment_pclookup_by_htable(2826,116360
fragment_pclookup(2895,119014
fragment_pclookup_with_linkstubs(2923,120290
fragment_add(2940,120781
fragment_delete(3008,123661
fragment_record_translation_info(3132,128405
fragment_remove_shared_no_flush(3177,130320
fragment_unlink_for_deletion(3272,134198
update_private_ibt_table_ptrs(3356,137829
update_private_ptr_to_shared_ibt_table(3415,140235
update_all_private_ibt_table_ptrs(3506,144079
fragment_prepare_for_removal_from_table(3543,145578
fragment_prepare_for_removal(3620,149101
fragment_ibl_stat_account(3688,151853
fragment_remove_from_ibt_tables(3715,152898
fragment_remove_ibl_entries_in_region(3766,155318
fragment_remove_all_ibl_in_region(3809,157370
fragment_remove(3830,158266
fragment_replace(3870,159848
fragment_shift_fcache_pointers(3905,161403
fragment_copy_data_fields(3980,164365
dump_lookup_table(4008,165362
is_fragment_index_wraparound(4044,166727
fragment_add_ibl_target_helper(4060,167379
fragment_add_ibl_target(4146,171052
fragment_create_future(4382,182925
fragment_free_future(4403,183743
fragment_create_and_add_future(4413,184149
fragment_delete_future(4427,184722
fragment_delete_future_filter(4444,185356
fragment_delete_futures_in_region(4452,185558
fragment_lookup_future(4469,186370
fragment_lookup_private_future(4487,187042
#define STATS_RCT_ADD(4503,187639
rct_is_global_table(4511,187920
rct_get_table(4518,188118
rct_table_lookup_internal(4530,188428
rct_table_lookup(4553,189232
rct_table_add(4569,189700
rct_table_flush_entry(4659,194416
rct_table_invalidate_range(4692,195812
rct_table_free_internal(4739,197770
rct_table_free(4747,198034
rct_table_copy(4763,198567
rct_table_merge(4772,198762
rct_table_persist_size(4786,199212
rct_table_persist(4799,199562
rct_table_resurrect(4810,199885
rct_module_table_free(4818,200202
rct_module_table_persisted_invalidate(4837,200937
rct_module_table_copy(4893,203774
rct_module_table_set(4949,206193
rct_module_persisted_table_exists(4995,208365
rct_module_live_entries(5008,208745
coarse_persisted_fill_ibl_helper(5021,209121
coarse_persisted_fill_ibl(5080,211705
fragment_after_call_lookup(5135,214189
fragment_add_after_call(5141,214313
fragment_flush_after_call(5153,214653
invalidate_after_call_target_range(5164,214979
rct_ind_branch_target_lookup(5197,216035
rct_add_valid_ind_branch_target(5207,216316
rct_flush_ind_branch_target_entry(5229,217046
invalidate_ind_branch_target_range(5239,217382
fragment_self_write(5262,218095
fragment_overlaps(5314,220504
study_all_hashtables(5348,221622
get_flushtime_last_update(5436,225488
set_flushtime_last_update(5443,225650
set_at_syscall(5450,225821
get_at_syscall(5457,225966
check_flush_queue(5469,226341
is_self_flushing(5547,229761
is_self_allsynch_flushing(5556,229986
is_self_couldbelinking(5567,230346
is_couldbelinking(5578,230725
wait_for_flusher_nolinking(5593,231348
wait_for_flusher_linking(5615,232245
check_safe_for_flush_synch(5639,233199
process_client_flush_requests(5667,234379
enter_nolinking(5702,235961
enter_couldbelinking(5811,240390
enter_threadexit(5852,242101
increment_global_flushtime(5874,242844
flush_fragments_free_futures(5960,246702
flush_fragments_synchall_start(5991,248059
flush_fragments_synchall_end(6150,256353
flush_fragments_synch_unlink_priv(6188,257885
flush_fragments_unlink_shared(6520,273537
flush_invalidate_ibl_shared_target(6628,278553
flush_fragments_end_synch(6669,280115
flush_fragments_in_region_start(6788,285354
flush_fragments_in_region_finish(6829,286940
flush_fragments_and_remove_region(6840,287287
flush_fragments_from_region(6861,288385
invalidate_code_cache(6883,289357
flush_vmvector_regions(6901,290150
fragment_output(6935,291731
init_trace_file(6949,292259
exit_trace_file(6969,292909
#define TRACEBUF_SIZE 6997,294096
#define TRACEBUF_MAKE_ROOM(6999,294124
output_trace_binary(7007,294431
output_trace(7125,298976
profile_fragment_enter(7378,308935
profile_fragment_dispatch(7424,310405
#define NAME_KEY 7466,312265
#define ENTRY_TYPE 7467,312289
static app_to_cache_t a2c_empty 7468,312323
static app_to_cache_t a2c_sentinel 7469,312373
#define ENTRY_TAG(7475,312692
#define ENTRY_EMPTY 7476,312748
#define ENTRY_SENTINEL 7477,312794
#define ENTRY_IS_EMPTY(7478,312843
#define ENTRY_IS_SENTINEL(7479,312904
#define ENTRY_IS_INVALID(7480,312968
#define ENTRIES_ARE_EQUAL(7481,313035
#define HASHTABLE_WHICH_HEAP(7482,313090
#define COARSE_HTLOCK_RANK 7484,313220
#define HTLOCK_RANK 7485,313307
#define HASHTABLE_SUPPORT_PERSISTENCE 7486,313360
#define A2C_ENTRY_IS_EMPTY(7493,313632
#define A2C_ENTRY_IS_SENTINEL(7494,313684
#define A2C_ENTRY_IS_REAL(7495,313751
hashtable_coarse_init_internal_custom(7500,313939
hashtable_coarse_resized_custom(7505,314054
hashtable_coarse_study_custom(7514,314399
hashtable_coarse_free_entry(7521,314601
coarse_lookup_internal(7553,316206
fragment_coarse_htable_create(7572,316874
fragment_coarse_htable_merge_helper(7634,319919
fragment_coarse_htable_merge(7675,321728
study_and_free_coarse_htable(7746,325136
fragment_coarse_free_entry_pclookup_table(7799,327213
fragment_coarse_htable_free(7810,327617
fragment_coarse_num_entries(7833,328497
fragment_coarse_add(7847,328813
fragment_coarse_th_lookup(7905,331335
fragment_coarse_th_unlink_and_add(7939,332710
fragment_coarse_th_add(7971,334103
IF_DEBUG_ELSE(7993,335074
fragment_coarse_lookup_in_unit(8068,338586
fragment_coarse_lookup(8112,340533
fragment_coarse_wrapper(8130,341168
fragment_coarse_lookup_wrapper(8153,342046
fragment_lookup_fine_and_coarse(8171,342606
fragment_lookup_fine_and_coarse_sharing(8201,343856
get_fragment_coarse_info(8223,344742
coarse_is_trace_head_in_own_unit(8240,345341
fragment_coarse_replace(8272,346448
#define PCLOOKUP_LAST_HTABLE_INIT_SIZE 8292,347135
#define PCLOOKUP_LAST_HTABLE_MAX_ENTRIES 8301,347628
typedef struct _pclookup_last_t 8303,347675
    app_pc tag;8304,347709
    cache_pc entry;8305,347725
} pclookup_last_t;8306,347745
pclookup_last_free(8309,347777
fragment_coarse_pclookup(8319,348131
fragment_coarse_create_entry_pclookup_table(8442,353504
fragment_coarse_entry_pclookup(8521,357656
fragment_coarse_entry_freeze(8565,359254
fragment_coarse_unit_freeze(8676,364820
fragment_coarse_htable_persist_size(8785,369720
fragment_coarse_htable_persist(8795,370072
fragment_coarse_htable_resurrect(8805,370412

buildmark.c,190
const char dynamorio_buildmark[dynamorio_buildmark38,1802
const char dynamorio_buildmark[dynamorio_buildmark40,1866
const char dynamorio_version_string[dynamorio_version_string43,1920

lib/dr_app.h,155
#define _DR_APP_H_ 40,1829
#    define DR_APP_API 44,1890
#    define DR_APP_API 46,1943
#    define DR_APP_API 50,2082
#    define DR_APP_API52,2154

lib/hotpatch_interface.h,2216
#define _HOTPATCH_INTERFACE_H_ 36,1768
#define HOTP_INTERFACE_VERSION 48,2171
    HOTP_EXEC_EXPLOIT_DETECTED 61,2726
    HOTP_EXEC_EXPLOIT_DETECTED          = 0x00000001,x0000000161,2726
    HOTP_EXEC_EXPLOIT_NOT_DETECTED 62,2780
    HOTP_EXEC_EXPLOIT_NOT_DETECTED      = 0x00000002,x0000000262,2780
    HOTP_EXEC_DETECTOR_ERROR 63,2834
    HOTP_EXEC_DETECTOR_ERROR            = 0x00000004,x0000000463,2834
    HOTP_EXEC_EXPLOIT_PROTECTED 66,2952
    HOTP_EXEC_EXPLOIT_PROTECTED         = 0x00000008,x0000000866,2952
    HOTP_EXEC_EXPLOIT_NOT_PROTECTED 67,3006
    HOTP_EXEC_EXPLOIT_NOT_PROTECTED     = 0x00000010,x0000001067,3006
    HOTP_EXEC_PROTECTOR_ERROR 68,3060
    HOTP_EXEC_PROTECTOR_ERROR           = 0x00000020,x0000002068,3060
    HOTP_EXEC_EXPLOIT_KILL_THREAD 71,3193
    HOTP_EXEC_EXPLOIT_KILL_THREAD       = 0x00000040,x0000004071,3193
    HOTP_EXEC_EXPLOIT_KILL_PROCESS 72,3247
    HOTP_EXEC_EXPLOIT_KILL_PROCESS      = 0x00000080,x0000008072,3247
    HOTP_EXEC_EXPLOIT_RAISE_EXCEPTION 73,3301
    HOTP_EXEC_EXPLOIT_RAISE_EXCEPTION   = 0x00000100,x0000010073,3301
    HOTP_EXEC_CHANGE_CONTROL_FLOW 74,3355
    HOTP_EXEC_CHANGE_CONTROL_FLOW       = 0x00000200,x0000020074,3355
    HOTP_EXEC_LOG_EVENT 79,3567
    HOTP_EXEC_LOG_EVENT                 = 0x00000400,x0000040079,3567
    HOTP_EXEC_ABORTED 84,3787
    HOTP_EXEC_ABORTED                   = 0x00000800x0000080084,3787
} hotp_exec_status_t;85,3840
typedef priv_mcontext_t hotp_context_t;87,3863
typedef hotp_exec_status_t (*hotp_func_t)hotp_func_t92,4067
#define APP_XDI(94,4140
#define APP_XSI(95,4189
#define APP_XBP(96,4238
#define APP_XSP(97,4287
#define APP_XBX(98,4336
#define APP_XDX(99,4385
#define APP_XCX(100,4434
#define APP_XAX(101,4483
#define APP_R8(102,4532
#define APP_R9(103,4580
#define APP_R10(104,4628
#define APP_R11(105,4677
#define APP_R12(106,4726
#define APP_R13(107,4775
#define APP_R14(108,4824
#define APP_R15(109,4873
#define APP_XFLAGS(110,4922
#define APP_EDI 113,5011
#define APP_ESI 114,5035
#define APP_EBP 115,5059
#define APP_ESP 116,5083
#define APP_EBX 117,5107
#define APP_EDX 118,5131
#define APP_ECX 119,5155
#define APP_EAX 120,5179

lib/dr_stats.h,1059
#define _DR_STATS_H_ 36,1759
# define DR_SHMEM_KEY 46,2071
# define DYNAMORIO_MAGIC_STRING 48,2136
# define DYNAMORIO_MAGIC_STRING_LEN 49,2193
#define STAT_NAME_MAX_LEN 52,2264
typedef struct _single_stat_t 53,2293
    char name[name58,2525
    stats_int_t value;62,2739
} single_stat_t;63,2762
#define NUM_EVENTS 69,2975
typedef struct _dr_statistics_t 70,2997
    char magicstring[magicstring72,3043
    process_id_t process_id;74,3100
    char process_name[process_name75,3149
    uint logmask;76,3205
    uint loglevel;77,3255
    char logdir[logdir78,3316
    uint64 perfctr_vals[perfctr_vals79,3386
    uint num_stats;80,3423
    single_stat_t stats[stats83,3533
#  define STATS_DEF(86,3581
#  define RSTATS_DEF(88,3647
# undef STATS_DEF91,3737
# undef RSTATS_DEF92,3755
} dr_statistics_t;94,3781
    thread_id_t thread_id;99,3875
    mutex_t thread_stats_lock;100,3902
# define STATS_DEF(116,4901
# define RSTATS_DEF(118,4967
} thread_local_statistics_t;121,5056
#undef STATS_DEF122,5085
#undef RSTATS_DEF123,5102

lib/dr_config.h,979
#define _DR_CONFIG_H_ 35,1774
#define DR_MAX_OPTIONS_LENGTH 57,2638
    DR_MODE_NONE 66,2839
    DR_MODE_CODE_MANIPULATION 72,3011
    DR_MODE_PROBE 76,3147
    DR_MODE_MEMORY_FIREWALL 82,3256
    DR_MODE_DO_NOT_RUN 91,3459
} dr_operation_mode_t;93,3488
    DR_SUCCESS,98,3640
    DR_PROC_REG_EXISTS,101,3729
    DR_PROC_REG_INVALID,104,3830
    DR_PRIORITY_INVALID,107,3928
    DR_ID_CONFLICTING,110,4017
    DR_ID_INVALID,113,4105
    DR_FAILURE,116,4216
    DR_NUDGE_PID_NOT_INJECTED,119,4317
    DR_NUDGE_TIMEOUT,122,4440
    DR_CONFIG_STRING_TOO_LONG,125,4538
    DR_CONFIG_FILE_WRITE_FAILED,128,4617
    DR_NUDGE_PID_NOT_FOUND,131,4734
} dr_config_status_t;133,4763
    DR_PLATFORM_DEFAULT,137,4876
    DR_PLATFORM_32BIT,138,4949
    DR_PLATFORM_64BIT,139,5022
} dr_platform_t;140,5102
typedef struct _dr_registered_process_iterator_t dr_registered_process_iterator_t;398,17827
typedef struct _dr_client_iterator_t dr_client_iterator_t;709,33815

lib/mcxtx.h,920
        reg_t xdi;57,2593
        reg_t IF_X64_ELSE(58,2672
        reg_t xsi;61,2847
        reg_t IF_X64_ELSE(62,2926
        reg_t xbp;65,3101
        reg_t IF_X64_ELSE(66,3180
        reg_t xsp;69,3355
        reg_t IF_X64_ELSE(70,3434
        reg_t xbx;73,3609
        reg_t IF_X64_ELSE(74,3688
        reg_t xdx;77,3863
        reg_t IF_X64_ELSE(78,3942
        reg_t xcx;81,4117
        reg_t IF_X64_ELSE(82,4196
        reg_t xax;85,4371
        reg_t IF_X64_ELSE(86,4450
    reg_t r8;89,4624
    reg_t r9;90,4693
    reg_t r10;91,4762
    reg_t r11;92,4832
    reg_t r12;93,4902
    reg_t r13;94,4972
    reg_t r14;95,5042
    reg_t r15;96,5112
        reg_t xflags;99,5201
        reg_t IF_X64_ELSE(100,5289
        byte *xip;xip109,5722
        byte *pc;pc110,5801
        byte *IF_X64_ELSE(IF_X64_ELSE111,5883
    byte padding[padding113,5980
    dr_ymm_t ymm[ymm140,7430

lib/fortran.c,93
void drsetup_(47,2070
void drcleanup_(52,2111
void drstart_(57,2156
void drstop_(62,2197

lib/dr_inject.h,142
#define _DR_INJECT_H_ 35,1764
# define ERROR_IMAGE_MACHINE_TYPE_MISMATCH_EXE 55,2379
# define WARN_IMAGE_MACHINE_TYPE_MISMATCH_EXE 60,2537

lib/kstatsx.h,19
KSTAT_DEF(55,2208

lib/globals_shared.h,22485
#define _GLOBALS_SHARED_H_44,1915
#    define WINDOWS49,2011
# define X6478,2822
# define UNIX82,2880
#  define WIN32_LEAN_AND_MEAN87,2940
#  define DR_EXPORT 113,3580
#  define LINK_ONCE 114,3622
#  define ALIGN_VAR(115,3664
#   define inline 117,3730
#  define INLINE_FORCED 119,3766
#    define DR_EXPORT 126,4030
#    define DR_EXPORT128,4101
#  define LINK_ONCE 130,4132
#  define ALIGN_VAR(131,4175
#   define inline 133,4250
#  define INLINE_FORCED 135,4288
#define MAXIMUM_PATH 149,4692
#  define NULL 154,4790
typedef _Bool bool;161,4964
typedef char bool;164,5038
#    define true 168,5092
#    define false 171,5139
#define CAST_TO_bool(178,5277
typedef unsigned int uint;181,5340
typedef unsigned short ushort;184,5406
typedef unsigned char byte;187,5474
typedef signed char sbyte;190,5540
typedef byte * app_pc;192,5574
typedef void (*generic_func_t)generic_func_t194,5598
typedef unsigned __int64 uint64;198,5683
typedef __int64 int64;201,5758
typedef __int64 ssize_t;204,5803
typedef int ssize_t;206,5836
#  define INT64_FORMAT 208,5866
typedef unsigned long int uint64;212,5962
typedef long int int64;215,6042
#    define INT64_FORMAT 217,6077
typedef unsigned long long int uint64;220,6150
typedef long long int int64;223,6235
#    define INT64_FORMAT 225,6275
typedef uint64 reg_t;233,6451
typedef uint reg_t;235,6479
typedef reg_t ptr_uint_t;238,6574
typedef int64 ptr_int_t;240,6611
typedef int ptr_int_t;242,6642
typedef size_t app_rva_t;250,6838
#define PTR_UINT_0 252,6865
#define PTR_UINT_1 253,6907
#define PTR_UINT_MINUS_1 254,6949
typedef ptr_uint_t thread_id_t;257,7007
typedef ptr_uint_t process_id_t;258,7039
typedef pid_t thread_id_t;260,7090
typedef pid_t process_id_t;261,7117
#define INVALID_PROCESS_ID 264,7153
typedef HANDLE file_t;272,7395
#  define INVALID_FILE 274,7467
#  define STDOUT 280,7719
#  define STDERR 282,7803
#  define STDIN 284,7887
typedef int file_t;289,7953
#  define INVALID_FILE 291,8022
#  define STDOUT 299,8349
#  define STDERR 301,8421
#  define STDIN 303,8493
typedef uint client_id_t;318,8983
    uint black_box_uint;328,9209
    uint64 black_box_uint64;329,9234
    uint black_box_uint[black_box_uint331,9270
} opnd_t;333,9306
    uint black_box_uint[black_box_uint342,9528
    uint black_box_uint[black_box_uint344,9564
} instr_t;346,9601
typedef struct _opnd_t opnd_t;349,9634
typedef struct _instr_t instr_t;351,9682
# define IN 356,9781
# define OUT 359,9836
# define INOUT 362,9895
# define POINTER_MAX 368,9985
#  define SSIZE_T_MAX 370,10038
# define POINTER_MAX_32BIT 372,10078
# define POINTER_MAX 374,10135
#  define SSIZE_T_MAX 376,10186
#define MAX_CLIENT_LIBS 380,10232
# define MAX(387,10483
# define MIN(388,10526
#define PTR_UINT_ABS(390,10576
#define TESTALL(393,10671
#define TESTANY(395,10772
#define TEST 397,10865
#define BOOLS_MATCH(399,10887
# define IF_DEBUG(403,11003
# define _IF_DEBUG(404,11026
# define IF_DEBUG_(405,11052
# define IF_DEBUG_ELSE(406,11078
# define IF_DEBUG_ELSE_0(407,11109
# define IF_DEBUG_ELSE_NULL(408,11141
# define IF_DEBUG(410,11182
# define _IF_DEBUG(411,11203
# define IF_DEBUG_(412,11225
# define IF_DEBUG_ELSE(413,11247
# define IF_DEBUG_ELSE_0(414,11278
# define IF_DEBUG_ELSE_NULL(415,11308
# define IF_INTERNAL(419,11370
# define IF_INTERNAL_ELSE(420,11396
# define IF_INTERNAL(422,11435
# define IF_INTERNAL_ELSE(423,11459
# define IF_WINDOWS(427,11515
# define IF_WINDOWS_(428,11540
# define _IF_WINDOWS(429,11568
# define IF_WINDOWS_ELSE_0(430,11596
# define IF_WINDOWS_ELSE(431,11630
# define IF_WINDOWS_ELSE_NP(432,11664
# define IF_UNIX(433,11699
# define IF_UNIX_ELSE(434,11719
# define IF_UNIX_(435,11748
# define _IF_UNIX(436,11769
# define IF_WINDOWS(438,11796
# define IF_WINDOWS_(439,11819
# define _IF_WINDOWS(440,11843
# define IF_WINDOWS_ELSE_0(441,11867
# define IF_WINDOWS_ELSE(442,11901
# define IF_WINDOWS_ELSE_NP(443,11935
# define IF_UNIX(444,11970
# define IF_UNIX_ELSE(445,11992
# define IF_UNIX_(446,12021
# define _IF_UNIX(447,12045
# define IF_LINUX(451,12091
# define IF_LINUX_ELSE(452,12114
# define IF_LINUX_(453,12144
# define IF_LINUX(455,12175
# define IF_LINUX_ELSE(456,12196
# define IF_LINUX_(457,12226
# define IF_VMX86(461,12276
# define IF_VMX86_ELSE(462,12299
# define _IF_VMX86(463,12329
# define IF_NOT_VMX86(464,12355
# define IF_VMX86(466,12387
# define IF_VMX86_ELSE(467,12408
# define _IF_VMX86(468,12438
# define IF_NOT_VMX86(469,12460
#  define IF_HAVE_TLS_ELSE(474,12524
#  define IF_NOT_HAVE_TLS(475,12559
#  define IF_HAVE_TLS_ELSE(477,12595
#  define IF_NOT_HAVE_TLS(478,12630
# define IF_HAVE_TLS_ELSE(482,12751
# define IF_NOT_HAVE_TLS(483,12785
# define IF_WINDOWS_AND_CORE(487,12874
# define IF_WINDOWS_AND_CORE(489,12914
# define IF_PROG_SHEP(493,12981
# define IF_PROG_SHEP(495,13014
# define IF_RCT_IND_BRANCH(499,13107
# define IF_RCT_IND_BRANCH(501,13145
# define IF_RETURN_AFTER_CALL(505,13246
# define IF_RETURN_AFTER_CALL_ELSE(506,13281
# define IF_RETURN_AFTER_CALL(508,13330
# define IF_RETURN_AFTER_CALL_ELSE(509,13363
# define IF_HOTP(513,13444
# define IF_HOTP(515,13472
# define IF_CLIENT_INTERFACE(519,13524
# define IF_CLIENT_INTERFACE_ELSE(520,13558
# define _IF_CLIENT_INTERFACE(521,13600
# define _IF_NOT_CLIENT_INTERFACE(522,13637
# define _IF_CLIENT(524,13713
# define IF_CLIENT_INTERFACE(526,13746
# define IF_CLIENT_INTERFACE_ELSE(527,13778
# define _IF_CLIENT_INTERFACE(528,13820
# define _IF_NOT_CLIENT_INTERFACE(529,13853
# define _IF_CLIENT(530,13894
# define IF_CUSTOM_TRACES(534,13946
# define IF_CUSTOM_TRACES(536,13983
# define IF_APP_EXPORTS(540,14042
# define IF_APP_EXPORTS(542,14077
# define IF_GBOP(546,14124
# define IF_GBOP(548,14152
# define IF_PROC_CTL(552,14203
# define IF_PROC_CTL(554,14235
# define IF_KSTATS(558,14281
# define IF_KSTATS(560,14311
# define IF_UNIT_TEST_ELSE(564,14369
# define IF_UNIT_TEST_ELSE(566,14409
# define IF_X64(572,14528
# define IF_X64_ELSE(573,14549
# define IF_X64_(574,14578
# define _IF_X64(575,14601
# define IF_NOT_X64(576,14625
# define _IF_NOT_X64(577,14648
# define IF_X64(579,14678
# define IF_X64_ELSE(580,14697
# define IF_X64_(581,14726
# define _IF_X64(582,14746
# define IF_NOT_X64(583,14766
# define _IF_NOT_X64(584,14791
    SYSLOG_INFORMATION 589,14866
    SYSLOG_INFORMATION = 0x1,x1589,14866
    SYSLOG_WARNING 590,14896
    SYSLOG_WARNING     = 0x2,x2590,14896
    SYSLOG_ERROR 591,14926
    SYSLOG_ERROR       = 0x4,x4591,14926
    SYSLOG_CRITICAL 592,14956
    SYSLOG_CRITICAL    = 0x8,x8592,14956
    SYSLOG_NONE 593,14986
    SYSLOG_NONE        = 0x0,x0593,14986
    SYSLOG_ALL 594,15016
    SYSLOG_ALL         = SYSLOG_INFORMATION 594,15016
    SYSLOG_ALL         = SYSLOG_INFORMATION | SYSLOG_WARNING 594,15016
    SYSLOG_ALL         = SYSLOG_INFORMATION | SYSLOG_WARNING | SYSLOG_ERROR 594,15016
    SYSLOG_ALL         = SYSLOG_INFORMATION | SYSLOG_WARNING | SYSLOG_ERROR | SYSLOG_CRITICAL594,15016
} syslog_event_type_t;595,15110
#define DYNAMO_OPTION(597,15134
#define DYNAMO_OPTION_NOT_STRING(601,15445
#define EXPOSE_INTERNAL_OPTIONS604,15556
# define INTERNAL_OPTION(611,15853
# define INTERNAL_OPTION(624,16761
 typedef unsigned int uint32;629,16908
typedef uint64 timestamp_t;633,17070
#  define NAKED634,17098
#  define ZHEX32_FORMAT_STRING 635,17114
#  define HEX32_FORMAT_STRING 636,17152
#  define MAX_PATH 645,17573
 typedef unsigned int uint;647,17647
 typedef unsigned int uint32;650,17714
typedef unsigned __int64 uint64;653,17807
typedef __int64 int64;654,17840
typedef int64 ssize_t;656,17876
typedef int ssize_t;658,17907
#    define ZHEX32_FORMAT_STRING 662,18020
#    define HEX32_FORMAT_STRING 663,18063
#    define ZHEX32_FORMAT_STRING 665,18111
#    define HEX32_FORMAT_STRING 666,18151
#    define ULLONG_MAX 670,18293
typedef uint64 timestamp_t;672,18336
#  define NAKED 673,18364
#define FIXED_TIMESTAMP_FORMAT 676,18408
#define UINT64_FORMAT_CODE 680,18528
#define INT64_FORMAT_CODE 681,18572
#define UINT64_FORMAT_STRING 682,18615
#define INT64_FORMAT_STRING 683,18667
#define HEX64_FORMAT_STRING 684,18717
#define ZHEX64_FORMAT_STRING 685,18766
#define ZHEX32_FORMAT_STRING 687,18842
#define HEX32_FORMAT_STRING 688,18878
# define PFMT 691,18976
# define PIFMT 692,19011
# define SZFMT 693,19046
# define PFMT 695,19087
# define PIFMT 696,19122
# define SZFMT 697,19157
#define PFX 705,19373
#define PIFX 706,19395
typedef int64 stats_int_t;715,19637
typedef int stats_int_t;717,19670
#define L_UINT64_FORMAT_STRING 736,20446
#  define PFMT 738,20527
#  define PIFMT 739,20563
#  define SZFMT 740,20599
#  define SSZFMT 741,20636
#  define SZFC 742,20673
#  define SSZFC 743,20707
#  define PFMT 745,20747
#  define PIFMT 746,20783
#  define SZFMT 747,20819
#  define SSZFMT 748,20840
#  define SZFC 749,20862
#  define SSZFC 750,20881
#define L_PFMT 752,20908
#define PFX 753,20963
#define PIFX 754,20984
# define IDFMT 758,21067
# define IDFMT 760,21094
#define MAX_REGISTRY_PARAMETER 765,21245
# define MAX_OPTIONS_STRING 768,21396
# define MAX_CONFIG_VALUE 769,21432
# define MAX_OPTIONS_STRING 778,21901
# define MAX_CONFIG_VALUE 779,21937
#define MAX_LIST_OPTION_LENGTH 782,22054
#define MAX_PATH_OPTION_LENGTH 784,22163
#define MAX_OPTION_LENGTH 786,22254
#define MAX_PARAMNAME_LENGTH 788,22305
#define MAX_MODNAME_INTERNAL 791,22396
#define MAX_DWORD_STRING_LENGTH 796,22548
typedef char pathstring_t[pathstring_t798,22584
typedef char liststring_t[liststring_t802,22772
#define BUFFER_SIZE_BYTES(805,22885
#define BUFFER_SIZE_ELEMENTS(806,22933
#define BUFFER_LAST_ELEMENT(807,23011
#define NULL_TERMINATE_BUFFER(808,23082
#define BUFFER_ROOM_LEFT_W(810,23148
#define BUFFER_ROOM_LEFT(811,23229
#define CAT_AND_TERMINATE(816,23462
#define EXPANDSTR(824,23655
#define STRINGIFY(825,23679
#  define PRODUCT_NAME 829,23795
#  define PRODUCT_NAME 831,23855
#define COMPANY_NAME 841,24290
#define COMPANY_NAME_EVENTLOG 842,24346
#define COMPANY_LONG_NAME 844,24465
#  define BUILD_NUMBER_STRING 847,24535
#  define BUILD_NUMBER_STRING 849,24603
#  define BUILD_NUMBER 850,24648
#  define VERSION_NUMBER_STRING 854,24705
#  define VERSION_NUMBER_STRING 856,24779
#  define VERSION_NUMBER 857,24830
#  define HOT_PATCHING_DLL_CACHE_PATH 861,24899
#  define HOTP_MODES_FILENAME 862,24953
#  define HOTP_POLICIES_FILENAME 863,24998
#define DYNAMORIO_VAR_CONFIGDIR_ID 867,25126
#define DYNAMORIO_VAR_HOME_ID 868,25182
#define DYNAMORIO_VAR_LOGDIR_ID 869,25233
#define DYNAMORIO_VAR_OPTIONS_ID 870,25286
#define DYNAMORIO_VAR_AUTOINJECT_ID 871,25340
#define DYNAMORIO_VAR_UNSUPPORTED_ID 872,25397
#define DYNAMORIO_VAR_RUNUNDER_ID 873,25457
#define DYNAMORIO_VAR_CMDLINE_ID 874,25512
#define DYNAMORIO_VAR_ONCRASH_ID 875,25566
#define DYNAMORIO_VAR_SAFEMARKER_ID 876,25620
#define DYNAMORIO_VAR_CACHE_ROOT_ID 879,25756
#define DYNAMORIO_VAR_CACHE_SHARED_ID 885,26101
#define DYNAMORIO_VAR_PERSCACHE_ROOT_ID 892,26452
#define DYNAMORIO_VAR_PERSCACHE_SHARED_ID 894,26559
#define PERSCACHE_FILE_SUFFIX 898,26732
# define DYNAMORIO_VAR_HOT_PATCH_POLICES_ID 901,26799
# define DYNAMORIO_VAR_HOT_PATCH_MODES_ID 902,26873
# define DYNAMORIO_VAR_APP_PROCESS_WHITELIST_ID 905,26972
# define DYNAMORIO_VAR_ANON_PROCESS_WHITELIST_ID 906,27053
# define DYNAMORIO_VAR_APP_PROCESS_BLACKLIST_ID 908,27137
# define DYNAMORIO_VAR_ANON_PROCESS_BLACKLIST_ID 909,27218
#define DYNAMORIO_VAR_CONFIGDIR 912,27309
#define DYNAMORIO_VAR_HOME 913,27380
#define DYNAMORIO_VAR_LOGDIR 914,27446
#define DYNAMORIO_VAR_OPTIONS 915,27514
#define DYNAMORIO_VAR_AUTOINJECT 916,27583
#define DYNAMORIO_VAR_UNSUPPORTED 917,27655
#define DYNAMORIO_VAR_RUNUNDER 918,27730
#define DYNAMORIO_VAR_CMDLINE 919,27800
#define DYNAMORIO_VAR_ONCRASH 920,27869
#define DYNAMORIO_VAR_SAFEMARKER 921,27938
#define DYNAMORIO_VAR_CACHE_ROOT 922,28010
#define DYNAMORIO_VAR_CACHE_SHARED 923,28083
#define DYNAMORIO_VAR_PERSCACHE_ROOT 924,28160
#define DYNAMORIO_VAR_PERSCACHE_SHARED 925,28241
# define DYNAMORIO_VAR_HOT_PATCH_POLICIES 927,28356
# define DYNAMORIO_VAR_HOT_PATCH_MODES 928,28445
# define DYNAMORIO_VAR_APP_PROCESS_WHITELIST 931,28559
# define DYNAMORIO_VAR_ANON_PROCESS_WHITELIST 933,28660
# define DYNAMORIO_VAR_APP_PROCESS_BLACKLIST 936,28764
# define DYNAMORIO_VAR_ANON_PROCESS_BLACKLIST 938,28865
#  define DYNAMORIO_VAR_EXE_PATH 944,28989
#  define DYNAMORIO_VAR_EXECVE 945,29050
#  define DYNAMORIO_VAR_EXECVE_LOGDIR 946,29114
#  define L_IF_WIN(947,29180
#  define EXPAND_LEVEL(951,29226
#  define L_EXPAND_LEVEL(952,29294
#  define L(953,29331
#  define LCONCAT(954,29357
#  define L_IF_WIN(955,29417
#  define L_DYNAMORIO_VAR_CONFIGDIR 958,29496
#  define L_DYNAMORIO_VAR_HOME 959,29574
#  define L_DYNAMORIO_VAR_LOGDIR 960,29647
#  define L_DYNAMORIO_VAR_OPTIONS 961,29722
#  define L_DYNAMORIO_VAR_AUTOINJECT 962,29798
#  define L_DYNAMORIO_VAR_UNSUPPORTED 963,29877
#  define L_DYNAMORIO_VAR_RUNUNDER 964,29957
#  define L_DYNAMORIO_VAR_CMDLINE 965,30034
#  define L_DYNAMORIO_VAR_ONCRASH 966,30110
#  define L_DYNAMORIO_VAR_SAFEMARKER 967,30186
#  define L_DYNAMORIO_VAR_CACHE_ROOT 968,30265
#  define L_DYNAMORIO_VAR_CACHE_SHARED 969,30344
#  define L_DYNAMORIO_VAR_HOT_PATCH_POLICIES 971,30457
#  define L_DYNAMORIO_VAR_HOT_PATCH_MODES 972,30552
#  define L_DYNAMORIO_VAR_APP_PROCESS_WHITELIST 975,30673
#  define L_DYNAMORIO_VAR_ANON_PROCESS_WHITELIST 977,30779
#  define L_DYNAMORIO_VAR_APP_PROCESS_BLACKLIST 980,30888
#  define L_DYNAMORIO_VAR_ANON_PROCESS_BLACKLIST 982,30994
#  define L_PRODUCT_NAME 986,31111
#  define L_COMPANY_NAME 987,31178
#  define L_COMPANY_LONG_NAME 988,31245
#  define EVENTLOG_HIVE 991,31348
#  define EVENTLOG_NAME 992,31391
#  define EVENTSOURCE_NAME 993,31437
#  define EVENTLOG_REGISTRY_SUBKEY 995,31522
#  define L_EVENTLOG_REGISTRY_SUBKEY 996,31605
#  define L_EVENTLOG_REGISTRY_KEY 997,31683
#  define L_EVENT_LOG_KEY 998,31782
#  define L_EVENT_LOG_SUBKEY 999,31855
#  define L_EVENT_LOG_NAME 1000,31934
#  define L_EVENT_SOURCE_NAME 1001,31997
#  define L_EVENT_SOURCE_KEY 1002,32060
#  define L_EVENT_SOURCE_SUBKEY 1003,32132
#  define EVENT_LOG_KEY 1005,32211
#  define EVENT_SOURCE_KEY 1006,32299
#  define L_EVENT_FILE_VALUE_NAME 1012,32703
#  define L_EVENT_FILE_NAME_PRE_VISTA 1013,32745
#  define L_EVENT_FILE_NAME_VISTA 1015,32864
#  define L_EVENT_MAX_SIZE_NAME 1017,32985
#  define EVENT_MAX_SIZE 1018,33028
#  define L_EVENT_RETENTION_NAME 1019,33062
#  define EVENT_RETENTION 1020,33108
#  define L_EVENT_TYPES_SUPPORTED_NAME 1022,33157
#  define EVENT_TYPES_SUPPORTED 1023,33214
#  define L_EVENT_CATEGORY_COUNT_NAME 1024,33279
#  define EVENT_CATEGORY_COUNT 1025,33334
#  define L_EVENT_CATEGORY_FILE_NAME 1026,33367
#  define L_EVENT_MESSAGE_FILE 1027,33427
#  define BASE_NAMED_OBJECTS 1030,33514
#  define DYNAMORIO_SHARED_OBJECT_BASE 1032,33645
#  define DYNAMORIO_SHARED_OBJECT_DIRECTORY 1034,33771
#  define DYNAMORIO_REGISTRY_BASE_SUBKEY 1037,33884
#  define DYNAMORIO_REGISTRY_BASE 1038,33966
#  define DYNAMORIO_REGISTRY_HIVE 1039,34098
#  define DYNAMORIO_REGISTRY_KEY 1040,34151
#  define L_DYNAMORIO_REGISTRY_KEY 1041,34218
#  define INJECT_ALL_HIVE 1043,34329
#  define INJECT_ALL_KEY 1044,34377
#  define INJECT_ALL_SUBKEY 1045,34465
#  define INJECT_ALL_LOAD_SUBKEY 1047,34535
#  define INJECT_ALL_SIGN_SUBKEY 1049,34632
#  define INJECT_ALL_HIVE_L 1051,34701
#  define INJECT_ALL_KEY_L 1052,34757
#  define INJECT_ALL_SUBKEY_L 1053,34819
#  define INJECT_ALL_LOAD_SUBKEY_L 1054,34884
#  define INJECT_ALL_SIGN_SUBKEY_L 1055,34963
#  define INJECT_DLL_NAME 1057,35043
#  define INJECT_DLL_8_3_NAME 1058,35092
#  define INJECT_HELPER_DLL1_NAME 1060,35139
#  define INJECT_HELPER_DLL2_NAME 1061,35197
#  define DEBUGGER_INJECTION_HIVE 1063,35256
#  define DEBUGGER_INJECTION_KEY 1064,35315
#  define DEBUGGER_INJECTION_VALUE_NAME 1065,35435
#  define DEBUGGER_INJECTION_HIVE_L 1067,35487
#  define DEBUGGER_INJECTION_KEY_L 1068,35554
#  define DEBUGGER_INJECTION_VALUE_NAME_L 1069,35635
#  define DRINJECT_NAME 1071,35724
#  define SVCHOST_NAME 1074,35844
#  define EXE_SUFFIX 1075,35885
#  define L_EXE_SUFFIX 1076,35923
#  define SVCHOST_EXE_NAME 1077,35981
#  define L_SVCHOST_EXE_NAME 1078,36036
#  define DYNAMORIO_LIBRARY_NAME 1081,36151
#  define DLLPATH_RELEASE 1082,36200
#  define DLLPATH_DEBUG 1083,36270
#  define DLLPATH_PROFILE 1084,36338
#  define L_DYNAMORIO_LIBRARY_NAME 1086,36409
#  define L_DLLPATH_RELEASE 1087,36483
#  define L_DLLPATH_DEBUG 1088,36558
#  define L_DLLPATH_PROFILE 1089,36631
#  define INJECT_ALL_DLL_SUBPATH 1091,36707
#  define L_INJECT_ALL_DLL_SUBPATH 1092,36771
enum DLL_TYPE 1094,36855
        DLL_NONE,1095,36871
        DLL_UNKNOWN,1096,36889
        DLL_RELEASE,1097,36910
        DLL_DEBUG,1098,36931
        DLL_PROFILE,1099,36950
        DLL_CUSTOM,1100,36971
        DLL_PATHHAS1101,36991
# define UNIT_TEST_EXE_NAME 1106,37064
    RUNUNDER_OFF 1158,39425
    RUNUNDER_OFF                  = 0x00,x001158,39425
    RUNUNDER_ON 1159,39477
    RUNUNDER_ON                   = 0x01,x011159,39477
    RUNUNDER_ALL 1160,39529
    RUNUNDER_ALL                  = 0x02,x021160,39529
    RUNUNDER_FORMERLY_EXPLICIT 1165,39794
    RUNUNDER_FORMERLY_EXPLICIT    = 0x04,x041165,39794
    RUNUNDER_COMMANDLINE_MATCH 1167,39847
    RUNUNDER_COMMANDLINE_MATCH    = 0x08,x081167,39847
    RUNUNDER_COMMANDLINE_DISPATCH 1168,39899
    RUNUNDER_COMMANDLINE_DISPATCH = 0x10,x101168,39899
    RUNUNDER_COMMANDLINE_NO_STRIP 1169,39951
    RUNUNDER_COMMANDLINE_NO_STRIP = 0x20,x201169,39951
    RUNUNDER_ONCE 1170,40003
    RUNUNDER_ONCE                 = 0x40,x401170,40003
    RUNUNDER_EXPLICIT 1172,40056
    RUNUNDER_EXPLICIT             = 0x80,x801172,40056
#define NUDGE_DEFINITIONS(1191,40970
#define NUDGE_DEF(1225,43469
    NUDGE_DEFINITIONS(1226,43520
#undef NUDGE_DEF1227,43544
    NUDGE_DR_PARAMETRIZED_END1228,43561
} nudge_generic_type_t;1229,43591
#define NUDGE_GENERIC(1232,43657
#define NUDGE_ARG_VERSION_1 1235,43747
#define NUDGE_ARG_CURRENT_VERSION 1236,43777
    NUDGE_IS_INTERNAL 1242,43899
    NUDGE_IS_INTERNAL       = 0x01,x011242,43899
    NUDGE_NUDGER_FREE_STACK 1244,43986
    NUDGE_NUDGER_FREE_STACK = 0x02,x021244,43986
    NUDGE_FREE_ARG 1246,44146
    NUDGE_FREE_ARG          = 0x04,x041246,44146
    int ignored1;1257,44552
    uint nudge_action_mask:nudge_action_mask1262,44829
    uint version:version1263,44860
    uint flags:flags1264,44880
    int ignored2;1265,44898
    uint version;1267,44987
    uint nudge_action_mask;1268,45046
    uint flags;1269,45108
    client_id_t client_id;1271,45165
    uint64 client_arg;1272,45227
} nudge_arg_t;1278,45415
# define NUDGESIG_SIGNUM 1286,45651
#define AVOID_API_EXPORT 1296,46100
#define HOTP_POLICY_ID_LENGTH 1308,46518
    DR_PROBE_STATUS_ERROR 1322,46981
    DR_PROBE_STATUS_INVALID_ID 1325,47097
    DR_PROBE_STATUS_INVALID_VADDR 1335,47484
    DR_PROBE_STATUS_INVALID_LIB 1341,47734
    DR_PROBE_STATUS_INVALID_LIB_OFFS 1346,47932
    DR_PROBE_STATUS_INVALID_FUNC 1352,48175
    DR_PROBE_STATUS_VADDR_NOT_EXEC 1364,48745
    DR_PROBE_STATUS_LIB_NOT_SEEN 1367,48865
    DR_PROBE_STATUS_WAITING_FOR_EXEC 1373,49118
    DR_PROBE_STATUS_LIB_UNLOADED 1378,49322
    DR_PROBE_STATUS_INJECTED 1383,49445
    DR_PROBE_STATUS_UNSUPPORTED 1386,49553
    HOTP_INJECT_ERROR 1416,50918
    HOTP_INJECT_ERROR = DR_PROBE_STATUS_ERROR,1416,50918
    HOTP_INJECT_PROTECT 1419,51013
    HOTP_INJECT_PROTECT = DR_PROBE_STATUS_INJECTED,1419,51013
    HOTP_INJECT_DETECT 1425,51268
    HOTP_INJECT_IN_PROGRESS 1430,51461
    HOTP_INJECT_PENDING 1435,51611
    HOTP_INJECT_PENDING = DR_PROBE_STATUS_WAITING_FOR_EXEC,1435,51611
    HOTP_INJECT_NO_MATCH 1441,51899
    HOTP_INJECT_NO_MATCH = DR_PROBE_STATUS_LIB_NOT_SEEN,1441,51899
    HOTP_INJECT_OFF 1450,52172
} dr_probe_status_t;1452,52282
typedef dr_probe_status_t hotp_inject_status_t;1455,52328
    HOTP_MODE_OFF 1462,52526
    HOTP_MODE_DETECT 1463,52549
    HOTP_MODE_PROTECT 1464,52576
} hotp_policy_mode_t;1465,52602
    char policy_id[policy_id1481,53420
    hotp_inject_status_t inject_status;1482,53467
    hotp_policy_mode_t mode;1491,53948
} hotp_policy_status_t;1492,53977
    uint crc;1507,54665
    uint size;1508,54679
    uint num_policies;1509,54736
    hotp_policy_status_t *policy_status_array;policy_status_array1510,54759
} hotp_policy_status_table_t;1511,54806
    GET_PARAMETER_BUF_TOO_SMALL 1527,55494
    GET_PARAMETER_FAILURE 1528,55532
    GET_PARAMETER_SUCCESS 1529,55563
    GET_PARAMETER_NOAPPSPECIFIC 1530,55594
    SET_PARAMETER_FAILURE 1531,55631
    SET_PARAMETER_FAILURE = GET_PARAMETER_FAILURE,1531,55631
    SET_PARAMETER_SUCCESS 1532,55682
    SET_PARAMETER_SUCCESS = GET_PARAMETER_SUCCESS1532,55682
#define IS_GET_PARAMETER_FAILURE(1534,55735
#define IS_GET_PARAMETER_SUCCESS(1535,55783
typedef union _dr_xmm_t 1570,57400
    uint64 u64[u641572,57437
    uint   u32[u321574,57508
    byte   u8[u81575,57572
    reg_t  reg[reg1576,57636
} dr_xmm_t;1577,57714
typedef union _dr_ymm_t 1580,57756
    uint64 u64[u641596,58507
    uint   u32[u321599,58585
    byte   u8[u81600,58649
    reg_t  reg[reg1601,58713
} dr_ymm_t;1602,58791
#  define NUM_XMM_SLOTS 1615,59266
#  define NUM_XMM_SLOTS 1617,59362
# define PRE_XMM_PADDING 1619,59461
# define NUM_XMM_SLOTS 1621,59555
# define PRE_XMM_PADDING 1622,59643
    DR_MC_INTEGER 1631,59977
    DR_MC_INTEGER    = 0x01,x011631,59977
    DR_MC_CONTROL 1638,60210
    DR_MC_CONTROL    = 0x02,x021638,60210
    DR_MC_MULTIMEDIA 1645,60528
    DR_MC_MULTIMEDIA = 0x04,x041645,60528
    DR_MC_ALL 1647,60587
    DR_MC_ALL        = (DR_MC_INTEGER 1647,60587
    DR_MC_ALL        = (DR_MC_INTEGER | DR_MC_CONTROL 1647,60587
    DR_MC_ALL        = (DR_MC_INTEGER | DR_MC_CONTROL | DR_MC_MULTIMEDIA)1647,60587
} dr_mcontext_flags_t;1648,60662
typedef struct _dr_mcontext_t 1653,60724
    size_t size;1658,60903
    dr_mcontext_flags_t flags;1667,61365
} dr_mcontext_t;1669,61415
typedef struct _priv_mcontext_t 1673,61498
} priv_mcontext_t;1675,61551
#define NUM_XMM_SAVED 1698,62696

lib/dr_api.h,120
#define _DR_API_H_ 34,1709
DR_EXPORT LINK_ONCE int _USES_DR_VERSION_ 97,3442
LINK_ONCE int _USES_DR_VERSION_ 99,3519

lib/statsx.h,80
# define RSTATS_DEF 69,2780
# define STATS_DEF(71,2816
    STATS_DEF(74,2869

utils.h,24471
#define _UTILS_H_ 43,1984
# undef assert46,2019
#define assert 49,2082
#define CHKLVL_ASSERTS 52,2187
#define CHKLVL_DEFAULT 53,2212
# define DEBUG_CHECKS(59,2445
# define DEBUG_CHECKS(61,2519
#   define ASSERT(71,2905
#   define ASSERT_MESSAGE(77,3208
#   define REPORT_CURIOSITY(79,3362
#   define ASSERT_CURIOSITY(86,3910
#   define ASSERT_CURIOSITY_ONCE(91,4279
#   define ASSERT(98,4723
#   define ASSERT_MESSAGE(101,4864
#   define ASSERT_CURIOSITY(104,5016
#   define ASSERT_CURIOSITY_ONCE(105,5058
# define ASSERT_NOT_TESTED(107,5128
# define ASSERT(110,5293
# define ASSERT_MESSAGE(111,5331
# define ASSERT_NOT_TESTED(112,5380
# define ASSERT_CURIOSITY(113,5422
# define ASSERT_CURIOSITY_ONCE(114,5464
#define ASSERT_NOT_REACHED(117,5531
#define ASSERT_BUG_NUM(118,5574
#define ASSERT_NOT_IMPLEMENTED(119,5652
#define EXEMPT_TEST(120,5739
#define apicheck(128,6080
#  define CLIENT_ASSERT(135,6323
#  define CLIENT_ASSERT(137,6379
# define CLIENT_ASSERT(140,6468
# define APP_EXPORT_ASSERT(144,6568
# define APP_EXPORT_ASSERT(146,6626
#define CHECK_TRUNCATE_TYPE_byte(158,7316
#define CHECK_TRUNCATE_TYPE_sbyte(159,7389
#define CHECK_TRUNCATE_TYPE_ushort(160,7480
#define CHECK_TRUNCATE_TYPE_short(161,7555
#define CHECK_TRUNCATE_TYPE_uint(162,7644
# define CHECK_TRUNCATE_TYPE_int(170,8199
# define CHECK_TRUNCATE_TYPE_int(172,8262
# define CHECK_TRUNCATE_TYPE_size_t(175,8366
# define CHECK_TRUNCATE_TYPE_stats_int_t(177,8491
# define CHECK_TRUNCATE_TYPE_size_t 179,8550
# define CHECK_TRUNCATE_TYPE_stats_int_t 180,8611
#define ASSERT_TRUNCATE(187,8941
#define CURIOSITY_TRUNCATE(190,9182
#define CLIENT_ASSERT_TRUNCATE(194,9442
#define ASSERT_BITFIELD_TRUNCATE(198,9627
#define CLIENT_ASSERT_BITFIELD_TRUNCATE(200,9747
#define LOCK_FREE_STATE 204,9935
#define LOCK_SET_STATE 205,10011
#define LOCK_CONTENDED_STATE 207,10187
#define SPINLOCK_FREE_STATE 209,10238
#define CONTENTION_EVENT_NOT_CREATED 211,10329
typedef HANDLE contention_event_t;214,10406
typedef void * contention_event_t;216,10447
typedef struct _mutex_t 219,10490
    volatile int lock_requests;220,10516
    contention_event_t contended_event;222,10682
    const char *name;name225,10875
    uint      rank;229,11115
    thread_id_t owner;230,11199
    dcontext_t *owning_dcontext;owning_dcontext235,11442
    struct _mutex_t *prev_owned_lock;prev_owned_lock236,11534
    uint count_times_acquired;237,11612
    uint count_times_contended;238,11691
    uint count_times_spin_pause;239,11776
    uint max_contended_requests;240,11878
    uint count_times_spin_only;241,11971
    struct _mutex_t *prev_process_lock;prev_process_lock244,12270
    struct _mutex_t *next_process_lock;next_process_lock245,12310
#  define MAX_MUTEX_CALLSTACK 251,12593
    byte *callstack[callstack252,12625
    bool app_lock;256,12812
#  define MAX_MUTEX_CALLSTACK 259,12845
    bool deleted;261,12923
} mutex_t;264,13092
typedef struct _spin_mutex_t 269,13328
    mutex_t lock;270,13359
} spin_mutex_t;271,13377
typedef struct _recursive_lock_t 274,13449
    mutex_t lock;275,13484
    thread_id_t owner;281,13770
    uint count;282,13793
} recursive_lock_t;283,13809
typedef struct _read_write_lock_t 285,13830
    mutex_t lock;286,13866
    volatile int num_readers;291,14107
    thread_id_t writer;293,14198
    volatile int num_pending_readers;294,14222
    contention_event_t writer_waiting_readers;295,14314
    contention_event_t readers_waiting_writer;296,14402
} read_write_lock_t;298,14578
#  define LOCK_RANK(301,14626
    LOCK_RANK(307,14862
    LOCK_RANK(outermost_lock)307,14862
    LOCK_RANK(308,14948
    LOCK_RANK(thread_in_DR_exclusion)308,14948
    LOCK_RANK(309,15004
    LOCK_RANK(all_threads_synch_lock)309,15004
    LOCK_RANK(311,15074
    LOCK_RANK(trace_building_lock)311,15074
    LOCK_RANK(317,15338
    LOCK_RANK(thread_initexit_lock)317,15338
    LOCK_RANK(319,15418
    LOCK_RANK(bb_building_lock)319,15418
    LOCK_RANK(322,15554
    LOCK_RANK(exception_stack_lock)322,15554
    LOCK_RANK(326,15736
    LOCK_RANK(all_threads_lock)326,15736
    LOCK_RANK(328,15797
    LOCK_RANK(linking_lock)328,15797
    LOCK_RANK(331,15890
    LOCK_RANK(shared_blocks_lock)331,15890
    LOCK_RANK(332,15951
    LOCK_RANK(shared_traces_lock)332,15951
    LOCK_RANK(335,16020
    LOCK_RANK(synch_lock)335,16020
    LOCK_RANK(337,16081
    LOCK_RANK(protect_info)337,16081
    LOCK_RANK(340,16208
    LOCK_RANK(sideline_mutex)340,16208
    LOCK_RANK(343,16248
    LOCK_RANK(shared_cache_flush_lock)343,16248
    LOCK_RANK(346,16451
    LOCK_RANK(shared_delete_lock)346,16451
    LOCK_RANK(347,16532
    LOCK_RANK(lazy_delete_lock)347,16532
    LOCK_RANK(349,16614
    LOCK_RANK(shared_cache_lock)349,16614
    LOCK_RANK(354,16929
    LOCK_RANK(change_linking_lock)354,16929
    LOCK_RANK(356,17008
    LOCK_RANK(shared_vm_areas)356,17008
    LOCK_RANK(357,17089
    LOCK_RANK(shared_cache_count_lock)357,17089
    LOCK_RANK(360,17188
    LOCK_RANK(fragment_delete_mutex)360,17188
    LOCK_RANK(363,17258
    LOCK_RANK(tracedump_mutex)363,17258
    LOCK_RANK(365,17341
    LOCK_RANK(emulate_write_lock)365,17341
    LOCK_RANK(367,17422
    LOCK_RANK(unit_flush_lock)367,17422
    LOCK_RANK(370,17495
    LOCK_RANK(maps_iter_buf_lock)370,17495
    LOCK_RANK(380,17918
    LOCK_RANK(hotp_vul_table_lock)380,17918
    LOCK_RANK(383,18061
    LOCK_RANK(coarse_info_lock)383,18061
    LOCK_RANK(386,18201
    LOCK_RANK(executable_areas)386,18201
    LOCK_RANK(390,18410
    LOCK_RANK(rct_module_lock)390,18410
    LOCK_RANK(394,18593
    LOCK_RANK(after_call_lock)394,18593
    LOCK_RANK(398,18803
    LOCK_RANK(module_data_lock)398,18803
    LOCK_RANK(400,18943
    LOCK_RANK(special_units_list_lock)400,18943
    LOCK_RANK(401,19009
    LOCK_RANK(special_heap_lock)401,19009
    LOCK_RANK(403,19161
    LOCK_RANK(coarse_info_incoming_lock)403,19161
    LOCK_RANK(410,19545
    LOCK_RANK(coarse_table_rwlock)410,19545
    LOCK_RANK(412,19719
    LOCK_RANK(coarse_pclookup_table_rwlock)412,19719
    LOCK_RANK(415,19952
    LOCK_RANK(coarse_th_table_rwlock)415,19952
    LOCK_RANK(417,20018
    LOCK_RANK(process_module_vector_lock)417,20018
    LOCK_RANK(420,20257
    LOCK_RANK(snapshot_lock)420,20257
    LOCK_RANK(421,20310
    LOCK_RANK(written_areas)421,20310
    LOCK_RANK(424,20460
    LOCK_RANK(futureexec_areas)424,20460
    LOCK_RANK(427,20605
    LOCK_RANK(app_flushed_areas)427,20605
    LOCK_RANK(430,20695
    LOCK_RANK(pretend_writable_areas)430,20695
    LOCK_RANK(431,20775
    LOCK_RANK(patch_proof_areas)431,20775
    LOCK_RANK(432,20850
    LOCK_RANK(emulate_write_areas)432,20850
    LOCK_RANK(433,20927
    LOCK_RANK(IAT_areas)433,20927
    LOCK_RANK(436,21084
    LOCK_RANK(dr_client_mutex)436,21084
    LOCK_RANK(437,21141
    LOCK_RANK(client_thread_count_lock)437,21141
    LOCK_RANK(438,21206
    LOCK_RANK(client_flush_request_lock)438,21206
    LOCK_RANK(439,21272
    LOCK_RANK(callback_registration_lock)439,21272
    LOCK_RANK(440,21339
    LOCK_RANK(client_tls_lock)440,21339
    LOCK_RANK(442,21402
    LOCK_RANK(intercept_hook_lock)442,21402
    LOCK_RANK(443,21459
    LOCK_RANK(privload_lock)443,21459
    LOCK_RANK(445,21540
    LOCK_RANK(sigfdtable_lock)445,21540
    LOCK_RANK(447,21600
    LOCK_RANK(table_rwlock)447,21600
    LOCK_RANK(448,21653
    LOCK_RANK(loaded_module_areas)448,21653
    LOCK_RANK(449,21731
    LOCK_RANK(aslr_areas)449,21731
    LOCK_RANK(450,21799
    LOCK_RANK(aslr_pad_areas)450,21799
    LOCK_RANK(451,21871
    LOCK_RANK(native_exec_areas)451,21871
    LOCK_RANK(452,21946
    LOCK_RANK(thread_vm_areas)452,21946
    LOCK_RANK(454,22006
    LOCK_RANK(app_pc_table_rwlock)454,22006
    LOCK_RANK(457,22145
    LOCK_RANK(dead_tables_lock)457,22145
    LOCK_RANK(458,22201
    LOCK_RANK(aslr_lock)458,22201
    LOCK_RANK(461,22258
    LOCK_RANK(hotp_only_tramp_areas_lock)461,22258
    LOCK_RANK(463,22398
    LOCK_RANK(hotp_patch_point_areas_lock)463,22398
    LOCK_RANK(467,22565
    LOCK_RANK(profile_callers_lock)467,22565
    LOCK_RANK(469,22635
    LOCK_RANK(coarse_stub_areas)469,22635
    LOCK_RANK(470,22695
    LOCK_RANK(moduledb_lock)470,22695
    LOCK_RANK(471,22756
    LOCK_RANK(pcache_dir_check_lock)471,22756
    LOCK_RANK(473,22806
    LOCK_RANK(suspend_lock)473,22806
    LOCK_RANK(474,22835
    LOCK_RANK(shared_lock)474,22835
    LOCK_RANK(476,22870
    LOCK_RANK(modlist_areas)476,22870
    LOCK_RANK(478,22956
    LOCK_RANK(privload_fls_lock)478,22956
    LOCK_RANK(479,23031
    LOCK_RANK(drwinapi_localheap_lock)479,23031
    LOCK_RANK(482,23132
    LOCK_RANK(client_aux_libs)482,23132
    LOCK_RANK(484,23180
    LOCK_RANK(client_aux_lib64_lock)484,23180
    LOCK_RANK(488,23248
    LOCK_RANK(alt_tls_lock)488,23248
    LOCK_RANK(497,23641
    LOCK_RANK(allunits_lock)497,23641
    LOCK_RANK(498,23698
    LOCK_RANK(fcache_unit_areas)498,23698
    IF_LINUX_(500,23829
    IF_LINUX_(LOCK_RANK(500,23829
    IF_LINUX_(LOCK_RANK(all_memory_areas)500,23829
    IF_UNIX_(501,23896
    IF_UNIX_(LOCK_RANK(501,23896
    IF_UNIX_(LOCK_RANK(set_thread_area_lock)501,23896
    LOCK_RANK(502,23963
    LOCK_RANK(landing_pad_areas_lock)502,23963
    LOCK_RANK(503,24045
    LOCK_RANK(dynamo_areas)503,24045
    LOCK_RANK(504,24103
    LOCK_RANK(map_intercept_pc_lock)504,24103
    LOCK_RANK(505,24167
    LOCK_RANK(global_alloc_lock)505,24167
    LOCK_RANK(506,24223
    LOCK_RANK(heap_unit_lock)506,24223
    LOCK_RANK(507,24272
    LOCK_RANK(vmh_lock)507,24272
    LOCK_RANK(508,24323
    LOCK_RANK(last_deallocated_lock)508,24323
    LOCK_RANK(512,24450
    LOCK_RANK(tls_lock)512,24450
    LOCK_RANK(515,24613
    LOCK_RANK(reset_pending_lock)515,24613
    LOCK_RANK(517,24672
    LOCK_RANK(initstack_mutex)517,24672
    LOCK_RANK(519,24730
    LOCK_RANK(event_lock)519,24730
    LOCK_RANK(520,24782
    LOCK_RANK(do_threshold_mutex)520,24782
    LOCK_RANK(521,24842
    LOCK_RANK(threads_killed_lock)521,24842
    LOCK_RANK(522,24903
    LOCK_RANK(child_lock)522,24903
    LOCK_RANK(525,24976
    LOCK_RANK(sideline_lock)525,24976
    LOCK_RANK(526,25030
    LOCK_RANK(do_not_delete_lock)526,25030
    LOCK_RANK(527,25088
    LOCK_RANK(remember_lock)527,25088
    LOCK_RANK(528,25141
    LOCK_RANK(sideline_table_lock)528,25141
    LOCK_RANK(531,25230
    LOCK_RANK(simulate_lock)531,25230
    LOCK_RANK(534,25281
    LOCK_RANK(process_kstats_lock)534,25281
    LOCK_RANK(537,25335
    LOCK_RANK(request_region_be_heap_reachable_lock)537,25335
    LOCK_RANK(540,25517
    LOCK_RANK(report_buf_lock)540,25517
    LOCK_RANK(547,25827
    LOCK_RANK(memory_info_buf_lock)547,25827
    LOCK_RANK(550,25886
    LOCK_RANK(dump_core_lock)550,25886
    LOCK_RANK(553,25925
    LOCK_RANK(logdir_mutex)553,25925
    LOCK_RANK(554,25974
    LOCK_RANK(diagnost_reg_mutex)554,25974
    LOCK_RANK(556,26034
    LOCK_RANK(profile_dump_lock)556,26034
    LOCK_RANK(559,26076
    LOCK_RANK(prng_lock)559,26076
    LOCK_RANK(563,26277
    LOCK_RANK(options_lock)563,26277
    LOCK_RANK(565,26321
    LOCK_RANK(debugbox_lock)565,26321
    LOCK_RANK(567,26358
    LOCK_RANK(eventlog_mutex)567,26358
    LOCK_RANK(568,26442
    LOCK_RANK(datasec_selfprot_lock)568,26442
    LOCK_RANK(569,26480
    LOCK_RANK(thread_stats_lock)569,26480
    LOCK_RANK(574,26663
    LOCK_RANK(shared_itimer_lock)574,26663
    LOCK_RANK(576,26706
    LOCK_RANK(innermost_lock)576,26706
typedef struct _thread_locks_t thread_locks_t;580,26819
#  define INIT_LOCK_NO_TYPE(594,27444
#  define INIT_LOCK_NO_TYPE(600,27760
#  define STRUCTURE_TYPE(612,28325
#  define STRUCTURE_TYPE(618,28563
#define INIT_LOCK_FREE(621,28599
#define ASSIGN_INIT_LOCK_FREE(625,28770
#define ASSIGN_INIT_SPINMUTEX_FREE(632,29160
#define INIT_RECURSIVE_LOCK(635,29263
#define INIT_READWRITE_LOCK(642,29642
#define ASSIGN_INIT_READWRITE_LOCK_FREE(651,30170
#define ASSIGN_INIT_RECURSIVE_LOCK_FREE(663,30934
#define INIT_SPINLOCK_FREE(672,31474
#define DELETE_LOCK(675,31626
#define DELETE_SPINMUTEX(676,31672
#define DELETE_RECURSIVE_LOCK(677,31737
#define DELETE_READWRITE_LOCK(678,31808
mutex_testlock(711,33127
typedef struct _broadcast_event_t broadcast_event_t;733,33925
#define WAIT_FOR_BROADCAST_EVENT(755,35018
#define WRITE_LOCK_HELD(773,36197
#define READ_LOCK_HELD(774,36283
# define OWN_MUTEX(782,36562
# define ASSERT_OWN_MUTEX(783,36616
# define ASSERT_DO_NOT_OWN_MUTEX(785,36689
# define OWN_NO_LOCKS(787,36770
# define ASSERT_OWN_NO_LOCKS(788,36821
# define OWN_MUTEX(794,37063
# define ASSERT_OWN_MUTEX(795,37105
# define ASSERT_DO_NOT_OWN_MUTEX(797,37178
# define OWN_NO_LOCKS(799,37268
# define ASSERT_OWN_NO_LOCKS(800,37320
#define ASSERT_OWN_WRITE_LOCK(802,37379
#define ASSERT_DO_NOT_OWN_WRITE_LOCK(804,37469
#define ASSERT_OWN_READ_LOCK(807,37635
#define READWRITE_LOCK_HELD(809,37718
#define ASSERT_OWN_READWRITE_LOCK(810,37799
#define ASSERT_OWN_RECURSIVE_LOCK(812,37892
#define SHARED_MUTEX(818,38079
#define SHARED_RECURSIVE_LOCK(822,38331
#define USE_BB_BUILDING_LOCK_STEADY_STATE(827,38607
#define USE_BB_BUILDING_LOCK(830,38841
#define SHARED_BB_LOCK(832,38979
#define SHARED_BB_UNLOCK(845,39738
#define NEED_SHARED_LOCK(850,40065
#define SHARED_FLAGS_MUTEX(853,40260
#define SHARED_FLAGS_RECURSIVE_LOCK(857,40449
#define PHI_2_32 893,42030
#define PHI_2_64 894,42089
# define HASH_PHI 896,42169
# define HASH_TAG_BITS 897,42196
# define HASH_PHI 899,42228
# define HASH_TAG_BITS 900,42255
#define HASH_MASK(904,42345
#define HASH_FUNC(909,42613
# define HASH_FUNC_BITS(917,42949
# define HASH_FUNC_BITS(924,43282
#define HASH_VALUE_FOR_TABLE(933,43794
#define HASHTABLE_SIZE(945,44585
    HASH_FUNCTION_NONE 949,44691
    HASH_FUNCTION_MULTIPLY_PHI 950,44719
    HASH_FUNCTION_LOWER_BSWAP 952,44771
    HASH_FUNCTION_BSWAP_XOR 953,44806
    HASH_FUNCTION_SWAP_12TO15 954,44839
    HASH_FUNCTION_SWAP_12TO15_AND_NONE 955,44874
    HASH_FUNCTION_SHIFT_XOR 956,44918
    HASH_FUNCTION_STRING 958,44958
    HASH_FUNCTION_STRING_NOCASE 959,44988
    HASH_FUNCTION_ENUM_MAX,960,45025
} hash_function_t;961,45053
# define REACHABLE_32BIT_START(977,45817
# define REACHABLE_32BIT_END(984,46358
#define MAX_LOW_2GB 988,46580
#define ALIGNED(991,46684
#define ALIGN_FORWARD(992,46757
#define ALIGN_FORWARD_UINT(994,46870
#define ALIGN_BACKWARD(996,46970
#define PAD(997,47058
#define ALIGN_MOD(998,47139
#define CROSSES_ALIGNMENT(1000,47236
#define ALIGN_SHIFT_SIZE(1003,47422
#define IS_POWER_OF_2(1007,47586
#define POINTER_OVERFLOW_ON_ADD(1012,47745
#define POINTER_UNDERFLOW_ON_SUB(1014,47845
typedef uint bitmap_element_t;1020,48038
typedef bitmap_element_t bitmap_t[bitmap_t1021,48069
#define BITMAP_DENSITY 1029,48350
#define BITMAP_MASK(1030,48378
#define BITMAP_INDEX(1031,48433
#define BITMAP_NOT_FOUND 1032,48481
bitmap_test(1043,48817
bitmap_set(1049,48930
bitmap_clear(1055,49027
#define LOGDIR_MAX_NUM 1073,49728
#define LOGDIR_FORMAT_STRING 1074,49765
#define LOGDIR_FORMAT_ARGS(1075,49807
# define MAX_LOG_LENGTH 1083,50180
# define MAX_LOG_LENGTH_MINUS_ONE 1084,50227
# define MAX_LOG_LENGTH 1090,50488
# define MAX_LOG_LENGTH_MINUS_ONE 1091,50548
# define LOG(1095,50677
# define DOELOG(1102,51023
# define DOCHECK(1109,51340
#  define DOLOG 1114,51497
#  define LOG_DECLARE(1115,51520
#  define DOLOG(1118,51647
#  define LOG_DECLARE(1119,51687
# define THREAD 1121,51745
# define THREAD_GET 1123,51885
# define GLOBAL 1124,51934
# define LOG(1128,52137
# define DOLOG(1129,52174
# define DOELOG 1130,52213
# define LOG_DECLARE(1131,52235
# define DOCHECK(1132,52269
# define wcsnlen 1151,53029
    BASE_DIR,1175,53965
    PROCESS_DIR 1176,54027
} log_dir_t;1177,54107
#define DO_ONCE(1198,55181
# define DECLARE_THRESHOLD_LOCK(1224,56579
# define DECLARE_THRESHOLD_LOCK(1226,56640
#define DO_THRESHOLD_SAFE(1234,56971
#define TRY_EXCEPT_ALLOW_NO_DCONTEXT(1273,59014
#define TRY_EXCEPT(1290,60329
#define TRY_FINALLY(1296,60655
#define TRY(1303,61008
#define EXCEPT(1353,63809
#define FINALLY(1369,64608
#define POP_TRY_BLOCK(1396,66413
enum {LONGJMP_EXCEPTION LONGJMP_EXCEPTION1402,66749
#define PROBE_READ_PC(1406,66921
#define PROBE_WRITE_PC(1407,66974
#define UNUSED_VARIABLE(1425,67860
#define GLOBAL_STAT(1431,68132
#define GLOBAL_STAT_ADDR(1433,68259
#define DO_GLOBAL_STATS(1434,68318
# define XSTATS_ATOMIC_INC(1441,68531
# define XSTATS_ATOMIC_DEC(1442,68586
# define XSTATS_ATOMIC_ADD(1443,68641
# define XSTATS_ATOMIC_MAX(1444,68706
# define XSTATS_ATOMIC_ADD_EXCHANGE(1445,68771
# define XSTATS_ATOMIC_INC(1447,68859
# define XSTATS_ATOMIC_DEC(1448,68912
# define XSTATS_ATOMIC_ADD(1449,68965
# define XSTATS_ATOMIC_MAX(1450,69028
# define XSTATS_ATOMIC_ADD_EXCHANGE(1451,69091
#define XSTATS_INC_DC(1457,69305
#define XSTATS_INC(1461,69543
#define XSTATS_DEC_DC(1465,69759
#define XSTATS_DEC(1469,69997
#define XSTATS_ADD_DC(1473,70213
#define XSTATS_ADD(1479,70679
#define XSTATS_SUB(1482,70908
#define XSTATS_ADD_ASSIGN_DC(1483,70980
#define XSTATS_INC_ASSIGN_DC(1492,71620
#define XSTATS_ADD_ASSIGN(1494,71750
#define XSTATS_INC_ASSIGN(1497,71988
#define XSTATS_MAX_HELPER(1500,72059
#define XSTATS_MAX_DC(1511,72825
#define XSTATS_PEAK_DC(1514,73035
#define XSTATS_MAX(1516,73159
#define XSTATS_TRACK_MAX(1519,73389
#define XSTATS_PEAK(1528,74005
#define XSTATS_ADD_MAX_DC(1533,74225
#define XSTATS_ADD_MAX(1539,74642
#define XSTATS_ADD_PEAK_DC(1543,74939
#define XSTATS_ADD_PEAK(1545,75078
#define XSTATS_RESET_DC(1550,75321
#define XSTATS_RESET(1554,75559
#define RSTATS_INC 1559,75824
#define RSTATS_DEC 1560,75854
#define RSTATS_ADD 1561,75884
#define RSTATS_SUB 1562,75914
#define RSTATS_ADD_PEAK 1563,75944
#   define DODEBUGINT 1566,76025
#   define DOCHECKINT 1567,76055
#   define DODEBUGINT(1569,76091
#   define DOCHECKINT(1570,76138
#   define DEBUG_EXT_DECLARE(1577,76412
#   define DEBUG_EXT_DECLARE(1579,76472
#   define DODEBUG(1583,76573
#   define DEBUG_DECLARE(1584,76630
#   define DOSTATS(1585,76680
#   define GLOBAL_STATS_ON(1600,77541
#   define THREAD_STAT(1601,77619
#   define THREAD_STATS_ON(1603,77714
#   define DO_THREAD_STATS(1606,77934
#   define XSTATS_WITH_DC(1611,78246
#   define STATS_INC 1618,78630
#   define STATS_INC_DC 1620,78707
#   define STATS_DEC 1621,78745
#   define STATS_ADD 1622,78777
#   define STATS_SUB 1623,78809
#   define STATS_INC_ASSIGN 1624,78841
#   define STATS_ADD_ASSIGN 1625,78887
#   define STATS_MAX 1626,78933
#   define STATS_TRACK_MAX 1627,78965
#   define STATS_PEAK 1628,79009
#   define STATS_ADD_MAX 1629,79043
#   define STATS_ADD_PEAK 1630,79083
#   define STATS_RESET 1631,79125
#   define DODEBUG(1634,79168
#   define DEBUG_DECLARE(1635,79198
#   define DOSTATS(1636,79236
#   define THREAD_STATS_ON(1637,79266
#   define XSTATS_WITH_DC(1638,79309
#   define DO_THREAD_STATS(1639,79361
#   define GLOBAL_STATS_ON(1640,79423
#   define STATS_INC(1645,79654
#   define STATS_INC_DC(1646,79695
#   define STATS_DEC(1647,79749
#   define STATS_ADD(1648,79790
#   define STATS_SUB(1649,79838
#   define STATS_INC_ASSIGN(1650,79886
#   define STATS_ADD_ASSIGN(1651,79939
#   define STATS_MAX(1652,79999
#   define STATS_TRACK_MAX(1653,80054
#   define STATS_PEAK(1654,80117
#   define STATS_ADD_MAX(1655,80159
#   define STATS_ADD_PEAK(1656,80225
#   define STATS_RESET(1657,80278
# define DOKSTATS(1661,80355
# define KSTART(1668,80630
# define KSTOP(1671,80740
# define KSWITCH(1674,80884
# define KSTOP_NOT_MATCHING(1677,81010
# define KSTOP_REWIND(1684,81396
# define KSTOP_REWIND_UNTIL(1685,81474
# define KSWITCH_STOP(1688,81612
# define KSWITCH_STOP_NOT_PROPAGATED(1694,81868
# define KSTOP_NOT_MATCHING_NOT_PROPAGATED(1701,82184
# define KSTOP_NOT_PROPAGATED(1708,82538
# define KSTART_DC(1723,83267
# define KSTOP_DC(1725,83395
# define KSTOP_NOT_MATCHING_DC(1727,83531
# define KSTOP_REWIND_DC(1731,83758
# define DOKSTATS(1733,83874
# define KSTART(1734,83920
# define KSWITCH(1735,83966
# define KSWITCH_STOP(1736,84012
# define KSWITCH_STOP_NOT_PROPAGATED(1737,84058
# define KSTOP_NOT_MATCHING_NOT_PROPAGATED(1738,84115
# define KSTOP_NOT_PROPAGATED(1739,84178
# define KSTOP_NOT_MATCHING(1740,84228
# define KSTOP(1741,84278
# define KSTOP_REWIND(1742,84324
# define KSTOP_REWIND_UNTIL(1743,84370
# define KSTART_DC(1745,84419
# define KSTOP_DC(1746,84465
# define KSTOP_NOT_MATCHING_DC(1747,84511
# define KSTOP_REWIND_DC(1748,84566
#  define DODEBUG_ONCE(1752,84652
#  define DOLOG_ONCE(1753,84714
#  define DODEBUG_ONCE(1755,84804
#  define DOLOG_ONCE(1756,84852
#define MAX_FP_STATE_SIZE 1759,84934
#define PRESERVE_FLOATING_POINT_STATE_START(1770,85438
#define PRESERVE_FLOATING_POINT_STATE_END(1776,85756
#define PRESERVE_FLOATING_POINT_STATE(1781,85961
#define ARGUMENT_COUNTER(1788,86312
#define _ARGUMENT_COUNT1(1789,86378
#define _ARGUMENT_COUNT2(1790,86451
#define SYSLOG_COMMON(1819,87595
#define SYSLOG_INTERNAL_COMMON(1822,87744
#define SYSLOG_CUSTOM_NOTIFY(1834,88437
#define SYSLOG(1837,88560
#define SYSLOG_NO_OPTION_SYNCH(1839,88649
# define SYSLOG_INTERNAL(1843,88811
# define SYSLOG_INTERNAL_NO_OPTION_SYNCH(1845,88903
# define SYSLOG_INTERNAL(1848,89018
# define SYSLOG_INTERNAL_NO_OPTION_SYNCH(1849,89048
#define SYSLOG_INTERNAL_INFO(1853,89139
#define SYSLOG_INTERNAL_WARNING(1855,89228
#define SYSLOG_INTERNAL_ERROR(1857,89316
#define SYSLOG_INTERNAL_CRITICAL(1859,89400
#define SYSLOG_INTERNAL_INFO_ONCE(1862,89491
#define SYSLOG_INTERNAL_WARNING_ONCE(1864,89584
#define SYSLOG_INTERNAL_ERROR_ONCE(1866,89683
#define SYSLOG_INTERNAL_CRITICAL_ONCE(1868,89778
#define USAGE_ERROR(1876,90231
#define FATAL_USAGE_ERROR(1881,90563
#define OPTION_PARSE_ERROR(1890,91222
# define TRACELOG(1898,91655
# define TRACELOG(1900,91744
#define LOG_NONE 1908,92026
#define LOG_STATS 1909,92064
#define LOG_TOP 1910,92102
#define LOG_THREADS 1911,92140
#define LOG_SYSCALLS 1912,92178
#define LOG_ASYNCH 1913,92216
#define LOG_INTERP 1914,92254
#define LOG_EMIT 1915,92292
#define LOG_LINKS 1916,92330
#define LOG_CACHE 1917,92368
#define LOG_FRAGMENT 1918,92406
#define LOG_DISPATCH 1919,92444
#define LOG_MONITOR 1920,92482
#define LOG_HEAP 1921,92520
#define LOG_VMAREAS 1922,92558
#define LOG_SYNCH 1923,92596
#define LOG_MEMSTATS 1924,92634
#define LOG_OPTS 1925,92672
#define LOG_SIDELINE 1926,92710
#define LOG_SYMBOLS 1927,92748
#define LOG_RCT 1928,92786
#define LOG_NT 1929,92824
#define LOG_HOT_PATCHING 1930,92862
#define LOG_HTABLE 1931,92900
#define LOG_MODULEDB 1932,92938
#define LOG_LOADER 1933,92976
#define LOG_CLEANCALL 1934,93014
#define LOG_ALL_RELEASE 1936,93053
#define LOG_ALL 1937,93091
# define LOG_PROFILE 1940,93155
#define MAXIMUM_SYMBOL_LENGTH 1946,93366
    DUMP_NO_QUOTING 1970,94046
    DUMP_NO_QUOTING   = 0x01000,x010001970,94046
    DUMP_OCTAL 1971,94113
    DUMP_OCTAL        = 0x02000,x020001971,94113
    DUMP_NO_CHARS 1972,94163
    DUMP_NO_CHARS     = 0x04000,x040001972,94163
    DUMP_RAW 1973,94224
    DUMP_RAW          = 0x08000,x080001973,94224
    DUMP_DWORD 1974,94284
    DUMP_DWORD        = 0x10000,x100001974,94284
    DUMP_ADDRESS 1975,94342
    DUMP_ADDRESS      = 0x20000,x200001975,94342
    DUMP_APPEND_ASCII 1976,94421
    DUMP_APPEND_ASCII = 0x40000,x400001976,94421
    DUMP_PER_LINE 1977,94496
    DUMP_PER_LINE     = 0x000ff x000ff1977,94496
#define DUMP_PER_LINE_DEFAULT 1979,94564
#define MD5_BLOCK_LENGTH 2022,96198
#define MD5_RAW_BYTES 2023,96226
#define MD5_STRING_LENGTH 2024,96251
struct MD5Context 2031,96557
    uint32 state[state2032,96577
    uint64 count;2033,96634
    unsigned char buffer[buffer2034,96710
#   undef isprint2078,97884
#   undef isdigit2083,97950
#define isprint_fast(2089,98014
#define isdigit_fast(2090,98070
#  undef isprint2098,98318
#  undef isdigit2101,98359
# define isprint 2103,98384
# define isdigit 2104,98450
#define MAX_CALL_PROFILE_DEPTH 2141,100089
#define EXPECT(2149,100270
#define EXPECT_RELATION(2154,100481
#define EXPECT_RELATION_INTERNAL(2159,100692
#define TESTRUN(2172,101519
#define UNIT_TEST_MAIN 2187,102146

emit.c,335
#define STATS_FCACHE_ADD(58,2307
get_last_fragment_body_instr_pc(75,3090
stress_test_recreate(92,3618
final_exit_shares_prev_stub(140,5632
set_linkstub_fields(184,7689
emit_fragment_common(387,16772
emit_invisible_fragment(975,41615
emit_fragment(989,42189
emit_fragment_ex(1003,42709
emit_fragment_as_replacement(1015,43196

lib/dr_api.h,120
#define _DR_API_H_ 34,1709
DR_EXPORT LINK_ONCE int _USES_DR_VERSION_ 97,3442
LINK_ONCE int _USES_DR_VERSION_ 99,3519

lib/dr_app.h,155
#define _DR_APP_H_ 40,1829
#    define DR_APP_API 44,1890
#    define DR_APP_API 46,1943
#    define DR_APP_API 50,2082
#    define DR_APP_API52,2154

lib/dr_config.h,979
#define _DR_CONFIG_H_ 35,1774
#define DR_MAX_OPTIONS_LENGTH 57,2638
    DR_MODE_NONE 66,2839
    DR_MODE_CODE_MANIPULATION 72,3011
    DR_MODE_PROBE 76,3147
    DR_MODE_MEMORY_FIREWALL 82,3256
    DR_MODE_DO_NOT_RUN 91,3459
} dr_operation_mode_t;93,3488
    DR_SUCCESS,98,3640
    DR_PROC_REG_EXISTS,101,3729
    DR_PROC_REG_INVALID,104,3830
    DR_PRIORITY_INVALID,107,3928
    DR_ID_CONFLICTING,110,4017
    DR_ID_INVALID,113,4105
    DR_FAILURE,116,4216
    DR_NUDGE_PID_NOT_INJECTED,119,4317
    DR_NUDGE_TIMEOUT,122,4440
    DR_CONFIG_STRING_TOO_LONG,125,4538
    DR_CONFIG_FILE_WRITE_FAILED,128,4617
    DR_NUDGE_PID_NOT_FOUND,131,4734
} dr_config_status_t;133,4763
    DR_PLATFORM_DEFAULT,137,4876
    DR_PLATFORM_32BIT,138,4949
    DR_PLATFORM_64BIT,139,5022
} dr_platform_t;140,5102
typedef struct _dr_registered_process_iterator_t dr_registered_process_iterator_t;398,17827
typedef struct _dr_client_iterator_t dr_client_iterator_t;709,33815

lib/dr_inject.h,142
#define _DR_INJECT_H_ 35,1764
# define ERROR_IMAGE_MACHINE_TYPE_MISMATCH_EXE 55,2379
# define WARN_IMAGE_MACHINE_TYPE_MISMATCH_EXE 60,2537

lib/dr_stats.h,1059
#define _DR_STATS_H_ 36,1759
# define DR_SHMEM_KEY 46,2071
# define DYNAMORIO_MAGIC_STRING 48,2136
# define DYNAMORIO_MAGIC_STRING_LEN 49,2193
#define STAT_NAME_MAX_LEN 52,2264
typedef struct _single_stat_t 53,2293
    char name[name58,2525
    stats_int_t value;62,2739
} single_stat_t;63,2762
#define NUM_EVENTS 69,2975
typedef struct _dr_statistics_t 70,2997
    char magicstring[magicstring72,3043
    process_id_t process_id;74,3100
    char process_name[process_name75,3149
    uint logmask;76,3205
    uint loglevel;77,3255
    char logdir[logdir78,3316
    uint64 perfctr_vals[perfctr_vals79,3386
    uint num_stats;80,3423
    single_stat_t stats[stats83,3533
#  define STATS_DEF(86,3581
#  define RSTATS_DEF(88,3647
# undef STATS_DEF91,3737
# undef RSTATS_DEF92,3755
} dr_statistics_t;94,3781
    thread_id_t thread_id;99,3875
    mutex_t thread_stats_lock;100,3902
# define STATS_DEF(116,4901
# define RSTATS_DEF(118,4967
} thread_local_statistics_t;121,5056
#undef STATS_DEF122,5085
#undef RSTATS_DEF123,5102

lib/fortran.c,93
void drsetup_(47,2070
void drcleanup_(52,2111
void drstart_(57,2156
void drstop_(62,2197

lib/globals_shared.h,22486
#define _GLOBALS_SHARED_H_44,1915
#    define WINDOWS49,2011
# define X6478,2822
# define UNIX82,2880
#  define WIN32_LEAN_AND_MEAN87,2940
#  define DR_EXPORT 113,3580
#  define LINK_ONCE 114,3622
#  define ALIGN_VAR(115,3664
#   define inline 117,3730
#  define INLINE_FORCED 119,3766
#    define DR_EXPORT 126,4030
#    define DR_EXPORT128,4101
#  define LINK_ONCE 130,4132
#  define ALIGN_VAR(131,4175
#   define inline 133,4250
#  define INLINE_FORCED 135,4288
#define MAXIMUM_PATH 149,4692
#  define NULL 154,4790
typedef _Bool bool;161,4964
typedef char bool;164,5038
#    define true 168,5092
#    define false 171,5139
#define CAST_TO_bool(178,5277
typedef unsigned int uint;181,5340
typedef unsigned short ushort;184,5406
typedef unsigned char byte;187,5474
typedef signed char sbyte;190,5540
typedef byte * app_pc;192,5574
typedef void (*generic_func_t)generic_func_t194,5598
typedef unsigned __int64 uint64;198,5683
typedef __int64 int64;201,5758
typedef __int64 ssize_t;204,5803
typedef int ssize_t;206,5836
#  define INT64_FORMAT 208,5866
typedef unsigned long int uint64;212,5962
typedef long int int64;215,6042
#    define INT64_FORMAT 217,6077
typedef unsigned long long int uint64;220,6150
typedef long long int int64;223,6235
#    define INT64_FORMAT 225,6275
typedef uint64 reg_t;233,6451
typedef uint reg_t;235,6479
typedef reg_t ptr_uint_t;238,6574
typedef int64 ptr_int_t;240,6611
typedef int ptr_int_t;242,6642
typedef size_t app_rva_t;250,6838
#define PTR_UINT_0 252,6865
#define PTR_UINT_1 253,6907
#define PTR_UINT_MINUS_1 254,6949
typedef ptr_uint_t thread_id_t;257,7007
typedef ptr_uint_t process_id_t;258,7039
typedef pid_t thread_id_t;260,7090
typedef pid_t process_id_t;261,7117
#define INVALID_PROCESS_ID 264,7153
typedef HANDLE file_t;272,7395
#  define INVALID_FILE 274,7467
#  define STDOUT 280,7719
#  define STDERR 282,7803
#  define STDIN 284,7887
typedef int file_t;289,7953
#  define INVALID_FILE 291,8022
#  define STDOUT 299,8349
#  define STDERR 301,8421
#  define STDIN 303,8493
typedef uint client_id_t;318,8983
    uint black_box_uint;328,9209
    uint64 black_box_uint64;329,9234
    uint black_box_uint[black_box_uint331,9270
} opnd_t;333,9306
    uint black_box_uint[black_box_uint342,9528
    uint black_box_uint[black_box_uint344,9564
} instr_t;346,9601
typedef struct _opnd_t opnd_t;349,9634
typedef struct _instr_t instr_t;351,9682
# define IN 356,9781
# define OUT 359,9836
# define INOUT 362,9895
# define POINTER_MAX 368,9985
#  define SSIZE_T_MAX 370,10038
# define POINTER_MAX_32BIT 372,10078
# define POINTER_MAX 374,10135
#  define SSIZE_T_MAX 376,10186
#define MAX_CLIENT_LIBS 380,10232
# define MAX(387,10483
# define MIN(388,10526
#define PTR_UINT_ABS(390,10576
#define TESTALL(393,10671
#define TESTANY(395,10772
#define TEST 397,10865
#define BOOLS_MATCH(399,10887
# define IF_DEBUG(403,11003
# define _IF_DEBUG(404,11026
# define IF_DEBUG_(405,11052
# define IF_DEBUG_ELSE(406,11078
# define IF_DEBUG_ELSE_0(407,11109
# define IF_DEBUG_ELSE_NULL(408,11141
# define IF_DEBUG(410,11182
# define _IF_DEBUG(411,11203
# define IF_DEBUG_(412,11225
# define IF_DEBUG_ELSE(413,11247
# define IF_DEBUG_ELSE_0(414,11278
# define IF_DEBUG_ELSE_NULL(415,11308
# define IF_INTERNAL(419,11370
# define IF_INTERNAL_ELSE(420,11396
# define IF_INTERNAL(422,11435
# define IF_INTERNAL_ELSE(423,11459
# define IF_WINDOWS(427,11515
# define IF_WINDOWS_(428,11540
# define _IF_WINDOWS(429,11568
# define IF_WINDOWS_ELSE_0(430,11596
# define IF_WINDOWS_ELSE(431,11630
# define IF_WINDOWS_ELSE_NP(432,11664
# define IF_UNIX(433,11699
# define IF_UNIX_ELSE(434,11719
# define IF_UNIX_(435,11748
# define _IF_UNIX(436,11769
# define IF_WINDOWS(438,11796
# define IF_WINDOWS_(439,11819
# define _IF_WINDOWS(440,11843
# define IF_WINDOWS_ELSE_0(441,11867
# define IF_WINDOWS_ELSE(442,11901
# define IF_WINDOWS_ELSE_NP(443,11935
# define IF_UNIX(444,11970
# define IF_UNIX_ELSE(445,11992
# define IF_UNIX_(446,12021
# define _IF_UNIX(447,12045
# define IF_LINUX(451,12091
# define IF_LINUX_ELSE(452,12114
# define IF_LINUX_(453,12144
# define IF_LINUX(455,12175
# define IF_LINUX_ELSE(456,12196
# define IF_LINUX_(457,12226
# define IF_VMX86(461,12276
# define IF_VMX86_ELSE(462,12299
# define _IF_VMX86(463,12329
# define IF_NOT_VMX86(464,12355
# define IF_VMX86(466,12387
# define IF_VMX86_ELSE(467,12408
# define _IF_VMX86(468,12438
# define IF_NOT_VMX86(469,12460
#  define IF_HAVE_TLS_ELSE(474,12524
#  define IF_NOT_HAVE_TLS(475,12559
#  define IF_HAVE_TLS_ELSE(477,12595
#  define IF_NOT_HAVE_TLS(478,12630
# define IF_HAVE_TLS_ELSE(482,12751
# define IF_NOT_HAVE_TLS(483,12785
# define IF_WINDOWS_AND_CORE(487,12874
# define IF_WINDOWS_AND_CORE(489,12914
# define IF_PROG_SHEP(493,12981
# define IF_PROG_SHEP(495,13014
# define IF_RCT_IND_BRANCH(499,13107
# define IF_RCT_IND_BRANCH(501,13145
# define IF_RETURN_AFTER_CALL(505,13246
# define IF_RETURN_AFTER_CALL_ELSE(506,13281
# define IF_RETURN_AFTER_CALL(508,13330
# define IF_RETURN_AFTER_CALL_ELSE(509,13363
# define IF_HOTP(513,13444
# define IF_HOTP(515,13472
# define IF_CLIENT_INTERFACE(519,13524
# define IF_CLIENT_INTERFACE_ELSE(520,13558
# define _IF_CLIENT_INTERFACE(521,13600
# define _IF_NOT_CLIENT_INTERFACE(522,13637
# define _IF_CLIENT(524,13713
# define IF_CLIENT_INTERFACE(526,13746
# define IF_CLIENT_INTERFACE_ELSE(527,13778
# define _IF_CLIENT_INTERFACE(528,13820
# define _IF_NOT_CLIENT_INTERFACE(529,13853
# define _IF_CLIENT(530,13894
# define IF_CUSTOM_TRACES(534,13946
# define IF_CUSTOM_TRACES(536,13983
# define IF_APP_EXPORTS(540,14042
# define IF_APP_EXPORTS(542,14077
# define IF_GBOP(546,14124
# define IF_GBOP(548,14152
# define IF_PROC_CTL(552,14203
# define IF_PROC_CTL(554,14235
# define IF_KSTATS(558,14281
# define IF_KSTATS(560,14311
# define IF_UNIT_TEST_ELSE(564,14369
# define IF_UNIT_TEST_ELSE(566,14409
# define IF_X64(572,14528
# define IF_X64_ELSE(573,14549
# define IF_X64_(574,14578
# define _IF_X64(575,14601
# define IF_NOT_X64(576,14625
# define _IF_NOT_X64(577,14648
# define IF_X64(579,14678
# define IF_X64_ELSE(580,14697
# define IF_X64_(581,14726
# define _IF_X64(582,14746
# define IF_NOT_X64(583,14766
# define _IF_NOT_X64(584,14791
    SYSLOG_INFORMATION 589,14866
    SYSLOG_INFORMATION = 0x1,x1589,14866
    SYSLOG_WARNING 590,14896
    SYSLOG_WARNING     = 0x2,x2590,14896
    SYSLOG_ERROR 591,14926
    SYSLOG_ERROR       = 0x4,x4591,14926
    SYSLOG_CRITICAL 592,14956
    SYSLOG_CRITICAL    = 0x8,x8592,14956
    SYSLOG_NONE 593,14986
    SYSLOG_NONE        = 0x0,x0593,14986
    SYSLOG_ALL 594,15016
    SYSLOG_ALL         = SYSLOG_INFORMATION 594,15016
    SYSLOG_ALL         = SYSLOG_INFORMATION | SYSLOG_WARNING 594,15016
    SYSLOG_ALL         = SYSLOG_INFORMATION | SYSLOG_WARNING | SYSLOG_ERROR 594,15016
    SYSLOG_ALL         = SYSLOG_INFORMATION | SYSLOG_WARNING | SYSLOG_ERROR | SYSLOG_CRITICAL594,15016
} syslog_event_type_t;595,15110
#define DYNAMO_OPTION(597,15134
#define DYNAMO_OPTION_NOT_STRING(601,15445
#define EXPOSE_INTERNAL_OPTIONS 604,15556
# define INTERNAL_OPTION(611,15890
# define INTERNAL_OPTION(624,16798
 typedef unsigned int uint32;629,16945
typedef uint64 timestamp_t;633,17107
#  define NAKED634,17135
#  define ZHEX32_FORMAT_STRING 635,17151
#  define HEX32_FORMAT_STRING 636,17189
#  define MAX_PATH 645,17610
 typedef unsigned int uint;647,17684
 typedef unsigned int uint32;650,17751
typedef unsigned __int64 uint64;653,17844
typedef __int64 int64;654,17877
typedef int64 ssize_t;656,17913
typedef int ssize_t;658,17944
#    define ZHEX32_FORMAT_STRING 662,18057
#    define HEX32_FORMAT_STRING 663,18100
#    define ZHEX32_FORMAT_STRING 665,18148
#    define HEX32_FORMAT_STRING 666,18188
#    define ULLONG_MAX 670,18330
typedef uint64 timestamp_t;672,18373
#  define NAKED 673,18401
#define FIXED_TIMESTAMP_FORMAT 676,18445
#define UINT64_FORMAT_CODE 680,18565
#define INT64_FORMAT_CODE 681,18609
#define UINT64_FORMAT_STRING 682,18652
#define INT64_FORMAT_STRING 683,18704
#define HEX64_FORMAT_STRING 684,18754
#define ZHEX64_FORMAT_STRING 685,18803
#define ZHEX32_FORMAT_STRING 687,18879
#define HEX32_FORMAT_STRING 688,18915
# define PFMT 691,19013
# define PIFMT 692,19048
# define SZFMT 693,19083
# define PFMT 695,19124
# define PIFMT 696,19159
# define SZFMT 697,19194
#define PFX 705,19410
#define PIFX 706,19432
typedef int64 stats_int_t;715,19674
typedef int stats_int_t;717,19707
#define L_UINT64_FORMAT_STRING 736,20483
#  define PFMT 738,20564
#  define PIFMT 739,20600
#  define SZFMT 740,20636
#  define SSZFMT 741,20673
#  define SZFC 742,20710
#  define SSZFC 743,20744
#  define PFMT 745,20784
#  define PIFMT 746,20820
#  define SZFMT 747,20856
#  define SSZFMT 748,20877
#  define SZFC 749,20899
#  define SSZFC 750,20918
#define L_PFMT 752,20945
#define PFX 753,21000
#define PIFX 754,21021
# define IDFMT 758,21104
# define IDFMT 760,21131
#define MAX_REGISTRY_PARAMETER 765,21282
# define MAX_OPTIONS_STRING 768,21433
# define MAX_CONFIG_VALUE 769,21469
# define MAX_OPTIONS_STRING 778,21938
# define MAX_CONFIG_VALUE 779,21974
#define MAX_LIST_OPTION_LENGTH 782,22091
#define MAX_PATH_OPTION_LENGTH 784,22200
#define MAX_OPTION_LENGTH 786,22291
#define MAX_PARAMNAME_LENGTH 788,22342
#define MAX_MODNAME_INTERNAL 791,22433
#define MAX_DWORD_STRING_LENGTH 796,22585
typedef char pathstring_t[pathstring_t798,22621
typedef char liststring_t[liststring_t802,22809
#define BUFFER_SIZE_BYTES(805,22922
#define BUFFER_SIZE_ELEMENTS(806,22970
#define BUFFER_LAST_ELEMENT(807,23048
#define NULL_TERMINATE_BUFFER(808,23119
#define BUFFER_ROOM_LEFT_W(810,23185
#define BUFFER_ROOM_LEFT(811,23266
#define CAT_AND_TERMINATE(816,23499
#define EXPANDSTR(824,23692
#define STRINGIFY(825,23716
#  define PRODUCT_NAME 829,23832
#  define PRODUCT_NAME 831,23892
#define COMPANY_NAME 841,24327
#define COMPANY_NAME_EVENTLOG 842,24383
#define COMPANY_LONG_NAME 844,24502
#  define BUILD_NUMBER_STRING 847,24572
#  define BUILD_NUMBER_STRING 849,24640
#  define BUILD_NUMBER 850,24685
#  define VERSION_NUMBER_STRING 854,24742
#  define VERSION_NUMBER_STRING 856,24816
#  define VERSION_NUMBER 857,24867
#  define HOT_PATCHING_DLL_CACHE_PATH 861,24936
#  define HOTP_MODES_FILENAME 862,24990
#  define HOTP_POLICIES_FILENAME 863,25035
#define DYNAMORIO_VAR_CONFIGDIR_ID 867,25163
#define DYNAMORIO_VAR_HOME_ID 868,25219
#define DYNAMORIO_VAR_LOGDIR_ID 869,25270
#define DYNAMORIO_VAR_OPTIONS_ID 870,25323
#define DYNAMORIO_VAR_AUTOINJECT_ID 871,25377
#define DYNAMORIO_VAR_UNSUPPORTED_ID 872,25434
#define DYNAMORIO_VAR_RUNUNDER_ID 873,25494
#define DYNAMORIO_VAR_CMDLINE_ID 874,25549
#define DYNAMORIO_VAR_ONCRASH_ID 875,25603
#define DYNAMORIO_VAR_SAFEMARKER_ID 876,25657
#define DYNAMORIO_VAR_CACHE_ROOT_ID 879,25793
#define DYNAMORIO_VAR_CACHE_SHARED_ID 885,26138
#define DYNAMORIO_VAR_PERSCACHE_ROOT_ID 892,26489
#define DYNAMORIO_VAR_PERSCACHE_SHARED_ID 894,26596
#define PERSCACHE_FILE_SUFFIX 898,26769
# define DYNAMORIO_VAR_HOT_PATCH_POLICES_ID 901,26836
# define DYNAMORIO_VAR_HOT_PATCH_MODES_ID 902,26910
# define DYNAMORIO_VAR_APP_PROCESS_WHITELIST_ID 905,27009
# define DYNAMORIO_VAR_ANON_PROCESS_WHITELIST_ID 906,27090
# define DYNAMORIO_VAR_APP_PROCESS_BLACKLIST_ID 908,27174
# define DYNAMORIO_VAR_ANON_PROCESS_BLACKLIST_ID 909,27255
#define DYNAMORIO_VAR_CONFIGDIR 912,27346
#define DYNAMORIO_VAR_HOME 913,27417
#define DYNAMORIO_VAR_LOGDIR 914,27483
#define DYNAMORIO_VAR_OPTIONS 915,27551
#define DYNAMORIO_VAR_AUTOINJECT 916,27620
#define DYNAMORIO_VAR_UNSUPPORTED 917,27692
#define DYNAMORIO_VAR_RUNUNDER 918,27767
#define DYNAMORIO_VAR_CMDLINE 919,27837
#define DYNAMORIO_VAR_ONCRASH 920,27906
#define DYNAMORIO_VAR_SAFEMARKER 921,27975
#define DYNAMORIO_VAR_CACHE_ROOT 922,28047
#define DYNAMORIO_VAR_CACHE_SHARED 923,28120
#define DYNAMORIO_VAR_PERSCACHE_ROOT 924,28197
#define DYNAMORIO_VAR_PERSCACHE_SHARED 925,28278
# define DYNAMORIO_VAR_HOT_PATCH_POLICIES 927,28393
# define DYNAMORIO_VAR_HOT_PATCH_MODES 928,28482
# define DYNAMORIO_VAR_APP_PROCESS_WHITELIST 931,28596
# define DYNAMORIO_VAR_ANON_PROCESS_WHITELIST 933,28697
# define DYNAMORIO_VAR_APP_PROCESS_BLACKLIST 936,28801
# define DYNAMORIO_VAR_ANON_PROCESS_BLACKLIST 938,28902
#  define DYNAMORIO_VAR_EXE_PATH 944,29026
#  define DYNAMORIO_VAR_EXECVE 945,29087
#  define DYNAMORIO_VAR_EXECVE_LOGDIR 946,29151
#  define L_IF_WIN(947,29217
#  define EXPAND_LEVEL(951,29263
#  define L_EXPAND_LEVEL(952,29331
#  define L(953,29368
#  define LCONCAT(954,29394
#  define L_IF_WIN(955,29454
#  define L_DYNAMORIO_VAR_CONFIGDIR 958,29533
#  define L_DYNAMORIO_VAR_HOME 959,29611
#  define L_DYNAMORIO_VAR_LOGDIR 960,29684
#  define L_DYNAMORIO_VAR_OPTIONS 961,29759
#  define L_DYNAMORIO_VAR_AUTOINJECT 962,29835
#  define L_DYNAMORIO_VAR_UNSUPPORTED 963,29914
#  define L_DYNAMORIO_VAR_RUNUNDER 964,29994
#  define L_DYNAMORIO_VAR_CMDLINE 965,30071
#  define L_DYNAMORIO_VAR_ONCRASH 966,30147
#  define L_DYNAMORIO_VAR_SAFEMARKER 967,30223
#  define L_DYNAMORIO_VAR_CACHE_ROOT 968,30302
#  define L_DYNAMORIO_VAR_CACHE_SHARED 969,30381
#  define L_DYNAMORIO_VAR_HOT_PATCH_POLICIES 971,30494
#  define L_DYNAMORIO_VAR_HOT_PATCH_MODES 972,30589
#  define L_DYNAMORIO_VAR_APP_PROCESS_WHITELIST 975,30710
#  define L_DYNAMORIO_VAR_ANON_PROCESS_WHITELIST 977,30816
#  define L_DYNAMORIO_VAR_APP_PROCESS_BLACKLIST 980,30925
#  define L_DYNAMORIO_VAR_ANON_PROCESS_BLACKLIST 982,31031
#  define L_PRODUCT_NAME 986,31148
#  define L_COMPANY_NAME 987,31215
#  define L_COMPANY_LONG_NAME 988,31282
#  define EVENTLOG_HIVE 991,31385
#  define EVENTLOG_NAME 992,31428
#  define EVENTSOURCE_NAME 993,31474
#  define EVENTLOG_REGISTRY_SUBKEY 995,31559
#  define L_EVENTLOG_REGISTRY_SUBKEY 996,31642
#  define L_EVENTLOG_REGISTRY_KEY 997,31720
#  define L_EVENT_LOG_KEY 998,31819
#  define L_EVENT_LOG_SUBKEY 999,31892
#  define L_EVENT_LOG_NAME 1000,31971
#  define L_EVENT_SOURCE_NAME 1001,32034
#  define L_EVENT_SOURCE_KEY 1002,32097
#  define L_EVENT_SOURCE_SUBKEY 1003,32169
#  define EVENT_LOG_KEY 1005,32248
#  define EVENT_SOURCE_KEY 1006,32336
#  define L_EVENT_FILE_VALUE_NAME 1012,32740
#  define L_EVENT_FILE_NAME_PRE_VISTA 1013,32782
#  define L_EVENT_FILE_NAME_VISTA 1015,32901
#  define L_EVENT_MAX_SIZE_NAME 1017,33022
#  define EVENT_MAX_SIZE 1018,33065
#  define L_EVENT_RETENTION_NAME 1019,33099
#  define EVENT_RETENTION 1020,33145
#  define L_EVENT_TYPES_SUPPORTED_NAME 1022,33194
#  define EVENT_TYPES_SUPPORTED 1023,33251
#  define L_EVENT_CATEGORY_COUNT_NAME 1024,33316
#  define EVENT_CATEGORY_COUNT 1025,33371
#  define L_EVENT_CATEGORY_FILE_NAME 1026,33404
#  define L_EVENT_MESSAGE_FILE 1027,33464
#  define BASE_NAMED_OBJECTS 1030,33551
#  define DYNAMORIO_SHARED_OBJECT_BASE 1032,33682
#  define DYNAMORIO_SHARED_OBJECT_DIRECTORY 1034,33808
#  define DYNAMORIO_REGISTRY_BASE_SUBKEY 1037,33921
#  define DYNAMORIO_REGISTRY_BASE 1038,34003
#  define DYNAMORIO_REGISTRY_HIVE 1039,34135
#  define DYNAMORIO_REGISTRY_KEY 1040,34188
#  define L_DYNAMORIO_REGISTRY_KEY 1041,34255
#  define INJECT_ALL_HIVE 1043,34366
#  define INJECT_ALL_KEY 1044,34414
#  define INJECT_ALL_SUBKEY 1045,34502
#  define INJECT_ALL_LOAD_SUBKEY 1047,34572
#  define INJECT_ALL_SIGN_SUBKEY 1049,34669
#  define INJECT_ALL_HIVE_L 1051,34738
#  define INJECT_ALL_KEY_L 1052,34794
#  define INJECT_ALL_SUBKEY_L 1053,34856
#  define INJECT_ALL_LOAD_SUBKEY_L 1054,34921
#  define INJECT_ALL_SIGN_SUBKEY_L 1055,35000
#  define INJECT_DLL_NAME 1057,35080
#  define INJECT_DLL_8_3_NAME 1058,35129
#  define INJECT_HELPER_DLL1_NAME 1060,35176
#  define INJECT_HELPER_DLL2_NAME 1061,35234
#  define DEBUGGER_INJECTION_HIVE 1063,35293
#  define DEBUGGER_INJECTION_KEY 1064,35352
#  define DEBUGGER_INJECTION_VALUE_NAME 1065,35472
#  define DEBUGGER_INJECTION_HIVE_L 1067,35524
#  define DEBUGGER_INJECTION_KEY_L 1068,35591
#  define DEBUGGER_INJECTION_VALUE_NAME_L 1069,35672
#  define DRINJECT_NAME 1071,35761
#  define SVCHOST_NAME 1074,35881
#  define EXE_SUFFIX 1075,35922
#  define L_EXE_SUFFIX 1076,35960
#  define SVCHOST_EXE_NAME 1077,36018
#  define L_SVCHOST_EXE_NAME 1078,36073
#  define DYNAMORIO_LIBRARY_NAME 1081,36188
#  define DLLPATH_RELEASE 1082,36237
#  define DLLPATH_DEBUG 1083,36307
#  define DLLPATH_PROFILE 1084,36375
#  define L_DYNAMORIO_LIBRARY_NAME 1086,36446
#  define L_DLLPATH_RELEASE 1087,36520
#  define L_DLLPATH_DEBUG 1088,36595
#  define L_DLLPATH_PROFILE 1089,36668
#  define INJECT_ALL_DLL_SUBPATH 1091,36744
#  define L_INJECT_ALL_DLL_SUBPATH 1092,36808
enum DLL_TYPE 1094,36892
        DLL_NONE,1095,36908
        DLL_UNKNOWN,1096,36926
        DLL_RELEASE,1097,36947
        DLL_DEBUG,1098,36968
        DLL_PROFILE,1099,36987
        DLL_CUSTOM,1100,37008
        DLL_PATHHAS1101,37028
# define UNIT_TEST_EXE_NAME 1106,37101
    RUNUNDER_OFF 1158,39462
    RUNUNDER_OFF                  = 0x00,x001158,39462
    RUNUNDER_ON 1159,39514
    RUNUNDER_ON                   = 0x01,x011159,39514
    RUNUNDER_ALL 1160,39566
    RUNUNDER_ALL                  = 0x02,x021160,39566
    RUNUNDER_FORMERLY_EXPLICIT 1165,39831
    RUNUNDER_FORMERLY_EXPLICIT    = 0x04,x041165,39831
    RUNUNDER_COMMANDLINE_MATCH 1167,39884
    RUNUNDER_COMMANDLINE_MATCH    = 0x08,x081167,39884
    RUNUNDER_COMMANDLINE_DISPATCH 1168,39936
    RUNUNDER_COMMANDLINE_DISPATCH = 0x10,x101168,39936
    RUNUNDER_COMMANDLINE_NO_STRIP 1169,39988
    RUNUNDER_COMMANDLINE_NO_STRIP = 0x20,x201169,39988
    RUNUNDER_ONCE 1170,40040
    RUNUNDER_ONCE                 = 0x40,x401170,40040
    RUNUNDER_EXPLICIT 1172,40093
    RUNUNDER_EXPLICIT             = 0x80,x801172,40093
#define NUDGE_DEFINITIONS(1191,41007
#define NUDGE_DEF(1225,43506
    NUDGE_DEFINITIONS(1226,43557
#undef NUDGE_DEF1227,43581
    NUDGE_DR_PARAMETRIZED_END1228,43598
} nudge_generic_type_t;1229,43628
#define NUDGE_GENERIC(1232,43694
#define NUDGE_ARG_VERSION_1 1235,43784
#define NUDGE_ARG_CURRENT_VERSION 1236,43814
    NUDGE_IS_INTERNAL 1242,43936
    NUDGE_IS_INTERNAL       = 0x01,x011242,43936
    NUDGE_NUDGER_FREE_STACK 1244,44023
    NUDGE_NUDGER_FREE_STACK = 0x02,x021244,44023
    NUDGE_FREE_ARG 1246,44183
    NUDGE_FREE_ARG          = 0x04,x041246,44183
    int ignored1;1257,44589
    uint nudge_action_mask:nudge_action_mask1262,44866
    uint version:version1263,44897
    uint flags:flags1264,44917
    int ignored2;1265,44935
    uint version;1267,45024
    uint nudge_action_mask;1268,45083
    uint flags;1269,45145
    client_id_t client_id;1271,45202
    uint64 client_arg;1272,45264
} nudge_arg_t;1278,45452
# define NUDGESIG_SIGNUM 1286,45688
#define AVOID_API_EXPORT 1296,46137
#define HOTP_POLICY_ID_LENGTH 1308,46555
    DR_PROBE_STATUS_ERROR 1322,47018
    DR_PROBE_STATUS_INVALID_ID 1325,47134
    DR_PROBE_STATUS_INVALID_VADDR 1335,47521
    DR_PROBE_STATUS_INVALID_LIB 1341,47771
    DR_PROBE_STATUS_INVALID_LIB_OFFS 1346,47969
    DR_PROBE_STATUS_INVALID_FUNC 1352,48212
    DR_PROBE_STATUS_VADDR_NOT_EXEC 1364,48782
    DR_PROBE_STATUS_LIB_NOT_SEEN 1367,48902
    DR_PROBE_STATUS_WAITING_FOR_EXEC 1373,49155
    DR_PROBE_STATUS_LIB_UNLOADED 1378,49359
    DR_PROBE_STATUS_INJECTED 1383,49482
    DR_PROBE_STATUS_UNSUPPORTED 1386,49590
    HOTP_INJECT_ERROR 1416,50955
    HOTP_INJECT_ERROR = DR_PROBE_STATUS_ERROR,1416,50955
    HOTP_INJECT_PROTECT 1419,51050
    HOTP_INJECT_PROTECT = DR_PROBE_STATUS_INJECTED,1419,51050
    HOTP_INJECT_DETECT 1425,51305
    HOTP_INJECT_IN_PROGRESS 1430,51498
    HOTP_INJECT_PENDING 1435,51648
    HOTP_INJECT_PENDING = DR_PROBE_STATUS_WAITING_FOR_EXEC,1435,51648
    HOTP_INJECT_NO_MATCH 1441,51936
    HOTP_INJECT_NO_MATCH = DR_PROBE_STATUS_LIB_NOT_SEEN,1441,51936
    HOTP_INJECT_OFF 1450,52209
} dr_probe_status_t;1452,52319
typedef dr_probe_status_t hotp_inject_status_t;1455,52365
    HOTP_MODE_OFF 1462,52563
    HOTP_MODE_DETECT 1463,52586
    HOTP_MODE_PROTECT 1464,52613
} hotp_policy_mode_t;1465,52639
    char policy_id[policy_id1481,53457
    hotp_inject_status_t inject_status;1482,53504
    hotp_policy_mode_t mode;1491,53985
} hotp_policy_status_t;1492,54014
    uint crc;1507,54702
    uint size;1508,54716
    uint num_policies;1509,54773
    hotp_policy_status_t *policy_status_array;policy_status_array1510,54796
} hotp_policy_status_table_t;1511,54843
    GET_PARAMETER_BUF_TOO_SMALL 1527,55531
    GET_PARAMETER_FAILURE 1528,55569
    GET_PARAMETER_SUCCESS 1529,55600
    GET_PARAMETER_NOAPPSPECIFIC 1530,55631
    SET_PARAMETER_FAILURE 1531,55668
    SET_PARAMETER_FAILURE = GET_PARAMETER_FAILURE,1531,55668
    SET_PARAMETER_SUCCESS 1532,55719
    SET_PARAMETER_SUCCESS = GET_PARAMETER_SUCCESS1532,55719
#define IS_GET_PARAMETER_FAILURE(1534,55772
#define IS_GET_PARAMETER_SUCCESS(1535,55820
typedef union _dr_xmm_t 1570,57437
    uint64 u64[u641572,57474
    uint   u32[u321574,57545
    byte   u8[u81575,57609
    reg_t  reg[reg1576,57673
} dr_xmm_t;1577,57751
typedef union _dr_ymm_t 1580,57793
    uint64 u64[u641596,58544
    uint   u32[u321599,58622
    byte   u8[u81600,58686
    reg_t  reg[reg1601,58750
} dr_ymm_t;1602,58828
#  define NUM_XMM_SLOTS 1615,59303
#  define NUM_XMM_SLOTS 1617,59399
# define PRE_XMM_PADDING 1619,59498
# define NUM_XMM_SLOTS 1621,59592
# define PRE_XMM_PADDING 1622,59680
    DR_MC_INTEGER 1631,60014
    DR_MC_INTEGER    = 0x01,x011631,60014
    DR_MC_CONTROL 1638,60247
    DR_MC_CONTROL    = 0x02,x021638,60247
    DR_MC_MULTIMEDIA 1645,60565
    DR_MC_MULTIMEDIA = 0x04,x041645,60565
    DR_MC_ALL 1647,60624
    DR_MC_ALL        = (DR_MC_INTEGER 1647,60624
    DR_MC_ALL        = (DR_MC_INTEGER | DR_MC_CONTROL 1647,60624
    DR_MC_ALL        = (DR_MC_INTEGER | DR_MC_CONTROL | DR_MC_MULTIMEDIA)1647,60624
} dr_mcontext_flags_t;1648,60699
typedef struct _dr_mcontext_t 1653,60761
    size_t size;1658,60940
    dr_mcontext_flags_t flags;1667,61402
} dr_mcontext_t;1669,61452
typedef struct _priv_mcontext_t 1673,61535
} priv_mcontext_t;1675,61588
#define NUM_XMM_SAVED 1698,62733

lib/hotpatch_interface.h,2216
#define _HOTPATCH_INTERFACE_H_ 36,1768
#define HOTP_INTERFACE_VERSION 48,2171
    HOTP_EXEC_EXPLOIT_DETECTED 61,2726
    HOTP_EXEC_EXPLOIT_DETECTED          = 0x00000001,x0000000161,2726
    HOTP_EXEC_EXPLOIT_NOT_DETECTED 62,2780
    HOTP_EXEC_EXPLOIT_NOT_DETECTED      = 0x00000002,x0000000262,2780
    HOTP_EXEC_DETECTOR_ERROR 63,2834
    HOTP_EXEC_DETECTOR_ERROR            = 0x00000004,x0000000463,2834
    HOTP_EXEC_EXPLOIT_PROTECTED 66,2952
    HOTP_EXEC_EXPLOIT_PROTECTED         = 0x00000008,x0000000866,2952
    HOTP_EXEC_EXPLOIT_NOT_PROTECTED 67,3006
    HOTP_EXEC_EXPLOIT_NOT_PROTECTED     = 0x00000010,x0000001067,3006
    HOTP_EXEC_PROTECTOR_ERROR 68,3060
    HOTP_EXEC_PROTECTOR_ERROR           = 0x00000020,x0000002068,3060
    HOTP_EXEC_EXPLOIT_KILL_THREAD 71,3193
    HOTP_EXEC_EXPLOIT_KILL_THREAD       = 0x00000040,x0000004071,3193
    HOTP_EXEC_EXPLOIT_KILL_PROCESS 72,3247
    HOTP_EXEC_EXPLOIT_KILL_PROCESS      = 0x00000080,x0000008072,3247
    HOTP_EXEC_EXPLOIT_RAISE_EXCEPTION 73,3301
    HOTP_EXEC_EXPLOIT_RAISE_EXCEPTION   = 0x00000100,x0000010073,3301
    HOTP_EXEC_CHANGE_CONTROL_FLOW 74,3355
    HOTP_EXEC_CHANGE_CONTROL_FLOW       = 0x00000200,x0000020074,3355
    HOTP_EXEC_LOG_EVENT 79,3567
    HOTP_EXEC_LOG_EVENT                 = 0x00000400,x0000040079,3567
    HOTP_EXEC_ABORTED 84,3787
    HOTP_EXEC_ABORTED                   = 0x00000800x0000080084,3787
} hotp_exec_status_t;85,3840
typedef priv_mcontext_t hotp_context_t;87,3863
typedef hotp_exec_status_t (*hotp_func_t)hotp_func_t92,4067
#define APP_XDI(94,4140
#define APP_XSI(95,4189
#define APP_XBP(96,4238
#define APP_XSP(97,4287
#define APP_XBX(98,4336
#define APP_XDX(99,4385
#define APP_XCX(100,4434
#define APP_XAX(101,4483
#define APP_R8(102,4532
#define APP_R9(103,4580
#define APP_R10(104,4628
#define APP_R11(105,4677
#define APP_R12(106,4726
#define APP_R13(107,4775
#define APP_R14(108,4824
#define APP_R15(109,4873
#define APP_XFLAGS(110,4922
#define APP_EDI 113,5011
#define APP_ESI 114,5035
#define APP_EBP 115,5059
#define APP_ESP 116,5083
#define APP_EBX 117,5107
#define APP_EDX 118,5131
#define APP_ECX 119,5155
#define APP_EAX 120,5179

lib/kstatsx.h,19
KSTAT_DEF(55,2208

lib/mcxtx.h,920
        reg_t xdi;57,2593
        reg_t IF_X64_ELSE(58,2672
        reg_t xsi;61,2847
        reg_t IF_X64_ELSE(62,2926
        reg_t xbp;65,3101
        reg_t IF_X64_ELSE(66,3180
        reg_t xsp;69,3355
        reg_t IF_X64_ELSE(70,3434
        reg_t xbx;73,3609
        reg_t IF_X64_ELSE(74,3688
        reg_t xdx;77,3863
        reg_t IF_X64_ELSE(78,3942
        reg_t xcx;81,4117
        reg_t IF_X64_ELSE(82,4196
        reg_t xax;85,4371
        reg_t IF_X64_ELSE(86,4450
    reg_t r8;89,4624
    reg_t r9;90,4693
    reg_t r10;91,4762
    reg_t r11;92,4832
    reg_t r12;93,4902
    reg_t r13;94,4972
    reg_t r14;95,5042
    reg_t r15;96,5112
        reg_t xflags;99,5201
        reg_t IF_X64_ELSE(100,5289
        byte *xip;xip109,5722
        byte *pc;pc110,5801
        byte *IF_X64_ELSE(IF_X64_ELSE111,5883
    byte padding[padding113,5980
    dr_ymm_t ymm[ymm140,7430

lib/statsx.h,80
# define RSTATS_DEF 69,2780
# define STATS_DEF(71,2816
    STATS_DEF(74,2869

unix/include/sigcontext.h,4028
#define _SIGCONTEXT_H_14,662
#define _BITS_SIGCONTEXT_H 17,734
#define _ASM_X86_SIGCONTEXT_H 21,895
#define _ASMi386_SIGCONTEXT_H 22,927
#define _ASM_X86_64_SIGCONTEXT_H 23,959
#define _ASM_X86_SIGCONTEXT32_H 24,994
#define FP_XSTATE_MAGIC1	28,1055
#define FP_XSTATE_MAGIC2	29,1092
#define FP_XSTATE_MAGIC2_SIZE	30,1129
struct _fpx_sw_bytes 44,1790
	__u32 magic1;45,1813
	__u32 extended_size;46,1852
	__u64 xstate_bv;49,1964
	__u32 xstate_size;54,2100
	__u32 padding[padding59,2272
struct _fpreg 77,2855
	unsigned short significand[significand78,2871
	unsigned short exponent;79,2903
struct _fpxreg 82,2933
	unsigned short significand[significand83,2950
	unsigned short exponent;84,2982
	unsigned short padding[padding85,3008
struct _xmmreg 88,3040
	unsigned long element[element89,3057
struct _fpstate 92,3088
	unsigned long	cw;94,3137
	unsigned long	sw;95,3156
	unsigned long	tag;96,3175
	unsigned long	ipoff;97,3195
	unsigned long	cssel;98,3217
	unsigned long	dataoff;99,3239
	unsigned long	datasel;100,3263
	struct _fpreg	_st[_st101,3287
	unsigned short	status;102,3310
	unsigned short	magic;103,3334
	unsigned long	_fxsr_env[_fxsr_env106,3424
	unsigned long	mxcsr;107,3483
	unsigned long	reserved;108,3505
	struct _fpxreg	_fxsr_st[_fxsr_st109,3530
	struct _xmmreg	_xmm[_xmm110,3594
	unsigned long	padding1[padding1111,3619
		unsigned long	padding2[padding2114,3658
		struct _fpx_sw_bytes sw_reserved;115,3688
#define X86_FXSR_MAGIC	120,3784
struct sigcontext 125,3877
	unsigned short gs,126,3897
	unsigned short gs, __gsh;126,3897
	unsigned short fs,127,3924
	unsigned short fs, __fsh;127,3924
	unsigned short es,128,3951
	unsigned short es, __esh;128,3951
	unsigned short ds,129,3978
	unsigned short ds, __dsh;129,3978
	unsigned long edi;130,4005
	unsigned long esi;131,4025
	unsigned long ebp;132,4045
	unsigned long esp;133,4065
	unsigned long ebx;134,4085
	unsigned long edx;135,4105
	unsigned long ecx;136,4125
	unsigned long eax;137,4145
	unsigned long trapno;138,4165
	unsigned long err;139,4188
	unsigned long eip;140,4208
	unsigned short cs,141,4228
	unsigned short cs, __csh;141,4228
	unsigned long eflags;142,4255
	unsigned long esp_at_signal;143,4278
	unsigned short ss,144,4308
	unsigned short ss, __ssh;144,4308
	struct _fpstate *fpstate;fpstate145,4335
	unsigned long oldmask;146,4362
	unsigned long cr2;147,4386
struct _fpstate 155,4569
	__u16	cwd;156,4587
	__u16	swd;157,4599
	__u16	twd;158,4611
	__u16	fop;160,4690
	__u64	rip;161,4702
	__u64	rdp;162,4714
	__u32	mxcsr;163,4726
	__u32	mxcsr_mask;164,4740
	__u32	st_space[st_space165,4759
	__u32	xmm_space[xmm_space166,4813
	__u32	reserved2[reserved2167,4871
		__u32	reserved3[reserved3169,4902
		struct _fpx_sw_bytes sw_reserved;170,4925
struct sigcontext 178,5089
	unsigned long r8;179,5109
	unsigned long r9;180,5128
	unsigned long r10;181,5147
	unsigned long r11;182,5167
	unsigned long r12;183,5187
	unsigned long r13;184,5207
	unsigned long r14;185,5227
	unsigned long r15;186,5247
	unsigned long rdi;187,5267
	unsigned long rsi;188,5287
	unsigned long rbp;189,5307
	unsigned long rbx;190,5327
	unsigned long rdx;191,5347
	unsigned long rax;192,5367
	unsigned long rcx;193,5387
	unsigned long rsp;194,5407
	unsigned long rip;195,5427
	unsigned long eflags;196,5447
	unsigned short cs;197,5484
	unsigned short gs;198,5504
	unsigned short fs;199,5524
	unsigned short __pad0;200,5544
	unsigned long err;201,5568
	unsigned long trapno;202,5588
	unsigned long oldmask;203,5611
	unsigned long cr2;204,5635
	struct _fpstate *fpstate;fpstate205,5655
	unsigned long reserved1[reserved1206,5713
struct _xsave_hdr 211,5770
	__u64 xstate_bv;212,5790
	__u64 reserved1[reserved1213,5808
	__u64 reserved2[reserved2214,5829
struct _ymmh_state 217,5854
	__u32 ymmh_space[ymmh_space219,5914
struct _xstate 228,6185
	struct _fpstate fpstate;229,6202
	struct _xsave_hdr xstate_hdr;230,6228
	struct _ymmh_state ymmh;231,6259

unix/include/signalfd.h,565
#define _SIGNALFD_H14,659
#define SFD_CLOEXEC 19,731
#define SFD_NONBLOCK 20,761
struct signalfd_siginfo 22,794
	__u32 ssi_signo;23,820
	__s32 ssi_errno;24,838
	__s32 ssi_code;25,856
	__u32 ssi_pid;26,873
	__u32 ssi_uid;27,889
	__s32 ssi_fd;28,905
	__u32 ssi_tid;29,920
	__u32 ssi_band;30,936
	__u32 ssi_overrun;31,953
	__u32 ssi_trapno;32,973
	__s32 ssi_status;33,992
	__s32 ssi_int;34,1011
	__u64 ssi_ptr;35,1027
	__u64 ssi_utime;36,1043
	__u64 ssi_stime;37,1061
	__u64 ssi_addr;38,1079
	__u16 ssi_addr_lsb;39,1096
	__u8 __pad[__pad50,1498

unix/include/syscall.h,46281
#define _SYSCALL_H_ 14,659
# define __NR_read 19,760
# define __NR_write 20,810
# define __NR_open 21,860
# define __NR_close 22,910
# define __NR_stat 23,960
# define __NR_fstat 24,1010
# define __NR_lstat 25,1060
# define __NR_poll 26,1110
# define __NR_lseek 27,1160
# define __NR_mmap 28,1210
# define __NR_mprotect 29,1260
# define __NR_munmap 30,1311
# define __NR_brk 31,1362
# define __NR_rt_sigaction 32,1413
# define __NR_rt_sigprocmask 33,1464
# define __NR_rt_sigreturn 34,1515
# define __NR_ioctl 35,1566
# define __NR_pread64 36,1617
# define __NR_pwrite64 37,1668
# define __NR_readv 38,1719
# define __NR_writev 39,1770
# define __NR_access 40,1821
# define __NR_pipe 41,1872
# define __NR_select 42,1923
# define __NR_sched_yield 43,1974
# define __NR_mremap 44,2025
# define __NR_msync 45,2076
# define __NR_mincore 46,2127
# define __NR_madvise 47,2178
# define __NR_shmget 48,2229
# define __NR_shmat 49,2280
# define __NR_shmctl 50,2331
# define __NR_dup 51,2382
# define __NR_dup2 52,2433
# define __NR_pause 53,2484
# define __NR_nanosleep 54,2535
# define __NR_getitimer 55,2586
# define __NR_alarm 56,2637
# define __NR_setitimer 57,2688
# define __NR_getpid 58,2739
# define __NR_sendfile 59,2790
# define __NR_socket 60,2841
# define __NR_connect 61,2892
# define __NR_accept 62,2943
# define __NR_sendto 63,2994
# define __NR_recvfrom 64,3045
# define __NR_sendmsg 65,3096
# define __NR_recvmsg 66,3147
# define __NR_shutdown 67,3198
# define __NR_bind 68,3249
# define __NR_listen 69,3300
# define __NR_getsockname 70,3351
# define __NR_getpeername 71,3402
# define __NR_socketpair 72,3453
# define __NR_setsockopt 73,3504
# define __NR_getsockopt 74,3555
# define __NR_clone 75,3606
# define __NR_fork 76,3657
# define __NR_vfork 77,3708
# define __NR_execve 78,3759
# define __NR_exit 79,3810
# define __NR_wait4 80,3861
# define __NR_kill 81,3912
# define __NR_uname 82,3963
# define __NR_semget 83,4014
# define __NR_semop 84,4065
# define __NR_semctl 85,4116
# define __NR_shmdt 86,4167
# define __NR_msgget 87,4218
# define __NR_msgsnd 88,4269
# define __NR_msgrcv 89,4320
# define __NR_msgctl 90,4371
# define __NR_fcntl 91,4422
# define __NR_flock 92,4473
# define __NR_fsync 93,4524
# define __NR_fdatasync 94,4575
# define __NR_truncate 95,4626
# define __NR_ftruncate 96,4677
# define __NR_getdents 97,4728
# define __NR_getcwd 98,4779
# define __NR_chdir 99,4830
# define __NR_fchdir 100,4881
# define __NR_rename 101,4932
# define __NR_mkdir 102,4983
# define __NR_rmdir 103,5034
# define __NR_creat 104,5085
# define __NR_link 105,5136
# define __NR_unlink 106,5187
# define __NR_symlink 107,5238
# define __NR_readlink 108,5289
# define __NR_chmod 109,5340
# define __NR_fchmod 110,5391
# define __NR_chown 111,5442
# define __NR_fchown 112,5493
# define __NR_lchown 113,5544
# define __NR_umask 114,5595
# define __NR_gettimeofday 115,5646
# define __NR_getrlimit 116,5697
# define __NR_getrusage 117,5748
# define __NR_sysinfo 118,5799
# define __NR_times 119,5850
# define __NR_ptrace 120,5902
# define __NR_getuid 121,5954
# define __NR_syslog 122,6006
# define __NR_getgid 124,6128
# define __NR_setuid 125,6180
# define __NR_setgid 126,6232
# define __NR_geteuid 127,6284
# define __NR_getegid 128,6336
# define __NR_setpgid 129,6388
# define __NR_getppid 130,6440
# define __NR_getpgrp 131,6492
# define __NR_setsid 132,6544
# define __NR_setreuid 133,6596
# define __NR_setregid 134,6648
# define __NR_getgroups 135,6700
# define __NR_setgroups 136,6752
# define __NR_setresuid 137,6804
# define __NR_getresuid 138,6856
# define __NR_setresgid 139,6908
# define __NR_getresgid 140,6960
# define __NR_getpgid 141,7012
# define __NR_setfsuid 142,7064
# define __NR_setfsgid 143,7116
# define __NR_getsid 144,7168
# define __NR_capget 145,7220
# define __NR_capset 146,7272
# define __NR_rt_sigpending 147,7324
# define __NR_rt_sigtimedwait 148,7376
# define __NR_rt_sigqueueinfo 149,7428
# define __NR_rt_sigsuspend 150,7480
# define __NR_sigaltstack 151,7532
# define __NR_utime 152,7584
# define __NR_mknod 153,7636
# define __NR_uselib 155,7716
# define __NR_personality 156,7768
# define __NR_ustat 157,7820
# define __NR_statfs 158,7872
# define __NR_fstatfs 159,7924
# define __NR_sysfs 160,7976
# define __NR_getpriority 161,8028
# define __NR_setpriority 162,8080
# define __NR_sched_setparam 163,8132
# define __NR_sched_getparam 164,8184
# define __NR_sched_setscheduler 165,8236
# define __NR_sched_getscheduler 166,8288
# define __NR_sched_get_priority_max 167,8340
# define __NR_sched_get_priority_min 168,8392
# define __NR_sched_rr_get_interval 169,8444
# define __NR_mlock 170,8496
# define __NR_munlock 171,8548
# define __NR_mlockall 172,8600
# define __NR_munlockall 173,8652
# define __NR_vhangup 174,8704
# define __NR_modify_ldt 175,8756
# define __NR_pivot_root 176,8808
# define __NR__sysctl 177,8860
# define __NR_prctl 178,8912
# define __NR_arch_prctl 179,8964
# define __NR_adjtimex 180,9016
# define __NR_setrlimit 181,9068
# define __NR_chroot 182,9120
# define __NR_sync 183,9172
# define __NR_acct 184,9224
# define __NR_settimeofday 185,9276
# define __NR_mount 186,9328
# define __NR_umount2 187,9380
# define __NR_swapon 188,9432
# define __NR_swapoff 189,9484
# define __NR_reboot 190,9536
# define __NR_sethostname 191,9588
# define __NR_setdomainname 192,9640
# define __NR_iopl 193,9692
# define __NR_ioperm 194,9744
# define __NR_create_module 195,9796
# define __NR_init_module 196,9848
# define __NR_delete_module 197,9900
# define __NR_get_kernel_syms 198,9952
# define __NR_query_module 199,10004
# define __NR_quotactl 200,10056
# define __NR_nfsservctl 201,10108
# define __NR_getpmsg 203,10191
# define __NR_putpmsg 204,10243
# define __NR_afs_syscall 206,10318
# define __NR_tuxcall 208,10393
# define __NR_security 209,10445
# define __NR_gettid 210,10497
# define __NR_readahead 211,10549
# define __NR_setxattr 212,10601
# define __NR_lsetxattr 213,10653
# define __NR_fsetxattr 214,10705
# define __NR_getxattr 215,10757
# define __NR_lgetxattr 216,10809
# define __NR_fgetxattr 217,10861
# define __NR_listxattr 218,10913
# define __NR_llistxattr 219,10965
# define __NR_flistxattr 220,11017
# define __NR_removexattr 221,11069
# define __NR_lremovexattr 222,11121
# define __NR_fremovexattr 223,11173
# define __NR_tkill 224,11225
# define __NR_time 225,11277
# define __NR_futex 226,11329
# define __NR_sched_setaffinity 227,11381
# define __NR_sched_getaffinity 228,11433
# define __NR_set_thread_area 229,11485
# define __NR_io_setup 230,11537
# define __NR_io_destroy 231,11589
# define __NR_io_getevents 232,11641
# define __NR_io_submit 233,11693
# define __NR_io_cancel 234,11745
# define __NR_get_thread_area 235,11797
# define __NR_lookup_dcookie 236,11849
# define __NR_epoll_create 237,11901
# define __NR_epoll_ctl_old 238,11953
# define __NR_epoll_wait_old 239,12005
# define __NR_remap_file_pages 240,12057
# define __NR_getdents64 241,12109
# define __NR_set_tid_address 242,12161
# define __NR_restart_syscall 243,12213
# define __NR_semtimedop 244,12265
# define __NR_fadvise64 245,12317
# define __NR_timer_create 246,12369
# define __NR_timer_settime 247,12421
# define __NR_timer_gettime 248,12473
# define __NR_timer_getoverrun 249,12525
# define __NR_timer_delete 250,12577
# define __NR_clock_settime 251,12629
# define __NR_clock_gettime 252,12681
# define __NR_clock_getres 253,12733
# define __NR_clock_nanosleep 254,12785
# define __NR_exit_group 255,12837
# define __NR_epoll_wait 256,12889
# define __NR_epoll_ctl 257,12941
# define __NR_tgkill 258,12993
# define __NR_utimes 259,13045
# define __NR_vserver 260,13097
# define __NR_mbind 261,13149
# define __NR_set_mempolicy 262,13201
# define __NR_get_mempolicy 263,13253
# define __NR_mq_open 264,13305
# define __NR_mq_unlink 265,13357
# define __NR_mq_timedsend 266,13409
# define __NR_mq_timedreceive 267,13461
# define __NR_mq_notify 268,13513
# define __NR_mq_getsetattr 269,13565
# define __NR_kexec_load 270,13617
# define __NR_waitid 271,13669
# define __NR_add_key 272,13721
# define __NR_request_key 273,13773
# define __NR_keyctl 274,13825
# define __NR_ioprio_set 275,13877
# define __NR_ioprio_get 276,13929
# define __NR_inotify_init 277,13981
# define __NR_inotify_add_watch 278,14033
# define __NR_inotify_rm_watch 279,14085
# define __NR_migrate_pages 280,14137
# define __NR_openat 281,14189
# define __NR_mkdirat 282,14241
# define __NR_mknodat 283,14293
# define __NR_fchownat 284,14345
# define __NR_futimesat 285,14397
# define __NR_newfstatat 286,14449
# define __NR_unlinkat 287,14501
# define __NR_renameat 288,14553
# define __NR_linkat 289,14605
# define __NR_symlinkat 290,14657
# define __NR_readlinkat 291,14709
# define __NR_fchmodat 292,14761
# define __NR_faccessat 293,14813
# define __NR_pselect6 294,14865
# define __NR_ppoll 295,14917
# define __NR_unshare 296,14969
# define __NR_set_robust_list 297,15021
# define __NR_get_robust_list 298,15073
# define __NR_splice 299,15125
# define __NR_tee 300,15177
# define __NR_sync_file_range 301,15229
# define __NR_vmsplice 302,15281
# define __NR_move_pages 303,15333
# define __NR_utimensat 304,15385
# define __IGNORE_getcpu 305,15437
# define __NR_epoll_pwait 306,15509
# define __NR_signalfd 307,15561
# define __NR_timerfd 308,15613
# define __NR_eventfd 309,15665
# define __NR_fallocate 310,15717
# define __NR_timerfd_settime 311,15769
# define __NR_timerfd_gettime 312,15821
# define __NR_accept4 313,15873
# define __NR_signalfd4 314,15925
# define __NR_eventfd2 315,15977
# define __NR_epoll_create1 316,16029
# define __NR_dup3 317,16081
# define __NR_pipe2 318,16133
# define __NR_inotify_init1 319,16185
# define __NR_preadv 320,16237
# define __NR_pwritev 321,16289
# define __NR_rt_tgsigqueueinfo 322,16341
# define __NR_perf_event_open 323,16393
# define __NR_recvmmsg 324,16445
# define __NR_fanotify_init 325,16497
# define __NR_fanotify_mark 326,16549
# define __NR_prlimit64 327,16601
# define __NR_name_to_handle_at 328,16653
# define __NR_open_by_handle_at 329,16705
# define __NR_clock_adjtime 330,16757
# define __NR_syncfs 331,16809
# define __NR_sendmmsg 332,16861
# define __NR_setns 333,16913
# define __NR_getcpu 334,16965
# define __NR_process_vm_readv 335,17017
# define __NR_process_vm_writev 336,17069
# define __NR_kcmp 337,17121
# define __NR_finit_module 338,17173
#  define __ARCH_WANT_OLD_READDIR340,17245
#  define __ARCH_WANT_OLD_STAT341,17279
#  define __ARCH_WANT_SYS_ALARM342,17310
#  define __ARCH_WANT_SYS_GETHOSTNAME343,17342
#  define __ARCH_WANT_SYS_PAUSE344,17380
#  define __ARCH_WANT_SYS_SGETMASK345,17412
#  define __ARCH_WANT_SYS_SIGNAL346,17447
#  define __ARCH_WANT_SYS_UTIME347,17480
#  define __ARCH_WANT_SYS_WAITPID348,17512
#  define __ARCH_WANT_SYS_SOCKETCALL349,17546
#  define __ARCH_WANT_SYS_FADVISE64350,17583
#  define __ARCH_WANT_SYS_GETPGRP351,17619
#  define __ARCH_WANT_SYS_LLSEEK352,17653
#  define __ARCH_WANT_SYS_NICE353,17686
#  define __ARCH_WANT_SYS_OLD_GETRLIMIT354,17717
#  define __ARCH_WANT_SYS_OLDUMOUNT355,17757
#  define __ARCH_WANT_SYS_SIGPENDING356,17793
#  define __ARCH_WANT_SYS_SIGPROCMASK357,17830
#  define __ARCH_WANT_SYS_RT_SIGACTION358,17868
#  define __ARCH_WANT_SYS_RT_SIGSUSPEND359,17907
#  define __ARCH_WANT_SYS_TIME360,17947
#  define __ARCH_WANT_COMPAT_SYS_TIME361,17978
# define __NR_restart_syscall 367,18115
# define __NR_exit 368,18152
# define __NR_fork 369,18189
# define __NR_read 370,18226
# define __NR_write 371,18263
# define __NR_open 372,18300
# define __NR_close 373,18337
# define __NR_waitpid 374,18374
# define __NR_creat 375,18411
# define __NR_link 376,18448
# define __NR_unlink 377,18485
# define __NR_execve 378,18522
# define __NR_chdir 379,18559
# define __NR_time 380,18596
# define __NR_mknod 381,18633
# define __NR_chmod 382,18670
# define __NR_lchown 383,18707
# define __NR_break 384,18744
# define __NR_oldstat 385,18781
# define __NR_lseek 386,18818
# define __NR_getpid 387,18855
# define __NR_mount 388,18892
# define __NR_umount 389,18929
# define __NR_setuid 390,18966
# define __NR_getuid 391,19003
# define __NR_stime 392,19040
# define __NR_ptrace 393,19077
# define __NR_alarm 394,19114
# define __NR_oldfstat 395,19151
# define __NR_pause 396,19188
# define __NR_utime 397,19225
# define __NR_stty 398,19262
# define __NR_gtty 399,19299
# define __NR_access 400,19336
# define __NR_nice 401,19373
# define __NR_ftime 402,19410
# define __NR_sync 403,19447
# define __NR_kill 404,19484
# define __NR_rename 405,19521
# define __NR_mkdir 406,19558
# define __NR_rmdir 407,19595
# define __NR_dup 408,19632
# define __NR_pipe 409,19669
# define __NR_times 410,19706
# define __NR_prof 411,19743
# define __NR_brk 412,19780
# define __NR_setgid 413,19817
# define __NR_getgid 414,19854
# define __NR_signal 415,19891
# define __NR_geteuid 416,19928
# define __NR_getegid 417,19965
# define __NR_acct 418,20002
# define __NR_umount2 419,20039
# define __NR_lock 420,20076
# define __NR_ioctl 421,20113
# define __NR_fcntl 422,20150
# define __NR_mpx 423,20187
# define __NR_setpgid 424,20224
# define __NR_ulimit 425,20261
# define __NR_oldolduname 426,20298
# define __NR_umask 427,20335
# define __NR_chroot 428,20372
# define __NR_ustat 429,20409
# define __NR_dup2 430,20446
# define __NR_getppid 431,20483
# define __NR_getpgrp 432,20520
# define __NR_setsid 433,20557
# define __NR_sigaction 434,20594
# define __NR_sgetmask 435,20631
# define __NR_ssetmask 436,20668
# define __NR_setreuid 437,20705
# define __NR_setregid 438,20742
# define __NR_sigsuspend 439,20779
# define __NR_sigpending 440,20816
# define __NR_sethostname 441,20853
# define __NR_setrlimit 442,20890
# define __NR_getrlimit 443,20927
# define __NR_getrusage 444,21010
# define __NR_gettimeofday 445,21047
# define __NR_settimeofday 446,21084
# define __NR_getgroups 447,21121
# define __NR_setgroups 448,21158
# define __NR_select 449,21195
# define __NR_symlink 450,21232
# define __NR_oldlstat 451,21269
# define __NR_readlink 452,21306
# define __NR_uselib 453,21343
# define __NR_swapon 454,21380
# define __NR_reboot 455,21417
# define __NR_readdir 456,21454
# define __NR_mmap 457,21491
# define __NR_munmap 458,21528
# define __NR_truncate 459,21565
# define __NR_ftruncate 460,21602
# define __NR_fchmod 461,21639
# define __NR_fchown 462,21676
# define __NR_getpriority 463,21713
# define __NR_setpriority 464,21750
# define __NR_profil 465,21787
# define __NR_statfs 466,21824
# define __NR_fstatfs 467,21861
# define __NR_ioperm 468,21898
# define __NR_socketcall 469,21935
# define __NR_syslog 470,21972
# define __NR_setitimer 471,22009
# define __NR_getitimer 472,22046
# define __NR_stat 473,22083
# define __NR_lstat 474,22120
# define __NR_fstat 475,22157
# define __NR_olduname 476,22194
# define __NR_iopl 477,22231
# define __NR_vhangup 478,22268
# define __NR_idle 479,22305
# define __NR_vm86old 480,22342
# define __NR_wait4 481,22379
# define __NR_swapoff 482,22416
# define __NR_sysinfo 483,22453
# define __NR_ipc 484,22490
# define __NR_fsync 485,22527
# define __NR_sigreturn 486,22564
# define __NR_clone 487,22601
# define __NR_setdomainname 488,22638
# define __NR_uname 489,22675
# define __NR_modify_ldt 490,22712
# define __NR_adjtimex 491,22749
# define __NR_mprotect 492,22786
# define __NR_sigprocmask 493,22823
# define __NR_create_module 494,22860
# define __NR_init_module 495,22897
# define __NR_delete_module 496,22934
# define __NR_get_kernel_syms 497,22971
# define __NR_quotactl 498,23008
# define __NR_getpgid 499,23045
# define __NR_fchdir 500,23082
# define __NR_bdflush 501,23119
# define __NR_sysfs 502,23156
# define __NR_personality 503,23193
# define __NR_afs_syscall 504,23230
# define __NR_setfsuid 505,23304
# define __NR_setfsgid 506,23341
# define __NR__llseek 507,23378
# define __NR_getdents 508,23415
# define __NR__newselect 509,23452
# define __NR_flock 510,23489
# define __NR_msync 511,23526
# define __NR_readv 512,23563
# define __NR_writev 513,23600
# define __NR_getsid 514,23637
# define __NR_fdatasync 515,23674
# define __NR__sysctl 516,23711
# define __NR_mlock 517,23748
# define __NR_munlock 518,23785
# define __NR_mlockall 519,23822
# define __NR_munlockall 520,23859
# define __NR_sched_setparam 521,23896
# define __NR_sched_getparam 522,23941
# define __NR_sched_setscheduler 523,23986
# define __NR_sched_getscheduler 524,24031
# define __NR_sched_yield 525,24076
# define __NR_sched_get_priority_max 526,24121
# define __NR_sched_get_priority_min 527,24166
# define __NR_sched_rr_get_interval 528,24211
# define __NR_nanosleep 529,24256
# define __NR_mremap 530,24293
# define __NR_setresuid 531,24330
# define __NR_getresuid 532,24367
# define __NR_vm86 533,24404
# define __NR_query_module 534,24441
# define __NR_poll 535,24478
# define __NR_nfsservctl 536,24515
# define __NR_setresgid 537,24552
# define __NR_getresgid 538,24589
# define __NR_prctl 539,24626
# define __NR_rt_sigreturn 540,24663
# define __NR_rt_sigaction 541,24700
# define __NR_rt_sigprocmask 542,24737
# define __NR_rt_sigpending 543,24774
# define __NR_rt_sigtimedwait 544,24811
# define __NR_rt_sigqueueinfo 545,24848
# define __NR_rt_sigsuspend 546,24885
# define __NR_pread64 547,24922
# define __NR_pwrite64 548,24959
# define __NR_chown 549,24996
# define __NR_getcwd 550,25033
# define __NR_capget 551,25070
# define __NR_capset 552,25107
# define __NR_sigaltstack 553,25144
# define __NR_sendfile 554,25181
# define __NR_getpmsg 555,25218
# define __NR_putpmsg 556,25299
# define __NR_vfork 557,25380
# define __NR_ugetrlimit 558,25417
# define __NR_mmap2 559,25488
# define __NR_truncate64 560,25525
# define __NR_ftruncate64 561,25562
# define __NR_stat64 562,25599
# define __NR_lstat64 563,25636
# define __NR_fstat64 564,25673
# define __NR_lchown32 565,25710
# define __NR_getuid32 566,25747
# define __NR_getgid32 567,25784
# define __NR_geteuid32 568,25821
# define __NR_getegid32 569,25858
# define __NR_setreuid32 570,25895
# define __NR_setregid32 571,25932
# define __NR_getgroups32 572,25969
# define __NR_setgroups32 573,26006
# define __NR_fchown32 574,26043
# define __NR_setresuid32 575,26080
# define __NR_getresuid32 576,26117
# define __NR_setresgid32 577,26154
# define __NR_getresgid32 578,26191
# define __NR_chown32 579,26228
# define __NR_setuid32 580,26265
# define __NR_setgid32 581,26302
# define __NR_setfsuid32 582,26339
# define __NR_setfsgid32 583,26376
# define __NR_pivot_root 584,26413
# define __NR_mincore 585,26450
# define __NR_madvise 586,26487
# define __NR_madvise1 587,26524
# define __NR_getdents64 588,26605
# define __NR_fcntl64 589,26642
# define __NR_gettid 591,26699
# define __NR_readahead 592,26736
# define __NR_setxattr 593,26773
# define __NR_lsetxattr 594,26810
# define __NR_fsetxattr 595,26847
# define __NR_getxattr 596,26884
# define __NR_lgetxattr 597,26921
# define __NR_fgetxattr 598,26958
# define __NR_listxattr 599,26995
# define __NR_llistxattr 600,27032
# define __NR_flistxattr 601,27069
# define __NR_removexattr 602,27106
# define __NR_lremovexattr 603,27143
# define __NR_fremovexattr 604,27180
# define __NR_tkill 605,27217
# define __NR_sendfile64 606,27254
# define __NR_futex 607,27291
# define __NR_sched_setaffinity 608,27328
# define __NR_sched_getaffinity 609,27365
# define __NR_set_thread_area 610,27402
# define __NR_get_thread_area 611,27439
# define __NR_io_setup 612,27476
# define __NR_io_destroy 613,27513
# define __NR_io_getevents 614,27550
# define __NR_io_submit 615,27587
# define __NR_io_cancel 616,27624
# define __NR_fadvise64 617,27661
# define __NR_exit_group 619,27766
# define __NR_lookup_dcookie 620,27803
# define __NR_epoll_create 621,27840
# define __NR_epoll_ctl 622,27877
# define __NR_epoll_wait 623,27914
# define __NR_remap_file_pages 624,27951
# define __NR_set_tid_address 625,27988
# define __NR_timer_create 626,28025
# define __NR_timer_settime 627,28062
# define __NR_timer_gettime 628,28117
# define __NR_timer_getoverrun 629,28172
# define __NR_timer_delete 630,28227
# define __NR_clock_settime 631,28282
# define __NR_clock_gettime 632,28337
# define __NR_clock_getres 633,28392
# define __NR_clock_nanosleep 634,28447
# define __NR_statfs64 635,28502
# define __NR_fstatfs64 636,28539
# define __NR_tgkill 637,28576
# define __NR_utimes 638,28613
# define __NR_fadvise64_64 639,28650
# define __NR_vserver 640,28687
# define __NR_mbind 641,28724
# define __NR_get_mempolicy 642,28761
# define __NR_set_mempolicy 643,28798
# define __NR_mq_open 644,28835
# define __NR_mq_unlink 645,28872
# define __NR_mq_timedsend 646,28922
# define __NR_mq_timedreceive 647,28972
# define __NR_mq_notify 648,29022
# define __NR_mq_getsetattr 649,29072
# define __NR_kexec_load 650,29122
# define __NR_waitid 651,29159
# define __NR_add_key 653,29235
# define __NR_request_key 654,29272
# define __NR_keyctl 655,29309
# define __NR_ioprio_set 656,29346
# define __NR_ioprio_get 657,29383
# define __NR_inotify_init 658,29420
# define __NR_inotify_add_watch 659,29457
# define __NR_inotify_rm_watch 660,29494
# define __NR_migrate_pages 661,29531
# define __NR_openat 662,29568
# define __NR_mkdirat 663,29605
# define __NR_mknodat 664,29642
# define __NR_fchownat 665,29679
# define __NR_futimesat 666,29716
# define __NR_fstatat64 667,29753
# define __NR_unlinkat 668,29790
# define __NR_renameat 669,29827
# define __NR_linkat 670,29864
# define __NR_symlinkat 671,29901
# define __NR_readlinkat 672,29938
# define __NR_fchmodat 673,29975
# define __NR_faccessat 674,30012
# define __NR_pselect6 675,30049
# define __NR_ppoll 676,30086
# define __NR_unshare 677,30123
# define __NR_set_robust_list 678,30160
# define __NR_get_robust_list 679,30197
# define __NR_splice 680,30234
# define __NR_sync_file_range 681,30271
# define __NR_tee 682,30308
# define __NR_vmsplice 683,30345
# define __NR_move_pages 684,30382
# define __NR_getcpu 685,30419
# define __NR_epoll_pwait 686,30456
# define __NR_utimensat 687,30493
# define __NR_signalfd 688,30530
# define __NR_timerfd 689,30567
# define __NR_eventfd 690,30604
# define __NR_fallocate 691,30641
# define __NR_timerfd_settime 692,30678
# define __NR_timerfd_gettime 693,30715
# define __NR_signalfd4 694,30752
# define __NR_eventfd2 695,30789
# define __NR_epoll_create1 696,30826
# define __NR_dup3 697,30863
# define __NR_pipe2 698,30900
# define __NR_inotify_init1 699,30937
# define __NR_preadv 700,30974
# define __NR_pwritev 701,31011
# define __NR_rt_tgsigqueueinfo 702,31048
# define __NR_perf_event_open 703,31085
# define __NR_recvmmsg 704,31122
# define __NR_fanotify_init 705,31159
# define __NR_fanotify_mark 706,31196
# define __NR_prlimit64 707,31233
# define __NR_name_to_handle_at 708,31270
# define __NR_open_by_handle_at 709,31307
# define __NR_clock_adjtime 710,31344
# define __NR_syncfs 711,31381
# define __NR_sendmmsg 712,31418
# define __NR_setns 713,31455
# define __NR_process_vm_readv 714,31492
# define __NR_process_vm_writev 715,31529
# define __NR_kcmp 716,31566
# define __NR_finit_module 717,31603
# define SYS__sysctl 722,31706
# define SYS_accept 723,31740
# define SYS_accept4 724,31772
# define SYS_access 725,31806
# define SYS_acct 726,31838
# define SYS_add_key 727,31866
# define SYS_adjtimex 728,31900
# define SYS_afs_syscall 729,31936
# define SYS_alarm 730,31978
# define SYS_arch_prctl 731,32008
# define SYS_bind 732,32048
# define SYS_brk 733,32076
# define SYS_capget 734,32102
# define SYS_capset 735,32134
# define SYS_chdir 736,32166
# define SYS_chmod 737,32196
# define SYS_chown 738,32226
# define SYS_chroot 739,32256
# define SYS_clock_adjtime 740,32288
# define SYS_clock_getres 741,32334
# define SYS_clock_gettime 742,32378
# define SYS_clock_nanosleep 743,32424
# define SYS_clock_settime 744,32474
# define SYS_clone 745,32520
# define SYS_close 746,32550
# define SYS_connect 747,32580
# define SYS_creat 748,32614
# define SYS_create_module 749,32644
# define SYS_delete_module 750,32690
# define SYS_dup 751,32736
# define SYS_dup2 752,32762
# define SYS_dup3 753,32790
# define SYS_epoll_create 754,32818
# define SYS_epoll_create1 755,32862
# define SYS_epoll_ctl 756,32908
# define SYS_epoll_ctl_old 757,32946
# define SYS_epoll_pwait 758,32992
# define SYS_epoll_wait 759,33034
# define SYS_epoll_wait_old 760,33074
# define SYS_eventfd 761,33122
# define SYS_eventfd2 762,33156
# define SYS_execve 763,33192
# define SYS_exit 764,33224
# define SYS_exit_group 765,33252
# define SYS_faccessat 766,33292
# define SYS_fadvise64 767,33330
# define SYS_fallocate 768,33368
# define SYS_fanotify_init 769,33406
# define SYS_fanotify_mark 770,33452
# define SYS_fchdir 771,33498
# define SYS_fchmod 772,33530
# define SYS_fchmodat 773,33562
# define SYS_fchown 774,33598
# define SYS_fchownat 775,33630
# define SYS_fcntl 776,33666
# define SYS_fdatasync 777,33696
# define SYS_fgetxattr 778,33734
# define SYS_flistxattr 779,33772
# define SYS_flock 780,33812
# define SYS_fork 781,33842
# define SYS_fremovexattr 782,33870
# define SYS_fsetxattr 783,33914
# define SYS_fstat 784,33952
# define SYS_fstatfs 785,33982
# define SYS_fsync 786,34016
# define SYS_ftruncate 787,34046
# define SYS_futex 788,34084
# define SYS_futimesat 789,34114
# define SYS_get_kernel_syms 790,34152
# define SYS_get_mempolicy 791,34202
# define SYS_get_robust_list 792,34248
# define SYS_get_thread_area 793,34298
# define SYS_getcpu 794,34348
# define SYS_getcwd 795,34380
# define SYS_getdents 796,34412
# define SYS_getdents64 797,34448
# define SYS_getegid 798,34488
# define SYS_geteuid 799,34522
# define SYS_getgid 800,34556
# define SYS_getgroups 801,34588
# define SYS_getitimer 802,34626
# define SYS_getpeername 803,34664
# define SYS_getpgid 804,34706
# define SYS_getpgrp 805,34740
# define SYS_getpid 806,34774
# define SYS_getpmsg 807,34806
# define SYS_getppid 808,34840
# define SYS_getpriority 809,34874
# define SYS_getresgid 810,34916
# define SYS_getresuid 811,34954
# define SYS_getrlimit 812,34992
# define SYS_getrusage 813,35030
# define SYS_getsid 814,35068
# define SYS_getsockname 815,35100
# define SYS_getsockopt 816,35142
# define SYS_gettid 817,35182
# define SYS_gettimeofday 818,35214
# define SYS_getuid 819,35258
# define SYS_getxattr 820,35290
# define SYS_init_module 821,35326
# define SYS_inotify_add_watch 822,35368
# define SYS_inotify_init 823,35422
# define SYS_inotify_init1 824,35466
# define SYS_inotify_rm_watch 825,35512
# define SYS_io_cancel 826,35564
# define SYS_io_destroy 827,35602
# define SYS_io_getevents 828,35642
# define SYS_io_setup 829,35686
# define SYS_io_submit 830,35722
# define SYS_ioctl 831,35760
# define SYS_ioperm 832,35790
# define SYS_iopl 833,35822
# define SYS_ioprio_get 834,35850
# define SYS_ioprio_set 835,35890
# define SYS_kcmp 836,35930
# define SYS_kexec_load 837,35958
# define SYS_keyctl 838,35998
# define SYS_kill 839,36030
# define SYS_lchown 840,36058
# define SYS_lgetxattr 841,36090
# define SYS_link 842,36128
# define SYS_linkat 843,36156
# define SYS_listen 844,36188
# define SYS_listxattr 845,36220
# define SYS_llistxattr 846,36258
# define SYS_lookup_dcookie 847,36298
# define SYS_lremovexattr 848,36346
# define SYS_lseek 849,36390
# define SYS_lsetxattr 850,36420
# define SYS_lstat 851,36458
# define SYS_madvise 852,36488
# define SYS_mbind 853,36522
# define SYS_migrate_pages 854,36552
# define SYS_mincore 855,36598
# define SYS_mkdir 856,36632
# define SYS_mkdirat 857,36662
# define SYS_mknod 858,36696
# define SYS_mknodat 859,36726
# define SYS_mlock 860,36760
# define SYS_mlockall 861,36790
# define SYS_mmap 862,36826
# define SYS_modify_ldt 863,36854
# define SYS_mount 864,36894
# define SYS_move_pages 865,36924
# define SYS_mprotect 866,36964
# define SYS_mq_getsetattr 867,37000
# define SYS_mq_notify 868,37046
# define SYS_mq_open 869,37084
# define SYS_mq_timedreceive 870,37118
# define SYS_mq_timedsend 871,37168
# define SYS_mq_unlink 872,37212
# define SYS_mremap 873,37250
# define SYS_msgctl 874,37282
# define SYS_msgget 875,37314
# define SYS_msgrcv 876,37346
# define SYS_msgsnd 877,37378
# define SYS_msync 878,37410
# define SYS_munlock 879,37440
# define SYS_munlockall 880,37474
# define SYS_munmap 881,37514
# define SYS_name_to_handle_at 882,37546
# define SYS_nanosleep 883,37600
# define SYS_newfstatat 884,37638
# define SYS_nfsservctl 885,37678
# define SYS_open 886,37718
# define SYS_open_by_handle_at 887,37746
# define SYS_openat 888,37800
# define SYS_pause 889,37832
# define SYS_perf_event_open 890,37862
# define SYS_personality 891,37912
# define SYS_pipe 892,37954
# define SYS_pipe2 893,37982
# define SYS_pivot_root 894,38012
# define SYS_poll 895,38052
# define SYS_ppoll 896,38080
# define SYS_prctl 897,38110
# define SYS_pread64 898,38140
# define SYS_preadv 899,38174
# define SYS_prlimit64 900,38206
# define SYS_process_vm_readv 901,38244
# define SYS_process_vm_writev 902,38296
# define SYS_pselect6 903,38350
# define SYS_ptrace 904,38386
# define SYS_putpmsg 905,38418
# define SYS_pwrite64 906,38452
# define SYS_pwritev 907,38488
# define SYS_query_module 908,38522
# define SYS_quotactl 909,38566
# define SYS_read 910,38602
# define SYS_readahead 911,38630
# define SYS_readlink 912,38668
# define SYS_readlinkat 913,38704
# define SYS_readv 914,38744
# define SYS_reboot 915,38774
# define SYS_recvfrom 916,38806
# define SYS_recvmmsg 917,38842
# define SYS_recvmsg 918,38878
# define SYS_remap_file_pages 919,38912
# define SYS_removexattr 920,38964
# define SYS_rename 921,39006
# define SYS_renameat 922,39038
# define SYS_request_key 923,39074
# define SYS_restart_syscall 924,39116
# define SYS_rmdir 925,39166
# define SYS_rt_sigaction 926,39196
# define SYS_rt_sigpending 927,39240
# define SYS_rt_sigprocmask 928,39286
# define SYS_rt_sigqueueinfo 929,39334
# define SYS_rt_sigreturn 930,39384
# define SYS_rt_sigsuspend 931,39428
# define SYS_rt_sigtimedwait 932,39474
# define SYS_rt_tgsigqueueinfo 933,39524
# define SYS_sched_get_priority_max 934,39578
# define SYS_sched_get_priority_min 935,39642
# define SYS_sched_getaffinity 936,39706
# define SYS_sched_getparam 937,39760
# define SYS_sched_getscheduler 938,39808
# define SYS_sched_rr_get_interval 939,39864
# define SYS_sched_setaffinity 940,39926
# define SYS_sched_setparam 941,39980
# define SYS_sched_setscheduler 942,40028
# define SYS_sched_yield 943,40084
# define SYS_security 944,40126
# define SYS_select 945,40162
# define SYS_semctl 946,40194
# define SYS_semget 947,40226
# define SYS_semop 948,40258
# define SYS_semtimedop 949,40288
# define SYS_sendfile 950,40328
# define SYS_sendmmsg 951,40364
# define SYS_sendmsg 952,40400
# define SYS_sendto 953,40434
# define SYS_set_mempolicy 954,40466
# define SYS_set_robust_list 955,40512
# define SYS_set_thread_area 956,40562
# define SYS_set_tid_address 957,40612
# define SYS_setdomainname 958,40662
# define SYS_setfsgid 959,40708
# define SYS_setfsuid 960,40744
# define SYS_setgid 961,40780
# define SYS_setgroups 962,40812
# define SYS_sethostname 963,40850
# define SYS_setitimer 964,40892
# define SYS_setns 965,40930
# define SYS_setpgid 966,40960
# define SYS_setpriority 967,40994
# define SYS_setregid 968,41036
# define SYS_setresgid 969,41072
# define SYS_setresuid 970,41110
# define SYS_setreuid 971,41148
# define SYS_setrlimit 972,41184
# define SYS_setsid 973,41222
# define SYS_setsockopt 974,41254
# define SYS_settimeofday 975,41294
# define SYS_setuid 976,41338
# define SYS_setxattr 977,41370
# define SYS_shmat 978,41406
# define SYS_shmctl 979,41436
# define SYS_shmdt 980,41468
# define SYS_shmget 981,41498
# define SYS_shutdown 982,41530
# define SYS_sigaltstack 983,41566
# define SYS_signalfd 984,41608
# define SYS_signalfd4 985,41644
# define SYS_socket 986,41682
# define SYS_socketpair 987,41714
# define SYS_splice 988,41754
# define SYS_stat 989,41786
# define SYS_statfs 990,41814
# define SYS_swapoff 991,41846
# define SYS_swapon 992,41880
# define SYS_symlink 993,41912
# define SYS_symlinkat 994,41946
# define SYS_sync 995,41984
# define SYS_sync_file_range 996,42012
# define SYS_syncfs 997,42062
# define SYS_sysfs 998,42094
# define SYS_sysinfo 999,42124
# define SYS_syslog 1000,42158
# define SYS_tee 1001,42190
# define SYS_tgkill 1002,42216
# define SYS_time 1003,42248
# define SYS_timer_create 1004,42276
# define SYS_timer_delete 1005,42320
# define SYS_timer_getoverrun 1006,42364
# define SYS_timer_gettime 1007,42416
# define SYS_timer_settime 1008,42462
# define SYS_timerfd_create 1009,42508
# define SYS_timerfd_gettime 1010,42556
# define SYS_timerfd_settime 1011,42606
# define SYS_times 1012,42656
# define SYS_tkill 1013,42686
# define SYS_truncate 1014,42716
# define SYS_tuxcall 1015,42752
# define SYS_umask 1016,42786
# define SYS_umount2 1017,42816
# define SYS_uname 1018,42850
# define SYS_unlink 1019,42880
# define SYS_unlinkat 1020,42912
# define SYS_unshare 1021,42948
# define SYS_uselib 1022,42982
# define SYS_ustat 1023,43014
# define SYS_utime 1024,43044
# define SYS_utimensat 1025,43074
# define SYS_utimes 1026,43112
# define SYS_vfork 1027,43144
# define SYS_vhangup 1028,43174
# define SYS_vmsplice 1029,43208
# define SYS_vserver 1030,43244
# define SYS_wait4 1031,43278
# define SYS_waitid 1032,43308
# define SYS_write 1033,43340
# define SYS_writev 1034,43370
# define SYS__llseek 1037,43409
# define SYS__newselect 1038,43443
# define SYS__sysctl 1039,43483
# define SYS_access 1040,43517
# define SYS_acct 1041,43549
# define SYS_add_key 1042,43577
# define SYS_adjtimex 1043,43611
# define SYS_afs_syscall 1044,43647
# define SYS_alarm 1045,43689
# define SYS_bdflush 1046,43719
# define SYS_break 1047,43753
# define SYS_brk 1048,43783
# define SYS_capget 1049,43809
# define SYS_capset 1050,43841
# define SYS_chdir 1051,43873
# define SYS_chmod 1052,43903
# define SYS_chown 1053,43933
# define SYS_chown32 1054,43963
# define SYS_chroot 1055,43997
# define SYS_clock_adjtime 1056,44029
# define SYS_clock_getres 1057,44075
# define SYS_clock_gettime 1058,44119
# define SYS_clock_nanosleep 1059,44165
# define SYS_clock_settime 1060,44215
# define SYS_clone 1061,44261
# define SYS_close 1062,44291
# define SYS_creat 1063,44321
# define SYS_create_module 1064,44351
# define SYS_delete_module 1065,44397
# define SYS_dup 1066,44443
# define SYS_dup2 1067,44469
# define SYS_dup3 1068,44497
# define SYS_epoll_create 1069,44525
# define SYS_epoll_create1 1070,44569
# define SYS_epoll_ctl 1071,44615
# define SYS_epoll_pwait 1072,44653
# define SYS_epoll_wait 1073,44695
# define SYS_eventfd 1074,44735
# define SYS_eventfd2 1075,44769
# define SYS_execve 1076,44805
# define SYS_exit 1077,44837
# define SYS_exit_group 1078,44865
# define SYS_faccessat 1079,44905
# define SYS_fadvise64 1080,44943
# define SYS_fadvise64_64 1081,44981
# define SYS_fallocate 1082,45025
# define SYS_fanotify_init 1083,45063
# define SYS_fanotify_mark 1084,45109
# define SYS_fchdir 1085,45155
# define SYS_fchmod 1086,45187
# define SYS_fchmodat 1087,45219
# define SYS_fchown 1088,45255
# define SYS_fchown32 1089,45287
# define SYS_fchownat 1090,45323
# define SYS_fcntl 1091,45359
# define SYS_fcntl64 1092,45389
# define SYS_fdatasync 1093,45423
# define SYS_fgetxattr 1094,45461
# define SYS_flistxattr 1095,45499
# define SYS_flock 1096,45539
# define SYS_fork 1097,45569
# define SYS_fremovexattr 1098,45597
# define SYS_fsetxattr 1099,45641
# define SYS_fstat 1100,45679
# define SYS_fstat64 1101,45709
# define SYS_fstatat64 1102,45743
# define SYS_fstatfs 1103,45781
# define SYS_fstatfs64 1104,45815
# define SYS_fsync 1105,45853
# define SYS_ftime 1106,45883
# define SYS_ftruncate 1107,45913
# define SYS_ftruncate64 1108,45951
# define SYS_futex 1109,45993
# define SYS_futimesat 1110,46023
# define SYS_get_kernel_syms 1111,46061
# define SYS_get_mempolicy 1112,46111
# define SYS_get_robust_list 1113,46157
# define SYS_get_thread_area 1114,46207
# define SYS_getcpu 1115,46257
# define SYS_getcwd 1116,46289
# define SYS_getdents 1117,46321
# define SYS_getdents64 1118,46357
# define SYS_getegid 1119,46397
# define SYS_getegid32 1120,46431
# define SYS_geteuid 1121,46469
# define SYS_geteuid32 1122,46503
# define SYS_getgid 1123,46541
# define SYS_getgid32 1124,46573
# define SYS_getgroups 1125,46609
# define SYS_getgroups32 1126,46647
# define SYS_getitimer 1127,46689
# define SYS_getpgid 1128,46727
# define SYS_getpgrp 1129,46761
# define SYS_getpid 1130,46795
# define SYS_getpmsg 1131,46827
# define SYS_getppid 1132,46861
# define SYS_getpriority 1133,46895
# define SYS_getresgid 1134,46937
# define SYS_getresgid32 1135,46975
# define SYS_getresuid 1136,47017
# define SYS_getresuid32 1137,47055
# define SYS_getrlimit 1138,47097
# define SYS_getrusage 1139,47135
# define SYS_getsid 1140,47173
# define SYS_gettid 1141,47205
# define SYS_gettimeofday 1142,47237
# define SYS_getuid 1143,47281
# define SYS_getuid32 1144,47313
# define SYS_getxattr 1145,47349
# define SYS_gtty 1146,47385
# define SYS_idle 1147,47413
# define SYS_init_module 1148,47441
# define SYS_inotify_add_watch 1149,47483
# define SYS_inotify_init 1150,47537
# define SYS_inotify_init1 1151,47581
# define SYS_inotify_rm_watch 1152,47627
# define SYS_io_cancel 1153,47679
# define SYS_io_destroy 1154,47717
# define SYS_io_getevents 1155,47757
# define SYS_io_setup 1156,47801
# define SYS_io_submit 1157,47837
# define SYS_ioctl 1158,47875
# define SYS_ioperm 1159,47905
# define SYS_iopl 1160,47937
# define SYS_ioprio_get 1161,47965
# define SYS_ioprio_set 1162,48005
# define SYS_ipc 1163,48045
# define SYS_kcmp 1164,48071
# define SYS_kexec_load 1165,48099
# define SYS_keyctl 1166,48139
# define SYS_kill 1167,48171
# define SYS_lchown 1168,48199
# define SYS_lchown32 1169,48231
# define SYS_lgetxattr 1170,48267
# define SYS_link 1171,48305
# define SYS_linkat 1172,48333
# define SYS_listxattr 1173,48365
# define SYS_llistxattr 1174,48403
# define SYS_lock 1175,48443
# define SYS_lookup_dcookie 1176,48471
# define SYS_lremovexattr 1177,48519
# define SYS_lseek 1178,48563
# define SYS_lsetxattr 1179,48593
# define SYS_lstat 1180,48631
# define SYS_lstat64 1181,48661
# define SYS_madvise 1182,48695
# define SYS_mbind 1183,48729
# define SYS_migrate_pages 1184,48759
# define SYS_mincore 1185,48805
# define SYS_mkdir 1186,48839
# define SYS_mkdirat 1187,48869
# define SYS_mknod 1188,48903
# define SYS_mknodat 1189,48933
# define SYS_mlock 1190,48967
# define SYS_mlockall 1191,48997
# define SYS_mmap 1192,49033
# define SYS_mmap2 1193,49061
# define SYS_modify_ldt 1194,49091
# define SYS_mount 1195,49131
# define SYS_move_pages 1196,49161
# define SYS_mprotect 1197,49201
# define SYS_mpx 1198,49237
# define SYS_mq_getsetattr 1199,49263
# define SYS_mq_notify 1200,49309
# define SYS_mq_open 1201,49347
# define SYS_mq_timedreceive 1202,49381
# define SYS_mq_timedsend 1203,49431
# define SYS_mq_unlink 1204,49475
# define SYS_mremap 1205,49513
# define SYS_msync 1206,49545
# define SYS_munlock 1207,49575
# define SYS_munlockall 1208,49609
# define SYS_munmap 1209,49649
# define SYS_name_to_handle_at 1210,49681
# define SYS_nanosleep 1211,49735
# define SYS_nfsservctl 1212,49773
# define SYS_nice 1213,49813
# define SYS_oldfstat 1214,49841
# define SYS_oldlstat 1215,49877
# define SYS_oldolduname 1216,49913
# define SYS_oldstat 1217,49955
# define SYS_olduname 1218,49989
# define SYS_open 1219,50025
# define SYS_open_by_handle_at 1220,50053
# define SYS_openat 1221,50107
# define SYS_pause 1222,50139
# define SYS_perf_event_open 1223,50169
# define SYS_personality 1224,50219
# define SYS_pipe 1225,50261
# define SYS_pipe2 1226,50289
# define SYS_pivot_root 1227,50319
# define SYS_poll 1228,50359
# define SYS_ppoll 1229,50387
# define SYS_prctl 1230,50417
# define SYS_pread64 1231,50447
# define SYS_preadv 1232,50481
# define SYS_prlimit64 1233,50513
# define SYS_process_vm_readv 1234,50551
# define SYS_process_vm_writev 1235,50603
# define SYS_prof 1236,50657
# define SYS_profil 1237,50685
# define SYS_pselect6 1238,50717
# define SYS_ptrace 1239,50753
# define SYS_putpmsg 1240,50785
# define SYS_pwrite64 1241,50819
# define SYS_pwritev 1242,50855
# define SYS_query_module 1243,50889
# define SYS_quotactl 1244,50933
# define SYS_read 1245,50969
# define SYS_readahead 1246,50997
# define SYS_readdir 1247,51035
# define SYS_readlink 1248,51069
# define SYS_readlinkat 1249,51105
# define SYS_readv 1250,51145
# define SYS_reboot 1251,51175
# define SYS_recvmmsg 1252,51207
# define SYS_remap_file_pages 1253,51243
# define SYS_removexattr 1254,51295
# define SYS_rename 1255,51337
# define SYS_renameat 1256,51369
# define SYS_request_key 1257,51405
# define SYS_restart_syscall 1258,51447
# define SYS_rmdir 1259,51497
# define SYS_rt_sigaction 1260,51527
# define SYS_rt_sigpending 1261,51571
# define SYS_rt_sigprocmask 1262,51617
# define SYS_rt_sigqueueinfo 1263,51665
# define SYS_rt_sigreturn 1264,51715
# define SYS_rt_sigsuspend 1265,51759
# define SYS_rt_sigtimedwait 1266,51805
# define SYS_rt_tgsigqueueinfo 1267,51855
# define SYS_sched_get_priority_max 1268,51909
# define SYS_sched_get_priority_min 1269,51973
# define SYS_sched_getaffinity 1270,52037
# define SYS_sched_getparam 1271,52091
# define SYS_sched_getscheduler 1272,52139
# define SYS_sched_rr_get_interval 1273,52195
# define SYS_sched_setaffinity 1274,52257
# define SYS_sched_setparam 1275,52311
# define SYS_sched_setscheduler 1276,52359
# define SYS_sched_yield 1277,52415
# define SYS_select 1278,52457
# define SYS_sendfile 1279,52489
# define SYS_sendfile64 1280,52525
# define SYS_sendmmsg 1281,52565
# define SYS_set_mempolicy 1282,52601
# define SYS_set_robust_list 1283,52647
# define SYS_set_thread_area 1284,52697
# define SYS_set_tid_address 1285,52747
# define SYS_setdomainname 1286,52797
# define SYS_setfsgid 1287,52843
# define SYS_setfsgid32 1288,52879
# define SYS_setfsuid 1289,52919
# define SYS_setfsuid32 1290,52955
# define SYS_setgid 1291,52995
# define SYS_setgid32 1292,53027
# define SYS_setgroups 1293,53063
# define SYS_setgroups32 1294,53101
# define SYS_sethostname 1295,53143
# define SYS_setitimer 1296,53185
# define SYS_setns 1297,53223
# define SYS_setpgid 1298,53253
# define SYS_setpriority 1299,53287
# define SYS_setregid 1300,53329
# define SYS_setregid32 1301,53365
# define SYS_setresgid 1302,53405
# define SYS_setresgid32 1303,53443
# define SYS_setresuid 1304,53485
# define SYS_setresuid32 1305,53523
# define SYS_setreuid 1306,53565
# define SYS_setreuid32 1307,53601
# define SYS_setrlimit 1308,53641
# define SYS_setsid 1309,53679
# define SYS_settimeofday 1310,53711
# define SYS_setuid 1311,53755
# define SYS_setuid32 1312,53787
# define SYS_setxattr 1313,53823
# define SYS_sgetmask 1314,53859
# define SYS_sigaction 1315,53895
# define SYS_sigaltstack 1316,53933
# define SYS_signal 1317,53975
# define SYS_signalfd 1318,54007
# define SYS_signalfd4 1319,54043
# define SYS_sigpending 1320,54081
# define SYS_sigprocmask 1321,54121
# define SYS_sigreturn 1322,54163
# define SYS_sigsuspend 1323,54201
# define SYS_socketcall 1324,54241
# define SYS_splice 1325,54281
# define SYS_ssetmask 1326,54313
# define SYS_stat 1327,54349
# define SYS_stat64 1328,54377
# define SYS_statfs 1329,54409
# define SYS_statfs64 1330,54441
# define SYS_stime 1331,54477
# define SYS_stty 1332,54507
# define SYS_swapoff 1333,54535
# define SYS_swapon 1334,54569
# define SYS_symlink 1335,54601
# define SYS_symlinkat 1336,54635
# define SYS_sync 1337,54673
# define SYS_sync_file_range 1338,54701
# define SYS_syncfs 1339,54751
# define SYS_sysfs 1340,54783
# define SYS_sysinfo 1341,54813
# define SYS_syslog 1342,54847
# define SYS_tee 1343,54879
# define SYS_tgkill 1344,54905
# define SYS_time 1345,54937
# define SYS_timer_create 1346,54965
# define SYS_timer_delete 1347,55009
# define SYS_timer_getoverrun 1348,55053
# define SYS_timer_gettime 1349,55105
# define SYS_timer_settime 1350,55151
# define SYS_timerfd_create 1351,55197
# define SYS_timerfd_gettime 1352,55245
# define SYS_timerfd_settime 1353,55295
# define SYS_times 1354,55345
# define SYS_tkill 1355,55375
# define SYS_truncate 1356,55405
# define SYS_truncate64 1357,55441
# define SYS_ugetrlimit 1358,55481
# define SYS_ulimit 1359,55521
# define SYS_umask 1360,55553
# define SYS_umount 1361,55583
# define SYS_umount2 1362,55615
# define SYS_uname 1363,55649
# define SYS_unlink 1364,55679
# define SYS_unlinkat 1365,55711
# define SYS_unshare 1366,55747
# define SYS_uselib 1367,55781
# define SYS_ustat 1368,55813
# define SYS_utime 1369,55843
# define SYS_utimensat 1370,55873
# define SYS_utimes 1371,55911
# define SYS_vfork 1372,55943
# define SYS_vhangup 1373,55973
# define SYS_vm86 1374,56007
# define SYS_vm86old 1375,56035
# define SYS_vmsplice 1376,56069
# define SYS_vserver 1377,56105
# define SYS_wait4 1378,56139
# define SYS_waitid 1379,56169
# define SYS_waitpid 1380,56201
# define SYS_write 1381,56235
# define SYS_writev 1382,56265

unix/diagnost.c,118
report_diagnostics(41,1901
append_diagnostics(49,2105
diagnost_exit(55,2254
check_for_unsupported_modules(60,2280

unix/injector.c,2734
static bool verbose 67,2475
static volatile int timeout_expired;71,2539
typedef enum _inject_method_t 73,2577
    INJECT_EARLY,74,2609
    INJECT_LD_PRELOAD,75,2665
    INJECT_PTRACE 76,2721
} inject_method_t;77,2780
typedef struct _dr_inject_info_t 80,2844
    process_id_t pid;81,2879
    const char *exe;exe82,2901
    const char *image_name;image_name83,2963
    const char **argv;argv84,3017
    int pipe_fd;85,3074
    bool exec_self;87,3092
    inject_method_t method;88,3161
    bool killpg;90,3190
    bool exited;91,3207
    int exitcode;92,3224
} dr_inject_info_t;93,3242
get_application_short_name(107,3613
safe_read(115,3734
internal_error(126,4074
ignore_assert(134,4248
report_dynamorio_problem(140,4333
pre_execve_ld_preload(162,4932
pre_execve_early(211,7114
fork_suspended_child(217,7233
write_pipe_cmd(267,9007
inject_early(283,9392
inject_ld_preload(303,10058
create_inject_info(320,10620
get_elf_platform_path(334,11007
exe_is_right_bitwidth(346,11284
dr_inject_process_create(371,12059
dr_inject_prepare_to_exec(407,13046
dr_inject_prepare_to_ptrace(429,13648
dr_inject_prepare_new_process_group(442,13906
dr_inject_get_process_id(460,14314
dr_inject_get_image_name(468,14451
option_present(478,14739
dr_inject_process_inject(489,15019
alarm_handler(545,16855
dr_inject_process_run(552,16926
dr_inject_wait_for_child(574,17580
dr_inject_process_exit(609,18625
enum { MAX_SHELL_CODE 653,20210
# define REG_PC_FIELD 656,20254
# define REG_SP_FIELD 657,20298
# define REG_RETVAL_FIELD 658,20342
enum { REG_PC_OFFSET 663,20467
enum { REG_PC_OFFSET = offsetof(663,20467
enum { REG_PC_OFFSET = offsetof(struct user_regs_struct,663,20467
enum { REG_PC_OFFSET = offsetof(struct user_regs_struct, REG_PC_FIELD)663,20467
#define APP 665,20542
static bool op_exec_gdb 667,20573
static dr_inject_info_t *injector_info;injector_info670,20665
static file_t injector_dr_fd;671,20705
static file_t injectee_dr_fd;672,20735
typedef struct _enum_name_pair_t 674,20766
    const int enum_val;675,20801
    const char * const enum_name;676,20825
} enum_name_pair_t;677,20859
static const enum_name_pair_t pt_req_map[pt_req_map682,20970
our_ptrace(715,22395
#define ptrace 736,23136
ptrace_read_memory(741,23251
ptrace_write_memory(761,23881
gen_push_string(784,24611
gen_syscall(796,25053
gen_print(824,26010
unexpected_trace_event(836,26366
wait_until_signal(848,26752
continue_until_break(866,27208
injectee_run_get_retval(879,27640
injectee_open(951,30082
injectee_mmap(967,30661
injectee_map_file(991,31734
injectee_unmap(1023,32728
injectee_prot(1045,33399
user_regs_to_mc(1070,34215
detach_and_exec_gdb(1113,35304
inject_ptrace(1151,36735

unix/module.c,3303
typedef union _elf_generic_header_t 44,2100
    Elf64_Ehdr elf64;45,2138
    Elf32_Ehdr elf32;46,2160
} elf_generic_header_t;47,2182
# undef LOG50,2240
# define LOG(51,2252
typedef struct _elf_import_iterator_t 55,2348
    dr_symbol_import_t symbol_import;56,2388
    ELF_SYM_TYPE *dynsym;dynsym61,2605
    size_t symentry_size;62,2676
    const char *dynstr;dynstr63,2746
    size_t dynstr_size;64,2817
    ELF_SYM_TYPE *cur_sym;cur_sym66,2880
    ELF_SYM_TYPE safe_cur_sym;67,2960
    ELF_SYM_TYPE *import_end;import_end68,3034
    bool error_occurred;69,3106
} elf_import_iterator_t;70,3175
# define DT_GNU_HASH 75,3330
# define STT_GNU_IFUNC 79,3392
is_elf_so_header_common(108,4700
is_elf_so_header(172,7103
os_modules_init(178,7210
os_modules_exit(184,7260
elf_dt_abs_addr(193,7421
module_segment_prot_to_osprot(233,9203
module_add_segment_data(249,9670
module_fill_os_data(305,12144
module_walk_program_headers(415,17128
module_num_program_headers(481,20179
module_vaddr_from_prog_header(495,20578
module_read_program_header(525,21696
module_hashtab_init(559,23134
os_module_area_init(590,24451
free_module_names(693,28806
print_modules(704,29118
os_module_area_reset(735,30237
elf_hash(765,31527
elf_gnu_hash(780,31787
elf_sym_matches(789,31971
gnu_hash_lookup(811,32790
elf_hash_lookup(856,34285
get_proc_address_from_os_data(894,35454
get_proc_address_ex(928,36911
get_proc_address(967,38485
get_named_section_bounds(974,38664
rct_is_exported_function(987,38989
get_module_short_name(996,39179
get_module_company_name(1004,39377
get_module_base(1011,39519
is_range_in_code_section(1025,39844
is_in_code_section(1034,40148
is_in_dot_data_section(1043,40421
is_in_any_section(1052,40702
is_mapped_as_image(1060,40890
os_get_module_info(1083,41830
os_get_module_info_all_names(1134,43502
os_module_get_rct_htable(1147,43940
module_get_nth_segment(1158,44270
module_get_header_size(1187,45247
get_elf_platform(1201,45656
file_is_elf64(1220,46263
module_has_text_relocs(1237,46793
module_has_text_relocs_ex(1282,48362
module_get_section_with_name(1294,48686
module_read_os_data(1322,49775
get_shared_lib_name(1351,50828
module_get_os_privmod_data(1365,51188
module_find_phdr(1501,56077
module_get_relro(1516,56467
module_lookup_symbol(1534,57056
module_undef_symbols(1596,59168
dr_module_import_iterator_start(1606,59407
dr_module_import_iterator_hasnext(1614,59601
dr_module_import_iterator_next(1620,59714
dr_module_import_iterator_stop(1626,59807
dynsym_next(1631,59890
dynsym_next_import(1638,60071
dr_symbol_import_iterator_start(1663,60933
dr_symbol_import_iterator_hasnext(1730,63562
dr_symbol_import_iterator_next(1738,63829
dr_symbol_import_iterator_stop(1752,64280
module_relocate_symbol(1762,64568
module_relocate_rel(1899,68984
module_relocate_rela(1911,69265
module_get_text_section(1928,69745
redirect_malloc(1958,70867
redirect_realloc(1977,71431
redirect_calloc(1996,71954
redirect_free(2011,72303
os_read_until(2025,72650
elf_loader_init(2039,72931
elf_loader_destroy(2048,73145
elf_loader_read_ehdr(2060,73401
elf_loader_map_file(2079,73996
elf_loader_read_phdrs(2100,74781
elf_loader_read_headers(2125,75724
elf_loader_map_phdrs(2137,76012
elf_loader_find_pt_interp(2255,81423

unix/module.h,5107
#define MODULE_H35,1769
# define ELF_HEADER_TYPE 42,1991
# define ELF_PROGRAM_HEADER_TYPE 43,2027
# define ELF_SECTION_HEADER_TYPE 44,2071
# define ELF_DYNAMIC_ENTRY_TYPE 45,2115
# define ELF_ADDR 46,2157
# define ELF_WORD 47,2186
# define ELF_HALF 48,2216
# define ELF_SYM_TYPE 49,2245
# define ELF_ST_TYPE 50,2277
# define ELF_WORD_SIZE 51,2312
# define ELF_ST_BIND 52,2363
# define ELF_ST_VISIBILITY 53,2398
# define ELF_REL_TYPE 54,2445
# define ELF_RELA_TYPE 55,2477
# define ELF_AUXV_TYPE 56,2511
# define ELF_HEADER_TYPE 58,2553
# define ELF_PROGRAM_HEADER_TYPE 59,2589
# define ELF_SECTION_HEADER_TYPE 60,2633
# define ELF_DYNAMIC_ENTRY_TYPE 61,2677
# define ELF_ADDR 62,2719
# define ELF_WORD 63,2748
# define ELF_HALF 64,2777
# define ELF_SYM_TYPE 65,2806
# define ELF_ST_TYPE 66,2838
# define ELF_WORD_SIZE 67,2873
# define ELF_ST_BIND 68,2924
# define ELF_ST_VISIBILITY 69,2959
# define ELF_REL_TYPE 70,3006
# define ELF_RELA_TYPE 71,3038
# define ELF_AUXV_TYPE 72,3072
# define ELF_R_TYPE 77,3159
# define ELF_R_SYM 78,3194
# define ELF_R_INFO 79,3228
# define ELF_R_NONE 81,3285
# define ELF_R_DIRECT 82,3346
# define ELF_R_PC32 83,3412
# define ELF_R_COPY 84,3490
# define ELF_R_GLOB_DAT 85,3565
# define ELF_R_JUMP_SLOT 86,3627
# define ELF_R_RELATIVE 87,3689
#  define R_X86_64_IRELATIVE 89,3793
# define ELF_R_IRELATIVE 91,3833
# define ELF_R_TLS_DTPMOD 93,3938
# define ELF_R_TLS_TPOFF 94,4000
# define ELF_R_TLS_DTPOFF 95,4081
#  define R_X86_64_TLSDESC 97,4187
# define ELF_R_TLS_DESC 99,4227
# define ELF_R_TYPE 105,4593
# define ELF_R_SYM 106,4628
# define ELF_R_INFO 107,4662
# define ELF_R_NONE 109,4719
# define ELF_R_DIRECT 110,4775
# define ELF_R_PC32 111,4836
# define ELF_R_COPY 112,4903
# define ELF_R_GLOB_DAT 113,4973
# define ELF_R_JUMP_SLOT 114,5030
# define ELF_R_RELATIVE 115,5087
#  define R_386_IRELATIVE 117,5183
# define ELF_R_IRELATIVE 119,5220
# define ELF_R_TLS_DTPMOD 121,5319
# define ELF_R_TLS_TPOFF 122,5381
# define ELF_R_TLS_DTPOFF 123,5469
#  define R_386_TLS_DESC 125,5565
# define ELF_R_TLS_DESC 127,5603
#define OS_IMAGE_READ 135,6036
#define OS_IMAGE_WRITE 136,6076
#define OS_IMAGE_EXECUTE 137,6117
typedef struct _module_segment_t 142,6315
    app_pc start;144,6420
    app_pc end;145,6438
    uint prot;146,6454
} module_segment_t;147,6469
typedef struct _os_module_data_t 149,6490
    app_pc base_address;157,6976
    size_t alignment;158,7002
    size_t checksum;161,7103
    size_t timestamp;162,7124
    bool   hash_is_gnu;167,7284
    app_pc hashtab;168,7335
    size_t num_buckets;169,7403
    app_pc buckets;170,7460
    size_t num_chain;171,7527
    app_pc chain;172,7583
    app_pc dynsym;173,7649
    app_pc dynstr;174,7706
    size_t dynstr_size;175,7763
    size_t symentry_size;176,7811
    app_pc gnu_bitmask;178,7891
    ptr_uint_t gnu_shift;179,7915
    ptr_uint_t gnu_bitidx;180,7941
    size_t gnu_symbias;181,7968
    bool contiguous;184,8098
    uint num_segments;185,8119
    uint alloc_segments;186,8192
    module_segment_t *segments;segments187,8250
} os_module_data_t;188,8282
typedef void (*fp_t)fp_t190,8303
typedef struct _os_privmod_data_t 194,8458
    os_module_data_t os_data;195,8494
    ELF_DYNAMIC_ENTRY_TYPE *dyn;dyn196,8524
    ptr_int_t      load_delta;197,8557
    char          *soname;soname198,8621
    ELF_ADDR       pltgot;199,8648
    size_t         pltrelsz;200,8675
    ELF_WORD       pltrel;201,8704
    bool           textrel;202,8731
    app_pc         jmprel;203,8759
    ELF_REL_TYPE  *rel;rel204,8786
    size_t         relsz;205,8810
    size_t         relent;206,8836
    ELF_RELA_TYPE *rela;rela207,8863
    size_t         relasz;208,8888
    size_t         relaent;209,8915
    app_pc         verneed;210,8943
    int            verneednum;211,8971
    int            relcount;212,9002
    ELF_HALF      *versym;versym213,9031
    fp_t           init;215,9105
    fp_t           fini;216,9130
    fp_t          *init_array;init_array217,9155
    fp_t          *fini_array;fini_array218,9220
    size_t         init_arraysz;219,9285
    size_t         fini_arraysz;220,9318
    uint           tls_block_size;222,9370
    uint           tls_align;223,9440
    uint           tls_modid;224,9510
    uint           tls_offset;225,9585
    uint           tls_image_size;226,9652
    uint           tls_first_byte;227,9724
    app_pc         tls_image;228,9804
} os_privmod_data_t;229,9873
typedef struct elf_loader_t 307,11864
    const char *filename;filename308,11894
    file_t fd;309,11920
    ELF_HEADER_TYPE *ehdr;ehdr310,11935
    ELF_PROGRAM_HEADER_TYPE *phdrs;phdrs311,11998
    app_pc load_base;312,12073
    ptr_int_t load_delta;313,12130
    size_t image_size;314,12203
    void *file_map;file_map315,12275
    size_t file_size;316,12348
    byte buf[buf324,12783
} elf_loader_t;325,12861
typedef byte *(*map_fn_t)map_fn_t327,12878
typedef bool (*unmap_fn_t)unmap_fn_t329,13033
typedef bool (*prot_fn_t)prot_fn_t330,13085

unix/native_elf.c,923
enum { DL_RUNTIME_RESOLVE_IDX 73,2938
typedef void *(*fixup_fn_t)fixup_fn_t76,3034
app_pc app_dl_runtime_resolve;79,3170
fixup_fn_t app_dl_fixup;80,3201
enum { MAX_STUB_SIZE 82,3227
static byte plt_stub_template[plt_stub_template84,3257
static uint plt_stub_immed_offset;85,3303
static uint plt_stub_jmp_tgt_offset;86,3338
static size_t plt_stub_size;87,3375
static app_pc stub_heap;88,3404
static app_pc reachability_stub;90,3440
module_contains_pc(94,3493
find_dl_fixup(104,3821
initialize_plt_stub_template(137,4853
replace_module_resolver(184,6887
create_plt_stub(243,8975
destroy_plt_stub(266,9695
plt_reloc_entry_size(276,9929
is_special_stub(290,10191
update_plt_relocations(312,10797
module_change_hooks(347,12116
native_module_hook(393,13713
native_module_unhook(400,13875
find_plt_reloc(407,14057
dynamorio_dl_fixup(443,14931
native_module_init(470,15841
native_module_exit(488,16437

unix/nudgesig.c,64
create_nudge_signal_payload(51,2042
send_nudge_signal(77,2729

unix/os_exports.h,1980
#define _OS_EXPORTS_H_ 43,2007
# define _XOPEN_SOURCE 48,2092
# define getpid 53,2244
#define DYNAMORIO_LIBRARY_NAME 56,2304
#define DYNAMORIO_PRELOAD_NAME 57,2353
#define OS_ALLOC_GRANULARITY 60,2450
#define MAP_FILE_VIEW_ALIGNMENT 61,2492
# define SEG_TLS 72,2890
# define ASM_SEG 73,2914
# define LIB_SEG_TLS 74,2937
# define LIB_ASM_SEG 75,2987
# define SEG_TLS 77,3020
# define ASM_SEG 78,3044
# define LIB_SEG_TLS 79,3067
# define LIB_ASM_SEG 80,3117
#define unsetenv 128,4850
# define DECLARE_DATA_SECTION(141,5336
# define DECLARE_DATA_SECTION(145,5454
# define END_DATA_SECTION_DECLARATIONS(157,5989
# define END_DATA_SECTION_DECLARATIONS(162,6119
#define START_DATA_SECTION(169,6306
#define END_DATA_SECTION(170,6357
# define VAR_IN_SECTION(177,6637
# define VAR_IN_SECTION(179,6715
#define VSYSCALL_PAGE_MAPS_NAME 188,7052
#define NUM_NONRT 209,7618
#define OFFS_RT 210,7658
#define NUM_RT 211,7681
#define MAX_SIGNUM 213,7801
#define SIGARRAY_SIZE 216,7926
# define _NSIG_BPW 220,7996
# define _NSIG_BPW 222,8024
#define _NSIG_WORDS 225,8054
typedef struct _kernel_sigset_t 230,8213
    unsigned long sig[sig231,8247
} kernel_sigset_t;232,8283
#  define SIGCXT_TYPE 240,8490
#  define SIGCXT_TYPE 242,8538
# define SIGCXT_TYPE 245,8591
#define CONTEXT_HEAP_SIZE(247,8637
#define CONTEXT_HEAP_SIZE_OPAQUE 248,8680
# define SC_FIELD(253,8884
# define SC_FIELD(255,8928
# define SC_XIP 258,8975
# define SC_XAX 259,9005
# define SC_XCX 260,9035
# define SC_XDX 261,9065
# define SC_XBX 262,9095
# define SC_XSP 263,9125
# define SC_XBP 264,9155
# define SC_XSI 265,9185
# define SC_XDI 266,9215
#  define SC_XFLAGS 268,9259
#  define SC_XFLAGS 270,9303
# define SC_XIP 273,9354
# define SC_XAX 274,9384
# define SC_XCX 275,9414
# define SC_XDX 276,9444
# define SC_XBX 277,9474
# define SC_XSP 278,9504
# define SC_XBP 279,9534
# define SC_XSI 280,9564
# define SC_XDI 281,9594
# define SC_XFLAGS 282,9624

unix/os_private.h,1397
#define _OS_PRIVATE_H_ 40,1890
# define ASM_XAX 50,2164
# define ASM_XDX 51,2187
# define ASM_XBP 52,2210
# define ASM_XSP 53,2233
# define ASM_XAX 55,2262
# define ASM_XDX 56,2285
# define ASM_XBP 57,2308
# define ASM_XSP 58,2331
#define SUSPEND_SIGNAL 62,2416
#define PTHREAD_CLONE_FLAGS 66,2530
enum { MAX_SYSCALL_ARGS 71,2803
typedef struct _os_thread_data_t 74,2893
    app_pc stack_base;78,3098
    app_pc stack_top;79,3121
    app_pc stack_bottom_pc;82,3169
    mutex_t suspend_lock;92,3632
    int suspend_count;93,3658
    thread_record_t **fork_threads;fork_threads96,3740
    int fork_num_threads;97,3776
    volatile int suspended;107,4153
    volatile int wakeup;108,4181
    volatile int resumed;109,4206
    struct sigcontext *suspended_sigcxt;suspended_sigcxt110,4232
    bool terminate;113,4318
    volatile int terminated;119,4583
    volatile bool retakeover;121,4613
    int processing_signal;124,4716
    void *dr_fs_base;dr_fs_base130,4976
    void *dr_gs_base;dr_gs_base131,4998
    void *app_thread_areas;app_thread_areas132,5020
} os_thread_data_t;133,5096
enum { ARGC_PTRACE_SENTINEL 135,5117
typedef struct ptrace_stack_args_t 138,5223
    ptr_int_t argc;139,5260
    priv_mcontext_t mc;140,5327
    char home_dir[home_dir141,5391
} ptrace_stack_args_t;142,5474
typedef struct _kernel_sigaction_t kernel_sigaction_t;173,5964

unix/pcprofile.c,1173
#define USE_SYMTAB 58,2504
static bool valid_symtab;61,2560
typedef struct _pc_profile_entry_t 74,3083
    void *                  pc;75,3120
    app_pc                 tag;76,3170
    int                     id;78,3246
    ushort              offset;80,3315
    where_am_i_t    whereami:whereami81,3395
    bool               trace:trace82,3453
    bool             retired:retired83,3527
    int                counter;84,3598
    struct _pc_profile_entry_t *next;next85,3659
} pc_profile_entry_t;86,3725
#define HASH_BITS 88,3748
typedef struct _thread_pc_info_t 91,3814
    bool thread_shared;92,3849
    pc_profile_entry_t **htable;htable93,3873
    void *special_heap;special_heap94,3958
    file_t file;95,3982
    int where[where96,3999
} thread_pc_info_t;97,4026
#define ALARM_FREQUENCY 99,4047
pcprofile_thread_init(110,4530
pcprofile_thread_exit(155,6376
pcprofile_fork_init(184,7339
pcprof_dump_callstack(198,7816
pcprofile_alarm(230,8898
pcprofile_add_entry(297,11484
pcprofile_lookup(327,12252
pcprofile_fragment_deleted(344,12716
pcprofile_destroy_entry(369,13394
pcprofile_reset(392,14012
pcprofile_results(417,14878

unix/preload.c,272
#define START_DYNAMO 44,2080
#define VERBOSE_INIT_FINI 45,2142
#define VERBOSE 46,2214
#define INIT_BEFORE_LIBC 47,2232
#define pf(62,2505
#define pf(64,2559
#define MAX_COMMAND_LENGTH 82,3183
int nothing 85,3257
take_over(96,3733
_init(152,5381
_fini 211,6782

unix/signal.c,10773
#undef errno44,2007
typedef void (*handler_t)handler_t105,3786
    DEFAULT_TERMINATE,109,3869
    DEFAULT_TERMINATE_CORE,110,3892
    DEFAULT_IGNORE,111,3920
    DEFAULT_STOP,112,3940
    DEFAULT_CONTINUE,113,3958
int default_action[default_action116,3984
bool can_always_delay[can_always_delay192,6914
sig_is_alarm_signal(263,9683
#define SIGSTACK_SIZE 273,10048
#define SA_RESTORER 276,10135
void kernel_sigemptyset(284,10397
void kernel_sigfillset(290,10508
void kernel_sigaddset(296,10619
void kernel_sigdelset(306,10851
bool kernel_sigismember(316,11089
void copy_kernel_sigset_to_sigset(327,11417
void copy_sigset_to_kernel_sigset(346,11876
struct _kernel_sigaction_t 369,12761
    handler_t handler;370,12790
    unsigned long flags;371,12813
    void (*restorer)restorer372,12838
    kernel_sigset_t mask;373,12866
    unsigned long     uc_flags;380,13045
    struct ucontext  *uc_link;uc_link381,13077
    stack_t           uc_stack;382,13108
    struct sigcontext uc_mcontext;383,13140
    kernel_sigset_t   uc_sigmask;384,13175
} kernel_ucontext_t;385,13243
#define RETCODE_SIZE 391,13428
typedef struct sigframe 393,13452
    char *pretcode;pretcode394,13478
    int sig;395,13498
    struct sigcontext sc;396,13511
    struct _fpstate fpstate;400,13676
    unsigned long extramask[extramask401,13705
    char retcode[retcode402,13749
    int sig_noclobber;413,14354
} sigframe_plain_t;415,14424
typedef struct rt_sigframe 418,14495
    char *pretcode;pretcode419,14524
    siginfo_t info;422,14576
    kernel_ucontext_t uc;423,14596
    kernel_ucontext_t uc;425,14629
    siginfo_t info;426,14655
    int sig;429,14689
    siginfo_t *pinfo;pinfo430,14702
    void *puc;puc431,14724
    siginfo_t info;432,14739
    kernel_ucontext_t uc;433,14759
    char retcode[retcode441,15205
} sigframe_rt_t;444,15291
#define IS_RT_FOR_APP(448,15371
#define APP_HAS_SIGSTACK(458,15870
#define AVX_ALIGNMENT 464,16120
#define FPSTATE_ALIGNMENT 465,16145
#define XSTATE_ALIGNMENT 466,16174
typedef struct _sigpending_t 474,16489
    sigframe_rt_t rt_frame;475,16520
    struct _xstate __attribute__ ((aligned (AVX_ALIGNMENT))) xstate;480,16759
    byte *access_address;access_address483,16936
    bool use_sigcontext;486,17054
    struct _sigpending_t *next;next487,17079
} sigpending_t;488,17111
#define AVX_FRAME_EXTRA 496,17447
#define FPSTATE_FRAME_EXTRA 497,17520
#define XSTATE_FRAME_EXTRA 498,17598
#define AVX_DATA_SIZE 500,17682
#define FPSTATE_DATA_SIZE 501,17733
#define XSTATE_DATA_SIZE 502,17785
typedef struct _itimer_info_t 505,17941
    uint64 interval;507,18053
    uint64 value;508,18074
} itimer_info_t;509,18092
typedef struct _thread_itimer_info_t 511,18110
    itimer_info_t app;512,18149
    itimer_info_t app_saved;513,18172
    itimer_info_t dr;514,18201
    itimer_info_t actual;515,18223
    void (*cb)cb516,18249
    void (*cb_api)cb_api518,18328
} thread_itimer_info_t;519,18379
#define NUM_ITIMERS 524,18526
#define SKIP_ALARM_XL8_MAX 527,18623
typedef struct _sigfd_pipe_t sigfd_pipe_t;530,18675
#define EMULATE_SIGMASK(537,18967
typedef struct _thread_sig_info_t 540,19079
    kernel_sigaction_t **app_sigaction;app_sigaction545,19313
    bool fully_initialized;550,19500
    bool shared_app_sigaction;553,19593
    mutex_t *shared_lock;shared_lock554,19624
    int *shared_refcount;shared_refcount555,19650
    bool *we_intercept;we_intercept557,19729
    bool shared_itimer;564,20030
    recursive_lock_t *shared_itimer_lock;shared_itimer_lock568,20208
    int *shared_itimer_refcount;shared_itimer_refcount572,20374
    int *shared_itimer_underDR;shared_itimer_underDR573,20407
    thread_itimer_info_t (*itimer)itimer574,20485
    int restorer_valid[restorer_valid577,20611
    stack_t app_sigstack;580,20679
    sigpending_t *sigpending[sigpending581,20705
    bool accessing_sigpending;583,20831
    kernel_sigset_t app_sigblocked;584,20862
    kernel_sigset_t pre_syscall_app_sigblocked;586,20952
    kernel_sigset_t pre_syscall_app_sigprocmask;588,21054
    uint skip_alarm_xl8;592,21258
    sigfd_pipe_t *signalfd[signalfd594,21329
    bool in_sigsuspend;597,21432
    kernel_sigset_t app_sigblocked_save;598,21456
    volatile int num_unstarted_children;601,21571
    mutex_t child_lock;602,21612
    stack_t sigstack;605,21666
    void *sigheap;sigheap606,21688
    fragment_t *interrupted;interrupted607,21726
    cache_pc interrupted_pc;608,21798
    app_pc signal_restorer_retaddr;611,21906
} thread_sig_info_t;613,22001
typedef struct _clone_record_t 617,22143
    byte *dstack;dstack618,22176
    reg_t app_thread_xsp;619,22260
    app_pc continuation_pc;620,22333
    thread_id_t caller_id;621,22361
    int clone_sysnum;622,22388
    uint clone_flags;623,22410
    thread_sig_info_t info;624,22432
    thread_sig_info_t *parent_info;parent_info625,22460
    void *pcprofile_info;pcprofile_info626,22496
    reg_t for_dynamorio_clone[for_dynamorio_clone630,22619
} clone_record_t;631,22653
static thread_sig_info_t init_info;634,22740
static kernel_sigset_t init_sigmask;635,22776
static bool removed_sig_handler;638,22827
sigaction_syscall(713,24945
sigaltstack_syscall(727,25428
getitimer_syscall(733,25585
setitimer_syscall(739,25720
sigprocmask_syscall(745,25883
unblock_all_signals(752,26094
set_default_signal_action(761,26296
handler_free(779,26827
handler_alloc(785,26955
struct i387_fsave_struct 799,27352
    long        cwd;800,27379
    long        swd;801,27400
    long        twd;802,27421
    long        fip;803,27442
    long        fcs;804,27463
    long        foo;805,27484
    long        fos;806,27505
    long        st_space[st_space807,27526
    long        status;808,27602
struct i387_fxsave_struct 814,27765
    unsigned short      cwd;815,27793
    unsigned short      swd;816,27822
    unsigned short      twd;817,27851
    unsigned short      fop;818,27880
    long        rip;820,27920
    long        rdp;821,27941
    int         mxcsr;822,27962
    int         mxcsr_mask;823,27985
    int         st_space[st_space824,28013
    int         xmm_space[xmm_space825,28090
    int         padding[padding826,28169
    long        fip;828,28204
    long        fcs;829,28225
    long        foo;830,28246
    long        fos;831,28267
    long        mxcsr;832,28288
    long        reserved;833,28311
    long        st_space[st_space834,28337
    long        xmm_space[xmm_space835,28414
    long        padding[padding836,28492
union i387_union 840,28563
    struct i387_fsave_struct    fsave;841,28582
    struct i387_fxsave_struct   fxsave;842,28621
twd_fxsr_to_i387(850,28839
convert_fxsave_to_fpstate(893,30053
save_xmm(919,30810
save_fpstate(963,32404
os_itimers_thread_shared(1027,35147
signal_init(1062,36363
signal_exit(1085,37196
signal_thread_init(1097,37465
create_clone_record(1157,39991
set_clone_record_fields(1198,41848
get_clone_record(1219,42759
get_clone_record_app_xsp(1247,43926
get_clone_record_dstack(1254,44061
signal_info_init_sigaction(1262,44272
signal_info_exit_sigaction(1274,44894
signal_thread_inherit(1317,46761
share_siginfo_after_take_over(1553,57635
signal_fork_init(1578,58696
sigsegv_handler_is_ours(1637,61153
signal_thread_exit(1647,61383
set_our_handler_sigact(1768,66342
intercept_signal(1811,68114
handle_clone(1875,70488
handle_sigaction(1939,73233
handle_post_sigaction(2027,76711
handle_sigaltstack(2069,78504
set_blocked(2095,79406
check_signals_pending(2121,80364
handle_sigprocmask(2143,80980
handle_post_sigprocmask(2228,84871
handle_sigsuspend(2257,86010
static generic_table_t *sigfd_table;sigfd_table2304,87882
struct _sigfd_pipe_t 2306,87920
    file_t write_fd;2307,87943
    file_t read_fd;2308,87964
    uint refcount;2309,87984
    dcontext_t *dcontext;dcontext2310,88003
sigfd_pipe_free(2314,88045
signalfd_init(2340,88936
#   define SIGNALFD_HTABLE_INIT_SIZE 2342,88958
signalfd_exit(2358,89749
signalfd_thread_exit(2364,89842
handle_pre_signalfd(2379,90300
notify_signalfd(2473,94110
signal_handle_dup(2517,95941
signal_handle_close(2535,96555
dump_fpstate(2556,97257
dump_sigcontext(2640,100856
dump_sigset(2687,103133
safe_is_in_fcache(2707,103923
safe_is_in_coarse_stubs(2719,104284
is_on_alt_stack(2731,104657
sigcontext_to_mcontext(2744,105049
mcontext_to_sigcontext(2797,106923
translate_sigcontext(2846,108561
thread_set_self_context(2894,110450
thread_set_self_mcontext(2934,112270
sig_has_restorer(2943,112464
get_app_frame_size(2993,114594
get_sigcontext_from_rt_frame(3002,114801
get_sigcontext_from_app_frame(3008,114943
get_sigcontext_from_pending(3021,115315
get_sigstack_frame_ptr(3034,115839
convert_frame_to_nonrt(3112,119032
convert_frame_to_nonrt_partial(3137,120173
fixup_rtframe_pointers(3154,120860
copy_frame_to_stack(3241,124382
copy_frame_to_pending(3368,129684
send_signal_to_client(3408,131418
handle_client_action_from_cache(3484,135125
abort_on_fault(3544,137794
abort_on_DR_fault(3575,139037
unlink_fragment_for_signal(3587,139428
interrupted_inlined_syscall(3640,141907
sysnum_is_not_restartable(3687,143938
adjust_syscall_for_restart(3719,145396
record_pending_signal(3827,149895
is_sys_kill(4211,168295
compute_memory_target(4229,168930
check_for_modified_code(4350,173506
struct clone_and_swap_args 4429,176969
    byte *stack;stack4430,176998
    byte *tos;tos4431,177015
sig_should_swap_stack(4436,177092
sig_take_over(4464,178098
is_safe_read_ucxt(4473,178269
master_signal_handler_C(4486,178603
execute_handler_from_cache(4888,196607
execute_handler_from_dispatch(4999,201762
terminate_via_kill(5184,209574
execute_default_action(5203,210278
execute_default_from_cache(5400,220183
execute_default_from_dispatch(5407,220408
receive_pending_signal(5413,220563
handle_sigreturn(5478,223325
is_signal_restorer_code(5630,229865
#   define reverse(5644,230399
os_forge_exception(5674,231465
os_request_fatal_coredump(5759,235410
os_request_live_coredump(5775,236004
os_dump_core(5789,236310
at_known_exception(5836,237991
timeval_to_usec(5928,242216
usec_to_timeval(5934,242333
init_itimer(5941,242480
set_actual_itimer(5976,243959
itimer_new_settings(6000,244942
set_itimer_callback(6056,247578
get_itimer_frequency(6084,248669
handle_alarm(6102,249246
start_itimer(6198,253349
stop_itimer(6236,254788
handle_pre_setitimer(6273,256190
handle_post_setitimer(6300,257386
handle_post_getitimer(6325,258406
handle_pre_alarm(6362,259961
handle_post_alarm(6373,260241
handle_suspend_signal(6384,260542
dr_setjmp_sigmask(6486,264809
handle_nudge_signal(6502,265344

unix/stackdump.c,408
#define DEBUGGER 56,2238
#define QUIET_MODE 58,2307
#define TEMPORARY_FILENAME 59,2331
#define CORE_NAME 60,2385
#define VERBOSE 62,2411
#define BATCH_MODE 69,2650
#define DEBUGGER_COMMAND 71,2686
#define DEBUGGER_COMMAND 77,2901
wait_syscall(81,2961
execve_syscall(87,3074
fork_syscall(93,3209
#   define CLONE_CHILD_CLEARTID 117,4417
#   define CLONE_CHILD_SETTID 119,4563
stackdump(148,5787

unix/symtab.c,360
static uint bfd_symcount,51,2242
static uint bfd_symcount, nonnull_symcount;51,2242
static asymbol **bfd_syms bfd_syms52,2286
static bfd *infile infile53,2320
compare_symbols 56,2367
sort_symtab(78,3009
lookup_symbol_address(102,3709
prepare_symtab(138,4758
get_symtab(157,5273
symtab_init(191,6217
symtab_exit(229,7180
symtab_lookup_pc(235,7235

unix/symtab.h,28
#define _SYMTAB_H_ 43,1964

unix/loader.c,3232
#define SYSTEM_LIBRARY_PATH_VAR 60,2634
char *ld_library_path ld_library_path61,2684
static const char *system_lib_paths[system_lib_paths62,2714
#define NUM_SYSTEM_LIB_PATHS 83,3292
#define RPATH_ORIGIN 86,3383
static os_privmod_data_t *libdr_opd;libdr_opd88,3415
static bool privmod_initialized 89,3452
static size_t max_client_tls_size 90,3493
static bool printed_gdb_commands 93,3596
static char gdb_priv_cmds[gdb_priv_cmds95,3683
static size_t gdb_priv_cmds_sofar;96,3716
struct _IO_FILE  **privmod_stdout;privmod_stdout102,3881
struct _IO_FILE  **privmod_stderr;privmod_stderr103,3916
struct _IO_FILE  **privmod_stdin;privmod_stdin104,3951
#define LIBC_STDOUT_NAME 105,3985
#define LIBC_STDERR_NAME 106,4019
#define LIBC_STDIN_NAME 107,4053
os_loader_init_prologue(142,4878
os_loader_init_epilogue(167,5653
privload_add_gdb_cmd(189,6571
os_loader_exit(199,6885
os_loader_thread_init_prologue(213,7314
os_loader_thread_init_epilogue(235,8541
os_loader_thread_exit(241,8625
privload_add_areas(247,8700
privload_remove_areas(271,9559
privload_unmap_file(294,10434
privload_unload_imports(316,11180
dr_gdb_add_symbol_file(328,11575
privload_map_and_relocate(340,12024
privload_process_imports(411,14660
privload_call_entry(448,15936
privload_redirect_setup(500,17814
privload_os_finalize(506,17930
privload_init_search_paths(512,18008
privload_locate_and_load(519,18151
privload_load_private_library(528,18426
privload_load_finalized(545,18866
privload_search_rpath(551,18955
privload_locate(612,21565
get_private_library_address(701,24713
privload_call_modules_entry(750,26581
privload_call_lib_func(780,27654
get_private_library_bounds(796,28112
privload_relocate_mod(814,28565
privload_create_os_privmod_data(864,30796
privload_delete_os_privmod_data(883,31480
#define MAX_NUM_TLS_MOD 933,33842
typedef struct _tls_info_t 934,33869
    uint num_mods;935,33898
    int  offset;936,33917
    int  max_align;937,33934
    int  offs[offs938,33954
    privmod_t *mods[mods939,33986
} tls_info_t;940,34024
static tls_info_t tls_info;941,34038
static size_t tcb_size 967,35609
typedef struct _tcb_head_t 972,35766
    void *tcb;tcb973,35795
    void *dtv;dtv974,35810
    void *self;self975,35825
    int multithread;976,35841
    int gscope_flag;978,35873
    ptr_uint_t sysinfo;980,35901
    ptr_uint_t stack_guard;983,35970
    ptr_uint_t pointer_guard;984,35998
} tcb_head_t;985,36028
#define APP_LIBC_TLS_SIZE 993,36431
privload_mod_tls_init(997,36536
privload_tls_init(1040,38240
privload_tls_exit(1103,40852
typedef struct _tls_index_t 1116,41322
  unsigned long int ti_module;1117,41352
  unsigned long int ti_offset;1118,41383
} tls_index_t;1119,41414
redirect___tls_get_addr(1122,41444
redirect____tls_get_addr(1132,41777
typedef struct _redirect_import_t 1146,42270
    const char *name;name1147,42306
    app_pc func;1148,42328
} redirect_import_t;1149,42345
static const redirect_import_t redirect_imports[redirect_imports1151,42367
#define REDIRECT_IMPORTS_NUM 1163,42893
privload_redirect_sym(1166,42983
privload_setup_auxv(1188,43700
takeover_ptrace(1236,45383
reserve_brk(1283,47613
privload_early_inject(1297,48069

unix/os.c,18831
#define _LARGEFILE64_SOURCE50,2488
# define MAP_32BIT 56,2646
# define F_DUPFD_CLOEXEC 90,3490
# define SYSNUM_STAT 95,3597
# define SYSNUM_FSTAT 96,3627
# define SYSNUM_STAT 98,3665
# define SYSNUM_FSTAT 99,3697
typedef int (*init_fn_t)init_fn_t103,3789
char **our_environ;our_environ110,4127
#undef errno113,4233
# define _GNU_SOURCE 125,4567
# define __USE_GNU 127,4659
# undef ASSERT153,5306
# undef ASSERT_NOT_IMPLEMENTED154,5321
# undef ASSERT_NOT_TESTED155,5352
# undef ASSERT_CURIOSITY156,5378
# define ASSERT(157,5403
# define ASSERT_NOT_IMPLEMENTED(158,5436
# define ASSERT_NOT_TESTED(159,5485
# define ASSERT_CURIOSITY(160,5529
# undef LOG161,5572
# undef DOSTATS162,5584
# define LOG(163,5600
# define DOSTATS(164,5632
typedef struct _our_modify_ldt_t 172,5988
    unsigned int  entry_number;173,6023
    unsigned int  base_addr;174,6055
    unsigned int  limit;175,6084
    unsigned int  seg_32bit:seg_32bit176,6109
    unsigned int  contents:contents177,6140
    unsigned int  read_exec_only:read_exec_only178,6170
    unsigned int  limit_in_pages:limit_in_pages179,6206
    unsigned int  seg_not_present:seg_not_present180,6242
    unsigned int  useable:useable181,6279
} our_modify_ldt_t;182,6308
# define FS_TLS 195,6671
# define GS_TLS 196,6723
#define GDT_NUM_TLS_SLOTS 205,6988
#define GDT_ENTRY_TLS_MIN_32 206,7016
#define GDT_ENTRY_TLS_MIN_64 207,7047
static uint gdt_entry_tls_min 212,7251
static bool return_stolen_lib_tls_gdt;221,7657
#define MAX_THREADS 231,8058
typedef struct _tls_slot_t 232,8082
    thread_id_t tid;233,8111
    dcontext_t *dcontext;dcontext234,8132
} tls_slot_t;235,8158
static tls_slot_t *tls_table;tls_table237,8207
#define MAX_NUM_CLIENT_TLS 242,8376
static bool client_tls_allocated[client_tls_allocated247,8531
static char dynamorio_library_path[dynamorio_library_path265,9332
static char dynamorio_alt_arch_path[dynamorio_alt_arch_path267,9425
#define DR_LIBDIR_X86 269,9525
#define DR_LIBDIR_X64 270,9569
static app_pc dynamo_dll_start 273,9658
static app_pc dynamo_dll_end 274,9697
static app_pc executable_start 276,9752
static app_pc executable_end 277,9791
static char executable_path[executable_path280,9867
static char *executable_basename;executable_basename281,9910
static bool kernel_thread_groups;284,10033
bool kernel_futex_support 289,10168
static bool kernel_64bit;291,10204
pid_t pid_cached;293,10231
static bool fault_handling_initialized;295,10250
uint kilo_hertz;298,10312
static mutex_t memory_info_buf_lock 302,10436
static mutex_t maps_iter_buf_lock 304,10572
DR_API file_t our_stdout 307,10721
DR_API file_t our_stderr 308,10763
DR_API file_t our_stdin 309,10805
static struct rlimit app_rlimit_nofile;312,10878
static generic_table_t *fd_table;fd_table318,11116
#define INIT_HTABLE_SIZE_FD 319,11150
IF_DEBUG_ELSE(328,11546
typedef struct _allmem_info_t 330,11606
    uint prot;331,11638
    dr_mem_type_t type;332,11653
    bool shareable;333,11677
} allmem_info_t;334,11697
typedef struct _maps_iter_t 363,12716
    app_pc vm_start;364,12746
    app_pc vm_end;365,12767
    uint prot;366,12786
    size_t offset;367,12801
    uint64 inode;368,12860
    const char *comment;comment373,13296
    bool may_alloc;379,13616
    file_t maps;380,13636
    char *newline;newline381,13653
    int bufread;382,13672
    int bufwant;383,13689
    char *buf;buf384,13706
    char *comment_buffer;comment_buffer385,13721
} maps_iter_t;386,13747
typedef struct _dir_iterator_t 395,14084
    file_t fd;396,14117
    int off;397,14132
    int end;398,14145
    const char *name;name399,14158
    char buf[buf400,14224
} dir_iterator_t;401,14299
app_pc vsyscall_page_start 417,14993
app_pc vsyscall_syscall_end_pc 419,15076
app_pc vsyscall_sysenter_return_pc 421,15177
#define VSYSCALL_PAGE_START_HARDCODED 422,15220
# define VSYSCALL_REGION_MAPS_NAME 428,15467
static int init_errno;445,16316
__errno_location(448,16385
static int libc_errno_tls_offs;479,17658
our_libc_errno_loc(481,17703
typedef int *(*errno_loc_t)errno_loc_t505,18553
get_libc_errno_location(508,18608
get_libc_errno(566,21025
our_unsetenv(600,22160
getenv(641,23101
dynamorio_set_envp(670,24111
our_init(677,24202
init_array[init_array717,25563
_init(724,25670
kernel_is_64bit(731,25768
get_uname(737,25832
os_init(757,26595
os_file_init(823,28989
get_application_pid_helper(864,31048
get_application_pid(877,31348
set_executable_path(886,31541
get_application_name_helper(894,31771
get_application_name(929,33128
get_application_short_name(941,33628
#define PROC_CPUINFO 947,33784
#define CPUMHZ_LINE_LENGTH 948,33821
#define CPUMHZ_LINE_FORMAT 949,33852
get_timer_frequency_cpuinfo(954,34129
get_timer_frequency(993,35373
#define UTC_TO_EPOCH_SECONDS 1006,35704
query_time_seconds(1010,35776
query_time_millis(1017,35922
find_stack_bottom(1037,36609
os_slow_exit(1062,37370
os_fast_exit(1081,37799
os_terminate_with_code(1087,37846
os_terminate(1104,38512
os_timeout(1110,38631
# define ARCH_SET_GS 1126,39115
# define ARCH_SET_FS 1127,39143
# define ARCH_GET_FS 1128,39171
# define ARCH_GET_GS 1129,39199
    TLS_TYPE_NONE,1134,39329
    TLS_TYPE_LDT,1135,39348
    TLS_TYPE_GDT,1136,39366
    TLS_TYPE_ARCH_PRCTL,1138,39395
} tls_type_t;1140,39427
static tls_type_t tls_type;1142,39442
static bool tls_using_msr;1144,39481
static int tls_gdt_index 1151,39623
static int lib_tls_gdt_index 1153,39701
# define GDT_NO_SIZE_LIMIT 1154,39736
#  define GDT_32BIT 1156,39786
#  define GDT_64BIT 1157,39831
modify_ldt_syscall(1161,39897
    unsigned int limit1500:limit15001168,40134
    unsigned int base1500:base15001169,40165
    unsigned int base2316:base23161170,40195
    unsigned int type:type1171,40224
    unsigned int not_system:not_system1172,40249
    unsigned int privilege_level:privilege_level1173,40280
    unsigned int seg_present:seg_present1174,40316
    unsigned int limit1916:limit19161175,40348
    unsigned int custom:custom1176,40378
    unsigned int zero:zero1177,40405
    unsigned int seg_32bit:seg_32bit1178,40430
    unsigned int limit_in_pages:limit_in_pages1179,40460
    unsigned int base3124:base31241180,40495
} raw_ldt_entry_t;1181,40524
    LDT_TYPE_CODE 1184,40551
    LDT_TYPE_CODE      = 0x8,x81184,40551
    LDT_TYPE_DOWN 1185,40581
    LDT_TYPE_DOWN      = 0x4,x41185,40581
    LDT_TYPE_WRITE 1186,40611
    LDT_TYPE_WRITE     = 0x2,x21186,40611
    LDT_TYPE_ACCESSED 1187,40641
    LDT_TYPE_ACCESSED  = 0x1,x11187,40641
#define LDT_BASE(1190,40675
print_raw_ldt(1201,41025
print_all_ldt(1230,42128
#define LDT_ENTRIES_TO_CHECK 1255,43194
find_unused_ldt_index(1259,43282
initialize_ldt_struct(1287,44196
clear_ldt_struct(1305,44872
create_ldt_entry(1315,45131
clear_ldt_entry(1325,45383
#define USER_PRIVILEGE 1339,45736
#define LDT_NOT_GDT 1340,45762
#define GDT_NOT_LDT 1341,45788
#define SELECTOR_IS_LDT 1342,45814
#define LDT_SELECTOR(1343,45843
#define GDT_SELECTOR(1344,45924
#define SELECTOR_INDEX(1345,46005
#define WRITE_DR_SEG(1347,46047
#define WRITE_LIB_SEG(1352,46261
read_selector(1358,46496
typedef struct _os_seg_info_t 1379,47130
    int   tls_type;1380,47162
    void *dr_fs_base;dr_fs_base1381,47182
    void *dr_gs_base;dr_gs_base1382,47204
    our_modify_ldt_t app_thread_areas[app_thread_areas1383,47226
} os_seg_info_t;1384,47284
typedef struct _os_local_state_t 1387,47326
    local_state_extended_t state;1390,47485
    struct _os_local_state_t *self;self1392,47556
    tls_type_t tls_type;1394,47661
    int ldt_index;1397,47799
    thread_id_t tid;1399,47878
    ushort app_gs;1401,47961
    ushort app_fs;1402,48021
    void  *app_gs_base;app_gs_base1403,48081
    void  *app_fs_base;app_fs_base1404,48145
        os_seg_info_t os_seg_info;1410,48437
        void *client_tls[client_tls1411,48472
} os_local_state_t;1413,48525
#define TLS_LOCAL_STATE_OFFSET 1415,48546
#define TLS_OS_LOCAL_STATE 1418,48644
#define TLS_SELF_OFFSET 1420,48681
#define TLS_THREAD_ID_OFFSET 1421,48768
#define TLS_DCONTEXT_OFFSET 1422,48854
#define TLS_APP_GS_BASE_OFFSET 1425,49016
#define TLS_APP_FS_BASE_OFFSET 1426,49089
#define TLS_APP_GS_OFFSET 1427,49162
#define TLS_APP_FS_OFFSET 1428,49225
#define WRITE_TLS_SLOT_IMM(1440,49888
#define READ_TLS_SLOT_IMM(1445,50172
#define WRITE_TLS_SLOT(1451,50482
#define READ_TLS_SLOT(1459,50951
is_segment_register_initialized(1468,51440
os_tls_offset(1498,52576
os_get_dr_seg_base(1510,52920
get_os_tls(1529,53411
get_os_tls_from_dc(1541,53719
os_get_app_seg_base(1552,54005
os_get_app_seg_base_offset(1576,54760
os_get_app_seg_offset(1589,55067
get_tls(1602,55358
set_tls(1610,55458
get_segment_base(1623,55748
get_app_segment_base(1689,58299
get_local_state_extended(1701,58635
get_local_state(1710,58837
os_handle_mov_seg(1724,59181
choose_gdt_slots(1785,61295
os_tls_app_seg_init(1891,65288
os_tls_init(1951,67510
os_tls_exit(2161,77352
os_tls_get_gdt_index(2213,79233
os_tls_pre_init(2224,79520
os_tls_calloc(2245,80219
os_tls_cfree(2279,81182
os_thread_init(2296,81600
os_thread_exit(2341,83310
os_fork_pre(2374,84402
os_fork_post(2420,86610
os_fork_init(2439,87383
os_should_swap_state(2486,89069
os_using_app_state(2494,89312
os_swap_context(2514,90016
os_thread_under_dynamo(2521,90198
os_thread_not_under_dynamo(2528,90342
get_process_group_id(2535,90497
get_process_id(2542,90665
get_parent_id(2549,90825
get_sys_thread_id(2555,90909
get_thread_id(2565,91100
get_tls_thread_id(2594,92084
get_thread_private_dcontext(2610,92726
set_thread_private_dcontext(2733,98216
replace_thread_id(2779,99502
permstr_to_memprot(2808,100361
memprot_to_osprot(2824,100761
osprot_to_memprot(2838,101129
osprot_replace_memprot(2853,101534
mprotect_syscall(2864,101857
mmap_syscall_succeeded(2870,101979
mmap_syscall(2892,102787
munmap_syscall(2899,103045
os_raw_mem_free(2907,103234
os_raw_mem_alloc(2926,103713
dr_raw_mremap(2965,105042
dr_raw_brk(2990,105986
os_heap_free(3010,106646
os_heap_reserve(3031,107340
find_free_memory_in_region(3098,110210
os_heap_reserve_in_region(3127,111159
os_heap_commit(3169,112727
os_heap_decommit(3194,113525
os_heap_systemwide_overcommit(3215,114219
os_heap_get_commit_limit(3222,114352
futex_wait(3234,114754
futex_wake(3252,115317
futex_wake_all(3268,115745
thread_yield(3286,116161
thread_signal(3292,116236
thread_sleep(3304,116686
thread_suspend(3336,118031
thread_resume(3384,119881
thread_terminate(3427,121355
is_thread_terminated(3440,121776
os_wait_thread_terminated(3448,121961
thread_get_mcontext(3465,122485
thread_set_mcontext(3481,122979
is_thread_currently_native(3497,123476
client_thread_run(3504,123644
dr_create_client_thread(3542,125212
get_num_processors(3607,128269
load_shared_library(3648,129805
lookup_library_routine(3670,130598
unload_shared_library(3681,130919
shared_library_error(3694,131230
shared_library_bounds(3714,131842
llseek_syscall(3749,133159
os_file_exists(3761,133533
os_files_same(3776,134013
os_get_file_size(3793,134522
os_get_file_size_by_handle(3808,134949
os_create_dir(3826,135483
open_syscall(3836,135883
close_syscall(3843,136032
dup_syscall(3849,136111
read_syscall(3855,136190
write_syscall(3861,136310
fcntl_syscall(3868,136475
#    define O_LARGEFILE 3878,136713
#    define O_LARGEFILE 3880,136750
os_open(3890,137050
os_open_directory(3920,138267
os_close(3927,138405
fd_priv_dup(3937,138558
fd_mark_close_on_exec(3963,139668
fd_table_add(3974,139967
fd_is_dr_owned(4002,141052
fd_is_in_private_range(4013,141343
os_open_protected(4021,141526
os_close_protected(4048,142280
os_write(4062,142699
os_read(4069,142844
os_flush(4075,142937
os_seek(4082,143116
os_tell(4094,143339
os_delete_file(4108,143517
os_rename_file(4114,143618
os_delete_mapped_file(4137,144460
os_map_file(4143,144553
#   define MAX_MMAP_LOOP_ITERS 4151,144798
os_unmap_file(4223,147567
os_get_disk_free_space(4233,147800
exit_process_syscall(4259,148909
exit_thread_syscall(4275,149545
os_syslog(4285,149779
all_memory_areas_initialized(4303,150431
print_all_memory_areas(4312,150688
safe_read_via_query(4336,151520
safe_read_ex(4359,152283
safe_read(4376,152972
safe_write_ex(4382,153090
is_readable_without_exception_internal(4437,155085
is_readable_without_exception(4457,155763
is_readable_without_exception_query_os(4470,156271
is_user_address(4476,156410
os_set_protection(4489,156728
set_protection(4531,158329
change_protection(4552,159228
make_writable(4560,159449
bool make_copy_on_writable(4613,161729
make_unwritable(4621,161912
ignorable_system_call(4684,164634
        unsigned long addr;4762,166329
        unsigned long len;4763,166357
        unsigned long prot;4764,166384
        unsigned long flags;4765,166412
        unsigned long fd;4766,166441
        unsigned long offset;4767,166467
} mmap_arg_struct_t;4768,166497
const reg_id_t syscall_regparms[syscall_regparms4772,166601
sys_param_addr(4793,166983
sys_param(4837,168738
#define SET_RETURN_VAL(4843,168898
dr_syscall_get_param(4848,169000
dr_syscall_set_param(4858,169310
dr_syscall_get_result(4869,169707
dr_syscall_set_result(4879,170002
dr_syscall_set_sysnum(4890,170364
dr_syscall_invoke_another(4902,170762
is_clone_thread_syscall_helper(4919,171466
is_clone_thread_syscall(4927,171641
was_clone_thread_syscall(4934,171823
is_sigreturn_syscall_helper(4942,172084
is_sigreturn_syscall(4948,172214
was_sigreturn_syscall(4955,172366
handle_self_signal(4962,172550
    ENV_PROP_RUNUNDER,4996,174002
    ENV_PROP_OPTIONS,4997,174025
static const char * const env_to_propagate[env_to_propagate4999,174050
#define NUM_ENV_TO_PROPAGATE 5006,174248
handle_execve(5009,174345
handle_execve_post(5295,186751
cleanup_after_vfork_execve(5335,188398
handle_close_pre(5358,189133
#define SYSCALL_PC(5433,192460
handle_exit(5441,192765
os_set_app_thread_area(5528,196834
os_get_app_thread_area(5585,199277
os_switch_lib_tls(5610,200448
os_switch_seg_to_context(5616,200586
pre_system_call(5716,204476
allmem_info_free(6480,235769
allmem_info_dup(6486,235900
allmem_should_merge(6497,236160
allmem_info_merge(6511,236622
sync_all_memory_areas(6525,237003
add_all_memory_area(6539,237406
update_all_memory_areas(6556,238042
remove_from_all_memory_areas(6645,242164
mmap_check_for_module_overlap(6659,242659
process_mmap(6720,246262
os_set_dr_seg(6892,255049
handle_post_arch_prctl(6906,255448
handle_app_mremap(6968,257862
handle_app_brk(7017,259991
post_system_call(7060,261730
#define PROC_SELF_MAPS 7559,282010
#define MAPS_LINE_LENGTH 7562,282110
#define MAPS_LINE_FORMAT4 7564,282190
#define MAPS_LINE_MAX4 7565,282281
#define MAPS_LINE_FORMAT8 7567,282392
#define MAPS_LINE_MAX8 7568,282486
#define MAPS_LINE_MAX 7570,282558
#define BUFSIZE 7579,282932
static char buf_scratch[buf_scratch7580,282969
static char comment_buf_scratch[comment_buf_scratch7581,283003
static char buf_iter[buf_iter7588,283399
static char comment_buf_iter[comment_buf_iter7589,283430
maps_iterator_start(7593,283510
maps_iterator_stop(7633,284813
maps_iterator_next(7647,285200
typedef struct _dl_iterate_data_t 7767,290339
    app_pc target_addr;7768,290375
    const char *target_path;target_path7769,290399
    char *path_out;path_out7770,290428
    size_t path_size;7771,290448
    app_pc mod_start;7772,290470
    app_pc mod_end;7773,290492
} dl_iterate_data_t;7774,290512
dl_iterate_get_path_cb(7777,290545
get_library_bounds(7853,294533
get_dynamo_library_bounds(8022,302021
get_dynamorio_library_path(8089,304760
read_proc_self_exe(8103,305141
get_application_base(8131,306149
get_application_end(8157,306945
get_image_entry(8165,307074
mem_stats_snapshot(8186,307684
is_in_dynamo_dll(8193,307743
get_dynamorio_dll_start(8208,308135
get_dynamorio_dll_end(8217,308311
get_dynamorio_dll_preferred_base(8226,308479
# define VSYSCALL_PAGE_SO_NAME 8238,308833
# define USER_MAX 8243,309073
dl_iterate_get_areas_cb(8247,309192
probe_address(8323,312476
probe_add_region(8383,314456
find_vm_areas_via_probe(8406,315280
find_executable_vm_areas(8504,319153
find_dynamo_library_vm_areas(8697,328462
get_stack_bounds(8718,329206
at_initial_stack_bottom(8755,330831
query_memory_ex(8780,331790
get_memory_info(8891,336747
query_memory_ex_from_os(8917,337568
get_memory_info_from_os(9043,342591
all_memory_areas_lock(9062,343205
all_memory_areas_unlock(9083,343954
mutex_wait_contended_lock(9104,344622
mutex_notify_released_lock(9173,347276
rwlock_wait_contended_writer(9191,347927
rwlock_notify_writer(9197,348013
rwlock_wait_contended_reader(9203,348100
rwlock_notify_readers(9209,348186
typedef struct linux_event_t 9217,348408
    volatile int signaled;9223,348686
    mutex_t lock;9224,348713
} linux_event_t;9225,348731
create_event(9232,348934
destroy_event(9241,349183
signal_event(9248,349313
reset_event(9258,349544
wait_for_event(9269,349864
struct linux_dirent 9313,351430
    long           d_ino;9314,351452
    off_t          d_off;9315,351504
    unsigned short d_reclen;9316,351571
    char           d_name[d_name9317,351638
    char           d_pad;9319,351772
    char           d_type;9320,351823
#define CURRENT_DIRENT(9324,351902
os_dir_iterator_start(9328,352003
os_dir_iterator_next(9336,352132
typedef struct _takeover_record_t 9371,353426
    thread_id_t tid;9372,353462
    event_t event;9373,353483
} takeover_record_t;9374,353502
static takeover_record_t *thread_takeover_records;thread_takeover_records9384,353929
static uint num_thread_takeover_records;9385,353980
static dcontext_t *takeover_dcontext;takeover_dcontext9391,354210
os_list_threads(9398,354459
os_take_over_all_unknown_threads(9457,356799
os_thread_take_over(9541,359902
os_thread_take_over_suspended_native(9588,361454
os_random_seed(9608,362076
rct_analyze_module_at_violation(9626,362581
rct_add_rip_rel_addr(9674,364193
get_drmarker_hotp_policy_status_table(9684,364407
set_drmarker_hotp_policy_status_table(9691,364509
hook_text(9697,364611
unhook_text(9708,364969
insert_jmp_at_tramp_entry(9714,365066
aslr_is_possible_attack(9721,365206
aslr_possible_preferred_address(9728,365313
take_over_primary_thread(9735,365430
os_current_user_directory(9741,365496
os_validate_user_owned(9768,366573
os_check_option_compatibility(9776,366759
os_file_has_elf_so_header(9783,366875
uint64_divmod(9804,367428
        uint64 v64;9808,367557
            uint32 lo;9810,367594
            uint32 hi;9811,367617
__udivdi3(9849,368804
__umoddi3(9857,368970
test_uint64_divmod(9870,369261
unit_test_os(9910,370489

win32/drwinapi/advapi32_redir.c,690
#define MAX_REG_KEY_NAME_LEN 45,1933
static strhash_table_t *advapi32_table;advapi32_table48,2067
static const redirect_import_t redirect_advapi32[redirect_advapi3250,2108
#define REDIRECT_ADVAPI32_NUM 57,2525
advapi32_redir_init(60,2618
advapi32_redir_exit(78,3330
advapi32_redir_onload(84,3425
advapi32_redir_lookup(90,3497
redirect_RegCloseKey(102,3754
redirect_RegOpenKeyExA(113,3901
open_key_common(136,4555
key_is_special(149,4961
special_to_handle(158,5237
key_close_special(201,7010
redirect_RegOpenKeyExW(209,7160
redirect_RegQueryValueExA(251,8527
redirect_RegQueryValueExW(298,10320
unit_test_drwinapi_advapi32(371,12754
#   define REG_KEY_DATA_SZ 377,12925

win32/drwinapi/advapi32_redir.h,102
#define _ADVAPI32_REDIR_H_ 39,1837
# define __out_data_source(61,2200
typedef LONG LSTATUS;66,2302

win32/drwinapi/drwinapi.c,293
drwinapi_init(47,2032
drwinapi_exit(56,2165
drwinapi_onload(65,2298
drwinapi_redirect_imports(76,2612
ntstatus_to_last_error(118,4574
redirect_ignore_arg0(168,7563
redirect_ignore_arg4(174,7624
redirect_ignore_arg8(180,7691
redirect_ignore_arg12(186,7770
unit_test_drwinapi(201,8186

win32/drwinapi/drwinapi.h,30
#define _DRWINAPI_H_ 39,1891

win32/drwinapi/drwinapi_private.h,170
#define _DRWINAPI_PRIVATE_H_ 36,1796
typedef struct _redirect_import_t 45,2162
    const char *name;name46,2198
    app_pc func;47,2220
} redirect_import_t;48,2237

win32/drwinapi/kernel32_file.c,2711
static HANDLE base_named_obj_dir;44,2059
static HANDLE base_named_pipe_dir;45,2093
get_base_named_obj_dir_name(49,2214
kernel32_redir_init_file(97,4239
kernel32_redir_exit_file(114,4852
kernel32_redir_onload_file(121,4983
init_object_attr_for_files(128,5187
largeint_to_filetime(145,5958
create_dir_common(158,6261
redirect_CreateDirectoryA(195,7409
redirect_CreateDirectoryW(212,7870
redirect_RemoveDirectoryA(237,8576
redirect_RemoveDirectoryW(249,8821
redirect_GetCurrentDirectoryA(261,9068
redirect_GetCurrentDirectoryW(287,9857
redirect_SetCurrentDirectoryA(321,11060
redirect_SetCurrentDirectoryW(335,11369
file_create_disp_winapi_to_nt(357,12003
file_options_to_nt(371,12415
file_access_to_nt(409,13769
create_file_common(425,14230
redirect_CreateFileA(520,17798
redirect_CreateFileW(543,18563
redirect_DeleteFileA(575,19601
redirect_DeleteFileW(597,20114
redirect_ReadFile(625,20843
redirect_WriteFile(684,22794
redirect_GetFileAttributesA(749,24958
redirect_GetFileAttributesW(770,25473
redirect_GetFileInformationByHandle(805,26439
redirect_GetFileSize(862,28572
redirect_GetFileType(881,29079
redirect_CreateFileMappingA(932,30385
redirect_CreateFileMappingW(958,31197
redirect_MapViewOfFile(1021,33527
redirect_MapViewOfFileEx(1036,33955
redirect_UnmapViewOfFile(1083,35619
redirect_FlushViewOfFile(1097,35914
redirect_CreatePipe(1126,36689
redirect_DeviceIoControl(1213,40170
redirect_GetDiskFreeSpaceA(1280,42514
open_dir_from_path(1309,43481
redirect_GetDiskFreeSpaceW(1362,45150
redirect_GetDriveTypeA(1400,46269
redirect_GetDriveTypeW(1421,46766
redirect_CloseHandle(1470,48043
redirect_DuplicateHandle(1479,48153
redirect_GetStdHandle(1500,48924
redirect_FileTimeToLocalFileTime(1519,49366
redirect_LocalFileTimeToFileTime(1546,50233
redirect_FileTimeToSystemTime(1569,50905
redirect_SystemTimeToFileTime(1581,51194
redirect_GetSystemTimeAsFileTime(1595,51512
redirect_GetFileTime(1606,51724
redirect_SetFileTime(1635,52507
#define FIND_FILE_INFO_SZ 1674,53829
redirect_FindClose(1679,53937
find_next_file_common(1691,54271
find_first_file_common(1745,56445
find_nt_to_win32A(1815,59345
find_nt_to_win32W(1851,61003
redirect_FindFirstFileA(1882,62354
redirect_FindFirstFileW(1907,63187
redirect_FindNextFileA(1938,64191
redirect_FindNextFileW(1952,64647
redirect_FlushFileBuffers(1967,65128
test_directories(1991,65582
test_files(2027,66793
test_file_mapping(2145,71306
test_pipe(2206,73660
test_DeviceIoControl(2238,74623
within_one(2283,76168
test_file_times(2290,76285
test_find_file(2360,79044
test_file_paths(2456,83343
test_drive(2511,85818
test_handles(2561,88309
unit_test_drwinapi_kernel32_file(2574,88601

win32/drwinapi/kernel32_lib.c,279
kernel32_redir_onload_lib(50,2367
redirect_GetModuleHandleA(69,3316
redirect_GetModuleHandleW(88,3848
redirect_GetProcAddress(111,4564
redirect_LoadLibraryA(135,5485
redirect_LoadLibraryW(156,6342
redirect_GetModuleFileNameA(174,6908
redirect_GetModuleFileNameW(200,7698

win32/drwinapi/kernel32_mem.c,1278
static ptr_uint_t magic_val;46,2107
kernel32_redir_init_mem(55,2381
kernel32_redir_exit_mem(61,2482
redirect_DecodePointer(68,2563
redirect_EncodePointer 77,2684
redirect_GetProcessHeap(86,2807
__bcount(98,3133
redirect_HeapCompact(112,3343
redirect_HeapCreate(127,3727
redirect_HeapDestroy(140,4084
redirect_HeapFree(149,4194
__bcount(158,4358
redirect_HeapSetInformation 173,4612
redirect_HeapSize(196,5332
redirect_HeapValidate(207,5508
redirect_HeapWalk(218,5704
typedef struct _local_header_t 247,6818
    ushort lock_count;248,6851
    ushort flags;249,6874
    struct _local_header_t *alloc;alloc250,6892
} local_header_t;251,6927
local_header_from_handle(254,6977
redirect_LocalAlloc(261,7079
redirect_LocalFree(299,8214
redirect_LocalReAlloc(318,8752
redirect_LocalLock(393,11755
redirect_LocalHandle(413,12162
redirect_LocalUnlock(428,12463
redirect_LocalSize(452,12974
redirect_LocalFlags(475,13572
redirect_IsBadReadPtr(500,14254
redirect_ReadProcessMemory(512,14461
__bcount(532,15093
redirect_VirtualFree(568,16268
redirect_VirtualProtect(593,16817
redirect_VirtualQuery(626,18003
redirect_VirtualQueryEx(637,18275
test_heap(658,18808
test_local(683,19560
test_syscalls(755,22107
unit_test_drwinapi_kernel32_mem(782,23034

win32/drwinapi/kernel32_misc.c,104
redirect_GetLastError(40,1859
redirect_SetLastError(49,1943
unit_test_drwinapi_kernel32_misc(67,2252

win32/drwinapi/kernel32_proc.c,570
typedef struct _fls_cb_t 45,2117
    PFLS_CALLBACK_FUNCTION cb;46,2144
    struct _fls_cb_t *next;next47,2175
} fls_cb_t;48,2203
static fls_cb_t *fls_cb_list;fls_cb_list50,2216
kernel32_redir_init_proc(55,2415
kernel32_redir_exit_proc(65,2688
kernel32_redir_onload_proc(78,3034
redirect_GetCurrentProcess(90,3321
redirect_GetCurrentProcessId(99,3413
redirect_ExitProcess(109,3530
redirect_GetCurrentThread(128,3950
redirect_GetCurrentThreadId(137,4040
kernel32_redir_fls_cb(149,4219
redirect_FlsAlloc(198,6159
unit_test_drwinapi_kernel32_proc(238,7601

win32/drwinapi/kernel32_redir.c,308
static strhash_table_t *kernel32_table;kernel32_table46,2052
static const redirect_import_t redirect_kernel32[redirect_kernel3248,2093
#define REDIRECT_KERNEL32_NUM 171,10228
kernel32_redir_init(174,10321
kernel32_redir_exit(196,11129
kernel32_redir_onload(206,11320
kernel32_redir_lookup(227,11912

win32/drwinapi/kernel32_redir.h,3425
#define _KERNEL32_REDIR_H_ 40,1922
#define _WIN32_WINNT 46,2035
#define WIN32_LEAN_AND_MEAN 47,2099
#undef _WIN32_WINNT49,2150
#undef WIN32_LEAN_AND_MEAN50,2170
# define __drv_interlocked 60,2391
    HeapEnableTerminationOnCorruption 65,2482
typedef struct _CONSOLE_READCONSOLE_CONTROL 69,2544
    ULONG nLength;70,2590
    ULONG nInitialChars;71,2609
    ULONG dwCtrlWakeupMask;72,2634
    ULONG dwControlKeyState;73,2662
} CONSOLE_READCONSOLE_CONTROL, *PCONSOLE_READCONSOLE_CONTROL;PCONSOLE_READCONSOLE_CONTROL74,2691
typedef enum _FILE_INFO_BY_HANDLE_CLASS 77,2770
    FileBasicInfo,78,2812
    FileStandardInfo,79,2831
    FileNameInfo,80,2853
    FileRenameInfo,81,2871
    FileDispositionInfo,82,2891
    FileAllocationInfo,83,2916
    FileEndOfFileInfo,84,2940
    FileStreamInfo,85,2963
    FileCompressionInfo,86,2983
    FileAttributeTagInfo,87,3008
    FileIdBothDirectoryInfo,88,3034
    FileIdBothDirectoryRestartInfo,89,3063
    FileIoPriorityHintInfo,90,3099
    FileRemoteProtocolInfo,91,3127
    MaximumFileInfoByHandleClass92,3155
} FILE_INFO_BY_HANDLE_CLASS, *PFILE_INFO_BY_HANDLE_CLASS;PFILE_INFO_BY_HANDLE_CLASS93,3188
#define UNWIND_HISTORY_TABLE_SIZE 97,3310
typedef struct _UNWIND_HISTORY_TABLE_ENTRY 99,3348
    DWORD64 ImageBase;100,3393
    PRUNTIME_FUNCTION FunctionEntry;101,3416
} UNWIND_HISTORY_TABLE_ENTRY, *PUNWIND_HISTORY_TABLE_ENTRY;PUNWIND_HISTORY_TABLE_ENTRY102,3453
typedef struct _UNWIND_HISTORY_TABLE 104,3514
    DWORD Count;105,3553
    BYTE  LocalHint;106,3570
    BYTE  GlobalHint;107,3591
    BYTE  Search;108,3613
    BYTE  Once;109,3631
    DWORD64 LowAddress;110,3647
    DWORD64 HighAddress;111,3671
    UNWIND_HISTORY_TABLE_ENTRY Entry[Entry112,3696
} UNWIND_HISTORY_TABLE, *PUNWIND_HISTORY_TABLE;PUNWIND_HISTORY_TABLE113,3761
typedef struct _KNONVOLATILE_CONTEXT_POINTERS 115,3810
        PM128A FloatingContext[FloatingContext117,3870
            PM128A Xmm0;119,3923
            PM128A Xmm1;120,3948
            PM128A Xmm2;121,3973
            PM128A Xmm3;122,3998
            PM128A Xmm4;123,4023
            PM128A Xmm5;124,4048
            PM128A Xmm6;125,4073
            PM128A Xmm7;126,4098
            PM128A Xmm8;127,4123
            PM128A Xmm9;128,4148
            PM128A Xmm10;129,4173
            PM128A Xmm11;130,4199
            PM128A Xmm12;131,4225
            PM128A Xmm13;132,4251
            PM128A Xmm14;133,4277
            PM128A Xmm15;134,4303
        } DUMMYSTRUCTNAME;135,4329
    } DUMMYUNIONNAME;136,4356
        PDWORD64 IntegerContext[IntegerContext139,4391
            PDWORD64 Rax;141,4445
            PDWORD64 Rcx;142,4471
            PDWORD64 Rdx;143,4497
            PDWORD64 Rbx;144,4523
            PDWORD64 Rsp;145,4549
            PDWORD64 Rbp;146,4575
            PDWORD64 Rsi;147,4601
            PDWORD64 Rdi;148,4627
            PDWORD64 R8;149,4653
            PDWORD64 R9;150,4678
            PDWORD64 R10;151,4703
            PDWORD64 R11;152,4729
            PDWORD64 R12;153,4755
            PDWORD64 R13;154,4781
            PDWORD64 R14;155,4807
            PDWORD64 R15;156,4833
        } DUMMYSTRUCTNAME;157,4859
    } DUMMYUNIONNAME2;158,4886
} KNONVOLATILE_CONTEXT_POINTERS, *PKNONVOLATILE_CONTEXT_POINTERS;PKNONVOLATILE_CONTEXT_POINTERS160,4910
# define RTL_CRITICAL_SECTION_FLAG_NO_DEBUG_INFO 164,5032
__bcount(560,11494

win32/drwinapi/kernel32_sync.c,512
redirect_InitializeCriticalSection(42,1914
redirect_InitializeCriticalSectionAndSpinCount(57,2362
redirect_InitializeCriticalSectionEx(73,2746
redirect_DeleteCriticalSection(90,3140
redirect_EnterCriticalSection(99,3302
redirect_LeaveCriticalSection(112,3654
redirect_InterlockedCompareExchange 125,4006
redirect_InterlockedDecrement(136,4247
redirect_InterlockedExchange(145,4395
redirect_InterlockedIncrement(155,4569
redirect_WaitForSingleObject(164,4718
unit_test_drwinapi_kernel32_sync(190,5504

win32/drwinapi/ntdll_redir.c,1977
static strhash_table_t *ntdll_table;ntdll_table46,2031
static strhash_table_t *ntdll_win7_table;ntdll_win7_table47,2068
static const redirect_import_t redirect_ntdll[redirect_ntdll60,2784
#define REDIRECT_NTDLL_NUM 149,8826
static const redirect_import_t redirect_ntdll_win7[redirect_ntdll_win7154,9005
#define REDIRECT_NTDLL_WIN7_NUM 158,9174
ntdll_redir_init(162,9279
ntdll_redir_exit(195,10724
ntdll_redir_lookup(204,10922
redirect_RtlCreateHeap(235,11919
redirect_heap_call(251,12624
redirect_RtlDestroyHeap(273,13381
wrapped_dr_alloc(291,13990
wrapped_dr_free(309,14516
wrapped_dr_size(316,14663
redirect_RtlAllocateHeap(322,14774
redirect_RtlReAllocateHeap(339,15326
redirect_RtlFreeHeap(388,17256
redirect_RtlSizeHeap(406,17902
redirect_RtlValidateHeap(420,18301
redirect_RtlLockHeap(432,18642
redirect_RtlUnlockHeap(446,18937
redirect_RtlSetHeapInformation(460,19227
redirect_RtlFreeUnicodeString(475,19757
redirect_RtlFreeAnsiString(488,20150
redirect_RtlFreeOemString(501,20532
# define RTL_CRITICAL_SECTION_FLAG_NO_DEBUG_INFO 517,21015
# define RTL_CRITICAL_SECTION_FLAG_STATIC_INIT 520,21127
redirect_RtlInitializeCriticalSection(524,21211
redirect_RtlInitializeCriticalSectionAndSpinCount(530,21362
redirect_RtlInitializeCriticalSectionEx(537,21616
redirect_RtlDeleteCriticalSection(582,23473
redirect_NtCreateFile(610,24504
redirect_NtCreateKey(636,25536
redirect_NtMapViewOfSection(650,26055
redirect_NtOpenFile(674,27096
redirect_NtOpenKey(690,27654
redirect_NtOpenKeyEx(701,27945
redirect_NtOpenProcess(713,28330
redirect_NtOpenProcessToken(725,28738
redirect_NtOpenProcessTokenEx(735,29068
redirect_NtOpenThread(747,29521
redirect_NtOpenThreadToken(759,29919
redirect_NtOpenThreadTokenEx(771,30338
redirect_NtQueryAttributesFile(785,30882
redirect_NtQueryFullAttributesFile(793,31159
redirect_NtSetInformationFile(801,31459
redirect_NtSetInformationThread(815,32035
redirect_NtUnmapViewOfSection(827,32552

win32/drwinapi/ntdll_redir.h,33
#define _NTDLL_REDIR_H_ 37,1843

win32/drwinapi/rpcrt4_redir.c,345
static strhash_table_t *rpcrt4_table;rpcrt4_table46,2004
static const redirect_import_t redirect_rpcrt4[redirect_rpcrt448,2043
#define REDIRECT_RPCRT4_NUM 51,2168
rpcrt4_redir_init(54,2255
rpcrt4_redir_exit(72,2947
rpcrt4_redir_onload(78,3038
rpcrt4_redir_lookup(84,3108
redirect_UuidCreate 96,3363
unit_test_drwinapi_rpcrt4(123,4254

win32/drwinapi/rpcrt4_redir.h,34
#define _RPCRT4_REDIR_H_ 40,1918

win32/aslr.c,4855
enum {ASLR_MAP_GRANULARITY ASLR_MAP_GRANULARITY53,2183
    module_digest_t original_source;66,2774
    module_digest_t relocated_target;67,2811
    uint magic;79,3389
    uint version;84,3603
} aslr_persistent_digest_t;86,3700
enum {ASLR_PERSISTENT_CACHE_VERSION ASLR_PERSISTENT_CACHE_VERSION89,3769
enum {ASLR_PERSISTENT_CACHE_MAGIC ASLR_PERSISTENT_CACHE_MAGIC91,3836
enum {ASLR_PERSISTENT_CACHE_MAGIC = 0x45504441}x4550444191,3836
typedef struct _aslr_last_dll_bounds_t 97,4070
    app_pc end;98,4111
    app_pc start;101,4252
} aslr_last_dll_bounds_t;102,4270
static aslr_last_dll_bounds_t *aslr_last_dll_bounds;aslr_last_dll_bounds104,4297
vm_area_vector_t *aslr_wouldbe_areas;aslr_wouldbe_areas118,4897
vm_area_vector_t *aslr_heap_pad_areas;aslr_heap_pad_areas129,5422
HANDLE shared_object_directory 132,5516
HANDLE relocated_dlls_filecache_initial 137,5686
#define KNOWN_DLLS_OBJECT_DIRECTORY 139,5751
HANDLE known_dlls_object_directory 140,5802
#define KNOWN_DLL_PATH_SYMLINK 142,5862
wchar_t known_dll_path[known_dll_path143,5909
aslr_init(179,6975
aslr_exit(431,19074
aslr_thread_init(474,20680
aslr_thread_exit(479,20729
aslr_get_next_base(489,21021
aslr_get_fitting_base(534,23007
aslr_update_failed(613,26424
aslr_update_view_size(647,27698
aslr_track_randomized_dlls(686,29172
aslr_pre_process_mapview(796,34496
aslr_retry_map_syscall(1101,49868
aslr_get_module_mapping_size(1149,52280
#define SET_RETURN_VAL(1198,54206
aslr_post_process_mapview(1207,54485
void aslr_pre_process_unmapview(1897,87973
aslr_post_process_unmapview(1926,89172
aslr_doublecheck_wouldbe_areas(1943,89678
aslr_is_possible_attack(1964,90312
aslr_possible_preferred_address(1985,91189
aslr_reserve_remote_random_pad(2020,92746
aslr_maybe_pad_stack(2062,94573
#define LOADBLOCK_PAGE_PROTECT 2121,97163
aslr_force_dynamorio_rebase(2135,97729
aslr_free_dynamorio_loadblock(2180,99407
aslr_post_process_allocate_virtual_memory(2230,101432
aslr_pre_process_free_virtual_memory(2413,110905
aslr_reserve_initial_heap_pad(2475,113706
aslr_free_heap_pads(2543,117078
get_relocated_dlls_filecache_directory(2585,118622
open_relocated_dlls_filecache_directory(2610,119753
aslr_module_force_size(2725,125038
aslr_module_append_signature(2790,127262
aslr_module_read_signature(2844,129499
aslr_get_section_digest(2929,132629
aslr_create_private_module_section(2978,134469
aslr_get_file_digest(3011,135985
aslr_compare_in_place(3058,137611
aslr_module_verify_relocated_contents(3148,141119
aslr_verify_file_checksum(3337,149172
aslr_open_relocated_dll_file(3521,156357
aslr_check_low_disk_threshold(3650,162479
aslr_create_relocated_dll_file(3684,163958
is_aslr_exempted_file_name(3816,169767
get_file_short_name(3894,173204
calculate_publish_name(3922,174319
aslr_write_header(4042,179406
aslr_generate_relocated_section(4124,182896
aslr_experiment_with_section_handle(4385,194645
aslr_file_relocate_cow(4535,201556
aslr_module_get_times(4636,206611
aslr_produce_randomized_file(4732,210212
aslr_get_unique_wide_name(4949,219863
aslr_rename_temporary_file(4974,220918
aslr_publish_section_handle(5029,223292
aslr_set_randomized_handle(5315,236750
aslr_get_original_metadata(5386,239852
aslr_verify_section_backing(5454,242520
aslr_replace_section_handle(5475,243353
aslr_subscribe_section_handle(5559,246960
aslr_post_process_create_section_internal(5673,251555
aslr_publish_file(5792,256959
aslr_get_known_dll_path(5825,258097
aslr_is_handle_KnownDlls(5887,260322
aslr_recreate_known_dll_file(5940,262286
aslr_post_process_create_or_open_section(6035,266269
aslr_process_worklist(6088,268497
#define GBOP_DEFINE_HOOK(6144,270903
#define GBOP_DEFINE_HOOK_MODULE(6145,270963
static const gbop_hook_desc_t gbop_hooks[gbop_hooks6154,271455
#undef GBOP_DEFINE_HOOK6158,271525
#undef GBOP_DEFINE_HOOK_MODULE6159,271549
#define GBOP_HOOK_LIST_END_SENTINEL 6161,271581
#define GBOP_DEFINE_HOOK(6166,271802
#define GBOP_DEFINE_HOOK_MODULE(6167,271846
static const uint gbop_hooks_set_sizes[gbop_hooks_set_sizes6174,272163
#undef GBOP_DEFINE_HOOK6180,272321
#undef GBOP_DEFINE_HOOK_MODULE6181,272345
#define GBOP_DEFINE_HOOK_MODULE(6188,272630
static int gbop_hooks_set_enabled[gbop_hooks_set_enabled6190,272689
#undef GBOP_DEFINE_HOOK_MODULE6195,272841
static const uint gbop_num_hooks 6197,272873
bool gbop_vm_loaded 6206,273242
gbop_get_hook(6211,273416
gbop_get_num_hooks(6242,274528
gbop_exclude_filter(6290,276289
    CTI_MIN_LENGTH 6358,279118
    CTI_MIN_LENGTH = CTI_IND1_LENGTH,6358,279118
    CTI_MAX_LENGTH 6359,279156
    CTI_MAX_LENGTH = CTI_FAR_ABS_LENGTH,6359,279156
gbop_is_after_cti(6365,279305
check_exempt_gbop_addr(6510,285174
gbop_check_valid_caller(6558,287442
gbop_validate_and_act(6828,300350
gbop_init(6922,304619
gbop_exit(6956,305838

win32/aslr.h,8020
#define ASLR_H42,1878
    ASLR_DISABLED 48,1956
    ASLR_DISABLED          = 0x00,x0048,1956
    ASLR_DLL 51,2041
    ASLR_DLL               = 0x01,x0151,2041
    ASLR_STACK 52,2113
    ASLR_STACK             = 0x02,x0252,2113
    ASLR_HEAP 55,2264
    ASLR_HEAP              = 0x04,x0455,2264
    ASLR_MAPPED 56,2343
    ASLR_MAPPED            = 0x08,x0856,2343
    ASLR_EXECUTABLE 57,2416
    ASLR_EXECUTABLE        = 0x10,x1057,2416
    ASLR_PROCESS_PARAM 59,2492
    ASLR_PROCESS_PARAM     = 0x20,x2059,2492
    ASLR_HEAP_FILL 67,2863
    ASLR_HEAP_FILL         = 0x40,x4067,2863
    ASLR_TEB 68,2947
    ASLR_TEB               = 0x80,x8068,2947
    ASLR_RANGE_BOTTOM_UP 89,3987
    ASLR_RANGE_BOTTOM_UP   = 0x00100,x0010089,3987
    ASLR_RANGE_TOP_DOWN 90,4059
    ASLR_RANGE_TOP_DOWN    = 0x00200,x0020090,4059
    ASLR_RANGE_RANDOM 93,4256
    ASLR_RANGE_RANDOM      = 0x00400,x0040093,4256
    ASLR_SHARE_DR_DLL 99,4597
    ASLR_SHARE_DR_DLL      = 0x10000000,x1000000099,4597
    ASLR_CLIENT_DEFAULT 105,4903
    ASLR_CLIENT_DEFAULT = ASLR_DLL 105,4903
    ASLR_CLIENT_DEFAULT = ASLR_DLL | ASLR_STACK 105,4903
    ASLR_CLIENT_DEFAULT = ASLR_DLL | ASLR_STACK | ASLR_HEAP,105,4903
} aslr_option_t;106,4974
    ASLR_PROCESS_PRIVATE 116,5307
    ASLR_PROCESS_PRIVATE           = 0x1,x1116,5307
    ASLR_SHARED_PER_USER 118,5389
    ASLR_SHARED_PER_USER           = 0x2,x2118,5389
    ASLR_SHARED_INHERIT 128,5877
    ASLR_SHARED_INHERIT            = 0x4,x4128,5877
    ASLR_SHARED_IN_SESSION 146,6639
    ASLR_SHARED_IN_SESSION         = 0x8,x8146,6639
    ASLR_SHARED_CONTENTS 160,7414
    ASLR_SHARED_CONTENTS           = 0x10,x10160,7414
    ASLR_SHARED_PUBLISHER 167,7698
    ASLR_SHARED_PUBLISHER          = 0x20,x20167,7698
    ASLR_SHARED_SUBSCRIBER 173,7942
    ASLR_SHARED_SUBSCRIBER         = 0x40,x40173,7942
    ASLR_SHARED_ANONYMOUS_CONSUMER 180,8212
    ASLR_SHARED_ANONYMOUS_CONSUMER = 0x80,x80180,8212
    ASLR_SHARED_FILE_PRODUCER 193,8808
    ASLR_SHARED_FILE_PRODUCER      = 0x100,x100193,8808
    ASLR_SHARED_WORKLIST 203,9210
    ASLR_SHARED_WORKLIST           = 0x200,x200203,9210
    ASLR_SHARED_INITIALIZE 209,9430
    ASLR_SHARED_INITIALIZE         = 0x1000,x1000209,9430
    ASLR_SHARED_INITIALIZE_NONPERMANENT 221,10069
    ASLR_SHARED_INITIALIZE_NONPERMANENT = 0x2000,x2000221,10069
    ASLR_PERSISTENT 228,10395
    ASLR_PERSISTENT                = 0x100000,x100000228,10395
    ASLR_ALLOW_ORIGINAL_CLOBBER 235,10697
    ASLR_ALLOW_ORIGINAL_CLOBBER  = 0x1000000,x1000000235,10697
    ASLR_RANDOMIZE_EXECUTABLE 247,11331
    ASLR_RANDOMIZE_EXECUTABLE    = 0x2000000,x2000000247,11331
    ASLR_AVOID_NET20_NATIVE_IMAGES 260,11964
    ASLR_AVOID_NET20_NATIVE_IMAGES = 0x4000000,x4000000260,11964
    ASLR_CACHE_DEFAULT 263,12072
    ASLR_CACHE_DEFAULT = ASLR_SHARED_PER_USER 263,12072
                         ASLR_SHARED_CONTENTS 264,12131
               ASLR_SHARED_ANONYMOUS_CONSUMER 265,12190
                     ASLR_SHARED_FILE_PRODUCER 266,12249
} aslr_cache_t;267,12308
    ASLR_CACHE_LIST_DEFAULT,272,12453
    ASLR_CACHE_LIST_INCLUDE,273,12482
    ASLR_CACHE_LIST_EXCLUDE 274,12545
} aslr_cache_list_t;278,12722
    ASLR_PERSISTENT_LAX 290,13212
    ASLR_PERSISTENT_LAX           = 0x0,x0290,13212
    ASLR_PERSISTENT_PARANOID 296,13392
    ASLR_PERSISTENT_PARANOID      = 0x1,x1296,13392
    ASLR_PERSISTENT_SOURCE_DIGEST 302,13602
    ASLR_PERSISTENT_SOURCE_DIGEST = 0x2,x2302,13602
    ASLR_PERSISTENT_TARGET_DIGEST 307,13790
    ASLR_PERSISTENT_TARGET_DIGEST = 0x4,x4307,13790
    ASLR_PERSISTENT_MODIFIED_TIME 323,14620
    ASLR_PERSISTENT_MODIFIED_TIME = 0x8,x8323,14620
    ASLR_PERSISTENT_NOTOWNER_PARANOIA 336,15237
    ASLR_PERSISTENT_NOTOWNER_PARANOIA = 0x10,x10336,15237
    ASLR_PERSISTENT_SHORT_DIGESTS 344,15602
    ASLR_PERSISTENT_SHORT_DIGESTS     = 0x20,x20344,15602
    ASLR_PERSISTENT_PARANOID_TRANSFORM_EXPLICITLY 352,15951
    ASLR_PERSISTENT_PARANOID_TRANSFORM_EXPLICITLY = 0x10000,x10000352,15951
    ASLR_PERSISTENT_PARANOID_PREFIX 362,16468
    ASLR_PERSISTENT_PARANOID_PREFIX = 0x20000,x20000362,16468
} aslr_consistency_check_t;375,17079
    ASLR_NO_ACTION 380,17158
    ASLR_NO_ACTION      = 0x0,x0380,17158
    ASLR_TRACK_AREAS 383,17269
    ASLR_TRACK_AREAS    = 0x1,x1383,17269
    ASLR_AVOID_AREAS 384,17338
    ASLR_AVOID_AREAS    = 0x2,x2384,17338
    ASLR_RESERVE_AREAS 385,17408
    ASLR_RESERVE_AREAS  = 0x4,x4385,17408
    ASLR_DETECT_EXECUTE 394,17759
    ASLR_DETECT_EXECUTE = 0x10,x10394,17759
    ASLR_DETECT_READ 397,17926
    ASLR_DETECT_READ    = 0x20,x20397,17926
    ASLR_DETECT_WRITE 398,17968
    ASLR_DETECT_WRITE   = 0x40,x40398,17968
    ASLR_REPORT 401,18046
    ASLR_REPORT         = 0x100,x100401,18046
    ASLR_HANDLING 407,18270
    ASLR_HANDLING =     0x1000,x1000407,18270
    ASLR_NORMALIZE_ID 411,18466
    ASLR_NORMALIZE_ID = 0x10000,x10000411,18466
} aslr_action_t;414,18673
    ASLR_INTERNAL_DEFAULT 418,18762
    ASLR_INTERNAL_DEFAULT       = 0x0000,x0000418,18762
    ASLR_INTERNAL_SAME_STRESS 422,18968
    ASLR_INTERNAL_SAME_STRESS   = 0x1000,x1000422,18968
    ASLR_INTERNAL_RANGE_NONE 425,19086
    ASLR_INTERNAL_RANGE_NONE    = 0x2000,x2000425,19086
    ASLR_INTERNAL_SHARED_NONUNIQUE 427,19130
    ASLR_INTERNAL_SHARED_NONUNIQUE = 0x800000,x800000427,19130
    ASLR_INTERNAL_SHARED_APPFILE 430,19218
    ASLR_INTERNAL_SHARED_APPFILE = 0x1000000,x1000000430,19218
    ASLR_INTERNAL_SHARED_AND_PRIVATE 433,19328
    ASLR_INTERNAL_SHARED_AND_PRIVATE = 0x2000000,x2000000433,19328
} aslr_internal_option_t;439,19577
    bool           sys_aslr_clobbered;442,19621
    HANDLE randomized_section_handle;450,20010
    app_pc original_section_base;451,20079
    uint   original_section_timestamp;452,20141
    uint   original_section_checksum;453,20202
    HANDLE original_image_section_handle;454,20262
    HANDLE last_app_section_handle;460,20529
    process_id_t last_child_padded;470,21077
} aslr_syscall_context_t;471,21123
#define ASLR_INVALID_SECTION_BASE 473,21150
#define MAX_PUBLISHED_SECTION_NAME 476,21263
aslr_timestamp_transformation(522,22957
    GBOP_DISABLED 546,23807
    GBOP_DISABLED          = 0x0,x0546,23807
    GBOP_IS_EXECUTABLE 557,24262
    GBOP_IS_EXECUTABLE     = 0x1,x1557,24262
    GBOP_IS_X 558,24337
    GBOP_IS_X              = 0x2,x2558,24337
    GBOP_IS_IMAGE 559,24421
    GBOP_IS_IMAGE          = 0x4,x4559,24421
    GBOP_IS_NOT_STACK 566,24748
    GBOP_IS_NOT_STACK      = 0x8,x8566,24748
    GBOP_CHECK_INSTR_TYPE 578,25227
    GBOP_CHECK_INSTR_TYPE  = 0x10,x10578,25227
    GBOP_IS_CALL 579,25318
    GBOP_IS_CALL           = 0x20,x20579,25318
    GBOP_IS_JMP 580,25402
    GBOP_IS_JMP            = 0x40,x40580,25402
    GBOP_IS_HOTPATCH_JMP 581,25492
    GBOP_IS_HOTPATCH_JMP   = 0x80,x80581,25492
    GBOP_EMULATE_SOURCE 595,26163
    GBOP_EMULATE_SOURCE   = 0x100,x100595,26163
    GBOP_IS_RET_TO_ENTRY 611,26961
    GBOP_IS_RET_TO_ENTRY  = 0x00200,x00200611,26961
    GBOP_IS_DGC 631,27923
    GBOP_IS_DGC           = 0x02000,x02000631,27923
    GBOP_IS_FUTURE_EXEC 642,28585
    GBOP_IS_FUTURE_EXEC   = 0x04000,x04000642,28585
    GBOP_DIAGNOSE_SOURCE 647,28713
    GBOP_DIAGNOSE_SOURCE  = 0x10000,x10000647,28713
    GBOP_CLIENT_DEFAULT 659,29246
    GBOP_CLIENT_DEFAULT = GBOP_IS_DGC 659,29246
    GBOP_CLIENT_DEFAULT = GBOP_IS_DGC | GBOP_IS_FUTURE_EXEC 659,29246
                          GBOP_CHECK_INSTR_TYPE 660,29331
                          GBOP_CHECK_INSTR_TYPE | GBOP_IS_CALL 660,29331
                          GBOP_IS_EXECUTABLE 661,29415
                          GBOP_IS_EXECUTABLE | GBOP_IS_X 661,29415
                          GBOP_IS_EXECUTABLE | GBOP_IS_X | GBOP_IS_IMAGE 661,29415
    const char *mod_name;mod_name667,29549
    const char *func_name;func_name668,29575
} gbop_hook_desc_t;669,29602

win32/callback.c,6037
static LPTOP_LEVEL_EXCEPTION_FILTER app_top_handler;82,3121
ALIGN_VAR(92,3558
#define CURRENTLY_UNKNOWN 129,4852
#define INTERCEPT_POINT(132,4926
#undef INTERCEPT_POINT136,5052
typedef struct _intercept_map_elem_t 140,5158
    byte *interception_pc;interception_pc141,5197
    app_pc original_app_pc;142,5224
    size_t displace_length;143,5252
    size_t orig_length;144,5304
    struct _intercept_map_elem_t *next;next145,5328
} intercept_map_elem_t;146,5368
typedef struct _intercept_map_t 148,5393
    intercept_map_elem_t *head;head149,5427
    intercept_map_elem_t *tail;tail150,5459
} intercept_map_t;151,5491
static intercept_map_t *intercept_map;intercept_map153,5511
static byte *LdrInitializeThunk LdrInitializeThunk172,6273
static byte *RtlUserThreadStart RtlUserThreadStart179,6779
static byte *KiFastSystemCall KiFastSystemCall183,6911
get_setcontext_interceptor(187,6978
set_asynch_interception(194,7116
intercept_asynch_global(205,7448
intercept_asynch_common(212,7623
intercept_asynch_for_thread(244,8840
intercept_asynch_for_self(254,9163
#define APP 543,20103
insert_let_go_cleanup(547,20219
#define JMP_SIZE 702,27947
emit_landing_pad_code(704,28028
finalize_landing_pad_code(767,30183
copy_app_code(796,31698
emit_intercept_code(865,34883
# define STACK_ALIGNMENT 1174,49898
#undef APP1347,57624
map_intercept_pc_to_app_pc(1350,57648
unmap_intercept_pc(1377,58426
free_intercept_list(1413,59508
get_app_pc_from_intercept_pc(1440,60543
is_intercepted_app_pc(1462,61172
emit_resume_jmp(1499,62611
intercept_call(1568,65960
un_intercept_call(1773,74455
clean_syscall_wrapper(1829,76694
#define APP(1891,79182
#undef APP1963,82753
syscall_wrapper_ilist(2083,88664
#           define CHROME_HOOK_DISTANCE_JMP_TO_SKIP 2366,102714
intercept_syscall_wrapper(2453,106359
insert_trampoline(2593,112197
remove_trampoline(2627,113748
is_in_interception_buffer(2633,113843
is_part_of_interception(2640,113990
is_on_interception_initial_route(2647,114141
is_syscall_trampoline(2665,114681
make_writable_incr(2711,116186
make_inaccessible(2728,116634
wipe_out_ntdll(2745,117063
asynch_retakeover_if_native(2795,118650
asynch_take_over(2816,119510
possible_new_thread_wait_for_dr_init(2855,121117
intercept_new_thread(2878,122009
#define BASE_THREAD_START_THUNK_USHORT 3032,129414
#define LDR_INIT_CXT_XSP_OFFSET 3159,136428
intercept_ldr_init(3162,136538
#define APC_CONTEXT_XSP_OFFS 3291,142032
#define APC_TARGET_XSP_OFFS 3292,142082
intercept_apc(3298,142404
check_apc_context_offset(3504,153206
intercept_nt_continue(3570,156169
intercept_nt_setcontext(3673,161528
our_top_handler(3745,164665
transfer_to_fcache_return(3756,164978
    MOD_CODE_TAKEOVER 3785,166024
    MOD_CODE_TAKEOVER      = 0x01,x013785,166024
    MOD_CODE_EMULATE_WRITE 3786,166059
    MOD_CODE_EMULATE_WRITE = 0x02,x023786,166059
    MOD_CODE_APP_CXT 3787,166094
    MOD_CODE_APP_CXT       = 0x04,x043787,166094
found_modified_code(3799,166591
is_dstack_overflow(4025,177443
check_for_modified_code(4052,178633
get_exception_list(4177,184716
exception_frame_chain_depth(4197,185493
dump_context_info(4264,188478
#define DUMP(4266,188539
#define DUMPNM(4267,188606
#define NEWLINE 4268,188679
#undef DUMP4356,191111
#undef DUMPNM4357,191123
#undef NEWLINE4358,191137
exception_access_violation_type(4362,191175
dump_exception_info(4375,191521
dump_exception_frames(4394,192285
typedef struct scopetable_entry_t 4436,193809
    DWORD previousTryLevel;4437,193845
    PVOID lpfnFilter;4438,193873
    PVOID lpfnHandler;4439,193895
} scopetable_entry_t;4440,193918
typedef struct _vc_exception_registration_t4443,193996
    EXCEPTION_REGISTRATION   exception_base;4445,194042
    struct scopetable_entry_t *scopetable;scopetable4446,194087
    int                      trylevel;4447,194130
    int                      _ebp;4448,194169
} vc_exception_registration_t;4449,194204
void dump_vc_exception_frame(4456,194454
report_app_exception(4473,195062
report_internal_exception(4488,195782
internal_exception_info(4569,199615
internal_dynamo_exception(4578,199973
is_execution_exception(4610,201166
client_exception_event(4668,203320
check_internal_exception(4744,206833
intercept_exception(4927,216314
intercept_raise_exception(5573,249411
initialize_exception_record(5604,250545
os_forge_exception(5652,252528
intercept_callback_start(5808,260474
callback_setup(5992,269432
callback_start_return(6138,275386
get_prev_swapped_dcontext(6296,282559
get_pc_after_call(6319,283314
intercept_load_dll(6395,286515
intercept_unload_dll(6522,292843
#       define HACK_EXE_NAME 6550,294137
#       define L_PIN_DLL_NAME 6551,294194
retakeover_after_native(6635,298099
remove_image_entry_trampoline(6749,303478
take_over_primary_thread(6769,304400
intercept_image_entry(6840,307474
insert_image_entry_trampoline(7001,315384
callback_interception_init_start(7094,319908
callback_interception_init_finish(7260,327537
callback_interception_unintercept(7444,335879
callback_interception_exit(7482,337421
swap_dcontexts(7497,337925
at_initial_stack_bottom(7545,340225
at_xdata_rct_exception(7608,343091
at_driver_rct_exception(7626,343729
at_fiber_init_known_exception(7714,347817
            SUB_RSP_LENGTH 7736,348736
            FIBER_SEH_LENGTH 7737,348768
    MAX_SEH_TRYLEVEL 7805,351659
    INSTR_PUSH_IMMED32_LENGTH 7806,351685
    INSTR_PUSH_IMMED32_OPCODE 7807,351720
    INSTR_PUSH_IMMED32_OPCODE = 0x68,x687807,351720
at_SEH_rct_exception(7850,353246
bool seen_Borland_SEH 7904,355723
at_Borland_SEH_rct_exemption(7924,356947
at_rct_exempt_module(7976,359643
at_known_exception(8074,364630
callback_init(8133,366752
callback_exit(8138,366778
get_drmarker(8149,366997
hook_text(8159,367229
unhook_text(8199,368974
insert_jmp_at_tramp_entry(8206,369169
get_segment_base(8223,369680
get_app_segment_base(8237,370020
thread_attach_takeover_callee(8244,370170
emit_takeover_code(8255,370461

win32/diagnost.c,1178
static const char * const separator 63,2939
static const wchar_t * const HKLM_entries[HKLM_entries71,3321
static const wchar_t * const HKCU_entries[HKCU_entries101,5548
diagnostics_log_data(120,6559
open_diagnostics_file(175,9025
#define PRINT_MEM_BUF_BYTE 182,9243
#define PRINT_MEM_BUF_START 184,9321
#define PRINT_MEM_BUF_NO_ALIGN 187,9453
#define PRINT_MEM_BUF_ASCII 190,9559
print_memory_buffer(196,9855
report_addr_info(237,11445
report_src_info(274,13012
report_target_info(333,15397
report_preferred_target_info(347,15939
report_vm_counters(364,16497
report_dcontext_info(390,17473
report_internal_data_structures(448,19917
report_ntdll_info(547,24051
report_thread(598,26241
report_current_process(615,26927
get_system_processes(833,36831
report_processes(865,38101
report_registry_settings(936,40942
report_registry_settings_helper(955,41743
report_autostart_programs(1058,46469
report_intro(1104,48155
report_processor_info(1142,49588
report_system_diagnostics(1182,50962
add_diagnostics_xml_header(1370,60694
report_diagnostics_common(1386,61493
report_diagnostics(1463,65113
append_diagnostics(1502,66425
diagnost_exit(1516,66948

win32/diagnost.h,2530
#define _DIAGNOST_H_ 40,1807
#define DIAGNOSTICS_LOGDIR_KEY 43,1902
#define DIAGNOSTICS_FILE_XML_EXTENSION 44,1953
#define DIAGNOSTICS_XML_FILE_VERSION 45,1999
#define DIAGNOSTICS_NTDLL_DLL_LOCATION 46,2042
#define DIAGNOSTICS_HARDWARE_REG_KEY 47,2104
#define DIAGNOSTICS_CONTROL_REG_KEY 48,2197
#define DIAGNOSTICS_TEST_REG_KEY 49,2292
#define DIAGNOSTICS_OS_REG_KEY 50,2358
#define DIAGNOSTICS_OS_HOTFIX_REG_KEY 51,2461
#define DIAGNOSTICS_BIOS_REG_KEY 52,2581
#define DIAGNOSTICS_SYSTEMROOT_REG_KEY 53,2668
#define DIAGNOSTICS_DESCRIPTION_KEY 54,2721
#define DIAGNOSTICS_MANUFACTURER_KEY 55,2771
#define DIAGNOSTICS_FRIENDLYNAME_KEY 56,2815
#define DIAGNOSTICS_MAX_REG_KEYS 58,2869
#define DIAGNOSTICS_MAX_REG_VALUES 59,2959
#define DIAGNOSTICS_MAX_RECURSION_LEVEL 60,3049
#define DIAGNOSTICS_MAX_NAME_AND_DATA_SIZE 61,3143
#define DIAGNOSTICS_MAX_KEY_NAME_SIZE 62,3233
#define DIAGNOSTICS_MAX_LOG_BUFFER_SIZE 63,3319
#define DIAGNOSTICS_MAX_LOG_FILES 64,3364
#define DIAGNOSTICS_MINI_DUMP_SIZE 65,3438
#define DIAGNOSTICS_REG_NAME 67,3536
#define DIAGNOSTICS_REG_DATA 68,3610
#define DIAGNOSTICS_REG_HARDWARE 69,3684
#define DIAGNOSTICS_REG_ALLKEYS 70,3766
#define DIAGNOSTICS_REG_ALLSUBKEYS 71,3843
#define DIAGNOSTICS_INITIAL_PROCESS_TOTAL 72,3934
#define DIAGNOSTICS_BYTES_PER_LINE 74,3980
#define DECREMENT_FOR_DATA_OFFSET 80,4367
typedef struct _DIAGNOSTICS_INFORMATION 82,4461
    SYSTEM_BASIC_INFORMATION sbasic_info;83,4503
    SYSTEM_PROCESSOR_INFORMATION sproc_info;84,4545
    SYSTEM_PERFORMANCE_INFORMATION sperf_info;85,4590
    SYSTEM_TIME_OF_DAY_INFORMATION stime_info;86,4637
    SYSTEM_PROCESSOR_TIMES sptime_info;87,4684
    SYSTEM_GLOBAL_FLAG global_flag;88,4724
} DIAGNOSTICS_INFORMATION, *PDIAGNOSTICS_INFORMATION;PDIAGNOSTICS_INFORMATION89,4760
typedef struct _DIAGNOSTICS_KEY_VALUE_FULL_INFORMATION 100,5452
    ULONG   TitleIndex;101,5509
    ULONG   Type;102,5533
    ULONG   DataOffset;103,5551
    ULONG   DataLength;104,5575
    ULONG   NameLength;105,5599
    BYTE    NameAndData[NameAndData106,5660
} DIAGNOSTICS_KEY_VALUE_FULL_INFORMATION, *PDIAGNOSTICS_KEY_VALUE_FULL_INFORMATION;PDIAGNOSTICS_KEY_VALUE_FULL_INFORMATION107,5721
typedef struct _DIAGNOSTICS_KEY_NAME_INFORMATION 110,5861
    LARGE_INTEGER   LastWriteTime;111,5912
    ULONG   TitleIndex;112,5947
    ULONG   NameLength;113,5971
    WCHAR   Name[Name114,6032
} DIAGNOSTICS_KEY_NAME_INFORMATION, *PDIAGNOSTICS_KEY_NAME_INFORMATION;PDIAGNOSTICS_KEY_NAME_INFORMATION115,6088

win32/drmarker.c,757
# define WIN32_LEAN_AND_MEAN51,2191
# define READ_FUNC 60,2438
# define DR_MARKER_VERSION_CURRENT 61,2480
typedef unsigned char byte;68,2962
# define PAGE_START(70,2998
# define PAGE_SIZE 71,3060
# define READ_FUNC 72,3088
#define OP_jmp_byte 75,3133
is_wow64_process(80,3228
    typedef DWORD (WINAPI 83,3313
read_and_verify_dr_marker_common(109,4189
read_and_verify_dr_marker_64(173,6476
read_and_verify_dr_marker(180,6626
#define DR_MARKER_MAGIC1 190,7110
#define DR_MARKER_MAGIC2 191,7146
#define DR_MARKER_MAGIC3 192,7182
#define DR_MARKER_MAGIC4 193,7218
dr_marker_verify(196,7260
dr_marker_magic_init(208,7695
init_dr_marker(227,8352
get_drmarker_hotp_policy_status_table(259,9494
set_drmarker_hotp_policy_status_table(272,9790

win32/drmarker.h,1566
#define _DRMARKER_H_44,1979
#define L_DR_MARKER_HOOKED_DLL 52,2042
# define DR_MARKER_HOOKED_DLL 54,2101
# define DR_MARKER_HOOKED_DLL 56,2160
#define DR_MARKER_HOOKED_FUNCTION 59,2210
#define DR_MARKER_HOOKED_FUNCTION_ARGS 60,2269
#define DR_MARKER_HOOKED_FUNCTION_STRING 62,2408
    DR_MARKER_RELEASE_BUILD 65,2494
    DR_MARKER_RELEASE_BUILD  = 0x1,x165,2494
    DR_MARKER_DEBUG_BUILD 66,2530
    DR_MARKER_DEBUG_BUILD    = 0x2,x266,2530
    DR_MARKER_PROFILE_BUILD 67,2566
    DR_MARKER_PROFILE_BUILD  = 0x4,x467,2566
    DR_MARKER_BUILD_TYPES 68,2602
        DR_MARKER_RELEASE_BUILD|DR_MARKER_RELEASE_BUILD69,2634
        DR_MARKER_RELEASE_BUILD|DR_MARKER_DEBUG_BUILD|DR_MARKER_DEBUG_BUILD69,2634
        DR_MARKER_RELEASE_BUILD|DR_MARKER_DEBUG_BUILD|DR_MARKER_PROFILE_BUILDDR_MARKER_PROFILE_BUILD69,2634
#define DR_MARKER_VERSION_1 72,2716
#define DR_MARKER_VERSION_2 73,2746
#define WINDBG_CMD_MAX_LEN 75,2777
typedef struct _dr_marker_t 85,3268
    uint magic1;86,3298
    uint magic2;87,3315
    uint magic3;88,3332
    uint magic4;89,3349
    uint flags;90,3366
    uint build_num;91,3382
    uint dr_marker_version;92,3402
    void *dr_base_addr;dr_base_addr93,3466
    void *dr_generic_nudge_target;dr_generic_nudge_target94,3490
    void *dr_hotp_policy_status_table;dr_hotp_policy_status_table95,3525
    struct _dr_statistics_t *stats;stats96,3564
    char windbg_cmds[windbg_cmds100,3735
} dr_marker_t;104,3900
    DR_MARKER_FOUND 107,3923
    DR_MARKER_NOT_FOUND 108,3966
    DR_MARKER_ERROR 109,4009

win32/early_inject_helper1.c,73
#define WIN32_LEAN_AND_MEAN41,2034
__declspec(44,2084
DllMain(53,2359

win32/early_inject_helper2.c,73
#define WIN32_LEAN_AND_MEAN41,2033
__declspec(44,2083
DllMain(51,2233

win32/eventlog.c,1736
#define NONCE_LENGTH 47,2029
#define MAX_MESSAGE_SIZE 49,2054
typedef struct eventlog_state_t 52,2164
    HANDLE eventlog_pipe;53,2198
    HANDLE eventlog_completion;54,2224
    uint message_seq;55,2287
    char nonce[nonce56,2339
    mutex_t eventlog_mutex;57,2417
    char outbuf[outbuf61,2736
    size_t outlen;62,2771
    char buf[buf63,2790
    int request_length;64,2822
} eventlog_state_t;65,2846
set_event_source_registry_values(91,3988
init_registry_source(147,5981
#define MAX_SYSLOG_ARGS 208,8382
void os_syslog(210,8493
#define FIELD(238,9527
#define VARFIELD(246,9888
#define PADDING(255,10282
append_string(272,11030
#define HEADER_SIZE 289,11465
#define HEADER_OFFSET 290,11488
prepend_header(294,11535
#define EVENTLOG 310,12011
#define RPC_VERSION_BOGUS 317,12312
#define RPC_VERSION_5 318,12375
static char hello_message[hello_message322,12597
#define REPORT 381,15162
#define REGISTER_UNKNOWN_HEADER 383,15189
#define REPORT_UNKNOWN_HEADER 384,15240
#define DEREGISTER_UNKNOWN_HEADER 385,15289
#define EVENTLOG_NAMED_PIPE 390,15507
#define PRINT(395,15597
print_buffer_as_bytes 397,15669
#undef PRINT420,16236
#define HELLO_RESPONSE_LENGTH 424,16340
#define REGISTER_RESPONSE_LENGTH 426,16431
#define REPORT_RESPONSE_LENGTH 427,16467
eventlog_register(432,16569
#define REPORT_IN_LOG 487,18985
get_computer_name(550,21780
eventlog_report(590,23537
eventlog_deregister(720,29340
static eventlog_state_t *shared_eventlog_connection;shared_eventlog_connection766,31192
static eventlog_state_t temp_shared_eventlog_connection;768,31316
eventlog_alloc(772,31453
eventlog_init(809,33083
eventlog_fast_exit(847,34448
eventlog_slow_exit(861,34952
os_eventlog(882,35854

win32/gbop.h,635
#define GBOP_H43,1837
#define GBOP_DEFINE_KERNEL32_BASE_HOOKS(74,3064
#define GBOP_DEFINE_KERNEL32_MORE_HOOKS(113,5695
#define GBOP_DEFINE_WININET_BASE_HOOKS(166,9513
#define GBOP_DEFINE_MSVCRT_BASE_HOOKS(178,10255
#define GBOP_DEFINE_MSVCRT_MORE_HOOKS(182,10444
#define GBOP_DEFINE_WS2_32_BASE_HOOKS(224,13456
#define GBOP_DEFINE_WS2_32_MORE_HOOKS(233,13994
#define GBOP_DEFINE_USER32_BASE_HOOKS(245,14593
#define GBOP_DEFINE_SHELL32_BASE_HOOKS(258,15413
#define GBOP_DEFINE_NTDLL_MORE_HOOKS(280,16886
#define GBOP_ALL_HOOKS 303,18062
    GBOP_SET_NTDLL_BASE 321,18991
    GBOP_SET_NTDLL_BASE         = 0x1,x1321,18991

win32/inject.c,4484
#define WIN32_LEAN_AND_MEAN46,2163
# define GET_PROC_ADDR 60,2505
# define GET_PROC_ADDR 62,2551
#define DYNAMORIO_ENTRY 66,2651
# define display_error(73,2870
static ptr_uint_t addr_getprocaddr;79,3089
static ptr_uint_t addr_loadlibrarya;80,3125
static ptr_uint_t addr_debugbreak;82,3192
static bool inject_initialized 84,3234
inject_init(86,3279
#define SIZE_OF_LOAD_DYNAMO 104,3898
inject_into_thread(111,4096
    PUSHF 368,14987
    PUSHF                 = 0x9c,x9c368,14987
    POPF 369,15021
    POPF                  = 0x9d,x9d369,15021
    PUSHA 370,15055
    PUSHA                 = 0x60,x60370,15055
    POPA 371,15089
    POPA                  = 0x61,x61371,15089
    PUSH_EAX 372,15123
    PUSH_EAX              = 0x50,x50372,15123
    POP_EAX 373,15157
    POP_EAX               = 0x58,x58373,15157
    PUSH_ECX 374,15191
    PUSH_ECX              = 0x51,x51374,15191
    POP_ECX 375,15225
    POP_ECX               = 0x59,x59375,15225
    PUSH_IMM32 376,15259
    PUSH_IMM32            = 0x68,x68376,15259
    PUSH_IMM8 377,15293
    PUSH_IMM8             = 0x6a,x6a377,15293
    JMP_REL8 379,15328
    JMP_REL8              = 0xeb,xeb379,15328
    JMP_REL32 380,15362
    JMP_REL32             = 0xe9,xe9380,15362
    CALL_REL32 381,15396
    CALL_REL32            = 0xe8,xe8381,15396
    CALL_RM32 382,15430
    CALL_RM32             = 0xff,xff382,15430
    CALL_EAX_RM 383,15464
    CALL_EAX_RM           = 0xd0,xd0383,15464
    MOV_RM32_2_REG32 385,15499
    MOV_RM32_2_REG32      = 0x8b,x8b385,15499
    MOV_ESP_2_EAX_RM 386,15533
    MOV_ESP_2_EAX_RM      = 0xc4,xc4386,15533
    MOV_EAX_2_ECX_RM 387,15567
    MOV_EAX_2_ECX_RM      = 0xc8,xc8387,15567
    MOV_EAX_2_EDX_RM 388,15601
    MOV_EAX_2_EDX_RM      = 0xd0,xd0388,15601
    MOV_EAX_2_EAX_RM 389,15635
    MOV_EAX_2_EAX_RM      = 0xc0,xc0389,15635
    MOV_derefEAX_2_EAX_RM 390,15669
    MOV_derefEAX_2_EAX_RM = 0x00,x00390,15669
    MOV_deref_disp8_EAX_2_EAX_RM 391,15703
    MOV_deref_disp8_EAX_2_EAX_RM = 0x40,x40391,15703
    MOV_IMM8_2_RM8 392,15744
    MOV_IMM8_2_RM8        = 0xc6,xc6392,15744
    MOV_IMM32_2_RM32 393,15778
    MOV_IMM32_2_RM32      = 0xc7,xc7393,15778
    MOV_IMM_RM_ABS 394,15812
    MOV_IMM_RM_ABS        = 0x05,x05394,15812
    MOV_IMM_XAX 395,15846
    MOV_IMM_XAX           = 0xb8,xb8395,15846
    ADD_EAX_IMM32 397,15881
    ADD_EAX_IMM32         = 0x05,x05397,15881
    CMP_EAX_IMM32 399,15916
    CMP_EAX_IMM32         = 0x3d,x3d399,15916
    JZ_REL8 400,15950
    JZ_REL8               = 0x74,x74400,15950
    JNZ_REL8 401,15984
    JNZ_REL8              = 0x75,x75401,15984
    REX_W 404,16030
    REX_W                 = 0x48,x48404,16030
    REX_B 405,16064
    REX_B                 = 0x41,x41405,16064
    REX_R 406,16098
    REX_R                 = 0x44,x44406,16098
#define DEBUG_LOOP 410,16143
#define ASSERT_ROOM(412,16165
allocate_remote_code_buffer(431,16990
free_remote_code_buffer(490,19451
inject_gencode_at_ldr(497,19615
#define GET_PROC_ADDR_BAD_ADDR 523,20913
#define INSERT_INT(600,24369
#define INSERT_ADDR(605,24536
# define INSERT_PUSH_ALL_REG(610,24687
# define INSERT_PUSH_ALL_REG(636,25596
# define INSERT_POP_ALL_REG(641,25679
# define INSERT_POP_ALL_REG(667,26611
#define PUSH_IMMEDIATE(671,26681
#define PUSH_SHORT_IMMEDIATE(675,26774
# define PUSH_PTRSZ_IMMEDIATE(680,26897
# define PUSH_PTRSZ_IMMEDIATE(692,27387
#define MOV_ESP_TO_EAX(696,27461
# define MOV_EAX_TO_PARAM_0(703,27658
# define MOV_EAX_TO_PARAM_1(708,27843
# define MOV_EAX_TO_PARAM_2(713,28027
# define MOV_EAX_TO_PARAM_3(718,28211
# define MOV_TOS_TO_PARAM_0(723,28398
# define MOV_TOS_TO_PARAM_1(729,28615
# define MOV_TOS_TO_PARAM_2(735,28831
# define MOV_TOS_TO_PARAM_3(741,29047
#define ADD_TO_EAX(749,29311
#define ADD_IMM8_TO_ESP(754,29458
#define CMP_TO_EAX(760,29663
#define INSERT_REL32_ADDRESS(765,29810
# define CALL(773,30181
# define CALL(780,30431
#define PROT_IN_ECX 788,30762
#define CHANGE_PROTECTION(789,30829
#undef INSERT_INT990,40796
#undef PUSH_IMMEDIATE991,40814
#undef PUSH_SHORT_IMMEDIATE992,40836
#undef MOV_ESP_TO_EAX993,40864
#undef ADD_TO_EAX994,40886
#undef INSERT_REL32_ADDRESS995,40904
#undef CALL996,40932
#undef PROT_IN_ECX997,40944
#undef CHANGE_PROTECTION998,40963
#define APP 1007,41076
#define GDC 1008,41106
inject_gencode_earliest(1014,41302
inject_into_new_process(1202,49525

win32/inject_shared.c,2448
# undef assert64,2403
#define assert 67,2466
#  define display_warning 72,2704
#   undef ASSERT74,2760
#   define ASSERT(77,2804
#   define ASSERT(79,2891
#  define display_warning 82,3029
# define ASSERT(85,3127
# define display_error(86,3165
# define display_warning(87,3193
#define MAX_RUNVALUE_LENGTH 90,3231
# define VERBOSE 92,3333
# define VERBOSE 94,3358
    REGISTRY_DEFAULT,98,3400
    REGISTRY_32,100,3493
    REGISTRY_64,101,3555
} reg_platform_t;102,3611
ignore_assert(107,3741
report_dynamorio_problem(113,3826
notcore_mutex_lock(131,4506
notcore_mutex_unlock(139,4643
display_verbose_message(145,4706
double_strrchr(199,6935
wchar_to_char(212,7177
set_registry_parameter(242,8404
get_registry_parameter(271,9280
get_remote_process_ldr_status(365,13442
get_process_imgname_cmdline(400,14487
get_rununder_value(487,17629
#define DIRSEP 502,18081
#define ALT_DIRSEP 503,18101
double_wcsrchr(510,18212
w_get_short_name(523,18478
get_commandline_qualifier(556,19731
    QUALIFIED_FULL_NAME,619,21679
    QUALIFIED_SHORT_NAME,620,21705
    UNQUALIFIED_FULL_NAME,621,21731
    UNQUALIFIED_SHORT_NAME,622,21758
} qualified_name_type_t;623,21786
#define NAME_TYPE_IS_UNQUALIFIED(625,21812
#define NAME_TYPE_IS_SHORT(627,21938
commandline_qualifier_needed(646,22657
get_process_qualified_name(683,24346
get_own_qualified_name(778,28732
get_own_unqualified_name(793,29244
get_own_short_qualified_name(809,29803
get_own_short_unqualified_name(824,30306
get_subkey_parameter(844,31027
get_process_parameter_internal(895,33114
get_process_parameter(930,34423
get_parameter(938,34703
get_parameter_ex(946,34994
get_parameter_32(954,35214
get_parameter_64(962,35501
get_unqualified_parameter(972,35876
set_process_parameter(994,37011
get_parameter_from_registry(1027,38525
get_process_parameter_ex(1037,38893
get_process_parameter(1068,40170
get_parameter_64(1076,40379
is_nt_or_custom_safe_mode(1087,40664
is_windows_version_nt(1134,42793
is_windows_version_vista_plus(1144,43050
is_safe_mode(1154,43310
        MINIMAL 1160,43490
        NETWORK 1161,43511
systemwide_inject_enabled(1197,44749
check_commandline_match(1222,45770
systemwide_should_inject_common(1276,47841
systemwide_should_preinject_64(1369,51331
systemwide_should_inject(1376,51502
systemwide_should_preinject(1382,51664
check_for_run_once(1399,52372
test(1441,53964
nametest(1451,54216
main(1478,55122

win32/inject_shared.h,242
#define INJECT_SHARED_H44,1965
    INJECT_FALSE 48,2084
    INJECT_TRUE 49,2109
    INJECT_EXCLUDED 50,2134
    INJECT_EXPLICIT 51,2159
} inject_setting_mask_t;52,2183
# define double_tcsrchr 180,6335
# define double_tcsrchr 182,6380

win32/injector.c,2489
#define WIN32_LEAN_AND_MEAN53,2342
#define VERBOSE 73,2758
# define DO_VERBOSE(75,2788
# undef printf76,2813
# define VERBOSE_PRINT 77,2828
# define DO_VERBOSE(79,2864
# define VERBOSE_PRINT(80,2888
#define FP 82,2923
#define HANDLE_CONTROL_C 89,3208
static int limit;92,3254
static BOOL showmem;93,3289
static BOOL showstats;94,3310
static BOOL inject;95,3333
static BOOL force_injection;96,3353
static BOOL use_environment 97,3382
static const char *ops_param;ops_param102,3709
static double wallclock;103,3739
# undef assert110,3935
#define assert 113,3998
#undef ASSERT115,4113
#   define ASSERT(119,4188
#   define ASSERT(121,4274
# define display_error(124,4381
# define ASSERT(125,4420
display_error_helper(133,4589
internal_error(153,5212
# define FILENAME_LENGTH 156,5291
# define FILENAME_LENGTH 159,5371
display_error(172,5720
BOOL WINAPI HandlerRoutine(186,6022
typedef struct _dr_inject_info_t 199,6391
    PROCESS_INFORMATION pi;200,6426
    bool using_debugger_injection;201,6454
    char image_name[image_name202,6489
} dr_inject_info_t;203,6524
dr_inject_get_image_name(207,6569
dr_inject_get_process_handle(217,6763
dr_inject_get_process_id(227,6984
dr_inject_using_debug_key(237,7177
dr_inject_print_stats(247,7385
static BOOL created_product_reg_key;309,9742
static BOOL created_image_reg_key;310,9779
static HKEY image_name_key;311,9814
static HKEY product_name_key;312,9842
#define DO_ENV_VARS(321,10184
#define TEMP_CMD(330,10587
set_registry_from_env(340,10985
#undef TEMP_CMD342,11058
#define TEMP_CMD(343,11074
#undef TEMP_CMD 354,11374
#define TEMP_CMD(355,11394
#undef TEMP_CMD420,14290
#define TEMP_CMD(421,14306
unset_registry_from_env(448,15904
#undef TEMP_CMD455,16063
#define TEMP_CMD(456,16079
#undef DO_ENV_VARS487,17563
#undef TEMP_CMD488,17582
static HKEY debugger_key;500,17994
static TCHAR debugger_key_full_name[debugger_key_full_name501,18020
static TCHAR debugger_key_value[debugger_key_value502,18067
static DWORD debugger_key_value_size 503,18112
using_debugger_key_injection(508,18255
void unset_debugger_key_injection(546,19688
void restore_debugger_key_injection(562,20191
enum { MAX_CMDLINE 585,21080
get_image_name(588,21136
exe_is_right_bitwidth(606,21756
append_app_arg_and_space(643,22981
dr_inject_process_create(726,27051
dr_inject_process_inject(796,29575
dr_inject_process_run(877,32822
dr_inject_wait_for_child(889,33099
dr_inject_process_exit(902,33508

win32/loader.c,2596
# define IMAGE_ORDINAL_FLAG 79,3254
# define IMAGE_ORDINAL_FLAG 81,3309
static char systemroot[systemroot91,3641
static bool windbg_cmds_initialized;93,3680
typedef BOOL (WINAPI *dllmain_t)dllmain_t96,3752
static PEB *private_peb;private_peb128,4681
static bool private_peb_initialized 129,4706
static void *pre_fls_data;pre_fls_data131,4833
static void *pre_nt_rpc;pre_nt_rpc133,4951
static void *pre_nls_cache;pre_nls_cache135,5059
static bool swapped_to_app_peb;137,5146
typedef ULONG_PTR (NTAPI *ntdll_NtTickCount_t)ntdll_NtTickCount_t146,5470
static ntdll_NtTickCount_t ntdll_NtTickCount;147,5524
os_loader_init_prologue(158,5845
os_loader_init_epilogue(292,12330
os_loader_exit(308,12785
os_loader_thread_init_prologue(338,13841
os_loader_thread_init_epilogue(386,16067
os_loader_thread_exit(401,16550
get_private_peb(409,16709
should_swap_peb_pointer(425,17327
get_teb_field(432,17479
set_teb_field(444,17760
is_using_app_peb(457,18092
swap_peb_pointer_ex(504,19947
swap_peb_pointer(602,25023
restore_peb_pointer_for_thread(611,25293
os_should_swap_state(635,26504
os_using_app_state(641,26612
os_swap_context(651,26821
privload_add_areas(662,27113
privload_remove_areas(669,27275
privload_unmap_file(675,27410
privload_unload_imports(681,27494
privload_map_and_relocate(718,28801
privload_lookup_locate_and_load(822,32888
privload_load_private_library(842,33586
privload_load_finalized(856,34002
privload_process_imports(863,34182
privload_get_import_descriptor(963,38309
privload_process_one_import(993,39526
privload_call_entry(1102,44406
map_api_set_dll(1163,47020
privload_map_name(1318,55291
privload_locate_and_load(1337,55994
privload_init_search_paths(1407,58947
privload_disable_console_init(1439,60379
privload_redirect_setup(1600,67123
privload_redirect_imports(1613,67554
private_lib_handle_cb(1620,67788
# define SECURITY_COOKIE_INITIAL 1630,68008
# define SECURITY_COOKIE_INITIAL 1632,68066
#define SECURITY_COOKIE_16BIT_INITIAL 1634,68117
get_tick_count(1637,68180
privload_set_security_cookie(1652,68674
privload_os_finalize(1733,71705
add_mod_to_drmarker(1750,72211
#define WINDBG_ADD_PATH 1767,72900
privload_add_windbg_cmds(1787,73846
privload_add_windbg_cmds_post_init(1819,74937
typedef NTSTATUS (NTAPI *nt_protect_t)nt_protect_t1843,75971
static nt_protect_t bootstrap_ProtectVirtualMemory;1845,76115
bootstrap_protect_virtual_memory(1849,76215
bootstrap_tolower(1861,76610
bootstrap_strcmp(1870,76739
privload_bootstrap_get_export(1900,77430
privload_bootstrap_dynamorio_imports(1954,79324

win32/module.c,8613
typedef struct _version_info_t 55,2290
    version_number_t file_version;56,2323
    version_number_t product_version;57,2358
    wchar_t *company_name;company_name58,2396
    wchar_t *product_name;product_name59,2423
    wchar_t *original_filename;original_filename60,2450
} version_info_t;61,2482
typedef struct _pe_module_import_iterator_t 76,2986
    dr_module_import_t module_import;77,3032
    byte *mod_base;mod_base79,3111
    size_t mod_size;80,3131
    IMAGE_IMPORT_DESCRIPTOR *cur_module;cur_module84,3273
    IMAGE_IMPORT_DESCRIPTOR safe_module;85,3314
    byte *imports_end;imports_end86,3393
    bool hasnext;87,3473
} pe_module_import_iterator_t;88,3552
typedef struct _pe_symbol_import_iterator_t 90,3584
    dr_symbol_import_t symbol_import;91,3630
    dr_symbol_import_t next_symbol;92,3713
    byte *mod_base;mod_base94,3783
    dr_module_import_iterator_t *mod_iter;mod_iter95,3803
    IMAGE_IMPORT_DESCRIPTOR *cur_module;cur_module96,3884
    IMAGE_THUNK_DATA *cur_thunk;cur_thunk98,4023
    bool hasnext;99,4056
} pe_symbol_import_iterator_t;100,4135
static generic_table_t *section2file_table;section2file_table107,4341
#define INIT_HTABLE_SIZE_SECTION 108,4385
typedef struct _section_to_file_t 110,4447
    HANDLE section_handle;111,4483
    const char *file_path;file_path112,4510
} section_to_file_t;113,4556
section_to_file_free(116,4590
section_to_file_lookup(124,4875
section_to_file_add_common(138,5326
section_to_file_add_wide(163,6278
section_to_file_add(170,6501
section_to_file_remove(177,6715
typedef struct export_entry_t 201,7494
    app_pc  entry_point;202,7526
    char *export_name;export_name203,7596
} export_entry_t;204,7619
typedef struct module_info_t 214,7992
    app_pc start;215,8023
    app_pc end;216,8041
    char * module_name;217,8097
    size_t exports_size;218,8121
    uint   exports_num;219,8187
    export_entry_t *exports_table;exports_table221,8251
} module_info_t;239,9136
typedef struct module_info_vector_t 253,9607
    struct module_info_t *buf;buf254,9645
    int   capacity;255,9676
    int   length;256,9696
    mutex_t lock;259,9829
} module_info_vector_t;260,9847
print_module_list(267,10099
module_info_compare(289,10697
lookup_module_info(308,11273
#define INITIAL_MODULE_NUMBER 337,12143
module_info_create(346,12434
remove_module_info_vector(400,14304
remove_module_info(445,15704
module_cleanup(466,16346
module_info_exit(492,17180
export_entry_compare(499,17275
find_predecessor(512,17721
remove_export_duplicates(538,18272
print_symbolic_address(563,18801
add_module_info(658,23238
print_ldr_data(804,30120
static LDR_MODULE *DR_module;DR_module875,33553
hide_from_module_lists(898,34725
print_modules(1001,39336
print_modules_ldrlist_and_ourlist(1008,39611
print_modules_safe(1126,44704
check_for_unsupported_modules(1173,46646
#define DOS_HEADER(1225,48825
#define NT_HEADER(1226,48880
#define VERIFY_DOS_HEADER(1229,49029
#define VERIFY_NT_HEADER(1234,49246
on_subset_of_pages(1246,49825
is_readable_pe_base(1253,50039
get_image_section_unpadded_size(1284,51381
get_image_section_size(1310,52925
get_image_section_map_size(1322,53497
get_image_section_file_offs(1342,54674
print_module_section_info(1351,55058
is_in_executable_file_section(1408,57643
module_pc_section_lookup(1536,64051
is_range_in_code_section(1550,64728
is_in_code_section(1563,65409
is_in_dot_data_section(1575,65940
is_in_xdata_section(1588,66572
is_in_any_section(1612,67697
get_executable_segment(1623,68154
is_mapped_as_image(1636,68728
module_get_nth_segment(1657,69412
module_get_header_size(1670,69856
get_named_section_bounds(1680,70126
get_IAT_section_bounds(1696,70664
is_IAT(1711,71256
is_in_IAT(1734,72043
get_module_entry(1746,72327
get_module_base(1767,73267
get_module_preferred_base(1783,73784
in_same_module(1801,74391
get_dll_short_name(1819,75170
get_all_module_short_names_uncached(1864,77240
get_module_short_name_uncached(2019,83911
get_module_short_name(2042,84879
get_module_preferred_base_delta(2056,85444
get_ldr_module_by_pc(2074,85997
get_module_name(2142,88539
get_module_base_reloc(2155,88916
get_module_characteristics(2225,91315
get_module_cor20_header(2245,92026
module_has_cor20_header(2309,94304
get_module_magic(2319,94566
module_is_32bit(2330,94816
module_is_64bit(2336,94939
is_module_patch_region(2353,95646
#define IMAGE_REL_BASED_TYPE(2475,101911
#define IMAGE_REL_BASED_OFFSET_MASK 2476,101960
#define IMAGE_REL_BASED_OFFSET(2477,102004
process_one_relocation(2494,102701
add_SEH_address(2597,107003
add_SEH_to_rct_table(2616,107759
rct_add_rip_rel_addr(2808,117521
rct_add_exports(2868,120300
find_relocation_references(2986,125669
find_address_references_by_region(3149,132766
add_rct_module(3196,134894
rct_analyze_module_at_load(3428,146802
rct_analyze_module_at_violation(3460,148130
rct_process_module_mmap(3519,150727
rct_is_exported_function(3688,158740
os_modules_init(3717,159619
os_modules_exit(3735,160261
free_module_names(3741,160356
os_module_area_reset(3757,160910
get_module_info_pe(3812,163160
os_module_area_init(3878,165944
get_module_preferred_base_safe(3983,170977
os_get_module_info(4015,172162
os_get_module_info_all_names(4063,174042
os_module_get_rct_htable(4133,176704
os_module_store_IAT_code(4145,176961
bool os_module_cmp_IAT_code(4164,177722
module_area_free_IAT(4201,179471
bool os_module_free_IAT_code(4220,180124
module_apply_relocations(4249,181114
typedef struct reloc_iterator_t 4397,187539
    app_pc relocs;4398,187573
    app_pc relocs_end;4399,187639
    app_pc relocs_block_end;4400,187702
    uint rva_page;4401,187768
    app_pc module_base;4402,187823
} reloc_iterator_t;4421,188786
module_reloc_iterator_next_block_internal(4424,188819
module_reloc_iterator_start(4455,190113
module_reloc_iterator_next(4524,192745
module_make_writable(4611,196186
module_restore_permissions(4642,197521
module_file_relocatable(4665,198274
module_rebase(4728,201069
module_dump_pe_file(4824,204635
ensure_section_readable(4937,209549
restore_unreadable_section(4979,211321
module_region_compare(5027,213198
module_pe_section_compare(5044,213936
aslr_compare_header(5137,218249
module_contents_compare(5248,222777
#define CHECK_SAFE_READ(5462,231916
#define GET_FOLLOWING_ADDRESS(5473,232542
get_resource_directory_entries(5476,232637
get_module_resource_directory(5482,232812
get_resource_directory_entry_by_id(5539,235343
get_module_resource_version_data(5583,237071
typedef struct ver_rsrc_header 5776,246007
    size_t length;5777,246040
    size_t value_length;5778,246094
    uint type;5779,246150
    wchar_t *key;key5780,246165
    size_t key_length;5781,246183
} ver_rsrc_header_t;5782,246249
typedef struct vs_version_info 5783,246270
    VS_FIXEDFILEINFO *info;info5784,246303
    void *string_or_var_info;string_or_var_info5785,246350
} vs_version_info_t;5789,246636
typedef struct string_file_info 5790,246657
    size_t size;5791,246691
    void *string_table;string_table5792,246751
} string_file_info_t;5793,246807
typedef struct string_table 5794,246829
    size_t size;5795,246859
    wchar_t *lang;lang5796,246913
    void *string;string5797,246958
} string_table_t;5798,247007
typedef struct rsrc_string 5799,247025
    size_t key_length;5800,247054
    size_t value_length;5801,247120
    wchar_t *key;key5802,247188
    wchar_t *value;value5803,247206
} rsrc_string_t;5804,247226
#define RSRC_TYPE_STRING 5807,247321
#define RSRC_TYPE_BINARY 5808,247348
#define RSRC_ALIGNMENT 5811,247426
read_version_struct_header(5821,247951
read_vs_version_info(5886,250535
read_string_or_var_info(5934,252473
read_string_table(6009,255605
read_rsrc_string(6058,257578
get_module_resource_version_info(6128,260768
get_module_company_name(6243,265998
get_module_original_filename(6260,266602
get_loader_lock_owner(6277,267180
get_shared_lib_name(6286,267373
os_module_has_dynamic_base(6292,267451
safe_read_cur_module(6306,267825
dr_module_import_iterator_start(6328,268643
dr_module_import_iterator_hasnext(6356,269627
dr_module_import_iterator_next(6363,269850
dr_module_import_iterator_stop(6385,270738
pe_symbol_import_iterator_read_thunk(6397,271113
pe_symbol_import_iterator_first_thunk(6424,272103
pe_symbol_import_iterator_next_module(6442,272700
dr_symbol_import_iterator_start(6462,273422
dr_symbol_import_iterator_hasnext(6496,274541
dr_symbol_import_iterator_next(6503,274764
dr_symbol_import_iterator_stop(6527,275647

win32/module.h,750
#define MODULE_H35,1769
#define OS_IMAGE_READ 42,1963
#define OS_IMAGE_WRITE 43,2007
#define OS_IMAGE_EXECUTE 44,2052
# define IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE 47,2146
typedef struct _os_module_data_t 50,2208
    app_pc preferred_base;51,2243
    uint checksum;52,2318
    uint timestamp;53,2379
    size_t module_internal_size;54,2442
    size_t code_size;56,2533
    version_number_t file_version;59,2632
    version_number_t product_version;60,2667
    char *company_name;company_name61,2705
    char *product_name;product_name62,2729
    HANDLE noclobber_section_handle;73,3198
    rct_module_table_t rct_table[rct_table87,3736
    byte *iat_code;iat_code94,3981
    size_t iat_len;95,4001
} os_module_data_t;96,4021

win32/module_shared.c,1520
# define ASSERT(47,2225
# define ASSERT_NOT_REACHED(48,2244
# define ASSERT_NOT_IMPLEMENTED(49,2274
# define DODEBUG(50,2309
# define DOCHECK(51,2329
# define DECLARE_NEVERPROT_VAR(52,2352
# define ALIGN_BACKWARD(53,2412
# define PAGE_SIZE 54,2488
# undef strcasecmp74,3120
# define strcasecmp 75,3139
# define wcscasecmp 76,3168
# undef TRY_EXCEPT_ALLOW_NO_DCONTEXT77,3197
# define TRY_EXCEPT_ALLOW_NO_DCONTEXT(78,3234
# undef ASSERT_OWN_NO_LOCKS79,3293
# define ASSERT_OWN_NO_LOCKS(80,3321
# undef ASSERT_CURIOSITY81,3384
# define ASSERT_CURIOSITY(82,3409
# define convert_data_to_function(88,3725
# undef LOG 89,3791
# define LOG(90,3832
is_readable_without_exception(108,4623
get_module_exports_directory_common(146,6281
get_module_exports_directory_check_common(224,9491
get_proc_address_common(279,12420
get_module_exports_directory(439,19409
get_module_exports_directory_check(446,19627
get_proc_address(455,19947
get_proc_address_ex(464,20238
get_proc_address_by_ordinal(471,20497
get_proc_address_resolve_forward(479,20763
get_ldr_module_by_name(538,23575
typedef struct ALIGN_VAR(591,25758
typedef struct ALIGN_VAR(601,26012
typedef struct ALIGN_VAR(614,26464
typedef void (*void_func_t)void_func_t633,27014
get_own_x64_peb(651,27531
get_ldr_data_64(667,27867
get_ldr_module_64(680,28244
get_module_handle_64(733,30627
get_proc_address_64(744,30906
load_library_64(755,31273
free_library_64(835,34599
thread_get_context_64(850,35051
thread_set_context_64(864,35519

win32/native_pe.c,114
native_module_init(41,1834
native_module_exit(47,1887
native_module_hook(53,1940
native_module_unhook(59,2043

win32/ntdll.c,11140
# define ASSERT(45,2039
# define ASSERT_CURIOSITY(46,2058
# define ASSERT_NOT_REACHED(47,2087
# define ASSERT_NOT_IMPLEMENTED(48,2117
# define DODEBUG(49,2152
# define DOCHECK(50,2172
# define DEBUG_DECLARE(51,2195
# define INVALID_FILE 54,2411
# define snprintf 55,2454
# undef ASSERT_OWN_NO_LOCKS68,2872
# define ASSERT_OWN_NO_LOCKS(69,2900
# define VERBOSE 88,3501
# define VERBOSE 90,3526
# define NTPRINT(96,3677
# define NTPRINT(98,3742
uint context_xstate 102,3796
bool avx_supported 103,3821
# define GET_SYSCALL(108,4070
# define GET_RAW_SYSCALL 109,4138
# define NT_SYSCALL(110,4175
# define NTLOG(111,4231
# define NTLOG 113,4257
    DR_SYSCALL_INT2E,136,5527
    DR_SYSCALL_SYSENTER,137,5549
    DR_SYSCALL_SYSCALL,138,5574
    DR_SYSCALL_WOW64,139,5598
} dr_which_syscall_t;140,5620
# define GET_RAW_SYSCALL(146,5830
# define GET_SYSCALL(151,6061
# define NT_RAW_SYSCALL(171,7072
# define NT_SYSCALL(188,8479
#  define SYSNUM_OFFS 195,8755
#  define SYSNUM_OFFS 197,8786
# define CHECK_SYSNUM_AT(199,8818
# define ALLOW_HOOKER(204,9118
# define TEB_TLS64_OFFSET 220,9674
# define TEB_TLS64_OFFSET 222,9713
#undef CreateFile315,13669
typedef struct _context_chunk_t 351,15072
    LONG offset;352,15106
    DWORD length;353,15123
} context_chunk_t;354,15141
typedef struct _context_ex_t 357,15215
    context_chunk_t all;358,15246
    context_chunk_t legacy;359,15271
    context_chunk_t xstate;360,15299
} context_ex_t;361,15327
typedef int (WINAPI *ntdll_RtlGetExtendedContextLength_t)ntdll_RtlGetExtendedContextLength_t367,15537
typedef int (WINAPI *ntdll_RtlInitializeExtendedContext_t)ntdll_RtlInitializeExtendedContext_t368,15610
typedef CONTEXT* (WINAPI *ntdll_RtlLocateLegacyContext_t)ntdll_RtlLocateLegacyContext_t370,15706
ntdll_RtlGetExtendedContextLength_t ntdll_RtlGetExtendedContextLength 371,15788
ntdll_RtlInitializeExtendedContext_t ntdll_RtlInitializeExtendedContext 372,15868
ntdll_RtlLocateLegacyContext_t ntdll_RtlLocateLegacyContext 373,15948
typedef NTSTATUS (WINAPI *NtGetNextThread_t)NtGetNextThread_t377,16158
NtGetNextThread_t NtGetNextThread;383,16592
uint sysenter_tls_offset 393,16919
static bool nt_wrappers_intercepted 397,17226
syscalls_init_options_read(400,17276
syscalls_init(416,17850
use_ki_syscall_routines(568,24980
nt_get_context_extended_functions(585,25782
nt_init_dynamic_syscall_wrappers(603,26558
ntdll_init(610,26739
ntdll_exit(628,27377
query_thread_info(638,27549
query_seg_descriptor(652,28050
query_win32_start_addr(669,28673
query_system_info(683,29096
get_thread_id(703,29745
get_process_id(709,29842
get_last_error(715,29933
set_last_error(721,30002
get_stderr_handle(728,30116
get_stdout_handle(737,30292
get_stdin_handle(746,30469
is_thread_exited(755,30657
thread_id_from_handle(801,32677
query_process_info(813,32971
process_id_from_handle(827,33416
process_id_from_thread_handle(839,33704
process_handle_from_id(850,33961
thread_handle_from_id(871,34555
get_peb(898,35307
get_own_peb(909,35513
get_teb(926,36017
static app_pc ntdll_base;936,36222
get_ntdll_base(939,36256
set_ntdll_base(954,36696
is_in_ntdll(962,36825
context_ymmh_saved_area(977,37212
context_to_mcontext(1021,39041
mcontext_to_context(1083,41436
# define HEX(1147,44107
# define RAW(1148,44131
get_own_context_integer_control(1188,45851
get_own_context(1210,46824
#define TLS_SPAREBYTES_SLOTS 1231,47627
static bool alt_tls_spare_taken[alt_tls_spare_taken1233,47736
# define TLS_POSTTEB_SLOTS 1235,47802
static bool alt_tls_post_taken[alt_tls_post_taken1236,47832
# define TLS_POSTTEB_BASE_OFFS 1238,47930
tls_exit(1242,48029
alt_tls_acquire_helper(1251,48142
alt_tls_acquire(1294,49714
alt_tls_release_helper(1324,50886
alt_tls_release(1339,51302
tls_segment_offs(1366,52224
tls_find_free_block_sequence(1379,52692
tls_mark_taken_block_sequence(1459,55712
tls_alloc_helper(1477,56432
tls_alloc(1704,66618
tls_calloc(1715,66978
tls_free_helper(1722,67185
tls_free(1795,70269
tls_cfree(1801,70362
get_process_mem_stats(1810,70586
get_process_mem_quota(1822,70939
get_process_handle_count(1834,71290
get_process_load(1844,71555
is_wow64_process(1869,72429
nt_get_drive_map(1903,73604
nt_remote_allocate_virtual_memory(1914,73940
nt_remote_free_virtual_memory(1939,74930
nt_allocate_virtual_memory(1952,75351
nt_commit_virtual_memory(1962,75703
nt_decommit_virtual_memory(1980,76361
nt_free_virtual_memory(1996,76944
protect_virtual_memory(2012,77560
nt_remote_protect_virtual_memory(2025,78001
nt_remote_query_virtual_memory(2042,78687
query_virtual_memory(2056,79265
get_mapped_file_name(2078,79970
nt_raw_read_virtual_memory(2102,80910
nt_read_virtual_memory(2117,81532
nt_raw_write_virtual_memory(2125,81834
nt_write_virtual_memory(2140,82398
nt_continue(2149,82748
nt_get_context(2158,82981
nt_set_context(2182,84061
nt_thread_suspend(2192,84385
nt_thread_resume(2207,84989
nt_thread_iterator_next(2218,85382
nt_terminate_thread(2228,85673
nt_terminate_process(2243,86277
nt_terminate_process_for_app(2258,86872
am_I_sole_thread(2267,87176
check_sole_thread(2277,87446
nt_create_and_set_timer(2287,87601
        NotificationTimer,2292,87714
        SynchronizationTimer2293,87741
nt_sleep(2319,88743
nt_yield(2331,89080
get_section_address(2338,89168
get_section_attributes(2354,89665
nt_raw_close(2381,90584
close_handle(2389,90716
duplicate_handle(2396,90825
nt_get_handle_access_rights(2421,91870
nt_get_object_name(2435,92327
wchar_to_unicode(2446,92699
char_to_unicode(2460,93112
char_to_ansi(2467,93283
query_full_attributes_file(2479,93633
nt_query_value_key(2498,94184
reg_create_key(2517,95025
reg_open_key(2541,95734
reg_close_key(2570,96575
reg_delete_key(2577,96644
reg_query_value(2598,97424
reg_set_key_value(2640,98775
reg_set_dword_key_value(2659,99368
reg_flush_key(2678,100007
reg_enum_key(2700,100754
reg_enum_value(2740,102186
env_get_value(2771,103214
get_current_user_token(2793,104026
get_primary_user_token(2820,104811
get_primary_owner_token(2845,105463
get_current_user_SID(2868,106078
get_process_primary_SID(2896,106906
get_sd_pointers(2919,107458
get_owner_sd(2964,109164
initialize_security_descriptor(2984,109665
set_owner_sd(2998,110171
length_sid(3027,111092
equal_sid(3035,111248
get_application_name(3069,112298
get_application_short_name(3081,112575
get_application_short_unqualified_name(3093,112900
get_application_pid(3106,113334
get_process_param_buf(3120,113631
get_application_cmdline(3147,114687
query_time_100ns(3155,114896
query_time_millis(3170,115422
query_time_seconds(3177,115559
convert_100ns_to_system_time(3190,116001
convert_system_time_to_100ns(3206,116554
query_system_time(3223,117060
set_primary_user_owner(3234,117330
nt_create_file(3269,118698
create_file(3321,120855
nt_open_file(3363,122802
nt_delete_file(3383,123360
nt_flush_file_buffers(3423,124896
read_file(3434,125155
write_file(3461,126183
close_file(3489,127333
create_iocompletion(3495,127402
typedef struct _FILE_PIPE_INFORMATION 3518,128196
    ULONG ReadModeMessage;3519,128260
    ULONG WaitModeBlocking;3520,128287
} FILE_PIPE_INFORMATION, *PFILE_PIPE_INFORMATION;PFILE_PIPE_INFORMATION3521,128315
typedef struct _FILE_COMPLETION_INFORMATION 3523,128366
    HANDLE IoCompletionHandle;3524,128436
    ULONG CompletionKey;3525,128467
} FILE_COMPLETION_INFORMATION, *PFILE_COMPLETION_INFORMATION;PFILE_COMPLETION_INFORMATION3526,128492
open_pipe(3530,128622
#define STATUS_SHOW_MESSAGEBOX_UNDOCUMENTED 3615,132844
nt_messagebox(3618,132916
nt_raise_exception(3661,134561
nt_create_event(3677,135012
nt_close_event(3703,135777
nt_wait_event_with_timeout(3709,135852
nt_set_event(3723,136228
nt_clear_event(3749,137148
nt_signal_and_wait(3763,137400
nt_query_performance_counter(3782,138043
#define CTL_CODE(3800,138638
#define METHOD_BUFFERED 3805,138883
#define METHOD_IN_DIRECT 3806,138925
#define METHOD_OUT_DIRECT 3807,138967
#define METHOD_NEITHER 3808,139009
#define FILE_READ_ACCESS 3811,139100
#define FILE_WRITE_ACCESS 3812,139163
#define FSCTL_PIPE_TRANSCEIVE 3814,139227
static bool do_once_nt_pipe_transceive 3819,139460
nt_pipe_transceive(3828,139692
typedef struct _THREAD_IMPERSONATION_INFORMATION 3934,144651
    HANDLE ThreadImpersonationToken;3935,144702
} THREAD_IMPERSONATION_INFORMATION, *PTHREAD_IMPERSONATION_INFORMATION;PTHREAD_IMPERSONATION_INFORMATION3936,144739
get_thread_impersonation_token(3942,144903
set_thread_impersonation_token(3960,145332
nt_create_profile(3983,145960
nt_set_profile_interval(4011,146925
nt_query_profile_interval(4025,147244
nt_start_profile(4042,147604
nt_stop_profile(4054,147804
typedef struct _PORT_MESSAGE 4070,148155
    USHORT DataSize;4071,148186
    USHORT MessageSize;4072,148207
    USHORT MessageType;4073,148231
    USHORT VirtualRangesOffset;4074,148255
    CLIENT_ID ClientId;4075,148287
    ULONG MessageId;4076,148311
    ULONG SectionSize;4077,148332
} PORT_MESSAGE, *PPORT_MESSAGE;PPORT_MESSAGE4079,148376
typedef struct _CSRSS_MESSAGE 4081,148409
    ULONG Unknown1;4082,148441
    ULONG Opcode;4083,148461
    ULONG Status;4084,148479
    ULONG Unknown2;4085,148497
} CSRSS_MESSAGE, *PCSRSS_MESSAGE;PCSRSS_MESSAGE4086,148517
inform_csrss(4092,148685
        PORT_MESSAGE PortMessage;4110,149724
        CSRSS_MESSAGE CsrssMessage;4112,149808
        PROCESS_INFORMATION ProcessInformation;4114,149896
        CLIENT_ID Debugger;4115,149944
        ULONG CreationFlags;4116,149972
        ULONG VdmInfo[VdmInfo4117,150001
        ULONG Unknown[Unknown4121,150205
copy_environment(4147,151146
create_process_parameters(4172,151866
create_process(4218,154101
create_thread_common(4342,159348
create_thread(4441,163606
create_thread_have_stack(4485,165654
load_library(4536,168591
free_library(4563,169542
get_module_handle(4586,170445
#define LDR_GET_DLL_HANDLE_ARG1 4595,170845
nt_create_object_directory(4618,171704
nt_initialize_shared_directory(4674,174022
nt_open_object_directory(4742,176651
nt_close_object_directory(4788,178559
nt_get_symlink_target(4799,178883
nt_create_section(4874,182096
nt_open_section(4926,184008
are_mapped_files_the_same(4957,185110
nt_create_module_file(5005,186839
nt_query_file_info(5030,187861
nt_set_file_info(5054,188604
nt_query_volume_info(5082,189440
nt_query_security_object(5122,191069
initialize_known_SID(5159,192686
nt_initialize_context(5180,193307
nt_raw_CreateFile(5276,197051
nt_raw_OpenFile(5311,198159
nt_raw_OpenKey(5336,198861
nt_raw_OpenKeyEx(5355,199326
nt_raw_OpenProcessTokenEx(5378,200021
nt_raw_OpenThread(5399,200638
nt_raw_OpenThreadTokenEx(5420,201196
nt_raw_QueryAttributesFile(5443,201893
nt_raw_SetInformationFile(5460,202354
nt_raw_SetInformationThread(5483,203054
nt_raw_UnmapViewOfSection(5504,203711
nt_raw_MapViewOfSection(5555,205450
nt_raw_OpenProcess(5588,206532
nt_raw_QueryFullAttributesFile(5609,207098
nt_raw_CreateKey(5626,207582
nt_raw_OpenThreadToken(5653,208342
nt_raw_OpenProcessToken(5674,208911

win32/ntdll.h,44699
#define _NTDLL_H_ 48,2221
#define WIN32_LEAN_AND_MEAN50,2242
#define GET_NTDLL(74,3151
#define NT_CURRENT_PROCESS 88,3772
#define NT_CURRENT_THREAD 89,3829
typedef struct ALIGN_VAR(92,3897
#define DIRECTORY_QUERY 103,4192
#define DIRECTORY_TRAVERSE 104,4241
#define DIRECTORY_CREATE_OBJECT 105,4290
#define DIRECTORY_CREATE_SUBDIRECTORY 106,4339
#define DIRECTORY_ALL_ACCESS 107,4388
typedef struct _PEB_LDR_DATA 110,4497
    ULONG Length;111,4530
    BOOLEAN Initialized;112,4548
    PVOID SsHandle;113,4573
    LIST_ENTRY InLoadOrderModuleList;114,4593
    LIST_ENTRY InMemoryOrderModuleList;115,4631
    LIST_ENTRY InInitializationOrderModuleList;116,4671
} PEB_LDR_DATA, *PPEB_LDR_DATA;PPEB_LDR_DATA117,4719
typedef struct _LDR_MODULE 122,4914
    LIST_ENTRY InLoadOrderModuleList;123,4943
    LIST_ENTRY InMemoryOrderModuleList;124,4981
    LIST_ENTRY InInitializationOrderModuleList;125,5021
    PVOID BaseAddress;126,5069
    PVOID EntryPoint;127,5092
    ULONG SizeOfImage;128,5114
    UNICODE_STRING FullDllName;129,5137
    UNICODE_STRING BaseDllName;130,5169
    ULONG Flags;131,5201
    SHORT LoadCount;132,5218
    SHORT TlsIndex;133,5239
    LIST_ENTRY HashTableEntry;134,5259
    ULONG TimeDateStamp;136,5448
} LDR_MODULE, *PLDR_MODULE;PLDR_MODULE137,5473
# define OPT_HDR(151,6141
# define OPT_HDR_P(152,6207
# define OPT_HDR_BASE(153,6284
# define OPT_HDR(158,6579
# define OPT_HDR_P(159,6648
enum {MAX_MODULE_LIST_INFINITE_LOOP_THRESHOLD MAX_MODULE_LIST_INFINITE_LOOP_THRESHOLD163,6784
#define LDR_IMAGE_IS_DLL 168,6960
#define LDR_LOAD_IN_PROGRESS 169,7011
#define LDR_UNLOAD_IN_PROGRESS 170,7062
#define LDR_NO_DLL_CALLS 171,7113
#define LDR_PROCESS_ATTACHED 172,7164
#define LDR_MODULE_REBASED 173,7215
typedef struct _PEBLOCKROUTINE *PPEBLOCKROUTINE;PPEBLOCKROUTINE175,7267
typedef struct _PEB_FREE_BLOCK *PPEB_FREE_BLOCK;PPEB_FREE_BLOCK176,7316
typedef PVOID *PPVOID;PPVOID177,7365
typedef struct _RTL_BITMAP 179,7389
    ULONG  SizeOfBitMap;180,7418
    LPBYTE BitMapBuffer;181,7478
} RTL_BITMAP, *PRTL_BITMAP;PRTL_BITMAP182,7556
typedef const RTL_BITMAP *PCRTL_BITMAP;PCRTL_BITMAP183,7584
typedef struct _PEB 189,7777
    BOOLEAN                      InheritedAddressSpace;190,7863
    BOOLEAN                      ReadImageFileExecOptions;191,7949
    BOOLEAN                      BeingDebugged;192,8035
    BOOLEAN                      ImageUsesLargePages:ImageUsesLargePages195,8213
    BOOLEAN                      SpareBits:SpareBits196,8299
    BOOLEAN                      ImageUsesLargePages;198,8391
    HANDLE                       Mutant;200,8484
    PVOID                        ImageBaseAddress;201,8570
    PPEB_LDR_DATA                LoaderData;202,8656
    PRTL_USER_PROCESS_PARAMETERS ProcessParameters;203,8742
    PVOID                        SubSystemData;204,8828
    PVOID                        ProcessHeap;205,8914
    PRTL_CRITICAL_SECTION        FastPebLock;206,9000
    PVOID                        AtlThunkSListPtr;209,9135
    PVOID                        SparePtr2;210,9221
    PPEBLOCKROUTINE              FastPebLockRoutine;213,9341
    PPEBLOCKROUTINE              FastPebUnlockRoutine;214,9427
    DWORD                        EnvironmentUpdateCount;216,9520
    PVOID                        KernelCallbackTable;217,9606
    DWORD                        SystemReserved[SystemReserved220,9741
    DWORD                        SpareUlong;221,9827
    DWORD                        EvengLogSection;224,9947
    DWORD                        EventLog;225,10033
    PPEB_FREE_BLOCK              FreeList;227,10126
    DWORD                        TlsExpansionCounter;228,10212
    PRTL_BITMAP                  TlsBitmap;229,10298
    DWORD                        TlsBitmapBits[TlsBitmapBits230,10384
    PVOID                        ReadOnlySharedMemoryBase;231,10470
    PVOID                        ReadOnlySharedMemoryHeap;232,10556
    PPVOID                       ReadOnlyStaticServerData;233,10642
    PVOID                        AnsiCodePageData;234,10728
    PVOID                        OemCodePageData;235,10814
    PVOID                        UnicodeCaseTableData;236,10900
    DWORD                        NumberOfProcessors;237,10986
    DWORD                        NtGlobalFlag;238,11072
    LARGE_INTEGER                CriticalSectionTimeout;239,11158
    ptr_uint_t                   HeapSegmentReserve;240,11244
    ptr_uint_t                   HeapSegmentCommit;241,11330
    ptr_uint_t                   HeapDeCommitTotalFreeThreshold;242,11416
    ptr_uint_t                   HeapDeCommitFreeBlockThreshold;243,11502
    DWORD                        NumberOfHeaps;244,11588
    DWORD                        MaximumNumberOfHeaps;245,11674
    PPVOID                       ProcessHeaps;246,11760
    PVOID                        GdiSharedHandleTable;247,11846
    PVOID                        ProcessStarterHelper;248,11932
    DWORD                        GdiDCAttributeList;249,12018
    PRTL_CRITICAL_SECTION        LoaderLock;250,12104
    DWORD                        OSMajorVersion;251,12190
    DWORD                        OSMinorVersion;252,12276
    WORD                         OSBuildNumber;253,12362
    WORD                         OSCSDVersion;254,12448
    DWORD                        OSPlatformId;255,12534
    DWORD                        ImageSubsystem;256,12620
    DWORD                        ImageSubsystemMajorVersion;257,12706
    DWORD                        ImageSubsystemMinorVersion;258,12792
    ptr_uint_t                   ImageProcessAffinityMask;259,12878
    DWORD                        GdiHandleBuffer[GdiHandleBuffer261,12975
    DWORD                        GdiHandleBuffer[GdiHandleBuffer263,13067
    PVOID                        PostProcessInitRoutine;265,13160
    PVOID                        TlsExpansionBitmap;266,13246
    DWORD                        TlsExpansionBitmapBits[TlsExpansionBitmapBits267,13332
    DWORD                        SessionId;268,13418
    ULARGE_INTEGER               AppCompatFlags;269,13504
    ULARGE_INTEGER               AppCompatFlagsUser;270,13590
    PVOID                        pShimData;271,13676
    PVOID                        AppCompatInfo;272,13762
    UNICODE_STRING               CSDVersion;273,13848
    PVOID                        ActivationContextData;274,13934
    PVOID                        ProcessAssemblyStorageMap;275,14020
    PVOID                        SystemDefaultActivationContextData;276,14106
    PVOID                        SystemAssemblyStorageMap;277,14194
    ptr_uint_t                   MinimumStackCommit;278,14280
    PPVOID                       FlsCallback;279,14366
    LIST_ENTRY                   FlsListHead;280,14452
    PVOID                        FlsBitmap;281,14538
    DWORD                        FlsBitmapBits[FlsBitmapBits282,14624
    DWORD                        FlsHighIndex;283,14710
    PVOID                        WerRegistrationData;284,14796
    PVOID                        WerShipAssertPtr;285,14882
    PVOID                        pUnused;286,14968
    PVOID                        pImageHeaderHash;287,15054
        ULONG                    TracingFlags;289,15152
            ULONG                HeapTracingEnabled:HeapTracingEnabled291,15255
            ULONG                CritSecTracingEnabled:CritSecTracingEnabled292,15341
            ULONG                LibLoaderTracingEnabled:LibLoaderTracingEnabled293,15427
            ULONG                SpareTracingBits:SpareTracingBits294,15513
    ULONG64                      CsrServerReadOnlySharedMemoryBase;297,15617
} PEB, *PPEB;PPEB298,15703
# define _W64301,15731
typedef _W64 long LONG_PTR,304,15764
typedef _W64 long LONG_PTR, *PLONG_PTR;PLONG_PTR304,15764
typedef _W64 unsigned long ULONG_PTR,305,15804
typedef _W64 unsigned long ULONG_PTR, *PULONG_PTR;PULONG_PTR305,15804
typedef ULONG KAFFINITY;306,15855
typedef LONG KPRIORITY;308,15887
typedef struct _KERNEL_USER_TIMES 310,15912
    LARGE_INTEGER CreateTime;311,15948
    LARGE_INTEGER ExitTime;312,15978
    LARGE_INTEGER KernelTime;313,16006
    LARGE_INTEGER UserTime;314,16036
} KERNEL_USER_TIMES;315,16064
typedef struct _PROCESS_BASIC_INFORMATION 319,16124
    NTSTATUS ExitStatus;320,16168
    PPEB PebBaseAddress;321,16193
    ULONG_PTR AffinityMask;322,16218
    KPRIORITY BasePriority;323,16246
    ULONG_PTR UniqueProcessId;324,16274
    ULONG_PTR InheritedFromUniqueProcessId;325,16305
} PROCESS_BASIC_INFORMATION;326,16349
typedef PROCESS_BASIC_INFORMATION *PPROCESS_BASIC_INFORMATION;PPROCESS_BASIC_INFORMATION327,16378
typedef struct _DESCRIPTOR_TABLE_ENTRY 329,16442
    ULONG Selector;330,16483
    LDT_ENTRY Descriptor;331,16503
} DESCRIPTOR_TABLE_ENTRY, *PDESCRIPTOR_TABLE_ENTRY;PDESCRIPTOR_TABLE_ENTRY332,16529
typedef struct _VM_COUNTERS 335,16657
    SIZE_T PeakVirtualSize;336,16687
    SIZE_T VirtualSize;337,16715
    ULONG PageFaultCount;338,16739
    SIZE_T PeakWorkingSetSize;339,16765
    SIZE_T WorkingSetSize;340,16796
    SIZE_T QuotaPeakPagedPoolUsage;341,16823
    SIZE_T QuotaPagedPoolUsage;342,16859
    SIZE_T QuotaPeakNonPagedPoolUsage;343,16891
    SIZE_T QuotaNonPagedPoolUsage;344,16930
    SIZE_T PagefileUsage;345,16965
    SIZE_T PeakPagefileUsage;346,16991
} VM_COUNTERS;347,17021
typedef struct _PROCESS_DEVICEMAP_INFORMATION 350,17111
            HANDLE DirectoryHandle;353,17188
        } Set;354,17224
            ULONG DriveMap;356,17256
            UCHAR DriveType[DriveType357,17284
        } Query;358,17317
    ULONG Flags;361,17352
} PROCESS_DEVICEMAP_INFORMATION, *PPROCESS_DEVICEMAP_INFORMATION;PPROCESS_DEVICEMAP_INFORMATION363,17376
typedef char bool;367,17489
typedef unsigned __int64 uint64;369,17527
typedef struct _PROCESS_WS_WATCH_INFORMATION 398,18650
    PVOID FaultingPc;399,18697
    PVOID FaultingVa;400,18719
} PROCESS_WS_WATCH_INFORMATION, *PPROCESS_WS_WATCH_INFORMATION;PPROCESS_WS_WATCH_INFORMATION401,18741
typedef struct _POOLED_USAGE_AND_LIMITS 404,18866
    SIZE_T PeakPagedPoolUsage;405,18908
    SIZE_T PagedPoolUsage;406,18939
    SIZE_T PagedPoolLimit;407,18966
    SIZE_T PeakNonPagedPoolUsage;408,18993
    SIZE_T NonPagedPoolUsage;409,19027
    SIZE_T NonPagedPoolLimit;410,19057
    SIZE_T PeakPagefileUsage;411,19087
    SIZE_T PagefileUsage;412,19117
    SIZE_T PagefileLimit;413,19143
} POOLED_USAGE_AND_LIMITS;414,19169
typedef POOLED_USAGE_AND_LIMITS *PPOOLED_USAGE_AND_LIMITS;PPOOLED_USAGE_AND_LIMITS415,19196
typedef struct _PROCESS_ACCESS_TOKEN 421,19397
    HANDLE Token;426,19567
    HANDLE Thread;435,19966
} PROCESS_ACCESS_TOKEN, *PPROCESS_ACCESS_TOKEN;PPROCESS_ACCESS_TOKEN436,19985
#define JOB_OBJECT_LIMIT_WORKINGSET 441,20155
#define JOB_OBJECT_LIMIT_PROCESS_TIME 442,20218
#define JOB_OBJECT_LIMIT_JOB_TIME 443,20281
#define JOB_OBJECT_LIMIT_ACTIVE_PROCESS 444,20344
#define JOB_OBJECT_LIMIT_AFFINITY 445,20407
#define JOB_OBJECT_LIMIT_PRIORITY_CLASS 446,20470
#define JOB_OBJECT_LIMIT_PRESERVE_JOB_TIME 447,20533
#define JOB_OBJECT_LIMIT_SCHEDULING_CLASS 448,20596
#define JOB_OBJECT_LIMIT_PROCESS_MEMORY 451,20742
#define JOB_OBJECT_LIMIT_JOB_MEMORY 452,20805
#define JOB_OBJECT_LIMIT_DIE_ON_UNHANDLED_EXCEPTION 453,20868
#define JOB_OBJECT_LIMIT_BREAKAWAY_OK 454,20931
#define JOB_OBJECT_LIMIT_SILENT_BREAKAWAY_OK 455,20994
#define JOB_OBJECT_LIMIT_KILL_ON_JOB_CLOSE 456,21057
typedef struct _EXCEPTION_REGISTRATION 463,21322
     struct _EXCEPTION_REGISTRATION* prev;464,21363
     PVOID                   handler;465,21406
} EXCEPTION_REGISTRATION, *PEXCEPTION_REGISTRATION;PEXCEPTION_REGISTRATION466,21444
typedef struct _GDI_TEB_BATCH468,21497
    ULONG  Offset;470,21529
    HANDLE HDC;471,21548
    ULONG  Buffer[Buffer472,21564
} GDI_TEB_BATCH;473,21590
typedef struct _TEB 478,21698
    PEXCEPTION_REGISTRATION   ExceptionList;480,21840
    PVOID                     StackBase;481,21920
    PVOID                     StackLimit;482,22000
    PVOID                     SubSystemTib;483,22080
        PVOID                 FiberData;485,22172
        DWORD                 Version;486,22252
    PVOID                     ArbitraryUserPointer;488,22339
    struct _TEB*              Self;489,22419
    PVOID                     EnvironmentPointer;490,22499
    CLIENT_ID                 ClientId;491,22579
    PVOID                     ActiveRpcHandle;492,22659
    PVOID                     ThreadLocalStoragePointer;493,22739
    PEB*                      ProcessEnvironmentBlock;494,22819
    DWORD                     LastErrorValue;495,22899
    DWORD                     CountOfOwnedCriticalSections;496,22979
    PVOID                     CsrClientThread;497,23059
    PVOID                     Win32ThreadInfo;498,23139
    DWORD                     User32Reserved[User32Reserved499,23219
    DWORD                     UserReserved[UserReserved500,23299
    PVOID                     WOW32Reserved;501,23379
    DWORD                     CurrentLocale;502,23459
    DWORD                     FpSoftwareStatusRegister;503,23539
    PVOID /* kernel32 data */ SystemReserved1[SystemReserved1504,23619
    LONG                      ExceptionCode;505,23699
    PVOID                     ActivationContextStackPointer;506,23779
    byte                      SpareBytes1[SpareBytes1509,23943
    byte                      SpareBytes1[SpareBytes1511,24029
    DWORD                     TxFsContext;513,24116
    GDI_TEB_BATCH             GdiTebBatch;514,24196
    CLIENT_ID                 RealClientId;515,24276
    PVOID                     GdiCachedProcessHandle;516,24356
    DWORD                     GdiClientPID;517,24436
    DWORD                     GdiClientTID;518,24516
    PVOID                     GdiThreadLocalInfo;519,24596
    ptr_uint_t                Win32ClientInfo[Win32ClientInfo520,24676
    PVOID                     glDispatchTable[glDispatchTable521,24756
    ptr_uint_t                glReserved1[glReserved1522,24836
    PVOID                     glReserved2;523,24917
    PVOID                     glSectionInfo;524,24998
    PVOID                     glSection;525,25079
    PVOID                     glTable;526,25160
    PVOID                     glCurrentRC;527,25241
    PVOID                     glContext;528,25322
    DWORD                     LastStatusValue;529,25403
    UNICODE_STRING            StaticUnicodeString;530,25484
    WORD                      StaticUnicodeBuffer[StaticUnicodeBuffer531,25565
    PVOID                     DeallocationStack;532,25646
    PVOID                     TlsSlots[TlsSlots533,25727
    LIST_ENTRY                TlsLinks;534,25808
    PVOID                     Vdm;535,25889
    PVOID                     ReservedForNtRpc;536,25970
    PVOID                     DbgSsReserved[DbgSsReserved537,26051
    DWORD                     HardErrorMode;538,26132
    PVOID                     Instrumentation[Instrumentation539,26213
    PVOID                     SubProcessTag;540,26294
    PVOID                     EtwTraceData;541,26375
    PVOID                     WinSockData;542,26456
    DWORD                     GdiBatchCount;543,26537
    byte                      InDbgPrint;544,26618
    byte                      FreeStackOnTermination;545,26699
    byte                      HasFiberData;546,26780
    byte                      IdealProcessor;547,26861
    DWORD                     GuaranteedStackBytes;548,26942
    PVOID                     ReservedForPerf;549,27023
    PVOID                     ReservedForOle;550,27104
    DWORD                     WaitingOnLoaderLock;551,27185
    ptr_uint_t                SparePointer1;552,27266
    ptr_uint_t                SoftPatchPtr1;553,27347
    ptr_uint_t                SoftPatchPtr2;554,27428
    PPVOID                    TlsExpansionSlots;555,27509
    PVOID                     DeallocationBStore;557,27601
    PVOID                     BStoreLimit;558,27682
    DWORD                     ImpersonationLocale;560,27770
    DWORD                     IsImpersonating;561,27851
    PVOID                     NlsCache;562,27932
    PVOID                     pShimData;563,28013
    DWORD                     HeapVirtualAffinity;564,28094
    PVOID                     CurrentTransactionHandle;565,28175
    PVOID                     ActiveFrame;566,28256
    PVOID                     FlsData;567,28337
    PVOID                     PreferredLanguages;569,28503
    PVOID                     UserPrefLanguages;570,28584
    PVOID                     MergedPrefLanguages;571,28665
    ULONG                     MuiImpersonation;572,28746
        USHORT                CrossTebFlags;574,28839
        USHORT                SpareCrossTebFlags:SpareCrossTebFlags575,28920
        USHORT                SameTebFlags;579,29024
            USHORT            SafeThunkCall:SafeThunkCall581,29122
            USHORT            InDebugPrint:InDebugPrint582,29203
            USHORT            HasFiberData2:HasFiberData2583,29284
            USHORT            SkipThreadAttach:SkipThreadAttach584,29365
            USHORT            WerInShipAssertCode:WerInShipAssertCode585,29446
            USHORT            RanProcessInit:RanProcessInit586,29527
            USHORT            ClonedThread:ClonedThread587,29608
            USHORT            SuppressDebugMsg:SuppressDebugMsg588,29689
            USHORT            DisableUserStackWalk:DisableUserStackWalk589,29770
            USHORT            RtlExceptionAttached:RtlExceptionAttached590,29851
            USHORT            InitialThread:InitialThread591,29932
            USHORT            SessionAware:SessionAware592,30013
            USHORT            SpareSameTebBits:SpareSameTebBits593,30094
    PVOID                     TxnScopeEntercallback;596,30193
    PVOID                     TxnScopeExitCAllback;597,30274
    PVOID                     TxnScopeContext;598,30355
    ULONG                     LockCount;599,30436
    ULONG                     SpareUlong0;600,30517
    PVOID                     ResourceRetValue;601,30598
    PVOID                     ReservedForWdf;602,30679
    byte                      SafeThunkCall;604,30783
    byte                      BooleanSpare[BooleanSpare605,30864
} TEB;607,30952
typedef struct _THREAD_BASIC_INFORMATION 609,30960
    NTSTATUS ExitStatus;610,31026
    PNT_TIB TebBaseAddress;611,31051
    CLIENT_ID ClientId;612,31079
    KAFFINITY AffinityMask;613,31103
    KPRIORITY Priority;614,31131
    KPRIORITY BasePriority;615,31155
} THREAD_BASIC_INFORMATION, *PTHREAD_BASIC_INFORMATION;PTHREAD_BASIC_INFORMATION616,31183
typedef struct _SYSTEM_BASIC_INFORMATION 618,31240
    ULONG   Unknown;619,31283
    ULONG   MaximumIncrement;620,31304
    ULONG   PhysicalPageSize;621,31334
    ULONG   NumberOfPhysicalPages;622,31364
    ULONG   LowestPhysicalPage;623,31399
    ULONG   HighestPhysicalPage;624,31431
    ULONG   AllocationGranularity;625,31464
    PVOID   LowestUserAddress;626,31499
    PVOID   HighestUserAddress;627,31530
    ULONG_PTR ActiveProcessors;628,31562
    UCHAR   NumberProcessors;629,31594
    ULONG   Unknown2;631,31635
} SYSTEM_BASIC_INFORMATION, *PSYSTEM_BASIC_INFORMATION;PSYSTEM_BASIC_INFORMATION633,31728
typedef struct _SYSTEM_PROCESSOR_INFORMATION 635,31785
    USHORT  ProcessorArchitecture;636,31832
    USHORT  ProcessorLevel;637,31867
    USHORT  ProcessorRevision;638,31895
    USHORT  Unknown;639,31926
    ULONG   FeatureBits;640,31947
} SYSTEM_PROCESSOR_INFORMATION, *PSYSTEM_PROCESSOR_INFORMATION;PSYSTEM_PROCESSOR_INFORMATION641,31972
typedef struct _SYSTEM_PERFORMANCE_INFORMATION 643,32037
    LARGE_INTEGER IdleTime;644,32086
    LARGE_INTEGER ReadTransferCount;645,32114
    LARGE_INTEGER WriteTransferCount;646,32151
    LARGE_INTEGER OtherTransferCount;647,32189
    ULONG   ReadOperationCount;648,32227
    ULONG   WriteOperationCount;649,32259
    ULONG   OtherOperationCount;650,32292
    ULONG   AvailablePages;651,32325
    ULONG   TotalCommittedPages;652,32353
    ULONG   TotalCommitLimit;653,32386
    ULONG   PeakCommitment;654,32416
    ULONG   PageFaults;655,32444
    ULONG   WriteCopyFaults;656,32468
    ULONG   TranstitionFaults;657,32497
    ULONG   Reserved1;658,32528
    ULONG   DemandZeroFaults;659,32551
    ULONG   PagesRead;660,32581
    ULONG   PageReadIos;661,32604
    ULONG   Reserved2[Reserved2662,32629
    ULONG   PageFilePagesWritten;663,32655
    ULONG   PageFilePagesWriteIos;664,32689
    ULONG   MappedFilePagesWritten;665,32724
    ULONG   PagedPoolUsage;666,32760
    ULONG   NonPagedPoolUsage;667,32788
    ULONG   PagedPoolAllocs;668,32819
    ULONG   PagedPoolFrees;669,32848
    ULONG   NonPagedPoolAllocs;670,32876
    ULONG   NonPagedPoolFrees;671,32908
    ULONG   TotalFreeSystemPtes;672,32939
    ULONG   SystemCodePage;673,32972
    ULONG   TotalSystemDriverPages;674,33000
    ULONG   TotalSystemCodePages;675,33036
    ULONG   SmallNonPagedLookasideListAllocateHits;676,33070
    ULONG   SmallPagedLookasieListAllocateHits;677,33122
    ULONG   Reserved3;678,33170
    ULONG   MmSystemCachePage;679,33193
    ULONG   PagedPoolPage;680,33224
    ULONG   SystemDriverPage;681,33251
    ULONG   FastReadNoWait;682,33281
    ULONG   FastReadWait;683,33309
    ULONG   FastReadResourceMiss;684,33335
    ULONG   FastReadNotPossible;685,33369
    ULONG   FastMdlReadNoWait;686,33402
    ULONG   FastMdlReadWait;687,33433
    ULONG   FastMdlReadResourceMiss;688,33462
    ULONG   FastMdlReadNotPossible;689,33499
    ULONG   MapDataNoWait;690,33535
    ULONG   MapDataWait;691,33562
    ULONG   MapDataNoWaitMiss;692,33587
    ULONG   MapDataWaitMiss;693,33618
    ULONG   PinMappedDataCount;694,33647
    ULONG   PinReadNoWait;695,33679
    ULONG   PinReadWait;696,33706
    ULONG   PinReadNoWaitMiss;697,33731
    ULONG   PinReadWaitMiss;698,33762
    ULONG   CopyReadNoWait;699,33791
    ULONG   CopyReadWait;700,33819
    ULONG   CopyReadNoWaitMiss;701,33845
    ULONG   CopyReadWaitMiss;702,33877
    ULONG   MdlReadNoWait;703,33907
    ULONG   MdlReadWait;704,33934
    ULONG   MdlReadNoWaitMiss;705,33959
    ULONG   MdlReadWaitMiss;706,33990
    ULONG   ReadAheadIos;707,34019
    ULONG   LazyWriteIos;708,34045
    ULONG   LazyWritePages;709,34071
    ULONG   DataFlushes;710,34099
    ULONG   DataPages;711,34124
    ULONG   ContextSwitches;712,34147
    ULONG   FirstLevelTbFills;713,34176
    ULONG   SecondLevelTbFills;714,34207
    ULONG   SystemCalls;715,34239
    ULONG   Unknown[Unknown717,34300
} SYSTEM_PERFORMANCE_INFORMATION, *PSYSTEM_PERFORMANCE_INFORMATION;PSYSTEM_PERFORMANCE_INFORMATION718,34324
typedef struct _SYSTEM_TIME_OF_DAY_INFORMATION 720,34393
    LARGE_INTEGER BootTime;721,34442
    LARGE_INTEGER CurrentTime;722,34470
    LARGE_INTEGER TimeZoneBias;723,34501
    ULONG   CurrentTimeZoneId;724,34533
} SYSTEM_TIME_OF_DAY_INFORMATION, *PSYSTEM_TIME_OF_DAY_INFORMATION;PSYSTEM_TIME_OF_DAY_INFORMATION725,34564
typedef struct _SYSTEM_PROCESSOR_TIMES 727,34633
    LARGE_INTEGER IdleTime;728,34674
    LARGE_INTEGER KernelTime;729,34702
    LARGE_INTEGER UserTime;730,34732
    LARGE_INTEGER DpcTime;731,34760
    LARGE_INTEGER InterruptTime;732,34787
    ULONG   InterruptCount;733,34820
} SYSTEM_PROCESSOR_TIMES, *PSYSTEM_PROCESSOR_TIMES;PSYSTEM_PROCESSOR_TIMES734,34848
typedef struct _IO_COUNTERSEX 736,34901
    LARGE_INTEGER ReadOperationCount;737,34933
    LARGE_INTEGER WriteOperationCount;738,34971
    LARGE_INTEGER OtherOperationCount;739,35010
    LARGE_INTEGER ReadTransferCount;740,35049
    LARGE_INTEGER WriteTransferCount;741,35086
    LARGE_INTEGER OtherTransferCount;742,35124
} IO_COUNTERSEX, *PIO_COUNTERSEX;PIO_COUNTERSEX743,35162
typedef enum _THREAD_STATE 745,35197
    StateInitialized,746,35226
    StateReady,747,35248
    StateRunning,748,35264
    StateStandby,749,35282
    StateTerminated,750,35300
    StateWait,751,35321
    StateTransition,752,35336
    StateUnknown753,35357
} THREAD_STATE;754,35374
typedef enum _KWAIT_REASON 756,35391
    Executive,757,35420
    FreePage,758,35435
    PageIn,759,35449
    PoolAllocation,760,35461
    DelayExecution,761,35481
    Suspended,762,35501
    UserRequest,763,35516
    WrExecutive,764,35533
    WrFreePage,765,35550
    WrPageIn,766,35566
    WrPoolAllocation,767,35580
    WrDelayExecution,768,35602
    WrSuspended,769,35624
    WrUserRequest,770,35641
    WrEventPair,771,35660
    WrQueue,772,35677
    WrLpcReceive,773,35690
    WrVirtualMemory,774,35708
    WrPageOut,775,35729
    WrRendevous,776,35744
    WrSpare2,777,35761
    WrSpare3,778,35775
    WrSpare4,779,35789
    WrSpare5,780,35803
    WrSpare6,781,35817
    WrKernel782,35831
} KWAIT_REASON;783,35844
typedef struct _SYSTEM_THREADS 785,35861
    LARGE_INTEGER CreateTime;786,35894
    LARGE_INTEGER UserTime;787,35924
    LARGE_INTEGER KernelTime;788,35952
    ULONG   WaitTime;789,35982
    PVOID   StartAddress;790,36004
    CLIENT_ID ClientId;791,36030
    KPRIORITY Priority;792,36054
    KPRIORITY BasePriority;793,36078
    ULONG   ContextSwitchCount;794,36106
    THREAD_STATE ThreadState;795,36138
    KWAIT_REASON WaitReason;796,36168
} SYSTEM_THREADS, *PSYSTEM_THREADS;PSYSTEM_THREADS797,36197
typedef struct _SYSTEM_PROCESSES 799,36234
    ULONG NextEntryDelta;800,36270
    ULONG ThreadCount;801,36296
    ULONG Reserved1[Reserved1802,36319
    LARGE_INTEGER CreateTime;803,36343
    LARGE_INTEGER UserTime;804,36373
    LARGE_INTEGER KernelTime;805,36401
    UNICODE_STRING ProcessName;806,36431
    KPRIORITY BasePriority;807,36463
    HANDLE ProcessId;808,36491
    HANDLE InheritedFromProcessId;809,36513
    ULONG HandleCount;810,36548
    ULONG SessionId;811,36571
    ULONG PageDirectoryFrame;812,36592
    VM_COUNTERS VmCounters;813,36622
    IO_COUNTERSEX IoCounters;814,36650
    SYSTEM_THREADS Threads[Threads815,36706
} SYSTEM_PROCESSES, *PSYSTEM_PROCESSES;PSYSTEM_PROCESSES816,36757
typedef struct _SYSTEM_GLOBAL_FLAG 819,36799
    ULONG   GlobalFlag;820,36836
} SYSTEM_GLOBAL_FLAG, *PSYSTEM_GLOBAL_FLAG;PSYSTEM_GLOBAL_FLAG821,36860
typedef struct _MEMORY_SECTION_NAME 823,36905
    UNICODE_STRING SectionFileName;824,36943
} MEMORY_SECTION_NAME, *PMEMORY_SECTION_NAME;PMEMORY_SECTION_NAME825,36979
#define SYMBOLIC_LINK_QUERY 827,37026
#define SYMBOLIC_LINK_ALL_ACCESS 828,37060
    THREAD_INFO_ELEMENT_BUFFER_IS_INOUT 838,37575
    THREAD_INFO_ELEMENT_BUFFER_IS_INOUT = 0x00000,x00000838,37575
    THREAD_INFO_ELEMENT_BUFFER_IS_OUT 839,37653
    THREAD_INFO_ELEMENT_BUFFER_IS_OUT   = 0x10000,x10000839,37653
    THREAD_INFO_ELEMENT_BUFFER_IS_IN 840,37727
    THREAD_INFO_ELEMENT_BUFFER_IS_IN    = 0x20000,x20000840,37727
} thread_info_elm_buf_access_t;841,37802
    THREAD_INFO_ELEMENT_CLIENT_ID 844,37885
    THREAD_INFO_ELEMENT_CLIENT_ID       = 0x3,x3844,37885
    THREAD_INFO_ELEMENT_TEB 845,37964
    THREAD_INFO_ELEMENT_TEB             = 0x4,x4845,37964
    THREAD_INFO_ELEMENT_NT_PATH_TO_EXE 846,38039
    THREAD_INFO_ELEMENT_NT_PATH_TO_EXE  = 0x5,x5846,38039
    THREAD_INFO_ELEMENT_EXE_STUFF 848,38204
    THREAD_INFO_ELEMENT_EXE_STUFF       = 0x6,x6848,38204
    THREAD_INFO_ELEMENT_UNKNOWN_1 850,38350
    THREAD_INFO_ELEMENT_UNKNOWN_1       = 0x9,x9850,38350
} thread_info_elm_buf_type_t;852,38500
typedef struct _thread_info_element_t 854,38531
    ptr_uint_t flags;855,38604
    size_t buffer_size;856,38692
    void *buffer;buffer857,38749
    ptr_uint_t unknown;858,38835
} thread_info_elm_t;859,38888
typedef struct _exe_stuff_t 861,38910
    OUT void *exe_entrypoint_addr;exe_entrypoint_addr862,38973
    ptr_uint_t unknown1[unknown1864,39137
    uint32 unknown2[unknown2865,39216
} exe_stuff_t;866,39299
typedef struct _create_proc_thread_info_t 868,39315
    size_t struct_size;869,39392
    thread_info_elm_t nt_path_to_exe;874,39694
    thread_info_elm_t client_id;879,39880
    thread_info_elm_t exe_stuff;884,40092
    thread_info_elm_t info[info891,40606
}  create_proc_thread_info_t;893,40643
typedef struct _create_thread_info_t 897,40776
    size_t struct_size;898,40848
    thread_info_elm_t client_id;906,41293
    thread_info_elm_t teb;911,41445
} create_thread_info_t;912,41472
typedef struct _BASE_STATIC_SERVER_DATA919,41753
    UNICODE_STRING WindowsDirectory;921,41795
    UNICODE_STRING WindowsSystemDirectory;922,41832
    UNICODE_STRING NamedObjectDirectory;923,41875
    USHORT WindowsMajorVersion;924,41916
    USHORT WindowsMinorVersion;925,41948
    USHORT BuildNumber;926,41980
} BASE_STATIC_SERVER_DATA, *PBASE_STATIC_SERVER_DATA;PBASE_STATIC_SERVER_DATA928,42039
typedef struct _BASE_STATIC_SERVER_DATA_64931,42106
    UNICODE_STRING_64 WindowsDirectory;933,42151
    UNICODE_STRING_64 WindowsSystemDirectory;934,42191
    UNICODE_STRING_64 NamedObjectDirectory;935,42237
    USHORT WindowsMajorVersion;936,42281
    USHORT WindowsMinorVersion;937,42313
    USHORT BuildNumber;938,42345
} BASE_STATIC_SERVER_DATA_64, *PBASE_STATIC_SERVER_DATA_64;PBASE_STATIC_SERVER_DATA_64940,42404
typedef struct _FILE_BOTH_DIR_INFORMATION 944,42525
    ULONG NextEntryOffset;945,42569
    ULONG FileIndex;946,42596
    LARGE_INTEGER CreationTime;947,42617
    LARGE_INTEGER LastAccessTime;948,42649
    LARGE_INTEGER LastWriteTime;949,42683
    LARGE_INTEGER ChangeTime;950,42716
    LARGE_INTEGER EndOfFile;951,42746
    LARGE_INTEGER AllocationSize;952,42775
    ULONG FileAttributes;953,42809
    ULONG FileNameLength;954,42835
    ULONG EaSize;955,42861
    CCHAR ShortNameLength;956,42879
    WCHAR ShortName[ShortName957,42906
    WCHAR FileName[FileName958,42931
} FILE_BOTH_DIR_INFORMATION, *PFILE_BOTH_DIR_INFORMATION;PFILE_BOTH_DIR_INFORMATION959,42954
typedef enum _NT_PRODUCT_TYPE 962,43032
    NtProductWinNt 963,43064
    NtProductLanManNt,964,43088
    NtProductServer965,43111
} NT_PRODUCT_TYPE, *PNT_PRODUCT_TYPE;PNT_PRODUCT_TYPE966,43131
typedef enum _ALTERNATIVE_ARCHITECTURE_TYPE 969,43189
    StandardDesign,970,43235
    NEC98x86,971,43303
    EndAlternatives 972,43367
} ALTERNATIVE_ARCHITECTURE_TYPE;973,43437
typedef struct _KSYSTEM_TIME 975,43471
    ULONG LowPart;976,43502
    LONG High1Time;977,43521
    LONG High2Time;978,43541
} KSYSTEM_TIME, *PKSYSTEM_TIME;PKSYSTEM_TIME979,43561
#define PROCESSOR_FEATURE_MAX 981,43594
typedef struct _KUSER_SHARED_DATA 983,43628
    ULONG TickCountLowDeprecated;991,43819
    ULONG TickCountMultiplier;992,43853
    volatile KSYSTEM_TIME InterruptTime;998,43953
    volatile KSYSTEM_TIME SystemTime;1004,44060
    volatile KSYSTEM_TIME TimeZoneBias;1010,44152
    USHORT ImageNumberLow;1018,44316
    USHORT ImageNumberHigh;1019,44343
    WCHAR NtSystemRoot[NtSystemRoot1025,44425
    ULONG MaxStackTraceDepth;1031,44525
    ULONG CryptoExponent;1037,44594
    ULONG TimeZoneId;1043,44654
    ULONG LargePageMinimum;1045,44677
    ULONG Reserved2[Reserved21046,44705
    NT_PRODUCT_TYPE NtProductType;1052,44767
    BOOLEAN ProductTypeIsValid;1053,44802
    ULONG NtMajorVersion;1061,45077
    ULONG NtMinorVersion;1062,45103
    BOOLEAN ProcessorFeatures[ProcessorFeatures1068,45175
    ULONG Reserved1;1073,45280
    ULONG Reserved3;1074,45301
    volatile ULONG TimeSlip;1080,45377
    ALTERNATIVE_ARCHITECTURE_TYPE AlternativeArchitecture;1086,45490
    LARGE_INTEGER SystemExpirationDate;1095,45830
    ULONG SuiteMask;1101,45907
    BOOLEAN KdDebuggerEnabled;1107,45998
    volatile ULONG ActiveConsoleId;1113,46110
    volatile ULONG DismountCount;1122,46373
    ULONG ComPlusPackage;1130,46645
    ULONG LastSystemRITEventTickCount;1139,46912
    ULONG NumberOfPhysicalPages;1147,47123
    BOOLEAN SafeBootMode;1153,47228
    ULONG TraceLogging;1162,47496
    ULONGLONG   Fill0;1174,47871
    ULONGLONG   SystemCall[SystemCall1175,47916
        volatile KSYSTEM_TIME TickCount;1182,48005
        volatile ULONG64 TickCountQuad;1183,48046
} KUSER_SHARED_DATA;1187,48139
#define KUSER_SHARED_DATA_ADDRESS 1190,48210
typedef enum {MEMORY_RESERVE_ONLY MEMORY_RESERVE_ONLY1195,48371
typedef enum {MEMORY_RESERVE_ONLY = MEM_RESERVE,1195,48371
              MEMORY_COMMIT 1196,48421
              MEMORY_COMMIT = MEM_RESERVE|MEM_RESERVE1196,48421
              MEMORY_COMMIT = MEM_RESERVE|MEM_COMMITMEM_COMMIT1196,48421
} memory_commit_status_t;1197,48474
#define DUPLICATE_SAME_ATTRIBUTES 1216,48755
typedef enum {THREAD_EXITED,THREAD_EXITED1225,49051
typedef enum {THREAD_EXITED, THREAD_NOT_EXITED,1225,49051
typedef enum {THREAD_EXITED, THREAD_NOT_EXITED, THREAD_EXIT_ERROR}THREAD_EXIT_ERROR1225,49051
typedef enum {THREAD_EXITED, THREAD_NOT_EXITED, THREAD_EXIT_ERROR} thread_exited_status_t;1225,49051
#define SEC_LARGE_PAGES 1414,53809
# define SEC_VLM 1417,53984
#define SEC_BASED_UNSUPPORTED 1420,54111
#define SEC_NO_CHANGE_UNSUPPORTED 1421,54156
typedef enum _reg_query_value_result 1448,54901
    REG_QUERY_FAILURE,1449,54940
    REG_QUERY_BUFFER_TOO_SMALL,1450,54963
    REG_QUERY_SUCCESS1451,54995
} reg_query_value_result_t;1452,55017
#define LengthRequiredSID(1478,55744
# define SECURITY_MAX_SID_SIZE 1484,56032
#define SECURITY_MAX_TOKEN_SIZE 1491,56233
#define FILE_ANY_ACCESS 1535,57646
#define FILE_SPECIAL_ACCESS 1536,57688
#define FILE_READ_ACCESS 1537,57737
#define FILE_WRITE_ACCESS 1538,57800
#define FILE_SHARE_VALID_FLAGS 1541,57917
#define FILE_ATTRIBUTE_VALID_FLAGS 1544,58026
#define FILE_ATTRIBUTE_VALID_SET_FLAGS 1545,58081
#define FILE_DIRECTORY_FILE 1549,58220
#define FILE_WRITE_THROUGH 1550,58279
#define FILE_SEQUENTIAL_ONLY 1551,58338
#define FILE_NO_INTERMEDIATE_BUFFERING 1552,58397
#define FILE_SYNCHRONOUS_IO_ALERT 1554,58457
#define FILE_SYNCHRONOUS_IO_NONALERT 1555,58516
#define FILE_NON_DIRECTORY_FILE 1556,58575
#define FILE_CREATE_TREE_CONNECTION 1557,58634
#define FILE_COMPLETE_IF_OPLOCKED 1559,58694
#define FILE_NO_EA_KNOWLEDGE 1560,58753
#define FILE_OPEN_FOR_RECOVERY 1561,58812
#define FILE_OPEN_REMOTE_INSTANCE 1562,58871
#define FILE_RANDOM_ACCESS 1563,58945
#define FILE_DELETE_ON_CLOSE 1565,59005
#define FILE_OPEN_BY_FILE_ID 1566,59064
#define FILE_OPEN_FOR_BACKUP_INTENT 1567,59123
#define FILE_NO_COMPRESSION 1568,59182
#define FILE_RESERVE_OPFILTER 1570,59242
#define FILE_OPEN_REPARSE_POINT 1571,59301
#define FILE_OPEN_NO_RECALL 1572,59360
#define FILE_OPEN_FOR_FREE_SPACE_QUERY 1573,59419
#define FILE_COPY_STRUCTURED_STORAGE 1575,59479
#define FILE_STRUCTURED_STORAGE 1576,59538
#define FILE_VALID_OPTION_FLAGS 1578,59598
#define FILE_VALID_PIPE_OPTION_FLAGS 1579,59657
#define FILE_VALID_MAILSLOT_OPTION_FLAGS 1580,59716
#define FILE_VALID_SET_FLAGS 1581,59775
#define FILE_SUPERSEDED 1584,59888
#define FILE_OPENED 1585,59927
#define FILE_CREATED 1586,59966
#define FILE_OVERWRITTEN 1587,60005
#define FILE_EXISTS 1588,60044
#define FILE_DOES_NOT_EXIST 1589,60083
#define FILE_SUPERSEDE 1592,60165
#define FILE_OPEN 1593,60216
#define FILE_CREATE 1594,60267
#define FILE_OPEN_IF 1595,60318
#define FILE_OVERWRITE 1596,60369
#define FILE_OVERWRITE_IF 1597,60420
#define FILE_MAXIMUM_DISPOSITION 1598,60471
#define FILE_DISPOSITION_SET_OWNER 1601,60593
#define FILE_WRITE_TO_END_OF_FILE 1604,60695
#define FILE_USE_FILE_POINTER_POSITION 1605,60746
# define STATUS_PENDING 1612,61104
#define FILE_DEVICE_FILE_SYSTEM 1616,61187
#define FILE_DEVICE_NAMED_PIPE 1617,61238
#define STATUS_NOT_IMPLEMENTED 1622,61408
#define STATUS_INFO_LENGTH_MISMATCH 1624,61474
#define STATUS_NOT_IMPLEMENTED 1627,61590
#define STATUS_NO_SUCH_FILE 1630,61687
#define STATUS_CONFLICTING_ADDRESSES 1633,61850
#define STATUS_END_OF_FILE 1638,62022
#define STATUS_INVALID_ADDRESS 1641,62151
#define STATUS_BUFFER_OVERFLOW 1644,62282
#define STATUS_NO_MORE_FILES 1647,62415
#define STATUS_INVALID_FILE_FOR_SECTION 1651,62587
#define STATUS_ACCESS_DENIED 1655,62770
#define STATUS_BUFFER_TOO_SMALL 1659,62940
#define STATUS_OBJECT_TYPE_MISMATCH 1664,63156
#define STATUS_OBJECT_NAME_INVALID 1667,63249
#define STATUS_OBJECT_NAME_NOT_FOUND 1670,63345
#define STATUS_OBJECT_NAME_COLLISION 1673,63451
#define STATUS_OBJECT_PATH_INVALID 1676,63573
#define STATUS_OBJECT_PATH_NOT_FOUND 1679,63670
#define STATUS_SECTION_TOO_BIG 1682,63792
#define STATUS_SHARING_VIOLATION 1685,63938
#define STATUS_INVALID_PAGE_PROTECTION 1688,64055
#define STATUS_FILE_LOCK_CONFLICT 1691,64200
#define STATUS_DELETE_PENDING 1694,64354
#define STATUS_FILE_INVALID 1699,64527
#define STATUS_FILE_IS_A_DIRECTORY 1704,64727
#define STATUS_OBJECT_NAME_EXISTS 1707,64885
#define STATUS_IMAGE_NOT_AT_BASE 1713,65120
#  define STATUS_NO_MEMORY 1718,65343
#define STATUS_PAGEFILE_QUOTA_EXCEEDED 1723,65556
#define STATUS_COMMITMENT_LIMIT 1730,65838
#define STATUS_COMMITMENT_MINIMUM 1740,66313
#define EXCEPTION_THROWN 1743,66447
#define STATUS_PROCESS_NOT_IN_JOB 1747,66590
#define STATUS_PROCESS_IN_JOB 1749,66702
#define STATUS_NO_SUCH_PRIVILEGE 1752,66812
#define STATUS_PRIVILEGE_NOT_HELD 1754,66932
#define STATUS_CALLBACK_POP_STACK 1757,67069
#define STATUS_INVALID_INFO_CLASS 1760,67162
#define STATUS_MAPPED_FILE_SIZE_ZERO 1765,67326
#define STATUS_PARTIAL_COPY 1767,67392
# define STATUS_INVALID_PARAMETER 1771,67555
#define STATUS_NOT_MAPPED_DATA 1775,67688
#define STATUS_INVALID_PARAMETER_1 1778,67840
#define STATUS_INVALID_PARAMETER_2 1781,67993
#define STATUS_INVALID_PARAMETER_3 1784,68145
#define STATUS_INVALID_PARAMETER_4 1787,68298
#define STATUS_INVALID_PARAMETER_5 1790,68450
#define STATUS_INVALID_PARAMETER_6 1793,68602
#define STATUS_INVALID_PARAMETER_7 1796,68756
#define STATUS_INVALID_PARAMETER_8 1799,68909
#define STATUS_INVALID_PARAMETER_9 1802,69061
#define STATUS_INVALID_PARAMETER_10 1805,69213
#define STATUS_INVALID_PARAMETER_11 1808,69368
#define STATUS_INVALID_PARAMETER_12 1811,69522
#define STATUS_THREAD_IS_TERMINATING 1814,69661
#define STATUS_PROCESS_IS_TERMINATING 1817,69783
#define STATUS_NOT_A_REPARSE_POINT 1820,69906
# define IMAGE_SIZEOF_BASE_RELOCATION 1824,70064
typedef struct _FILE_STANDARD_INFORMATION 1865,71387
    LARGE_INTEGER AllocationSize;1866,71448
    LARGE_INTEGER EndOfFile;1867,71509
    ULONG NumberOfLinks;1868,71570
    BOOLEAN DeletePending;1869,71631
    BOOLEAN Directory;1870,71692
} FILE_STANDARD_INFORMATION, *PFILE_STANDARD_INFORMATION;PFILE_STANDARD_INFORMATION1871,71753
typedef struct _FILE_INTERNAL_INFORMATION 1873,71815
    LARGE_INTEGER IndexNumber;1874,71859
} FILE_INTERNAL_INFORMATION, *PFILE_INTERNAL_INFORMATION;PFILE_INTERNAL_INFORMATION1875,71890
typedef struct _FILE_POSITION_INFORMATION 1877,71999
    LARGE_INTEGER CurrentByteOffset;1878,72060
} FILE_POSITION_INFORMATION, *PFILE_POSITION_INFORMATION;PFILE_POSITION_INFORMATION1879,72121
typedef struct _FILE_ALIGNMENT_INFORMATION 1881,72243
    ULONG AlignmentRequirement;1882,72304
} FILE_ALIGNMENT_INFORMATION, *PFILE_ALIGNMENT_INFORMATION;PFILE_ALIGNMENT_INFORMATION1883,72365
#define MAX_FILE_NAME_LENGTH 1885,72487
typedef struct _FILE_NAME_INFORMATION 1886,72525
    ULONG FileNameLength;1887,72586
    WCHAR FileName[FileName1888,72642
} FILE_NAME_INFORMATION, *PFILE_NAME_INFORMATION;PFILE_NAME_INFORMATION1891,72807
typedef struct _FILE_RENAME_INFORMATION 1893,72918
    BOOLEAN ReplaceIfExists;1894,72960
    HANDLE RootDirectory;1895,72989
    ULONG FileNameLength;1896,73015
    WCHAR FileName[FileName1897,73041
} FILE_RENAME_INFORMATION, *PFILE_RENAME_INFORMATION;PFILE_RENAME_INFORMATION1898,73083
typedef struct _FILE_ATTRIBUTE_TAG_INFORMATION 1900,73138
    ULONG FileAttributes;1901,73202
    ULONG ReparseTag;1902,73267
} FILE_ATTRIBUTE_TAG_INFORMATION, *PFILE_ATTRIBUTE_TAG_INFORMATION;PFILE_ATTRIBUTE_TAG_INFORMATION1903,73332
typedef struct _FILE_DISPOSITION_INFORMATION 1905,73467
    BOOLEAN DeleteFile;1906,73532
} FILE_DISPOSITION_INFORMATION, *PFILE_DISPOSITION_INFORMATION;PFILE_DISPOSITION_INFORMATION1907,73597
typedef struct _FILE_END_OF_FILE_INFORMATION 1909,73727
    LARGE_INTEGER EndOfFile;1910,73792
} FILE_END_OF_FILE_INFORMATION, *PFILE_END_OF_FILE_INFORMATION;PFILE_END_OF_FILE_INFORMATION1911,73857
typedef struct _FILE_VALID_DATA_LENGTH_INFORMATION 1913,73987
    LARGE_INTEGER ValidDataLength;1914,74076
} FILE_VALID_DATA_LENGTH_INFORMATION, *PFILE_VALID_DATA_LENGTH_INFORMATION;PFILE_VALID_DATA_LENGTH_INFORMATION1915,74165
typedef enum {WAIT_TIMEDOUT,WAIT_TIMEDOUT1924,74408
typedef enum {WAIT_TIMEDOUT, WAIT_SIGNALED,1924,74408
typedef enum {WAIT_TIMEDOUT, WAIT_SIGNALED, WAIT_ERROR}WAIT_ERROR1924,74408
typedef enum {WAIT_TIMEDOUT, WAIT_SIGNALED, WAIT_ERROR} wait_status_t;1924,74408
#define INFINITE_WAIT 1925,74479
#define TIMER_UNITS_PER_MILLISECOND 1946,75039
#define GET_OWN_CONTEXT(2022,77834
    X64_PEB_TIB_OFFSET 2049,79061
    X64_PEB_TIB_OFFSET        = 0x060,x0602049,79061
    X64_LDR_PEB_OFFSET 2050,79100
    X64_LDR_PEB_OFFSET        = 0x018,x0182050,79100
typedef struct _module_handle_t *module_handle_t;module_handle_t2096,80439
typedef void *module_base_t;module_base_t2097,80489
#define __IMAGE_COR20_HEADER_DEFINED__2112,80794
typedef enum replaces_cor_hdr_numeric_defines_t2114,80834
    COMIMAGE_FLAGS_ILONLY 2117,80918
    COMIMAGE_FLAGS_ILONLY               =0x00000001,x000000012117,80918
    COMIMAGE_FLAGS_32BITREQUIRED 2118,80971
    COMIMAGE_FLAGS_32BITREQUIRED        =0x00000002,x000000022118,80971
    COMIMAGE_FLAGS_IL_LIBRARY 2119,81024
    COMIMAGE_FLAGS_IL_LIBRARY           =0x00000004,x000000042119,81024
    COMIMAGE_FLAGS_STRONGNAMESIGNED 2120,81077
    COMIMAGE_FLAGS_STRONGNAMESIGNED     =0x00000008,x000000082120,81077
    COMIMAGE_FLAGS_TRACKDEBUGDATA 2121,81130
    COMIMAGE_FLAGS_TRACKDEBUGDATA       =0x00010000,x000100002121,81130
    COR_VERSION_MAJOR_V2 2124,81212
    COR_VERSION_MAJOR 2125,81256
    COR_VERSION_MAJOR                   =COR_VERSION_MAJOR_V2,2125,81256
    COR_VERSION_MINOR 2126,81319
    COR_DELETED_NAME_LENGTH 2127,81363
    COR_VTABLEGAP_NAME_LENGTH 2128,81407
    NATIVE_TYPE_MAX_CB 2131,81496
    COR_ILMETHOD_SECT_SMALL_MAX_DATASIZE=2132,81543
    COR_ILMETHOD_SECT_SMALL_MAX_DATASIZE=0xFF,xFF2132,81543
    IMAGE_COR_MIH_METHODRVA 2135,81621
    IMAGE_COR_MIH_METHODRVA             =0x01,x012135,81621
    IMAGE_COR_MIH_EHRVA 2136,81668
    IMAGE_COR_MIH_EHRVA                 =0x02,x022136,81668
    IMAGE_COR_MIH_BASICBLOCK 2137,81719
    IMAGE_COR_MIH_BASICBLOCK            =0x08,x082137,81719
    COR_VTABLE_32BIT 2140,81788
    COR_VTABLE_32BIT                    =0x01,x012140,81788
    COR_VTABLE_64BIT 2141,81885
    COR_VTABLE_64BIT                    =0x02,x022141,81885
    COR_VTABLE_FROM_UNMANAGED 2142,81982
    COR_VTABLE_FROM_UNMANAGED           =0x04,x042142,81982
    COR_VTABLE_CALL_MOST_DERIVED 2143,82076
    COR_VTABLE_CALL_MOST_DERIVED        =0x10,x102143,82076
    IMAGE_COR_EATJ_THUNK_SIZE 2146,82192
    MAX_CLASS_NAME 2150,82360
    MAX_PACKAGE_NAME 2151,82407
} replaces_cor_hdr_numeric_defines_t;2152,82454
typedef struct IMAGE_COR20_HEADER2155,82523
    DWORD                   cb;2158,82584
    WORD                    MajorRuntimeVersion;2159,82630
    WORD                    MinorRuntimeVersion;2160,82679
    IMAGE_DATA_DIRECTORY    MetaData;2163,82777
    DWORD                   Flags;2164,82823
    DWORD                   EntryPointToken;2165,82869
    IMAGE_DATA_DIRECTORY    Resources;2168,82946
    IMAGE_DATA_DIRECTORY    StrongNameSignature;2169,82985
    IMAGE_DATA_DIRECTORY    CodeManagerTable;2172,83080
    IMAGE_DATA_DIRECTORY    VTableFixups;2173,83126
    IMAGE_DATA_DIRECTORY    ExportAddressTableJumps;2174,83168
    IMAGE_DATA_DIRECTORY    ManagedNativeHeader;2177,83286
} IMAGE_COR20_HEADER, *PIMAGE_COR20_HEADER;PIMAGE_COR20_HEADER2179,83340
#define IMAGE_SCN_ALIGN_MASK 2185,83457
#define MAX_OBJECT_NAME_LENGTH 2205,84133
typedef struct _OBJECT_NAME_INFORMATION 2206,84173
    UNICODE_STRING ObjectName;2207,84215
    wchar_t object_name_buffer[object_name_buffer2210,84364
} OBJECT_NAME_INFORMATION, *POBJECT_NAME_INFORMATION;POBJECT_NAME_INFORMATION2211,84420
#define HEAP_CLASS_PRIVATE 2441,93429

win32/ntdll_imports.c,3611
#define WIN32_LEAN_AND_MEAN39,1940
#define NTEXPORT 47,2055
KiUserApcDispatcher(54,2203
KiUserCallbackDispatcher(63,2419
KiUserExceptionDispatcher(70,2569
KiRaiseUserExceptionDispatcher(76,2679
NtAllocateVirtualMemory(85,2833
NtQueryVirtualMemory(96,3177
NtFreeVirtualMemory(107,3563
NtProtectVirtualMemory(116,3795
NtCreateFile(126,4089
NtWriteVirtualMemory(143,4620
NtGetContextThread(154,4911
NtSetContextThread(161,5051
NtSuspendThread(168,5190
NtResumeThread(175,5344
NtTerminateThread(182,5496
NtClose(189,5645
NtDuplicateObject(195,5727
NtCreateSection(207,6100
NtOpenSection(219,6466
NtMapViewOfSection(227,6661
NtUnmapViewOfSection(242,7254
NtCallbackReturn(250,7417
NtTestAlert(258,7593
NtContinue(265,7668
NtQueryInformationThread(272,7789
NtQueryInformationProcess(283,8135
NtQueryInformationFile(294,8491
NtSetInformationFile(305,8829
NtQuerySection(316,9156
NtOpenFile(327,9466
NtOpenThreadToken(339,9763
NtOpenProcessToken(348,9997
NtQueryInformationToken(356,10189
NtYieldExecution(366,10524
NtQuerySystemInformation(373,10604
NtOpenProcess(382,10867
NtSetInformationThread(391,11100
NtReadVirtualMemory(400,11377
NtCreateTimer(410,11663
NtSetTimer(419,11907
NtDelayExecution(431,12227
NtQueryObject(438,12367
NtQueryFullAttributesFile(448,12666
NtCreateKey(455,12850
NtOpenKey(467,13196
NtSetValueKey(475,13375
NtDeleteKey(486,13645
NtQueryValueKey(493,13735
NtFlushKey(504,14068
NtEnumerateKey(511,14157
NtEnumerateValueKey(522,14447
NtQuerySystemTime(533,14773
NtDeleteFile(540,14878
NtFlushBuffersFile(547,14989
NtReadFile(554,15141
NtWriteFile(568,15548
NtCreateIoCompletion(582,15997
NtRaiseHardError(591,16275
NtRaiseException(603,16700
NtCreateEvent(611,16891
NtWaitForSingleObject(621,17162
NtSetEvent(629,17358
NtClearEvent(636,17493
NtSignalAndWaitForSingleObject(643,17586
NtQueryPerformanceCounter(652,17873
NtFsControlFile(659,18068
NtCancelIoFile(674,18708
NtCreateProfile(681,18852
NtSetIntervalProfile(695,19248
NtQueryIntervalProfile(702,19392
NtStartProfile(709,19542
NtStopProfile(716,19639
NtCreateProcess(723,19735
NtTerminateProcess(736,20177
NtCreateDirectoryObject(743,20329
NtOpenDirectoryObject(751,20556
NtOpenSymbolicLinkObject(759,20777
NtQuerySymbolicLinkObject(767,21007
ZwAreMappedFilesTheSame(775,21237
NtQueryVolumeInformationFile(782,21379
NtQuerySecurityObject(792,21724
NtQueueApcThread(803,22082
NtCreateThread(813,22367
NtOpenThread(826,22770
NtFlushInstructionCache(835,22998
NtQueryAttributesFile(843,23203
NtCreateNamedPipeFile(850,23383
NtDeviceIoControlFile(869,24140
NtQueryDirectoryFile(884,24715
NtFlushVirtualMemory(900,25355
RtlInitializeCriticalSection(913,25701
RtlDeleteCriticalSection(920,25819
RtlEnterCriticalSection(927,25929
RtlLeaveCriticalSection(934,26045
RtlTryEnterCriticalSection(941,26161
RtlInitUnicodeString(948,26280
RtlInitAnsiString(955,26444
RtlFreeUnicodeString(962,26594
RtlFreeAnsiString(967,26664
RtlFreeOemString(972,26728
RtlQueryEnvironmentVariable_U(977,26794
RtlConvertSidToUnicodeString(985,27004
RtlCreateProcessParameters(993,27230
RtlDestroyProcessParameters(1008,27942
RtlCreateHeap(1015,28076
RtlDestroyHeap(1022,28264
RtlAllocateHeap(1028,28346
RtlReAllocateHeap(1034,28445
RtlFreeHeap(1040,28555
RtlSizeHeap(1046,28649
RtlValidateHeap(1052,28737
RtlLockHeap(1059,28834
RtlUnlockHeap(1065,28902
RtlGetProcessHeaps(1071,28976
RtlWalkHeap(1078,29105
LdrLoadDll(1089,29306
LdrUnloadDll(1098,29524
LdrGetProcedureAddress(1105,29618
LdrGetDllHandle(1114,29888
CsrClientCallServer(1127,30215

win32/ntdll_types.h,14687
#define _NTDLL_TYPES_H_ 17,785
typedef unsigned int uint;28,1086
typedef LONG NTSTATUS;29,1113
#define NT_SUCCESS(31,1191
#define NT_ERROR(32,1244
#define STATUS_SUCCESS 33,1302
#define STATUS_UNSUCCESSFUL 34,1349
typedef struct _UNICODE_STRING 36,1402
    USHORT Length;38,1496
    USHORT MaximumLength;39,1515
    PWSTR  Buffer;40,1541
} UNICODE_STRING;41,1560
typedef UNICODE_STRING *PUNICODE_STRING;PUNICODE_STRING42,1578
typedef struct _STRING 44,1620
  USHORT  Length;45,1645
  USHORT  MaximumLength;46,1663
  PCHAR  Buffer;47,1688
} ANSI_STRING;48,1705
typedef ANSI_STRING *PANSI_STRING;PANSI_STRING49,1720
typedef ANSI_STRING OEM_STRING;50,1755
typedef struct _OBJECT_ATTRIBUTES 52,1788
    ULONG Length;53,1824
    HANDLE RootDirectory;54,1842
    PUNICODE_STRING ObjectName;55,1868
    ULONG Attributes;56,1900
    PSECURITY_DESCRIPTOR SecurityDescriptor;57,1922
    PVOID SecurityQualityOfService;58,1967
} OBJECT_ATTRIBUTES;59,2050
typedef OBJECT_ATTRIBUTES *POBJECT_ATTRIBUTES;POBJECT_ATTRIBUTES60,2071
#define InitializeObjectAttributes(62,2119
#define OBJ_INHERIT 72,2579
#define OBJ_PERMANENT 73,2623
#define OBJ_EXCLUSIVE 74,2667
#define OBJ_CASE_INSENSITIVE 75,2711
#define OBJ_OPENIF 76,2755
#define OBJ_OPENLINK 77,2799
#define OBJ_KERNEL_HANDLE 78,2843
#define OBJ_FORCE_ACCESS_CHECK 79,2936
typedef ULONG ACCESS_MASK;81,3017
typedef enum _SECTION_INHERIT 84,3064
    ViewShare 85,3096
    ViewUnmap 86,3115
} SECTION_INHERIT;87,3133
typedef struct _CLIENT_ID 89,3153
    HANDLE UniqueProcess;91,3213
    HANDLE UniqueThread;92,3239
} CLIENT_ID;93,3264
typedef CLIENT_ID *PCLIENT_ID;PCLIENT_ID94,3277
typedef enum _MEMORY_INFORMATION_CLASS 96,3309
    MemoryBasicInformation,97,3350
    MemoryWorkingSetList,98,3378
    MemorySectionName,99,3404
    MemoryBasicVlmInformation100,3427
} MEMORY_INFORMATION_CLASS;101,3457
typedef enum _PROCESSINFOCLASS 104,3539
    ProcessBasicInformation,105,3572
    ProcessQuotaLimits,106,3601
    ProcessIoCounters,107,3625
    ProcessVmCounters,108,3648
    ProcessTimes,109,3671
    ProcessBasePriority,110,3689
    ProcessRaisePriority,111,3714
    ProcessDebugPort,112,3740
    ProcessExceptionPort,113,3762
    ProcessAccessToken,114,3788
    ProcessLdtInformation,115,3812
    ProcessLdtSize,116,3839
    ProcessDefaultHardErrorMode,117,3859
    ProcessIoPortHandlers,118,3892
    ProcessPooledUsageAndLimits,119,3962
    ProcessWorkingSetWatch,120,3995
    ProcessUserModeIOPL,121,4023
    ProcessEnableAlignmentFaultFixup,122,4048
    ProcessPriorityClass,123,4086
    ProcessWx86Information,124,4112
    ProcessHandleCount,125,4140
    ProcessAffinityMask,126,4164
    ProcessPriorityBoost,127,4189
    ProcessDeviceMap,128,4215
    ProcessSessionInformation,129,4237
    ProcessForegroundInformation,130,4268
    ProcessWow64Information,131,4302
    ProcessImageFileName,133,4357
    ProcessLUIDDeviceMapsEnabled,134,4383
    ProcessBreakOnTermination,135,4417
    ProcessDebugObjectHandle,136,4448
    ProcessDebugFlags,137,4478
    ProcessHandleTracing,138,4501
    ProcessIoPriority,139,4527
    ProcessExecuteFlags,140,4550
    ProcessResourceManagement,141,4575
    ProcessCookie,142,4606
    ProcessImageInformation,143,4625
    MaxProcessInfoClass 144,4654
} PROCESSINFOCLASS;145,4744
typedef enum _THREADINFOCLASS 148,4798
    ThreadBasicInformation,149,4830
    ThreadTimes,150,4858
    ThreadPriority,151,4875
    ThreadBasePriority,152,4895
    ThreadAffinityMask,153,4919
    ThreadImpersonationToken,154,4943
    ThreadDescriptorTableEntry,155,4973
    ThreadEnableAlignmentFaultFixup,156,5005
    ThreadEventPair_Reusable,157,5042
    ThreadQuerySetWin32StartAddress,158,5072
    ThreadZeroTlsCell,159,5109
    ThreadPerformanceCount,160,5132
    ThreadAmILastThread,161,5160
    ThreadIdealProcessor,162,5185
    ThreadPriorityBoost,163,5211
    ThreadSetTlsArrayAddress,164,5236
    ThreadIsIoPending,165,5266
    ThreadHideFromDebugger,166,5289
    MaxThreadInfoClass167,5317
} THREADINFOCLASS;168,5340
typedef struct _USER_STACK 170,5360
    PVOID FixedStackBase;171,5389
    PVOID FixedStackLimit;172,5415
    PVOID ExpandableStackBase;173,5442
    PVOID ExpandableStackLimit;174,5473
    PVOID ExpandableStackBottom;175,5505
} USER_STACK, *PUSER_STACK;PUSER_STACK176,5538
typedef enum _SECTION_INFORMATION_CLASS 178,5567
    SectionBasicInformation,179,5609
    SectionImageInformation180,5638
} SECTION_INFORMATION_CLASS;181,5666
typedef struct _SECTION_BASIC_INFORMATION 183,5696
    PVOID BaseAddress;184,5763
    ULONG Attributes;185,5786
    LARGE_INTEGER Size;186,5808
} SECTION_BASIC_INFORMATION, *PSECTION_BASIC_INFORMATION;PSECTION_BASIC_INFORMATION187,5832
typedef struct _SECTION_IMAGE_INFORMATION 189,5891
    PVOID EntryPoint;190,5958
    ULONG Unknown1;191,5980
    ULONG StackReserve;192,6000
    ULONG StackCommit;193,6024
    ULONG Subsystem;194,6047
    USHORT MinorSubsystemVersion;195,6068
    USHORT MajorSubsystemVersion;196,6102
    ULONG Unknown2;197,6136
    ULONG Characteristics;198,6156
    USHORT ImageNumber;199,6183
    BOOLEAN Executable;200,6207
    UCHAR Unknown3;201,6231
    ULONG Unknown4[Unknown4202,6251
} SECTION_IMAGE_INFORMATION, *PSECTION_IMAGE_INFORMATION;PSECTION_IMAGE_INFORMATION203,6274
typedef struct _IO_STATUS_BLOCK 205,6333
        NTSTATUS Status;207,6379
        PVOID Pointer;208,6404
    ULONG_PTR Information;210,6434
} IO_STATUS_BLOCK, *PIO_STATUS_BLOCK;PIO_STATUS_BLOCK211,6461
typedef enum _KPROFILE_SOURCE 213,6500
    ProfileTime214,6532
} KPROFILE_SOURCE;215,6548
typedef enum _OBJECT_INFORMATION_CLASS 217,6568
    ObjectBasicInformation,218,6609
    ObjectNameInformation,219,6637
    ObjectTypeInformation,220,6664
    ObjectAllTypesInformation,221,6691
    ObjectHandleInformation 222,6722
} OBJECT_INFORMATION_CLASS;223,6779
typedef struct _OBJECT_BASIC_INFORMATION 225,6808
    ULONG Attributes;226,6851
    ACCESS_MASK GrantedAccess;227,6873
    ULONG HandleCount;228,6904
    ULONG PointerCount;229,6927
    ULONG PagePoolUsage;230,6951
    ULONG NonPagedPoolUsage;231,6976
    ULONG Reserved[Reserved232,7005
    ULONG NameInformationLength;233,7028
    ULONG TypeInformationLength;234,7061
    ULONG SecurityDescriptorLength;235,7094
    LARGE_INTEGER CreateTime;236,7130
} OBJECT_BASIC_INFORMATION, *POBJECT_BASIC_INFORMATION;POBJECT_BASIC_INFORMATION237,7160
typedef enum _FILE_INFORMATION_CLASS 242,7318
    FileDirectoryInformation 243,7357
    FileFullDirectoryInformation,244,7399
    FileBothDirectoryInformation,245,7440
    FileBasicInformation,246,7481
    FileStandardInformation,247,7527
    FileInternalInformation,248,7573
    FileEaInformation,249,7614
    FileAccessInformation,250,7655
    FileNameInformation,251,7696
    FileRenameInformation,252,7737
    FileLinkInformation,253,7779
    FileNamesInformation,254,7821
    FileDispositionInformation,255,7863
    FilePositionInformation,256,7905
    FileFullEaInformation,257,7951
    FileModeInformation,258,7993
    FileAlignmentInformation,259,8035
    FileAllInformation,260,8077
    FileAllocationInformation,261,8119
    FileEndOfFileInformation,262,8161
    FileAlternateNameInformation,263,8207
    FileStreamInformation,264,8249
    FilePipeInformation,265,8291
    FilePipeLocalInformation,266,8333
    FilePipeRemoteInformation,267,8375
    FileMailslotQueryInformation,268,8417
    FileMailslotSetInformation,269,8459
    FileCompressionInformation,270,8501
    FileObjectIdInformation,271,8543
    FileCompletionInformation,272,8585
    FileMoveClusterInformation,273,8627
    FileQuotaInformation,274,8669
    FileReparsePointInformation,275,8711
    FileNetworkOpenInformation,276,8753
    FileAttributeTagInformation,277,8795
    FileTrackingInformation,278,8837
    FileIdBothDirectoryInformation,279,8879
    FileIdFullDirectoryInformation,280,8921
    FileValidDataLengthInformation,282,9020
    FileShortNameInformation,283,9062
    FileMaximumInformation284,9104
} FILE_INFORMATION_CLASS, *PFILE_INFORMATION_CLASS;PFILE_INFORMATION_CLASS285,9131
typedef struct _FILE_BASIC_INFORMATION 290,9284
    LARGE_INTEGER CreationTime;291,9325
    LARGE_INTEGER LastAccessTime;292,9357
    LARGE_INTEGER LastWriteTime;293,9391
    LARGE_INTEGER ChangeTime;294,9424
    ULONG FileAttributes;295,9454
} FILE_BASIC_INFORMATION, *PFILE_BASIC_INFORMATION;PFILE_BASIC_INFORMATION296,9480
typedef enum _FS_INFORMATION_CLASS 302,9750
    FileFsVolumeInformation=303,9787
    FileFsLabelInformation,304,9818
    FileFsSizeInformation,305,9878
    FileFsDeviceInformation,306,9905
    FileFsAttributeInformation,307,9934
    FileFsControlInformation,308,9966
    FileFsFullSizeInformation,309,9996
    FileFsObjectIdInformation,310,10027
    FileFsDriverPathInformation,311,10058
    FileFsMaximumInformation312,10108
} FS_INFORMATION_CLASS, *PFS_INFORMATION_CLASS;PFS_INFORMATION_CLASS313,10137
typedef struct _FILE_FS_SIZE_INFORMATION 315,10186
    LARGE_INTEGER TotalAllocationUnits;316,10229
    LARGE_INTEGER AvailableAllocationUnits;317,10269
    ULONG SectorsPerAllocationUnit;318,10313
    ULONG BytesPerSector;319,10349
} FILE_FS_SIZE_INFORMATION, *PFILE_FS_SIZE_INFORMATION;PFILE_FS_SIZE_INFORMATION320,10375
typedef struct _FILE_FS_DEVICE_INFORMATION 322,10432
    ULONG /*DEVICE_TYPE*/ DeviceType;323,10477
    ULONG Characteristics;324,10515
} FILE_FS_DEVICE_INFORMATION, *PFILE_FS_DEVICE_INFORMATION;PFILE_FS_DEVICE_INFORMATION325,10542
typedef struct _FILE_FS_VOLUME_INFORMATION 327,10603
    LARGE_INTEGER VolumeCreationTime;328,10648
    ULONG VolumeSerialNumber;329,10686
    ULONG VolumeLabelLength;330,10716
    BOOLEAN SupportsObjects;331,10745
    WCHAR VolumeLabel[VolumeLabel332,10774
} FILE_FS_VOLUME_INFORMATION, *PFILE_FS_VOLUME_INFORMATION;PFILE_FS_VOLUME_INFORMATION333,10800
#define FILE_REMOVABLE_MEDIA 336,10910
#define FILE_READ_ONLY_DEVICE 337,10969
#define FILE_FLOPPY_DISKETTE 338,11028
#define FILE_WRITE_ONCE_MEDIA 339,11087
#define FILE_REMOTE_DEVICE 340,11146
typedef struct _FILE_FS_FULL_SIZE_INFORMATION 342,11206
    LARGE_INTEGER TotalAllocationUnits;343,11254
    LARGE_INTEGER CallerAvailableAllocationUnits;344,11294
    LARGE_INTEGER ActualAvailableAllocationUnits;345,11344
    ULONG SectorsPerAllocationUnit;346,11394
    ULONG BytesPerSector;347,11430
} FILE_FS_FULL_SIZE_INFORMATION, *PFILE_FS_FULL_SIZE_INFORMATION;PFILE_FS_FULL_SIZE_INFORMATION348,11456
typedef struct _FILE_NETWORK_OPEN_INFORMATION 350,11523
    LARGE_INTEGER CreationTime;351,11571
    LARGE_INTEGER LastAccessTime;352,11603
    LARGE_INTEGER LastWriteTime;353,11637
    LARGE_INTEGER ChangeTime;354,11670
    LARGE_INTEGER AllocationSize;355,11700
    LARGE_INTEGER EndOfFile;356,11734
    ULONG   FileAttributes;357,11763
} FILE_NETWORK_OPEN_INFORMATION, *PFILE_NETWORK_OPEN_INFORMATION;PFILE_NETWORK_OPEN_INFORMATION358,11791
typedef enum _KEY_VALUE_INFORMATION_CLASS 360,11858
    KeyValueBasicInformation,361,11902
    KeyValueFullInformation,362,11932
    KeyValuePartialInformation,363,11961
    KeyValueFullInformationAlign64,364,11993
    KeyValuePartialInformationAlign64365,12029
} KEY_VALUE_INFORMATION_CLASS;366,12067
typedef struct _KEY_VALUE_FULL_INFORMATION 368,12099
    ULONG   TitleIndex;369,12144
    ULONG   Type;370,12168
    ULONG   DataOffset;371,12186
    ULONG   DataLength;372,12210
    ULONG   NameLength;373,12234
    WCHAR   Name[Name374,12258
} KEY_VALUE_FULL_INFORMATION, *PKEY_VALUE_FULL_INFORMATION;PKEY_VALUE_FULL_INFORMATION376,12374
typedef struct _KEY_VALUE_PARTIAL_INFORMATION 378,12435
    ULONG   TitleIndex;379,12483
    ULONG   Type;380,12507
    ULONG   DataLength;381,12525
    UCHAR   Data[Data382,12549
} KEY_VALUE_PARTIAL_INFORMATION, *PKEY_VALUE_PARTIAL_INFORMATION;PKEY_VALUE_PARTIAL_INFORMATION383,12598
typedef enum _KEY_INFORMATION_CLASS 385,12665
    KeyBasicInformation,386,12703
    KeyNodeInformation,387,12728
    KeyFullInformation,388,12752
    KeyNameInformation389,12776
} KEY_INFORMATION_CLASS;390,12799
typedef struct _KEY_NAME_INFORMATION 392,12825
    ULONG   NameLength;393,12864
    WCHAR   Name[Name394,12888
} KEY_NAME_INFORMATION, *PKEY_NAME_INFORMATION;PKEY_NAME_INFORMATION395,12937
typedef enum _SYSTEM_INFORMATION_CLASS 397,12986
    SystemBasicInformation 398,13027
    SystemProcessorInformation 399,13059
    SystemPerformanceInformation 400,13095
    SystemTimeOfDayInformation 401,13133
    SystemProcessesAndThreadsInformation 402,13169
    SystemProcessorTimes 403,13215
    SystemGlobalFlag 404,13245
    SystemModuleInformation 405,13271
    SystemLockInformation 406,13305
    SystemHandleInformation 407,13337
    SystemObjectInformation 408,13371
} SYSTEM_INFORMATION_CLASS;410,13437
typedef enum _EVENT_TYPE 413,13498
    NotificationEvent,414,13525
    SynchronizationEvent 415,13627
} EVENT_TYPE, *PEVENT_TYPE;PEVENT_TYPE416,13735
(NTAPI *PIO_APC_ROUTINE)PIO_APC_ROUTINE421,13853
typedef VOID (NTAPI *  PKNORMAL_ROUTINE 427,14062
typedef struct _RTL_USER_PROCESS_PARAMETERS 432,14288
    ULONG MaximumLength;433,14334
    ULONG Length;434,14359
    ULONG Flags;435,14377
    ULONG DebugFlags;436,14394
    PVOID ConsoleHandle;437,14416
    ULONG ConsoleFlags;438,14441
    HANDLE StdInputHandle;439,14465
    HANDLE StdOutputHandle;440,14492
    HANDLE StdErrorHandle;441,14520
    UNICODE_STRING CurrentDirectoryPath;442,14547
    HANDLE CurrentDirectoryHandle;443,14588
    UNICODE_STRING DllPath;444,14623
    UNICODE_STRING ImagePathName;445,14651
    UNICODE_STRING CommandLine;446,14685
    PVOID Environment;447,14717
    ULONG StartingPositionLeft;448,14740
    ULONG StartingPositionTop;449,14772
    ULONG Width;450,14803
    ULONG Height;451,14820
    ULONG CharWidth;452,14838
    ULONG CharHeight;453,14859
    ULONG ConsoleTextAttributes;454,14881
    ULONG WindowFlags;455,14914
    ULONG ShowWindowFlags;456,14937
    UNICODE_STRING WindowTitle;457,14964
    UNICODE_STRING DesktopName;458,14996
    UNICODE_STRING ShellInfo;459,15028
    UNICODE_STRING RuntimeData;460,15058
} RTL_USER_PROCESS_PARAMETERS, *PRTL_USER_PROCESS_PARAMETERS;PRTL_USER_PROCESS_PARAMETERS462,15146
#define FILE_PIPE_BYTE_STREAM_TYPE 465,15264
#define FILE_PIPE_MESSAGE_TYPE 466,15319
#define FILE_PIPE_BYTE_STREAM_MODE 469,15434
#define FILE_PIPE_MESSAGE_MODE 470,15485
#define FILE_PIPE_QUEUE_OPERATION 473,15592
#define FILE_PIPE_COMPLETE_OPERATION 474,15643

win32/os.c,12038
# undef ASSERT66,2516
# undef ASSERT_NOT_IMPLEMENTED67,2531
# undef ASSERT_NOT_TESTED68,2562
# undef ASSERT_CURIOSITY_ONCE69,2588
# define ASSERT(70,2618
# define ASSERT_NOT_IMPLEMENTED(71,2651
# define ASSERT_NOT_TESTED(72,2700
# define ASSERT_CURIOSITY_ONCE(73,2744
# undef LOG74,2792
# define LOG(75,2804
#define WOW64_SYSCALL_SETUP_SIZE 96,3839
#define WOW64_SYSCALL_STACK_SIZE 98,3963
const byte *wow64_syscall_stack wow64_syscall_stack102,4205
bool intercept_asynch 106,4339
bool intercept_callbacks 107,4370
process_id_t win32_pid 109,4477
void *peb_ptr;peb_ptr111,4579
static int os_version;112,4594
static uint os_service_pack_major;113,4617
static uint os_service_pack_minor;114,4652
static const char *os_name;os_name115,4687
app_pc vsyscall_page_start 116,4715
app_pc vsyscall_after_syscall 118,4804
app_pc vsyscall_syscall_end_pc 120,4890
uint kilo_hertz;125,5123
#define HEAP_INITIAL_SIZE 128,5170
app_pc dynamo_dll_start 131,5251
app_pc dynamo_dll_end 132,5283
static app_pc dynamo_dll_preferred_base 135,5380
enum {TLS_UNINITIALIZED TLS_UNINITIALIZED138,5462
enum {TLS_UNINITIALIZED = (ushort)138,5462
enum {TLS_UNINITIALIZED = (ushort) 0U}U138,5462
static ushort tls_local_state_offs 139,5502
static ushort tls_dcontext_offs 141,5604
app_pc parent_early_inject_address 144,5686
static int early_inject_location 148,5932
static app_pc early_inject_address 149,5992
static app_pc ldrpLoadDll_address_not_NT 150,6035
static app_pc ldrpLoadDll_address_NT 151,6084
static app_pc ldrpLoadImportModule_address 152,6129
dcontext_t *early_inject_load_helper_dcontext early_inject_load_helper_dcontext153,6180
get_nth_stack_frames_call_target(185,7060
check_for_ldrpLoadImportModule(216,8120
#define STACK_DEPTH_LdrpLoadImportModule 252,9812
DllMainThreadAttach(271,10414
DllMain(295,11271
#define STACK_DEPTH_LdrpLoadDll_NT 333,13337
#define STACK_DEPTH_LdrpLoadDll 334,13374
static profile_t *global_profile global_profile363,14553
static profile_t *dynamo_dll_profile dynamo_dll_profile364,14594
static profile_t *ntdll_profile ntdll_profile365,14639
file_t profile_file 366,14679
get_dll_bounds(370,14813
init_global_profiles(396,15595
dump_dll_profile(466,18572
exit_global_profiles(485,19216
os_supports_avx(522,20316
get_context_xstate_flag(533,20615
windows_version_init(554,21553
print_mem_quota(738,30527
os_init(770,31773
print_mem_stats(978,40063
os_fast_exit(1003,41120
os_slow_exit(1096,44542
os_terminate_wow64_stack(1118,45216
os_terminate_wow64_write_args(1155,46687
#define KILL_PROC_EXIT_STATUS 1171,47338
#define KILL_THREAD_EXIT_STATUS 1172,47371
os_terminate_static_arguments(1176,47476
    typedef struct _terminate_args_t 1181,47642
            const byte *debug_code;debug_code1183,47697
            byte pad_bytes[pad_bytes1184,47733
        } padding;1185,47787
            IN HANDLE ProcessOrThreadHandle;1187,47823
            IN NTSTATUS ExitStatus;1188,47868
        } args;1189,47904
    } terminate_args_t;1190,47920
os_terminate_common(1279,51939
os_terminate_with_code(1406,58239
os_terminate(1413,58434
os_tls_init(1419,58574
os_tls_exit(1425,58687
os_tls_calloc(1434,58963
os_tls_cfree(1441,59152
os_thread_init(1448,59265
os_thread_exit(1475,60201
os_thread_stack_exit(1487,60574
os_thread_under_dynamo(1561,64343
os_thread_not_under_dynamo(1570,64641
typedef struct _takeover_data_t 1583,65102
    app_pc continuation_pc;1584,65136
    bool in_progress;1585,65164
    thread_id_t tid;1586,65186
    HANDLE thread_handle;1589,65282
    CONTEXT_64 *cxt64;cxt641590,65308
    byte *cxt64_alloc;cxt64_alloc1591,65331
    ptr_uint_t memval_stack;1593,65423
    ptr_uint_t memval_r14;1594,65452
} takeover_data_t;1596,65486
typedef struct _thread_list_t 1599,65528
    HANDLE handle;1600,65560
    thread_id_t tid;1601,65579
    void *user_data;user_data1602,65656
} thread_list_t;1603,65705
    TAKEOVER_NEW 1607,65770
    TAKEOVER_TRIED,1608,65822
    TAKEOVER_SUCCESS,1609,65842
static generic_table_t *takeover_table;takeover_table1623,66482
#define INIT_HTABLE_SIZE_TAKEOVER 1624,66522
#define INVALID_PAYLOAD 1625,66584
takeover_table_entry_free(1628,66681
os_take_over_init(1645,67158
os_take_over_exit(1656,67617
os_take_over_mark_thread(1666,67910
os_take_over_unmark_thread(1675,68214
os_list_threads(1688,68734
thread_attach_remove_from_table(1751,71477
thread_attach_restore_full_state(1761,71786
thread_attach_translate(1789,72802
thread_attach_context_revert(1807,73460
thread_attach_exit(1823,74047
os_take_over_wow64_extra(1859,75777
os_take_over_thread(2010,82719
os_thread_take_over_suspended_native(2113,87720
os_take_over_all_unknown_threads(2128,88294
thread_attach_setup(2228,92792
client_thread_target(2306,95812
dr_create_client_thread(2328,96635
get_os_version(2363,97977
get_os_version_ex(2369,98027
is_in_dynamo_dll(2381,98385
mem_state_string(2388,98556
mem_type_string(2400,98810
prot_string(2412,99055
prot_is_readable(2429,99597
prot_is_writable(2448,100083
prot_is_executable(2456,100306
prot_is_copyonwrite(2465,100576
prot_is_guard(2477,100967
memprot_to_osprot(2484,101105
osprot_to_memprot(2509,101841
osprot_add_writecopy(2524,102188
osprot_add_write(2537,102574
osprot_replace_memprot(2550,102967
dump_mbi(2564,103415
dump_mbi_addr(2592,104608
is_pid_me(2618,105535
is_phandle_me(2624,105612
static char dynamorio_library_path[dynamorio_library_path2640,106123
get_dynamorio_library_path(2644,106269
should_inject_into_process(2668,107222
inject_into_process(2739,109977
is_first_thread_in_new_process(2828,114073
maybe_inject_into_process(2891,117355
is_child_in_thin_client(2936,119606
get_dynamorio_dll_start(2965,120526
get_dynamorio_dll_preferred_base(2972,120709
static app_pc highest_user_address 2982,121045
get_system_basic_info(2988,121265
is_user_address(3022,122580
merge_writecopy_pages(3040,123279
find_dynamo_library_vm_areas(3108,126327
print_dynamo_regions(3160,128459
# define MEM_STATS_ADD(3190,129555
add_mem_stats(3201,130026
mem_stats_snapshot(3254,132085
process_image(3394,137969
process_image_post_vmarea(3714,152981
process_memory_region(3761,154533
find_executable_vm_areas(3802,156397
void all_memory_areas_lock(3876,159702
void all_memory_areas_unlock(3877,159754
void update_all_memory_areas(3878,159806
bool remove_from_all_memory_areas(3881,159908
process_mmap(3889,160290
get_application_base(3939,162173
get_application_end(3951,162462
get_image_entry(3965,162822
os_tls_offset(3979,163284
get_local_state(3986,163467
get_local_state_extended(3993,163624
get_thread_private_dcontext(4001,163843
set_thread_private_dcontext(4015,164398
create_profile(4024,164575
free_profile(4063,166504
start_profile(4091,167669
stop_profile(4099,167812
dump_profile_range(4107,167953
dump_profile(4128,168888
sum_profile_range(4135,169054
sum_profile(4153,169738
reset_profile(4160,169896
os_raw_mem_free(4168,170051
os_raw_mem_alloc(4186,170625
os_heap_free(4215,171739
os_heap_reserve(4231,172256
find_free_memory_in_region(4249,172908
os_heap_reserve_in_region(4278,174062
#   define MAX_REGION_ITERS 4283,174253
os_heap_commit(4324,175852
os_heap_decommit(4344,176558
os_heap_systemwide_overcommit(4355,176875
os_heap_get_commit_limit(4377,177706
os_find_free_code_space_in_libs(4414,179370
thread_yield(4432,179952
thread_sleep(4439,180044
os_timeout(4450,180327
thread_suspend(4463,180685
thread_resume(4469,180779
thread_terminate(4475,180871
thread_get_mcontext(4481,180966
thread_set_mcontext(4493,181257
thread_get_context(4506,181666
thread_set_context(4512,181794
thread_set_self_context(4519,181957
thread_set_self_mcontext(4528,182163
get_num_processors(4539,182485
static wchar_t debugbox_title_buf[debugbox_title_buf4562,183494
static void init_debugbox_title_buf(4563,183546
debugbox(4579,184114
#define ID_MSGBOX_STATIC_TEXT 4604,184776
    char *message;message4607,184838
    char *title;title4608,184857
    HANDLE timer;4609,184874
    int seconds_left;4610,184892
    bool done;4611,184914
} timeout_context_t;4612,184929
#define print_timeout_message(4614,184951
message_box_timeout_thread(4626,185555
os_countdown_messagebox(4656,186563
os_countdown_messagebox(4698,187799
load_shared_library(4709,188136
lookup_library_routine(4727,188707
unload_shared_library(4733,188839
shared_library_error(4743,189058
shared_library_bounds(4756,189564
get_allocation_base(4774,190250
enum { MAX_QUERY_VM_BLOCKS 4795,190944
get_allocation_size_ex(4807,191401
get_allocation_size(4880,194270
query_memory_ex(4890,194609
get_memory_info(4962,197763
dr_virtual_query(4993,198790
get_stack_bounds(5012,199552
query_is_readable_without_exception(5096,203220
is_readable_without_exception_query_os(5121,204069
safe_read_syscall(5135,204727
safe_read_ex(5143,204962
safe_read(5160,205665
safe_write_ex(5170,206059
safe_write(5181,206453
get_current_protection(5194,206923
not_readable(5215,207700
mark_page_as_guard(5234,208287
internal_change_protection(5265,209478
os_set_protection(5465,218144
set_protection(5475,218419
change_protection(5490,219076
make_hookable(5500,219505
make_unhookable(5512,219993
make_writable(5526,220557
make_copy_on_writable(5537,220936
make_unwritable(5546,221263
convert_NT_to_Dos_path(5555,221520
convert_to_NT_file_path_wide(5645,225514
convert_to_NT_file_path_wide_free(5726,228529
convert_to_NT_file_path(5736,228839
os_internal_create_file(5842,233750
os_internal_create_file_test(5854,234188
os_file_exists(5867,234581
os_get_file_size(5883,235324
os_get_file_size_by_handle(5907,236082
os_set_file_size(5926,236698
os_get_disk_free_space(5946,237412
os_copy_file(6033,240944
os_create_dir(6050,241625
os_open_directory(6067,242401
os_open(6090,243276
os_close(6133,245295
os_open_protected(6140,245384
os_close_protected(6146,245492
os_write(6156,245772
os_read(6180,246422
os_flush(6200,246891
os_seek(6207,247042
os_tell(6245,248090
os_delete_mapped_file(6267,248774
os_delete_file_w(6340,251734
os_delete_file(6386,253458
os_rename_file(6404,254124
os_rename_file_in_directory(6466,256919
os_map_file(6508,258650
#   define MAX_MAP_LOOP_ITERS 6519,258974
os_unmap_file(6588,261918
translate_context(6603,262501
set_mcontext_for_syscall(6628,263440
os_raise_exception(6674,264963
    struct _raise_exception_arguments_t 6682,265261
        PEXCEPTION_RECORD ExceptionRecord;6683,265303
        PCONTEXT Context;6684,265346
        DWORD SearchFrames;6685,265372
os_dump_core_segment_info(6714,266558
os_dump_core_dump_thread(6739,267510
os_dump_core_live_dump(6788,269622
os_dump_core_external_dump(7020,279600
os_dump_core(7072,281960
END_DATA_SECTION(7128,283792
detach_helper(7284,291831
detach_internal(7669,309497
detach_internal_synch(7684,310073
is_thread_currently_native(7696,310399
mutex_get_contended_event(7705,310619
os_wait_event(7735,311687
os_wait_handle(7817,315435
mutex_wait_contended_lock(7833,315803
mutex_notify_released_lock(7852,316532
rwlock_wait_contended_writer(7860,316722
rwlock_notify_writer(7871,317141
rwlock_wait_contended_reader(7883,317518
rwlock_notify_readers(7894,317947
create_event(7905,318322
destroy_event(7911,318397
signal_event(7917,318455
reset_event(7923,318510
wait_for_event(7930,318634
get_timer_frequency(7936,318754
os_random_seed(7965,319698
early_inject_init(7983,320184
earliest_inject_init(8240,333326
earliest_inject_cleanup(8281,335035
#define SECURITY_MAX_SID_STRING_SIZE 8297,335590
get_process_SID_string(8304,335880
get_Everyone_SID(8324,336534
get_process_owner_SID(8341,336989
os_validate_owner_equals(8368,337890
os_filesystem_supports_ownership(8462,341443
open_trusted_cache_root_directory(8501,342835
os_user_directory_supports_ownership(8550,344902
os_validate_user_owned(8589,346726
os_current_user_directory(8625,348143
os_check_option_compatibility(8720,352540

win32/os_exports.h,6168
#define _OS_EXPORTS_H_ 43,2007
typedef ushort cxt_seg_t;47,2126
# define CXT_XIP 48,2152
# define CXT_XAX 49,2173
# define CXT_XCX 50,2194
# define CXT_XDX 51,2215
# define CXT_XBX 52,2236
# define CXT_XSP 53,2257
# define CXT_XBP 54,2278
# define CXT_XSI 55,2299
# define CXT_XDI 56,2320
# define CXT_XMM(60,2497
# define CXT_XFLAGS 64,2748
typedef DWORD cxt_seg_t;66,2781
# define CXT_XIP 67,2806
# define CXT_XAX 68,2827
# define CXT_XCX 69,2848
# define CXT_XDX 70,2869
# define CXT_XBX 71,2890
# define CXT_XSP 72,2911
# define CXT_XBP 73,2932
# define CXT_XSI 74,2953
# define CXT_XDI 75,2974
# define CXT_XFLAGS 76,2995
# define FXSAVE_XMM0_OFFSET 81,3213
# define CXT_XMM(82,3245
#define WINDOWS_VERSION_8 94,3685
#define WINDOWS_VERSION_7 95,3719
#define WINDOWS_VERSION_VISTA 96,3753
#define WINDOWS_VERSION_2003 97,3787
#define WINDOWS_VERSION_XP 98,3821
#define WINDOWS_VERSION_2000 99,3855
#define WINDOWS_VERSION_NT 100,3889
    EXCEPTION_LIST_TIB_OFFSET 112,4328
    EXCEPTION_LIST_TIB_OFFSET = 0x000,x000112,4328
    TOP_STACK_TIB_OFFSET 113,4367
    TOP_STACK_TIB_OFFSET      = 0x008,x008113,4367
    BASE_STACK_TIB_OFFSET 114,4406
    BASE_STACK_TIB_OFFSET     = 0x010,x010114,4406
    FIBER_DATA_TIB_OFFSET 115,4445
    FIBER_DATA_TIB_OFFSET     = 0x020,x020115,4445
    SELF_TIB_OFFSET 116,4484
    SELF_TIB_OFFSET           = 0x030,x030116,4484
    PID_TIB_OFFSET 117,4523
    PID_TIB_OFFSET            = 0x040,x040117,4523
    TID_TIB_OFFSET 118,4562
    TID_TIB_OFFSET            = 0x048,x048118,4562
    ERRNO_TIB_OFFSET 119,4601
    ERRNO_TIB_OFFSET          = 0x068,x068119,4601
    WOW64_TIB_OFFSET 120,4640
    WOW64_TIB_OFFSET          = 0x100,x100120,4640
    PEB_TIB_OFFSET 121,4679
    PEB_TIB_OFFSET            = 0x060,x060121,4679
    FLS_DATA_TIB_OFFSET 122,4718
    FLS_DATA_TIB_OFFSET       = 0x17c8,x17c8122,4718
    NT_RPC_TIB_OFFSET 123,4758
    NT_RPC_TIB_OFFSET         = 0x1698,x1698123,4758
    NLS_CACHE_TIB_OFFSET 124,4798
    NLS_CACHE_TIB_OFFSET      = 0x17a0,x17a0124,4798
    EXCEPTION_LIST_TIB_OFFSET 126,4844
    EXCEPTION_LIST_TIB_OFFSET = 0x00,x00126,4844
    TOP_STACK_TIB_OFFSET 127,4882
    TOP_STACK_TIB_OFFSET      = 0x04,x04127,4882
    BASE_STACK_TIB_OFFSET 128,4920
    BASE_STACK_TIB_OFFSET     = 0x08,x08128,4920
    FIBER_DATA_TIB_OFFSET 129,4958
    FIBER_DATA_TIB_OFFSET     = 0x10,x10129,4958
    SELF_TIB_OFFSET 130,4996
    SELF_TIB_OFFSET           = 0x18,x18130,4996
    PID_TIB_OFFSET 131,5034
    PID_TIB_OFFSET            = 0x20,x20131,5034
    TID_TIB_OFFSET 132,5072
    TID_TIB_OFFSET            = 0x24,x24132,5072
    ERRNO_TIB_OFFSET 133,5110
    ERRNO_TIB_OFFSET          = 0x34,x34133,5110
    WOW64_TIB_OFFSET 134,5148
    WOW64_TIB_OFFSET          = 0xC0,xC0134,5148
    PEB_TIB_OFFSET 135,5186
    PEB_TIB_OFFSET            = 0x30,x30135,5186
    FLS_DATA_TIB_OFFSET 136,5224
    FLS_DATA_TIB_OFFSET       = 0xfb4,xfb4136,5224
    NT_RPC_TIB_OFFSET 137,5263
    NT_RPC_TIB_OFFSET         = 0xf1c,xf1c137,5263
    NLS_CACHE_TIB_OFFSET 138,5302
    NLS_CACHE_TIB_OFFSET      = 0xfa0,xfa0138,5302
# define SEG_TLS 143,5363
# define LIB_SEG_TLS 144,5387
# define SEG_TLS 146,5441
# define LIB_SEG_TLS 147,5485
#define get_tls(151,5630
set_tls(155,5755
#define get_own_teb(161,5965
#define OS_ALLOC_GRANULARITY 167,6189
#define MAP_FILE_VIEW_ALIGNMENT 168,6229
#define CONTEXT_HEAP_SIZE(184,6852
#define CONTEXT_HEAP_SIZE_OPAQUE 185,6937
# define ACTUAL_PRAGMA(216,8175
# define ACTUAL_PRAGMA(218,8222
#define START_DATA_SECTION(220,8270
#define VAR_IN_SECTION(221,8341
#define END_DATA_SECTION(222,8384
#define START_DO_NOT_OPTIMIZE 223,8439
#define END_DO_NOT_OPTIMIZE 224,8505
#define VSYSCALL_PAGE_START_BOOTSTRAP_VALUE 253,9396
#define VSYSCALL_BOOTSTRAP_ADDR 254,9474
#define VSYSCALL_AFTER_SYSCALL_BOOTSTRAP_VALUE 255,9540
file_t profile_file;274,10287
mutex_t profile_dump_lock;275,10308
typedef struct _profile_t 277,10336
    void *start;start278,10364
    void *end;end279,10381
    uint bucket_shift;280,10396
    uint *buffer;buffer281,10419
    size_t buffer_size;282,10437
    bool enabled;283,10476
    dcontext_t *dcontext;dcontext284,10494
    HANDLE handle;285,10520
} profile_t;286,10539
    HIDE_FROM_QUERY_TYPE_PROTECT 320,11285
    HIDE_FROM_QUERY_TYPE_PROTECT   = 0x1,x1320,11285
    HIDE_FROM_QUERY_BASE_SIZE 321,11355
    HIDE_FROM_QUERY_BASE_SIZE      = 0x2,x2321,11355
    HIDE_FROM_QUERY_RETURN_INVALID 323,11512
    HIDE_FROM_QUERY_RETURN_INVALID = 0x4,x4323,11512
enum tls_flags 328,11691
    TLS_FLAG_BITMAP_TOP_DOWN 329,11708
    TLS_FLAG_BITMAP_TOP_DOWN  = 0x1,x1329,11708
    TLS_FLAG_CACHE_LINE_START 332,11918
    TLS_FLAG_CACHE_LINE_START = 0x2,x2332,11918
    TLS_FLAG_BITMAP_FILL 336,12195
    TLS_FLAG_BITMAP_FILL      = 0x4,x4336,12195
    OS_ASLR_DISABLE_ASLR_ALL 347,12681
    OS_ASLR_DISABLE_ASLR_ALL      = 0x01,x01347,12681
    OS_ASLR_DISABLE_PCACHE_ALL 348,12757
    OS_ASLR_DISABLE_PCACHE_ALL    = 0x02,x02348,12757
    OS_ASLR_DISABLE_ASLR_DETECT 353,12956
    OS_ASLR_DISABLE_ASLR_DETECT   = 0x10,x10353,12956
    OS_ASLR_DISABLE_PCACHE_DETECT 354,13018
    OS_ASLR_DISABLE_PCACHE_DETECT = 0x20,x20354,13018
    DETACH_UNHANDLED_VIOLATION 361,13258
    DETACH_UNHANDLED_VIOLATION   = 0x01,x01361,13258
    DETACH_UNSUPPORTED_MODULE 364,13432
    DETACH_UNSUPPORTED_MODULE    = 0x02,x02364,13432
    DETACH_ON_TERMINATE 371,13850
    DETACH_ON_TERMINATE          = 0x010,x010371,13850
    DETACH_ON_TERMINATE_NO_CLEAN 373,13948
    DETACH_ON_TERMINATE_NO_CLEAN = 0x020,x020373,13948
    DETACH_ON_TERMINATE_NO_KILL 379,14233
    DETACH_ON_TERMINATE_NO_KILL  = 0x040,x040379,14233
    DETACH_ON_TERMINATE_NO_LOCKS 384,14525
    DETACH_ON_TERMINATE_NO_LOCKS = 0x080,x080384,14525
    DETACH_ON_TERMINATE_NO_HANG 387,14695
    DETACH_ON_TERMINATE_NO_HANG  = 0x100,x100387,14695
    DETACH_NORMAL_TYPE 396,14965
    DETACH_BAD_STATE 397,15003
    DETACH_BAD_STATE_NO_CLEANUP 398,15041
get_app_pc_from_intercept_pc_if_necessary(474,17798

win32/os_private.h,5666
#define _OS_PRIVATE_H_ 42,1937
#define GLOBAL_NT_PREFIX 47,2056
typedef struct _os_thread_data_t 53,2237
    byte *stack_base;stack_base60,2690
    byte *stack_top;stack_top61,2712
    bool teb_stack_no_longer_valid;62,2733
} os_thread_data_t;63,2769
    byte *dr_base;dr_base73,3016
    byte *ntdll_base;ntdll_base74,3035
    byte *tofree_base;tofree_base75,3057
    byte *hook_location;hook_location76,3080
    char dynamorio_lib_path[dynamorio_lib_path77,3105
} earliest_args_t;78,3144
#define EARLY_INJECT_HOOK_SIZE 85,3418
#define SYSCALL_NOT_PRESENT 155,5020
#define SYSCALL(193,6221
#undef SYSCALL198,6514
    SYS_MAX,199,6529
#define SYSCALL_PARAM_MAX_OFFSET 212,7188
# define SYSCALL_PARAM_OFFSET(215,7307
# define SYSCALL_PARAM_OFFSET(224,7680
sys_param_addr(233,8052
sys_param(251,8517
postsys_param(261,8831
#define INTERCEPTION_CODE_SIZE 304,10123
#define THREAD_START_ADDR 307,10243
#define THREAD_START_ARG 308,10299
#define UNDER_DYN_HACK 319,10444
#define IS_UNDER_DYN_HACK(320,10472
#define INTERCEPT_POINT(350,11437
#define INTERCEPT_ALL_POINTS 351,11475
    INTERCEPT_ALL_POINTS364,12101
} retakeover_point_t;365,12126
#undef INTERCEPT_POINT366,12148
# undef CONTEXT_XSTATE 397,13394
#define CONTEXT_XSTATE 409,13960
#define CONTEXT_XMM_FLAG 410,13998
#define CONTEXT_YMM_FLAG 411,14087
#define CONTEXT_PRESERVE_XMM 412,14127
#define CONTEXT_PRESERVE_YMM 413,14212
#define CONTEXT_DR_STATE_NO_YMM 414,14257
#define CONTEXT_DR_STATE 416,14411
#define CONTEXT_DR_STATE_ALLPROC 421,14699
#define XSTATE_HEADER_SIZE 424,14859
#define YMMH_AREA(425,14907
#define MAX_CONTEXT_64_SIZE 426,14967
# define MAX_CONTEXT_SIZE 428,15043
# define MAX_CONTEXT_SIZE 430,15101
      EXCEPTION_INFORMATION_READ_EXECUTE_FAULT 434,15181
      EXCEPTION_INFORMATION_WRITE_FAULT 437,15328
      EXCEPTION_INFORMATION_EXECUTE_FAULT 438,15380
typedef struct DECLSPEC_ALIGN(451,15906
typedef struct _XMM_SAVE_AREA32 456,16006
    WORD   ControlWord;457,16040
    WORD   StatusWord;458,16064
    BYTE  TagWord;459,16087
    BYTE  Reserved1;460,16106
    WORD   ErrorOpcode;461,16127
    DWORD ErrorOffset;462,16151
    WORD   ErrorSelector;463,16174
    WORD   Reserved2;464,16200
    DWORD DataOffset;465,16222
    WORD   DataSelector;466,16244
    WORD   Reserved3;467,16269
    DWORD MxCsr;468,16291
    DWORD MxCsr_Mask;469,16308
    M128A FloatRegisters[FloatRegisters470,16330
    M128A XmmRegisters[XmmRegisters471,16359
    BYTE  Reserved4[Reserved4472,16387
} XMM_SAVE_AREA32, *PXMM_SAVE_AREA32;PXMM_SAVE_AREA32473,16412
typedef XSAVE_FORMAT XMM_SAVE_AREA32,475,16457
typedef XSAVE_FORMAT XMM_SAVE_AREA32, *PXMM_SAVE_AREA32;PXMM_SAVE_AREA32475,16457
typedef struct DECLSPEC_ALIGN(478,16523
            M128A Header[Header558,17760
            M128A Legacy[Legacy559,17789
            M128A Xmm0;560,17818
            M128A Xmm1;561,17842
            M128A Xmm2;562,17866
            M128A Xmm3;563,17890
            M128A Xmm4;564,17914
            M128A Xmm5;565,17938
            M128A Xmm6;566,17962
            M128A Xmm7;567,17986
            M128A Xmm8;568,18010
            M128A Xmm9;569,18034
            M128A Xmm10;570,18058
            M128A Xmm11;571,18083
            M128A Xmm12;572,18108
            M128A Xmm13;573,18133
            M128A Xmm14;574,18158
            M128A Xmm15;575,18183
    } DUMMYUNIONNAME;577,18235
    M128A VectorRegister[VectorRegister583,18298
    DWORD64 VectorControl;584,18328
    DWORD64 DebugControl;590,18411
    DWORD64 LastBranchToRip;591,18437
    DWORD64 LastBranchFromRip;592,18466
    DWORD64 LastExceptionToRip;593,18497
    DWORD64 LastExceptionFromRip;594,18529
} CONTEXT_64,595,18563
} CONTEXT_64, *PCONTEXT_64;PCONTEXT_64595,18563
#define __IMAGE_UNWIND_INFO666,20486
typedef enum _unwind_opcode_t 681,21369
    UWOP_PUSH_NONVOL 682,21401
    UWOP_ALLOC_LARGE,683,21457
    UWOP_ALLOC_SMALL,684,21525
    UWOP_SET_FPREG,685,21592
    UWOP_SAVE_NONVOL,686,21671
    UWOP_SAVE_NONVOL_FAR,687,21748
    UWOP_SAVE_XMM128,688,21828
    UWOP_SAVE_XMM128_FAR,689,21904
    UWOP_PUSH_MACHFRAME 690,21983
} unwind_opcode_t;691,22055
typedef union _unwind_code_t 693,22075
        byte CodeOffset;695,22119
        byte UnwindOp 696,22144
        byte OpInfo 697,22170
    USHORT FrameOffset;699,22203
} unwind_code_t;700,22227
# define UNW_FLAG_EHANDLER 703,22271
# define UNW_FLAG_UHANDLER 704,22304
# define UNW_FLAG_CHAININFO 705,22337
typedef struct _unwind_info_t 708,22378
    byte Version 709,22410
    byte Flags 710,22436
    byte SizeOfProlog;711,22462
    byte CountOfCodes;712,22485
    byte FrameRegister:FrameRegister713,22508
    byte FrameOffset 714,22534
    unwind_code_t UnwindCode[UnwindCode715,22560
    unwind_code_t MoreUnwindCode[MoreUnwindCode719,22786
        OPTIONAL ULONG ExceptionHandler;721,22868
        OPTIONAL ULONG FunctionEntry;722,22909
    OPTIONAL ULONG ExceptionData[ExceptionData724,22954
} unwind_info_t;726,22997
#define UNWIND_INFO_PTR_ADDR(729,23072
#define UNWIND_INFO_PTR_RVA(733,23249
#define UNWIND_INFO_DATA_ADDR(736,23384
#define UNWIND_INFO_DATA_RVA(737,23460
typedef struct _scope_table_t 742,23667
    ULONG Count;743,23699
        ULONG BeginAddress;745,23729
        ULONG EndAddress;746,23757
        ULONG HandlerAddress;747,23783
        ULONG JumpTarget;748,23813
    } ScopeRecord[ScopeRecord749,23839
} scope_table_t;750,23861
#define RVA_TO_VA(756,23951
enum {SYMBOLS_LOGLEVEL SYMBOLS_LOGLEVEL795,24941
#define PAGE_PROTECTION_QUALIFIERS 872,27055
#define IPC_ALERT(880,27280

win32/pre_inject.c,763
#define WIN32_LEAN_AND_MEAN58,2532
# undef assert85,3307
#define assert 88,3370
#   define ASSERT(92,3503
#   define ASSERT(94,3589
# define ASSERT(97,3696
#define BUFFER_SIZE_BYTES(105,3901
#define BUFFER_SIZE_ELEMENTS(106,3949
#define BUFFER_LAST_ELEMENT(107,4027
#define NULL_TERMINATE_BUFFER(108,4098
#define VERBOSE 113,4380
# define VERBOSE_MESSAGE(118,4523
# define VERBOSE_MESSAGE(120,4596
display_error_helper(124,4646
internal_error(135,4976
# define FILENAME_LENGTH 138,5043
# define FILENAME_LENGTH 141,5123
display_error(154,5472
typedef int (*int_func_t)int_func_t163,5667
typedef void (*void_func_t)void_func_t164,5697
load_dynamorio_lib(171,5852
parameters_present(343,12842
process_attach(372,13705
__declspec(446,16469

win32/syscall.c,5254
int *syscalls syscalls49,2103
int *wow64_index wow64_index51,2210
app_pc int_syscall_address 59,2611
app_pc sysenter_ret_address 65,3029
#define SNAPSHOT_THRESHOLD 74,3487
const char * const syscall_names[syscall_names78,3589
#define SYSCALL(79,3628
#undef SYSCALL84,3920
const int windows_8_x64_syscalls[windows_8_x64_syscalls86,3938
#define SYSCALL(87,3977
#undef SYSCALL92,4265
const int windows_8_wow64_syscalls[windows_8_wow64_syscalls94,4283
#define SYSCALL(95,4324
#undef SYSCALL100,4612
const int windows_8_x86_syscalls[windows_8_x86_syscalls102,4630
#define SYSCALL(103,4669
#undef SYSCALL108,4957
const int windows_7_x64_syscalls[windows_7_x64_syscalls110,4975
#define SYSCALL(111,5014
#undef SYSCALL116,5302
const int windows_7_syscalls[windows_7_syscalls118,5320
#define SYSCALL(119,5355
#undef SYSCALL124,5643
const int windows_vista_sp1_x64_syscalls[windows_vista_sp1_x64_syscalls126,5661
#define SYSCALL(127,5708
#undef SYSCALL132,6001
const int windows_vista_sp1_syscalls[windows_vista_sp1_syscalls134,6019
#define SYSCALL(135,6062
#undef SYSCALL140,6351
const int windows_vista_sp0_x64_syscalls[windows_vista_sp0_x64_syscalls142,6369
#define SYSCALL(143,6416
#undef SYSCALL148,6709
const int windows_vista_sp0_syscalls[windows_vista_sp0_syscalls150,6727
#define SYSCALL(151,6770
#undef SYSCALL156,7059
const int windows_2003_syscalls[windows_2003_syscalls158,7077
#define SYSCALL(159,7115
#undef SYSCALL164,7402
const int windows_XP_x64_syscalls[windows_XP_x64_syscalls166,7420
#define SYSCALL(167,7460
#undef SYSCALL172,7747
const int windows_XP_wow64_index[windows_XP_wow64_index175,7810
#define SYSCALL(176,7849
#undef SYSCALL181,8137
const int windows_XP_syscalls[windows_XP_syscalls183,8155
#define SYSCALL(184,8191
#undef SYSCALL189,8476
const int windows_2000_syscalls[windows_2000_syscalls191,8494
#define SYSCALL(192,8532
#undef SYSCALL197,8818
const int windows_NT_sp4_syscalls[windows_NT_sp4_syscalls199,8836
#define SYSCALL(200,8876
#undef SYSCALL205,9164
const int windows_NT_sp3_syscalls[windows_NT_sp3_syscalls208,9244
#define SYSCALL(209,9284
#undef SYSCALL214,9572
const int windows_NT_sp0_syscalls[windows_NT_sp0_syscalls217,9652
#define SYSCALL(218,9692
#undef SYSCALL223,9980
const uint syscall_argsz[syscall_argsz227,10035
# define SYSCALL(229,10077
# define SYSCALL(234,10352
#undef SYSCALL240,10650
static const int syscall_requires_action[syscall_requires_action246,10828
#define SYSCALL(247,10875
#undef SYSCALL252,11161
static byte *syscall_trampoline_pc[syscall_trampoline_pc256,11226
static app_pc syscall_trampoline_skip_pc[syscall_trampoline_skip_pc257,11271
static app_pc syscall_trampoline_hook_pc[syscall_trampoline_hook_pc258,11322
static app_pc syscall_trampoline_copy_pc[syscall_trampoline_copy_pc259,11373
static byte syscall_trampoline_gbop_fpo_offset[syscall_trampoline_gbop_fpo_offset268,11746
#define MAX_NTOSKRNL_SYSCALL_NUM 320,14167
ignorable_system_call(323,14214
optimizable_system_call(345,15169
syscall_while_native(367,15788
intercept_syscall_for_thin_client(542,25256
intercept_native_syscall(558,25824
init_syscall_trampolines(594,27385
exit_syscall_trampolines(637,29676
check_syscall_array_sizes(655,30252
check_syscall_numbers(672,31124
align_page_boundary(705,32377
is_newly_created_process(721,33012
syscall_uses_wow64_index(799,36546
syscall_uses_edx_param_base(806,36692
#define SYSCALL_PC(820,37393
#define SET_RETURN_VAL(830,37827
pre_system_call_param_base(842,38193
presys_CreateProcess(859,38649
presys_CreateUserProcess(904,40639
presys_CreateThread(983,44492
presys_CreateThreadEx(1030,46824
presys_CreateWorkerFactory(1073,48629
static const char * const env_to_propagate[env_to_propagate1102,49594
static const wchar_t * const wenv_to_propagate[wenv_to_propagate1109,49786
#define NUM_ENV_TO_PROPAGATE 1116,49992
add_dr_env_vars(1120,50141
not_first_thread_in_new_process(1299,57446
presys_ResumeThread(1310,57801
presys_TerminateProcess(1382,61293
presys_TerminateThread(1469,65596
presys_SetContextThread(1546,69150
is_cb_return_syscall(1677,75644
presys_CallbackReturn(1690,76032
check_for_stack_free(1727,77960
presys_AllocateVirtualMemory(1759,79519
presys_FreeVirtualMemory(1851,84180
presys_ProtectVirtualMemory(1979,89681
presys_MapViewOfSection(2132,97047
presys_UnmapViewOfSection(2175,98950
presys_FlushInstructionCache(2250,102119
presys_CreateSection(2292,103675
presys_Close(2325,105101
presys_OpenFile(2339,105506
pre_system_call(2371,106860
postsys_CreateUserProcess(2599,116977
postsys_GetContextThread(2709,122479
postsys_SuspendThread(2856,129362
postsys_AllocateVirtualMemory(3002,136895
postsys_QueryVirtualMemory(3149,144072
postsys_create_or_open_section(3246,149216
postsys_CreateSection(3332,153515
postsys_OpenSection(3372,155328
postsys_MapViewOfSection(3457,159206
postsys_UnmapViewOfSection(3609,166174
postsys_DuplicateObject(3643,167617
void post_system_call(3671,169009
dr_syscall_get_param(3903,180494
dr_syscall_set_param(3919,181130
dr_syscall_get_result(3936,181768
dr_syscall_set_result(3946,182064
dr_syscall_set_sysnum(3957,182426
dr_syscall_invoke_another(3969,182824

win32/syscallx.h,2561
#define NONE 90,3911
#define ACTION_LOG 92,4028
SYSCALL(Continue,96,4518
SYSCALL(CallbackReturn,97,4691
SYSCALL(SetContextThread,98,4864
SYSCALL(GetContextThread,99,5037
SYSCALL(CreateProcess,100,5210
SYSCALL(CreateProcessEx,101,5383
SYSCALL(CreateUserProcess,102,5556
SYSCALL(TerminateProcess,103,5729
SYSCALL(CreateThread,104,5902
SYSCALL(CreateThreadEx,105,6075
SYSCALL(CreateWorkerFactory,106,6248
SYSCALL(TerminateThread,107,6421
SYSCALL(SuspendThread,108,6594
SYSCALL(ResumeThread,109,6767
SYSCALL(AllocateVirtualMemory,110,6940
SYSCALL(FreeVirtualMemory,reeVirtualMemory111,7113
SYSCALL(ProtectVirtualMemory,112,7286
SYSCALL(QueryVirtualMemory,113,7459
SYSCALL(WriteVirtualMemory,114,7632
SYSCALL(MapViewOfSection,115,7805
SYSCALL(UnmapViewOfSection,116,7978
SYSCALL(UnmapViewOfSectionEx,117,8151
SYSCALL(FlushInstructionCache,lushInstructionCache118,8324
SYSCALL(FreeUserPhysicalPages,reeUserPhysicalPages119,8497
SYSCALL(MapUserPhysicalPages,120,8670
SYSCALL(SetInformationVirtualMemory,121,8843
SYSCALL(Wow64AllocateVirtualMemory64,122,9016
SYSCALL(OpenSection,125,9279
SYSCALL(CreateSection,126,9452
SYSCALL(Close,127,9625
SYSCALL(DuplicateObject,128,9798
SYSCALL(AlertResumeThread,134,10123
SYSCALL(OpenFile,136,10303
SYSCALL(TestAlert,138,10523
SYSCALL(RaiseException,139,10696
SYSCALL(CreateFile,140,10869
SYSCALL(CreateKey,141,11042
SYSCALL(OpenKey,142,11215
SYSCALL(OpenKeyEx,143,11388
SYSCALL(OpenProcess,144,11561
SYSCALL(OpenProcessToken,145,11734
SYSCALL(OpenProcessTokenEx,146,11907
SYSCALL(OpenThread,147,12080
SYSCALL(OpenThreadToken,148,12253
SYSCALL(OpenThreadTokenEx,149,12426
SYSCALL(QueryAttributesFile,150,12599
SYSCALL(QueryFullAttributesFile,151,12772
SYSCALL(SetInformationFile,152,12945
SYSCALL(SetInformationThread,153,13118
SYSCALL(SetValueKey,154,13291
#undef NONE156,13465
#undef ACTION_LOG157,13477
SYSCALL(AlertThread,193,15569
SYSCALL(DelayExecution,194,15705
SYSCALL(ReplyWaitReceivePort,195,15841
SYSCALL(ReplyWaitReceivePortEx,196,15977
SYSCALL(ReplyWaitReplyPort,197,16113
SYSCALL(ReplyWaitSendChannel,198,16249
SYSCALL(RequestWaitReplyPort,199,16385
SYSCALL(SendWaitReplyChannel,200,16521
SYSCALL(SetHighWaitLowEventPair,201,16657
SYSCALL(SetLowWaitHighEventPair,202,16793
SYSCALL(SignalAndWaitForSingleObject,203,16929
SYSCALL(WaitForDebugEvent,204,17065
SYSCALL(WaitForKeyedEvent,205,17201
SYSCALL(WaitForMultipleObjects,206,17337
SYSCALL(WaitForSingleObject,207,17473
SYSCALL(WaitHighEventPair,208,17609
SYSCALL(WaitLowEventPair,209,17745

x86/arch.c,5816
generated_code_t *shared_code shared_code69,2638
generated_code_t *shared_code_x86 shared_code_x8675,2898
generated_code_t *shared_code_x86_to_x64 shared_code_x86_to_x6479,3069
static int syscall_method 82,3126
byte *app_sysenter_instr_addr app_sysenter_instr_addr83,3184
static bool sysenter_hook_failed 85,3234
reg_spill_tls_offs(102,3787
dump_emitted_routines(117,4223
dump_emitted_routines_to_file(207,7800
code_align_forward(226,8435
move_to_start_of_cache_line(236,8641
#define GENCODE_RESERVE_SIZE 246,9032
#define GENCODE_COMMIT_SIZE 248,9076
check_size_and_cache_line(252,9200
release_final_page(267,9773
shared_gencode_init(288,10695
far_ibl_set_targets(514,20147
arch_init(538,21152
arch_extract_profile(640,25569
arch_profile_exit(728,29574
arch_exit(739,29852
emit_ibl_routine_and_template(762,30615
emit_ibl_routines(802,32290
emit_syscall_routines(862,35353
arch_thread_init(966,40492
arch_thread_profile_exit(1165,48904
arch_thread_exit(1172,49035
arch_patch_syscall_common(1205,50133
arch_patch_syscall(1217,50744
update_generated_hashtable_access(1228,51128
protect_generated_code(1234,51239
get_source_fragment_type(1260,52196
is_shared_syscall_routine(1274,52675
is_indirect_branch_lookup_routine(1296,53674
get_trace_ibl_routine(1309,54115
get_private_ibl_routine(1334,54971
get_shared_ibl_routine(1352,55561
get_alternate_ibl_routine(1369,56105
get_unlinked_type(1392,57004
get_linked_type(1405,57288
get_linked_entry(1418,57553
get_trace_cmp_entry(1443,58569
get_unlinked_entry(1456,59050
in_generated_shared_routine(1474,59775
in_generated_routine(1491,60456
in_context_switch_code(1502,60787
in_indirect_branch_lookup_code(1512,61170
fcache_enter_routine(1533,61963
get_fcache_enter_private_routine(1541,62195
get_reset_exit_stub(1547,62307
get_do_syscall_entry(1554,62463
get_fcache_enter_indirect_routine(1562,62641
get_do_callback_return_entry(1568,62853
get_do_int_syscall_entry(1576,63104
get_do_clone_syscall_entry(1583,63264
get_do_vmkuw_syscall_entry(1590,63448
fcache_return_routine(1599,63627
fcache_return_routine_ex(1606,63783
fcache_return_coarse_routine(1613,63996
trace_head_return_coarse_routine(1624,64306
get_clean_call_save(1635,64624
get_clean_call_restore(1647,65003
get_client_ibl_xfer_entry(1660,65412
get_ibl_routine_type_ex(1678,65995
get_ibl_routine_type(1811,71299
get_ibl_routine_template_type(1821,71679
get_branch_type_name(1861,73031
get_ibl_branch_type(1869,73256
get_ibl_routine_name(1888,73723
get_ibl_routine_code_internal(1983,79127
get_ibl_routine_ex(2026,80776
get_ibl_routine(2066,82119
get_ibl_routine_template(2075,82468
table_flags_to_frag_flags(2093,83229
get_target_delete_entry_pc(2121,84545
get_ibl_routine_code_ex(2148,85726
get_ibl_routine_code(2162,86224
shared_syscall_routine_ex(2183,87188
shared_syscall_routine(2195,87569
unlinked_shared_syscall_routine_ex(2201,87707
unlinked_shared_syscall_routine(2213,88106
after_shared_syscall_code(2219,88262
after_shared_syscall_code_ex(2225,88407
after_shared_syscall_addr(2233,88687
after_do_syscall_code(2247,89134
after_do_syscall_code_ex(2253,89271
after_do_syscall_addr(2261,89533
after_do_shared_syscall_addr(2272,89879
is_after_main_do_syscall_addr(2284,90383
is_after_do_syscall_addr(2293,90710
is_after_syscall_address(2306,91261
is_after_syscall_that_rets(2326,91876
get_new_thread_start(2346,92685
trace_head_incr_routine(2361,93098
get_pextrw_entry(2370,93296
get_pinsrw_entry(2377,93440
get_fcache_enter_shared_routine(2386,93630
fcache_enter_shared_routine(2392,93759
fcache_return_shared_routine(2430,95415
trace_head_incr_shared_routine(2442,95729
get_fcache_target(2455,96083
set_fcache_target(2466,96403
typedef struct _translate_walk_t 2492,97549
    priv_mcontext_t *mc;mc2494,97624
    byte *start_cache;start_cache2496,97706
    byte *end_cache;end_cache2497,97729
    bool reg_spilled[reg_spilled2501,97876
    bool reg_tls[reg_tls2502,97913
    int xsp_adjust;2507,98149
    bool unsupported_mangle;2509,98241
    bool in_mangle_region;2511,98316
    app_pc translation;2513,98413
} translate_walk_t;2514,98437
translate_walk_init(2517,98470
instr_check_xsp_mangling(2527,98740
instr_is_trace_cmp(2599,102333
instr_is_inline_syscall_jmp(2627,103202
instr_is_seg_ref_load(2639,103599
translate_walk_track(2662,104455
translate_walk_good_state(2818,112038
translate_walk_restore(2827,112366
translate_restore_clean_call(2883,114600
recreate_app_state_from_info(2907,115598
recreate_app_state_from_ilist(3042,121462
recreate_selfmod_ilist(3262,132008
recreate_app_state_internal(3308,134222
recreate_app_pc(3610,148847
recreate_app_state(3687,152355
translation_info_alloc_size(3730,153694
translation_info_alloc(3737,153933
translation_info_free(3749,154284
set_translation(3756,154496
translation_info_print(3781,155511
record_translation_info(3808,156698
#   define NUM_INITIAL_TRANSLATIONS 3849,158380
stress_test_recreate_state(3995,164932
get_global_do_syscall_entry(4100,169482
get_cleanup_and_terminate_global_do_syscall_entry(4150,170900
#define VSYS_DISPLACED_LEN 4215,173814
hook_vsyscall(4218,173856
#define CHECK(4243,174643
#undef CHECK4315,177633
unhook_vsyscall(4319,177654
check_syscall_method(4347,178548
get_syscall_method(4499,186279
does_syscall_ret_to_callsite(4506,186415
set_syscall_method(4514,186634
should_syscall_method_be_sysenter(4526,187000
get_app_sysenter_addr(4535,187244
copy_mcontext(4543,187473
dr_mcontext_to_priv_mcontext(4550,187592
priv_mcontext_to_dr_mcontext(4579,188559
dr_mcontext_as_priv_mcontext(4608,189539
dr_mcontext_init(4619,189908
dump_mcontext(4627,190043
__inline__ uint64 get_time(4696,192777
uint64 get_time(4703,192912
is_ibl_routine_type(4713,193035

x86/arch.h,10377
#define X86_ARCH_H45,2079
#define CS32_SELECTOR 55,2406
#define CS64_SELECTOR 56,2433
mixed_mode_enabled(60,2491
#define PROT_OFFS 88,3457
#define MC_OFFS 89,3515
#define XAX_OFFSET 91,3586
#define XBX_OFFSET 92,3659
#define XCX_OFFSET 93,3732
#define XDX_OFFSET 94,3805
#define XSI_OFFSET 95,3878
#define XDI_OFFSET 96,3951
#define XBP_OFFSET 97,4024
#define XSP_OFFSET 98,4097
#define XFLAGS_OFFSET 99,4170
#define PC_OFFSET 100,4246
# define R8_OFFSET 102,4329
# define R9_OFFSET 103,4401
# define R10_OFFSET 104,4473
# define R11_OFFSET 105,4546
# define R12_OFFSET 106,4619
# define R13_OFFSET 107,4692
# define R14_OFFSET 108,4765
# define R15_OFFSET 109,4838
#define XMM_OFFSET 111,4918
#define ERRNO_OFFSET 113,4992
#define AT_SYSCALL_OFFSET 114,5059
#define EXIT_REASON_OFFSET 115,5131
#define NEXT_TAG_OFFSET 117,5206
#define LAST_EXIT_OFFSET 118,5282
#define DSTACK_OFFSET 119,5359
#define FRAGMENT_FIELD_OFFSET 121,5434
#define PRIVATE_CODE_OFFSET 122,5516
#  define APP_ERRNO_OFFSET 126,5637
#  define APP_FLS_OFFSET 127,5715
#  define PRIV_FLS_OFFSET 128,5796
#  define APP_RPC_OFFSET 129,5878
#  define PRIV_RPC_OFFSET 130,5957
#  define APP_NLS_CACHE_OFFSET 131,6037
#  define PRIV_NLS_CACHE_OFFSET 132,6119
#  define APP_STACK_LIMIT_OFFSET 133,6202
# define NONSWAPPED_SCRATCH_OFFSET 135,6295
# define TRACE_HEAD_PC_OFFSET 139,6424
# define SYSENTER_STORAGE_OFFSET 143,6528
# define IGNORE_ENTEREXIT_OFFSET 144,6614
# define CLIENT_DATA_OFFSET 148,6732
#define COARSE_IB_SRC_OFFSET 151,6819
#define COARSE_DIR_EXIT_OFFSET 152,6906
#define OPSZ_SAVED_XMM 157,7034
#define REG_SAVED_XMM0 158,7093
preserve_xmm_caller_saved(163,7305
    IBL_UNLINKED,177,7901
    IBL_DELETE,178,7919
    IBL_FAR,180,7975
    IBL_FAR_UNLINKED,181,7988
    IBL_TRACE_CMP,184,8099
    IBL_TRACE_CMP_UNLINKED,185,8118
    IBL_LINKED,187,8153
    IBL_TEMPLATE,189,8174
    IBL_LINK_STATE_END190,8241
} ibl_entry_point_type_t;191,8264
    IBL_BB_SHARED,197,8526
    IBL_SOURCE_TYPE_START 198,8546
    IBL_SOURCE_TYPE_START = IBL_BB_SHARED,198,8546
    IBL_TRACE_SHARED,199,8589
    IBL_BB_PRIVATE,200,8611
    IBL_TRACE_PRIVATE,201,8631
    IBL_COARSE_SHARED,202,8654
    IBL_SOURCE_TYPE_END203,8710
} ibl_source_fragment_type_t;204,8734
#define DEFAULT_IBL_BB(206,8765
#define DEFAULT_IBL_TRACE(208,8857
#define IS_IBL_BB(210,8961
#define IS_IBL_TRACE(212,9054
#define IS_IBL_LINKED(214,9156
#define IS_IBL_UNLINKED(217,9288
#define IBL_FRAG_FLAGS(221,9443
get_ibl_entry_type(225,9589
    ibl_entry_point_type_t link_state;240,9907
    ibl_source_fragment_type_t source_fragment_type;241,9946
    ibl_branch_type_t branch_type;242,9999
} ibl_type_t;243,10034
    GENCODE_X64 251,10311
    GENCODE_X86,252,10332
    GENCODE_X86_TO_X64,253,10349
    GENCODE_FROM_DCONTEXT,254,10373
} gencode_mode_t;255,10400
# define FRAGMENT_GENCODE_MODE(256,10418
# define SHARED_GENCODE(259,10595
# define SHARED_GENCODE_MATCH_THREAD(260,10683
# define THREAD_GENCODE(261,10770
# define GENCODE_IS_X64(262,10851
# define GENCODE_IS_X86(263,10921
# define GENCODE_IS_X86_TO_X64(264,10991
# define SHARED_GENCODE(266,11081
# define THREAD_GENCODE(267,11144
# define SHARED_GENCODE_MATCH_THREAD(268,11202
#define NUM_XMM_REGS 271,11274
#define NUM_GP_REGS 272,11310
typedef struct _clean_call_info_t 275,11457
    void *callee;callee276,11493
    uint num_args;277,11511
    bool save_fpstate;278,11530
    bool opt_inline;279,11553
    bool should_align;280,11574
    bool save_all_regs;281,11597
    bool skip_save_aflags;282,11621
    bool skip_clear_eflags;283,11648
    uint num_xmms_skip;284,11676
    bool xmm_skip[xmm_skip285,11700
    uint num_regs_skip;286,11733
    bool reg_skip[reg_skip287,11757
    bool preserve_mcontext;288,11789
    void *callee_info;callee_info289,11870
    instrlist_t *ilist;ilist290,11919
} clean_call_info_t;291,11990
#define GET_IBL_TARGET_TABLE(321,13777
    FCACHE_ENTER_TARGET_SLOT 434,18681
    FCACHE_ENTER_TARGET_SLOT    = TLS_XAX_SLOT,434,18681
    MANGLE_NEXT_TAG_SLOT 442,19008
    MANGLE_NEXT_TAG_SLOT        = TLS_XAX_SLOT,442,19008
    DIRECT_STUB_SPILL_SLOT 443,19056
    DIRECT_STUB_SPILL_SLOT      = TLS_XAX_SLOT,443,19056
    MANGLE_RIPREL_SPILL_SLOT 444,19104
    MANGLE_RIPREL_SPILL_SLOT    = TLS_XAX_SLOT,444,19104
    INDIRECT_STUB_SPILL_SLOT 446,19233
    INDIRECT_STUB_SPILL_SLOT    = TLS_XBX_SLOT,446,19233
    MANGLE_FAR_SPILL_SLOT 447,19281
    MANGLE_FAR_SPILL_SLOT       = TLS_XBX_SLOT,447,19281
    FLOAT_PC_STATE_SLOT 451,19484
    FLOAT_PC_STATE_SLOT         = TLS_XBX_SLOT,451,19484
    MANGLE_XCX_SPILL_SLOT 452,19532
    MANGLE_XCX_SPILL_SLOT       = TLS_XCX_SLOT,452,19532
    DCONTEXT_BASE_SPILL_SLOT 457,19756
    DCONTEXT_BASE_SPILL_SLOT    = TLS_XDX_SLOT,457,19756
    PREFIX_XAX_SPILL_SLOT 458,19804
    PREFIX_XAX_SPILL_SLOT       = TLS_XAX_SLOT,458,19804
    HTABLE_STATS_SPILL_SLOT 460,19880
    HTABLE_STATS_SPILL_SLOT     = TLS_HTABLE_STATS_SLOT,460,19880
typedef struct patch_entry_t 471,20248
        instr_t *instr;instr473,20291
        size_t   offset;474,20364
    } where;475,20429
    ptr_uint_t value_location_offset;476,20442
    ushort patch_flags;479,20656
    short  instr_offset;480,20738
} patch_entry_t;482,20878
    MAX_PATCH_ENTRIES 485,20903
    PATCH_TAKE_ADDRESS 492,21188
    PATCH_TAKE_ADDRESS      = 0x01,x01492,21188
    PATCH_PER_THREAD 493,21286
    PATCH_PER_THREAD        = 0x02,x02493,21286
    PATCH_UNPROT_STAT 494,21387
    PATCH_UNPROT_STAT       = 0x04,x04494,21387
    PATCH_MARKER 496,21574
    PATCH_MARKER            = 0x08,x08496,21574
    PATCH_ASSEMBLE_ABSOLUTE 497,21651
    PATCH_ASSEMBLE_ABSOLUTE = 0x10,x10497,21651
    PATCH_OFFSET_VALID 499,21821
    PATCH_OFFSET_VALID      = 0x20,x20499,21821
    PATCH_UINT_SIZED 501,21972
    PATCH_UINT_SIZED        = 0x40,x40501,21972
    PATCH_TYPE_ABSOLUTE 505,22080
    PATCH_TYPE_ABSOLUTE     = 0x0,x0505,22080
    PATCH_TYPE_INDIRECT_XDI 506,22169
    PATCH_TYPE_INDIRECT_XDI = 0x1,x1506,22169
    PATCH_TYPE_INDIRECT_FS 507,22258
    PATCH_TYPE_INDIRECT_FS  = 0x2,x2507,22258
} patch_list_type_t;508,22346
typedef struct patch_list_t 510,22368
    ushort num_relocations;511,22398
    ushort /* patch_list_type_t */ type;512,22426
    patch_entry_t entry[entry513,22467
} patch_list_t;514,22511
typedef struct _far_ref_t 529,22985
    uint pc;531,23084
    ushort selector;532,23097
} far_ref_t;533,23118
typedef struct ibl_code_t 537,23222
    bool initialized:initialized538,23250
    bool thread_shared_routine:thread_shared_routine539,23317
    bool ibl_head_is_inlined:ibl_head_is_inlined540,23351
    byte *indirect_branch_lookup_routine;indirect_branch_lookup_routine541,23383
    byte *far_ibl;far_ibl543,23456
    byte *far_ibl_unlinked;far_ibl_unlinked544,23475
    byte *trace_cmp_entry;trace_cmp_entry547,23577
    byte *trace_cmp_unlinked;trace_cmp_unlinked548,23604
    bool x86_mode;549,23634
    bool x86_to_x64_mode;550,23695
    far_ref_t far_jmp_opnd;552,23862
    far_ref_t far_jmp_unlinked_opnd;553,23890
    byte *unlinked_ibl_entry;unlinked_ibl_entry555,23934
    byte *target_delete_entry;target_delete_entry556,23964
    uint ibl_routine_length;557,23995
    patch_list_t ibl_patch;559,24059
    ibl_branch_type_t branch_type;560,24087
    ibl_source_fragment_type_t source_fragment_type;561,24122
    byte *inline_ibl_stub_template;inline_ibl_stub_template564,24245
    patch_list_t ibl_stub_patch;565,24281
    uint inline_stub_length;566,24314
    uint inline_linkstub_first_offs;569,24445
    uint inline_linkstub_second_offs;570,24482
    uint inline_unlink_offs;571,24520
    uint inline_linkedjmp_offs;572,24549
    uint inline_unlinkedjmp_offs;573,24581
    uint unprot_stats_offset;577,24716
    uint hashtable_stats_offset;578,24747
    uint entry_stats_to_lookup_table_offset;581,24975
} ibl_code_t;583,25074
typedef struct _generated_code_t 593,25434
    byte *fcache_enter;fcache_enter594,25469
    byte *fcache_return;fcache_return595,25493
    byte *fcache_enter_return_end;fcache_enter_return_end597,25543
    ibl_code_t trace_ibl[trace_ibl600,25586
    ibl_code_t bb_ibl[bb_ibl601,25633
    ibl_code_t coarse_ibl[coarse_ibl602,25677
    byte *ibl_routines_end;ibl_routines_end604,25750
    ibl_code_t shared_syscall_code;609,25842
    byte *shared_syscall;shared_syscall610,25878
    byte *unlinked_shared_syscall;unlinked_shared_syscall611,25904
    byte *end_shared_syscall;end_shared_syscall612,25939
    uint sys_syscall_offs;617,26169
    uint sys_unlink_offs;619,26258
    byte *do_syscall;do_syscall621,26291
    uint do_syscall_offs;622,26313
    byte *fcache_enter_indirect;fcache_enter_indirect624,26398
    byte *do_callback_return;do_callback_return625,26431
    byte *do_int_syscall;do_int_syscall631,26684
    uint do_int_syscall_offs;632,26710
    byte *do_clone_syscall;do_clone_syscall633,26784
    uint do_clone_syscall_offs;634,26812
    byte *do_vmkuw_syscall;do_vmkuw_syscall636,26909
    uint do_vmkuw_syscall_offs;637,26937
    byte *new_thread_dynamo_start;new_thread_dynamo_start642,27115
    byte *trace_head_incr;trace_head_incr645,27186
    byte *pextrw;pextrw648,27246
    byte *pinsrw;pinsrw649,27264
    profile_t *profile;profile652,27314
    byte *reset_exit_stub;reset_exit_stub658,27538
    byte *fcache_return_coarse;fcache_return_coarse665,27865
    byte *trace_head_return_coarse;trace_head_return_coarse666,27897
    byte *client_ibl_xfer;client_ibl_xfer669,28004
    uint client_ibl_unlink_offs;670,28031
    byte *clean_call_save;clean_call_save673,28126
    byte *clean_call_restore;clean_call_restore674,28153
    bool thread_shared;676,28184
    bool writable;677,28208
    gencode_mode_t gencode_mode;679,28238
    byte *gen_start_pc;gen_start_pc687,28589
    byte *gen_end_pc;gen_end_pc688,28643
    byte *commit_end_pc;commit_end_pc689,28693
} generated_code_t;691,28817
is_shared_gencode(728,30436
get_shared_gencode(741,30774
#define USE_SHARED_GENCODE_ALWAYS(769,31811
#define USE_SHARED_GENCODE(773,32009
#define USE_SHARED_BB_IBL(777,32237
#define USE_SHARED_TRACE_IBL(780,32331
get_emitted_routines_code(786,32580

x86/arch_exports.h,11998
#define _ARCH_EXPORTS_H_ 45,2094
#define XSP_SZ 48,2145
#define XMM_REG_SIZE 57,2517
#define YMM_REG_SIZE 58,2542
#define XMM_SAVED_REG_SIZE 59,2567
#define XMM_SLOTS_SIZE 60,2651
#define XMM_SAVED_SIZE 61,2710
#define YMM_ENABLED(63,2850
#define YMMH_REG_SIZE 64,2941
#define YMMH_SAVED_SIZE 65,2997
#define CLEANCALL_NUM_INLINE_SLOTS 68,3111
    IBL_NONE 71,3164
    IBL_RETURN 73,3266
    IBL_BRANCH_TYPE_START 74,3341
    IBL_BRANCH_TYPE_START = IBL_RETURN,74,3341
    IBL_INDCALL,75,3381
    IBL_INDJMP,76,3398
    IBL_GENERIC 77,3414
    IBL_GENERIC           = IBL_INDJMP,77,3414
    IBL_SHARED_SYSCALL 80,3599
    IBL_SHARED_SYSCALL    = IBL_GENERIC,80,3599
    IBL_BRANCH_TYPE_END81,3640
} ibl_branch_type_t;82,3664
#define IBL_HASH_FUNC_OFFSET_MAX 84,3686
typedef struct _lookup_table_access_t 100,4405
    ptr_uint_t hash_mask;101,4445
    struct _fragment_entry_t *lookuptable;lookuptable102,4471
} lookup_table_access_t;103,4514
typedef struct _table_stat_state_t 105,4540
    lookup_table_access_t table[table116,5091
    uint stats;121,5329
} table_stat_state_t;123,5352
typedef struct _spill_state_t 129,5551
    reg_t xax,131,5656
    reg_t xax, xbx,131,5656
    reg_t xax, xbx, xcx,131,5656
    reg_t xax, xbx, xcx, xdx;131,5656
    dcontext_t *dcontext;dcontext133,5791
} spill_state_t;134,5817
typedef struct _local_state_t 136,5835
    spill_state_t spill_space;137,5867
} local_state_t;138,5898
typedef struct _local_state_extended_t 140,5916
    spill_state_t spill_space;141,5957
    table_stat_state_t table_space;142,5988
} local_state_extended_t;143,6024
#define TLS_XAX_SLOT 149,6277
#define TLS_XBX_SLOT 150,6349
#define TLS_XCX_SLOT 151,6421
#define TLS_XDX_SLOT 152,6493
#define TLS_DCONTEXT_SLOT 153,6565
#define TABLE_OFFSET 155,6643
#define TLS_MASK_SLOT(156,6724
#define TLS_TABLE_SLOT(159,6969
# define TLS_HTABLE_STATS_SLOT 164,7247
#define TLS_NUM_SLOTS 169,7493
# define DETACH_CALLBACK_CODE_SIZE 175,7724
# define DETACH_CALLBACK_FINAL_JMP_SIZE 176,7763
typedef struct _detach_callback_stack_t 180,7981
    thread_id_t tid;181,8023
    ptr_uint_t count;182,8061
    app_pc *callback_addrs;callback_addrs183,8137
    reg_t xax_save;184,8217
    reg_t xbx_save;185,8276
    reg_t xcx_save;186,8335
    app_pc target;187,8394
    byte code_buf[code_buf189,8509
} detach_callback_stack_t;190,8560
#define PAD_JMPS_ALIGNMENT 231,10826
# define CHECK_JMP_TARGET_ALIGNMENT(235,10997
# define CHECK_JMP_TARGET_ALIGNMENT(242,11407
# define ATOMIC_4BYTE_WRITE(248,11663
#  define ATOMIC_8BYTE_WRITE(255,12039
# define ATOMIC_INC_int(271,12920
#  define ATOMIC_INC_int64(273,13050
# define ATOMIC_INC(275,13142
# define ATOMIC_DEC_int(276,13196
#  define ATOMIC_DEC_int64(278,13326
# define ATOMIC_DEC(280,13418
# define ATOMIC_ADD_int(282,13539
#  define ATOMIC_ADD_int64(285,13691
# define ATOMIC_COMPARE_EXCHANGE_int(288,13805
# define ATOMIC_COMPARE_EXCHANGE_int64(290,13944
# define ATOMIC_COMPARE_EXCHANGE 292,14090
# define ATOMIC_ADD(293,14151
#  define ATOMIC_ADD_PTR(295,14227
#  define ATOMIC_COMPARE_EXCHANGE_PTR 296,14295
#  define ATOMIC_ADD_PTR(298,14370
#  define ATOMIC_COMPARE_EXCHANGE_PTR 299,14436
# define SPINLOCK_PAUSE(301,14510
# define RDTSC_LL(302,14583
# define SERIALIZE_INSTRUCTIONS(303,14624
# define GET_FRAME_PTR(310,14893
# define GET_STACK_PTR(311,14945
static inline bool atomic_inc_and_test(314,15041
static inline bool atomic_dec_and_test(318,15191
static inline bool atomic_dec_becomes_zero(322,15340
static inline bool atomic_compare_exchange_int(326,15496
static inline bool atomic_compare_exchange_int64(330,15718
static inline int atomic_add_exchange_int(336,16051
static inline int64 atomic_add_exchange_int64(340,16236
# define atomic_add_exchange 344,16385
# define ATOMIC_4BYTE_WRITE(347,16456
#  define ATOMIC_8BYTE_WRITE(354,16853
# define ATOMIC_INC_suffix(363,17382
# define ATOMIC_INC_int(365,17500
# define ATOMIC_INC_int64(366,17557
# define ATOMIC_INC(367,17616
# define ATOMIC_DEC_suffix(368,17670
# define ATOMIC_DEC_int(370,17788
# define ATOMIC_DEC_int64(371,17845
# define ATOMIC_DEC(372,17904
# define ATOMIC_ADD_suffix(377,18099
# define ATOMIC_ADD_int(380,18293
# define ATOMIC_ADD_int64(381,18360
# define ATOMIC_ADD(382,18429
#  define ATOMIC_ADD_PTR(384,18505
#  define ATOMIC_ADD_PTR(386,18580
# define ATOMIC_ADD_EXCHANGE_suffix(389,18732
# define ATOMIC_ADD_EXCHANGE_int(392,18943
# define ATOMIC_ADD_EXCHANGE_int64(394,19044
# define ATOMIC_COMPARE_EXCHANGE_suffix(396,19147
# define ATOMIC_COMPARE_EXCHANGE_int(401,19456
# define ATOMIC_COMPARE_EXCHANGE_int64(403,19583
# define ATOMIC_COMPARE_EXCHANGE 405,19712
#  define ATOMIC_COMPARE_EXCHANGE_PTR 407,19785
#  define ATOMIC_COMPARE_EXCHANGE_PTR 409,19860
# define ATOMIC_EXCHANGE(411,19930
# define SPINLOCK_PAUSE(416,20136
# define RDTSC_LL(417,20194
# define SERIALIZE_INSTRUCTIONS(420,20323
# define GET_FRAME_PTR(423,20537
# define GET_STACK_PTR(424,20621
# define SET_FLAG(426,20706
# define SET_IF_NOT_ZERO(427,20786
# define SET_IF_NOT_LESS(428,20836
static inline bool atomic_inc_and_test(433,20999
static inline bool atomic_dec_and_test(448,21481
static inline bool atomic_dec_becomes_zero(463,21969
static inline bool atomic_compare_exchange_int(479,22457
atomic_exchange_int(494,23047
static inline bool atomic_compare_exchange_int64(505,23300
static inline int atomic_add_exchange_int(521,23956
static inline int64 atomic_add_exchange_int64(527,24120
# define atomic_add_exchange 533,24296
# undef ATOMIC_ADD_EXCHANGE_suffix534,24349
# undef ATOMIC_ADD_EXCHANGE_int535,24384
# undef ATOMIC_ADD_EXCHANGE_int64536,24416
#define atomic_compare_exchange 541,24471
# define atomic_compare_exchange_ptr(543,24542
# define ATOMIC_ADDR_WRITE 545,24672
# define atomic_compare_exchange_ptr(547,24724
# define ATOMIC_ADDR_WRITE 549,24846
#define ATOMIC_MAX_int(552,24900
# define ATOMIC_MAX_int64(567,25774
#define ATOMIC_MAX(582,26608
#define DEBUGGER_INTERRUPT_BYTE 584,26690
    TRANSLATE_IDENTICAL 633,28382
    TRANSLATE_IDENTICAL      = 0x0001,x0001633,28382
    TRANSLATE_OUR_MANGLING 634,28448
    TRANSLATE_OUR_MANGLING   = 0x0002,x0002634,28448
typedef struct _translation_entry_t 641,28775
    ushort cache_offs;643,28853
    ushort flags;645,28903
    app_pc app;646,28921
} translation_entry_t;647,28937
typedef struct _translation_info_t 657,29427
    uint num_entries;658,29464
    translation_entry_t translation[translation660,29529
} translation_info_t;661,29590
#define IS_SHARED_SYSCALL_THREAD_SHARED 664,29673
    RECREATE_FAILURE,670,29887
    RECREATE_SUCCESS_PC,671,29909
    RECREATE_SUCCESS_STATE,672,29934
} recreate_success_t;673,29962
typedef linkstub_t * (* fcache_enter_func_t)710,31754
    SYSCALL_METHOD_UNINITIALIZED,772,34638
    SYSCALL_METHOD_INT,773,34672
    SYSCALL_METHOD_SYSENTER,774,34696
    SYSCALL_METHOD_SYSCALL,775,34725
    SYSCALL_METHOD_WOW64,777,34768
enum { SYSCALL_METHOD_LONGEST_INSTR 781,34816
enum { BACK_FROM_NATIVE_RETSTUB_SIZE 848,37671
#define DYNAMO_START_XSP_ADJUST 869,38360
    CALLSTACK_USE_XML 893,39081
    CALLSTACK_USE_XML         = 0x00000001,x00000001893,39081
    CALLSTACK_ADD_HEADER 894,39125
    CALLSTACK_ADD_HEADER      = 0x00000002,x00000002894,39125
    CALLSTACK_MODULE_INFO 895,39169
    CALLSTACK_MODULE_INFO     = 0x00000004,x00000004895,39169
    CALLSTACK_MODULE_PATH 896,39213
    CALLSTACK_MODULE_PATH     = 0x00000008,x00000008896,39213
    CALLSTACK_FRAME_PTR 897,39257
    CALLSTACK_FRAME_PTR       = 0x00000010,x00000010897,39257
use_addr_prefix_on_short_disp(921,40057
#define SIZE64_MOV_XAX_TO_TLS 963,41794
#define SIZE64_MOV_XBX_TO_TLS 964,41834
#define SIZE64_MOV_PTR_IMM_TO_XAX 965,41874
#define SIZE64_MOV_PTR_IMM_TO_TLS 966,41914
#define SIZE64_MOV_R8_TO_XAX 967,41995
#define SIZE64_MOV_R9_TO_XCX 968,42035
#define SIZE32_MOV_XAX_TO_TLS 969,42075
#define SIZE32_MOV_XBX_TO_TLS 970,42115
#define SIZE32_MOV_XAX_TO_TLS_DISP32 971,42155
#define SIZE32_MOV_XBX_TO_TLS_DISP32 972,42195
#define SIZE32_MOV_XAX_TO_ABS 973,42235
#define SIZE32_MOV_XBX_TO_ABS 974,42275
#define SIZE32_MOV_PTR_IMM_TO_XAX 975,42315
#define SIZE32_MOV_PTR_IMM_TO_TLS 976,42355
# define FRAG_IS_32(979,42407
# define FRAG_IS_X86_TO_X64(980,42463
# define FRAG_IS_32(982,42537
# define FRAG_IS_X86_TO_X64(983,42569
#define SIZE_MOV_XAX_TO_TLS(986,42618
#define SIZE_MOV_XBX_TO_TLS(991,42855
#define SIZE_MOV_PTR_IMM_TO_XAX(996,43092
#define XCX_IN_TLS(1000,43247
#define FRAGMENT_BASE_PREFIX_SIZE(1001,43338
#define DIRECT_EXIT_STUB_SIZE32 1013,43866
#define DIRECT_EXIT_STUB_SIZE64 1015,43974
#define DIRECT_EXIT_STUB_SIZE(1017,44082
#define STUB_COARSE_DIRECT_SIZE32 1030,44723
#define STUB_COARSE_DIRECT_SIZE64 1031,44804
#define STUB_COARSE_DIRECT_SIZE(1032,44885
#define SET_TO_NOPS(1036,45048
#define SET_TO_DEBUG(1038,45153
#define IS_SET_TO_NOP(1040,45247
#define IS_SET_TO_DEBUG(1042,45362
#define CTI_PATCH_OFFSET 1045,45501
#define CTI_PATCH_SIZE 1047,45561
#define EXIT_STUB_PATCH_OFFSET 1050,45647
#define EXIT_STUB_PATCH_SIZE 1052,45714
#define MAX_PAD_SIZE 1055,45822
#define WITHIN_PAD_REGION(1058,45915
#define STATS_PAD_JMPS_ADD(1061,46002
    NOT_HOT_PATCHABLE=1133,48635
    NOT_HOT_PATCHABLE=false,1133,48635
    HOT_PATCHABLE=1134,48664
    HOT_PATCHABLE=true1134,48664
    MAX_INSTR_LENGTH 1213,51191
    CBR_LONG_LENGTH 1217,51309
    JMP_LONG_LENGTH 1218,51335
    JMP_SHORT_LENGTH 1219,51361
    CBR_SHORT_REWRITE_LENGTH 1220,51387
    RET_0_LENGTH 1221,51455
    PUSH_IMM32_LENGTH 1222,51481
    CTI_IND1_LENGTH 1225,51574
    CTI_IND2_LENGTH 1226,51656
    CTI_IND3_LENGTH 1227,51738
    CTI_DIRECT_LENGTH 1228,51820
    CTI_IAT_LENGTH 1229,51902
    CTI_FAR_ABS_LENGTH 1230,51984
    INT_LENGTH 1233,52149
    SYSCALL_LENGTH 1234,52169
    SYSENTER_LENGTH 1235,52193
#define REL32_REACHABLE_OFFS(1238,52222
#define REL32_REACHABLE(1240,52365
#define TRACE_CTI_MANGLE_SIZE_UPPER_BOUND 1293,54751
    app_pc region_start;1334,56462
    app_pc region_end;1335,56487
    app_pc start_pc;1336,56510
    app_pc min_pc;1337,56531
    app_pc max_pc;1338,56550
    app_pc bb_end;1339,56569
    bool contiguous;1340,56588
    bool overlap;1341,56609
} overlap_info_t;1342,56627
extract_branchtype(1539,64543
ibltype_to_linktype(1553,64940
convert_data_to_function(1577,65674
typedef struct dr_jmp_buf_t 1600,66493
    reg_t xbx;1601,66523
    reg_t xcx;1602,66538
    reg_t xdi;1603,66553
    reg_t xsi;1604,66568
    reg_t xbp;1605,66583
    reg_t xsp;1606,66598
    reg_t xip;1607,66613
    reg_t r8,1610,66727
    reg_t r8, r9,1610,66727
    reg_t r8, r9, r10,1610,66727
    reg_t r8, r9, r10, r11,1610,66727
    reg_t r8, r9, r10, r11, r12,1610,66727
    reg_t r8, r9, r10, r11, r12, r13,1610,66727
    reg_t r8, r9, r10, r11, r12, r13, r14,1610,66727
    reg_t r8, r9, r10, r11, r12, r13, r14, r15;1610,66727
    kernel_sigset_t sigmask;1617,67006
} dr_jmp_buf_t;1619,67042
#define DR_SETJMP(1643,67733
#define DR_LONGJMP(1645,67774
#  define APP_PARAM_0(1662,68368
#  define APP_PARAM_1(1663,68404
#  define APP_PARAM_2(1664,68440
#  define APP_PARAM_3(1665,68475
#  define APP_PARAM_4(1666,68510
#  define APP_PARAM_5(1667,68568
#  define APP_PARAM_6(1668,68626
#  define APP_PARAM_7(1669,68684
#  define APP_PARAM_8(1670,68742
#  define APP_PARAM_9(1671,68800
#  define APP_PARAM_10(1672,68859
#  define APP_PARAM_0(1674,68926
#  define APP_PARAM_1(1675,68962
#  define APP_PARAM_2(1676,68998
#  define APP_PARAM_3(1677,69034
#  define APP_PARAM_4(1678,69070
#  define APP_PARAM_5(1679,69105
#  define APP_PARAM_6(1680,69140
#  define APP_PARAM_7(1681,69198
#  define APP_PARAM_8(1682,69256
#  define APP_PARAM_9(1683,69314
#  define APP_PARAM_10(1684,69372
# define APP_PARAM(1687,69473
# define APP_PARAM(1690,69563

x86/decode.c,1586
# undef ASSERT_TRUNCATE73,3290
# undef ASSERT_BITFIELD_TRUNCATE74,3314
# undef ASSERT_NOT_REACHED75,3347
# define ASSERT_TRUNCATE 76,3374
# define ASSERT_BITFIELD_TRUNCATE 77,3443
# define ASSERT_NOT_REACHED 78,3521
#define xx 82,3629
static const instr_info_t escape_instr 83,3660
static const instr_info_t escape_38_instr 85,3764
static const instr_info_t escape_3a_instr 87,3880
#undef xx89,3996
static bool initexit_x86_mode 95,4138
set_x86_mode(105,4562
get_x86_mode(129,5398
is_variable_size(150,6229
resolve_var_reg_size(183,6919
resolve_variable_size(197,7344
resolve_variable_size_dc(262,10610
resolve_addr_size(271,10869
optype_is_indir_reg(280,11090
indir_var_reg_size(300,11592
indir_var_reg_offs_factor(336,12606
read_immed(354,13028
read_operand(390,14149
read_modrm(513,18797
read_vex(585,21262
read_instruction(689,24788
reg8_alternative(1081,41214
    DECODE_REG_REG,1095,41714
    DECODE_REG_BASE,1096,41734
    DECODE_REG_INDEX,1097,41755
    DECODE_REG_RM,1098,41777
} decode_reg_t;1099,41796
decode_reg(1105,41963
decode_modrm(1191,45104
get_immed(1354,52228
resolve_var_reg(1373,52868
ds_seg(1417,54379
decode_operand(1433,54873
decode_eflags_usage(1722,68813
decode_opcode(1748,69790
check_is_variable_size(1792,71587
decode_common(1814,72474
decode(1970,79030
decode_from_copy(1976,79148
get_next_instr_info(1982,79320
decode_first_opcode_byte(1988,79425
decode_opcode_name(1996,79592
unit_check_decode_ff_opcode(2011,80032
#define CHECK_ENCODE_OPCODE(2047,81255
unit_check_sse3(2058,81788
int main(2092,83629

x86/decode.h,7600
#define DECODE_H41,1961
#define PREFIX_LOCK 61,2645
#define PREFIX_JCC_NOT_TAKEN 62,2735
#define PREFIX_JCC_TAKEN 63,2819
#define PREFIX_DATA 72,3155
#define PREFIX_ADDR 73,3192
#define PREFIX_REX_W 74,3229
#define PREFIX_REX_R 75,3266
#define PREFIX_REX_X 76,3303
#define PREFIX_REX_B 77,3340
#define PREFIX_REX_GENERAL 78,3377
#define PREFIX_REX_ALL 79,3463
#define PREFIX_SIZE_SPECIFIERS 81,3599
#define PREFIX_REP 84,3749
#define PREFIX_REPNE 85,3786
#define PREFIX_SEG_FS 92,4050
#define PREFIX_SEG_GS 93,4087
#define PREFIX_VEX_2B 98,4245
#define PREFIX_VEX_3B 99,4282
#define PREFIX_VEX_L 100,4319
#define PREFIX_SIGNIFICANT 105,4511
#define SEG_JCC_NOT_TAKEN 108,4635
#define SEG_JCC_TAKEN 109,4672
    OPCODE_TWOBYTES 122,5194
    OPCODE_TWOBYTES = 0x00000010,x00000010122,5194
    OPCODE_REG 123,5228
    OPCODE_REG      = 0x00000020,x00000020123,5228
    OPCODE_MODRM 124,5262
    OPCODE_MODRM    = 0x00000040,x00000040124,5262
    OPCODE_SUFFIX 125,5296
    OPCODE_SUFFIX   = 0x00000080,x00000080125,5296
    OPCODE_THREEBYTES=126,5330
    OPCODE_THREEBYTES=0x00000008,x00000008126,5330
typedef struct instr_info_t 166,7046
    int type;167,7076
    uint opcode;192,8726
    const char *name;name193,8743
    byte dst1_type;197,8852
    byte dst1_type;  opnd_size_t dst1_size;197,8852
    byte dst2_type;198,8896
    byte dst2_type;  opnd_size_t dst2_size;198,8896
    byte src1_type;199,8940
    byte src1_type;  opnd_size_t src1_size;199,8940
    byte src2_type;200,8984
    byte src2_type;  opnd_size_t src2_size;200,8984
    byte src3_type;201,9028
    byte src3_type;  opnd_size_t src3_size;201,9028
    byte flags;202,9072
    uint eflags;203,9124
    ptr_int_t code;204,9194
} instr_info_t;209,9508
    INVALID 217,9684
    INVALID = OP_LAST 217,9684
    PREFIX,219,9733
    ESCAPE,221,9783
    FLOAT_EXT,223,9844
    EXTENSION,225,9909
    PREFIX_EXT,227,10003
    REP_EXT,229,10077
    REPNE_EXT,231,10150
    MOD_EXT,233,10226
    RM_EXT,235,10299
    SUFFIX_EXT,237,10384
    X64_EXT,239,10472
    ESCAPE_3BYTE_38,241,10547
    ESCAPE_3BYTE_3a,243,10620
    REX_B_EXT,245,10703
    REX_W_EXT,247,10780
    VEX_PREFIX_EXT,249,10866
    VEX_EXT,251,10948
    VEX_L_EXT,253,11033
    VEX_W_EXT,255,11096
#define HAS_MODRM 260,11212
#define HAS_EXTRA_OPERANDS 261,11270
#define EXTRAS_IN_CODE_FIELD 263,11369
#define X86_INVALID 267,11603
#define X64_INVALID 268,11638
#define REQUIRES_PREFIX 270,11747
#define REQUIRES_VEX 274,11905
#define REQUIRES_REX 279,12110
typedef struct decode_info_t 286,12360
    uint prefixes;293,12704
    byte seg_override;294,12723
    byte modrm;296,12807
    byte mod;297,12823
    byte reg;298,12837
    byte rm;299,12851
    bool has_sib;300,12864
    byte scale;301,12882
    byte index;302,12898
    byte base;303,12914
    bool has_disp;304,12929
    int disp;305,12948
    opnd_size_t size_immed;307,12983
    opnd_size_t size_immed2;308,13011
    bool immed_pc_relativize:immed_pc_relativize309,13040
    bool immed_subtract_length:immed_subtract_length310,13072
    bool immed_pc_rel_offs:immed_pc_rel_offs311,13106
    ushort immed_shift;312,13136
    ptr_int_t immed;313,13160
    ptr_int_t immed2;314,13181
    byte *start_pc;start_pc316,13338
    byte *final_pc;final_pc317,13358
    uint len;318,13378
    byte *disp_abs;disp_abs322,13526
    bool x86_mode;329,13830
    byte *orig_pc;orig_pc332,13919
    bool data_prefix;334,13987
    bool rep_prefix;335,14009
    bool repne_prefix;336,14030
    byte vex_vvvv;337,14053
    bool vex_encoded;338,14106
    ptr_int_t cur_note;340,14167
    bool has_instr_opnds;341,14191
} decode_info_t;342,14217
    TYPE_NONE,352,14421
    TYPE_A,353,14436
    TYPE_C,354,14489
    TYPE_D,355,14540
    TYPE_E,356,14589
    TYPE_G,358,14704
    TYPE_H,359,14752
    TYPE_I,360,14810
    TYPE_J,361,14838
    TYPE_L,362,14897
    TYPE_M,363,14965
    TYPE_O,364,15005
    TYPE_P,365,15055
    TYPE_Q,366,15098
    TYPE_R,367,15146
    TYPE_S,368,15187
    TYPE_V,369,15243
    TYPE_W,370,15286
    TYPE_X,371,15334
    TYPE_Y,372,15365
    TYPE_P_MODRM,373,15397
    TYPE_V_MODRM,374,15454
    TYPE_1,375,15511
    TYPE_FLOATCONST,376,15523
    TYPE_XLAT,377,15544
    TYPE_MASKMOVQ,378,15585
    TYPE_FLOATMEM,379,15623
    TYPE_REG,380,15642
    TYPE_VAR_REG,381,15685
    TYPE_VARZ_REG,384,15884
    TYPE_VAR_XREG,387,16066
    TYPE_VAR_ADDR_XREG,390,16273
    TYPE_REG_EX,397,16752
    TYPE_VAR_REG_EX,398,16839
    TYPE_VAR_XREG_EX,400,16984
    TYPE_VAR_REGX_EX,402,17113
    TYPE_INDIR_E,405,17301
    TYPE_INDIR_REG,406,17319
    TYPE_INDIR_VAR_XREG,407,17339
    TYPE_INDIR_VAR_REG,410,17560
    TYPE_INDIR_VAR_XIREG,413,17766
    TYPE_INDIR_VAR_XREG_OFFS_1,416,18009
    TYPE_INDIR_VAR_XREG_OFFS_8,418,18134
    TYPE_INDIR_VAR_XREG_OFFS_N,420,18287
    TYPE_INDIR_VAR_XIREG_OFFS_1,423,18508
    TYPE_INDIR_VAR_REG_OFFS_2,425,18636
    TYPE_INDIR_VAR_XREG_SIZEx8,431,19015
    TYPE_INDIR_VAR_REG_SIZEx2,433,19146
    TYPE_INDIR_VAR_REG_SIZEx3x5,435,19276
    OPSZ_NA 477,21573
    OPSZ_NA = DR_REG_INVALID+DR_REG_INVALID477,21573
    OPSZ_FIRST 478,21659
    OPSZ_FIRST = OPSZ_NA,478,21659
    OPSZ_0,479,21685
    OPSZ_1,481,21832
    OPSZ_2,482,21871
    OPSZ_4,483,21911
    OPSZ_6,484,21956
    OPSZ_8,485,22000
    OPSZ_10,486,22045
    OPSZ_16,488,22184
    OPSZ_14,489,22246
    OPSZ_28,490,22332
    OPSZ_94,491,22419
    OPSZ_108,492,22489
    OPSZ_512,493,22560
    OPSZ_2_short1,506,23412
    OPSZ_4_short2,509,23660
    OPSZ_4_rex8_short2,510,23708
    OPSZ_4_rex8,511,23763
    OPSZ_6_irex10_short4,512,23832
    OPSZ_8_short2,515,24094
    OPSZ_8_short4,516,24151
    OPSZ_28_short14,517,24214
    OPSZ_108_short94,518,24298
    OPSZ_4x8,520,24437
    OPSZ_6x10,522,24571
    OPSZ_4x8_short2,527,24797
    OPSZ_4x8_short2xi8,534,25234
    OPSZ_4_short2xi4,536,25380
    OPSZ_1_reg4,542,25631
    OPSZ_2_reg4,543,25706
    OPSZ_4_reg16,544,25781
    OPSZ_xsave,547,25943
    OPSZ_12,549,26087
    OPSZ_32,550,26133
    OPSZ_40,552,26248
    OPSZ_32_short16,553,26294
    OPSZ_8_rex16,554,26350
    OPSZ_8_rex16_short4,555,26405
    OPSZ_12_rex40_short6,556,26468
    OPSZ_16_vex32,557,26518
    OPSZ_LAST,559,26654
# define OPSZ_PTR 563,26684
# define OPSZ_STACK 564,26756
# define OPSZ_PTR 566,26848
# define OPSZ_STACK 567,26920
#define OPSZ_VARSTACK 569,27013
#define OPSZ_REXVARSTACK 571,27162
#define OPSZ_ret 574,27331
#define OPSZ_call 575,27409
#define OPSZ_lea 578,27539
#define OPSZ_invlpg 579,27623
#define OPSZ_xlat 580,27710
#define OPSZ_clflush 581,27795
#define OPSZ_prefetch 582,27883
#define OPSZ_lgdt 583,27973
#define OPSZ_sgdt 584,28058
#define OPSZ_lidt 585,28143
#define OPSZ_sidt 586,28228
#define OPSZ_bound 587,28313
#define OPSZ_maskmovq 588,28399
#define OPSZ_maskmovdqu 589,28488
#define OPSZ_fldenv 590,28579
#define OPSZ_fnstenv 591,28666
#define OPSZ_fnsave 592,28754
#define OPSZ_frstor 593,28841
#define OPSZ_fxsave 594,28928
#define OPSZ_fxrstor 595,29015
    OPSZ_4_of_8 602,29236
    OPSZ_4_of_8 = OPSZ_LAST,602,29236
    OPSZ_4_of_16,603,29313
    OPSZ_8_of_16,604,29378
    OPSZ_8_of_16_vex32,605,29443
    OPSZ_16_of_32,608,29609
    OPSZ_LAST_ENUM,609,29656
# define OPSZ_STATS 613,29724
# define OPSZ_STATS 615,29757
#define MODRM_BYTE(618,29792
#define DEFAULT_X86_MODE 647,31159
#define X64_MODE(649,31233
#define X64_MODE_DC(651,31311
#define X64_CACHE_MODE_DC(655,31528

x86/decode_fast.c,2814
# undef ASSERT_TRUNCATE51,2206
# undef ASSERT_BITFIELD_TRUNCATE52,2230
# undef ASSERT_NOT_REACHED53,2263
# define ASSERT_TRUNCATE 54,2290
# define ASSERT_BITFIELD_TRUNCATE 55,2359
# define ASSERT_NOT_REACHED 56,2437
static const byte fixed_length[fixed_length75,3291
static const signed char immed_adjustment[immed_adjustment105,4730
static const signed char immed_adjustment_intel64[immed_adjustment_intel64129,6102
static const signed char disp_adjustment[disp_adjustment157,7634
static const char x64_adjustment[x64_adjustment185,9196
    VARLEN_NONE,222,11223
    VARLEN_MODRM,223,11240
    VARLEN_FP_OP,224,11258
    VARLEN_ESCAPE,225,11276
    VARLEN_3BYTE_38_ESCAPE,226,11316
    VARLEN_3BYTE_3A_ESCAPE,227,11371
#define m 231,11489
#define f 232,11512
#define e 233,11535
static const byte variable_length[variable_length238,11717
#undef m261,12741
#undef f262,12750
#undef e263,12759
static const byte escape_fixed_length[escape_fixed_length272,13019
#define m 303,14375
#define e1 304,14398
#define e2 305,14432
static const byte escape_variable_length[escape_variable_length310,14632
#undef m336,15566
#undef e337,15575
static const byte threebyte_38_fixed_length[threebyte_38_fixed_length346,15928
static const byte threebyte_3a_fixed_length[threebyte_3a_fixed_length367,16926
static const byte threebyte_38_vex_extra[threebyte_38_vex_extra388,17823
decode_sizeof(415,19036
sizeof_3byte_38(607,26733
sizeof_3byte_3a(622,27249
sizeof_escape(638,27935
sizeof_modrm(678,29287
sizeof_fp_op(739,31149
static const byte interesting[interesting757,31830
#define x 787,33096
#define RC 788,33112
#define RP 789,33140
#define RZ 790,33168
#define RS 791,33196
#define RO 792,33224
#define R6 793,33252
#define RB 794,33279
#define RL 795,33324
#define RE 796,33369
#define R5O 797,33429
#define WC 798,33478
#define WZ 799,33507
#define W6 800,33536
#define W5 801,33564
#define W5O 802,33615
#define BC 803,33666
#define BA 804,33711
#define BD 805,33756
#define B6 806,33816
#define EFLAGS_6_ESCAPE 807,33860
#define EFLAGS_6_SPECIAL 808,33888
#define E 809,33916
#define S 810,33942
static const int eflags_6[eflags_6812,33970
static const int escape_eflags_6[escape_eflags_6836,35112
#undef x857,36184
#undef RC858,36193
#undef RP859,36203
#undef RZ860,36213
#undef RS861,36223
#undef RO862,36233
#undef R6863,36243
#undef RB864,36253
#undef RL865,36263
#undef RE866,36273
#undef R5O867,36283
#undef WC868,36294
#undef WZ869,36304
#undef W6870,36314
#undef W5871,36324
#undef W5O872,36334
#undef BC873,36345
#undef BA874,36355
#undef BD875,36365
#undef B6876,36375
#undef E877,36385
#undef S878,36394
convert_8bit_offset(887,36735
decode_cti(912,37895
decode_next_pc(1324,54426
decode_raw(1344,55162

x86/decode_fast.h,30
#define DECODE_FAST_H40,1904

x86/decode_table.c,8761
const instr_info_t * const op_instr[op_instr68,3181
#undef Jb1104,53953
#define xx 1106,53964
#define Ap 1109,54060
#define Cr 1110,54148
#define Dr 1111,54177
#define Eb 1112,54206
#define Ew 1113,54233
#define Ev 1114,54260
#define Esv 1115,54299
#define Ed 1116,54377
#define Ep 1117,54404
#define Ed_q 1118,54445
#define Rd_Mb 1119,54478
#define Rd_Mw 1120,54512
#define Gb 1121,54546
#define Gw 1122,54573
#define Gv 1123,54600
#define Gz 1124,54639
#define Gd 1125,54673
#define Gd_q 1126,54700
#define Gr 1127,54733
#define Ib 1128,54762
#define Iw 1129,54789
#define Iv 1130,54816
#define Iz 1131,54855
#define Jb 1132,54889
#define Jz 1133,54916
#define Ma 1134,54953
#define Mp 1135,54987
#define Ms 1136,55028
#define Ob 1137,55058
#define Ov 1138,55085
#define Pd 1139,55124
#define Pq 1140,55151
#define Pd_q 1141,55178
#define Ppi 1142,55211
#define Nq 1143,55238
#define Qd 1144,55271
#define Qq 1145,55298
#define Qpi 1146,55325
#define Rr 1147,55352
#define Sw 1148,55381
#define Vq 1149,55408
#define Vdq 1150,55435
#define Vd_dq 1151,55463
#define Vq_dq 1152,55498
#define Vps 1153,55533
#define Vpd 1154,55561
#define Vss 1155,55589
#define Vsd 1156,55622
#define Ups 1157,55655
#define Upd 1158,55689
#define Udq 1159,55723
#define Uq_dq 1160,55757
#define Wq 1161,55798
#define Wdq 1162,55825
#define Wq_dq 1163,55853
#define Wps 1164,55888
#define Wpd 1165,55916
#define Wss 1166,55944
#define Wsd 1167,55977
#define Udq_Md 1168,56010
#define Xb 1169,56046
#define Xv 1170,56073
#define Xz 1171,56112
#define Yb 1172,56146
#define Yv 1173,56173
#define Yz 1174,56212
#define Vvs 1177,56267
#define Vvd 1178,56301
#define Vvdq 1179,56335
#define Vqq 1180,56370
#define Vdq_qq 1181,56398
#define Wvs 1182,56435
#define Wvd 1183,56469
#define Wvdq 1184,56503
#define Uvs 1185,56538
#define Uvd 1186,56578
#define Uss 1187,56618
#define Usd 1188,56657
#define Hvs 1189,56696
#define Hvd 1190,56730
#define Hss 1191,56764
#define Hsd 1192,56797
#define Hq_dq 1193,56830
#define Hdq 1194,56865
#define Hvdq 1195,56893
#define Wvq_dq 1196,56928
#define Mvs 1197,56970
#define Mvd 1198,57004
#define Mvdq 1199,57038
#define Ldq 1200,57073
#define Lvdq 1201,57138
#define Mb 1207,57350
#define Md 1208,57377
#define Md_q 1209,57404
#define Mw 1210,57438
#define Mm 1211,57465
#define Me 1212,57494
#define Mxsave 1213,57523
#define Mps 1214,57557
#define Mpd 1215,57586
#define Mss 1216,57615
#define Msd 1217,57643
#define Mq 1218,57671
#define Mdq 1219,57698
#define Mq_dq 1220,57727
#define Mv 1221,57762
#define Zb 1222,57801
#define Bq 1223,57831
#define Bdq 1224,57865
#define Kw 1225,57901
#define Kd 1226,57935
#define Kq 1227,57969
#define Kx 1228,58003
#define Ky 1229,58038
#define Kz 1230,58102
#define i_dx 1231,58167
#define i_Ev 1232,58204
#define i_Exi 1233,58251
#define i_Ep 1234,58299
#define i_xSP 1235,58348
#define i_iSP 1236,58391
#define i_xBP 1237,58435
#define i_iSPo1 1239,58523
#define i_vSPo2 1240,58576
#define i_xSPo1 1241,58627
#define i_xSPo8 1242,58679
#define i_xSPs8 1243,58731
#define i_vSPs2 1244,58783
#define i_vSPs3 1245,58834
#define i_xSPoN 1247,58914
#define c1 1248,58966
#define cF 1249,58993
#define Av 1252,59050
#define eAX 1256,59144
#define eCX 1257,59178
#define eDX 1258,59212
#define eBX 1259,59246
#define eSP 1260,59280
#define eBP 1261,59314
#define eSI 1262,59348
#define eDI 1263,59382
#define zAX 1266,59479
#define zCX 1267,59514
#define zDX 1268,59549
#define zBX 1269,59584
#define zSP 1270,59619
#define zBP 1271,59654
#define zSI 1272,59689
#define zDI 1273,59724
#define xAX 1278,59898
#define xCX 1279,59933
#define xDX 1280,59968
#define xBX 1281,60003
#define xSP 1282,60038
#define xBP 1283,60073
#define xSI 1284,60108
#define xDI 1285,60143
#define axSP 1290,60318
#define axBP 1291,60359
#define axCX 1293,60433
#define axSI 1295,60502
#define axDI 1296,60543
#define axAX 1297,60584
#define al_x 1300,60704
#define cl_x 1301,60737
#define dl_x 1302,60770
#define bl_x 1303,60803
#define ah_x 1304,60836
#define ch_x 1305,60869
#define dh_x 1306,60902
#define bh_x 1307,60935
#define eAX_x 1310,61055
#define eCX_x 1311,61094
#define eDX_x 1312,61133
#define eBX_x 1313,61172
#define eSP_x 1314,61211
#define eBP_x 1315,61250
#define eSI_x 1316,61289
#define eDI_x 1317,61328
#define xAX_x 1320,61451
#define xCX_x 1321,61491
#define xDX_x 1322,61531
#define xBX_x 1323,61571
#define xSP_x 1324,61611
#define xBP_x 1325,61651
#define xSI_x 1326,61691
#define xDI_x 1327,61731
#define uAX_x 1330,61851
#define uCX_x 1331,61891
#define uDX_x 1332,61931
#define uBX_x 1333,61971
#define uSP_x 1334,62011
#define uBP_x 1335,62051
#define uSI_x 1336,62091
#define uDI_x 1337,62131
#define ax 1339,62172
#define cx 1340,62200
#define dx 1341,62228
#define bx 1342,62256
#define sp 1343,62284
#define bp 1344,62312
#define si 1345,62340
#define di 1346,62368
#define al 1348,62397
#define cl 1349,62425
#define dl 1350,62453
#define bl 1351,62481
#define ah 1352,62509
#define ch 1353,62537
#define dh 1354,62565
#define bh 1355,62593
#define eax 1357,62622
#define ecx 1358,62652
#define edx 1359,62682
#define ebx 1360,62712
#define esp 1361,62742
#define ebp 1362,62772
#define esi 1363,62802
#define edi 1364,62832
#define xsp 1366,62863
#define xcx 1367,62893
#define cs 1369,62924
#define ss 1370,62953
#define ds 1371,62982
#define es 1372,63011
#define fs 1373,63040
#define gs 1374,63069
#define st0 1376,63099
#define st1 1377,63129
#define st2 1378,63159
#define st3 1379,63189
#define st4 1380,63219
#define st5 1381,63249
#define st6 1382,63279
#define st7 1383,63309
#define xmm0 1385,63340
#define no 1388,63385
#define mrm 1389,63404
#define xop 1390,63431
#define mrm_xop 1391,63490
#define xop_next 1392,63559
#define i64 1393,63597
#define o64 1394,63626
#define reqp 1395,63655
#define vex 1396,63688
#define rex 1397,63718
#define x 1400,63762
#define fRC 1401,63778
#define fRP 1402,63807
#define fRA 1403,63836
#define fRZ 1404,63865
#define fRS 1405,63894
#define fRT 1406,63923
#define fRI 1407,63952
#define fRD 1408,63981
#define fRO 1409,64010
#define fRN 1410,64039
#define fRR 1411,64068
#define fRX 1412,64097
#define fR6 1413,64127
#define fWC 1414,64155
#define fWP 1415,64185
#define fWA 1416,64215
#define fWZ 1417,64245
#define fWS 1418,64275
#define fWT 1419,64305
#define fWI 1420,64335
#define fWD 1421,64365
#define fWO 1422,64395
#define fWN 1423,64425
#define fWR 1424,64455
#define fWX 1425,64485
#define fW6 1426,64516
#define fINT 1430,64619
#define NA 1433,64709
#define END_LIST 1434,64722
#define tfb 1435,64742
#define tsb 1436,64777
#define tex 1437,64813
#define t38 1438,64848
#define t3a 1439,64886
#define tpe 1440,64924
#define tvex 1441,64966
#define modx 1442,65006
#define tre 1443,65046
#define tne 1444,65085
#define tfl 1445,65126
#define tfh 1446,65166
#define exop 1447,65207
#define t64e 1448,65247
#define trexb 1449,65287
#define trexw 1450,65330
#define tvex 1451,65373
const instr_info_t invalid_instr 1456,65532
const instr_info_t first_byte[first_byte1463,65772
const instr_info_t second_byte[second_byte1766,86572
const instr_info_t extensions[extensions2082,107428
const instr_info_t prefix_extensions[prefix_extensions2412,127189
const instr_info_t vex_extensions[vex_extensions3991,223762
const instr_info_t mod_extensions[mod_extensions4240,240258
const instr_info_t rm_extensions[rm_extensions4293,242806
const instr_info_t x64_extensions[x64_extensions4349,246014
const instr_info_t vex_prefix_extensions[vex_prefix_extensions4408,249616
const instr_info_t vex_L_extensions[vex_L_extensions4422,250252
const instr_info_t rex_b_extensions[rex_b_extensions4452,251674
const instr_info_t rex_w_extensions[rex_w_extensions4471,252628
const byte third_byte_38_index[third_byte_38_index4514,254647
const instr_info_t third_byte_38[third_byte_384533,255788
const byte third_byte_3a_index[third_byte_3a_index4647,264166
const instr_info_t third_byte_3a[third_byte_3a4666,265307
const instr_info_t vex_W_extensions[vex_W_extensions4713,268359
const instr_info_t rep_extensions[rep_extensions4818,275293
const instr_info_t repne_extensions[repne_extensions4884,279209
const instr_info_t float_low_modrm[float_low_modrm4928,282190
const instr_info_t float_high_modrm[float_high_modrm5007,287562
const byte suffix_index[suffix_index5571,332824
const instr_info_t suffix_extensions[suffix_extensions5590,333958
const instr_info_t extra_operands[extra_operands5630,336879

x86/decodelib.c,664
options_t dynamo_options;48,2084
file_t our_stdout 52,2202
file_t our_stderr 53,2237
file_t our_stdin 54,2272
dr_get_stdout_file(59,2343
dr_get_stderr_file(65,2431
dr_get_stdin_file(71,2518
static uint vendor 77,2597
proc_get_vendor(80,2652
proc_set_vendor(87,2709
heap_alloc(99,2948
heap_free(105,3058
get_thread_private_dcontext(111,3172
external_error(117,3244
proc_save_fpstate(124,3391
proc_restore_fpstate(130,3444
dr_mcontext_as_priv_mcontext(136,3533
instrlist_meta_postinsert(144,3783
double_print(156,4173
print_to_buffer(178,4852
#undef vsnprintf181,4956
print_file(204,5641
#define MAX_PRINT_FILE_LEN 211,5886
os_write(233,6438

x86/disassemble.c,1741
# undef ASSERT_TRUNCATE76,3202
# undef ASSERT_BITFIELD_TRUNCATE77,3226
# undef ASSERT_NOT_REACHED78,3259
# define ASSERT_TRUNCATE 79,3286
# define ASSERT_BITFIELD_TRUNCATE 80,3355
# define ASSERT_NOT_REACHED 81,3433
disassemble_set_syntax(90,3636
#define BYTES_PER_LINE 103,4016
immed_prefix(110,4221
postop_suffix(116,4325
reg_disassemble(122,4446
opnd_mem_disassemble_prefix(131,4760
opnd_base_disp_disassemble(153,5560
internal_opnd_disassemble(218,8100
opnd_disassemble(489,21795
opnd_disassemble_to_buffer(500,22224
print_bytes_to_buffer(510,22489
print_extra_bytes_to_buffer(533,23169
print_bytes_to_file(547,23671
print_extra_bytes_to_file(559,24098
internal_disassemble(575,24758
internal_disassemble_to_file(630,26543
disassemble(654,27552
disassemble_with_bytes(668,28093
disassemble_with_info(688,28838
disassemble_from_copy(705,29535
disassemble_to_buffer(713,29833
instr_implicit_reg(726,30278
opnd_disassemble_noimplicit(743,30786
instr_disassemble_opnds_noimplicit(825,33305
instr_opcode_name(888,35978
instr_opcode_name_suffix(910,36620
internal_instr_disassemble(981,39130
instr_disassemble(1125,44868
instr_disassemble_to_buffer(1149,45912
exit_stub_type_desc(1159,46198
common_disassemble_fragment(1189,47247
disassemble_fragment(1363,54347
disassemble_fragment_header(1375,54686
disassemble_fragment_body(1381,54845
disassemble_app_bb(1387,55002
instrlist_disassemble(1399,55365
int instrlist_disassembled_instr_cnt(1508,59654
callstack_dump_module_info(1521,59916
internal_dump_callstack_to_buffer(1539,60585
internal_dump_callstack(1601,63120
dump_callstack(1615,63662
dump_callstack_to_buffer(1621,63814
dump_mcontext_callstack(1630,64074
dump_dr_callstack(1640,64381

x86/disassemble.h,469
#define DISASSEMBLE_H41,1966
#define MAX_OPND_DIS_SZ 46,2089
#define MAX_INSTR_DIS_SZ 50,2229
#define MAX_PC_DIS_SZ 54,2447
    DR_DISASM_DR 67,2779
    DR_DISASM_DR             =  0x0,x067,2779
    DR_DISASM_INTEL 73,3016
    DR_DISASM_INTEL          =  0x1,x173,3016
    DR_DISASM_ATT 79,3250
    DR_DISASM_ATT            =  0x2,x279,3250
    DR_DISASM_STRICT_INVALID 88,3709
    DR_DISASM_STRICT_INVALID =  0x4,x488,3709
} dr_disasm_flags_t;89,3746

x86/emit_utils.c,6991
#define FRAGMENT_TAG_OFFS 69,2611
#define FRAGMENT_START_PC_OFFS 71,2747
#define FRAGMENT_COUNTER_OFFS 72,2813
#define FRAGMENT_PREFIX_SIZE_OFFS 73,2882
#define HASHLOOKUP_TAG_OFFS 75,2953
#define HASHLOOKUP_START_PC_OFFS 76,3030
#  define HASHLOOKUP_STAT_OFFS(79,3146
#  define LINKSTUB_TARGET_FRAG_OFFS 84,3294
#  define LINKSTUB_COUNT_OFFS 88,3411
#define UNPROT_OFFS(94,3603
#define POST 110,4200
#define PRE 111,4239
#define APP 112,4277
#  define FRAG_DB_SHARED(122,4598
#  define FRAG_DB_SHARED(124,4641
#define STUB_DIRECT_SIZE(194,6919
#define STUB_INDIRECT_SIZE32 200,7123
#define STUB_INDIRECT_SIZE64 202,7228
#define STUB_INDIRECT_SIZE(204,7333
#define STUB_COARSE_INDIRECT_SIZE(208,7491
#  define LINKCOUNT_INCSIZE 211,7587
#  define LINKCOUNT_INCSIZE 213,7625
#define LINKCOUNT_EFLAGS_SAVE 215,7666
#define LINKCOUNT_EFLAGS_RESTORE 216,7702
#define LINKCOUNT_FLAGSIZE 217,7741
#define LINKCOUNT_DIRECT_EXTRA(219,7820
#define LINKCOUNT_UNLINKED_ENTRY(221,7931
#define LINKCOUNT_NEVER_LINKED_SENTINEL 229,8310
exit_stub_size(235,8461
insert_relative_target(316,11781
insert_relative_jump(328,12137
insert_spill_or_restore(347,12701
insert_jmp_to_ibl(424,15874
insert_linkcount_inc(494,18687
insert_linkcount_saveflags(523,19524
insert_linkcount_restoreflags(538,19940
is_patchable_exit_stub_helper(552,20347
is_patchable_exit_stub(581,21150
is_exit_cti_stub_patchable(588,21381
bytes_for_exitstub_alignment(607,22056
extend_trace_pad_bytes(632,23062
pad_for_exitstub_alignment(659,24668
remove_nops_from_ilist(684,25742
nop_pad_ilist(714,26941
insert_inlined_ibl(828,32989
get_direct_exit_target(882,35429
insert_save_xax(898,36023
insert_restore_xax(908,36420
insert_exit_stub_other_flags(924,37102
insert_exit_stub(1085,43997
exit_cti_disp_pc(1092,44198
patch_branch(1142,45995
change_linkcount_target(1150,46221
optimize_linkcount_stub(1170,47050
patchable_exit_cti_align_offs(1256,50919
is_exit_cti_patchable(1273,51855
link_direct_exit(1324,53472
unlink_direct_exit(1418,57479
link_indirect_exit(1487,60193
linkstub_unlink_entry_offset(1568,63155
indirect_linkstub_stub_pc(1586,63704
indirect_linkstub_target(1624,65191
linkstub_cbr_disambiguate(1659,66769
cbr_fallthrough_exit_cti(1679,67354
unlink_indirect_exit(1695,68002
entrance_stub_jmp(1794,71723
coarse_is_entrance_stub(1811,72287
coarse_is_trace_head(1835,73097
entrance_stub_jmp_target(1849,73525
entrance_stub_target_tag(1860,73760
coarse_is_indirect_stub(1901,75391
coarse_cti_is_intra_fragment(1911,75667
coarse_indirect_stub_jmp_target(1943,77017
coarse_indirect_stub_size(1967,77774
entrance_stub_linked(1977,78097
patch_coarse_branch(1993,78785
link_entrance_stub(2032,80387
unlink_entrance_stub(2047,81054
entrance_stub_from_cti(2065,81715
init_patch_list(2076,81994
add_patch_entry_internal(2087,82421
add_patch_entry(2120,83768
add_patch_marker(2133,84297
remove_assembled_patch_markers(2142,84700
relocate_patch_list(2170,85511
encode_with_patch_list(2229,88161
print_patch_list(2318,91836
disassemble_with_annotations(2337,92462
patch_emitted_code(2364,93307
#define GET_IB_FTABLE(2441,96810
update_indirect_exit_stub(2450,97147
#define IBL_EFLAGS_IN_TLS(2510,99414
#define RESTORE_XAX_PREFIX(2512,99484
#define PREFIX_BASE(2515,99666
enum {PREFIX_SIZE_RESTORE_OF PREFIX_SIZE_RESTORE_OF2518,99763
      PREFIX_SIZE_FIVE_EFLAGS 2519,99819
use_ibt_prefix(2524,99932
ibl_use_target_prefix(2546,101003
fragment_prefix_size(2565,101874
insert_restore_xcx(2610,103771
insert_restore_register(2623,104339
insert_fragment_prefix(2650,105377
static uint profile_call_length 2741,109276
static int profile_call_fragment_offset 2742,109313
static int profile_call_call_offset 2743,109358
static byte profile_call_buf[profile_call_buf2744,109399
static dcontext_t *buffer_dcontext;buffer_dcontext2745,109434
profile_call_size(2749,109521
finalize_profile_call(2761,109815
insert_profile_call(2819,112250
build_profile_call_buffer(2835,112796
#define RESTORE_FROM_DC_VIA_REG(2952,117253
#define SAVE_TO_DC_VIA_REG(2957,117646
preinsert_swap_peb(3004,119998
#define RESTORE_FROM_DC(3145,127085
#define SAVE_TO_DC(3148,127270
#define OPND_TLS_FIELD(3151,127365
#define OPND_TLS_FIELD_SZ(3153,127437
#define SAVE_TO_TLS(3156,127532
#define RESTORE_FROM_TLS(3158,127613
#define SAVE_TO_REG(3161,127705
#define RESTORE_FROM_REG(3163,127788
#define OPND_DC_FIELD(3166,127882
#  define OPND_ARG1 3174,128257
#  define OPND_ARG1 3176,128310
# define OPND_ARG1 3179,128370
emit_fcache_enter_common(3293,132367
emit_fcache_enter(3521,142664
insert_shared_get_dcontext(3547,143707
insert_shared_restore_dcontext_reg(3577,145091
append_fcache_return_common(3724,150158
emit_fcache_return(3960,161005
emit_fcache_enter_shared(3978,161686
emit_fcache_return_shared(3985,161910
emit_fcache_return_coarse(4002,162552
emit_trace_head_return_coarse(4020,163275
coarse_exit_prefix_size(4051,164888
emit_coarse_exit_prefix(4070,165635
patch_coarse_exit_prefix(4219,172461
insert_save_eflags(4234,172920
insert_restore_eflags(4282,175170
append_increment_counter(4317,176854
append_empty_loop(4400,180890
instrlist_convert_to_x86(4422,181635
append_ibl_found(4436,182070
append_linkcount_incr(4591,188711
append_ibl_head(4672,193103
#define HEAD_START_PC_OFFS 4941,206128
#undef HEAD_START_PC_OFFS4948,206516
emit_inline_ibl_stub(4991,208006
#  define INSTR_CREATE_jmp_smart 5158,216060
#  define INSTR_CREATE_jmp_smart 5160,216116
emit_indirect_branch_lookup(5186,217208
update_ibl_routine(5932,253487
update_indirect_branch_lookup(5968,255218
emit_far_ibl(6052,258580
create_int_syscall_instr(6187,264708
create_syscall_instr(6208,265459
emit_shared_syscall(6400,272979
emit_dispatch_template(6937,297828
emit_shared_syscall_dispatch(6968,298819
emit_unlinked_shared_syscall_dispatch(6975,299019
link_shared_syscall_common(6990,299653
link_shared_syscall(7006,300120
unlink_shared_syscall_common(7027,300903
unlink_shared_syscall(7043,301371
emit_detach_callback_code(7143,305221
emit_detach_callback_final_jmp(7241,309808
emit_patch_syscall(7268,310666
emit_do_syscall_common(7323,313272
emit_fcache_enter_indirect(7422,316855
emit_do_callback_return(7433,317282
emit_do_clone_syscall(7465,318415
emit_do_vmkuw_syscall(7474,318797
emit_do_syscall(7487,319309
update_syscall(7499,319779
update_syscalls(7549,321523
decode_syscall_num(7567,321974
is_jmp_rel32(7617,324021
is_jmp_rel8(7632,324455
emit_new_thread_dynamo_start(7656,325129
emit_trace_head_incr(7732,328181
emit_trace_head_incr_shared(7819,332710
client_xfer_ibl_tgt(7830,332952
client_ibl_xfer_is_thread_private(7850,333947
emit_client_ibl_xfer(7861,334186
relink_client_ibl_xfer(7945,337299
link_client_ibl_xfer(7972,338311
unlink_client_ibl_xfer(7978,338414
client_clean_call_is_thread_private(7988,338671
emit_clean_call_save(7998,338829
emit_clean_call_restore(8041,340596

x86/encode.c,1555
# undef ASSERT_TRUNCATE52,2229
# undef ASSERT_BITFIELD_TRUNCATE53,2253
# undef ASSERT_NOT_REACHED54,2286
# define ASSERT_TRUNCATE 55,2313
# define ASSERT_BITFIELD_TRUNCATE 56,2382
# define ASSERT_NOT_REACHED 57,2460
#define ENC_LEVEL 61,2613
const char * const type_names[type_names63,2634
const char * const reg_names[reg_names116,4523
const char * const size_names[size_names142,5969
template_optype_is_reg(264,11041
type_instr_uses_reg_bits(299,11947
type_uses_modrm_bits(315,12186
size_ok_varsz(338,12764
resolve_var_x64_size(480,19139
size_ok(511,20675
immed_size_ok(746,30100
reg_set_ext_prefixes(772,30834
reg_size_ok(787,31351
reg_rm_selectable(831,33194
mem_size_ok(839,33442
opnd_type_ok(861,34424
instr_info_extra_opnds(1176,51278
#define TEST_OPND(1188,51655
encoding_possible_pass(1213,53086
encoding_possible(1263,55472
instr_is_encoding_possible(1304,57249
get_encoding_info(1314,57519
instr_info_opnd_type(1332,58018
encode_immed(1376,59328
encode_reg_ext_prefixes(1503,63834
encode_rel_addr(1512,63999
encode_base_disp(1543,65302
set_immed(1714,72609
get_mem_instr_addr(1728,72985
encode_operand(1736,73244
encode_vex_final_prefix_byte(2047,87015
encode_vex_prefixes(2072,87817
encode_cti(2139,90388
copy_and_re_relativize_raw_instr(2226,93635
instr_encode_common(2315,97756
instr_encode_ignore_reachability(2705,113749
instr_encode_check_reachability(2712,114002
instr_encode_to_copy(2720,114293
instr_encode(2727,114522
instrlist_encode_to_copy(2737,114843
instrlist_encode(2764,115840

x86/instr.c,12840
#define INSTR_INLINE 53,2567
# undef ASSERT_TRUNCATE76,3061
# undef ASSERT_BITFIELD_TRUNCATE77,3085
# undef ASSERT_NOT_REACHED78,3118
# define ASSERT_TRUNCATE 79,3145
# define ASSERT_BITFIELD_TRUNCATE 80,3214
# define ASSERT_NOT_REACHED 81,3292
#undef opnd_is_null96,3552
#undef opnd_is_immed_int97,3572
#undef opnd_is_immed_float98,3597
#undef opnd_is_near_pc99,3624
#undef opnd_is_near_instr100,3647
#undef opnd_is_reg101,3673
#undef opnd_is_base_disp102,3692
#undef opnd_is_far_pc103,3717
#undef opnd_is_far_instr104,3739
#undef opnd_is_mem_instr105,3764
#undef opnd_is_valid106,3789
bool opnd_is_null 107,3810
bool opnd_is_immed_int 108,3875
bool opnd_is_immed_float(109,3945
bool opnd_is_near_pc 110,4017
bool opnd_is_near_instr 111,4085
bool opnd_is_reg 112,4156
bool opnd_is_base_disp 113,4220
bool opnd_is_far_pc 114,4290
bool opnd_is_far_instr 115,4357
bool opnd_is_mem_instr 116,4427
bool opnd_is_valid 117,4497
#define opnd_is_null 118,4563
#define opnd_is_immed_int 119,4608
#define opnd_is_immed_float 120,4658
#define opnd_is_near_pc 121,4710
#define opnd_is_near_instr 122,4758
#define opnd_is_reg 123,4809
#define opnd_is_base_disp 124,4853
#define opnd_is_far_pc 125,4903
#define opnd_is_far_instr 126,4950
#define opnd_is_mem_instr 127,5000
#define opnd_is_valid 128,5050
# undef opnd_is_rel_addr131,5108
bool opnd_is_rel_addr(132,5133
# define opnd_is_rel_addr 133,5199
opnd_is_abs_base_disp(138,5346
bool opnd_is_abs_addr(142,5506
bool opnd_is_near_abs_addr(145,5623
bool opnd_is_far_abs_addr(148,5735
opnd_is_reg_32bit(153,5852
reg_is_32bit(161,5987
opnd_is_reg_64bit(167,6080
reg_is_64bit(175,6215
opnd_is_reg_pointer_sized(181,6308
reg_is_pointer_sized(189,6459
#undef opnd_get_reg198,6635
opnd_get_reg(200,6664
#define opnd_get_reg 204,6725
opnd_get_size(207,6772
opnd_set_size(236,7403
opnd_create_immed_int(257,7814
opnd_create_immed_float(282,8734
opnd_create_immed_float_zero(297,9165
opnd_get_immed_int(309,9493
opnd_get_immed_float(317,9729
opnd_create_far_pc(332,10150
opnd_create_instr_ex(342,10349
opnd_create_instr(353,10572
opnd_create_far_instr(359,10671
opnd_create_mem_instr(370,10894
opnd_get_pc(381,11128
opnd_get_segment_selector(393,11382
opnd_get_instr(404,11710
opnd_get_shift(413,11909
opnd_get_mem_instr_disp(420,12064
opnd_create_base_disp_ex(430,12299
opnd_create_base_disp(440,12754
opnd_create_far_base_disp_ex(448,13040
opnd_create_far_base_disp(479,14596
#undef opnd_get_base486,14892
#undef opnd_get_disp487,14913
#undef opnd_get_index488,14934
#undef opnd_get_scale489,14956
#undef opnd_get_segment490,14978
reg_id_t opnd_get_base 491,15002
int      opnd_get_disp 492,15073
reg_id_t opnd_get_index 493,15144
int      opnd_get_scale 494,15216
reg_id_t opnd_get_segment(495,15288
#define opnd_get_base 496,15362
#define opnd_get_disp 497,15399
#define opnd_get_index 498,15436
#define opnd_get_scale 499,15474
#define opnd_get_segment 500,15512
opnd_is_disp_encode_zero(503,15560
opnd_is_disp_force_full(512,15795
opnd_is_disp_short_addr(521,16027
opnd_set_disp(530,16259
opnd_set_disp_ex(539,16468
opnd_create_abs_addr(552,16993
opnd_create_far_abs_addr(558,17126
opnd_create_rel_addr(596,18641
opnd_create_far_rel_addr(608,19083
opnd_get_addr(624,19584
opnd_is_memory_reference(638,19984
opnd_is_far_memory_reference(646,20181
opnd_is_near_memory_reference(653,20355
opnd_num_regs_used(661,20571
opnd_get_reg_used(694,21353
const reg_id_t regparms[regparms757,23270
const reg_id_t dr_reg_fixer[dr_reg_fixer768,23489
reg_check_reg_fixer(795,25197
opnd_uses_reg(811,25764
opnd_replace_reg(847,26700
bool opnd_same_address(917,29113
opnd_same_sizes_ok(952,30188
bool opnd_same(970,30880
bool opnd_share_reg(1037,33700
range_overlap(1067,34510
bool opnd_defines_use(1087,35018
opnd_size_in_bytes(1148,37117
opnd_size_from_bytes(1232,39378
opnd_shrink_to_16_bits(1256,39980
opnd_shrink_to_32_bits(1276,40628
reg_get_value_helper(1294,41100
reg_get_value_priv(1308,41498
reg_get_value(1346,42812
reg_set_value_priv(1355,43142
reg_set_value(1368,43463
opnd_compute_address_priv(1381,43985
opnd_compute_address(1427,45524
get_register_name(1438,45912
reg_to_pointer_sized(1444,45985
reg_32_to_16(1450,46064
reg_32_to_8(1458,46272
reg_32_to_64(1476,46680
reg_64_to_32(1484,46888
reg_is_extended(1492,47092
reg_32_to_opsz(1508,47779
reg_resize_to_opsz(1528,48298
reg_parameter_num(1536,48539
opnd_get_reg_dcontext_offs(1547,48706
opnd_get_reg_mcontext_offs(1574,49488
reg_overlap(1580,49593
enum {REG_INVALID_BITS REG_INVALID_BITS1597,50125
enum {REG_INVALID_BITS = 0x0}x01597,50125
reg_get_bits(1599,50205
reg_get_size(1633,51659
instr_create(1674,52991
instr_destroy(1686,53432
instr_clone(1696,53740
instr_init(1746,55971
instr_free(1756,56314
instr_mem_usage(1789,57587
instr_reset(1822,58602
instr_reuse(1837,59128
instr_build(1884,60559
instr_build_bits(1893,60834
private_instr_encode(1907,61329
#define inlined_instr_get_opcode(1979,64535
instr_get_opcode(1985,64803
#define instr_get_opcode 1990,64957
instr_being_modified(1993,65027
instr_set_opcode(2004,65383
instr_valid(2025,66330
instr_get_app_pc(2033,66490
instr_opcode_valid(2044,66830
instr_get_instr_info(2051,66968
get_instr_info(2057,67078
#undef instr_get_src2062,67139
instr_get_src(2064,67167
#define instr_get_src 2068,67249
uint instr_get_src_kind(2073,67346
#undef instr_get_dst2079,67466
instr_get_dst(2081,67494
#define instr_get_dst 2085,67576
uint instr_get_dst_kind(2090,67673
instr_set_num_opnds(2100,67938
instr_set_src(2131,69395
instr_set_dst(2147,69959
#undef instr_get_target2157,70351
instr_get_target(2159,70382
#define instr_get_target 2163,70455
instr_set_target(2169,70594
instr_set_prefix_flag(2182,71032
instr_get_prefix_flag(2190,71202
instr_set_prefixes(2196,71309
instr_get_prefixes(2203,71461
instr_set_x86_mode(2214,71695
instr_get_x86_mode(2227,72007
instr_branch_targets_prefix(2246,72654
instr_branch_set_prefix_target(2265,73428
instr_branch_special_exit(2276,73720
instr_branch_set_special_exit(2285,73937
instr_exit_branch_type(2296,74194
instr_exit_branch_set_type(2304,74325
instr_set_ok_to_mangle(2313,74514
instr_is_meta_may_fault(2322,74686
instr_set_meta_may_fault(2329,74864
instr_set_meta_no_translation(2339,75163
instr_set_ok_to_emit(2346,75301
instr_set_exit_stub_code(2366,76051
instr_exit_stub_code(2394,77181
instr_get_eflags(2407,77494
instr_get_opcode_eflags(2445,78996
instr_get_arith_flags(2453,79197
instr_eflags_valid(2463,79416
instr_set_eflags_valid(2469,79516
instr_arith_flags_valid(2484,79939
instr_set_arith_flags_valid(2492,80156
instr_set_operands_valid(2503,80392
instr_set_raw_bits(2513,80632
instr_shift_raw_bits(2538,81553
instr_set_raw_bits_valid(2551,81884
instr_free_raw_bits(2569,82398
instr_allocate_raw_bits(2583,82842
instr_set_translation(2614,84075
instr_get_translation(2624,84307
instr_make_persistent(2637,84799
instr_get_raw_bits(2646,85054
instr_get_raw_byte(2653,85160
instr_get_raw_word(2662,85446
instr_set_raw_byte(2675,85892
instr_set_raw_bytes(2692,86508
instr_set_raw_word(2709,87139
instr_length(2722,87612
instr_expand(2778,89894
instr_is_level_0(2881,94200
instr_get_next_expanded(2912,95503
instr_get_prev_expanded(2923,95917
instrlist_first_expanded(2934,96333
instrlist_last_expanded(2946,96735
instr_decode_cti(2965,97556
instr_decode_opcode(2995,98904
instr_decode(3027,100244
instr_decode_with_current_dcontext(3062,101667
instrlist_decode_cti(3081,102437
loginst(3160,105704
logopnd(3170,105974
logtrace(3181,106242
instr_shrink_to_16_bits(3200,106858
instr_shrink_to_32_bits(3234,108008
instr_uses_reg(3255,108688
bool instr_reg_in_dst(3260,108809
instr_reg_in_src(3270,109026
instr_reads_from_reg(3283,109363
bool instr_writes_to_reg(3300,109735
bool instr_writes_to_exact_reg(3314,110126
bool instr_replace_src_opnd(3327,110412
bool instr_same(3344,110808
bool instr_reads_memory(3381,111827
bool instr_writes_memory(3403,112374
instr_rip_rel_valid(3430,113455
instr_set_rip_rel_valid(3436,113584
instr_get_rip_rel_pos(3445,113761
instr_set_rip_rel_pos(3451,113840
instr_get_rel_addr_target(3460,114109
instr_has_rel_addr_reference(3497,115194
instr_get_rel_addr_dst_idx(3503,115299
instr_get_rel_addr_src_idx(3519,115633
instr_is_our_mangling(3536,115985
instr_set_our_mangling(3542,116084
instr_compute_address_ex_priv(3554,116381
instr_compute_address_ex(3599,117726
instr_compute_address_ex_pos(3610,118147
instr_compute_address_priv(3625,118832
instr_compute_address(3635,119043
instr_memory_reference_size(3645,119379
decode_memory_reference_size(3670,120132
instr_get_label_data_area(3686,120618
instr_branch_type(3697,120865
instr_get_branch_target_pc(3746,122866
instr_set_branch_target_pc(3756,123160
instr_is_exit_cti(3770,123654
instr_is_mov(3786,124130
opcode_is_call(3797,124378
instr_is_call(3806,124548
instr_is_call_direct(3813,124660
instr_is_near_call_direct(3820,124798
instr_is_call_indirect(3827,124919
instr_is_return(3834,125066
opcode_is_cbr(3843,125285
instr_is_cbr(3851,125478
opcode_is_mbr(3858,125624
instr_is_mbr(3870,125890
instr_is_far_cti(3877,126027
instr_is_far_abs_cti(3889,126359
opcode_is_ubr(3896,126506
instr_is_ubr(3904,126635
instr_is_near_ubr(3911,126776
instr_is_cti(3919,126955
instr_is_cti_short(3931,127391
instr_is_cti_loop(3955,128349
instr_is_cti_short_rewrite(3972,129086
instr_is_interrupt(4021,131088
instr_get_interrupt_number(4028,131235
instr_is_syscall(4049,132019
instr_is_wow64_syscall(4079,132762
instr_is_mov_constant(4108,133726
bool instr_is_prefetch(4128,134289
instr_is_floating_ex(4144,134625
instr_is_floating(4385,144384
instr_saves_float_pc(4391,144474
opcode_is_mmx(4400,144761
opcode_is_sse_or_sse2(4416,145467
type_is_sse(4441,146750
instr_is_mmx(4447,146854
instr_is_sse_or_sse2(4466,147464
instr_is_mov_imm_to_tos(4478,147674
instr_is_label(4492,148214
instr_is_undefined(4499,148398
instr_invert_cbr(4511,148715
instr_convert_short_meta_jmp_to_long(4603,153007
instr_cbr_taken(4619,153708
opc_jcc_taken(4645,154653
instr_jcc_taken(4690,156364
instr_cmovcc_to_jcc(4703,156751
instr_cmovcc_triggered(4732,157753
instr_uses_fp_reg(4740,157942
reg_is_gpr(4771,158852
reg_is_segment(4777,158934
reg_is_ymm(4783,159018
reg_is_xmm(4789,159107
reg_is_mmx(4796,159223
reg_is_fp(4802,159312
instr_create_0dst_0src(4828,160184
instr_create_0dst_1src(4835,160327
instr_create_0dst_2src(4843,160513
instr_create_0dst_3src(4853,160769
instr_create_1dst_0src(4864,161070
instr_create_1dst_1src(4872,161256
instr_create_1dst_2src(4882,161508
instr_create_1dst_3src(4893,161807
instr_create_1dst_5src(4905,162151
instr_create_2dst_0src(4920,162608
instr_create_2dst_1src(4930,162864
instr_create_2dst_2src(4941,163163
instr_create_2dst_3src(4953,163509
instr_create_2dst_4src(4966,163900
instr_create_3dst_0src(4981,164359
instr_create_3dst_3src(4992,164660
instr_create_3dst_4src(5007,165119
instr_create_3dst_5src(5023,165623
instr_create_4dst_1src(5041,166195
instr_create_4dst_4src(5055,166607
instr_create_popa(5072,167155
instr_create_pusha(5089,167840
instr_create_raw_1byte(5112,168742
instr_create_raw_2bytes(5120,168930
instr_create_raw_3bytes(5130,169193
instr_create_raw_4bytes(5141,169506
instr_create_raw_5bytes(5154,169893
instr_create_raw_6bytes(5168,170330
instr_create_raw_7bytes(5184,170841
instr_create_raw_8bytes(5201,171402
instr_create_nbyte_nop(5220,172037
instr_is_nop(5256,173475
dcontext_opnd_common(5291,175169
opnd_create_dcontext_field_sz(5318,176424
opnd_create_dcontext_field(5324,176583
opnd_create_dcontext_field_via_reg_sz(5331,176800
opnd_create_dcontext_field_via_reg(5339,177094
opnd_create_dcontext_field_byte(5345,177266
instr_create_restore_from_dcontext(5351,177418
instr_create_save_to_dcontext(5362,177815
instr_create_restore_from_dc_via_reg(5378,178467
instr_create_save_to_dc_via_reg(5396,179232
instr_create_save_immed_to_dcontext(5411,179844
instr_create_jump_via_dcontext(5420,180196
instr_create_restore_dynamo_stack(5431,180559
update_dcontext_address(5437,180708
opnd_create_tls_slot(5468,182004
opnd_create_sized_tls_slot(5474,182102
instr_raw_is_tls_spill(5485,182504
instr_check_tls_spill_restore(5520,184056
instr_is_tls_spill(5560,185443
instr_is_tls_restore(5573,185890
instr_is_tls_xcx_spill(5587,186373
instr_check_mcontext_spill_restore(5599,186772
instr_is_reg_spill_or_restore(5643,188195
instr_create_save_to_tls(5676,189378
instr_create_restore_from_tls(5683,189606
instr_create_save_to_reg(5691,189915
instr_create_restore_from_reg(5697,190095
instr_raw_is_rip_rel_lea(5708,190437
move_mm_reg_opcode(5728,191126

x86/instr.h,66717
#define _INSTR_H_ 41,2011
#define DR_REG_ENUM_COMPATIBILITY 52,2343
#define DR_FAST_IR 55,2443
# undef DR_FAST_IR62,2696
#  define INSTR_INLINE 106,4141
#  define INSTR_INLINE108,4178
    DR_REG_NULL,131,5106
    DR_REG_RAX,133,5222
    DR_REG_RAX,  DR_REG_RCX,133,5222
    DR_REG_RAX,  DR_REG_RCX,  DR_REG_RDX,133,5222
    DR_REG_RAX,  DR_REG_RCX,  DR_REG_RDX,  DR_REG_RBX,133,5222
    DR_REG_RSP,134,5277
    DR_REG_RSP,  DR_REG_RBP,134,5277
    DR_REG_RSP,  DR_REG_RBP,  DR_REG_RSI,134,5277
    DR_REG_RSP,  DR_REG_RBP,  DR_REG_RSI,  DR_REG_RDI,134,5277
    DR_REG_R8,135,5332
    DR_REG_R8,   DR_REG_R9,135,5332
    DR_REG_R8,   DR_REG_R9,   DR_REG_R10,135,5332
    DR_REG_R8,   DR_REG_R9,   DR_REG_R10,  DR_REG_R11,135,5332
    DR_REG_R12,136,5387
    DR_REG_R12,  DR_REG_R13,136,5387
    DR_REG_R12,  DR_REG_R13,  DR_REG_R14,136,5387
    DR_REG_R12,  DR_REG_R13,  DR_REG_R14,  DR_REG_R15,136,5387
    DR_REG_EAX,138,5475
    DR_REG_EAX,  DR_REG_ECX,138,5475
    DR_REG_EAX,  DR_REG_ECX,  DR_REG_EDX,138,5475
    DR_REG_EAX,  DR_REG_ECX,  DR_REG_EDX,  DR_REG_EBX,138,5475
    DR_REG_ESP,139,5530
    DR_REG_ESP,  DR_REG_EBP,139,5530
    DR_REG_ESP,  DR_REG_EBP,  DR_REG_ESI,139,5530
    DR_REG_ESP,  DR_REG_EBP,  DR_REG_ESI,  DR_REG_EDI,139,5530
    DR_REG_R8D,140,5585
    DR_REG_R8D,  DR_REG_R9D,140,5585
    DR_REG_R8D,  DR_REG_R9D,  DR_REG_R10D,140,5585
    DR_REG_R8D,  DR_REG_R9D,  DR_REG_R10D, DR_REG_R11D,140,5585
    DR_REG_R12D,141,5641
    DR_REG_R12D, DR_REG_R13D,141,5641
    DR_REG_R12D, DR_REG_R13D, DR_REG_R14D,141,5641
    DR_REG_R12D, DR_REG_R13D, DR_REG_R14D, DR_REG_R15D,141,5641
    DR_REG_AX,143,5730
    DR_REG_AX,   DR_REG_CX,143,5730
    DR_REG_AX,   DR_REG_CX,   DR_REG_DX,143,5730
    DR_REG_AX,   DR_REG_CX,   DR_REG_DX,   DR_REG_BX,143,5730
    DR_REG_SP,144,5784
    DR_REG_SP,   DR_REG_BP,144,5784
    DR_REG_SP,   DR_REG_BP,   DR_REG_SI,144,5784
    DR_REG_SP,   DR_REG_BP,   DR_REG_SI,   DR_REG_DI,144,5784
    DR_REG_R8W,145,5838
    DR_REG_R8W,  DR_REG_R9W,145,5838
    DR_REG_R8W,  DR_REG_R9W,  DR_REG_R10W,145,5838
    DR_REG_R8W,  DR_REG_R9W,  DR_REG_R10W, DR_REG_R11W,145,5838
    DR_REG_R12W,146,5894
    DR_REG_R12W, DR_REG_R13W,146,5894
    DR_REG_R12W, DR_REG_R13W, DR_REG_R14W,146,5894
    DR_REG_R12W, DR_REG_R13W, DR_REG_R14W, DR_REG_R15W,146,5894
    DR_REG_AL,148,5982
    DR_REG_AL,   DR_REG_CL,148,5982
    DR_REG_AL,   DR_REG_CL,   DR_REG_DL,148,5982
    DR_REG_AL,   DR_REG_CL,   DR_REG_DL,   DR_REG_BL,148,5982
    DR_REG_AH,149,6036
    DR_REG_AH,   DR_REG_CH,149,6036
    DR_REG_AH,   DR_REG_CH,   DR_REG_DH,149,6036
    DR_REG_AH,   DR_REG_CH,   DR_REG_DH,   DR_REG_BH,149,6036
    DR_REG_R8L,150,6090
    DR_REG_R8L,  DR_REG_R9L,150,6090
    DR_REG_R8L,  DR_REG_R9L,  DR_REG_R10L,150,6090
    DR_REG_R8L,  DR_REG_R9L,  DR_REG_R10L, DR_REG_R11L,150,6090
    DR_REG_R12L,151,6146
    DR_REG_R12L, DR_REG_R13L,151,6146
    DR_REG_R12L, DR_REG_R13L, DR_REG_R14L,151,6146
    DR_REG_R12L, DR_REG_R13L, DR_REG_R14L, DR_REG_R15L,151,6146
    DR_REG_SPL,152,6202
    DR_REG_SPL,  DR_REG_BPL,152,6202
    DR_REG_SPL,  DR_REG_BPL,  DR_REG_SIL,152,6202
    DR_REG_SPL,  DR_REG_BPL,  DR_REG_SIL,  DR_REG_DIL,152,6202
    DR_REG_MM0,154,6278
    DR_REG_MM0,  DR_REG_MM1,154,6278
    DR_REG_MM0,  DR_REG_MM1,  DR_REG_MM2,154,6278
    DR_REG_MM0,  DR_REG_MM1,  DR_REG_MM2,  DR_REG_MM3,154,6278
    DR_REG_MM4,155,6333
    DR_REG_MM4,  DR_REG_MM5,155,6333
    DR_REG_MM4,  DR_REG_MM5,  DR_REG_MM6,155,6333
    DR_REG_MM4,  DR_REG_MM5,  DR_REG_MM6,  DR_REG_MM7,155,6333
    DR_REG_XMM0,157,6410
    DR_REG_XMM0, DR_REG_XMM1,157,6410
    DR_REG_XMM0, DR_REG_XMM1, DR_REG_XMM2,157,6410
    DR_REG_XMM0, DR_REG_XMM1, DR_REG_XMM2, DR_REG_XMM3,157,6410
    DR_REG_XMM4,158,6466
    DR_REG_XMM4, DR_REG_XMM5,158,6466
    DR_REG_XMM4, DR_REG_XMM5, DR_REG_XMM6,158,6466
    DR_REG_XMM4, DR_REG_XMM5, DR_REG_XMM6, DR_REG_XMM7,158,6466
    DR_REG_XMM8,159,6522
    DR_REG_XMM8, DR_REG_XMM9,159,6522
    DR_REG_XMM8, DR_REG_XMM9, DR_REG_XMM10,159,6522
    DR_REG_XMM8, DR_REG_XMM9, DR_REG_XMM10,DR_REG_XMM11,159,6522
    DR_REG_XMM12,160,6579
    DR_REG_XMM12,DR_REG_XMM13,160,6579
    DR_REG_XMM12,DR_REG_XMM13,DR_REG_XMM14,160,6579
    DR_REG_XMM12,DR_REG_XMM13,DR_REG_XMM14,DR_REG_XMM15,160,6579
    DR_REG_ST0,162,6671
    DR_REG_ST0,  DR_REG_ST1,162,6671
    DR_REG_ST0,  DR_REG_ST1,  DR_REG_ST2,162,6671
    DR_REG_ST0,  DR_REG_ST1,  DR_REG_ST2,  DR_REG_ST3,162,6671
    DR_REG_ST4,163,6726
    DR_REG_ST4,  DR_REG_ST5,163,6726
    DR_REG_ST4,  DR_REG_ST5,  DR_REG_ST6,163,6726
    DR_REG_ST4,  DR_REG_ST5,  DR_REG_ST6,  DR_REG_ST7,163,6726
    DR_SEG_ES,165,6848
    DR_SEG_ES,   DR_SEG_CS,165,6848
    DR_SEG_ES,   DR_SEG_CS,   DR_SEG_SS,165,6848
    DR_SEG_ES,   DR_SEG_CS,   DR_SEG_SS,   DR_SEG_DS,165,6848
    DR_SEG_ES,   DR_SEG_CS,   DR_SEG_SS,   DR_SEG_DS,   DR_SEG_FS,165,6848
    DR_SEG_ES,   DR_SEG_CS,   DR_SEG_SS,   DR_SEG_DS,   DR_SEG_FS,   DR_SEG_GS,165,6848
    DR_REG_DR0,167,7017
    DR_REG_DR0,  DR_REG_DR1,167,7017
    DR_REG_DR0,  DR_REG_DR1,  DR_REG_DR2,167,7017
    DR_REG_DR0,  DR_REG_DR1,  DR_REG_DR2,  DR_REG_DR3,167,7017
    DR_REG_DR4,168,7072
    DR_REG_DR4,  DR_REG_DR5,168,7072
    DR_REG_DR4,  DR_REG_DR5,  DR_REG_DR6,168,7072
    DR_REG_DR4,  DR_REG_DR5,  DR_REG_DR6,  DR_REG_DR7,168,7072
    DR_REG_DR8,169,7127
    DR_REG_DR8,  DR_REG_DR9,169,7127
    DR_REG_DR8,  DR_REG_DR9,  DR_REG_DR10,169,7127
    DR_REG_DR8,  DR_REG_DR9,  DR_REG_DR10, DR_REG_DR11,169,7127
    DR_REG_DR12,170,7183
    DR_REG_DR12, DR_REG_DR13,170,7183
    DR_REG_DR12, DR_REG_DR13, DR_REG_DR14,170,7183
    DR_REG_DR12, DR_REG_DR13, DR_REG_DR14, DR_REG_DR15,170,7183
    DR_REG_CR0,172,7300
    DR_REG_CR0,  DR_REG_CR1,172,7300
    DR_REG_CR0,  DR_REG_CR1,  DR_REG_CR2,172,7300
    DR_REG_CR0,  DR_REG_CR1,  DR_REG_CR2,  DR_REG_CR3,172,7300
    DR_REG_CR4,173,7355
    DR_REG_CR4,  DR_REG_CR5,173,7355
    DR_REG_CR4,  DR_REG_CR5,  DR_REG_CR6,173,7355
    DR_REG_CR4,  DR_REG_CR5,  DR_REG_CR6,  DR_REG_CR7,173,7355
    DR_REG_CR8,174,7411
    DR_REG_CR8,  DR_REG_CR9,174,7411
    DR_REG_CR8,  DR_REG_CR9,  DR_REG_CR10,174,7411
    DR_REG_CR8,  DR_REG_CR9,  DR_REG_CR10, DR_REG_CR11,174,7411
    DR_REG_CR12,175,7467
    DR_REG_CR12, DR_REG_CR13,175,7467
    DR_REG_CR12, DR_REG_CR13, DR_REG_CR14,175,7467
    DR_REG_CR12, DR_REG_CR13, DR_REG_CR14, DR_REG_CR15,175,7467
    DR_REG_INVALID,176,7523
    DR_REG_YMM0,185,7841
    DR_REG_YMM0, DR_REG_YMM1,185,7841
    DR_REG_YMM0, DR_REG_YMM1, DR_REG_YMM2,185,7841
    DR_REG_YMM0, DR_REG_YMM1, DR_REG_YMM2, DR_REG_YMM3,185,7841
    DR_REG_YMM4,186,7897
    DR_REG_YMM4, DR_REG_YMM5,186,7897
    DR_REG_YMM4, DR_REG_YMM5, DR_REG_YMM6,186,7897
    DR_REG_YMM4, DR_REG_YMM5, DR_REG_YMM6, DR_REG_YMM7,186,7897
    DR_REG_YMM8,187,7953
    DR_REG_YMM8, DR_REG_YMM9,187,7953
    DR_REG_YMM8, DR_REG_YMM9, DR_REG_YMM10,187,7953
    DR_REG_YMM8, DR_REG_YMM9, DR_REG_YMM10,DR_REG_YMM11,187,7953
    DR_REG_YMM12,188,8010
    DR_REG_YMM12,DR_REG_YMM13,188,8010
    DR_REG_YMM12,DR_REG_YMM13,DR_REG_YMM14,188,8010
    DR_REG_YMM12,DR_REG_YMM13,DR_REG_YMM14,DR_REG_YMM15,188,8010
typedef byte reg_id_t;192,8149
typedef byte opnd_size_t;193,8208
# define DR_REG_XAX 197,8343
# define DR_REG_XCX 198,8429
# define DR_REG_XDX 199,8515
# define DR_REG_XBX 200,8601
# define DR_REG_XSP 201,8687
# define DR_REG_XBP 202,8773
# define DR_REG_XSI 203,8859
# define DR_REG_XDI 204,8945
# define DR_REG_XAX 206,9037
# define DR_REG_XCX 207,9123
# define DR_REG_XDX 208,9209
# define DR_REG_XBX 209,9295
# define DR_REG_XSP 210,9381
# define DR_REG_XBP 211,9467
# define DR_REG_XSI 212,9553
# define DR_REG_XDI 213,9639
#define DR_REG_START_GPR 222,9883
# define DR_REG_STOP_GPR 224,9976
# define DR_REG_STOP_GPR 226,10062
#define DR_NUM_GPR_REGS 229,10185
#define DR_REG_START_64 230,10246
#define DR_REG_STOP_64 231,10338
#define DR_REG_START_32 232,10430
#define DR_REG_STOP_32 233,10522
#define DR_REG_START_16 234,10614
#define DR_REG_STOP_16 235,10706
#define DR_REG_START_8 236,10798
#define DR_REG_STOP_8 237,10889
#define DR_REG_START_8HL 238,10980
#define DR_REG_STOP_8HL 239,11072
#define DR_REG_START_x86_8 240,11164
#define DR_REG_STOP_x86_8 241,11256
#define DR_REG_START_x64_8 242,11347
#define DR_REG_STOP_x64_8 243,11439
#define DR_REG_START_MMX 244,11530
#define DR_REG_STOP_MMX 245,11611
#define DR_REG_START_XMM 246,11692
#define DR_REG_STOP_XMM 247,11773
#define DR_REG_START_YMM 248,11854
#define DR_REG_STOP_YMM 249,11935
#define DR_REG_START_FLOAT 250,12016
#define DR_REG_STOP_FLOAT 251,12108
#define DR_REG_START_SEGMENT 252,12200
#define DR_REG_STOP_SEGMENT 253,12285
#define DR_REG_START_DR 254,12370
#define DR_REG_STOP_DR 255,12453
#define DR_REG_START_CR 256,12536
#define DR_REG_STOP_CR 257,12621
#define DR_REG_LAST_VALID_ENUM 262,12807
#define DR_REG_LAST_ENUM 263,12851
#define REG_START_SPILL 265,12952
#define REG_STOP_SPILL 266,12989
#define REG_SPILL_NUM 267,13026
# define REG_NULL 276,13408
# define REG_RAX 277,13449
# define REG_RCX 278,13489
# define REG_RDX 279,13529
# define REG_RBX 280,13569
# define REG_RSP 281,13609
# define REG_RBP 282,13649
# define REG_RSI 283,13689
# define REG_RDI 284,13729
# define REG_R8 285,13769
# define REG_R9 286,13808
# define REG_R10 287,13847
# define REG_R11 288,13887
# define REG_R12 289,13927
# define REG_R13 290,13967
# define REG_R14 291,14007
# define REG_R15 292,14047
# define REG_EAX 293,14087
# define REG_ECX 294,14127
# define REG_EDX 295,14167
# define REG_EBX 296,14207
# define REG_ESP 297,14247
# define REG_EBP 298,14287
# define REG_ESI 299,14327
# define REG_EDI 300,14367
# define REG_R8D 301,14407
# define REG_R9D 302,14447
# define REG_R10D 303,14487
# define REG_R11D 304,14528
# define REG_R12D 305,14569
# define REG_R13D 306,14610
# define REG_R14D 307,14651
# define REG_R15D 308,14692
# define REG_AX 309,14733
# define REG_CX 310,14772
# define REG_DX 311,14811
# define REG_BX 312,14850
# define REG_SP 313,14889
# define REG_BP 314,14928
# define REG_SI 315,14967
# define REG_DI 316,15006
# define REG_R8W 317,15045
# define REG_R9W 318,15085
# define REG_R10W 319,15125
# define REG_R11W 320,15166
# define REG_R12W 321,15207
# define REG_R13W 322,15248
# define REG_R14W 323,15289
# define REG_R15W 324,15330
# define REG_AL 325,15371
# define REG_CL 326,15410
# define REG_DL 327,15449
# define REG_BL 328,15488
# define REG_AH 329,15527
# define REG_CH 330,15566
# define REG_DH 331,15605
# define REG_BH 332,15644
# define REG_R8L 333,15683
# define REG_R9L 334,15723
# define REG_R10L 335,15763
# define REG_R11L 336,15804
# define REG_R12L 337,15845
# define REG_R13L 338,15886
# define REG_R14L 339,15927
# define REG_R15L 340,15968
# define REG_SPL 341,16009
# define REG_BPL 342,16049
# define REG_SIL 343,16089
# define REG_DIL 344,16129
# define REG_MM0 345,16169
# define REG_MM1 346,16209
# define REG_MM2 347,16249
# define REG_MM3 348,16289
# define REG_MM4 349,16329
# define REG_MM5 350,16369
# define REG_MM6 351,16409
# define REG_MM7 352,16449
# define REG_XMM0 353,16489
# define REG_XMM1 354,16530
# define REG_XMM2 355,16571
# define REG_XMM3 356,16612
# define REG_XMM4 357,16653
# define REG_XMM5 358,16694
# define REG_XMM6 359,16735
# define REG_XMM7 360,16776
# define REG_XMM8 361,16817
# define REG_XMM9 362,16858
# define REG_XMM10 363,16899
# define REG_XMM11 364,16941
# define REG_XMM12 365,16983
# define REG_XMM13 366,17025
# define REG_XMM14 367,17067
# define REG_XMM15 368,17109
# define REG_ST0 369,17151
# define REG_ST1 370,17191
# define REG_ST2 371,17231
# define REG_ST3 372,17271
# define REG_ST4 373,17311
# define REG_ST5 374,17351
# define REG_ST6 375,17391
# define REG_ST7 376,17431
# define SEG_ES 377,17471
# define SEG_CS 378,17510
# define SEG_SS 379,17549
# define SEG_DS 380,17588
# define SEG_FS 381,17627
# define SEG_GS 382,17666
# define REG_DR0 383,17705
# define REG_DR1 384,17745
# define REG_DR2 385,17785
# define REG_DR3 386,17825
# define REG_DR4 387,17865
# define REG_DR5 388,17905
# define REG_DR6 389,17945
# define REG_DR7 390,17985
# define REG_DR8 391,18025
# define REG_DR9 392,18065
# define REG_DR10 393,18105
# define REG_DR11 394,18146
# define REG_DR12 395,18187
# define REG_DR13 396,18228
# define REG_DR14 397,18269
# define REG_DR15 398,18310
# define REG_CR0 399,18351
# define REG_CR1 400,18391
# define REG_CR2 401,18431
# define REG_CR3 402,18471
# define REG_CR4 403,18511
# define REG_CR5 404,18551
# define REG_CR6 405,18591
# define REG_CR7 406,18631
# define REG_CR8 407,18671
# define REG_CR9 408,18711
# define REG_CR10 409,18751
# define REG_CR11 410,18792
# define REG_CR12 411,18833
# define REG_CR13 412,18874
# define REG_CR14 413,18915
# define REG_CR15 414,18956
# define REG_INVALID 415,18997
# define REG_XAX 416,19041
# define REG_XCX 417,19081
# define REG_XDX 418,19121
# define REG_XBX 419,19161
# define REG_XSP 420,19201
# define REG_XBP 421,19241
# define REG_XSI 422,19281
# define REG_XDI 423,19321
# define REG_START_64 424,19361
# define REG_STOP_64 425,19406
# define REG_START_32 426,19450
# define REG_STOP_32 427,19495
# define REG_START_16 428,19539
# define REG_STOP_16 429,19584
# define REG_START_8 430,19628
# define REG_STOP_8 431,19672
# define REG_START_8HL 432,19715
# define REG_STOP_8HL 433,19761
# define REG_START_x86_8 434,19806
# define REG_STOP_x86_8 435,19854
# define REG_START_x64_8 436,19901
# define REG_STOP_x64_8 437,19949
# define REG_START_MMX 438,19996
# define REG_STOP_MMX 439,20042
# define REG_START_YMM 440,20087
# define REG_STOP_YMM 441,20133
# define REG_START_XMM 442,20178
# define REG_STOP_XMM 443,20224
# define REG_START_FLOAT 444,20269
# define REG_STOP_FLOAT 445,20317
# define REG_START_SEGMENT 446,20364
# define REG_STOP_SEGMENT 447,20414
# define REG_START_DR 448,20463
# define REG_STOP_DR 449,20508
# define REG_START_CR 450,20552
# define REG_STOP_CR 451,20597
# define REG_LAST_VALID_ENUM 452,20641
# define REG_LAST_ENUM 453,20693
# define REG_YMM0 454,20739
# define REG_YMM1 455,20780
# define REG_YMM2 456,20821
# define REG_YMM3 457,20862
# define REG_YMM4 458,20903
# define REG_YMM5 459,20944
# define REG_YMM6 460,20985
# define REG_YMM7 461,21026
# define REG_YMM8 462,21067
# define REG_YMM9 463,21108
# define REG_YMM10 464,21149
# define REG_YMM11 465,21191
# define REG_YMM12 466,21233
# define REG_YMM13 467,21275
# define REG_YMM14 468,21317
# define REG_YMM15 469,21359
# define INT8_MIN 474,21482
# define INT8_MAX 475,21512
# define INT16_MIN 476,21542
# define INT16_MAX 477,21571
# define INT32_MIN 478,21600
# define INT32_MAX 479,21628
# define REG_SPECIFIER_BITS 490,21840
# define SCALE_SPECIFIER_BITS 491,21870
struct _opnd_t 501,22344
    byte kind;502,22361
    opnd_size_t size;509,22664
        ushort far_pc_seg_selector;514,22851
        reg_id_t segment : REG_SPECIFIER_BITS;516,23003
        ushort disp;518,23155
        ushort shift;519,23207
    } seg;520,23255
        ptr_int_t immed_int;524,23353
        float immed_float;525,23409
        app_pc pc;530,23673
        instr_t *instr;instr535,23941
        reg_id_t reg;536,24026
            int disp;538,24090
            reg_id_t base_reg : REG_SPECIFIER_BITS;539,24112
            reg_id_t index_reg : REG_SPECIFIER_BITS;540,24164
            byte scale : SCALE_SPECIFIER_BITS;544,24430
            byte/*bool*/ encode_zero_disp 545,24477
            byte/*bool*/ force_full_disp 546,24524
            byte/*bool*/ disp_short_addr 547,24612
        } base_disp;548,24700
        void *addr;addr549,24753
    } value;550,24823
struct _opnd_t 555,24906
    uint black_box_uint;557,24935
    uint64 black_box_uint64;558,24960
    uint black_box_uint[black_box_uint560,24996
#define EXPECTED_SIZEOF_OPND 573,25520
    NULL_kind,580,25756
    IMMED_INTEGER_kind,581,25771
    IMMED_FLOAT_kind,582,25795
    PC_kind,583,25817
    INSTR_kind,584,25830
    REG_kind,585,25846
    BASE_DISP_kind,586,25860
    FAR_PC_kind,587,25944
    FAR_INSTR_kind,588,26013
    REL_ADDR_kind,590,26093
    ABS_ADDR_kind,591,26149
    MEM_INSTR_kind,593,26216
    LAST_kind,594,26236
    INSTR_DIRECT_EXIT 1691,58002
    INSTR_DIRECT_EXIT           = LINK_DIRECT,1691,58002
    INSTR_INDIRECT_EXIT 1692,58049
    INSTR_INDIRECT_EXIT         = LINK_INDIRECT,1692,58049
    INSTR_RETURN_EXIT 1693,58098
    INSTR_RETURN_EXIT           = LINK_RETURN,1693,58098
    INSTR_CALL_EXIT 1697,58296
    INSTR_CALL_EXIT             = LINK_CALL,1697,58296
    INSTR_JMP_EXIT 1698,58341
    INSTR_JMP_EXIT              = LINK_JMP,1698,58341
    INSTR_IND_JMP_PLT_EXIT 1699,58385
    INSTR_IND_JMP_PLT_EXIT      = (INSTR_JMP_EXIT 1699,58385
    INSTR_IND_JMP_PLT_EXIT      = (INSTR_JMP_EXIT | INSTR_CALL_EXIT)1699,58385
    INSTR_FAR_EXIT 1700,58455
    INSTR_FAR_EXIT              = LINK_FAR,1700,58455
    INSTR_BRANCH_SPECIAL_EXIT 1701,58499
    INSTR_BRANCH_SPECIAL_EXIT   = LINK_SPECIAL_EXIT,1701,58499
    INSTR_BRANCH_TARGETS_PREFIX 1703,58575
    INSTR_BRANCH_TARGETS_PREFIX = LINK_TARGET_PREFIX,1703,58575
    INSTR_TRACE_CMP_EXIT 1709,58814
    INSTR_TRACE_CMP_EXIT        = LINK_TRACE_CMP,1709,58814
    INSTR_CALLBACK_RETURN 1712,58886
    INSTR_CALLBACK_RETURN       = LINK_CALLBACK_RETURN,1712,58886
    INSTR_NI_SYSCALL_INT 1714,58948
    INSTR_NI_SYSCALL_INT        = LINK_NI_SYSCALL_INT,1714,58948
    INSTR_NI_SYSCALL 1716,59010
    INSTR_NI_SYSCALL            = LINK_NI_SYSCALL,1716,59010
    INSTR_NI_SYSCALL_ALL 1717,59061
    INSTR_NI_SYSCALL_ALL        = LINK_NI_SYSCALL_ALL,1717,59061
    EXIT_CTI_TYPES 1719,59136
    EXIT_CTI_TYPES              = (INSTR_DIRECT_EXIT 1719,59136
    EXIT_CTI_TYPES              = (INSTR_DIRECT_EXIT | INSTR_INDIRECT_EXIT 1719,59136
                                   INSTR_RETURN_EXIT 1720,59213
                                   INSTR_RETURN_EXIT | INSTR_CALL_EXIT 1720,59213
                                   INSTR_JMP_EXIT 1721,59291
                                   INSTR_FAR_EXIT 1722,59343
                                   INSTR_BRANCH_SPECIAL_EXIT 1723,59395
                                   INSTR_BRANCH_TARGETS_PREFIX 1725,59481
                                   INSTR_TRACE_CMP_EXIT 1728,59564
                                   INSTR_CALLBACK_RETURN 1731,59644
                                   INSTR_NI_SYSCALL_INT 1733,59709
                                   INSTR_NI_SYSCALL)1735,59774
    INSTR_OPERANDS_VALID 1738,59886
    INSTR_OPERANDS_VALID        = 0x00010000,x000100001738,59886
    INSTR_FIRST_NON_LINK_SHARED_FLAG 1740,59952
    INSTR_FIRST_NON_LINK_SHARED_FLAG = INSTR_OPERANDS_VALID,1740,59952
    INSTR_EFLAGS_VALID 1741,60013
    INSTR_EFLAGS_VALID          = 0x00020000,x000200001741,60013
    INSTR_EFLAGS_6_VALID 1742,60059
    INSTR_EFLAGS_6_VALID        = 0x00040000,x000400001742,60059
    INSTR_RAW_BITS_VALID 1743,60105
    INSTR_RAW_BITS_VALID        = 0x00080000,x000800001743,60105
    INSTR_RAW_BITS_ALLOCATED 1744,60151
    INSTR_RAW_BITS_ALLOCATED    = 0x00100000,x001000001744,60151
    INSTR_DO_NOT_MANGLE 1746,60223
    INSTR_DO_NOT_MANGLE         = 0x00200000,x002000001746,60223
    INSTR_HAS_CUSTOM_STUB 1748,60293
    INSTR_HAS_CUSTOM_STUB       = 0x00400000,x004000001748,60293
    INSTR_IND_CALL_DIRECT 1750,60420
    INSTR_IND_CALL_DIRECT       = 0x00800000,x008000001750,60420
    INSTR_SHARED_SYSCALL 1753,60561
    INSTR_SHARED_SYSCALL        = 0x01000000,x010000001753,60561
    INSTR_CLOBBER_RETADDR 1757,60639
    INSTR_CLOBBER_RETADDR       = 0x02000000,x020000001757,60639
    INSTR_HOT_PATCHABLE 1764,60979
    INSTR_HOT_PATCHABLE         = 0x04000000,x040000001764,60979
    INSTR_IGNORE_INVALID 1767,61111
    INSTR_IGNORE_INVALID        = 0x08000000,x080000001767,61111
    INSTR_DO_NOT_EMIT 1772,61368
    INSTR_DO_NOT_EMIT           = 0x10000000,x100000001772,61368
    INSTR_RIP_REL_VALID 1774,61491
    INSTR_RIP_REL_VALID         = 0x20000000,x200000001774,61491
    INSTR_X86_MODE 1777,61608
    INSTR_X86_MODE              = 0x40000000,x400000001777,61608
    INSTR_OUR_MANGLING 1780,61736
    INSTR_OUR_MANGLING          = 0x80000000,x800000001780,61736
typedef struct _dr_instr_label_data_t 1790,62001
    ptr_uint_t data[data1791,62041
} dr_instr_label_data_t;1792,62121
struct _instr_t 1809,62812
    uint    flags;1811,62883
    byte    *bytes;bytes1814,62973
    uint    length;1815,62993
    app_pc  translation;1818,63058
    uint    opcode;1820,63084
    byte    rip_rel_pos;1824,63203
    byte    num_dsts;1831,63443
    byte    num_srcs;1832,63465
            opnd_t    src0;1840,63771
            opnd_t    *srcs;srcs1841,63799
            opnd_t    *dsts;dsts1842,63868
        dr_instr_label_data_t label_data;1844,63908
    uint    prefixes;1847,63958
    uint    eflags;1848,64028
    void *note;note1855,64348
    instr_t   *prev;prev1858,64431
    instr_t   *next;next1859,64452
    DR_FP_STATE,3233,104512
    DR_FP_MOVE,3234,104595
    DR_FP_CONVERT,3235,104680
    DR_FP_MATH,3236,104750
} dr_fp_type_t;3237,104824
#define EFLAGS_READ_CF 3732,121887
#define EFLAGS_READ_PF 3733,121967
#define EFLAGS_READ_AF 3734,122047
#define EFLAGS_READ_ZF 3735,122127
#define EFLAGS_READ_SF 3736,122207
#define EFLAGS_READ_TF 3737,122287
#define EFLAGS_READ_IF 3738,122367
#define EFLAGS_READ_DF 3739,122447
#define EFLAGS_READ_OF 3740,122527
#define EFLAGS_READ_NT 3741,122607
#define EFLAGS_READ_RF 3742,122687
#define EFLAGS_WRITE_CF 3743,122767
#define EFLAGS_WRITE_PF 3744,122848
#define EFLAGS_WRITE_AF 3745,122929
#define EFLAGS_WRITE_ZF 3746,123010
#define EFLAGS_WRITE_SF 3747,123091
#define EFLAGS_WRITE_TF 3748,123172
#define EFLAGS_WRITE_IF 3749,123253
#define EFLAGS_WRITE_DF 3750,123334
#define EFLAGS_WRITE_OF 3751,123415
#define EFLAGS_WRITE_NT 3752,123496
#define EFLAGS_WRITE_RF 3753,123577
#define EFLAGS_READ_ALL 3755,123659
#define EFLAGS_WRITE_ALL 3756,123724
#define EFLAGS_READ_6 3759,123923
#define EFLAGS_WRITE_6 3761,124023
#define EFLAGS_WRITE_TO_READ(3764,124142
#define EFLAGS_READ_TO_WRITE(3766,124268
    EFLAGS_CF 3774,124487
    EFLAGS_CF = 0x00000001,x000000013774,124487
    EFLAGS_PF 3775,124574
    EFLAGS_PF = 0x00000004,x000000043775,124574
    EFLAGS_AF 3776,124662
    EFLAGS_AF = 0x00000010,x000000103776,124662
    EFLAGS_ZF 3777,124753
    EFLAGS_ZF = 0x00000040,x000000403777,124753
    EFLAGS_SF 3778,124839
    EFLAGS_SF = 0x00000080,x000000803778,124839
    EFLAGS_DF 3779,124925
    EFLAGS_DF = 0x00000400,x000004003779,124925
    EFLAGS_OF 3780,125016
    EFLAGS_OF = 0x00000800,x000008003780,125016
#define PC_RELATIVE_TARGET(3786,125223
    RAW_OPCODE_nop 3789,125298
    RAW_OPCODE_nop             = 0x90,x903789,125298
    RAW_OPCODE_jmp_short 3790,125337
    RAW_OPCODE_jmp_short       = 0xeb,xeb3790,125337
    RAW_OPCODE_call 3791,125376
    RAW_OPCODE_call            = 0xe8,xe83791,125376
    RAW_OPCODE_ret 3792,125415
    RAW_OPCODE_ret             = 0xc3,xc33792,125415
    RAW_OPCODE_jmp 3793,125454
    RAW_OPCODE_jmp             = 0xe9,xe93793,125454
    RAW_OPCODE_push_imm32 3794,125493
    RAW_OPCODE_push_imm32      = 0x68,x683794,125493
    RAW_OPCODE_jcc_short_start 3795,125532
    RAW_OPCODE_jcc_short_start = 0x70,x703795,125532
    RAW_OPCODE_jcc_short_end 3796,125571
    RAW_OPCODE_jcc_short_end   = 0x7f,x7f3796,125571
    RAW_OPCODE_jcc_byte1 3797,125610
    RAW_OPCODE_jcc_byte1       = 0x0f,x0f3797,125610
    RAW_OPCODE_jcc_byte2_start 3798,125649
    RAW_OPCODE_jcc_byte2_start = 0x80,x803798,125649
    RAW_OPCODE_jcc_byte2_end 3799,125688
    RAW_OPCODE_jcc_byte2_end   = 0x8f,x8f3799,125688
    RAW_OPCODE_loop_start 3800,125727
    RAW_OPCODE_loop_start      = 0xe0,xe03800,125727
    RAW_OPCODE_loop_end 3801,125766
    RAW_OPCODE_loop_end        = 0xe3,xe33801,125766
    RAW_OPCODE_lea 3802,125805
    RAW_OPCODE_lea             = 0x8d,x8d3802,125805
    RAW_PREFIX_jcc_not_taken 3803,125844
    RAW_PREFIX_jcc_not_taken   = 0x2e,x2e3803,125844
    RAW_PREFIX_jcc_taken 3804,125883
    RAW_PREFIX_jcc_taken       = 0x3e,x3e3804,125883
    RAW_PREFIX_lock 3805,125922
    RAW_PREFIX_lock            = 0xf0,xf03805,125922
    FS_SEG_OPCODE 3809,126006
    FS_SEG_OPCODE        = 0x64,x643809,126006
    GS_SEG_OPCODE 3810,126039
    GS_SEG_OPCODE        = 0x65,x653810,126039
    TLS_SEG_OPCODE 3818,126359
    TLS_SEG_OPCODE       = GS_SEG_OPCODE,3818,126359
    TLS_SEG_OPCODE 3820,126407
    TLS_SEG_OPCODE       = FS_SEG_OPCODE,3820,126407
    DATA_PREFIX_OPCODE 3823,126457
    DATA_PREFIX_OPCODE   = 0x66,x663823,126457
    ADDR_PREFIX_OPCODE 3824,126490
    ADDR_PREFIX_OPCODE   = 0x67,x673824,126490
    REPNE_PREFIX_OPCODE 3825,126523
    REPNE_PREFIX_OPCODE  = 0xf2,xf23825,126523
    REP_PREFIX_OPCODE 3826,126556
    REP_PREFIX_OPCODE    = 0xf3,xf33826,126556
    REX_PREFIX_BASE_OPCODE 3827,126589
    REX_PREFIX_BASE_OPCODE = 0x40,x403827,126589
    REX_PREFIX_W_OPFLAG 3828,126624
    REX_PREFIX_W_OPFLAG    = 0x8,x83828,126624
    REX_PREFIX_R_OPFLAG 3829,126658
    REX_PREFIX_R_OPFLAG    = 0x4,x43829,126658
    REX_PREFIX_X_OPFLAG 3830,126692
    REX_PREFIX_X_OPFLAG    = 0x2,x23830,126692
    REX_PREFIX_B_OPFLAG 3831,126726
    REX_PREFIX_B_OPFLAG    = 0x1,x13831,126726
    REX_PREFIX_ALL_OPFLAGS 3832,126760
    REX_PREFIX_ALL_OPFLAGS = 0xf,xf3832,126760
    MOV_REG2MEM_OPCODE 3833,126794
    MOV_REG2MEM_OPCODE   = 0x89,x893833,126794
    MOV_MEM2REG_OPCODE 3834,126827
    MOV_MEM2REG_OPCODE   = 0x8b,x8b3834,126827
    MOV_XAX2MEM_OPCODE 3835,126860
    MOV_XAX2MEM_OPCODE   = 0xa3,xa33835,126860
    MOV_MEM2XAX_OPCODE 3836,126908
    MOV_MEM2XAX_OPCODE   = 0xa1,xa13836,126908
    MOV_IMM2XAX_OPCODE 3837,126956
    MOV_IMM2XAX_OPCODE   = 0xb8,xb83837,126956
    MOV_IMM2XBX_OPCODE 3838,127004
    MOV_IMM2XBX_OPCODE   = 0xbb,xbb3838,127004
    MOV_IMM2MEM_OPCODE 3839,127052
    MOV_IMM2MEM_OPCODE   = 0xc7,xc73839,127052
    JECXZ_OPCODE 3840,127101
    JECXZ_OPCODE         = 0xe3,xe33840,127101
    JMP_SHORT_OPCODE 3841,127134
    JMP_SHORT_OPCODE     = 0xeb,xeb3841,127134
    JMP_OPCODE 3842,127167
    JMP_OPCODE           = 0xe9,xe93842,127167
    JNE_OPCODE_1 3843,127200
    JNE_OPCODE_1         = 0x0f,x0f3843,127200
    SAHF_OPCODE 3844,127233
    SAHF_OPCODE          = 0x9e,x9e3844,127233
    LAHF_OPCODE 3845,127266
    LAHF_OPCODE          = 0x9f,x9f3845,127266
    SETO_OPCODE_1 3846,127299
    SETO_OPCODE_1        = 0x0f,x0f3846,127299
    SETO_OPCODE_2 3847,127332
    SETO_OPCODE_2        = 0x90,x903847,127332
    ADD_AL_OPCODE 3848,127365
    ADD_AL_OPCODE        = 0x04,x043848,127365
    INC_MEM32_OPCODE_1 3849,127398
    INC_MEM32_OPCODE_1   = 0xff,xff3849,127398
    MODRM16_DISP16 3850,127452
    MODRM16_DISP16       = 0x06,x063850,127452
    SIB_DISP32 3851,127522
    SIB_DISP32           = 0x25,x253851,127522
#define CTI_SHORT_REWRITE_LENGTH 3855,127676
    NUM_REGPARM 3862,127845
    REGPARM_0 3863,127875
    REGPARM_0            = REG_RDI,3863,127875
    REGPARM_1 3864,127911
    REGPARM_1            = REG_RSI,3864,127911
    REGPARM_2 3865,127947
    REGPARM_2            = REG_RDX,3865,127947
    REGPARM_3 3866,127983
    REGPARM_3            = REG_RCX,3866,127983
    REGPARM_4 3867,128019
    REGPARM_4            = REG_R8,3867,128019
    REGPARM_5 3868,128054
    REGPARM_5            = REG_R9,3868,128054
    REGPARM_MINSTACK 3869,128089
    REDZONE_SIZE 3870,128119
    NUM_REGPARM 3873,128203
    REGPARM_0 3874,128233
    REGPARM_0            = REG_RCX,3874,128233
    REGPARM_1 3875,128269
    REGPARM_1            = REG_RDX,3875,128269
    REGPARM_2 3876,128305
    REGPARM_2            = REG_R8,3876,128305
    REGPARM_3 3877,128340
    REGPARM_3            = REG_R9,3877,128340
    REGPARM_MINSTACK 3878,128375
    REGPARM_MINSTACK     = 4*sizeof(sizeof3878,128375
    REGPARM_MINSTACK     = 4*sizeof(XSP_SZ)3878,128375
    REDZONE_SIZE 3879,128420
    REGPARM_END_ALIGN 3886,128726
    NUM_REGPARM 3888,128763
    REGPARM_MINSTACK 3889,128793
    REDZONE_SIZE 3890,128823
    REGPARM_END_ALIGN 3891,128853
    REGPARM_END_ALIGN    = sizeof(3891,128853
    REGPARM_END_ALIGN    = sizeof(XSP_SZ)3891,128853
/*   0 */     OP_INVALID,3924,129902
/*   1 */     OP_UNDECODED,3925,129964
/*   2 */     OP_CONTD,3926,130030
/*   3 */     OP_LABEL,3927,130090
/*   4 */     OP_add,3929,130151
/*   5 */     OP_or,3930,130222
/*   6 */     OP_adc,3931,130292
/*   7 */     OP_sbb,3932,130363
/*   8 */     OP_and,3933,130434
/*   9 */     OP_daa,3934,130505
/*  10 */     OP_sub,3935,130576
/*  11 */     OP_das,3936,130647
/*  12 */     OP_xor,3937,130718
/*  13 */     OP_aaa,3938,130789
/*  14 */     OP_cmp,3939,130860
/*  15 */     OP_aas,3940,130931
/*  16 */     OP_inc,3941,131002
/*  17 */     OP_dec,3942,131077
/*  18 */     OP_push,3943,131152
/*  19 */     OP_push_imm,3944,131224
/*  20 */     OP_pop,3945,131300
/*  21 */     OP_pusha,3946,131371
/*  22 */     OP_popa,3947,131444
/*  23 */     OP_bound,3948,131516
/*  24 */     OP_arpl,3949,131589
/*  25 */     OP_imul,3950,131666
/*  26 */     OP_jo_short,3952,131740
/*  27 */     OP_jno_short,3953,131820
/*  28 */     OP_jb_short,3954,131901
/*  29 */     OP_jnb_short,3955,131981
/*  30 */     OP_jz_short,3956,132062
/*  31 */     OP_jnz_short,3957,132142
/*  32 */     OP_jbe_short,3958,132223
/*  33 */     OP_jnbe_short,3959,132304
/*  34 */     OP_js_short,3960,132386
/*  35 */     OP_jns_short,3961,132466
/*  36 */     OP_jp_short,3962,132547
/*  37 */     OP_jnp_short,3963,132627
/*  38 */     OP_jl_short,3964,132708
/*  39 */     OP_jnl_short,3965,132788
/*  40 */     OP_jle_short,3966,132869
/*  41 */     OP_jnle_short,3967,132950
/*  42 */     OP_call,3969,133033
/*  43 */     OP_call_ind,3970,133111
/*  44 */     OP_call_far,3971,133194
/*  45 */     OP_call_far_ind,3972,133276
/*  46 */     OP_jmp,3973,133363
/*  47 */     OP_jmp_short,3974,133440
/*  48 */     OP_jmp_ind,3975,133523
/*  49 */     OP_jmp_far,3976,133605
/*  50 */     OP_jmp_far_ind,3977,133686
/*  51 */     OP_loopne,3979,133773
/*  52 */     OP_loope,3980,133847
/*  53 */     OP_loop,3981,133920
/*  54 */     OP_jecxz,3982,133992
/*  55 */     OP_mov_ld,3986,134204
/*  56 */     OP_mov_st,3987,134281
/*  57 */     OP_mov_imm,3990,134517
/*  58 */     OP_mov_seg,3991,134595
/*  59 */     OP_mov_priv,3992,134673
/*  60 */     OP_test,3994,134754
/*  61 */     OP_lea,3995,134826
/*  62 */     OP_xchg,3996,134897
/*  63 */     OP_cwde,3997,134969
/*  64 */     OP_cdq,3998,135041
/*  65 */     OP_fwait,3999,135112
/*  66 */     OP_pushf,4000,135185
/*  67 */     OP_popf,4001,135258
/*  68 */     OP_sahf,4002,135330
/*  69 */     OP_lahf,4003,135402
/*  70 */     OP_ret,4005,135475
/*  71 */     OP_ret_far,4006,135547
/*  72 */     OP_les,4008,135624
/*  73 */     OP_lds,4009,135706
/*  74 */     OP_enter,4010,135788
/*  75 */     OP_leave,4011,135861
/*  76 */     OP_int3,4012,135934
/*  77 */     OP_int,4013,136006
/*  78 */     OP_into,4014,136077
/*  79 */     OP_iret,4015,136149
/*  80 */     OP_aam,4016,136221
/*  81 */     OP_aad,4017,136292
/*  82 */     OP_xlat,4018,136363
/*  83 */     OP_in,4019,136435
/*  84 */     OP_out,4020,136505
/*  85 */     OP_hlt,4021,136576
/*  86 */     OP_cmc,4022,136647
/*  87 */     OP_clc,4023,136718
/*  88 */     OP_stc,4024,136789
/*  89 */     OP_cli,4025,136860
/*  90 */     OP_sti,4026,136931
/*  91 */     OP_cld,4027,137002
/*  92 */     OP_std,4028,137073
/*  93 */     OP_lar,4031,137146
/*  94 */     OP_lsl,4032,137222
/*  95 */     OP_syscall,4033,137298
/*  96 */     OP_clts,4034,137378
/*  97 */     OP_sysret,4035,137455
/*  98 */     OP_invd,4036,137534
/*  99 */     OP_wbinvd,4037,137611
/* 100 */     OP_ud2a,4038,137690
/* 101 */     OP_nop_modrm,4039,137767
/* 102 */     OP_movntps,4040,137849
/* 103 */     OP_movntpd,4041,137936
/* 104 */     OP_wrmsr,4042,138023
/* 105 */     OP_rdtsc,4043,138101
/* 106 */     OP_rdmsr,4044,138179
/* 107 */     OP_rdpmc,4045,138257
/* 108 */     OP_sysenter,4046,138335
/* 109 */     OP_sysexit,4047,138416
/* 110 */     OP_cmovo,4049,138497
/* 111 */     OP_cmovno,4050,138575
/* 112 */     OP_cmovb,4051,138654
/* 113 */     OP_cmovnb,4052,138732
/* 114 */     OP_cmovz,4053,138811
/* 115 */     OP_cmovnz,4054,138889
/* 116 */     OP_cmovbe,4055,138968
/* 117 */     OP_cmovnbe,4056,139047
/* 118 */     OP_cmovs,4057,139127
/* 119 */     OP_cmovns,4058,139205
/* 120 */     OP_cmovp,4059,139284
/* 121 */     OP_cmovnp,4060,139362
/* 122 */     OP_cmovl,4061,139441
/* 123 */     OP_cmovnl,4062,139519
/* 124 */     OP_cmovle,4063,139598
/* 125 */     OP_cmovnle,4064,139677
/* 126 */     OP_punpcklbw,4066,139758
/* 127 */     OP_punpcklwd,4067,139847
/* 128 */     OP_punpckldq,4068,139936
/* 129 */     OP_packsswb,4069,140025
/* 130 */     OP_pcmpgtb,4070,140113
/* 131 */     OP_pcmpgtw,4071,140200
/* 132 */     OP_pcmpgtd,4072,140287
/* 133 */     OP_packuswb,4073,140374
/* 134 */     OP_punpckhbw,4074,140462
/* 135 */     OP_punpckhwd,4075,140551
/* 136 */     OP_punpckhdq,4076,140640
/* 137 */     OP_packssdw,4077,140729
/* 138 */     OP_punpcklqdq,4078,140817
/* 139 */     OP_punpckhqdq,4079,140907
/* 140 */     OP_movd,4080,140997
/* 141 */     OP_movq,4081,141081
/* 142 */     OP_movdqu,4082,141166
/* 143 */     OP_movdqa,4083,141254
/* 144 */     OP_pshufw,4084,141341
/* 145 */     OP_pshufd,4085,141427
/* 146 */     OP_pshufhw,4086,141513
/* 147 */     OP_pshuflw,4087,141600
/* 148 */     OP_pcmpeqb,4088,141687
/* 149 */     OP_pcmpeqw,4089,141774
/* 150 */     OP_pcmpeqd,4090,141861
/* 151 */     OP_emms,4091,141948
/* 152 */     OP_jo,4093,142031
/* 153 */     OP_jno,4094,142102
/* 154 */     OP_jb,4095,142174
/* 155 */     OP_jnb,4096,142245
/* 156 */     OP_jz,4097,142317
/* 157 */     OP_jnz,4098,142388
/* 158 */     OP_jbe,4099,142460
/* 159 */     OP_jnbe,4100,142532
/* 160 */     OP_js,4101,142605
/* 161 */     OP_jns,4102,142676
/* 162 */     OP_jp,4103,142748
/* 163 */     OP_jnp,4104,142819
/* 164 */     OP_jl,4105,142891
/* 165 */     OP_jnl,4106,142962
/* 166 */     OP_jle,4107,143034
/* 167 */     OP_jnle,4108,143106
/* 168 */     OP_seto,4110,143180
/* 169 */     OP_setno,4111,143257
/* 170 */     OP_setb,4112,143335
/* 171 */     OP_setnb,4113,143412
/* 172 */     OP_setz,4114,143490
/* 173 */     OP_setnz,4115,143567
/* 174 */     OP_setbe,4116,143645
/* 175 */     OP_setnbe,4117,143723
/* 176 */     OP_sets,4118,143804
/* 177 */     OP_setns,4119,143881
/* 178 */     OP_setp,4120,143959
/* 179 */     OP_setnp,4121,144036
/* 180 */     OP_setl,4122,144114
/* 181 */     OP_setnl,4123,144191
/* 182 */     OP_setle,4124,144269
/* 183 */     OP_setnle,4125,144347
/* 184 */     OP_cpuid,4127,144429
/* 185 */     OP_bt,4128,144507
/* 186 */     OP_shld,4129,144582
/* 187 */     OP_rsm,4130,144659
/* 188 */     OP_bts,4131,144735
/* 189 */     OP_shrd,4132,144811
/* 190 */     OP_cmpxchg,4133,144888
/* 191 */     OP_lss,4134,144968
/* 192 */     OP_btr,4135,145044
/* 193 */     OP_lfs,4136,145120
/* 194 */     OP_lgs,4137,145196
/* 195 */     OP_movzx,4138,145272
/* 196 */     OP_ud2b,4139,145350
/* 197 */     OP_btc,4140,145427
/* 198 */     OP_bsf,4141,145503
/* 199 */     OP_bsr,4142,145579
/* 200 */     OP_movsx,4143,145663
/* 201 */     OP_xadd,4144,145741
/* 202 */     OP_movnti,4145,145818
/* 203 */     OP_pinsrw,4146,145897
/* 204 */     OP_pextrw,4147,145983
/* 205 */     OP_bswap,4148,146069
/* 206 */     OP_psrlw,4149,146147
/* 207 */     OP_psrld,4150,146232
/* 208 */     OP_psrlq,4151,146317
/* 209 */     OP_paddq,4152,146402
/* 210 */     OP_pmullw,4153,146487
/* 211 */     OP_pmovmskb,4154,146573
/* 212 */     OP_psubusb,4155,146661
/* 213 */     OP_psubusw,4156,146748
/* 214 */     OP_pminub,4157,146835
/* 215 */     OP_pand,4158,146921
/* 216 */     OP_paddusb,4159,147005
/* 217 */     OP_paddusw,4160,147092
/* 218 */     OP_pmaxub,4161,147179
/* 219 */     OP_pandn,4162,147265
/* 220 */     OP_pavgb,4163,147350
/* 221 */     OP_psraw,4164,147435
/* 222 */     OP_psrad,4165,147520
/* 223 */     OP_pavgw,4166,147605
/* 224 */     OP_pmulhuw,4167,147690
/* 225 */     OP_pmulhw,4168,147777
/* 226 */     OP_movntq,4169,147863
/* 227 */     OP_movntdq,4170,147949
/* 228 */     OP_psubsb,4171,148036
/* 229 */     OP_psubsw,4172,148122
/* 230 */     OP_pminsw,4173,148208
/* 231 */     OP_por,4174,148294
/* 232 */     OP_paddsb,4175,148377
/* 233 */     OP_paddsw,4176,148463
/* 234 */     OP_pmaxsw,4177,148549
/* 235 */     OP_pxor,4178,148635
/* 236 */     OP_psllw,4179,148719
/* 237 */     OP_pslld,4180,148804
/* 238 */     OP_psllq,4181,148889
/* 239 */     OP_pmuludq,4182,148974
/* 240 */     OP_pmaddwd,4183,149061
/* 241 */     OP_psadbw,4184,149148
/* 242 */     OP_maskmovq,4185,149234
/* 243 */     OP_maskmovdqu,4186,149322
/* 244 */     OP_psubb,4187,149412
/* 245 */     OP_psubw,4188,149497
/* 246 */     OP_psubd,4189,149582
/* 247 */     OP_psubq,4190,149667
/* 248 */     OP_paddb,4191,149752
/* 249 */     OP_paddw,4192,149837
/* 250 */     OP_paddd,4193,149922
/* 251 */     OP_psrldq,4194,150008
/* 252 */     OP_pslldq,4195,150095
/* 253 */     OP_rol,4198,150184
/* 254 */     OP_ror,4199,150261
/* 255 */     OP_rcl,4200,150338
/* 256 */     OP_rcr,4201,150415
/* 257 */     OP_shl,4202,150492
/* 258 */     OP_shr,4203,150569
/* 259 */     OP_sar,4204,150646
/* 260 */     OP_not,4205,150723
/* 261 */     OP_neg,4206,150800
/* 262 */     OP_mul,4207,150877
/* 263 */     OP_div,4208,150954
/* 264 */     OP_idiv,4209,151031
/* 265 */     OP_sldt,4210,151109
/* 266 */     OP_str,4211,151187
/* 267 */     OP_lldt,4212,151264
/* 268 */     OP_ltr,4213,151342
/* 269 */     OP_verr,4214,151419
/* 270 */     OP_verw,4215,151497
/* 271 */     OP_sgdt,4216,151575
/* 272 */     OP_sidt,4217,151656
/* 273 */     OP_lgdt,4218,151737
/* 274 */     OP_lidt,4219,151818
/* 275 */     OP_smsw,4220,151899
/* 276 */     OP_lmsw,4221,151977
/* 277 */     OP_invlpg,4222,152055
/* 278 */     OP_cmpxchg8b,4223,152138
/* 279 */     OP_fxsave32,4224,152221
/* 280 */     OP_fxrstor32,4225,152306
/* 281 */     OP_ldmxcsr,4226,152392
/* 282 */     OP_stmxcsr,4227,152477
/* 283 */     OP_lfence,4228,152562
/* 284 */     OP_mfence,4229,152645
/* 285 */     OP_clflush,4230,152728
/* 286 */     OP_sfence,4231,152812
/* 287 */     OP_prefetchnta,4232,152895
/* 288 */     OP_prefetcht0,4233,152980
/* 289 */     OP_prefetcht1,4234,153064
/* 290 */     OP_prefetcht2,4235,153148
/* 291 */     OP_prefetch,4236,153232
/* 292 */     OP_prefetchw,4237,153314
/* 293 */     OP_movups,4240,153399
/* 294 */     OP_movss,4241,153484
/* 295 */     OP_movupd,4242,153568
/* 296 */     OP_movsd,4243,153653
/* 297 */     OP_movlps,4244,153737
/* 298 */     OP_movlpd,4245,153822
/* 299 */     OP_unpcklps,4246,153907
/* 300 */     OP_unpcklpd,4247,153994
/* 301 */     OP_unpckhps,4248,154081
/* 302 */     OP_unpckhpd,4249,154168
/* 303 */     OP_movhps,4250,154255
/* 304 */     OP_movhpd,4251,154340
/* 305 */     OP_movaps,4252,154425
/* 306 */     OP_movapd,4253,154510
/* 307 */     OP_cvtpi2ps,4254,154595
/* 308 */     OP_cvtsi2ss,4255,154682
/* 309 */     OP_cvtpi2pd,4256,154769
/* 310 */     OP_cvtsi2sd,4257,154856
/* 311 */     OP_cvttps2pi,4258,154943
/* 312 */     OP_cvttss2si,4259,155031
/* 313 */     OP_cvttpd2pi,4260,155119
/* 314 */     OP_cvttsd2si,4261,155207
/* 315 */     OP_cvtps2pi,4262,155295
/* 316 */     OP_cvtss2si,4263,155382
/* 317 */     OP_cvtpd2pi,4264,155469
/* 318 */     OP_cvtsd2si,4265,155556
/* 319 */     OP_ucomiss,4266,155643
/* 320 */     OP_ucomisd,4267,155729
/* 321 */     OP_comiss,4268,155815
/* 322 */     OP_comisd,4269,155900
/* 323 */     OP_movmskps,4270,155985
/* 324 */     OP_movmskpd,4271,156072
/* 325 */     OP_sqrtps,4272,156159
/* 326 */     OP_sqrtss,4273,156244
/* 327 */     OP_sqrtpd,4274,156329
/* 328 */     OP_sqrtsd,4275,156414
/* 329 */     OP_rsqrtps,4276,156499
/* 330 */     OP_rsqrtss,4277,156585
/* 331 */     OP_rcpps,4278,156671
/* 332 */     OP_rcpss,4279,156755
/* 333 */     OP_andps,4280,156839
/* 334 */     OP_andpd,4281,156923
/* 335 */     OP_andnps,4282,157007
/* 336 */     OP_andnpd,4283,157092
/* 337 */     OP_orps,4284,157177
/* 338 */     OP_orpd,4285,157260
/* 339 */     OP_xorps,4286,157343
/* 340 */     OP_xorpd,4287,157427
/* 341 */     OP_addps,4288,157511
/* 342 */     OP_addss,4289,157595
/* 343 */     OP_addpd,4290,157679
/* 344 */     OP_addsd,4291,157763
/* 345 */     OP_mulps,4292,157847
/* 346 */     OP_mulss,4293,157931
/* 347 */     OP_mulpd,4294,158015
/* 348 */     OP_mulsd,4295,158099
/* 349 */     OP_cvtps2pd,4296,158183
/* 350 */     OP_cvtss2sd,4297,158270
/* 351 */     OP_cvtpd2ps,4298,158357
/* 352 */     OP_cvtsd2ss,4299,158444
/* 353 */     OP_cvtdq2ps,4300,158531
/* 354 */     OP_cvttps2dq,4301,158618
/* 355 */     OP_cvtps2dq,4302,158706
/* 356 */     OP_subps,4303,158793
/* 357 */     OP_subss,4304,158877
/* 358 */     OP_subpd,4305,158961
/* 359 */     OP_subsd,4306,159045
/* 360 */     OP_minps,4307,159129
/* 361 */     OP_minss,4308,159213
/* 362 */     OP_minpd,4309,159297
/* 363 */     OP_minsd,4310,159381
/* 364 */     OP_divps,4311,159465
/* 365 */     OP_divss,4312,159549
/* 366 */     OP_divpd,4313,159633
/* 367 */     OP_divsd,4314,159717
/* 368 */     OP_maxps,4315,159801
/* 369 */     OP_maxss,4316,159885
/* 370 */     OP_maxpd,4317,159969
/* 371 */     OP_maxsd,4318,160053
/* 372 */     OP_cmpps,4319,160137
/* 373 */     OP_cmpss,4320,160221
/* 374 */     OP_cmppd,4321,160305
/* 375 */     OP_cmpsd,4322,160389
/* 376 */     OP_shufps,4323,160473
/* 377 */     OP_shufpd,4324,160558
/* 378 */     OP_cvtdq2pd,4325,160643
/* 379 */     OP_cvttpd2dq,4326,160730
/* 380 */     OP_cvtpd2dq,4327,160818
/* 381 */     OP_nop,4328,160905
/* 382 */     OP_pause,4329,160985
/* 383 */     OP_ins,4331,161071
/* 384 */     OP_rep_ins,4332,161150
/* 385 */     OP_outs,4333,161233
/* 386 */     OP_rep_outs,4334,161313
/* 387 */     OP_movs,4335,161397
/* 388 */     OP_rep_movs,4336,161477
/* 389 */     OP_stos,4337,161561
/* 390 */     OP_rep_stos,4338,161641
/* 391 */     OP_lods,4339,161725
/* 392 */     OP_rep_lods,4340,161805
/* 393 */     OP_cmps,4341,161889
/* 394 */     OP_rep_cmps,4342,161971
/* 395 */     OP_repne_cmps,4343,162057
/* 396 */     OP_scas,4344,162145
/* 397 */     OP_rep_scas,4345,162227
/* 398 */     OP_repne_scas,4346,162313
/* 399 */     OP_fadd,4349,162403
/* 400 */     OP_fmul,4350,162481
/* 401 */     OP_fcom,4351,162559
/* 402 */     OP_fcomp,4352,162637
/* 403 */     OP_fsub,4353,162716
/* 404 */     OP_fsubr,4354,162794
/* 405 */     OP_fdiv,4355,162873
/* 406 */     OP_fdivr,4356,162951
/* 407 */     OP_fld,4357,163030
/* 408 */     OP_fst,4358,163107
/* 409 */     OP_fstp,4359,163184
/* 410 */     OP_fldenv,4360,163262
/* 411 */     OP_fldcw,4361,163342
/* 412 */     OP_fnstenv,4362,163421
/* 413 */     OP_fnstcw,4363,163502
/* 414 */     OP_fiadd,4364,163582
/* 415 */     OP_fimul,4365,163661
/* 416 */     OP_ficom,4366,163740
/* 417 */     OP_ficomp,4367,163819
/* 418 */     OP_fisub,4368,163899
/* 419 */     OP_fisubr,4369,163978
/* 420 */     OP_fidiv,4370,164058
/* 421 */     OP_fidivr,4371,164137
/* 422 */     OP_fild,4372,164217
/* 423 */     OP_fist,4373,164295
/* 424 */     OP_fistp,4374,164373
/* 425 */     OP_frstor,4375,164452
/* 426 */     OP_fnsave,4376,164532
/* 427 */     OP_fnstsw,4377,164612
/* 428 */     OP_fbld,4379,164693
/* 429 */     OP_fbstp,4380,164771
/* 430 */     OP_fxch,4383,164852
/* 431 */     OP_fnop,4384,164935
/* 432 */     OP_fchs,4385,165018
/* 433 */     OP_fabs,4386,165101
/* 434 */     OP_ftst,4387,165184
/* 435 */     OP_fxam,4388,165267
/* 436 */     OP_fld1,4389,165350
/* 437 */     OP_fldl2t,4390,165433
/* 438 */     OP_fldl2e,4391,165518
/* 439 */     OP_fldpi,4392,165603
/* 440 */     OP_fldlg2,4393,165687
/* 441 */     OP_fldln2,4394,165772
/* 442 */     OP_fldz,4395,165857
/* 443 */     OP_f2xm1,4396,165940
/* 444 */     OP_fyl2x,4397,166024
/* 445 */     OP_fptan,4398,166108
/* 446 */     OP_fpatan,4399,166192
/* 447 */     OP_fxtract,4400,166277
/* 448 */     OP_fprem1,4401,166363
/* 449 */     OP_fdecstp,4402,166448
/* 450 */     OP_fincstp,4403,166534
/* 451 */     OP_fprem,4404,166620
/* 452 */     OP_fyl2xp1,4405,166704
/* 453 */     OP_fsqrt,4406,166790
/* 454 */     OP_fsincos,4407,166874
/* 455 */     OP_frndint,4408,166960
/* 456 */     OP_fscale,4409,167046
/* 457 */     OP_fsin,4410,167131
/* 458 */     OP_fcos,4411,167214
/* 459 */     OP_fcmovb,4412,167297
/* 460 */     OP_fcmove,4413,167382
/* 461 */     OP_fcmovbe,4414,167467
/* 462 */     OP_fcmovu,4415,167553
/* 463 */     OP_fucompp,4416,167638
/* 464 */     OP_fcmovnb,4417,167724
/* 465 */     OP_fcmovne,4418,167810
/* 466 */     OP_fcmovnbe,4419,167896
/* 467 */     OP_fcmovnu,4420,167983
/* 468 */     OP_fnclex,4421,168069
/* 469 */     OP_fninit,4422,168154
/* 470 */     OP_fucomi,4423,168239
/* 471 */     OP_fcomi,4424,168324
/* 472 */     OP_ffree,4425,168408
/* 473 */     OP_fucom,4426,168492
/* 474 */     OP_fucomp,4427,168576
/* 475 */     OP_faddp,4428,168661
/* 476 */     OP_fmulp,4429,168745
/* 477 */     OP_fcompp,4430,168829
/* 478 */     OP_fsubrp,4431,168914
/* 479 */     OP_fsubp,4432,168999
/* 480 */     OP_fdivrp,4433,169083
/* 481 */     OP_fdivp,4434,169168
/* 482 */     OP_fucomip,4435,169252
/* 483 */     OP_fcomip,4436,169338
/* 484 */     OP_fisttp,4439,169452
/* 485 */     OP_haddpd,4440,169535
/* 486 */     OP_haddps,4441,169622
/* 487 */     OP_hsubpd,4442,169709
/* 488 */     OP_hsubps,4443,169796
/* 489 */     OP_addsubpd,4444,169883
/* 490 */     OP_addsubps,4445,169972
/* 491 */     OP_lddqu,4446,170061
/* 492 */     OP_monitor,4447,170147
/* 493 */     OP_mwait,4448,170229
/* 494 */     OP_movsldup,4449,170309
/* 495 */     OP_movshdup,4450,170397
/* 496 */     OP_movddup,4451,170485
/* 497 */     OP_femms,4454,170604
/* 498 */     OP_unknown_3dnow,4455,170684
/* 499 */     OP_pavgusb,4456,170775
/* 500 */     OP_pfadd,4457,170860
/* 501 */     OP_pfacc,4458,170943
/* 502 */     OP_pfcmpge,4459,171026
/* 503 */     OP_pfcmpgt,4460,171111
/* 504 */     OP_pfcmpeq,4461,171196
/* 505 */     OP_pfmin,4462,171281
/* 506 */     OP_pfmax,4463,171364
/* 507 */     OP_pfmul,4464,171447
/* 508 */     OP_pfrcp,4465,171530
/* 509 */     OP_pfrcpit1,4466,171614
/* 510 */     OP_pfrcpit2,4467,171701
/* 511 */     OP_pfrsqrt,4468,171788
/* 512 */     OP_pfrsqit1,4469,171874
/* 513 */     OP_pmulhrw,4470,171961
/* 514 */     OP_pfsub,4471,172047
/* 515 */     OP_pfsubr,4472,172131
/* 516 */     OP_pi2fd,4473,172216
/* 517 */     OP_pf2id,4474,172300
/* 518 */     OP_pi2fw,4475,172384
/* 519 */     OP_pf2iw,4476,172468
/* 520 */     OP_pfnacc,4477,172552
/* 521 */     OP_pfpnacc,4478,172637
/* 522 */     OP_pswapd,4479,172723
/* 523 */     OP_pshufb,4482,172825
/* 524 */     OP_phaddw,4483,172914
/* 525 */     OP_phaddd,4484,173003
/* 526 */     OP_phaddsw,4485,173092
/* 527 */     OP_pmaddubsw,4486,173182
/* 528 */     OP_phsubw,4487,173274
/* 529 */     OP_phsubd,4488,173363
/* 530 */     OP_phsubsw,4489,173452
/* 531 */     OP_psignb,4490,173542
/* 532 */     OP_psignw,4491,173631
/* 533 */     OP_psignd,4492,173720
/* 534 */     OP_pmulhrsw,4493,173809
/* 535 */     OP_pabsb,4494,173900
/* 536 */     OP_pabsw,4495,173988
/* 537 */     OP_pabsd,4496,174076
/* 538 */     OP_palignr,4497,174164
/* 539 */     OP_popcnt,4500,174335
/* 540 */     OP_movntss,4501,174424
/* 541 */     OP_movntsd,4502,174513
/* 542 */     OP_extrq,4503,174602
/* 543 */     OP_insertq,4504,174690
/* 544 */     OP_lzcnt,4505,174780
/* 545 */     OP_pblendvb,4506,174868
/* 546 */     OP_blendvps,4507,174951
/* 547 */     OP_blendvpd,4508,175034
/* 548 */     OP_ptest,4509,175117
/* 549 */     OP_pmovsxbw,4510,175200
/* 550 */     OP_pmovsxbd,4511,175286
/* 551 */     OP_pmovsxbq,4512,175372
/* 552 */     OP_pmovsxdw,4513,175458
/* 553 */     OP_pmovsxwq,4514,175544
/* 554 */     OP_pmovsxdq,4515,175630
/* 555 */     OP_pmuldq,4516,175716
/* 556 */     OP_pcmpeqq,4517,175801
/* 557 */     OP_movntdqa,4518,175887
/* 558 */     OP_packusdw,4519,175974
/* 559 */     OP_pmovzxbw,4520,176061
/* 560 */     OP_pmovzxbd,4521,176148
/* 561 */     OP_pmovzxbq,4522,176235
/* 562 */     OP_pmovzxdw,4523,176322
/* 563 */     OP_pmovzxwq,4524,176409
/* 564 */     OP_pmovzxdq,4525,176496
/* 565 */     OP_pcmpgtq,4526,176583
/* 566 */     OP_pminsb,4527,176669
/* 567 */     OP_pminsd,4528,176754
/* 568 */     OP_pminuw,4529,176839
/* 569 */     OP_pminud,4530,176924
/* 570 */     OP_pmaxsb,4531,177009
/* 571 */     OP_pmaxsd,4532,177094
/* 572 */     OP_pmaxuw,4533,177179
/* 573 */     OP_pmaxud,4534,177264
/* 574 */     OP_pmulld,4535,177349
/* 575 */     OP_phminposuw,4536,177434
/* 576 */     OP_crc32,4537,177523
/* 577 */     OP_pextrb,4538,177611
/* 578 */     OP_pextrd,4539,177696
/* 579 */     OP_extractps,4540,177781
/* 580 */     OP_roundps,4541,177869
/* 581 */     OP_roundpd,4542,177955
/* 582 */     OP_roundss,4543,178041
/* 583 */     OP_roundsd,4544,178127
/* 584 */     OP_blendps,4545,178213
/* 585 */     OP_blendpd,4546,178299
/* 586 */     OP_pblendw,4547,178385
/* 587 */     OP_pinsrb,4548,178471
/* 588 */     OP_insertps,4549,178556
/* 589 */     OP_pinsrd,4550,178643
/* 590 */     OP_dpps,4551,178728
/* 591 */     OP_dppd,4552,178811
/* 592 */     OP_mpsadbw,4553,178894
/* 593 */     OP_pcmpestrm,4554,178980
/* 594 */     OP_pcmpestri,4555,179068
/* 595 */     OP_pcmpistrm,4556,179156
/* 596 */     OP_pcmpistri,4557,179244
/* 597 */     OP_movsxd,4560,179347
/* 598 */     OP_swapgs,4561,179432
/* 599 */     OP_vmcall,4564,179530
/* 600 */     OP_vmlaunch,4565,179613
/* 601 */     OP_vmresume,4566,179698
/* 602 */     OP_vmxoff,4567,179783
/* 603 */     OP_vmptrst,4568,179866
/* 604 */     OP_vmptrld,4569,179948
/* 605 */     OP_vmxon,4570,180038
/* 606 */     OP_vmclear,4571,180126
/* 607 */     OP_vmread,4572,180216
/* 608 */     OP_vmwrite,4573,180305
/* 609 */     OP_int1,4576,180419
/* 610 */     OP_salc,4577,180497
/* 611 */     OP_ffreep,4578,180575
/* 612 */     OP_vmrun,4581,180683
/* 613 */     OP_vmmcall,4582,180765
/* 614 */     OP_vmload,4583,180849
/* 615 */     OP_vmsave,4584,180932
/* 616 */     OP_stgi,4585,181015
/* 617 */     OP_clgi,4586,181096
/* 618 */     OP_skinit,4587,181177
/* 619 */     OP_invlpga,4588,181260
/* 620 */     OP_rdtscp,4590,181381
/* 621 */     OP_invept,4593,181495
/* 622 */     OP_invvpid,4594,181576
/* 623 */     OP_pclmulqdq,4597,181693
/* 624 */     OP_aesimc,4598,181781
/* 625 */     OP_aesenc,4599,181866
/* 626 */     OP_aesenclast,4600,181951
/* 627 */     OP_aesdec,4601,182040
/* 628 */     OP_aesdeclast,4602,182125
/* 629 */     OP_aeskeygenassist,4603,182214
/* 630 */     OP_movbe,4606,182340
/* 631 */     OP_xgetbv,4609,182467
/* 632 */     OP_xsetbv,4610,182550
/* 633 */     OP_xsave32,4611,182633
/* 634 */     OP_xrstor32,4612,182718
/* 635 */     OP_xsaveopt32,4613,182804
/* 636 */     OP_vmovss,4616,182907
/* 637 */     OP_vmovsd,4617,182992
/* 638 */     OP_vmovups,4618,183077
/* 639 */     OP_vmovupd,4619,183166
/* 640 */     OP_vmovlps,4620,183255
/* 641 */     OP_vmovsldup,4621,183344
/* 642 */     OP_vmovlpd,4622,183435
/* 643 */     OP_vmovddup,4623,183524
/* 644 */     OP_vunpcklps,4624,183614
/* 645 */     OP_vunpcklpd,4625,183705
/* 646 */     OP_vunpckhps,4626,183796
/* 647 */     OP_vunpckhpd,4627,183887
/* 648 */     OP_vmovhps,4628,183978
/* 649 */     OP_vmovshdup,4629,184067
/* 650 */     OP_vmovhpd,4630,184158
/* 651 */     OP_vmovaps,4631,184247
/* 652 */     OP_vmovapd,4632,184336
/* 653 */     OP_vcvtsi2ss,4633,184425
/* 654 */     OP_vcvtsi2sd,4634,184516
/* 655 */     OP_vmovntps,4635,184607
/* 656 */     OP_vmovntpd,4636,184697
/* 657 */     OP_vcvttss2si,4637,184787
/* 658 */     OP_vcvttsd2si,4638,184879
/* 659 */     OP_vcvtss2si,4639,184971
/* 660 */     OP_vcvtsd2si,4640,185062
/* 661 */     OP_vucomiss,4641,185153
/* 662 */     OP_vucomisd,4642,185243
/* 663 */     OP_vcomiss,4643,185333
/* 664 */     OP_vcomisd,4644,185422
/* 665 */     OP_vmovmskps,4645,185511
/* 666 */     OP_vmovmskpd,4646,185602
/* 667 */     OP_vsqrtps,4647,185693
/* 668 */     OP_vsqrtss,4648,185782
/* 669 */     OP_vsqrtpd,4649,185871
/* 670 */     OP_vsqrtsd,4650,185960
/* 671 */     OP_vrsqrtps,4651,186049
/* 672 */     OP_vrsqrtss,4652,186139
/* 673 */     OP_vrcpps,4653,186229
/* 674 */     OP_vrcpss,4654,186317
/* 675 */     OP_vandps,4655,186405
/* 676 */     OP_vandpd,4656,186493
/* 677 */     OP_vandnps,4657,186581
/* 678 */     OP_vandnpd,4658,186670
/* 679 */     OP_vorps,4659,186759
/* 680 */     OP_vorpd,4660,186846
/* 681 */     OP_vxorps,4661,186933
/* 682 */     OP_vxorpd,4662,187021
/* 683 */     OP_vaddps,4663,187109
/* 684 */     OP_vaddss,4664,187197
/* 685 */     OP_vaddpd,4665,187285
/* 686 */     OP_vaddsd,4666,187373
/* 687 */     OP_vmulps,4667,187461
/* 688 */     OP_vmulss,4668,187549
/* 689 */     OP_vmulpd,4669,187637
/* 690 */     OP_vmulsd,4670,187725
/* 691 */     OP_vcvtps2pd,4671,187813
/* 692 */     OP_vcvtss2sd,4672,187904
/* 693 */     OP_vcvtpd2ps,4673,187995
/* 694 */     OP_vcvtsd2ss,4674,188086
/* 695 */     OP_vcvtdq2ps,4675,188177
/* 696 */     OP_vcvttps2dq,4676,188268
/* 697 */     OP_vcvtps2dq,4677,188360
/* 698 */     OP_vsubps,4678,188451
/* 699 */     OP_vsubss,4679,188539
/* 700 */     OP_vsubpd,4680,188627
/* 701 */     OP_vsubsd,4681,188715
/* 702 */     OP_vminps,4682,188803
/* 703 */     OP_vminss,4683,188891
/* 704 */     OP_vminpd,4684,188979
/* 705 */     OP_vminsd,4685,189067
/* 706 */     OP_vdivps,4686,189155
/* 707 */     OP_vdivss,4687,189243
/* 708 */     OP_vdivpd,4688,189331
/* 709 */     OP_vdivsd,4689,189419
/* 710 */     OP_vmaxps,4690,189507
/* 711 */     OP_vmaxss,4691,189595
/* 712 */     OP_vmaxpd,4692,189683
/* 713 */     OP_vmaxsd,4693,189771
/* 714 */     OP_vpunpcklbw,4694,189859
/* 715 */     OP_vpunpcklwd,4695,189951
/* 716 */     OP_vpunpckldq,4696,190043
/* 717 */     OP_vpacksswb,4697,190135
/* 718 */     OP_vpcmpgtb,4698,190226
/* 719 */     OP_vpcmpgtw,4699,190316
/* 720 */     OP_vpcmpgtd,4700,190406
/* 721 */     OP_vpackuswb,4701,190496
/* 722 */     OP_vpunpckhbw,4702,190587
/* 723 */     OP_vpunpckhwd,4703,190679
/* 724 */     OP_vpunpckhdq,4704,190771
/* 725 */     OP_vpackssdw,4705,190863
/* 726 */     OP_vpunpcklqdq,4706,190954
/* 727 */     OP_vpunpckhqdq,4707,191047
/* 728 */     OP_vmovd,4708,191140
/* 729 */     OP_vpshufhw,4709,191227
/* 730 */     OP_vpshufd,4710,191317
/* 731 */     OP_vpshuflw,4711,191406
/* 732 */     OP_vpcmpeqb,4712,191496
/* 733 */     OP_vpcmpeqw,4713,191586
/* 734 */     OP_vpcmpeqd,4714,191676
/* 735 */     OP_vmovq,4715,191766
/* 736 */     OP_vcmpps,4716,191853
/* 737 */     OP_vcmpss,4717,191941
/* 738 */     OP_vcmppd,4718,192029
/* 739 */     OP_vcmpsd,4719,192117
/* 740 */     OP_vpinsrw,4720,192205
/* 741 */     OP_vpextrw,4721,192294
/* 742 */     OP_vshufps,4722,192383
/* 743 */     OP_vshufpd,4723,192472
/* 744 */     OP_vpsrlw,4724,192561
/* 745 */     OP_vpsrld,4725,192649
/* 746 */     OP_vpsrlq,4726,192737
/* 747 */     OP_vpaddq,4727,192825
/* 748 */     OP_vpmullw,4728,192913
/* 749 */     OP_vpmovmskb,4729,193002
/* 750 */     OP_vpsubusb,4730,193093
/* 751 */     OP_vpsubusw,4731,193183
/* 752 */     OP_vpminub,4732,193273
/* 753 */     OP_vpand,4733,193362
/* 754 */     OP_vpaddusb,4734,193449
/* 755 */     OP_vpaddusw,4735,193539
/* 756 */     OP_vpmaxub,4736,193629
/* 757 */     OP_vpandn,4737,193718
/* 758 */     OP_vpavgb,4738,193806
/* 759 */     OP_vpsraw,4739,193894
/* 760 */     OP_vpsrad,4740,193982
/* 761 */     OP_vpavgw,4741,194070
/* 762 */     OP_vpmulhuw,4742,194158
/* 763 */     OP_vpmulhw,4743,194248
/* 764 */     OP_vcvtdq2pd,4744,194337
/* 765 */     OP_vcvttpd2dq,4745,194428
/* 766 */     OP_vcvtpd2dq,4746,194520
/* 767 */     OP_vmovntdq,4747,194611
/* 768 */     OP_vpsubsb,4748,194701
/* 769 */     OP_vpsubsw,4749,194790
/* 770 */     OP_vpminsw,4750,194879
/* 771 */     OP_vpor,4751,194968
/* 772 */     OP_vpaddsb,4752,195054
/* 773 */     OP_vpaddsw,4753,195143
/* 774 */     OP_vpmaxsw,4754,195232
/* 775 */     OP_vpxor,4755,195321
/* 776 */     OP_vpsllw,4756,195408
/* 777 */     OP_vpslld,4757,195496
/* 778 */     OP_vpsllq,4758,195584
/* 779 */     OP_vpmuludq,4759,195672
/* 780 */     OP_vpmaddwd,4760,195762
/* 781 */     OP_vpsadbw,4761,195852
/* 782 */     OP_vmaskmovdqu,4762,195941
/* 783 */     OP_vpsubb,4763,196034
/* 784 */     OP_vpsubw,4764,196122
/* 785 */     OP_vpsubd,4765,196210
/* 786 */     OP_vpsubq,4766,196298
/* 787 */     OP_vpaddb,4767,196386
/* 788 */     OP_vpaddw,4768,196474
/* 789 */     OP_vpaddd,4769,196562
/* 790 */     OP_vpsrldq,4770,196651
/* 791 */     OP_vpslldq,4771,196741
/* 792 */     OP_vmovdqu,4772,196831
/* 793 */     OP_vmovdqa,4773,196921
/* 794 */     OP_vhaddpd,4774,197011
/* 795 */     OP_vhaddps,4775,197101
/* 796 */     OP_vhsubpd,4776,197191
/* 797 */     OP_vhsubps,4777,197281
/* 798 */     OP_vaddsubpd,4778,197371
/* 799 */     OP_vaddsubps,4779,197463
/* 800 */     OP_vlddqu,4780,197555
/* 801 */     OP_vpshufb,4781,197644
/* 802 */     OP_vphaddw,4782,197734
/* 803 */     OP_vphaddd,4783,197824
/* 804 */     OP_vphaddsw,4784,197914
/* 805 */     OP_vpmaddubsw,4785,198005
/* 806 */     OP_vphsubw,4786,198098
/* 807 */     OP_vphsubd,4787,198188
/* 808 */     OP_vphsubsw,4788,198278
/* 809 */     OP_vpsignb,4789,198369
/* 810 */     OP_vpsignw,4790,198459
/* 811 */     OP_vpsignd,4791,198549
/* 812 */     OP_vpmulhrsw,4792,198639
/* 813 */     OP_vpabsb,4793,198731
/* 814 */     OP_vpabsw,4794,198820
/* 815 */     OP_vpabsd,4795,198909
/* 816 */     OP_vpalignr,4796,198998
/* 817 */     OP_vpblendvb,4797,199089
/* 818 */     OP_vblendvps,4798,199177
/* 819 */     OP_vblendvpd,4799,199265
/* 820 */     OP_vptest,4800,199353
/* 821 */     OP_vpmovsxbw,4801,199438
/* 822 */     OP_vpmovsxbd,4802,199526
/* 823 */     OP_vpmovsxbq,4803,199614
/* 824 */     OP_vpmovsxdw,4804,199702
/* 825 */     OP_vpmovsxwq,4805,199790
/* 826 */     OP_vpmovsxdq,4806,199878
/* 827 */     OP_vpmuldq,4807,199966
/* 828 */     OP_vpcmpeqq,4808,200052
/* 829 */     OP_vmovntdqa,4809,200139
/* 830 */     OP_vpackusdw,4810,200227
/* 831 */     OP_vpmovzxbw,4811,200315
/* 832 */     OP_vpmovzxbd,4812,200403
/* 833 */     OP_vpmovzxbq,4813,200491
/* 834 */     OP_vpmovzxdw,4814,200579
/* 835 */     OP_vpmovzxwq,4815,200667
/* 836 */     OP_vpmovzxdq,4816,200755
/* 837 */     OP_vpcmpgtq,4817,200843
/* 838 */     OP_vpminsb,4818,200930
/* 839 */     OP_vpminsd,4819,201016
/* 840 */     OP_vpminuw,4820,201102
/* 841 */     OP_vpminud,4821,201188
/* 842 */     OP_vpmaxsb,4822,201274
/* 843 */     OP_vpmaxsd,4823,201360
/* 844 */     OP_vpmaxuw,4824,201446
/* 845 */     OP_vpmaxud,4825,201532
/* 846 */     OP_vpmulld,4826,201618
/* 847 */     OP_vphminposuw,4827,201704
/* 848 */     OP_vaesimc,4828,201794
/* 849 */     OP_vaesenc,4829,201880
/* 850 */     OP_vaesenclast,4830,201966
/* 851 */     OP_vaesdec,4831,202056
/* 852 */     OP_vaesdeclast,4832,202142
/* 853 */     OP_vpextrb,4833,202232
/* 854 */     OP_vpextrd,4834,202318
/* 855 */     OP_vextractps,4835,202404
/* 856 */     OP_vroundps,4836,202493
/* 857 */     OP_vroundpd,4837,202580
/* 858 */     OP_vroundss,4838,202667
/* 859 */     OP_vroundsd,4839,202754
/* 860 */     OP_vblendps,4840,202841
/* 861 */     OP_vblendpd,4841,202928
/* 862 */     OP_vpblendw,4842,203015
/* 863 */     OP_vpinsrb,4843,203102
/* 864 */     OP_vinsertps,4844,203188
/* 865 */     OP_vpinsrd,4845,203276
/* 866 */     OP_vdpps,4846,203362
/* 867 */     OP_vdppd,4847,203446
/* 868 */     OP_vmpsadbw,4848,203530
/* 869 */     OP_vpcmpestrm,4849,203617
/* 870 */     OP_vpcmpestri,4850,203706
/* 871 */     OP_vpcmpistrm,4851,203795
/* 872 */     OP_vpcmpistri,4852,203884
/* 873 */     OP_vpclmulqdq,4853,203973
/* 874 */     OP_vaeskeygenassist,4854,204062
/* 875 */     OP_vtestps,4855,204159
/* 876 */     OP_vtestpd,4856,204245
/* 877 */     OP_vzeroupper,4857,204331
/* 878 */     OP_vzeroall,4858,204421
/* 879 */     OP_vldmxcsr,4859,204509
/* 880 */     OP_vstmxcsr,4860,204596
/* 881 */     OP_vbroadcastss,4861,204683
/* 882 */     OP_vbroadcastsd,4862,204774
/* 883 */     OP_vbroadcastf128,4863,204866
/* 884 */     OP_vmaskmovps,4864,204960
/* 885 */     OP_vmaskmovpd,4865,205049
/* 886 */     OP_vpermilps,4866,205138
/* 887 */     OP_vpermilpd,4867,205226
/* 888 */     OP_vperm2f128,4868,205314
/* 889 */     OP_vinsertf128,4869,205403
/* 890 */     OP_vextractf128,4870,205493
/* 891 */     OP_vcvtph2ps,4871,205585
/* 892 */     OP_vcvtps2ph,4872,205673
/* 893 */     OP_vfmadd132ps,4875,205776
/* 894 */     OP_vfmadd132pd,4876,205868
/* 895 */     OP_vfmadd213ps,4877,205960
/* 896 */     OP_vfmadd213pd,4878,206052
/* 897 */     OP_vfmadd231ps,4879,206144
/* 898 */     OP_vfmadd231pd,4880,206236
/* 899 */     OP_vfmadd132ss,4881,206328
/* 900 */     OP_vfmadd132sd,4882,206420
/* 901 */     OP_vfmadd213ss,4883,206512
/* 902 */     OP_vfmadd213sd,4884,206604
/* 903 */     OP_vfmadd231ss,4885,206696
/* 904 */     OP_vfmadd231sd,4886,206788
/* 905 */     OP_vfmaddsub132ps,4887,206880
/* 906 */     OP_vfmaddsub132pd,4888,206975
/* 907 */     OP_vfmaddsub213ps,4889,207070
/* 908 */     OP_vfmaddsub213pd,4890,207165
/* 909 */     OP_vfmaddsub231ps,4891,207260
/* 910 */     OP_vfmaddsub231pd,4892,207355
/* 911 */     OP_vfmsubadd132ps,4893,207450
/* 912 */     OP_vfmsubadd132pd,4894,207545
/* 913 */     OP_vfmsubadd213ps,4895,207640
/* 914 */     OP_vfmsubadd213pd,4896,207735
/* 915 */     OP_vfmsubadd231ps,4897,207830
/* 916 */     OP_vfmsubadd231pd,4898,207925
/* 917 */     OP_vfmsub132ps,4899,208020
/* 918 */     OP_vfmsub132pd,4900,208112
/* 919 */     OP_vfmsub213ps,4901,208204
/* 920 */     OP_vfmsub213pd,4902,208296
/* 921 */     OP_vfmsub231ps,4903,208388
/* 922 */     OP_vfmsub231pd,4904,208480
/* 923 */     OP_vfmsub132ss,4905,208572
/* 924 */     OP_vfmsub132sd,4906,208664
/* 925 */     OP_vfmsub213ss,4907,208756
/* 926 */     OP_vfmsub213sd,4908,208848
/* 927 */     OP_vfmsub231ss,4909,208940
/* 928 */     OP_vfmsub231sd,4910,209032
/* 929 */     OP_vfnmadd132ps,4911,209124
/* 930 */     OP_vfnmadd132pd,4912,209217
/* 931 */     OP_vfnmadd213ps,4913,209310
/* 932 */     OP_vfnmadd213pd,4914,209403
/* 933 */     OP_vfnmadd231ps,4915,209496
/* 934 */     OP_vfnmadd231pd,4916,209589
/* 935 */     OP_vfnmadd132ss,4917,209682
/* 936 */     OP_vfnmadd132sd,4918,209775
/* 937 */     OP_vfnmadd213ss,4919,209868
/* 938 */     OP_vfnmadd213sd,4920,209961
/* 939 */     OP_vfnmadd231ss,4921,210054
/* 940 */     OP_vfnmadd231sd,4922,210147
/* 941 */     OP_vfnmsub132ps,4923,210240
/* 942 */     OP_vfnmsub132pd,4924,210333
/* 943 */     OP_vfnmsub213ps,4925,210426
/* 944 */     OP_vfnmsub213pd,4926,210519
/* 945 */     OP_vfnmsub231ps,4927,210612
/* 946 */     OP_vfnmsub231pd,4928,210705
/* 947 */     OP_vfnmsub132ss,4929,210798
/* 948 */     OP_vfnmsub132sd,4930,210891
/* 949 */     OP_vfnmsub213ss,4931,210984
/* 950 */     OP_vfnmsub213sd,4932,211077
/* 951 */     OP_vfnmsub231ss,4933,211170
/* 952 */     OP_vfnmsub231sd,4934,211263
/* 953 */     OP_movq2dq,4936,211357
/* 954 */     OP_movdq2q,4937,211446
/* 955 */     OP_fxsave64,4939,211536
/* 956 */     OP_fxrstor64,4940,211624
/* 957 */     OP_xsave64,4941,211713
/* 958 */     OP_xrstor64,4942,211800
/* 959 */     OP_xsaveopt64,4943,211888
/* 960 */     OP_jmpe,4947,212080
/* 961 */     OP_jmpe_abs,4948,212155
    OP_AFTER_LAST,4951,212242
    OP_FIRST 4952,212261
    OP_FIRST = OP_add,4952,212261
    OP_LAST 4953,212322
    OP_LAST  = OP_AFTER_LAST 4953,212322
#define OP_LAST 4958,212471
#define OP_cbw 4967,212734
#define OP_cwd 4968,212816
#define OP_jcxz 4969,212897
#define OP_jrcxz 4971,213028
#define OP_cmpxchg16b 4972,213115
#define OP_pextrq 4973,213202
#define OP_pinsrq 4974,213289
#define OP_movhlps 4976,213417
#define OP_movlhps 4977,213502
#define OP_jae_short 4979,213609
#define OP_jnae_short 4980,213678
#define OP_ja_short 4981,213747
#define OP_jna_short 4982,213816
#define OP_je_short 4983,213885
#define OP_jne_short 4984,213954
#define OP_jge_short 4985,214023
#define OP_jg_short 4986,214092
#define OP_jae 4987,214161
#define OP_jnae 4988,214224
#define OP_ja 4989,214287
#define OP_jna 4990,214350
#define OP_je 4991,214413
#define OP_jne 4992,214476
#define OP_jge 4993,214539
#define OP_jg 4994,214602
#define OP_setae 4995,214665
#define OP_setnae 4996,214728
#define OP_seta 4997,214791
#define OP_setna 4998,214854
#define OP_sete 4999,214917
#define OP_setne 5000,214980
#define OP_setge 5001,215043
#define OP_setg 5002,215106
#define OP_cmovae 5003,215169
#define OP_cmovnae 5004,215232
#define OP_cmova 5005,215295
#define OP_cmovna 5006,215358
#define OP_cmove 5007,215421
#define OP_cmovne 5008,215484
#define OP_cmovge 5009,215547
#define OP_cmovg 5010,215610
# define OP_fxsave 5012,215685
# define OP_fxrstor 5013,215753
# define OP_xsave 5014,215821
# define OP_xrstor 5015,215889
# define OP_xsaveopt 5016,215957
#define OP_icebp 5019,216059
#define OP_setalc 5020,216084

x86/instr_create.h,40259
#define _INSTR_CREATE_H_ 38,1892
#define LOCK(71,2995
#define INSTR_XL8(76,3211
#define OPND_CREATE_MEM64(80,3392
#define OPND_CREATE_MEM32(83,3542
#define OPND_CREATE_MEM16(86,3692
#define OPND_CREATE_MEM8(89,3842
# define OPND_CREATE_MEMPTR 93,4009
# define OPND_CREATE_ABSMEM(98,4199
# define OPND_CREATE_MEMPTR 102,4331
# define OPND_CREATE_ABSMEM(104,4420
#define OPND_CREATE_INT64(110,4568
# define OPND_CREATE_INTPTR 112,4704
# define OPND_CREATE_INTPTR 115,4813
#define OPND_CREATE_INT32(118,4916
#define OPND_CREATE_INT16(120,5045
#define OPND_CREATE_INT8(122,5174
#define OPND_CREATE_INT_32OR8(127,5374
#define OPND_CREATE_INT_16OR8(133,5638
#define OPND_CREATE_MEM_lea(139,5926
#define OPND_CREATE_MEM_invlpg(142,6120
#define OPND_CREATE_MEM_clflush(145,6321
#define OPND_CREATE_MEM_prefetch(148,6526
#define OPND_CREATE_MEM_lgdt(151,6728
#define OPND_CREATE_MEM_sgdt(154,6922
#define OPND_CREATE_MEM_lidt(157,7116
#define OPND_CREATE_MEM_sidt(160,7310
#define OPND_CREATE_MEM_bound(163,7505
#define OPND_CREATE_MEM_fldenv(166,7703
#define OPND_CREATE_MEM_fnstenv(169,7904
#define OPND_CREATE_MEM_fnsave(172,8106
#define OPND_CREATE_MEM_frstor(175,8306
#define OPND_CREATE_MEM_fxsave(178,8520
#define OPND_CREATE_MEM_fxrstor(181,8735
#define OPND_CREATE_MEM_xsave(187,9016
#define INSTR_CREATE_fwait(213,10181
#define INSTR_CREATE_hlt(214,10254
#define INSTR_CREATE_cmc(215,10325
#define INSTR_CREATE_clc(216,10396
#define INSTR_CREATE_stc(217,10467
#define INSTR_CREATE_cli(218,10538
#define INSTR_CREATE_sti(219,10609
#define INSTR_CREATE_cld(220,10680
#define INSTR_CREATE_std(221,10751
#define INSTR_CREATE_clts(222,10822
#define INSTR_CREATE_invd(223,10894
#define INSTR_CREATE_wbinvd(224,10966
#define INSTR_CREATE_ud2a(225,11040
#define INSTR_CREATE_emms(226,11112
#define INSTR_CREATE_rsm(227,11184
#define INSTR_CREATE_ud2b(228,11255
#define INSTR_CREATE_lfence(229,11327
#define INSTR_CREATE_mfence(230,11401
#define INSTR_CREATE_sfence(231,11475
#define INSTR_CREATE_nop(232,11549
#define INSTR_CREATE_pause(233,11620
#define INSTR_CREATE_fnop(234,11693
#define INSTR_CREATE_fdecstp(235,11765
#define INSTR_CREATE_fincstp(236,11840
#define INSTR_CREATE_fnclex(237,11915
#define INSTR_CREATE_fninit(238,11989
#define INSTR_CREATE_sysret(239,12063
#define INSTR_CREATE_femms(240,12137
#define INSTR_CREATE_swapgs(241,12210
#define INSTR_CREATE_vmcall(242,12284
#define INSTR_CREATE_vmlaunch(243,12358
#define INSTR_CREATE_vmresume(244,12434
#define INSTR_CREATE_vmxoff(245,12510
#define INSTR_CREATE_vmmcall(246,12584
#define INSTR_CREATE_stgi(247,12659
#define INSTR_CREATE_clgi(248,12731
#define INSTR_CREATE_int3(249,12803
#define INSTR_CREATE_into(250,12871
#define INSTR_CREATE_int1(251,12939
#define INSTR_CREATE_vzeroupper(252,13007
#define INSTR_CREATE_vzeroall(253,13087
#define INSTR_CREATE_label(261,13469
#define INSTR_CREATE_jcc_short(276,14235
#define INSTR_CREATE_jcc(287,14759
#define INSTR_CREATE_jmp(298,15342
#define INSTR_CREATE_jmp_short(300,15420
#define INSTR_CREATE_jmp_ind(310,15912
#define INSTR_CREATE_jmp_far(319,16362
#define INSTR_CREATE_jmp_far_ind(328,16825
#define INSTR_CREATE_lldt(338,17341
#define INSTR_CREATE_ltr(340,17421
#define INSTR_CREATE_verr(342,17499
#define INSTR_CREATE_verw(344,17579
#define INSTR_CREATE_vmptrld(346,17659
#define INSTR_CREATE_vmxon(348,17745
#define INSTR_CREATE_lgdt(357,18218
#define INSTR_CREATE_lidt(366,18689
#define INSTR_CREATE_lmsw(368,18769
#define INSTR_CREATE_invlpg(377,19242
#define INSTR_CREATE_fxrstor32(386,19720
#define INSTR_CREATE_fxrstor64(395,20204
#define INSTR_CREATE_ldmxcsr(397,20294
#define INSTR_CREATE_vldmxcsr(399,20380
#define INSTR_CREATE_nop_modrm(401,20468
#define INSTR_CREATE_prefetchnta(413,21095
#define INSTR_CREATE_prefetcht0(415,21189
#define INSTR_CREATE_prefetcht1(417,21281
#define INSTR_CREATE_prefetcht2(419,21373
#define INSTR_CREATE_prefetch(421,21465
#define INSTR_CREATE_prefetchw(423,21553
#define INSTR_CREATE_clflush(433,22070
#define INSTR_CREATE_int(442,22530
#define INSTR_CREATE_jmpe(448,22656
#define INSTR_CREATE_jmpe_abs(450,22736
#define INSTR_CREATE_fldenv(462,23251
#define INSTR_CREATE_fldcw(471,23736
#define INSTR_CREATE_frstor(480,24216
#define INSTR_CREATE_fxam(491,24663
#define INSTR_CREATE_sahf(493,24764
#define INSTR_CREATE_vmrun(495,24864
#define INSTR_CREATE_vmload(497,24967
#define INSTR_CREATE_vmsave(499,25072
#define INSTR_CREATE_skinit(501,25177
#define INSTR_CREATE_cmp(515,25859
#define INSTR_CREATE_test(517,25949
#define INSTR_CREATE_ptest(519,26041
#define INSTR_CREATE_vucomiss(522,26145
#define INSTR_CREATE_vucomisd(524,26245
#define INSTR_CREATE_vcomiss(526,26345
#define INSTR_CREATE_vcomisd(528,26443
#define INSTR_CREATE_vptest(530,26541
#define INSTR_CREATE_vtestps(532,26637
#define INSTR_CREATE_vtestpd(534,26735
#define INSTR_CREATE_bound(544,27290
#define INSTR_CREATE_bt(554,27809
#define INSTR_CREATE_ucomiss(556,27895
#define INSTR_CREATE_ucomisd(558,27993
#define INSTR_CREATE_comiss(560,28091
#define INSTR_CREATE_comisd(562,28187
#define INSTR_CREATE_invept(564,28283
#define INSTR_CREATE_invvpid(566,28379
#define INSTR_CREATE_jecxz(578,28932
#define INSTR_CREATE_jcxz(587,29381
#define INSTR_CREATE_out_1(598,29863
#define INSTR_CREATE_out_4(601,29997
#define INSTR_CREATE_out_1_imm(614,30668
#define INSTR_CREATE_out_4_imm(616,30780
#define INSTR_CREATE_mwait(628,31305
#define INSTR_CREATE_invlpga(631,31445
#define INSTR_CREATE_wrmsr(635,31630
#define INSTR_CREATE_monitor(638,31797
#define INSTR_CREATE_xsetbv(641,31970
#define INSTR_CREATE_xrstor32(655,32671
#define INSTR_CREATE_xrstor64(665,33183
#define INSTR_CREATE_fcom(683,34074
#define INSTR_CREATE_fcomp(685,34183
#define INSTR_CREATE_fcomi(698,34887
#define INSTR_CREATE_fcomip(700,34998
#define INSTR_CREATE_fucomi(702,35111
#define INSTR_CREATE_fucomip(704,35224
#define INSTR_CREATE_fucom(706,35339
#define INSTR_CREATE_fucomp(708,35450
#define INSTR_CREATE_fucompp(718,35938
#define INSTR_CREATE_fcompp(721,36080
#define INSTR_CREATE_setcc(735,36643
#define INSTR_CREATE_sldt(745,37167
#define INSTR_CREATE_str(747,37247
#define INSTR_CREATE_vmptrst(749,37325
#define INSTR_CREATE_vmclear(751,37411
#define INSTR_CREATE_sgdt(760,37893
#define INSTR_CREATE_sidt(769,38369
#define INSTR_CREATE_smsw(771,38449
#define INSTR_CREATE_fxsave32(780,38927
#define INSTR_CREATE_fxsave64(789,39413
#define INSTR_CREATE_stmxcsr(791,39501
#define INSTR_CREATE_vstmxcsr(793,39587
#define INSTR_CREATE_fnstenv(814,40669
#define INSTR_CREATE_fnstcw(816,40755
#define INSTR_CREATE_fnsave(825,41237
#define INSTR_CREATE_fnstsw(827,41321
#define INSTR_CREATE_ffree(838,41810
#define INSTR_CREATE_ffreep(840,41892
#define INSTR_CREATE_lahf(851,42355
#define INSTR_CREATE_sysenter(853,42455
#define INSTR_CREATE_sysexit(855,42564
#define INSTR_CREATE_syscall(857,42671
#define INSTR_CREATE_salc(859,42778
#define INSTR_CREATE_arpl(873,43441
#define INSTR_CREATE_lea(883,43992
#define INSTR_CREATE_mov_ld(885,44078
#define INSTR_CREATE_mov_st(887,44170
#define INSTR_CREATE_mov_imm(889,44262
#define INSTR_CREATE_mov_seg(891,44356
#define INSTR_CREATE_mov_priv(893,44450
#define INSTR_CREATE_lar(895,44546
#define INSTR_CREATE_lsl(897,44632
#define INSTR_CREATE_movntps(899,44718
#define INSTR_CREATE_movntpd(901,44812
#define INSTR_CREATE_movd(903,44906
#define INSTR_CREATE_movq(905,44994
#define INSTR_CREATE_movdqu(907,45082
#define INSTR_CREATE_movdqa(909,45174
#define INSTR_CREATE_movzx(911,45266
#define INSTR_CREATE_movsx(913,45356
#define INSTR_CREATE_bsf(915,45446
#define INSTR_CREATE_bsr(917,45532
#define INSTR_CREATE_pmovmskb(919,45618
#define INSTR_CREATE_movups(921,45714
#define INSTR_CREATE_movss(923,45806
#define INSTR_CREATE_movupd(925,45896
#define INSTR_CREATE_movsd(927,45988
#define INSTR_CREATE_movlps(929,46078
#define INSTR_CREATE_movlpd(931,46170
#define INSTR_CREATE_movhps(933,46262
#define INSTR_CREATE_movhpd(935,46354
#define INSTR_CREATE_movaps(937,46446
#define INSTR_CREATE_movapd(939,46538
#define INSTR_CREATE_cvtpi2ps(941,46630
#define INSTR_CREATE_cvtsi2ss(943,46726
#define INSTR_CREATE_cvtpi2pd(945,46822
#define INSTR_CREATE_cvtsi2sd(947,46918
#define INSTR_CREATE_cvttps2pi(949,47014
#define INSTR_CREATE_cvttss2si(951,47112
#define INSTR_CREATE_cvttpd2pi(953,47210
#define INSTR_CREATE_cvttsd2si(955,47308
#define INSTR_CREATE_cvtps2pi(957,47406
#define INSTR_CREATE_cvtss2si(959,47502
#define INSTR_CREATE_cvtpd2pi(961,47598
#define INSTR_CREATE_cvtsd2si(963,47694
#define INSTR_CREATE_cvtps2pd(965,47790
#define INSTR_CREATE_cvtss2sd(967,47886
#define INSTR_CREATE_cvtpd2ps(969,47982
#define INSTR_CREATE_cvtsd2ss(971,48078
#define INSTR_CREATE_cvtdq2ps(973,48174
#define INSTR_CREATE_cvttps2dq(975,48270
#define INSTR_CREATE_cvtps2dq(977,48368
#define INSTR_CREATE_cvtdq2pd(979,48464
#define INSTR_CREATE_cvttpd2dq(981,48560
#define INSTR_CREATE_cvtpd2dq(983,48658
#define INSTR_CREATE_movmskps(985,48754
#define INSTR_CREATE_movmskpd(987,48850
#define INSTR_CREATE_sqrtps(989,48946
#define INSTR_CREATE_sqrtss(991,49038
#define INSTR_CREATE_sqrtpd(993,49130
#define INSTR_CREATE_sqrtsd(995,49222
#define INSTR_CREATE_rsqrtps(997,49314
#define INSTR_CREATE_rsqrtss(999,49408
#define INSTR_CREATE_rcpps(1001,49502
#define INSTR_CREATE_rcpss(1003,49592
#define INSTR_CREATE_lddqu(1005,49682
#define INSTR_CREATE_movsldup(1007,49772
#define INSTR_CREATE_movshdup(1009,49868
#define INSTR_CREATE_movddup(1011,49964
#define INSTR_CREATE_pshufb(1013,50058
#define INSTR_CREATE_popcnt(1015,50150
#define INSTR_CREATE_movntss(1017,50242
#define INSTR_CREATE_movntsd(1019,50336
#define INSTR_CREATE_movntq(1021,50430
#define INSTR_CREATE_movntdq(1023,50522
#define INSTR_CREATE_movnti(1025,50616
#define INSTR_CREATE_lzcnt(1027,50708
#define INSTR_CREATE_pmovsxbw(1029,50798
#define INSTR_CREATE_pmovsxbd(1031,50894
#define INSTR_CREATE_pmovsxbq(1033,50990
#define INSTR_CREATE_pmovsxdw(1035,51086
#define INSTR_CREATE_pmovsxwq(1037,51182
#define INSTR_CREATE_pmovsxdq(1039,51278
#define INSTR_CREATE_movntdqa(1041,51374
#define INSTR_CREATE_pmovzxbw(1043,51470
#define INSTR_CREATE_pmovzxbd(1045,51566
#define INSTR_CREATE_pmovzxbq(1047,51662
#define INSTR_CREATE_pmovzxdw(1049,51758
#define INSTR_CREATE_pmovzxwq(1051,51854
#define INSTR_CREATE_pmovzxdq(1053,51950
#define INSTR_CREATE_phminposuw(1055,52046
#define INSTR_CREATE_vmread(1057,52146
#define INSTR_CREATE_vmwrite(1059,52238
#define INSTR_CREATE_movsxd(1061,52332
#define INSTR_CREATE_movbe(1063,52424
#define INSTR_CREATE_aesimc(1065,52514
#define INSTR_CREATE_vmovups(1068,52616
#define INSTR_CREATE_vmovupd(1070,52710
#define INSTR_CREATE_vmovsldup(1072,52804
#define INSTR_CREATE_vmovddup(1074,52902
#define INSTR_CREATE_vmovlps(1076,52998
#define INSTR_CREATE_vmovlpd(1078,53092
#define INSTR_CREATE_vmovshdup(1080,53186
#define INSTR_CREATE_vmovhps(1082,53284
#define INSTR_CREATE_vmovhpd(1084,53378
#define INSTR_CREATE_vmovaps(1086,53472
#define INSTR_CREATE_vmovapd(1088,53566
#define INSTR_CREATE_vmovntps(1090,53660
#define INSTR_CREATE_vmovntpd(1092,53756
#define INSTR_CREATE_vcvttss2si(1094,53852
#define INSTR_CREATE_vcvttsd2si(1096,53952
#define INSTR_CREATE_vcvtss2si(1098,54052
#define INSTR_CREATE_vcvtsd2si(1100,54150
#define INSTR_CREATE_vmovmskps(1102,54248
#define INSTR_CREATE_vmovmskpd(1104,54346
#define INSTR_CREATE_vsqrtps(1106,54444
#define INSTR_CREATE_vsqrtpd(1108,54538
#define INSTR_CREATE_vrsqrtps(1110,54632
#define INSTR_CREATE_vrcpps(1112,54728
#define INSTR_CREATE_vcvtps2pd(1114,54820
#define INSTR_CREATE_vcvtpd2ps(1116,54918
#define INSTR_CREATE_vcvtdq2ps(1118,55016
#define INSTR_CREATE_vcvttps2dq(1120,55114
#define INSTR_CREATE_vcvtps2dq(1122,55214
#define INSTR_CREATE_vmovd(1124,55312
#define INSTR_CREATE_vmovq(1126,55402
#define INSTR_CREATE_vpmovmskb(1128,55492
#define INSTR_CREATE_vcvtdq2pd(1130,55590
#define INSTR_CREATE_vcvttpd2dq(1132,55688
#define INSTR_CREATE_vcvtpd2dq(1134,55788
#define INSTR_CREATE_vmovntdq(1136,55886
#define INSTR_CREATE_vmovdqu(1138,55982
#define INSTR_CREATE_vmovdqa(1140,56076
#define INSTR_CREATE_vlddqu(1142,56170
#define INSTR_CREATE_vpshufb(1144,56262
#define INSTR_CREATE_vpmovsxbw(1146,56356
#define INSTR_CREATE_vpmovsxbd(1148,56454
#define INSTR_CREATE_vpmovsxbq(1150,56552
#define INSTR_CREATE_vpmovsxdw(1152,56650
#define INSTR_CREATE_vpmovsxwq(1154,56748
#define INSTR_CREATE_vpmovsxdq(1156,56846
#define INSTR_CREATE_vmovntdqa(1158,56944
#define INSTR_CREATE_vpmovzxbw(1160,57042
#define INSTR_CREATE_vpmovzxbd(1162,57140
#define INSTR_CREATE_vpmovzxbq(1164,57238
#define INSTR_CREATE_vpmovzxdw(1166,57336
#define INSTR_CREATE_vpmovzxwq(1168,57434
#define INSTR_CREATE_vpmovzxdq(1170,57532
#define INSTR_CREATE_vphminposuw(1172,57630
#define INSTR_CREATE_vaesimc(1174,57732
#define INSTR_CREATE_vmovss(1176,57826
#define INSTR_CREATE_vmovsd(1178,57918
#define INSTR_CREATE_vcvtph2ps(1180,58010
#define INSTR_CREATE_vbroadcastss(1182,58108
#define INSTR_CREATE_vbroadcastsd(1184,58212
#define INSTR_CREATE_vbroadcastf128(1186,58316
#define INSTR_CREATE_movq2dq(1188,58424
#define INSTR_CREATE_movdq2q(1190,58518
#define INSTR_CREATE_inc(1203,59125
#define INSTR_CREATE_dec(1205,59208
#define INSTR_CREATE_bswap(1208,59334
#define INSTR_CREATE_not(1210,59421
#define INSTR_CREATE_neg(1212,59504
#define INSTR_CREATE_cdq(1224,60013
#define INSTR_CREATE_daa(1227,60147
#define INSTR_CREATE_das(1230,60279
#define INSTR_CREATE_aaa(1233,60411
#define INSTR_CREATE_aas(1236,60543
#define INSTR_CREATE_cwde(1239,60675
#define INSTR_CREATE_xlat(1242,60810
#define INSTR_CREATE_in_1(1254,61367
#define INSTR_CREATE_in_4(1257,61499
#define INSTR_CREATE_in_1_imm(1270,62151
#define INSTR_CREATE_in_4_imm(1272,62261
#define INSTR_CREATE_fcmovcc(1286,62878
#define INSTR_CREATE_fst(1299,63635
#define INSTR_CREATE_fstp(1301,63742
#define INSTR_CREATE_fld(1313,64361
#define INSTR_CREATE_fist(1324,65038
#define INSTR_CREATE_fistp(1326,65147
#define INSTR_CREATE_fisttp(1328,65258
#define INSTR_CREATE_fbstp(1330,65371
#define INSTR_CREATE_fild(1342,66055
#define INSTR_CREATE_fbld(1344,66164
#define INSTR_CREATE_fchs(1354,66664
#define INSTR_CREATE_fabs(1357,66800
#define INSTR_CREATE_ftst(1360,66936
#define INSTR_CREATE_fld1(1363,67074
#define INSTR_CREATE_fldl2t(1367,67299
#define INSTR_CREATE_fldl2e(1370,67461
#define INSTR_CREATE_fldpi(1373,67614
#define INSTR_CREATE_fldlg2(1376,67759
#define INSTR_CREATE_fldln2(1379,67921
#define INSTR_CREATE_fldz(1382,68069
#define INSTR_CREATE_f2xm1(1385,68207
#define INSTR_CREATE_fptan(1388,68345
#define INSTR_CREATE_fxtract(1391,68483
#define INSTR_CREATE_fsqrt(1394,68625
#define INSTR_CREATE_fsincos(1397,68763
#define INSTR_CREATE_frndint(1400,68905
#define INSTR_CREATE_fsin(1403,69047
#define INSTR_CREATE_fcos(1406,69183
#define INSTR_CREATE_fscale(1410,69320
#define INSTR_CREATE_fyl2x(1414,69495
#define INSTR_CREATE_fyl2xp1(1418,69697
#define INSTR_CREATE_fpatan(1422,69903
#define INSTR_CREATE_fprem(1426,70107
#define INSTR_CREATE_fprem1(1430,70309
#define INSTR_CREATE_pshufw(1448,71218
#define INSTR_CREATE_pshufd(1450,71318
#define INSTR_CREATE_pshufhw(1452,71418
#define INSTR_CREATE_pshuflw(1454,71520
#define INSTR_CREATE_pinsrw(1456,71622
#define INSTR_CREATE_pextrw(1458,71722
#define INSTR_CREATE_pextrb(1461,71833
#define INSTR_CREATE_pextrd(1463,71933
#define INSTR_CREATE_extractps(1465,72033
#define INSTR_CREATE_roundps(1467,72139
#define INSTR_CREATE_roundpd(1469,72241
#define INSTR_CREATE_roundss(1471,72343
#define INSTR_CREATE_roundsd(1473,72445
#define INSTR_CREATE_pinsrb(1475,72547
#define INSTR_CREATE_insertps(1477,72647
#define INSTR_CREATE_pinsrd(1479,72751
#define INSTR_CREATE_aeskeygenassist(1481,72851
#define INSTR_CREATE_vmovlps_NDS(1497,73709
#define INSTR_CREATE_vmovlpd_NDS(1499,73819
#define INSTR_CREATE_vunpcklps(1501,73929
#define INSTR_CREATE_vunpcklpd(1503,74039
#define INSTR_CREATE_vunpckhps(1505,74149
#define INSTR_CREATE_vunpckhpd(1507,74259
#define INSTR_CREATE_vmovhps_NDS(1509,74369
#define INSTR_CREATE_vmovhpd_NDS(1511,74479
#define INSTR_CREATE_vcvtsi2ss(1513,74589
#define INSTR_CREATE_vcvtsi2sd(1515,74699
#define INSTR_CREATE_vsqrtss(1517,74809
#define INSTR_CREATE_vsqrtsd(1519,74915
#define INSTR_CREATE_vrsqrtss(1521,75021
#define INSTR_CREATE_vrcpss(1523,75129
#define INSTR_CREATE_vandps(1525,75233
#define INSTR_CREATE_vandpd(1527,75337
#define INSTR_CREATE_vandnps(1529,75441
#define INSTR_CREATE_vandnpd(1531,75547
#define INSTR_CREATE_vorps(1533,75653
#define INSTR_CREATE_vorpd(1535,75755
#define INSTR_CREATE_vxorps(1537,75857
#define INSTR_CREATE_vxorpd(1539,75961
#define INSTR_CREATE_vaddps(1541,76065
#define INSTR_CREATE_vaddss(1543,76169
#define INSTR_CREATE_vaddpd(1545,76273
#define INSTR_CREATE_vaddsd(1547,76377
#define INSTR_CREATE_vmulps(1549,76481
#define INSTR_CREATE_vmulss(1551,76585
#define INSTR_CREATE_vmulpd(1553,76689
#define INSTR_CREATE_vmulsd(1555,76793
#define INSTR_CREATE_vcvtss2sd(1557,76897
#define INSTR_CREATE_vcvtsd2ss(1559,77007
#define INSTR_CREATE_vsubps(1561,77117
#define INSTR_CREATE_vsubss(1563,77221
#define INSTR_CREATE_vsubpd(1565,77325
#define INSTR_CREATE_vsubsd(1567,77429
#define INSTR_CREATE_vminps(1569,77533
#define INSTR_CREATE_vminss(1571,77637
#define INSTR_CREATE_vminpd(1573,77741
#define INSTR_CREATE_vminsd(1575,77845
#define INSTR_CREATE_vdivps(1577,77949
#define INSTR_CREATE_vdivss(1579,78053
#define INSTR_CREATE_vdivpd(1581,78157
#define INSTR_CREATE_vdivsd(1583,78261
#define INSTR_CREATE_vmaxps(1585,78365
#define INSTR_CREATE_vmaxss(1587,78469
#define INSTR_CREATE_vmaxpd(1589,78573
#define INSTR_CREATE_vmaxsd(1591,78677
#define INSTR_CREATE_vpunpcklbw(1593,78781
#define INSTR_CREATE_vpunpcklwd(1595,78893
#define INSTR_CREATE_vpunpckldq(1597,79005
#define INSTR_CREATE_vpacksswb(1599,79117
#define INSTR_CREATE_vpcmpgtb(1601,79227
#define INSTR_CREATE_vpcmpgtw(1603,79335
#define INSTR_CREATE_vpcmpgtd(1605,79443
#define INSTR_CREATE_vpackuswb(1607,79551
#define INSTR_CREATE_vpunpckhbw(1609,79661
#define INSTR_CREATE_vpunpckhwd(1611,79773
#define INSTR_CREATE_vpunpckhdq(1613,79885
#define INSTR_CREATE_vpackssdw(1615,79997
#define INSTR_CREATE_vpunpcklqdq(1617,80107
#define INSTR_CREATE_vpunpckhqdq(1619,80221
#define INSTR_CREATE_vpshufhw(1621,80335
#define INSTR_CREATE_vpshufd(1623,80443
#define INSTR_CREATE_vpshuflw(1625,80549
#define INSTR_CREATE_vpcmpeqb(1627,80657
#define INSTR_CREATE_vpcmpeqw(1629,80765
#define INSTR_CREATE_vpcmpeqd(1631,80873
#define INSTR_CREATE_vpextrw(1633,80981
#define INSTR_CREATE_vpsrlw(1635,81087
#define INSTR_CREATE_vpsrld(1637,81191
#define INSTR_CREATE_vpsrlq(1639,81295
#define INSTR_CREATE_vpaddq(1641,81399
#define INSTR_CREATE_vpmullw(1643,81503
#define INSTR_CREATE_vpsubusb(1645,81609
#define INSTR_CREATE_vpsubusw(1647,81717
#define INSTR_CREATE_vpminub(1649,81825
#define INSTR_CREATE_vpand(1651,81931
#define INSTR_CREATE_vpaddusb(1653,82033
#define INSTR_CREATE_vpaddusw(1655,82141
#define INSTR_CREATE_vpmaxub(1657,82249
#define INSTR_CREATE_vpandn(1659,82355
#define INSTR_CREATE_vpavgb(1661,82459
#define INSTR_CREATE_vpsraw(1663,82563
#define INSTR_CREATE_vpsrad(1665,82667
#define INSTR_CREATE_vpavgw(1667,82771
#define INSTR_CREATE_vpmulhuw(1669,82875
#define INSTR_CREATE_vpmulhw(1671,82983
#define INSTR_CREATE_vpsubsb(1673,83089
#define INSTR_CREATE_vpsubsw(1675,83195
#define INSTR_CREATE_vpminsw(1677,83301
#define INSTR_CREATE_vpor(1679,83407
#define INSTR_CREATE_vpaddsb(1681,83507
#define INSTR_CREATE_vpaddsw(1683,83613
#define INSTR_CREATE_vpmaxsw(1685,83719
#define INSTR_CREATE_vpxor(1687,83825
#define INSTR_CREATE_vpsllw(1689,83927
#define INSTR_CREATE_vpslld(1691,84031
#define INSTR_CREATE_vpsllq(1693,84135
#define INSTR_CREATE_vpmuludq(1695,84239
#define INSTR_CREATE_vpmaddwd(1697,84347
#define INSTR_CREATE_vpsadbw(1699,84455
#define INSTR_CREATE_vpsubb(1701,84561
#define INSTR_CREATE_vpsubw(1703,84665
#define INSTR_CREATE_vpsubd(1705,84769
#define INSTR_CREATE_vpsubq(1707,84873
#define INSTR_CREATE_vpaddb(1709,84977
#define INSTR_CREATE_vpaddw(1711,85081
#define INSTR_CREATE_vpaddd(1713,85185
#define INSTR_CREATE_vpsrldq(1715,85289
#define INSTR_CREATE_vpslldq(1717,85395
#define INSTR_CREATE_vhaddpd(1719,85501
#define INSTR_CREATE_vhaddps(1721,85607
#define INSTR_CREATE_vhsubpd(1723,85713
#define INSTR_CREATE_vhsubps(1725,85819
#define INSTR_CREATE_vaddsubpd(1727,85925
#define INSTR_CREATE_vaddsubps(1729,86035
#define INSTR_CREATE_vphaddw(1731,86145
#define INSTR_CREATE_vphaddd(1733,86251
#define INSTR_CREATE_vphaddsw(1735,86357
#define INSTR_CREATE_vpmaddubsw(1737,86465
#define INSTR_CREATE_vphsubw(1739,86577
#define INSTR_CREATE_vphsubd(1741,86683
#define INSTR_CREATE_vphsubsw(1743,86789
#define INSTR_CREATE_vpsignb(1745,86897
#define INSTR_CREATE_vpsignw(1747,87003
#define INSTR_CREATE_vpsignd(1749,87109
#define INSTR_CREATE_vpmulhrsw(1751,87215
#define INSTR_CREATE_vpabsb(1753,87325
#define INSTR_CREATE_vpabsw(1755,87429
#define INSTR_CREATE_vpabsd(1757,87533
#define INSTR_CREATE_vpmuldq(1759,87637
#define INSTR_CREATE_vpcmpeqq(1761,87743
#define INSTR_CREATE_vpackusdw(1763,87851
#define INSTR_CREATE_vpcmpgtq(1765,87961
#define INSTR_CREATE_vpminsb(1767,88069
#define INSTR_CREATE_vpminsd(1769,88175
#define INSTR_CREATE_vpminuw(1771,88281
#define INSTR_CREATE_vpminud(1773,88387
#define INSTR_CREATE_vpmaxsb(1775,88493
#define INSTR_CREATE_vpmaxsd(1777,88599
#define INSTR_CREATE_vpmaxuw(1779,88705
#define INSTR_CREATE_vpmaxud(1781,88811
#define INSTR_CREATE_vpmulld(1783,88917
#define INSTR_CREATE_vaesenc(1785,89023
#define INSTR_CREATE_vaesenclast(1787,89129
#define INSTR_CREATE_vaesdec(1789,89243
#define INSTR_CREATE_vaesdeclast(1791,89349
#define INSTR_CREATE_vpextrb(1793,89463
#define INSTR_CREATE_vpextrd(1795,89569
#define INSTR_CREATE_vextractps(1797,89675
#define INSTR_CREATE_vroundps(1799,89787
#define INSTR_CREATE_vroundpd(1801,89895
#define INSTR_CREATE_vaeskeygenassist(1803,90003
#define INSTR_CREATE_vmovss_NDS(1805,90127
#define INSTR_CREATE_vmovsd_NDS(1807,90235
#define INSTR_CREATE_vcvtps2ph(1809,90343
#define INSTR_CREATE_vmaskmovps(1811,90453
#define INSTR_CREATE_vmaskmovpd(1813,90565
#define INSTR_CREATE_vpermilps(1815,90677
#define INSTR_CREATE_vpermilpd(1817,90787
#define INSTR_CREATE_vextractf128(1819,90897
#define INSTR_CREATE_add(1833,91626
#define INSTR_CREATE_or(1835,91717
#define INSTR_CREATE_adc(1837,91807
#define INSTR_CREATE_sbb(1839,91898
#define INSTR_CREATE_and(1841,91989
#define INSTR_CREATE_sub(1843,92080
#define INSTR_CREATE_xor(1845,92171
#define INSTR_CREATE_punpcklbw(1847,92262
#define INSTR_CREATE_punpcklwd(1849,92365
#define INSTR_CREATE_punpckldq(1851,92468
#define INSTR_CREATE_packsswb(1853,92571
#define INSTR_CREATE_pcmpgtb(1855,92672
#define INSTR_CREATE_pcmpgtw(1857,92771
#define INSTR_CREATE_pcmpgtd(1859,92870
#define INSTR_CREATE_packuswb(1861,92969
#define INSTR_CREATE_punpckhbw(1863,93070
#define INSTR_CREATE_punpckhwd(1865,93173
#define INSTR_CREATE_punpckhdq(1867,93276
#define INSTR_CREATE_packssdw(1869,93379
#define INSTR_CREATE_punpcklqdq(1871,93480
#define INSTR_CREATE_punpckhqdq(1873,93585
#define INSTR_CREATE_pcmpeqb(1875,93690
#define INSTR_CREATE_pcmpeqw(1877,93789
#define INSTR_CREATE_pcmpeqd(1879,93888
#define INSTR_CREATE_psrlw(1881,93987
#define INSTR_CREATE_psrld(1883,94082
#define INSTR_CREATE_psrlq(1885,94177
#define INSTR_CREATE_paddq(1887,94272
#define INSTR_CREATE_pmullw(1889,94367
#define INSTR_CREATE_psubusb(1891,94464
#define INSTR_CREATE_psubusw(1893,94563
#define INSTR_CREATE_pminub(1895,94662
#define INSTR_CREATE_pand(1897,94759
#define INSTR_CREATE_paddusb(1899,94852
#define INSTR_CREATE_paddusw(1901,94951
#define INSTR_CREATE_pmaxub(1903,95050
#define INSTR_CREATE_pandn(1905,95147
#define INSTR_CREATE_pavgb(1907,95242
#define INSTR_CREATE_psraw(1909,95337
#define INSTR_CREATE_psrad(1911,95432
#define INSTR_CREATE_pavgw(1913,95527
#define INSTR_CREATE_pmulhuw(1915,95622
#define INSTR_CREATE_pmulhw(1917,95721
#define INSTR_CREATE_psubsb(1919,95818
#define INSTR_CREATE_psubsw(1921,95915
#define INSTR_CREATE_pminsw(1923,96012
#define INSTR_CREATE_por(1925,96109
#define INSTR_CREATE_paddsb(1927,96200
#define INSTR_CREATE_paddsw(1929,96297
#define INSTR_CREATE_pmaxsw(1931,96394
#define INSTR_CREATE_pxor(1933,96491
#define INSTR_CREATE_psllw(1935,96584
#define INSTR_CREATE_pslld(1937,96679
#define INSTR_CREATE_psllq(1939,96774
#define INSTR_CREATE_pmuludq(1941,96869
#define INSTR_CREATE_pmaddwd(1943,96968
#define INSTR_CREATE_psadbw(1945,97067
#define INSTR_CREATE_psubb(1947,97164
#define INSTR_CREATE_psubw(1949,97259
#define INSTR_CREATE_psubd(1951,97354
#define INSTR_CREATE_psubq(1953,97449
#define INSTR_CREATE_paddb(1955,97544
#define INSTR_CREATE_paddw(1957,97639
#define INSTR_CREATE_paddd(1959,97734
#define INSTR_CREATE_psrldq(1961,97829
#define INSTR_CREATE_pslldq(1963,97926
#define INSTR_CREATE_unpcklps(1965,98023
#define INSTR_CREATE_unpcklpd(1967,98124
#define INSTR_CREATE_unpckhps(1969,98225
#define INSTR_CREATE_unpckhpd(1971,98326
#define INSTR_CREATE_andps(1973,98427
#define INSTR_CREATE_andpd(1975,98522
#define INSTR_CREATE_andnps(1977,98617
#define INSTR_CREATE_andnpd(1979,98714
#define INSTR_CREATE_orps(1981,98811
#define INSTR_CREATE_orpd(1983,98904
#define INSTR_CREATE_xorps(1985,98997
#define INSTR_CREATE_xorpd(1987,99092
#define INSTR_CREATE_addps(1989,99187
#define INSTR_CREATE_addss(1991,99282
#define INSTR_CREATE_addpd(1993,99377
#define INSTR_CREATE_addsd(1995,99472
#define INSTR_CREATE_mulps(1997,99567
#define INSTR_CREATE_mulss(1999,99662
#define INSTR_CREATE_mulpd(2001,99757
#define INSTR_CREATE_mulsd(2003,99852
#define INSTR_CREATE_subps(2005,99947
#define INSTR_CREATE_subss(2007,100042
#define INSTR_CREATE_subpd(2009,100137
#define INSTR_CREATE_subsd(2011,100232
#define INSTR_CREATE_minps(2013,100327
#define INSTR_CREATE_minss(2015,100422
#define INSTR_CREATE_minpd(2017,100517
#define INSTR_CREATE_minsd(2019,100612
#define INSTR_CREATE_divps(2021,100707
#define INSTR_CREATE_divss(2023,100802
#define INSTR_CREATE_divpd(2025,100897
#define INSTR_CREATE_divsd(2027,100992
#define INSTR_CREATE_maxps(2029,101087
#define INSTR_CREATE_maxss(2031,101182
#define INSTR_CREATE_maxpd(2033,101277
#define INSTR_CREATE_maxsd(2035,101372
#define INSTR_CREATE_haddpd(2038,101478
#define INSTR_CREATE_haddps(2040,101575
#define INSTR_CREATE_hsubpd(2042,101672
#define INSTR_CREATE_hsubps(2044,101769
#define INSTR_CREATE_addsubpd(2046,101866
#define INSTR_CREATE_addsubps(2048,101967
#define INSTR_CREATE_pavgusb(2051,102081
#define INSTR_CREATE_pfadd(2053,102180
#define INSTR_CREATE_pfacc(2055,102275
#define INSTR_CREATE_pfcmpge(2057,102370
#define INSTR_CREATE_pfcmpgt(2059,102469
#define INSTR_CREATE_pfcmpeq(2061,102568
#define INSTR_CREATE_pfmin(2063,102667
#define INSTR_CREATE_pfmax(2065,102762
#define INSTR_CREATE_pfmul(2067,102857
#define INSTR_CREATE_pfrcp(2069,102952
#define INSTR_CREATE_pfrcpit1(2071,103047
#define INSTR_CREATE_pfrcpit2(2073,103148
#define INSTR_CREATE_pfrsqrt(2075,103249
#define INSTR_CREATE_pfrsqit1(2077,103348
#define INSTR_CREATE_pmulhrw(2079,103449
#define INSTR_CREATE_pfsub(2081,103548
#define INSTR_CREATE_pfsubr(2083,103643
#define INSTR_CREATE_pi2fd(2085,103740
#define INSTR_CREATE_pf2id(2087,103835
#define INSTR_CREATE_pi2fw(2089,103930
#define INSTR_CREATE_pf2iw(2091,104025
#define INSTR_CREATE_pfnacc(2093,104120
#define INSTR_CREATE_pfpnacc(2095,104217
#define INSTR_CREATE_pswapd(2097,104316
#define INSTR_CREATE_phaddw(2100,104425
#define INSTR_CREATE_phaddd(2102,104522
#define INSTR_CREATE_phaddsw(2104,104619
#define INSTR_CREATE_pmaddubsw(2106,104718
#define INSTR_CREATE_phsubw(2108,104821
#define INSTR_CREATE_phsubd(2110,104918
#define INSTR_CREATE_phsubsw(2112,105015
#define INSTR_CREATE_psignb(2114,105114
#define INSTR_CREATE_psignw(2116,105211
#define INSTR_CREATE_psignd(2118,105308
#define INSTR_CREATE_pmulhrsw(2120,105405
#define INSTR_CREATE_pabsb(2122,105506
#define INSTR_CREATE_pabsw(2124,105601
#define INSTR_CREATE_pabsd(2126,105696
#define INSTR_CREATE_crc32(2129,105802
#define INSTR_CREATE_packusdw(2131,105897
#define INSTR_CREATE_pcmpeqq(2133,105998
#define INSTR_CREATE_pcmpgtq(2135,106097
#define INSTR_CREATE_pminsb(2137,106196
#define INSTR_CREATE_pminsd(2139,106293
#define INSTR_CREATE_pminuw(2141,106390
#define INSTR_CREATE_pminud(2143,106487
#define INSTR_CREATE_pmaxsb(2145,106584
#define INSTR_CREATE_pmaxsd(2147,106681
#define INSTR_CREATE_pmaxuw(2149,106778
#define INSTR_CREATE_pmaxud(2151,106875
#define INSTR_CREATE_pmuldq(2153,106972
#define INSTR_CREATE_pmulld(2155,107069
#define INSTR_CREATE_aesenc(2157,107166
#define INSTR_CREATE_aesenclast(2159,107263
#define INSTR_CREATE_aesdec(2161,107368
#define INSTR_CREATE_aesdeclast(2163,107465
#define INSTR_CREATE_bts(2177,108233
#define INSTR_CREATE_btr(2179,108326
#define INSTR_CREATE_btc(2181,108419
#define INSTR_CREATE_cmovcc(2194,108983
#define INSTR_CREATE_imul_imm(2208,109720
#define INSTR_CREATE_imul(2217,110195
#define INSTR_CREATE_imul_1(2229,110900
#define INSTR_CREATE_imul_4(2232,111044
#define INSTR_CREATE_mul_1(2235,111219
#define INSTR_CREATE_mul_4(2238,111361
#define INSTR_CREATE_div_1(2241,111534
#define INSTR_CREATE_div_4(2244,111704
#define INSTR_CREATE_idiv_1(2248,111912
#define INSTR_CREATE_idiv_4(2251,112084
#define INSTR_CREATE_rol(2272,113252
#define INSTR_CREATE_ror(2274,113345
#define INSTR_CREATE_rcl(2276,113438
#define INSTR_CREATE_rcr(2278,113531
#define INSTR_CREATE_shl(2280,113624
#define INSTR_CREATE_shr(2282,113717
#define INSTR_CREATE_sar(2284,113810
#define INSTR_CREATE_maskmovq(2297,114447
#define INSTR_CREATE_maskmovdqu(2301,114642
#define INSTR_CREATE_vmaskmovdqu(2305,114844
#define INSTR_CREATE_fadd(2326,115979
#define INSTR_CREATE_fmul(2328,116072
#define INSTR_CREATE_fdiv(2330,116165
#define INSTR_CREATE_fdivr(2332,116258
#define INSTR_CREATE_fsub(2334,116353
#define INSTR_CREATE_fsubr(2336,116446
#define INSTR_CREATE_faddp(2349,117127
#define INSTR_CREATE_fmulp(2351,117243
#define INSTR_CREATE_fdivp(2353,117359
#define INSTR_CREATE_fdivrp(2355,117475
#define INSTR_CREATE_fsubp(2357,117593
#define INSTR_CREATE_fsubrp(2359,117709
#define INSTR_CREATE_fiadd(2371,118430
#define INSTR_CREATE_fimul(2374,118576
#define INSTR_CREATE_fidiv(2377,118722
#define INSTR_CREATE_fidivr(2380,118868
#define INSTR_CREATE_fisub(2383,119016
#define INSTR_CREATE_fisubr(2386,119162
#define INSTR_CREATE_ficom(2389,119310
#define INSTR_CREATE_ficomp(2392,119456
#define INSTR_CREATE_extrq(2405,120067
#define INSTR_CREATE_extrq_imm(2419,120868
#define INSTR_CREATE_insertq(2429,121403
#define INSTR_CREATE_insertq_imm(2445,122336
#define INSTR_CREATE_xsave32(2458,123026
#define INSTR_CREATE_xsave64(2461,123176
#define INSTR_CREATE_xsaveopt32(2464,123326
#define INSTR_CREATE_xsaveopt64(2467,123482
#define INSTR_CREATE_aam(2482,124261
#define INSTR_CREATE_aad(2485,124401
#define INSTR_CREATE_loopne(2498,125069
#define INSTR_CREATE_loope(2501,125217
#define INSTR_CREATE_loop(2504,125363
#define INSTR_CREATE_popf(2517,125935
#define INSTR_CREATE_ret(2521,126143
#define INSTR_CREATE_ret_far(2527,126443
#define INSTR_CREATE_iret(2533,126771
#define INSTR_CREATE_vpblendvb(2552,127743
#define INSTR_CREATE_vblendvps(2554,127863
#define INSTR_CREATE_vblendvpd(2556,127983
#define INSTR_CREATE_vcmpps(2573,128893
#define INSTR_CREATE_vcmpss(2575,129005
#define INSTR_CREATE_vcmppd(2577,129117
#define INSTR_CREATE_vcmpsd(2579,129229
#define INSTR_CREATE_vpinsrw(2581,129341
#define INSTR_CREATE_vshufps(2583,129455
#define INSTR_CREATE_vshufpd(2585,129569
#define INSTR_CREATE_vpalignr(2587,129683
#define INSTR_CREATE_vblendps(2589,129799
#define INSTR_CREATE_vblendpd(2591,129915
#define INSTR_CREATE_vpblendw(2593,130031
#define INSTR_CREATE_vpinsrb(2595,130147
#define INSTR_CREATE_vinsertps(2597,130261
#define INSTR_CREATE_vpinsrd(2599,130379
#define INSTR_CREATE_vdpps(2601,130493
#define INSTR_CREATE_vdppd(2603,130603
#define INSTR_CREATE_vmpsadbw(2605,130713
#define INSTR_CREATE_vpclmulqdq(2607,130829
#define INSTR_CREATE_vroundss(2609,130949
#define INSTR_CREATE_vroundsd(2611,131065
#define INSTR_CREATE_vperm2f128(2613,131181
#define INSTR_CREATE_vinsertf128(2615,131301
#define INSTR_CREATE_shld(2633,132244
#define INSTR_CREATE_shrd(2635,132347
#define INSTR_CREATE_pclmulqdq(2649,133144
#define INSTR_CREATE_blendps(2651,133255
#define INSTR_CREATE_blendpd(2653,133362
#define INSTR_CREATE_pblendw(2655,133469
#define INSTR_CREATE_shufps(2669,134286
#define INSTR_CREATE_shufpd(2671,134392
#define INSTR_CREATE_cmpps(2673,134497
#define INSTR_CREATE_cmpss(2675,134600
#define INSTR_CREATE_cmppd(2677,134703
#define INSTR_CREATE_cmpsd(2679,134806
#define INSTR_CREATE_palignr(2681,134909
#define INSTR_CREATE_dpps(2683,135016
#define INSTR_CREATE_dppd(2685,135117
#define INSTR_CREATE_mpsadbw(2687,135218
#define INSTR_CREATE_vfmadd132ps(2702,135995
#define INSTR_CREATE_vfmadd132pd(2704,136114
#define INSTR_CREATE_vfmadd213ps(2706,136233
#define INSTR_CREATE_vfmadd213pd(2708,136352
#define INSTR_CREATE_vfmadd231ps(2710,136471
#define INSTR_CREATE_vfmadd231pd(2712,136590
#define INSTR_CREATE_vfmadd132ss(2714,136709
#define INSTR_CREATE_vfmadd132sd(2716,136828
#define INSTR_CREATE_vfmadd213ss(2718,136947
#define INSTR_CREATE_vfmadd213sd(2720,137066
#define INSTR_CREATE_vfmadd231ss(2722,137185
#define INSTR_CREATE_vfmadd231sd(2724,137304
#define INSTR_CREATE_vfmaddsub132ps(2726,137423
#define INSTR_CREATE_vfmaddsub132pd(2728,137548
#define INSTR_CREATE_vfmaddsub213ps(2730,137673
#define INSTR_CREATE_vfmaddsub213pd(2732,137798
#define INSTR_CREATE_vfmaddsub231ps(2734,137923
#define INSTR_CREATE_vfmaddsub231pd(2736,138048
#define INSTR_CREATE_vfmsubadd132ps(2738,138173
#define INSTR_CREATE_vfmsubadd132pd(2740,138298
#define INSTR_CREATE_vfmsubadd213ps(2742,138423
#define INSTR_CREATE_vfmsubadd213pd(2744,138548
#define INSTR_CREATE_vfmsubadd231ps(2746,138673
#define INSTR_CREATE_vfmsubadd231pd(2748,138798
#define INSTR_CREATE_vfmsub132ps(2750,138923
#define INSTR_CREATE_vfmsub132pd(2752,139042
#define INSTR_CREATE_vfmsub213ps(2754,139161
#define INSTR_CREATE_vfmsub213pd(2756,139280
#define INSTR_CREATE_vfmsub231ps(2758,139399
#define INSTR_CREATE_vfmsub231pd(2760,139518
#define INSTR_CREATE_vfmsub132ss(2762,139637
#define INSTR_CREATE_vfmsub132sd(2764,139756
#define INSTR_CREATE_vfmsub213ss(2766,139875
#define INSTR_CREATE_vfmsub213sd(2768,139994
#define INSTR_CREATE_vfmsub231ss(2770,140113
#define INSTR_CREATE_vfmsub231sd(2772,140232
#define INSTR_CREATE_vfnmadd132ps(2774,140351
#define INSTR_CREATE_vfnmadd132pd(2776,140472
#define INSTR_CREATE_vfnmadd213ps(2778,140593
#define INSTR_CREATE_vfnmadd213pd(2780,140714
#define INSTR_CREATE_vfnmadd231ps(2782,140835
#define INSTR_CREATE_vfnmadd231pd(2784,140956
#define INSTR_CREATE_vfnmadd132ss(2786,141077
#define INSTR_CREATE_vfnmadd132sd(2788,141198
#define INSTR_CREATE_vfnmadd213ss(2790,141319
#define INSTR_CREATE_vfnmadd213sd(2792,141440
#define INSTR_CREATE_vfnmadd231ss(2794,141561
#define INSTR_CREATE_vfnmadd231sd(2796,141682
#define INSTR_CREATE_vfnmsub132ps(2798,141803
#define INSTR_CREATE_vfnmsub132pd(2800,141924
#define INSTR_CREATE_vfnmsub213ps(2802,142045
#define INSTR_CREATE_vfnmsub213pd(2804,142166
#define INSTR_CREATE_vfnmsub231ps(2806,142287
#define INSTR_CREATE_vfnmsub231pd(2808,142408
#define INSTR_CREATE_vfnmsub132ss(2810,142529
#define INSTR_CREATE_vfnmsub132sd(2812,142650
#define INSTR_CREATE_vfnmsub213ss(2814,142771
#define INSTR_CREATE_vfnmsub213sd(2816,142892
#define INSTR_CREATE_vfnmsub231ss(2818,143013
#define INSTR_CREATE_vfnmsub231sd(2820,143134
#define INSTR_CREATE_pblendvb(2834,143822
#define INSTR_CREATE_blendvps(2836,143953
#define INSTR_CREATE_blendvpd(2838,144084
#define INSTR_CREATE_pcmpistrm(2854,144947
#define INSTR_CREATE_pcmpistri(2856,145087
#define INSTR_CREATE_vpcmpistrm(2858,145226
#define INSTR_CREATE_vpcmpistri(2861,145374
#define INSTR_CREATE_ret_imm(2878,146253
#define INSTR_CREATE_ret_far_imm(2884,146565
#define INSTR_CREATE_pcmpestrm(2902,147564
#define INSTR_CREATE_pcmpestri(2905,147768
#define INSTR_CREATE_vpcmpestrm(2909,147981
#define INSTR_CREATE_vpcmpestri(2912,148187
#define INSTR_CREATE_rdtsc(2923,148670
#define INSTR_CREATE_lds(2937,149364
#define INSTR_CREATE_lss(2939,149478
#define INSTR_CREATE_les(2941,149592
#define INSTR_CREATE_lfs(2943,149706
#define INSTR_CREATE_lgs(2945,149820
#define INSTR_CREATE_pushf(2957,150362
#define INSTR_CREATE_rdmsr(2961,150589
#define INSTR_CREATE_rdpmc(2964,150756
#define INSTR_CREATE_xgetbv(2967,150923
#define INSTR_CREATE_pop(2979,151477
#define INSTR_CREATE_xchg(2994,152276
#define INSTR_CREATE_xadd(2996,152374
#define INSTR_CREATE_ins_1(3010,153001
#define INSTR_CREATE_ins_4(3014,153248
#define INSTR_CREATE_stos_1(3019,153515
#define INSTR_CREATE_stos_4(3023,153764
#define INSTR_CREATE_lods_1(3028,154034
#define INSTR_CREATE_lods_4(3033,154289
#define INSTR_CREATE_movs_1(3039,154566
#define INSTR_CREATE_movs_4(3045,154934
#define INSTR_CREATE_rep_ins_1(3053,155342
#define INSTR_CREATE_rep_ins_4(3058,155661
#define INSTR_CREATE_rep_stos_1(3064,156000
#define INSTR_CREATE_rep_stos_4(3069,156321
#define INSTR_CREATE_rep_lods_1(3075,156663
#define INSTR_CREATE_rep_lods_4(3081,156990
#define INSTR_CREATE_rep_movs_1(3088,157338
#define INSTR_CREATE_rep_movs_4(3095,157778
#define INSTR_CREATE_outs_1(3104,158258
#define INSTR_CREATE_outs_4(3108,158507
#define INSTR_CREATE_cmps_1(3113,158776
#define INSTR_CREATE_cmps_4(3119,159144
#define INSTR_CREATE_scas_1(3127,159552
#define INSTR_CREATE_scas_4(3131,159801
#define INSTR_CREATE_rep_outs_1(3136,160071
#define INSTR_CREATE_rep_outs_4(3141,160392
#define INSTR_CREATE_rep_cmps_1(3147,160733
#define INSTR_CREATE_rep_cmps_4(3154,161173
#define INSTR_CREATE_repne_cmps_1(3163,161653
#define INSTR_CREATE_repne_cmps_4(3170,162097
#define INSTR_CREATE_rep_scas_1(3179,162581
#define INSTR_CREATE_rep_scas_4(3184,162902
#define INSTR_CREATE_repne_scas_1(3190,163244
#define INSTR_CREATE_repne_scas_4(3195,163569
#define INSTR_CREATE_fxch(3211,164344
#define INSTR_CREATE_call(3223,164915
#define INSTR_CREATE_call_ind(3234,165517
#define INSTR_CREATE_call_far(3246,166207
#define INSTR_CREATE_call_far_ind(3258,166890
#define INSTR_CREATE_push(3268,167421
#define INSTR_CREATE_push_imm(3279,168031
#define INSTR_CREATE_cmpxchg_1(3296,169006
#define INSTR_CREATE_cmpxchg_4(3299,169169
#define INSTR_CREATE_leave(3305,169418
#define INSTR_CREATE_pusha(3319,170083
#define INSTR_CREATE_rdtscp(3322,170183
#define INSTR_CREATE_cpuid(3327,170393
#define INSTR_CREATE_cmpxchg8b(3340,171018
#define INSTR_CREATE_enter(3357,171947
#define INSTR_CREATE_popa(3369,172513
#define INSTR_CREATE_nop1byte(3384,173235
#define INSTR_CREATE_nop2byte(3385,173290
#define INSTR_CREATE_nop3byte(3386,173366
INSTR_CREATE_nop2byte_reg(3401,174162
INSTR_CREATE_nop3byte_reg(3433,175419
#define INSTR_CREATE_nopNbyte(3462,176500
#define INSTR_CREATE_RAW_pushf(3465,176634
#define INSTR_CREATE_RAW_popf(3466,176702
#define INSTR_CREATE_RAW_pusha(3467,176770
#define INSTR_CREATE_RAW_popa(3468,176838
#define INSTR_CREATE_RAW_nop(3469,176906
#define INSTR_CREATE_RAW_nop1byte(3470,176974
# define INSTR_CREATE_RAW_nop2byte(3472,177048
# define INSTR_CREATE_RAW_nop3byte(3473,177127
# define INSTR_CREATE_RAW_nop2byte(3475,177218
# define INSTR_CREATE_RAW_nop3byte(3476,177297
#define INSTR_CREATE_RAW_nopNbyte(3478,177389

x86/instr_inline.h,2309
#define _INSTR_INLINE_H_ 34,1706
# define MAKE_OPNDS_VALID(42,1845
#define CLIENT_ASSERT_(48,2089
#define MAKE_OPNDS_VALID(56,2428
#define CLIENT_ASSERT(60,2608
#define IF_DEBUG(61,2641
#define IF_DEBUG_(62,2664
#define OPND_IS_NULL(73,2982
#define OPND_IS_IMMED_INT(74,3039
#define OPND_IS_IMMED_FLOAT(75,3105
#define OPND_IS_NEAR_PC(76,3169
#define OPND_IS_NEAR_INSTR(77,3224
#define OPND_IS_REG(78,3282
#define OPND_IS_BASE_DISP(79,3338
#define OPND_IS_FAR_PC(80,3400
#define OPND_IS_FAR_INSTR(81,3459
#define OPND_IS_MEM_INSTR(82,3521
#define OPND_IS_VALID(83,3583
#define opnd_is_null 85,3640
#define opnd_is_immed_int 86,3685
#define opnd_is_immed_float 87,3735
#define opnd_is_near_pc 88,3787
#define opnd_is_near_instr 89,3835
#define opnd_is_reg 90,3886
#define opnd_is_base_disp 91,3930
#define opnd_is_far_pc 92,3980
#define opnd_is_far_instr 93,4027
#define opnd_is_mem_instr 94,4077
#define opnd_is_valid 95,4127
opnd_is_immed(100,4218
opnd_is_pc(107,4339
opnd_is_instr(113,4441
opnd_is_near_base_disp(120,4552
opnd_is_far_base_disp(127,4680
# define OPND_IS_REL_ADDR(134,4801
# define opnd_is_rel_addr 135,4862
opnd_is_near_rel_addr(139,4930
opnd_is_far_rel_addr(146,5062
opnd_create_null(160,5439
opnd_create_reg(169,5548
opnd_create_pc(181,5864
#define OPND_GET_REG(191,6002
#define opnd_get_reg 194,6134
#define GET_BASE_DISP(196,6169
#define OPND_GET_BASE(201,6343
#define OPND_GET_DISP(202,6403
#define OPND_GET_INDEX(203,6459
#define OPND_GET_SCALE(204,6520
#define opnd_get_base 206,6578
#define opnd_get_disp 207,6614
#define opnd_get_index 208,6650
#define opnd_get_scale 209,6688
#define OPND_GET_SEGMENT(211,6727
#define opnd_get_segment 217,7013
instr_ok_to_mangle(223,7099
instr_operands_valid(233,7374
instr_raw_bits_valid(240,7487
instr_has_allocated_bits(247,7600
instr_needs_encoding(254,7721
instr_ok_to_emit(261,7835
instr_num_srcs(270,8018
instr_num_dsts(278,8128
#define INSTR_GET_SRC(286,8293
#define INSTR_GET_DST(292,8636
#define INSTR_GET_TARGET(301,9033
#define instr_get_src 309,9498
#define instr_get_dst 310,9534
#define instr_get_target 311,9570
instr_set_note(315,9631
instr_get_note(322,9725
instr_get_next(329,9807
instr_get_prev(336,9889
instr_set_next(343,9967
instr_set_prev(350,10060

x86/instrument.c,14978
# undef ASSERT_TRUNCATE73,2957
# undef ASSERT_BITFIELD_TRUNCATE74,2981
# undef ASSERT_NOT_REACHED75,3014
# define ASSERT_TRUNCATE 76,3041
# define ASSERT_BITFIELD_TRUNCATE 77,3110
# define ASSERT_NOT_REACHED 78,3188
#define INSTRUMENT_INIT_NAME 85,3434
#define USES_DR_VERSION_NAME 92,3618
#define NEWEST_COMPATIBLE_VERSION 103,4136
DR_API const char *unique_build_number unique_build_number110,4447
typedef void (*callback_t)callback_t120,4904
typedef struct _callback_list_t 121,4938
    callback_t *callbacks;callbacks122,4972
    size_t num;123,5038
    size_t size;124,5107
} callback_list_t;125,5186
#define FAST_COPY_SIZE 145,6105
#define call_all_ret(146,6130
#define call_all(183,8834
static callback_list_t exit_callbacks 195,9411
static callback_list_t thread_init_callbacks 196,9457
static callback_list_t thread_exit_callbacks 197,9510
static callback_list_t fork_init_callbacks 199,9575
static callback_list_t bb_callbacks 201,9633
static callback_list_t trace_callbacks 202,9677
static callback_list_t end_trace_callbacks 204,9745
static callback_list_t fragdel_callbacks 206,9803
static callback_list_t restore_state_callbacks 207,9852
static callback_list_t restore_state_ex_callbacks 208,9907
static callback_list_t module_load_callbacks 209,9965
static callback_list_t module_unload_callbacks 210,10018
static callback_list_t filter_syscall_callbacks 211,10073
static callback_list_t pre_syscall_callbacks 212,10129
static callback_list_t post_syscall_callbacks 213,10182
static callback_list_t exception_callbacks 215,10251
static callback_list_t signal_callbacks 217,10308
static callback_list_t security_violation_callbacks 220,10390
static callback_list_t persist_ro_size_callbacks 222,10457
static callback_list_t persist_ro_callbacks 223,10514
static callback_list_t resurrect_ro_callbacks 224,10566
static callback_list_t persist_rx_size_callbacks 225,10620
static callback_list_t persist_rx_callbacks 226,10677
static callback_list_t resurrect_rx_callbacks 227,10729
static callback_list_t persist_rw_size_callbacks 228,10783
static callback_list_t persist_rw_callbacks 229,10840
static callback_list_t resurrect_rw_callbacks 230,10892
static callback_list_t persist_patch_callbacks 231,10946
typedef struct _client_lib_t 237,11163
    client_id_t id;238,11194
    char path[path239,11214
    shlib_handle_t lib;241,11306
    app_pc start;242,11330
    app_pc end;243,11348
    char options[options244,11364
    callback_list_t nudge_callbacks;249,11573
} client_lib_t;250,11610
static client_lib_t client_libs[client_libs255,11770
static size_t num_client_libs 256,11829
static void *persist_user_data[persist_user_data258,11865
static bool print_to_console;262,11983
static shlib_handle_t priv_kernel32;263,12013
typedef BOOL (WINAPI *kernel32_WriteFile_t)kernel32_WriteFile_t264,12050
static kernel32_WriteFile_t kernel32_WriteFile;266,12147
static bool block_client_nudge_threads 271,12247
static bool client_requested_exit;272,12295
static vm_area_vector_t *client_aux_libs;client_aux_libs285,12793
add_callback(296,13097
remove_callback(349,14767
add_client_lib(394,15930
instrument_load_client_libs(493,19693
init_client_aux_libs(536,20860
instrument_init(545,21065
free_callback_list(609,23700
void free_all_callback_lists(620,23984
instrument_exit(663,25494
is_in_client_lib(698,26577
get_client_bounds(718,27129
get_client_path_from_addr(731,27477
is_valid_client_id(745,27749
dr_register_exit_event(757,27946
dr_unregister_exit_event(763,28062
dr_register_bb_event(769,28190
dr_unregister_bb_event(782,28570
dr_register_trace_event(790,28826
dr_unregister_trace_event(803,29208
dr_register_end_trace_event(812,29484
dr_unregister_end_trace_event(824,29844
dr_register_delete_event(832,30077
dr_unregister_delete_event(843,30364
dr_register_restore_state_event(849,30519
dr_unregister_restore_state_event(862,30964
dr_register_restore_state_ex_event(870,31274
dr_unregister_restore_state_ex_event(882,31678
dr_register_thread_init_event(889,31946
dr_unregister_thread_init_event(895,32087
dr_register_thread_exit_event(901,32240
dr_unregister_thread_exit_event(907,32381
dr_register_fork_init_event(914,32546
dr_unregister_fork_init_event(920,32683
dr_register_module_load_event(927,32843
dr_unregister_module_load_event(934,33067
dr_register_module_unload_event(941,33305
dr_unregister_module_unload_event(948,33522
dr_register_exception_event(956,33768
dr_unregister_exception_event(962,33928
dr_register_signal_event(968,34105
dr_unregister_signal_event(975,34299
dr_register_filter_syscall_event(983,34528
dr_unregister_filter_syscall_event(989,34687
dr_register_pre_syscall_event(995,34858
dr_unregister_pre_syscall_event(1001,35011
dr_register_post_syscall_event(1007,35176
dr_unregister_post_syscall_event(1013,35331
dr_register_security_event(1020,35525
dr_unregister_security_event(1030,36000
dr_register_nudge_event(1041,36502
dr_unregister_nudge_event(1059,37121
dr_nudge_client_ex(1077,37806
dr_nudge_client(1103,38685
dr_is_nudge_thread(1111,38860
instrument_client_thread_init(1120,39090
instrument_thread_init(1146,40084
instrument_fork_init(1189,41576
instrument_thread_exit_event(1199,41817
instrument_thread_exit(1219,42526
dr_bb_hook_exists(1260,43766
dr_trace_hook_exists(1266,43835
dr_fragment_deleted_hook_exists(1272,43910
dr_end_trace_hook_exists(1278,43998
dr_thread_exit_hook_exists(1284,44081
dr_exit_hook_exists(1290,44168
dr_xl8_hook_exists(1296,44241
hide_tag_from_client(1303,44372
check_ilist_translations(1345,46345
instrument_basic_block(1388,48389
instrument_trace(1450,50619
instrument_fragment_deleted(1518,52978
instrument_restore_state(1543,53672
instrument_end_trace(1578,55196
create_and_initialize_module_data(1597,55712
copy_module_area_to_module_data(1650,57849
dr_copy_module_data(1680,59186
dr_free_module_data(1703,60079
instrument_module_load_trigger(1729,60969
instrument_module_load(1754,61850
instrument_module_unload(1777,62652
instrument_filter_syscall(1796,63155
instrument_pre_syscall(1810,63633
instrument_post_syscall(1831,64437
instrument_invoke_another_syscall(1842,64764
instrument_exception(1850,64973
instrument_signal(1865,65556
dr_signal_hook_exists(1880,66182
instrument_security_violation(1889,66363
instrument_nudge(2012,71059
get_num_client_threads(2088,74038
wait_for_outstanding_nudges(2100,74276
dr_standalone_init(2146,75883
dr_abort(2155,76038
dr_exit_process(2164,76210
dr_using_all_private_caches(2197,77465
dr_request_synchronized_exit(2204,77556
dr_set_process_exit_behavior(2212,77763
dr_get_options(2235,78630
dr_get_client_path(2251,78993
dr_get_client_base(2266,79284
dr_get_application_name(2280,79581
dr_get_process_id(2290,79755
dr_get_parent_id(2298,79861
dr_convert_handle_to_pid(2307,79959
dr_get_os_version(2319,80228
dr_is_wow64(2348,81497
dr_get_app_PEB(2355,81583
dr_get_time(2364,81687
dr_get_milliseconds(2371,81790
dr_get_random_value(2378,81865
dr_set_random_seed(2385,81954
dr_get_random_seed(2392,82028
dr_thread_alloc(2411,82541
dr_thread_free(2422,82842
dr_global_alloc(2435,83272
dr_global_free(2445,83484
dr_nonheap_alloc(2453,83657
dr_nonheap_free(2460,83784
raw_mem_alloc(2466,83899
raw_mem_free(2527,86289
dr_raw_mem_alloc(2563,87550
dr_raw_mem_free(2570,87681
custom_memory_shared(2576,87795
dr_custom_alloc(2672,92387
dr_custom_free(2680,92594
__wrap_malloc(2695,93077
__wrap_realloc(2707,93427
__wrap_calloc(2719,93793
__wrap_free(2730,94099
dr_memory_protect(2738,94170
dr_memory_is_readable(2775,95809
dr_query_memory(2783,96015
dr_query_memory_ex(2813,97054
dr_safe_read(2834,97728
dr_safe_write(2842,97971
dr_try_setup(2849,98131
dr_try_stop(2878,99327
dr_memory_is_dr_internal(2891,99840
dr_memory_is_in_client(2898,99940
instrument_client_lib_loaded(2904,100030
instrument_client_lib_unloaded(2919,100639
dr_load_aux_library(2932,100940
dr_lookup_aux_library_routine(2961,102010
dr_unload_aux_library(2970,102187
dr_load_aux_x64_library(3011,103553
dr_lookup_aux_x64_library_routine(3037,104490
dr_unload_aux_x64_library(3045,104717
dr_mutex_create(3063,105108
dr_mutex_destroy(3075,105390
dr_mutex_lock(3086,105658
dr_mutex_unlock(3107,106345
dr_mutex_trylock(3125,106919
dr_mutex_self_owns(3149,107726
dr_mutex_mark_as_app(3156,107836
dr_rwlock_create(3165,107974
dr_rwlock_destroy(3175,108270
dr_rwlock_read_lock(3184,108509
dr_rwlock_read_unlock(3191,108604
dr_rwlock_write_lock(3198,108703
dr_rwlock_write_unlock(3205,108800
dr_rwlock_write_trylock(3212,108901
dr_rwlock_self_owns_write_lock(3219,109011
dr_rwlock_mark_as_app(3226,109135
dr_recurlock_create(3235,109303
dr_recurlock_destroy(3245,109604
dr_recurlock_lock(3254,109846
dr_recurlock_unlock(3261,109953
dr_recurlock_trylock(3268,110062
dr_recurlock_self_owns(3275,110175
dr_recurlock_mark_as_app(3282,110296
dr_mark_safe_to_suspend(3291,110465
dr_atomic_add32_return_sum(3307,110910
dr_lookup_module(3320,111270
dr_get_main_module(3333,111560
dr_lookup_module_by_name(3342,111824
typedef struct _client_mod_iterator_list_t 3363,112679
    module_data_t *info;info3364,112724
    struct _client_mod_iterator_list_t *next;next3365,112749
} client_mod_iterator_list_t;3366,112795
    client_mod_iterator_list_t *current;current3369,112843
    client_mod_iterator_list_t *full_list;full_list3370,112884
} client_mod_iterator_t;3371,112927
dr_module_iterator_start(3376,113030
dr_module_iterator_hasnext(3409,114332
dr_module_iterator_next(3418,114628
dr_module_iterator_stop(3435,115166
dr_module_preferred_name(3459,115996
dr_lookup_module_section(3474,116363
dr_module_set_should_instrument(3489,116993
dr_module_should_instrument(3517,117999
dr_get_proc_address(3541,118766
dr_get_proc_address_ex(3552,118966
dr_create_dir(3572,119598
dr_directory_exists(3580,119744
dr_file_exists(3588,119882
dr_open_file(3598,120074
dr_close_file(3631,121075
dr_rename_file(3640,121226
dr_delete_file(3648,121374
dr_flush_file(3660,121609
dr_write_file(3670,121750
dr_read_file(3680,121945
dr_file_seek(3689,122165
dr_file_tell(3699,122495
dr_dup_file_handle(3706,122560
dr_file_size(3724,122967
dr_map_file(3731,123077
dr_unmap_file(3744,123578
dr_log(3766,124236
dr_get_logfile(3791,124856
dr_is_notify_on(3809,125252
dr_get_stdout_file(3816,125355
dr_get_stderr_file(3822,125431
dr_get_stdin_file(3828,125507
dr_write_forensics_report(3837,125614
dr_messagebox(3894,127521
dr_write_to_console(3915,128258
dr_using_console(3944,129267
dr_enable_console_printing(3957,129653
dr_printf(3998,131274
dr_fprintf(4012,131530
dr_snprintf(4026,131819
dr_vsnprintf(4042,132282
dr_snwprintf(4048,132408
dr_vsnwprintf(4059,132621
dr_sscanf(4065,132759
dr_get_token(4076,132954
dr_print_instr(4091,133449
dr_print_opnd(4103,133941
dr_get_current_drcontext(4121,134542
dr_get_thread_id(4129,134765
dr_get_dr_thread_handle(4141,135144
dr_get_tls_field(4152,135501
dr_set_tls_field(4162,135845
dr_get_dr_segment_base(4172,136204
dr_raw_tls_calloc(4179,136295
dr_raw_tls_cfree(4194,136777
dr_thread_yield(4202,136932
dr_sleep(4216,137392
dr_client_thread_set_suspendable(4230,137828
dr_suspend_all_other_threads_ex(4244,138219
dr_suspend_all_other_threads(4342,143218
dr_resume_all_other_threads(4351,143525
dr_is_thread_native(4381,144704
dr_retakeover_suspended_native_thread(4390,144930
dr_set_itimer(4407,145442
dr_get_itimer(4419,145887
instrlist_meta_preinsert(4432,146247
instrlist_meta_postinsert(4441,146503
instrlist_meta_append(4450,146758
instrlist_meta_fault_preinsert(4458,146909
instrlist_meta_fault_postinsert(4466,147095
instrlist_meta_fault_append(4474,147283
convert_va_list_to_opnd(4481,147440
dr_insert_call(4495,147917
dr_insert_call_ex(4519,148843
prepare_for_call_ex(4550,150077
cleanup_after_call_ex(4571,150769
dr_insert_clean_call_ex_varg(4610,152335
dr_insert_clean_call_ex(4751,158456
dr_insert_clean_call(4764,158851
dr_prepare_for_call(4783,159685
dr_cleanup_after_call(4792,160051
dr_swap_to_clean_stack(4804,160535
dr_restore_app_stack(4838,162207
#define SPILL_SLOT_TLS_MAX 4856,163002
#define NUM_TLS_SPILL_SLOTS 4857,163031
#define NUM_SPILL_SLOTS 4858,163084
static const ushort SPILL_SLOT_TLS_OFFS[SPILL_SLOT_TLS_OFFS4863,163472
static const reg_id_t SPILL_SLOT_MC_REG[SPILL_SLOT_MC_REG4867,163715
dr_save_reg(4874,163965
dr_restore_reg(4919,165842
dr_max_opnd_accessible_spill_slot(4957,167469
reg_spill_slot_opnd(4968,167726
dr_reg_spill_slot_opnd(4983,168242
dr_read_saved_reg(4998,168907
dr_write_saved_reg(5026,170189
dr_insert_read_tls_field(5058,171633
dr_insert_write_tls_field(5091,173041
dr_save_arith_flags(5123,174538
dr_restore_arith_flags(5138,175117
dr_save_arith_flags_to_xax(5153,175719
dr_restore_arith_flags_from_xax(5171,176325
dr_insert_call_instrumentation(5199,177379
dr_insert_mbr_instrumentation(5247,179741
dr_insert_cbr_instrumentation(5347,184396
dr_insert_ubr_instrumentation(5543,193750
dr_clobber_retaddr_after_read(5556,194167
dr_mcontext_xmm_fields_valid(5582,195178
dr_get_mcontext_priv(5592,195413
dr_get_mcontext(5697,199753
dr_set_mcontext(5705,199953
dr_redirect_execution(5747,201555
dr_redirect_native_target(5777,202679
dr_delete_fragment(5817,204143
dr_replace_fragment(5879,206778
void dr_flush_fragments(5938,209289
dr_flush_region(5986,211067
dr_unlink_flush_region(6026,213097
dr_delay_flush_region(6073,215675
dr_fragment_exists_at(6107,216797
dr_bb_exists_at(6123,217161
dr_fragment_size(6140,217600
dr_fragment_app_pc(6168,218510
dr_app_pc_for_decoding(6192,219299
dr_app_pc_from_cache_pc(6204,219485
dr_using_app_state(6225,220196
dr_switch_to_app_state(6233,220343
dr_switch_to_app_state_ex(6240,220456
dr_switch_to_dr_state(6248,220647
dr_switch_to_dr_state_ex(6255,220758
dr_mark_trace_head(6293,222373
dr_trace_head_at(6374,225557
dr_trace_exists_at(6402,226320
dr_add_prefixes_to_basic_blocks(6432,227250
dr_insert_get_seg_base(6454,228006
instrument_persist_ro_size(6514,230527
instrument_persist_ro(6559,232410
instrument_resurrect_ro(6586,233262
instrument_persist_rx_size(6619,234187
instrument_persist_rx(6637,234839
instrument_resurrect_rx(6651,235299
instrument_persist_rw_size(6665,235701
instrument_persist_rw(6683,236353
instrument_resurrect_rw(6697,236813
instrument_persist_patch(6710,237180
dr_register_persist_ro(6725,237647
dr_unregister_persist_ro(6742,238468
dr_register_persist_rx(6770,239527
dr_unregister_persist_rx(6787,240348
dr_register_persist_rw(6815,241407
dr_unregister_persist_rw(6832,242228
dr_register_persist_patch(6860,243287
dr_unregister_persist_patch(6872,243666
instrlist_insert_mov_immed_ptrsz(6885,244180
instrlist_insert_push_immed_ptrsz(6900,244799
instrlist_insert_mov_instr_addr(6910,245145
instrlist_insert_push_instr_addr(6928,245888

x86/instrument.h,9239
#define _INSTRUMENT_H_ 43,1995
#define CURRENT_API_VERSION 56,2373
    DR_EMIT_DEFAULT 109,3923
    DR_EMIT_STORE_TRANSLATIONS 121,4462
    DR_EMIT_STORE_TRANSLATIONS   = 0x01,x01121,4462
    DR_EMIT_PERSISTABLE 131,4937
    DR_EMIT_PERSISTABLE          = 0x02,x02131,4937
    DR_EMIT_MUST_END_TRACE 141,5479
    DR_EMIT_MUST_END_TRACE       = 0x04,x04141,5479
    DR_EMIT_GO_NATIVE 153,6138
    DR_EMIT_GO_NATIVE           = 0x08,x08153,6138
} dr_emit_flags_t;154,6178
    CUSTOM_TRACE_DR_DECIDES,498,24030
    CUSTOM_TRACE_END_NOW,499,24059
    CUSTOM_TRACE_CONTINUE500,24085
} dr_custom_trace_action_t;501,24111
typedef struct _dr_fault_fragment_info_t 635,30057
    void *tag;tag641,30289
    byte *cache_start_pc;cache_start_pc649,30647
    bool is_trace;651,30743
    bool app_code_consistent;659,31128
} dr_fault_fragment_info_t;660,31162
typedef struct _dr_restore_state_info_t 668,31403
    dr_mcontext_t *mcontext;mcontext675,31710
    bool raw_mcontext_valid;677,31781
    dr_mcontext_t *raw_mcontext;raw_mcontext685,32144
    dr_fault_fragment_info_t fragment_info;690,32304
} dr_restore_state_info_t;691,32348
    DR_EXIT_MULTI_THREAD 807,37156
    DR_EXIT_MULTI_THREAD           = 0x01,x01807,37156
    DR_EXIT_SKIP_THREAD_EXIT 816,37634
    DR_EXIT_SKIP_THREAD_EXIT        = 0x02,x02816,37634
} dr_exit_flags_t;817,37678
typedef struct _dr_exception_t 914,41140
    dr_mcontext_t *mcontext;mcontext919,41316
    EXCEPTION_RECORD *record;record920,41345
    dr_mcontext_t *raw_mcontext;raw_mcontext929,41770
    dr_fault_fragment_info_t fault_fragment_info;934,41929
} dr_exception_t;935,41979
typedef struct _dr_siginfo_t 1124,49935
    int sig;1126,49996
    void *drcontext;drcontext1128,50068
    dr_mcontext_t *mcontext;mcontext1134,50266
    dr_mcontext_t *raw_mcontext;raw_mcontext1143,50680
    bool raw_mcontext_valid;1145,50755
    byte *access_address;access_address1150,50917
    bool blocked;1157,51224
    dr_fault_fragment_info_t fault_fragment_info;1162,51371
} dr_siginfo_t;1163,51421
    DR_SIGNAL_DELIVER,1171,51618
    DR_SIGNAL_SUPPRESS,1173,51697
    DR_SIGNAL_BYPASS,1178,51858
    DR_SIGNAL_REDIRECT,1183,52025
} dr_signal_action_t;1184,52049
    DR_RCO_STACK_VIOLATION,1304,57713
    DR_RCO_HEAP_VIOLATION,1305,57741
    DR_RCT_RETURN_VIOLATION,1306,57768
    DR_RCT_INDIRECT_CALL_VIOLATION,1307,57797
    DR_RCT_INDIRECT_JUMP_VIOLATION,1308,57833
    DR_UNKNOWN_VIOLATION,1309,57869
} dr_security_violation_type_t;1310,57895
    DR_VIOLATION_ACTION_CONTINUE,1341,59903
    DR_VIOLATION_ACTION_CONTINUE_CHANGED_CONTEXT,1342,59937
    DR_VIOLATION_ACTION_KILL_PROCESS,1343,59987
    DR_VIOLATION_ACTION_KILL_THREAD,1344,60025
    DR_VIOLATION_ACTION_THROW_EXCEPTION,1345,60062
} dr_security_violation_action_t;1346,60103
#define GLOBAL_DCONTEXT 1575,69691
# define DR_ASSERT_MSG(1587,69968
# define DR_ASSERT_MSG(1592,70149
#define DR_ASSERT(1603,70466
    DR_WINDOWS_VERSION_8 1693,73044
    DR_WINDOWS_VERSION_7 1694,73079
    DR_WINDOWS_VERSION_VISTA 1695,73114
    DR_WINDOWS_VERSION_2003 1696,73149
    DR_WINDOWS_VERSION_XP 1697,73226
    DR_WINDOWS_VERSION_2000 1698,73261
    DR_WINDOWS_VERSION_NT 1699,73296
} dr_os_version_t;1700,73331
typedef struct _dr_os_version_info_t 1703,73403
    size_t size;1705,73524
    dr_os_version_t version;1707,73581
    uint service_pack_major;1709,73651
    uint service_pack_minor;1711,73721
} dr_os_version_info_t;1712,73750
    DR_ALLOC_NON_HEAP 1830,76881
    DR_ALLOC_NON_HEAP             = 0x0001,x00011830,76881
    DR_ALLOC_THREAD_PRIVATE 1839,77301
    DR_ALLOC_THREAD_PRIVATE       = 0x0002,x00021839,77301
    DR_ALLOC_CACHE_REACHABLE 1851,77912
    DR_ALLOC_CACHE_REACHABLE      = 0x0004,x00041851,77912
    DR_ALLOC_FIXED_LOCATION 1860,78341
    DR_ALLOC_FIXED_LOCATION       = 0x0008,x00081860,78341
    DR_ALLOC_LOW_2GB 1869,78769
    DR_ALLOC_LOW_2GB              = 0x0010,x00101869,78769
    DR_ALLOC_NON_DR 1879,79267
    DR_ALLOC_NON_DR               = 0x0020,x00201879,79267
    DR_ALLOC_RESERVE_ONLY 1888,79677
    DR_ALLOC_RESERVE_ONLY         = 0x0040,x00401888,79677
    DR_ALLOC_COMMIT_ONLY 1901,80412
    DR_ALLOC_COMMIT_ONLY          = 0x0080,x00801901,80412
} dr_alloc_flags_t;1903,80463
#define DR_TRY_EXCEPT(2229,91378
typedef void * dr_module_iterator_t;2606,102920
typedef struct _module_segment_data_t 2617,103379
    app_pc start;2618,103419
    app_pc end;2619,103498
    uint prot;2620,103574
} module_segment_data_t;2621,103637
struct _module_data_t 2633,104222
        app_pc start;2635,104258
        module_handle_t handle;2636,104320
    app_pc end;2643,104726
    app_pc entry_point;2645,104743
    uint flags;2647,104832
    module_names_t names;2649,104876
    char *full_path;full_path2653,105085
    version_number_t file_version;2656,105172
    version_number_t product_version;2657,105254
    uint checksum;2658,105342
    uint timestamp;2659,105405
    size_t module_internal_size;2660,105470
    bool contiguous;2662,105568
    uint num_segments;2663,105642
    module_segment_data_t *segments;segments2668,105829
typedef struct _dr_module_import_iterator_t dr_module_import_iterator_t;2782,109483
typedef struct _dr_module_import_desc_t dr_module_import_desc_t;2788,109673
typedef struct _dr_module_import_t 2800,110159
    const char *modname;modname2804,110269
    dr_module_import_desc_t *module_import_desc;module_import_desc2810,110441
} dr_module_import_t;2811,110490
typedef struct _dr_symbol_import_iterator_t dr_symbol_import_iterator_t;2860,111868
typedef struct _dr_symbol_import_t 2869,112223
    const char *name;name2870,112260
    const char *modname;modname2871,112335
    bool delay_load;2872,112412
    bool by_ordinal;2873,112492
    ptr_uint_t ordinal;2874,112575
} dr_symbol_import_t;2880,112830
typedef struct _dr_export_info_t 2991,116515
    generic_func_t address;2997,116744
    bool is_indirect_code;3006,117148
} dr_export_info_t;3007,117175
#define DR_FILE_READ 3138,121315
#define DR_FILE_WRITE_REQUIRE_NEW 3140,121429
#define DR_FILE_WRITE_APPEND 3145,121581
#define DR_FILE_WRITE_OVERWRITE 3150,121721
#define DR_FILE_ALLOW_LARGE 3155,121918
#define DR_FILE_CLOSE_ON_FORK 3157,122026
#define DR_SEEK_SET 3241,124702
#define DR_SEEK_CUR 3242,124747
#define DR_SEEK_END 3243,124800
    DR_MAP_PRIVATE 3292,126040
    DR_MAP_PRIVATE             = 0x0001,x00013292,126040
    DR_MAP_FIXED 3300,126388
    DR_MAP_FIXED               = 0x0002,x00023300,126388
    DR_MAP_IMAGE 3307,126601
    DR_MAP_IMAGE               = 0x0004,x00043307,126601
    DR_MAP_CACHE_REACHABLE 3314,126897
    DR_MAP_CACHE_REACHABLE     = 0x0008,x00083314,126897
#define LOG_NONE 3385,129260
#define LOG_STATS 3386,129350
#define LOG_TOP 3387,129440
#define LOG_THREADS 3388,129530
#define LOG_SYSCALLS 3389,129620
#define LOG_ASYNCH 3390,129710
#define LOG_INTERP 3391,129800
#define LOG_EMIT 3392,129890
#define LOG_LINKS 3393,129980
#define LOG_CACHE 3394,130070
#define LOG_FRAGMENT 3395,130160
#define LOG_DISPATCH 3396,130250
#define LOG_MONITOR 3397,130340
#define LOG_HEAP 3398,130430
#define LOG_VMAREAS 3399,130521
#define LOG_SYNCH 3400,130611
#define LOG_MEMSTATS 3401,130701
#define LOG_OPTS 3402,130791
#define LOG_SIDELINE 3403,130881
#define LOG_SYMBOLS 3404,130967
#define LOG_RCT 3405,131048
#define LOG_NT 3406,131136
#define LOG_HOT_PATCHING 3407,131224
#define LOG_HTABLE 3408,131306
#define LOG_MODULEDB 3409,131387
#define LOG_ALL 3410,131476
    DR_SUSPEND_NATIVE 3916,150911
    DR_SUSPEND_NATIVE = 0x0001,x00013916,150911
} dr_suspend_flags_t;3917,150943
    SPILL_SLOT_1 4101,158761
    SPILL_SLOT_2 4102,158839
    SPILL_SLOT_3 4103,158917
    SPILL_SLOT_4 4104,158995
    SPILL_SLOT_5 4105,159073
    SPILL_SLOT_6 4106,159151
    SPILL_SLOT_7 4107,159229
    SPILL_SLOT_8 4108,159307
    SPILL_SLOT_9 4109,159385
    SPILL_SLOT_10 4111,159474
    SPILL_SLOT_11 4113,159595
    SPILL_SLOT_12 4115,159716
    SPILL_SLOT_13 4117,159837
    SPILL_SLOT_14 4119,159958
    SPILL_SLOT_15 4121,160079
    SPILL_SLOT_16 4123,160200
    SPILL_SLOT_17 4125,160321
    SPILL_SLOT_MAX 4127,160442
    SPILL_SLOT_MAX = SPILL_SLOT_17 4127,160442
    SPILL_SLOT_MAX 4130,160586
    SPILL_SLOT_MAX = SPILL_SLOT_9 4130,160586
} dr_spill_slot_t;4133,160729
#define MINSERT 4296,166905
    DR_CLEANCALL_SAVE_FLOAT 4426,172124
    DR_CLEANCALL_SAVE_FLOAT             = 0x0001,x00014426,172124
    DR_CLEANCALL_NOSAVE_FLAGS 4433,172453
    DR_CLEANCALL_NOSAVE_FLAGS           = 0x0002,x00024433,172453
    DR_CLEANCALL_NOSAVE_XMM 4435,172552
    DR_CLEANCALL_NOSAVE_XMM             = 0x0004,x00044435,172552
    DR_CLEANCALL_NOSAVE_XMM_NONPARAM 4437,172685
    DR_CLEANCALL_NOSAVE_XMM_NONPARAM    = 0x0008,x00084437,172685
    DR_CLEANCALL_NOSAVE_XMM_NONRET 4439,172821
    DR_CLEANCALL_NOSAVE_XMM_NONRET      = 0x0010,x00104439,172821
    DR_CLEANCALL_INDIRECT 4444,173038
    DR_CLEANCALL_INDIRECT               = 0x0020,x00204444,173038
} dr_cleancall_save_t;4445,173088
#define SPILL_SLOT_REDIRECT_NATIVE_TGT 4823,189116

x86/loadtoconst.c,1756
fragment_t *frags_waiting_LTC[frags_waiting_LTC60,2286
int num_frags_waiting_LTC;61,2345
int safe_taken,66,2480
int safe_taken,opt_taken,66,2480
int safe_taken,opt_taken,addrs_analyzed,66,2480
int safe_taken,opt_taken,addrs_analyzed,addrs_made_const,66,2480
int safe_taken,opt_taken,addrs_analyzed,addrs_made_const,traces_analyzed,66,2480
int safe_taken,opt_taken,addrs_analyzed,addrs_made_const,traces_analyzed,addrs_seen;66,2480
#define NUM_TMP_OPNDS 69,2573
static opnd_t tmpOpnds[tmpOpnds70,2599
analyze_memrefs(73,2644
check_mem_refs(273,10114
LTC_online_optimize_and_replace(388,14390
get_mem_address(442,16545
get_mem_val(479,17448
LTC_examine_traces(508,18282
LTC_fragment_delete(548,19558
remove_mem_ref_check(573,20258
pop_instr_off_list(625,22386
ltc_trace(634,22625
do_single_LTC(779,28192
*fix_cmp_containing_constant(fix_cmp_containing_constant842,30925
safe_to_transpose_cmp(947,35112
safe_to_delete_cmp(952,35245
instr_flag_write_necessary(959,35418
safe_to_modify_cmp(994,36592
pc_reads_flags_before_writes(1092,40668
becomes_ubr_from_cmp(1116,41353
change_cbr_due_to_reversed_cmp(1140,41997
should_replace_load(1168,42778
value_to_replace(1189,43387
should_replace_load(1198,43651
value_to_replace(1239,45111
save_eflags_list(1273,46102
restore_eflags_list(1302,47156
constant_propagate(1332,48139
instr_replace_reg_with_const_in_src(1478,54895
instr_replace_reg_with_const_in_dst(1536,57277
opnd_replace_reg_with_val(1562,58127
replace_self_loop_with_opnd(1639,60424
instr_arithmatic_simplify(1680,61794
instr_replace_inplace(1871,69364
instrlist_remove_nops(1887,69749
instrlist_depends_on_reg(1920,70701
instr_add_to_exitexec_list(1943,71181
instrlist_setup_pseudo_exitstubs(1955,71547

x86/loadtoconst.h,547
#define __LOADTOCONST_H_38,1851
#define NUM_VALUES_FOR_SPECULATION 40,1877
#define SAMPLE_PERCENT 41,1915
#define MAX_TRACES_WAITING_FOR_LTC 44,1947
struct ltc_mem_ref_data{ltc_mem_ref_data47,2005
    opnd_t opnd;48,2030
    int vals[vals49,2047
    int addresses[addresses50,2089
struct ltc_data{ltc_data52,2139
    struct ltc_mem_ref_data *mem_refs;mem_refs53,2156
    int num_mem_addresses;54,2195
    int num_mem_samples;55,2222
    bool ltc_already_optimized;56,2247
#define TRANSPOSE 95,4140
#define NO_TRANSPOSE 96,4163

x86/mangle.c,5714
#define POST 72,2768
#define PRE 73,2807
    SLOT_NONE 82,3054
    SLOT_REG,83,3073
    SLOT_LOCAL,84,3087
    SLOT_FLAGS,85,3103
typedef byte slot_kind_t;87,3122
typedef struct _slot_t 94,3312
    slot_kind_t kind;95,3337
    byte value;96,3359
} slot_t;97,3375
typedef struct _callee_info_t 100,3441
    bool bailout;101,3473
    uint num_args;102,3545
    int num_instrs;103,3616
    app_pc start;104,3695
    app_pc bwd_tgt;105,3758
    app_pc fwd_tgt;106,3826
    int num_xmms_used;107,3889
    bool xmm_used[xmm_used108,3955
    bool reg_used[reg_used109,4019
    int num_callee_save_regs;110,4091
    bool callee_save_regs[callee_save_regs111,4155
    bool has_locals;112,4223
    bool xbp_is_fp;113,4288
    bool opt_inline;114,4356
    bool write_aflags;115,4414
    bool read_aflags;116,4481
    bool tls_used;117,4558
    reg_id_t spill_reg;118,4633
    uint slots_used;119,4699
    slot_t scratch_slots[scratch_slots120,4771
    instrlist_t *ilist;ilist121,4856
} callee_info_t;122,4933
static callee_info_t     default_callee_info;123,4950
static clean_call_info_t default_clean_call_info;124,4996
static generic_table_t  *callee_info_table;callee_info_table128,5120
static bool callee_info_table_exit 130,5241
#define INIT_HTABLE_SIZE_CALLEE 131,5285
callee_info_init(134,5358
callee_info_free(158,6112
callee_info_create(170,6446
callee_info_reserve_slot(183,6756
callee_info_slot_opnd(200,7385
callee_info_table_init(220,8168
callee_info_table_destroy(232,8598
callee_info_table_lookup(239,8755
callee_info_table_add(254,9244
clean_call_info_init(279,10139
convert_to_near_rel_common(301,10931
convert_to_near_rel_meta(440,16943
convert_to_near_rel(446,17099
remangle_short_rewrite(464,17854
get_clean_call_switch_stack_size(497,19116
get_clean_call_temp_stack_size(506,19287
insert_out_of_line_context_switch(512,19401
insert_clear_eflags(539,20508
insert_push_all_registers(571,21788
insert_pop_all_registers(684,27160
insert_get_mcontext_base(797,32157
clean_call_beyond_mcontext(814,32807
#define NUM_EXTRA_SLOTS 849,34275
prepare_for_clean_call(851,34323
cleanup_after_clean_call(960,38927
parameters_stack_padded(1026,41385
shrink_reg_for_param(1032,41501
insert_parameter_preparation(1075,43338
insert_meta_call_vargs(1392,59775
insert_clean_call_with_arg_jmp_if_ret_true(1431,61378
insert_reachable_cti(1479,63458
insert_mov_immed_common(1552,66479
insert_mov_immed_ptrsz(1621,69440
insert_mov_instr_addr(1630,69757
insert_push_immed_common(1646,70338
insert_push_immed_ptrsz(1695,72256
insert_push_instr_addr(1704,72561
stack_entry_size(1714,72965
insert_push_retaddr(1752,73953
insert_mov_ptr_uint_beyond_TOS(1789,75589
insert_push_cs(1833,77420
get_call_return_address(1859,78308
#define SAVE_TO_DC_OR_TLS(1916,80831
#define SAVE_TO_DC_OR_TLS_OR_REG(1922,81228
mangle_far_direct_helper(1928,81546
mangle_direct_call(1977,83917
mangle_seg_ref_opnd(2068,87621
mangle_far_indirect_helper(2123,89654
mangle_indirect_call(2198,92965
mangle_far_return_save_selector(2307,97488
mangle_return(2329,98413
mangle_indirect_jump(2530,107832
mangle_far_direct_jump(2595,110591
cti_is_normal_elision(2611,111106
find_syscall_num(2638,111893
mangle_insert_clone_code(2712,114878
mangle_syscall(2787,117902
mangle_clone_code(3012,128260
mangle_syscall_code(3069,130269
mangle_interrupt(3151,133353
#define FNSAVE_PC_OFFS 3177,134183
#define FXSAVE_PC_OFFS 3178,134210
#define FXSAVE_SIZE 3179,134237
float_pc_update(3182,134270
mangle_float_pc(3230,136279
#define CPUID_0_EAX 3374,142820
#define CPUID_0_EBX 3375,142852
#define CPUID_0_ECX 3376,142883
#define CPUID_0_EDX 3377,142914
#define CPUID_1_EAX 3380,143085
#define CPUID_1_EBX 3381,143116
#define CPUID_1_ECX 3382,143147
#define CPUID_1_EDX 3383,143178
mangle_cpuid(3386,143222
mangle_exit_cti_prefixes(3467,146038
mangle_rel_addr(3503,147414
instr_get_seg_ref_dst_idx(3645,154213
instr_get_seg_ref_src_idx(3663,154655
static ushort tls_slots[tls_slots3680,155086
mangle_mov_seg(3687,155296
mangle_seg_ref(3786,158882
mangle(3894,162938
#undef SAVE_TO_DC_OR_TLS4117,171868
# define SAVE_TO_DC_OR_TLS(4120,171985
# define RESTORE_FROM_DC_OR_TLS(4122,172096
# define SAVE_TO_DC_OR_TLS(4125,172223
# define RESTORE_FROM_DC_OR_TLS(4127,172338
sandbox_rep_instr(4132,172483
sandbox_write(4306,180021
sandbox_top_of_bb_check_s2ro(4506,188959
sandbox_top_of_bb(4516,189366
insert_selfmod_sandbox(4799,201040
static bool selfmod_s2ro[selfmod_s2ro4918,206728
static uint selfmod_eflags[selfmod_eflags4919,206774
#define SELFMOD_NUM_S2RO 4920,206857
#define SELFMOD_NUM_EFLAGS 4921,206931
static app_pc selfmod_gt4G[selfmod_gt4G4923,207065
# define SELFMOD_NUM_GT4G 4924,207151
set_selfmod_sandbox_offsets(4932,207435
finalize_selfmod_sandbox(4993,210005
#define MAX_NUM_FUNC_INSTRS 5017,211013
#define MAX_NUM_INLINE_INSTRS 5019,211115
mangle_init(5022,211154
mangle_exit(5037,211571
decode_callee_instr(5048,211772
check_callee_instr(5082,212844
check_callee_ilist(5214,218273
decode_callee_ilist(5259,219858
analyze_callee_regs_usage(5277,220355
analyze_callee_save_reg(5394,224879
analyze_callee_tls(5531,230789
analyze_callee_pick_spill_reg(5570,232196
analyze_callee_inline(5598,233208
analyze_callee_ilist(5830,242923
analyze_clean_call_aflags(5849,243562
analyze_clean_call_regs(5883,245030
analyze_clean_call_args(5955,248056
analyze_clean_call_inline(5981,248965
analyze_clean_call(6058,251642
insert_inline_reg_save(6105,253366
insert_inline_reg_restore(6153,255271
insert_inline_arg_setup(6192,256649
insert_inline_clean_call(6286,260340
analyze_clean_call(6340,262363

x86/optimize.c,5563
optimize_trace(131,5733
    uint loads_removed_from_loads;219,8105
    uint loads_removed_from_stores;220,8140
    uint ctis_in_load_removal;221,8176
    int reg_overwritten;222,8207
    int val_saved_in_dead_reg;223,8232
    uint loads_examined;224,8263
    int incs_examined;226,8307
    int incs_replaced;227,8330
    int loops_unrolled;229,8373
    int vals_spilled_to_xmm;231,8414
    int loads_replaced_by_xmm;232,8443
    int xmm_saves_to_mem;233,8474
    int stores_replaced_by_xmm;234,8500
    int xmm_restored_from_memory;235,8532
    int xmm_mov_to_dead_reg;236,8566
    int loadstore_combos_replaced_by_xmm;237,8595
    int xmm_traces;238,8637
    int mmx_traces;239,8657
    int num_instrs_simplified;241,8708
    int num_fail_simplified;242,8739
    int num_opnds_simplified;243,8768
    int num_const_add_const_mem;244,8798
    int num_jmps_simplified;245,8831
    int num_jecxz_instrs_removed;246,8860
    int dead_loads_removed;248,8922
    int xors_removed;250,8990
    int num_stack_adjust_removed;252,9049
    int pre_num_instrs_seen;254,9106
    int pre_num_jmps_seen;255,9135
    int post_num_instrs_seen;256,9162
    int post_num_jmps_seen;257,9192
    int num_returns_removed;259,9251
    int num_return_instrs_removed;260,9280
    bool i64_test;262,9335
    int ia64_num_entries;263,9354
} opt_stats_t;265,9387
print_optimization_stats(271,9562
generate_antialias_check(363,14121
#define MAX_INDUCTION_VARS 388,15186
#define MAX_LCDS 389,15215
#define MAX_INVARIANTS 390,15235
identify_for_loop(393,15274
unroll_loops(824,32491
static bool have_done 1074,41765
static bool checked 1075,41796
static int test1;1076,41825
static int test2;1077,41843
static int test3;1078,41861
test_i64(1081,41893
instr_counts(1219,47613
#define PS_VALID_VAL 1248,48565
#define PS_LVALID_VAL 1249,48597
#define PS_HVALID_VAL 1250,48674
#define PS_KEEP 1251,48706
#define NUM_CONSTANT_ADDRESS 1253,48739
#define NUM_STACK_SLOTS 1254,48772
static int cp_global_aggr;1257,48803
static int cp_local_aggr;1258,48830
typedef struct _prop_state_t 1261,48906
    dcontext_t *dcontext;dcontext1262,48937
    instrlist_t *trace;trace1263,48963
    instr_t *hint;hint1264,48987
    byte reg_state[reg_state1265,49006
    int reg_vals[reg_vals1266,49029
    int addresses[addresses1268,49077
    int address_vals[address_vals1269,49118
    byte address_state[address_state1270,49162
    int cur_scope;1273,49225
    int stack_offsets_ebp[stack_offsets_ebp1275,49245
    int stack_vals[stack_vals1276,49289
    int stack_scope[stack_scope1278,49327
    byte stack_address_state[stack_address_state1279,49365
    bool lost_scope_count;1281,49454
} prop_state_t;1282,49481
set_stack_val(1286,49513
update_stack_val(1316,50511
check_stack_val(1340,51253
clear_stack_val(1359,51767
set_address_val(1378,52377
update_address_val(1407,53367
clear_address_val(1430,54052
get_immutable_value(1450,54608
opnd_is_stack_address(1497,56011
const_address_const_mem(1507,56314
propagate_address(1542,57530
propagate_opnd(1606,59400
check_flag_val(1723,63806
compare_flag_vals(1737,64271
removable_jmp(1754,64814
do_forward_check_eflags(1835,67852
forward_check_eflags(1967,74233
make_imm_store(1973,74433
make_to_imm_store(1980,74677
make_to_nop(2018,76438
calculate_zf_pf_sf(2037,77065
prop_simplify(2060,77720
get_trace_constant(2470,96102
update_prop_state(2483,96824
typedef struct _two_entry_list_element_t 2628,104273
    int disp;2629,104316
    int scope;2630,104330
    struct _two_entry_list_element_t * next;2631,104345
} two_entry_list_element_t;2632,104390
typedef struct _start_list_element_t 2634,104419
    int endscope;2635,104458
    two_entry_list_element_t * next;2636,104476
} start_list_element_t;2637,104513
handle_stack(2645,104754
constant_propagation(2715,107856
remove_unnecessary_zeroing(2864,112981
#define NUM_ADD_CACHE 2922,115125
#define ADD_KEEP 2923,115151
#define ADD_DEAD 2924,115173
static int dc_global_aggr;2926,115196
static int dc_local_aggr;2927,115223
add_address(2930,115262
address_is_dead(2951,115851
address_set_dead(2961,116100
add_init(2980,116565
add_stack_address(2993,117295
stack_address_is_dead(3017,117984
stack_address_set_dead(3029,118306
remove_dead_code(3044,118715
is_stack_adjustment(3285,129770
get_stack_adjustment(3304,130545
set_stack_adjustment(3318,130931
stack_adjust_combiner(3337,131446
check_eflags_cr(3478,138342
remove_return_no_save_eflags(3497,138902
remove_return(3585,141842
is_return(3704,146183
check_return(3751,147774
#define CALL_RETURN_STACK_SIZE 3778,148686
call_return_matching(3783,148838
peephole_optimize(3848,151450
replace_inc_with_add(3894,153309
#define MAX_DIST 3981,156793
remove_redundant_loads(3983,156820
find_dead_register_across_instrs(4235,167924
find_dead_register_across_instrs_H(4255,168386
#define MIN_PREFETCH_DISTANCE 4302,169553
prefetch_optimize_trace(4305,169598
is_store_to_ecxoff(4404,173318
is_load_from_ecxoff(4413,173667
opnd_is_constant_address(4423,174080
is_zeroing_instr(4430,174285
is_dead_register(4440,174557
find_dead_register(4462,175160
is_dead_reg(4477,175565
replace_inst(4500,176204
remove_inst(4509,176440
instruction_affects_mem_access(4517,176669
safe_write(4533,177126
instr_get_src_mem_access(4550,177532
find_next_self_loop(4567,177861
replace_self_loop_with_instr(4586,178249
get_decision_instr(4618,179458
propagate_down(4637,179883
check_down(4654,180311
is_nop(4667,180865

x86/proc.c,1673
# undef ASSERT_TRUNCATE52,2373
# undef ASSERT_BITFIELD_TRUNCATE53,2397
# undef ASSERT_NOT_REACHED54,2430
# define ASSERT_TRUNCATE 55,2457
# define ASSERT_BITFIELD_TRUNCATE 56,2526
# define ASSERT_NOT_REACHED 57,2604
#define INTEL_EBX 61,2740
#define INTEL_EDX 62,2780
#define INTEL_ECX 63,2820
#define AMD_EBX 66,2915
#define AMD_EDX 67,2953
#define AMD_ECX 68,2991
size_t cache_line_size 75,3221
static ptr_uint_t mask;76,3250
static uint L1_icache_size 78,3328
static uint L1_dcache_size 79,3377
static uint L2_cache_size 80,3426
static uint vendor 82,3476
static uint family 83,3515
static uint type 84,3541
static uint model 85,3567
static uint stepping 86,3593
static features_t features 92,3755
static uint brand_string[brand_string98,3990
set_cache_size(101,4060
get_cache_sizes_amd(119,4743
get_cache_sizes_intel(144,5447
get_processor_specific_info(218,8509
proc_init(375,13724
proc_get_vendor(429,16117
proc_set_vendor(436,16174
proc_get_family(452,16571
uint proc_get_type(457,16617
uint proc_get_model(463,16710
uint proc_get_stepping(468,16759
proc_has_feature(474,16819
proc_get_all_feature_bits(497,17423
proc_get_brand_string(503,17489
proc_get_L1_icache_size(509,17568
proc_get_L1_dcache_size(515,17643
proc_get_L2_cache_size(521,17718
proc_get_cache_size_str(527,17791
proc_get_cache_line_size(546,18175
proc_is_cache_aligned(553,18288
proc_bump_to_end_of_cache_line(561,18498
proc_get_containing_page(571,18768
machine_cache_sync(579,18995
proc_fpstate_save_size(589,19192
proc_save_fpstate(615,20243
proc_restore_fpstate(649,21212
dr_insert_save_fpstate(679,22029
dr_insert_restore_fpstate(705,23285

x86/proc.h,3786
#define _PROC_H_ 43,2003
#define PAGE_SIZE 56,2371
#define PAGE_START(59,2502
    VENDOR_INTEL,63,2619
    VENDOR_AMD,64,2697
    VENDOR_UNKNOWN,65,2773
#define FAMILY_IA64 90,3952
#define FAMILY_LLANO 94,4086
#define FAMILY_ITANIUM_2_DC 95,4171
#define FAMILY_K8_MOBILE 96,4259
#define FAMILY_ITANIUM_2 97,4348
#define FAMILY_K8L 98,4433
#define FAMILY_K8 99,4516
#define FAMILY_PENTIUM_4 100,4598
#define FAMILY_P4 101,4683
#define FAMILY_ITANIUM 102,4768
#define FAMILY_P6 104,4928
#define FAMILY_IVYBRIDGE 105,5013
#define FAMILY_SANDYBRIDGE 106,5098
#define FAMILY_NEHALEM 107,5185
#define FAMILY_CORE_I7 108,5268
#define FAMILY_CORE_2 109,5351
#define FAMILY_CORE 110,5433
#define FAMILY_PENTIUM_M 111,5513
#define FAMILY_PENTIUM_3 112,5598
#define FAMILY_PENTIUM_2 113,5683
#define FAMILY_PENTIUM_PRO 114,5768
#define FAMILY_ATHLON 115,5855
#define FAMILY_K7 116,5937
#define FAMILY_P5 118,6039
#define FAMILY_PENTIUM 119,6124
#define FAMILY_K6 120,6207
#define FAMILY_K5 121,6285
#define FAMILY_486 123,6373
#define MODEL_IVYBRIDGE 128,6573
#define MODEL_I7_WESTMERE_EX 129,6642
#define MODEL_SANDYBRIDGE_E 130,6721
#define MODEL_I7_WESTMERE 131,6804
#define MODEL_SANDYBRIDGE 132,6872
#define MODEL_I7_CLARKDALE 133,6943
#define MODEL_I7_HAVENDALE 134,7031
#define MODEL_I7_CLARKSFIELD 135,7119
#define MODEL_ATOM_CEDARVIEW 136,7208
#define MODEL_ATOM_LINCROFT 137,7282
#define MODEL_ATOM 138,7355
#define MODEL_I7_GAINESTOWN 139,7419
#define MODEL_CORE_PENRYN 140,7497
#define MODEL_CORE_2 141,7570
#define MODEL_CORE 142,7649
#define MODEL_PENTIUM_M 143,7719
#define MODEL_PENTIUM_M_1MB 144,7795
    uint flags_edx;151,8002
    uint flags_ecx;152,8070
    uint ext_flags_edx;153,8138
    uint ext_flags_ecx;154,8215
} features_t;155,8292
    FEATURE_FPU 163,8514
    FEATURE_VME 164,8590
    FEATURE_DE 165,8661
    FEATURE_PSE 166,8729
    FEATURE_TSC 167,8797
    FEATURE_MSR 168,8864
    FEATURE_PAE 169,8937
    FEATURE_MCE 170,9012
    FEATURE_CX8 171,9084
    FEATURE_APIC 172,9163
    FEATURE_SEP 173,9243
    FEATURE_MTRR 174,9308
    FEATURE_PGE 175,9384
    FEATURE_MCA 176,9451
    FEATURE_CMOV 177,9526
    FEATURE_PAT 178,9603
    FEATURE_PSE_36 179,9672
    FEATURE_PSN 180,9747
    FEATURE_CLFSH 181,9832
    FEATURE_DS 182,9910
    FEATURE_ACPI 183,9970
    FEATURE_MMX 184,10050
    FEATURE_FXSR 185,10123
    FEATURE_SSE 186,10196
    FEATURE_SSE2 187,10269
    FEATURE_SS 188,10343
    FEATURE_HTT 189,10402
    FEATURE_TM 190,10477
    FEATURE_IA64 191,10551
    FEATURE_PBE 192,10617
    FEATURE_SSE3 194,10721
    FEATURE_PCLMULQDQ 195,10795
    FEATURE_MONITOR 196,10866
    FEATURE_DS_CPL 197,10951
    FEATURE_VMX 198,11025
    FEATURE_EST 199,11100
    FEATURE_TM2 200,11178
    FEATURE_SSSE3 201,11244
    FEATURE_CID 202,11319
    FEATURE_FMA 203,11379
    FEATURE_CX16 204,11454
    FEATURE_xPTR 205,11535
    FEATURE_SSE41 206,11611
    FEATURE_SSE42 207,11687
    FEATURE_MOVBE 208,11763
    FEATURE_POPCNT 209,11830
    FEATURE_AES 210,11898
    FEATURE_XSAVE 211,11973
    FEATURE_OSXSAVE 212,12041
    FEATURE_AVX 213,12122
    FEATURE_SYSCALL 215,12241
    FEATURE_XD_Bit 216,12327
    FEATURE_EM64T 217,12397
    FEATURE_LAHF 219,12519
} feature_bit_t;220,12602
    CACHE_SIZE_8_KB,231,12903
    CACHE_SIZE_16_KB,232,12964
    CACHE_SIZE_32_KB,233,13026
    CACHE_SIZE_64_KB,234,13088
    CACHE_SIZE_128_KB,235,13150
    CACHE_SIZE_256_KB,236,13213
    CACHE_SIZE_512_KB,237,13276
    CACHE_SIZE_1_MB,238,13339
    CACHE_SIZE_2_MB,239,13400
    CACHE_SIZE_UNKNOWN 240,13461
} cache_size_t;241,13522
#define CACHE_LINE_SIZE(248,13632
#define XCR0_AVX 251,13713
#define XCR0_SSE 252,13732
#define XCR0_FP 253,13751

x86/retcheck.c,2601
#define SSE2_USE_STACK_POINTER 80,3119
#define USE_LOCAL_MPROT_STACK 83,3206
#define POST 91,3419
#define PRE 92,3453
emit_pextrw(107,3852
check_return_handle_call(148,5295
check_return_handle_return(226,8692
finalize_return_check(326,13238
typedef struct _call_stack_32 392,15822
    byte retaddr[retaddr393,15854
    struct _call_stack_32 *next;next394,15879
} call_stack_32_t;395,15912
check_return_too_deep(402,16065
check_return_too_shallow(496,19013
check_return_ra_mangled(569,21616
check_return_handle_call(609,23020
check_debug_regs(699,27143
check_debug(713,27727
check_return_handle_return(754,29197
finalize_return_check(894,35337
typedef struct _call_stack_32 898,35401
    byte retaddr[retaddr899,35433
    struct _call_stack_32 *next;next900,35458
} call_stack_32_t;901,35491
check_return_too_deep(908,35644
check_return_too_shallow(1004,38670
check_return_ra_mangled(1082,41342
add_call_site(1151,43727
find_call_site(1159,43951
is_observed_call_site(1169,44199
start_enforcing(1175,44340
add_return_target(1213,45634
unsigned first_ret_from[first_ret_from1251,47402
    RETURN_FROM_EXPECTED_CALLEE 1254,47484
    RETURN_FOR_FIRST_TIME 1255,47536
    RETURN_UNKNOWN_CALLEE 1260,47850
reverse_check_ret_source(1265,47912
at_iret_exception(1284,48627
at_pushregret_exception(1316,49925
at_vbjmp_exception(1349,51248
at_vbpop_exception(1384,52720
at_mso_rct_exception(1424,54624
    enum {MSO_PATTERN_SIZE MSO_PATTERN_SIZE1499,57993
          MSO_PATTERN_ADD_ESP 1500,58040
          MSO_PATTERN_ADD_ESP            = 0xc483,xc4831500,58040
          MSO_PATTERN_LEA_EBX_OFFSET 1501,58091
          MSO_PATTERN_LEA_EBX 1502,58137
          MSO_PATTERN_LEA_EBX            = 0x1d8d,x1d8d1502,58137
          MSO_PATTERN_LEA_EBX_DISP_OFFSET=1503,58188
          MSO_PATTERN_LEA_EBX_DISP_OFFSET= 2 + MSO_PATTERN_LEA_EBX_OFFSET,1503,58188
          MSO_PATTERN_POPAD_POPFD_OFFSET 1504,58263
          MSO_PATTERN_POPAD_POPFD 1505,58310
          MSO_PATTERN_POPAD_POPFD        = 0x9d61,x9d611505,58310
          MSO_PATTERN_MAX_AC_OFFSET 1506,58361
licdll_pattern_match(1609,62225
    enum {LICDLL_PATTERN_SIZE LICDLL_PATTERN_SIZE1611,62289
          LICDLL_PATTERN_MOV_EDX_ESP_24 1612,62339
          LICDLL_PATTERN_MOV_EDX_ESP_24     = 0x2424548b,x2424548b1612,62339
          LICDLL_PATTERN_24_POPFD_OFFSET 1613,62397
          LICDLL_PATTERN_24_POPFD_POPAD_RET 1614,62447
          LICDLL_PATTERN_24_POPFD_POPAD_RET = 0xc3619d24xc3619d241614,62447
at_licdll_rct_exception(1642,63195
ret_after_call_check(1685,65048

x86/sideline.c,2677
#    define RUN_SIG 52,2211
#    define RUN_SIG60,2519
     typedef pid_t thread_t;61,2539
#    define THREAD_STACK_SIZE 62,2568
#define OPTVERB_3 81,2995
#define VERB_3 83,3034
#define VERB_2 84,3051
#define SAMPLE_COUNT_THRESHOLD 87,3129
#define SAMPLE_TO_OPTIMIZE_RATIO 89,3236
volatile fragment_t * sideline_trace;95,3425
int num_processors;98,3508
thread_id_t pause_for_sideline;101,3593
event_t paused_for_sideline_event;102,3625
event_t resume_from_sideline_event;103,3660
file_t logfile;108,3802
typedef struct _sample_entry_t 123,4412
    ptr_uint_t    tag;124,4445
    int     counter;125,4468
    struct  _sample_entry_t * next;126,4489
} sample_entry_t;127,4555
typedef struct _sample_table_t 129,4574
    uint  hash_bits;130,4607
    uint  hash_mask;131,4628
    hash_function_t  hash_func;132,4649
    uint           hash_mask_offset;133,4681
    uint  capacity;134,4757
    uint  entries;135,4777
    mutex_t         lock;136,4796
    sample_entry_t **table;table137,4868
} sample_table_t;138,4938
#define INITIAL_HASH_BITS 140,4957
static sample_table_t table;142,4987
static fragment_t * fragment_now_optimizing;144,5103
typedef struct _remember_entry_t 151,5322
    fragment_t  *f;f152,5357
    fragment_t  *replacement;replacement154,5405
    struct _remember_entry_t * next;156,5442
} remember_entry_t;157,5479
typedef struct _remember_list_t 159,5500
    dcontext_t *dcontext;dcontext160,5534
    remember_entry_t *list;list161,5560
    struct _remember_list_t * next;162,5588
} remember_list_t;163,5624
static remember_list_t *remember;remember165,5644
static int num_samples;168,5763
static int num_optimized;171,5801
static int num_opt_with_no_synch;172,5827
static thread_id_t child_tid;178,5978
static HANDLE child_handle;180,6023
static thread_t child;182,6068
static void *stack;stack183,6091
static event_t wake_event;186,6119
static event_t asleep_event;187,6146
static event_t exited_event;188,6175
static volatile bool child_sleep;191,6265
static volatile bool child_exit;192,6299
sideline_init(218,7156
sideline_exit(298,9652
add_sideline_prefix(386,12151
finalize_sideline_prefix(396,12531
remove_sideline_profiling(409,12930
sideline_start(422,13374
sideline_stop(432,13573
sideline_run(446,13952
optimize_trace_wrapper(484,15022
sideline_sample(490,15171
sideline_examine_traces(525,16418
sideline_optimize(579,18326
sideline_cleanup_replacement(771,25649
find_hottest_entry(834,27785
update_sample_entry(854,28220
sideline_fragment_delete(887,28998
remove_sample_entry(904,29569
add_remember_entry(925,30136
create_thread(973,31715
delete_thread(1002,32589

x86/sideline.h,30
#define _SIDELINE_H_ 41,1873

x86/steal_reg.c,155
restore_state(92,3542
expand_pusha(135,4957
expand_popa(168,6063
use_edi(213,8030
use_different_reg(270,10462
use_ebx(409,16122
steal_reg(444,17269

x86/steal_reg.h,136
#define X86_STEAL_REG_H40,1913
#define EDI_VAL_IN_MEM 58,2888
#define EDI_VAL_IN_EBX 59,2913
#define EDI_VAL_IN_EBX_AND_MEM 60,2938

x86/x86_code.c,264
get_xmm_vals(52,2281
thread_starting(67,2690
dynamo_start(79,3011
auto_setup(121,4579
native_get_retstack_idx(209,7532
new_thread_setup(229,8271
nt_continue_setup(286,10219
safe_read_fast(335,11944
is_safe_read_pc(347,12246
safe_read_resume_pc(355,12426

x86/x86_to_x64.c,582
static const reg_id_t pushad_registers[pushad_registers49,2182
pre(54,2418
replace(62,2672
opnd_change_base_reg_to_64(71,2929
instr_is_string_operation(111,4436
instr_change_base_reg_to_64(130,5016
translate_indirect_jump(158,6090
translate_indirect_call(178,6817
translate_push(201,7742
translate_push_imm(275,11101
translate_pop(322,12855
translate_pusha(384,15525
translate_popa(425,17326
translate_into(466,19252
translate_load_far_pointer(480,19732
translate_leave(512,21113
translate_pushf(534,22008
translate_popf(562,23239
translate_x86_to_x64(582,24041

x86/interp.c,4727
int app_jump=89,3042
instr_t *instr;instr90,3076
int sn_bb_skip_list[sn_bb_skip_list91,3110
int sn_list_length=92,3289
enum { DIRECT_XFER_LENGTH 119,3966
#define BRANCH_LIMIT 139,4999
volatile bool bb_lock_start;158,5910
file_t bbdump_file 161,5956
void surya_foo(167,6027
interp_init(178,6107
static int num_rets_removed;191,6376
interp_exit(197,6440
    app_pc start_pc;227,7247
    bool app_interp;228,7268
    bool for_cache;230,7436
    bool record_vmlist;231,7500
    bool mangle_ilist;232,7562
    bool record_translation;233,7625
    bool has_bb_building_lock;234,7701
    file_t outf;235,7789
    bool pass_to_client;238,7966
    bool post_client;242,8231
    bool for_trace;243,8307
    overlap_info_t *overlap_info;overlap_info247,8417
    instrlist_t *ilist;ilist251,8607
    uint flags;252,8631
    void *vmlist;vmlist253,8647
    app_pc end_pc;254,8665
    bool native_exec;255,8684
    bool native_call;256,8764
    instrlist_t **unmangled_ilist;unmangled_ilist258,8845
    bool full_decode;262,8960
    bool follow_direct;263,9045
    bool check_vm_area;264,9110
    uint num_elide_jmp;265,9184
    uint num_elide_call;266,9208
    app_pc last_page;267,9233
    app_pc cur_pc;268,9255
    app_pc instr_start;269,9274
    app_pc checked_end;270,9298
    cache_pc exit_target;271,9364
    uint exit_type;272,9435
    bool invalid_instr_hack;274,9505
    instr_t *instr;instr276,9541
    int eflags;277,9597
    app_pc pretend_pc;278,9613
} build_bb_t;280,9726
build_bb_t t_bb;282,9741
init_build_bb(289,10011
reset_overlap_info(310,10732
update_overlap_info(320,11023
# define BBPRINT(342,11931
#  define BBPRINT(349,12207
#  define BBPRINT(354,12413
static bool reached_image_entry 386,13137
check_for_image_entry(389,13205
set_reached_image_entry(400,13483
reached_image_entry_yet(408,13647
must_not_be_inlined(423,14023
must_not_be_elided(456,15197
must_escape_from(484,16196
bb_add_native_direct_xfer(536,18278
check_for_stopping_point(597,21153
eflags_analysis(643,23170
check_new_page_start(716,26381
check_new_page_contig(740,27447
check_new_page_jmp(774,28953
bb_process_invalid_instr(827,31409
follow_direct_jump(906,35294
bb_process_ubr(934,36418
follow_direct_call(1024,40727
bb_stop_prior_to_instr(1054,41852
bb_process_call_direct(1065,42201
instr_is_call_sysenter_pattern(1128,44757
bb_verify_sysenter_pattern(1180,46888
bb_process_SEH_push(1215,48311
        typedef struct _borland_seh_frame_t 1304,53545
            EXCEPTION_REGISTRATION reg;1305,53591
            reg_t xbp;1306,53631
        } borland_seh_frame_t;1307,53675
bb_process_fs_ref_opnd(1455,61995
bb_process_fs_ref(1499,64182
bb_process_mov_seg(1607,68989
bb_process_ignorable_syscall(1664,71216
bb_process_shared_syscall(1737,74250
bb_process_non_ignorable_syscall(1774,75673
bb_process_syscall(1800,76708
bb_process_indcall_syscall(1875,79447
bb_process_interrupt(1891,79934
bb_process_convertible_indcall(1931,81550
read_from_IAT(2150,90895
is_targeting_convertible_IAT(2163,91276
bb_process_IAT_convertible_indjmp(2251,94726
bb_process_IAT_convertible_indcall(2390,100348
bb_process_float_pc(2490,104301
instr_will_be_exit_cti(2505,104918
client_check_syscall(2519,105426
client_process_bb(2564,107429
build_bb_ilist(2910,124015
bb_build_abort(4300,189862
expand_should_set_translation(4338,191536
mangle_bb_ilist(4355,192120
build_app_bb_ilist(4424,195205
decode_as_bb(4442,195945
decode_trace(4476,197339
find_app_bb_end(4510,198504
app_bb_overlaps(4522,198914
report_native_module(4542,199592
build_native_exec_bb(4563,200418
at_native_exec_gateway(4692,205987
init_interp_build_bb(4871,214634
exit_interp_build_bb(4938,217866
build_basic_block_fragment(4953,218409
recreate_bb_ilist(5097,224035
recreate_fragment_ilist(5183,227903
process_nops_for_trace(5411,237884
regenerate_custom_exit_stub(5435,239020
tracelist_add(5509,242100
tracelist_add_after(5528,242724
insert_increment_stat_counter(5548,243339
insert_restore_spilled_xcx(5582,245031
insert_transparent_comparison(5616,246445
mangle_x64_ib_in_trace(5660,248168
mangle_indirect_branch_in_trace(5742,251972
fixup_last_cti(5964,261096
append_trace_speculate_last_ibl(6179,269677
append_ib_trace_last_ibl_exit_stat(6335,276378
extend_trace(6419,280258
create_exit_jmp(6522,284609
mangle_trace(6554,285709
instr_eflags_to_fragment_eflags(6828,298109
forward_eflags_analysis(6852,298962
#define DF_LOGLEVEL(6895,301032
decode_fragment(6899,301144
#undef DF_LOGLEVEL7585,336025
decode_fragment_exact(7591,336154
copy_fragment(7612,336948
shift_ctis_in_fragment(7724,341486
add_profile_call(7841,346890
emulate(7868,347793

vmareas.c,13382
    VM_WRITABLE 76,2697
    VM_WRITABLE     = 0x0001,x000176,2697
    VM_UNMOD_IMAGE 80,2936
    VM_UNMOD_IMAGE  = 0x0002,x000280,2936
    VM_DELETE_ME 81,2966
    VM_DELETE_ME    = 0x0004,x000481,2966
    VM_WAS_FUTURE 85,3262
    VM_WAS_FUTURE   = 0x0008,x000885,3262
    VM_DR_HEAP 86,3337
    VM_DR_HEAP      = 0x0010,x001086,3337
    VM_ONCE_ONLY 87,3389
    VM_ONCE_ONLY    = 0x0020,x002087,3389
    VM_MADE_READONLY 93,3724
    VM_MADE_READONLY = VM_WRITABLE/VM_WRITABLE93,3724
    VM_DELAY_READONLY 97,4019
    VM_DELAY_READONLY = 0x0080,x008097,4019
    VM_PATTERN_REVERIFY 108,4690
    VM_PATTERN_REVERIFY = 0x0100,x0100108,4690
    VM_DRIVER_ADDRESS 111,4734
    VM_DRIVER_ADDRESS   = 0x0200,x0200111,4734
    VM_PERSISTED_CACHE 124,5347
    VM_PERSISTED_CACHE     = 0x0400,x0400124,5347
    VM_EXECUTED_FROM 127,5456
    VM_EXECUTED_FROM       = 0x0800,x0800127,5456
    VM_ADD_TO_SHARED_DATA 133,5684
    VM_ADD_TO_SHARED_DATA  = 0x1000,x1000133,5684
#define SANDBOX_FLAG(137,5764
typedef struct _ro_vs_sandbox_data_t 140,5895
    uint written_count;145,6128
    uint selfmod_execs;154,6614
    uint ro2s_xfers;156,6651
    uint s2ro_xfers;157,6672
} ro_vs_sandbox_data_t;159,6700
typedef struct vm_area_t 170,7259
    app_pc start;171,7286
    app_pc end;172,7304
    uint vm_flags;178,7604
    uint frag_flags;182,7728
    char *comment;comment184,7762
        fragment_t *frags;frags199,8414
        void *client;client201,8503
    } custom;202,8525
} vm_area_t;203,8539
typedef struct thread_data_t 208,8691
    vm_area_vector_t areas;209,8722
    vm_area_t *last_area;last_area211,8810
    app_pc last_decode_area_page_pc;220,9357
    bool   last_decode_area_valid;221,9394
    uint thrown_exceptions;223,9487
} thread_data_t;225,9572
#define SHOULD_LOCK_VECTOR(227,9590
#define LOCK_VECTOR(232,9820
#define UNLOCK_VECTOR(241,10268
static vm_area_vector_t *executable_areas;executable_areas256,11028
static vm_area_vector_t *dynamo_areas;dynamo_areas257,11071
static coarse_info_t **coarse_to_delete;coarse_to_delete264,11348
static vm_area_vector_t *pretend_writable_areas;pretend_writable_areas270,11556
vm_area_vector_t *patch_proof_areas;patch_proof_areas273,11668
vm_area_vector_t *emulate_write_areas;emulate_write_areas278,11849
vm_area_vector_t *IAT_areas;IAT_areas285,12154
static vm_area_vector_t *written_areas;written_areas290,12302
static vm_area_vector_t *futureexec_areas;futureexec_areas298,12581
static vm_area_vector_t *app_flushed_areas;app_flushed_areas303,12776
static app_pc tamper_resistant_region_start,311,12987
static app_pc tamper_resistant_region_start, tamper_resistant_region_end;311,12987
static thread_data_t *shared_data;shared_data324,13603
typedef struct _pending_delete_t 326,13674
    app_pc start;329,13793
    app_pc end;330,13811
    fragment_t *frags;frags333,13902
    uint ref_count;335,14002
    uint flushtime_deleted;336,14022
    struct _pending_delete_t *next;next338,14099
} pending_delete_t;339,14135
typedef struct _deletion_lists_t 342,14228
    pending_delete_t *shared_delete;shared_delete349,14642
    pending_delete_t *shared_delete_tail;shared_delete_tail351,14749
    uint shared_delete_count;353,14832
    fragment_t *lazy_delete_list;lazy_delete_list359,15066
    fragment_t *lazy_delete_tail;lazy_delete_tail361,15152
    uint lazy_delete_count;363,15231
    bool move_pending;365,15331
} deletion_lists_t;366,15354
static deletion_lists_t *todelete;todelete368,15375
typedef struct _last_deallocated_t 370,15411
    bool unload_in_progress;388,16429
    app_pc last_unload_base;389,16458
    size_t last_unload_size;390,16487
} last_deallocated_t;398,16919
static last_deallocated_t *last_deallocated;last_deallocated399,16941
#define MULTI_ALLOC_DC(412,17604
#define GET_DATA(413,17667
#define GET_VECTOR(416,17821
#define SHARED_VECTOR_RWLOCK(420,18121
#define ASSERT_VMAREA_DATA_PROTECTED(426,18383
# define ASSERT_VMAREA_VECTOR_PROTECTED(435,18804
# define ASSERT_VMAREA_VECTOR_PROTECTED(443,19261
#define MAXIMUM_VIOLATION_NAME_LENGTH 447,19392
#define VMVECTOR_INITIALIZE_VECTOR(449,19434
bool vm_areas_exited 523,21815
typedef struct _multi_entry_t 546,23067
    fragment_t *f;f547,23099
    uint      flags;552,23355
    fragment_t *next_vmarea;next_vmarea554,23462
    fragment_t *prev_vmarea;prev_vmarea555,23491
    fragment_t *also_vmarea;also_vmarea556,23520
    app_pc pc;559,23699
} multi_entry_t;560,23714
#define FRAG_MULTI(563,23807
#define FRAG_MULTI_INIT(565,23871
#define FRAG_NEXT(567,23971
#define FRAG_NEXT_ASSIGN(570,24099
#define FRAG_PREV(577,24304
#define FRAG_PREV_ASSIGN(580,24432
#define FRAG_ALSO(588,24713
#define FRAG_ALSO_DEL_OK(592,24967
#define FRAG_ALSO_ASSIGN(595,25107
#define FRAG_PC(605,25462
#define FRAG_PC_ASSIGN(608,25571
#define FRAG_FRAG(615,25761
#define FRAG_FRAG_ASSIGN(618,25870
#define FRAG_ID(625,26064
vm_make_writable(632,26305
vm_make_unwritable(643,26635
revert_memory_regions(671,27797
print_vm_flags(695,28689
print_vm_area(711,29313
print_vm_areas(769,31606
print_contig_vm_areas(780,31866
print_pending_list(797,32316
writelock_if_not_already(813,32857
vm_area_vector_check_size(823,33087
vm_area_merge_fraglists(848,34055
add_vm_area(895,36243
adjust_coarse_unit_bounds(1230,53123
remove_vm_area(1275,55066
binary_search(1452,63742
lookup_addr(1513,66074
vm_area_overlap(1523,66400
vm_areas_reset_init(1533,66721
dynamo_vm_areas_init(1541,66946
vm_areas_init(1552,67274
vm_areas_statistics(1627,70313
vm_areas_reset_free(1650,71146
vm_areas_exit(1665,71684
vm_areas_thread_reset_init(1772,75431
vm_areas_thread_init(1783,75878
vm_areas_thread_reset_free(1791,76101
vm_areas_thread_exit(1804,76540
vmvector_set_callbacks(1822,77138
vmvector_print(1839,77760
vmvector_add(1848,78001
vmvector_add_replace(1858,78358
vmvector_remove(1878,79014
vmvector_remove_containing_area(1894,79540
vmvector_overlap(1920,80342
vmvector_lookup(1938,80931
vmvector_lookup_data(1950,81289
vmvector_lookup_prev_next(1980,82301
vmvector_modify_data(2013,83346
vmvector_init_vector(2030,83943
vmvector_create_vector(2038,84160
vmvector_reset_vector(2048,84441
vmvector_free_vector(2089,86190
vmvector_delete_vector(2097,86401
vmvector_iterator_start(2116,87028
vmvector_iterator_hasnext(2127,87263
vmvector_iterator_startover(2134,87440
vmvector_iterator_peek(2150,87864
vmvector_iterator_next(2172,88636
vmvector_iterator_stop(2181,88893
print_executable_areas(2197,89329
print_dynamo_areas(2203,89419
print_futureexec_areas(2212,89601
print_written_areas(2220,89745
free_written_area(2227,89843
add_written_area(2239,90298
add_executable_vm_area_check_IAT(2316,93689
add_executable_vm_area_helper(2490,102891
vm_area_load_coarse_unit(2552,105680
add_executable_vm_area(2626,109551
add_executable_region(2730,113869
remove_executable_vm_area(2742,114363
remove_executable_region(2760,114994
vm_area_delay_load_coarse_units(2770,115303
free_nonexec_coarse_and_unlock(2812,117090
add_futureexec_vm_area(2859,118889
remove_futureexec_vm_area(2884,119897
futureexec_vm_area_overlap(2897,120330
is_executable_address(2909,120669
get_executable_area_vm_flags(2923,121030
get_executable_area_flags(2943,121578
get_coarse_info_internal(2963,122208
get_executable_area_coarse_info(3042,125919
mark_executable_area_coarse_frozen(3051,126181
executable_areas_match_flags(3088,127781
is_executable_area_writable(3130,129663
is_executable_area_writable_overlap(3152,130551
is_pretend_or_executable_writable(3165,130977
executable_vm_area_coarse_overlap(3178,131385
executable_vm_area_persisted_overlap(3192,131826
executable_vm_area_executed_from(3204,132247
executable_area_overlap_bounds(3232,133629
vm_area_coarse_iter_start(3282,135878
vm_area_coarse_iter_find_next(3297,136420
vm_area_coarse_iter_hasnext(3320,137331
vm_area_coarse_iter_next(3326,137573
vm_area_coarse_iter_stop(3333,137764
is_executable_area_on_all_selfmod_pages(3344,138074
was_executable_area_writable(3365,138972
is_executable_area_selfmod(3397,140377
is_executable_area_dyngen(3409,140672
is_valid_address(3421,140916
update_dynamo_vm_areas(3434,141330
are_dynamo_vm_areas_stale(3459,142199
mark_dynamo_vm_areas_stale(3470,142493
dynamo_vm_areas_lock(3480,142858
dynamo_vm_areas_unlock(3501,143594
self_owns_dynamo_vm_area_lock(3518,144137
dynamo_vm_areas_start_reading(3531,144635
dynamo_vm_areas_done_reading(3554,145442
add_dynamo_vm_area(3564,145735
remove_dynamo_vm_area(3591,146958
add_dynamo_heap_vm_area(3614,147735
is_dynamo_area_buffer(3636,148696
remove_dynamo_heap_areas(3643,148860
is_dynamo_address(3670,150016
is_pretend_writable_address(3687,150588
pretend_writable_vm_area_overlap(3702,151167
get_address_comment(3715,151510
executable_vm_area_overlap(3740,152154
executable_areas_lock(3752,152477
executable_areas_unlock(3758,152552
dynamo_vm_area_overlap(3766,152756
is_on_stack(3782,153253
is_address_on_stack(3829,155137
is_driver_address(3837,155372
#define MESSAGE_EXEC_VIOLATION 3856,155920
#define MESSAGE_CONTACT_VENDOR 3857,156001
const char * const action_message[action_message3858,156090
const uint action_event_id[action_event_id3868,156572
fill_security_violation_target(3881,156873
get_security_violation_name(3890,157128
is_exempt_threat_name(4001,161440
security_violation_report(4030,162530
security_violation_internal_main(4138,167266
security_violation_action(4474,182945
security_violation_main(4533,185401
security_violation_internal(4549,186080
security_violation(4574,187219
END_DATA_SECTION(4584,187621
is_in_futureexec_area(4601,188241
is_dyngen_code(4611,188460
is_direct_jmp_to_image(4625,188797
check_trampoline_displaced_code(4649,189672
check_origins_bb_pattern(4721,192900
check_origins_trim_region_helper(4966,204087
check_origins_helper(4985,204973
check_origins(5482,230354
vm_area_fragment_self_write(5526,232146
    SIMULATE_INIT 5570,234183
    SIMULATE_GENERIC 5571,234212
    SIMULATE_AT_ADDR 5572,234241
    SIMULATE_AT_FRAGNUM 5573,234270
    SIMULATE_WIPE_STACK 5574,234299
    SIMULATE_OVER 5575,234328
    SIMULATE_OVER       = 0x1000,x10005575,234328
next_simulate_at_fragment(5592,234959
simulate_attack(5641,236667
print_entry(5702,238798
print_fraglist(5722,239518
print_fraglists(5758,241112
print_frag_arealist(5771,241501
area_contains_frag_pc(5787,241976
prepend_entry_to_fraglist(5803,242464
prepend_fraglist(5828,243478
dyngen_diagnostics(5853,244447
app_memory_pre_alloc(5915,246711
app_memory_allocation(5959,248713
app_memory_deallocation(6075,253961
flush_and_remove_executable_vm_area(6160,258259
tamper_resistant_region_add(6186,259338
tamper_resistant_region_overlap(6209,260226
app_memory_protection_change(6237,261586
app_memory_flush(6915,296664
was_address_flush_start(6976,299309
handle_delay_readonly(6995,299995
check_thread_vm_area_cleanup(7034,301839
check_thread_vm_area_abort(7077,303700
allow_xfer_for_frag_flags(7093,304327
check_thread_vm_area(7159,307405
set_thread_decode_page_start(8018,348966
check_in_last_thread_vm_area(8052,350247
remove_shared_vmlist(8103,352972
vm_area_add_fragment(8164,355593
acquire_vm_areas_lock(8280,360065
acquire_vm_areas_lock_if_not_already(8287,360237
release_vm_areas_lock(8294,360422
frag_also_list_areas_unique(8306,360827
exec_area_bounds_match(8342,362237
vm_area_add_to_list(8383,363973
vm_area_destroy_list(8503,369458
vm_list_overlaps(8510,369614
remove_fraglist_entry(8545,370849
vm_area_check_clean_fraglist(8604,373050
vm_area_clean_fraglist(8641,374545
vm_area_remove_fragment(8695,377076
add_to_pending_list(8740,378629
print_lazy_deletion_list(8791,380674
check_lazy_deletion_list_consistency(8806,381072
remove_from_lazy_deletion_list(8819,381348
move_lazy_list_to_pending_delete(8845,382242
add_to_lazy_deletion_list(8905,385201
check_lazy_deletion_list(8989,389159
unlink_fragments_for_deletion(9044,391455
vm_area_unlink_fragments(9086,393078
vm_area_unlink_incoming(9283,403338
vm_area_check_shared_pending(9322,404750
vm_area_flush_fragments(9539,414668
vm_area_flush_coarse_unit(9637,418937
vm_area_allsynch_flush_fragments(9712,422411
vm_area_coarse_units_reset_free(9887,431165
coarse_region_should_persist(9937,433580
vm_area_coarse_region_freeze(10007,436518
vm_area_coarse_units_freeze(10118,442078
remove_thread_vm_area(10161,443847
thread_vm_area_overlap(10178,444456
handle_modified_code(10199,445181
get_selfmod_exec_counter(10621,466897
vm_area_selfmod_check_clear_exec_count(10672,469018
mark_unload_start(10833,476921
mark_unload_future_added(10853,477647
mark_unload_end(10874,478452
is_in_last_unloaded_region(10959,482626
is_currently_unloaded_region(10980,483269
is_unreadable_or_currently_unloaded_region(10993,483543
print_last_deallocated(11018,484319
safe_apc_or_thread_target(11055,485529
apc_thread_policy_helper(11070,485933
    enum {PIC_SHELLCODE_MATCH PIC_SHELLCODE_MATCH11098,487079
    enum {PIC_SHELLCODE_MATCH = 0x0000e853}x0000e85311098,487079
aslr_report_violation(11252,493790
# define INT_TO_PC(11324,496905
print_vector_msg(11327,496966
check_vec(11334,497107
vmvector_tests(11346,497471
unit_test_vmareas(11389,499277

vmareas.h,2137
#define _VMAREAS_H_ 42,1931
#define EMPTY_REGION_BASE 47,2074
#define EMPTY_REGION_SIZE 48,2161
#define UNIVERSAL_REGION_BASE 49,2201
#define UNIVERSAL_REGION_SIZE 51,2297
#define UNIVERSAL_REGION_END 53,2397
    VECTOR_SHARED 60,2531
    VECTOR_SHARED        = 0x0001,x000160,2531
    VECTOR_FRAGMENT_LIST 61,2566
    VECTOR_FRAGMENT_LIST = 0x0002,x000261,2566
    VECTOR_NEVER_MERGE_ADJACENT 63,2669
    VECTOR_NEVER_MERGE_ADJACENT = 0x0004,x000463,2669
    VECTOR_NEVER_OVERLAP 65,2776
    VECTOR_NEVER_OVERLAP = 0x0008,x000865,2776
    VECTOR_NO_LOCK 69,2938
    VECTOR_NO_LOCK       = 0x0010,x001069,2938
#define VECTOR_NEVER_MERGE 72,2977
struct vm_area_vector_t 82,3462
    struct vm_area_t *buf;buf83,3488
    int size;84,3515
    int length;85,3544
    uint flags;86,3560
    read_write_lock_t lock;91,3780
    void (*free_payload_func)free_payload_func95,3875
    void *(*split_payload_func)split_payload_func99,4015
    bool (*should_merge_func)should_merge_func108,4498
    void *(*merge_payload_func)merge_payload_func113,4754
#define VMVECTOR_ALLOC_VECTOR(119,5011
typedef struct vmvector_iterator_t 125,5260
    vm_area_vector_t *vector;vector126,5297
    int index;127,5327
} vmvector_iterator_t;128,5342
vmvector_empty(170,6689
#define USING_PRETEND_WRITABLE(419,13816
    ACTION_TERMINATE_PROCESS,545,18338
    ACTION_CONTINUE,546,18368
    ACTION_TERMINATE_THREAD,547,18418
    ACTION_THROW_EXCEPTION,548,18447
} action_type_t;549,18475
#  define USING_FUTURE_EXEC_LIST 572,19340
#  define USING_FUTURE_EXEC_LIST 577,19641
    DO_APP_MEM_PROT_CHANGE,597,20292
    FAIL_APP_MEM_PROT_CHANGE,598,20365
    PRETEND_APP_MEM_PROT_CHANGE,600,20493
    SUBSET_APP_MEM_PROT_CHANGE,601,20572
    DR_MODIFY_HALT 612,21026
    DR_MODIFY_NOP 613,21105
    DR_MODIFY_FAIL 614,21187
    DR_MODIFY_ALLOW 615,21241
    DR_MODIFY_OFF 616,21325
#    define APC_API 777,27109
#    define APC_API779,27163
    APC_TARGET_NATIVE,790,27384
    APC_TARGET_WINDOWS,791,27408
    THREAD_TARGET_NATIVE,792,27433
    THREAD_TARGET_WINDOWS793,27460
} apc_thread_type_t;794,27486

perfctr.h,40
#define GUI_ALARM_UPDATE_RATIO 39,1842

perscache.h,6395
#define _PERSCACHE_H_ 41,1871
struct _coarse_info_t 70,3262
    bool frozen:frozen71,3286
    bool persisted:persisted72,3305
    bool in_use:in_use73,3327
    bool has_persist_info:has_persist_info77,3508
    bool primary_for_module:primary_for_module82,3734
    bool stubs_readonly:stubs_readonly84,3820
    bool is_local:is_local89,4011
    void *cache;cache92,4103
    void *htable;htable98,4352
    void *th_htable;th_htable99,4431
    void *pclookup_last_htable;pclookup_last_htable102,4579
    void *stubs;stubs104,4667
    cache_pc fcache_return_prefix;106,4711
    cache_pc trace_head_return_prefix;107,4746
    cache_pc ibl_ret_prefix;108,4785
    cache_pc ibl_call_prefix;109,4814
    cache_pc ibl_jmp_prefix;110,4844
    coarse_incoming_t *incoming;incoming112,4874
    cache_pc cache_start_pc;117,5053
    cache_pc cache_end_pc;118,5082
    cache_pc stubs_start_pc;119,5149
    cache_pc stubs_end_pc;120,5206
    size_t mmap_size;125,5502
    void *pclookup_htable;pclookup_htable127,5606
    uint flags;131,5760
    cache_pc mmap_pc;132,5834
    size_t mmap_ro_size;137,6079
    file_t fd;139,6183
    size_t persisted_source_mmap_size;144,6335
    app_pc_table_t *rct_table;rct_table147,6433
    app_pc_table_t *rac_table;rac_table148,6464
    uint ibl_pending_used;152,6630
    app_rva_t *hotp_ppoint_vec;hotp_ppoint_vec163,7156
    uint hotp_ppoint_vec_num;164,7188
    uint stubs_write_count;168,7332
    struct _coarse_info_t *non_frozen;non_frozen174,7562
    mutex_t lock;187,7985
    mutex_t incoming_lock;190,8145
    app_pc base_pc;195,8280
    app_pc end_pc;196,8339
    const char *module;module198,8410
    module_digest_t module_md5;203,8599
    app_pc persist_base;205,8656
    ssize_t mod_shift;207,8721
# define COARSE_32_FLAG(214,8902
# define COARSE_32_FLAG(216,8996
typedef struct _pending_freeze_t 243,9742
    bool entrance_stub;244,9777
    bool trace_head;245,9801
    app_pc tag;246,9822
    cache_pc cur_pc;247,9838
    cache_pc link_cti_opnd;248,9859
    bool elide_ubr;249,9930
    struct _pending_freeze_t *next;next250,10003
} pending_freeze_t;251,10039
struct _coarse_freeze_info_t 253,10060
    coarse_info_t *src_info;src_info254,10091
    coarse_info_t *dst_info;dst_info255,10120
    cache_pc cache_start_pc;256,10149
    cache_pc cache_cur_pc;257,10178
    cache_pc stubs_start_pc;258,10205
    cache_pc stubs_cur_pc;259,10234
    bool unlink;260,10261
    pending_freeze_t *pending;pending261,10278
    size_t app_code_size;264,10391
    uint num_cbr;265,10417
    uint num_jmp;266,10435
    uint num_call;267,10453
    uint num_indbr;268,10472
    uint num_elisions;270,10516
    uint added_fallthrough;272,10589
    uint added_indbr_mangle;273,10617
    uint added_indbr_stub;274,10701
    uint added_jecxz_mangle;275,10760
    PERSISTENT_CACHE_MAGIC 319,11928
    PERSISTENT_CACHE_MAGIC = 0x244f4952,x244f4952319,11928
    PERSISTENT_CACHE_VERSION 320,11980
    PERSCACHE_X86_32 326,12139
    PERSCACHE_X86_32             = 0x00000001,x00000001326,12139
    PERSCACHE_X86_64 327,12186
    PERSCACHE_X86_64             = 0x00000002,x00000002327,12186
    PERSCACHE_SEEN_BORLAND_SEH 335,12539
    PERSCACHE_SEEN_BORLAND_SEH   = 0x00000004,x00000004335,12539
    PERSCACHE_ELIDED_UBR 338,12629
    PERSCACHE_ELIDED_UBR         = 0x00000008,x00000008338,12629
    PERSCACHE_SUPPORT_RAC 341,12740
    PERSCACHE_SUPPORT_RAC        = 0x00000010,x00000010341,12740
    PERSCACHE_SUPPORT_RCT 342,12787
    PERSCACHE_SUPPORT_RCT        = 0x00000020,x00000020342,12787
    PERSCACHE_ENTIRE_MODULE_RCT 345,12897
    PERSCACHE_ENTIRE_MODULE_RCT  = 0x00000040,x00000040345,12897
    PERSCACHE_SUPPORT_TRACES 348,12990
    PERSCACHE_SUPPORT_TRACES     = 0x00000080,x00000080348,12990
    PERSCACHE_MAP_RW_SEPARATE 351,13108
    PERSCACHE_MAP_RW_SEPARATE    = 0x00000100,x00000100351,13108
    PERSCACHE_EXEMPTION_OPTIONS 354,13227
    PERSCACHE_EXEMPTION_OPTIONS  = 0x00000200,x00000200354,13227
    PERSCACHE_CODE_INVALID 362,13620
    PERSCACHE_CODE_INVALID       = 0x00000400,x00000400362,13620
    PERSCACHE_MODULE_MD5_SHORT 368,13761
    PERSCACHE_MODULE_MD5_SHORT       = 0x00000001,x00000001368,13761
    PERSCACHE_MODULE_MD5_COMPLETE 369,13834
    PERSCACHE_MODULE_MD5_COMPLETE    = 0x00000002,x00000002369,13834
    PERSCACHE_GENFILE_MD5_SHORT 371,13953
    PERSCACHE_GENFILE_MD5_SHORT      = 0x00000004,x00000004371,13953
    PERSCACHE_GENFILE_MD5_COMPLETE 372,14017
    PERSCACHE_GENFILE_MD5_COMPLETE   = 0x00000008,x00000008372,14017
    PERSCACHE_MODULE_MD5_AT_LOAD 376,14221
    PERSCACHE_MODULE_MD5_AT_LOAD     = 0x00000010,x00000010376,14221
typedef struct _persisted_module_info_t 384,14508
    app_pc base;385,14550
    uint checksum;386,14604
    uint timestamp;387,14623
    uint64 image_size;391,14778
    uint64 code_size;392,14801
    uint64 file_version;393,14875
    module_digest_t module_md5;402,15240
} persisted_module_info_t;403,15272
typedef struct _persisted_footer_t 409,15469
    module_digest_t self_md5;414,15715
    uint magic;415,15791
} persisted_footer_t;416,15807
typedef struct _coarse_persisted_info_t 438,17026
    uint magic;442,17153
    uint version;443,17169
    size_t header_len;449,17367
    size_t data_len;450,17390
    uint flags;455,17527
    uint build_number;458,17570
    persisted_module_info_t modinfo;461,17635
    size_t start_offs;464,17749
    size_t end_offs;465,17772
    uint tls_offs_base;468,17870
    size_t instrument_rw_len;474,18051
    size_t stubs_len;477,18111
    size_t ibl_jmp_prefix_len;478,18133
    size_t ibl_call_prefix_len;479,18164
    size_t ibl_ret_prefix_len;480,18196
    size_t trace_head_return_prefix_len;481,18227
    size_t fcache_return_prefix_len;482,18268
    size_t cache_len;485,18334
    size_t post_cache_pad_len;486,18356
    size_t pad_len;488,18504
    size_t instrument_rx_len;489,18563
    size_t view_pad_len;490,18593
    size_t stub_htable_len;493,18695
    size_t cache_htable_len;494,18723
    size_t rct_htable_len;495,18752
    size_t rac_htable_len;496,18779
    size_t reloc_len;497,18806
    size_t hotp_patch_list_len;499,18858
    size_t instrument_ro_len;501,18945
    size_t option_string_len;504,19054
} coarse_persisted_info_t;587,22089

perscache.c,2357
#define MAX_PCACHE_OPTIONS_STRING 61,2293
#define OPTION_STRING_ALIGNMENT 64,2473
#define CLIENT_ALIGNMENT 66,2599
typedef struct _jmp_tgt_list_t 69,2667
    app_pc tag;70,2701
    cache_pc jmp_end_pc;71,2717
    struct _jmp_tgt_list_t *next;next72,2742
} jmp_tgt_list_t;73,2776
coarse_unit_mark_primary(110,4019
coarse_unit_unmark_primary(134,4881
coarse_unit_mark_in_use(149,5329
coarse_unit_create(156,5456
coarse_unit_free(221,8530
coarse_unit_init(245,9316
coarse_unit_reset_free_internal(260,9835
coarse_unit_reset_free(371,14327
static file_t perscache_user_directory 382,14757
perscache_init(385,14818
perscache_fast_exit(434,17055
perscache_slow_exit(449,17465
coarse_units_freeze_translate(460,17727
coarse_units_freeze_all(489,18871
coarse_replace_unit(611,24818
coarse_unit_freeze(668,27080
transfer_coarse_stub(882,36766
transfer_coarse_stub_fix_trace_head(936,39284
push_pending_freeze(959,40361
redirect_to_tgt_ibl_prefix(1021,43193
transfer_coarse_fragment(1041,44021
coarse_unit_shift_jmps_internal(1196,50728
coarse_unit_shift_jmps(1283,55112
coarse_merge_process_stub(1315,56648
coarse_merge_update_jmps(1421,62318
coarse_merge_without_dups(1548,68827
coarse_unit_merge(1840,84947
perscache_dirname(2139,98686
get_persist_dir(2178,100281
coarse_unit_check_persist_space(2205,101205
persist_get_options_level(2235,102318
persist_get_relevant_options(2255,103193
get_persist_filename(2275,104098
print_module_digest(2398,109246
persist_calculate_self_digest(2409,109622
persist_calculate_module_digest(2430,110491
persist_modinfo_cmp(2472,112583
persist_record_base_mismatch(2503,114386
get_unique_name(2525,115334
coarse_unit_merge_with_disk(2558,116782
coarse_unit_calculate_persist_info(2666,122175
coarse_unit_merge_persist_info(2788,127695
write_persist_file(2900,132548
pad_persist_file(2913,133020
coarse_unit_set_persist_data(2935,133815
coarse_unit_persist_rename(3125,141448
instrument_persist_section(3175,143726
dr_persist_start(3204,144874
dr_persist_size(3213,145072
dr_fragment_persistable(3222,145282
coarse_unit_persist(3251,146275
persist_check_option_compat(3603,161393
pcache_dir_check_permissions(3680,164691
persist_get_name_and_open(3719,166387
coarse_unit_load(3792,169448
exists_coarse_ibl_pending_table(4372,195071
mark_module_exempted(4396,196098

rct.c,229
find_address_references(90,3521
rct_check_ref_and_add(175,6886
is_address_taken(243,9376
is_address_after_call(249,9521
rct_ind_branch_check(262,9954
rct_known_targets_init(537,21998
rct_init(556,22571
rct_exit(569,23034

buildmark.c,190
const char dynamorio_buildmark[dynamorio_buildmark38,1802
const char dynamorio_buildmark[dynamorio_buildmark40,1866
const char dynamorio_version_string[dynamorio_version_string43,1920

rct.h,157
#define RCT_H40,1789
enum {RCT_CACHE_EXEMPT_NONE RCT_CACHE_EXEMPT_NONE42,1804
      RCT_CACHE_EXEMPT_MODULES 43,1837
      RCT_CACHE_EXEMPT_ALL 44,1873

config.c,2840
# define GLOBAL_CONFIG_DIR 52,2066
# define LOCAL_CONFIG_ENV 53,2110
# define LOCAL_CONFIG_SUBDIR 54,2143
# define GLOBAL_CONFIG_SUBDIR 55,2185
# define LOCAL_CONFIG_ENV 57,2224
# define LOCAL_CONFIG_SUBDIR 58,2264
# define GLOBAL_CONFIG_SUBDIR 59,2305
#define CFG_SFX_64 65,2461
#define CFG_SFX_32 66,2491
# define CFG_SFX 68,2532
# define CFG_SFX 70,2566
# define VERBOSE 75,2673
# define VERBOSE 77,2698
# undef ASSERT82,2877
# undef ASSERT_NOT_IMPLEMENTED83,2892
# undef ASSERT_NOT_TESTED84,2923
# undef ASSERT_NOT_REACHED85,2949
# undef FATAL_USAGE_ERROR86,2976
# undef USAGE_ERROR87,3002
# define ASSERT(88,3022
# define ASSERT_NOT_IMPLEMENTED(89,3055
# define ASSERT_NOT_TESTED(90,3104
# define ASSERT_NOT_REACHED(91,3148
# define FATAL_USAGE_ERROR(92,3192
# define USAGE_ERROR(93,3241
#   define print_file(97,3370
#   define print_file(99,3445
#  define print_file(102,3502
# undef STDERR104,3557
# define STDERR 105,3572
# undef our_snprintf106,3595
#  define our_snprintf 108,3632
#  define our_snprintf 110,3672
# undef DECLARE_NEVERPROT_VAR112,3712
# define DECLARE_NEVERPROT_VAR(113,3742
# define INFO(118,3870
# define INFO(122,4013
static const char *const config_var[config_var126,4112
static const wchar_t *const w_config_var[w_config_var140,4484
#define NUM_CONFIG_VAR 154,4875
typedef struct _config_val_t 159,5029
    char val[val160,5060
    bool has_value;162,5139
    bool app_specific;164,5223
    bool from_env;165,5246
} config_val_t;166,5265
typedef struct _config_vals_t 168,5282
    config_val_t vals[vals169,5314
} config_vals_t;170,5353
typedef struct _config_info_t 172,5371
    char fname_app[fname_app173,5403
    char fname_default[fname_default174,5437
    const char *query;query181,5831
            config_val_t answer;184,5883
            bool have_answer;185,5916
        } q;186,5946
        config_vals_t *v;v187,5959
    } u;188,5985
    bool has_1config;189,5994
} config_info_t;190,6016
static config_vals_t myvals;192,6034
static config_info_t config;193,6063
static bool config_initialized;194,6092
static config_info_t *config_reread_info;config_reread_info201,6424
static config_vals_t *config_reread_vals;config_reread_vals202,6466
my_getenv(206,6585
get_config_val_ex(223,6992
get_config_val(246,7727
set_config_from_env(252,7823
process_config_line(275,8721
read_config_file(331,11268
#   define BUFSIZE 340,11756
config_read(403,14070
config_reread(513,18838
get_config_val_other(584,21512
get_config_val_other_app(612,22578
get_config_val_other_arch(630,23261
config_init(638,23587
config_heap_init(650,23870
config_heap_exit(661,24231
config_exit(678,24674
get_parameter_ex(699,25339
get_parameter(720,25992
get_unqualified_parameter(726,26115
config_init(735,26355
config_exit(740,26383

config.h,84
#define _CONFIG_H_ 39,1824
# define PARAM_STR(79,2705
# define PARAM_STR(90,2995

dispatch.h,288
#define _DISPATCH_H_ 40,1905
#define NO_HOOK 86,3761
#define HOOK_ENABLED_HELPER 88,3802
#define HOOK_ENABLED 90,3858
#define ENTER_DR_HOOK 92,3942
#define EXIT_DR_HOOK 93,4010
#define ENTERING_DR(95,4078
#define EXITING_DR(100,4189
#define BACK_TO_NATIVE_AFTER_SYSCALL 107,4375

os_shared.h,11012
#define OS_SHARED_H41,1899
enum {VM_ALLOCATION_BOUNDARY VM_ALLOCATION_BOUNDARY43,1920
    HEAP_ERROR_SUCCESS 85,3468
    HEAP_ERROR_CANT_RESERVE_IN_REGION 87,3587
    HEAP_ERROR_NOT_AT_PREFERRED 89,3721
typedef uint heap_error_code_t;91,3761
    RAW_ALLOC_RESERVE_ONLY 97,3891
    RAW_ALLOC_RESERVE_ONLY = 0x0001,x000197,3891
    RAW_ALLOC_COMMIT_ONLY 98,3928
    RAW_ALLOC_COMMIT_ONLY  = 0x0002,x000298,3928
    RAW_ALLOC_32BIT 101,3984
    RAW_ALLOC_32BIT        = 0x0004,x0004101,3984
    DR_STATE_PEB 211,8133
    DR_STATE_PEB              = 0x0001,x0001211,8133
    DR_STATE_TEB_MISC 212,8205
    DR_STATE_TEB_MISC         = 0x0002,x0002212,8205
    DR_STATE_STACK_BOUNDS 213,8286
    DR_STATE_STACK_BOUNDS     = 0x0004,x0004213,8286
    DR_STATE_ALL 215,8377
    DR_STATE_ALL              =     ~0,215,8377
} dr_state_flags_t;216,8443
    TERMINATE_PROCESS 247,9129
    TERMINATE_PROCESS = 0x1,x1247,9129
    TERMINATE_THREAD 248,9158
    TERMINATE_THREAD  = 0x2,x2248,9158
    TERMINATE_CLEANUP 260,9893
    TERMINATE_CLEANUP = 0x4 x4260,9893
} terminate_flags_t;261,9977
    ILLEGAL_INSTRUCTION_EXCEPTION,267,10172
    UNREADABLE_MEMORY_EXECUTION_EXCEPTION,268,10207
    IN_PAGE_ERROR_EXCEPTION,269,10250
} exception_type_t;270,10279
    DUMPCORE_INTERNAL_EXCEPTION 278,10533
    DUMPCORE_INTERNAL_EXCEPTION = 0x0001,x0001278,10533
    DUMPCORE_SECURITY_VIOLATION 279,10575
    DUMPCORE_SECURITY_VIOLATION = 0x0002,x0002279,10575
    DUMPCORE_DEADLOCK 280,10617
    DUMPCORE_DEADLOCK           = 0x0004,x0004280,10617
    DUMPCORE_ASSERTION 281,10659
    DUMPCORE_ASSERTION          = 0x0008,x0008281,10659
    DUMPCORE_FATAL_USAGE_ERROR 282,10701
    DUMPCORE_FATAL_USAGE_ERROR  = 0x0010,x0010282,10701
    DUMPCORE_CLIENT_EXCEPTION 284,10767
    DUMPCORE_CLIENT_EXCEPTION   = 0x0020,x0020284,10767
    DUMPCORE_TIMEOUT 286,10816
    DUMPCORE_TIMEOUT            = 0x0040,x0040286,10816
    DUMPCORE_CURIOSITY 287,10858
    DUMPCORE_CURIOSITY          = 0x0080,x0080287,10858
    DUMPCORE_HOTP_FAILURE 290,11052
    DUMPCORE_HOTP_FAILURE       = 0x0100,x0100290,11052
    DUMPCORE_OUT_OF_MEM 292,11101
    DUMPCORE_OUT_OF_MEM         = 0x0200,x0200292,11101
    DUMPCORE_OUT_OF_MEM_SILENT 293,11143
    DUMPCORE_OUT_OF_MEM_SILENT  = 0x0400,x0400293,11143
    DUMPCORE_INCLUDE_STACKDUMP 295,11230
    DUMPCORE_INCLUDE_STACKDUMP  = 0x0800,x0800295,11230
    DUMPCORE_WAIT_FOR_DEBUGGER 296,11272
    DUMPCORE_WAIT_FOR_DEBUGGER  = 0x1000,x1000296,11272
    DUMPCORE_HOTP_DETECTION 299,11418
    DUMPCORE_HOTP_DETECTION     = 0x2000,x2000299,11418
    DUMPCORE_HOTP_PROTECTION 300,11493
    DUMPCORE_HOTP_PROTECTION    = 0x4000,x4000300,11493
    DUMPCORE_DR_ABORT 303,11599
    DUMPCORE_DR_ABORT           = 0x8000,x8000303,11599
    DUMPCORE_FORGE_ILLEGAL_INST 307,11793
    DUMPCORE_FORGE_ILLEGAL_INST = 0x10000,x10000307,11793
    DUMPCORE_FORGE_UNREAD_EXEC 308,11836
    DUMPCORE_FORGE_UNREAD_EXEC  = 0x20000,x20000308,11836
    DUMPCORE_APP_EXCEPTION 314,12244
    DUMPCORE_APP_EXCEPTION      = 0x40000,x40000314,12244
    DUMPCORE_TRY_EXCEPT 315,12287
    DUMPCORE_TRY_EXCEPT         = 0x80000,x80000315,12287
    DUMPCORE_UNSUPPORTED_APP 316,12367
    DUMPCORE_UNSUPPORTED_APP    = 0x100000,x100000316,12367
    DUMPCORE_OPTION_PAUSE 319,12424
    DUMPCORE_OPTION_PAUSE       = DUMPCORE_WAIT_FOR_DEBUGGER 319,12424
                                  DUMPCORE_INTERNAL_EXCEPTION 320,12488
                                  DUMPCORE_SECURITY_VIOLATION 321,12552
                                  DUMPCORE_DEADLOCK 322,12616
                                  DUMPCORE_ASSERTION 323,12680
                                  DUMPCORE_FATAL_USAGE_ERROR 324,12744
                                  DUMPCORE_CLIENT_EXCEPTION 326,12833
                                  DUMPCORE_UNSUPPORTED_APP 328,12905
                                  DUMPCORE_TIMEOUT 329,12969
                                  DUMPCORE_CURIOSITY 330,13033
                                  DUMPCORE_DR_ABORT 332,13122
                                  DUMPCORE_OUT_OF_MEM 334,13194
                                  DUMPCORE_OUT_OF_MEM_SILENT,335,13258
typedef void * dr_auxlib_handle_t;356,13898
typedef void (*dr_auxlib_routine_ptr_t)dr_auxlib_routine_ptr_t358,13998
typedef uint64 dr_auxlib64_handle_t;364,14235
typedef uint64 dr_auxlib64_routine_ptr_t;366,14344
typedef void * shlib_handle_t;375,14638
typedef void (*shlib_routine_ptr_t)shlib_routine_ptr_t376,14669
typedef uint64 dr_auxlib64_handle_t;381,14863
typedef uint64 dr_auxlib64_routine_ptr_t;382,14900
#define DR_MEMPROT_NONE 405,15658
#define DR_MEMPROT_READ 406,15735
#define DR_MEMPROT_WRITE 407,15790
#define DR_MEMPROT_EXEC 408,15846
# define DR_MEMPROT_GUARD 410,15919
#define DR_MEMPROT_PRETEND_WRITE 420,16411
    DR_MEMTYPE_FREE,426,16530
    DR_MEMTYPE_IMAGE,427,16588
    DR_MEMTYPE_DATA,428,16652
    DR_MEMTYPE_RESERVED,429,16716
} dr_mem_type_t;430,16798
typedef struct _dr_mem_info_t 435,16885
    byte          *base_pc;base_pc437,16962
    size_t        size;439,17016
    uint          prot;441,17093
    dr_mem_type_t type;443,17143
} dr_mem_info_t;444,17167
#define MEMPROT_NONE 448,17210
#define MEMPROT_READ 449,17248
#define MEMPROT_WRITE 450,17286
#define MEMPROT_EXEC 451,17325
# define MEMPROT_GUARD 453,17378
#define SAFE_READ_VAL(469,18099
    SELFPROT_DATA_RARE 527,20826
    SELFPROT_DATA_RARE   = 0x001,x001527,20826
    SELFPROT_DATA_FREQ 531,21018
    SELFPROT_DATA_FREQ   = 0x002,x002531,21018
    SELFPROT_DATA_CXTSW 535,21173
    SELFPROT_DATA_CXTSW  = 0x004,x004535,21173
    SELFPROT_GLOBAL 543,21481
    SELFPROT_GLOBAL      = 0x008,x008543,21481
    SELFPROT_DCONTEXT 544,21515
    SELFPROT_DCONTEXT    = 0x010,x010544,21515
    SELFPROT_LOCAL 546,21681
    SELFPROT_LOCAL       = 0x020,x020546,21681
    SELFPROT_CACHE 547,21715
    SELFPROT_CACHE       = 0x040,x040547,21715
    SELFPROT_STACK 548,21799
    SELFPROT_STACK       = 0x080,x080548,21799
    SELFPROT_GENCODE 551,22047
    SELFPROT_GENCODE     = 0x100,x100551,22047
    SELFPROT_ON_CXT_SWITCH 562,22513
    SELFPROT_ON_CXT_SWITCH = (SELFPROT_DATA_CXTSW 562,22513
    SELFPROT_ON_CXT_SWITCH = (SELFPROT_DATA_CXTSW | SELFPROT_GLOBAL562,22513
                              | SELFPROT_DATA_FREQ)565,22736
    SELFPROT_ANY_DATA_SECTION 566,22789
    SELFPROT_ANY_DATA_SECTION = (SELFPROT_DATA_RARE 566,22789
    SELFPROT_ANY_DATA_SECTION = (SELFPROT_DATA_RARE | SELFPROT_DATA_FREQ 566,22789
                                 SELFPROT_DATA_CXTSW)567,22864
    DATASEC_NEVER_PROT 574,23019
    DATASEC_RARELY_PROT,575,23047
    DATASEC_FREQ_PROT,576,23072
    DATASEC_CXTSW_PROT,577,23095
    DATASEC_NUM,578,23119
#define DATASEC_WRITABLE(591,23484
#define NEVER_PROTECTED_SECTION 598,23838
#define RARELY_PROTECTED_SECTION 599,23882
#define FREQ_PROTECTED_SECTION 600,23923
#define CXTSW_PROTECTED_SECTION 601,23967
#define DATASEC_PROTECTED(607,24184
#define DECLARE_FREQPROT_VAR(613,24449
#define DECLARE_CXTSWPROT_VAR(618,24666
#define DECLARE_NEVERPROT_VAR(623,24886
#define SELF_PROTECT_ON_CXT_SWITCH 628,25106
#define SELF_PROTECT_LOCAL(633,25330
#define SELF_PROTECT_GLOBAL(638,25507
#define ASSERT_LOCAL_HEAP_PROTECTED(643,25683
#define ASSERT_LOCAL_HEAP_UNPROTECTED(646,25841
#define SELF_PROTECT_DATASEC(650,26003
#define SELF_UNPROTECT_DATASEC(654,26181
#define OS_OPEN_READ 681,27082
#define OS_OPEN_WRITE 682,27115
#define OS_OPEN_APPEND 683,27148
#define OS_OPEN_REQUIRE_NEW 684,27221
#define OS_EXECUTE 685,27254
#define OS_SHARE_DELETE 686,27323
#define OS_OPEN_FORCE_OWNER 687,27392
#define OS_OPEN_ALLOW_LARGE 688,27461
#define OS_OPEN_CLOSE_ON_FORK 689,27532
#define OS_OPEN_RESERVED 690,27593
    CREATE_DIR_ALLOW_EXISTING 705,28322
    CREATE_DIR_ALLOW_EXISTING = 0x0,x0705,28322
    CREATE_DIR_REQUIRE_NEW 711,28603
    CREATE_DIR_REQUIRE_NEW    = 0x1,x1711,28603
    CREATE_DIR_FORCE_OWNER 712,28640
    CREATE_DIR_FORCE_OWNER    = 0x2,x2712,28640
} create_directory_flags_t;713,28677
#define OS_SEEK_SET 726,29270
#define OS_SEEK_CUR 727,29313
#define OS_SEEK_END 728,29364
    STACK_EXECUTION_VIOLATION 785,31858
    HEAP_EXECUTION_VIOLATION 786,31900
    RETURN_TARGET_VIOLATION 787,31942
    RETURN_DIRECT_RCT_VIOLATION 788,31985
    INDIRECT_CALL_RCT_VIOLATION 789,32055
    INDIRECT_JUMP_RCT_VIOLATION 790,32097
    HOT_PATCH_DETECTOR_VIOLATION 792,32170
    HOT_PATCH_PROTECTOR_VIOLATION 793,32212
    HOT_PATCH_FAILURE 795,32335
    ATTACK_SIMULATION_VIOLATION 798,32404
    ATTACK_SIM_NUDGE_VIOLATION 799,32447
    ASLR_TARGET_VIOLATION 802,32538
    GBOP_SOURCE_VIOLATION 804,32593
    PROCESS_CONTROL_VIOLATION 807,32677
    APC_THREAD_SHELLCODE_VIOLATION 809,32748
    INVALID_VIOLATION 811,32917
    ALLOWING_OK 816,33162
    ALLOWING_BAD 817,33204
    NO_VIOLATION_BAD_INTERNAL_STATE 819,33257
    NO_VIOLATION_OK_INTERNAL_STATE 820,33299
} security_violation_t;821,33340
    INITIAL_STACK_EMPTY 833,33770
    INITIAL_STACK_BOTTOM_REACHED 834,33812
    INITIAL_STACK_BOTTOM_NOT_REACHED 835,33854
} initial_call_stack_status_t;836,33895
typedef HANDLE event_t;855,34594
typedef struct linux_event_t *event_t;event_t857,34624
# define POST_SYSCALL_PC(911,36402
# define POST_SYSCALL_PC(918,36867
    AFTER_INTERCEPT_LET_GO,925,37052
    AFTER_INTERCEPT_LET_GO_ALT_DYN,926,37080
    AFTER_INTERCEPT_TAKE_OVER,930,37339
    AFTER_INTERCEPT_DYNAMIC_DECISION,931,37370
    AFTER_INTERCEPT_TAKE_OVER_SINGLE_SHOT,934,37513
} after_intercept_action_t;935,37598
    void *callee_arg;callee_arg945,37979
    app_pc start_pc;946,38053
    priv_mcontext_t mc;947,38118
} app_state_at_intercept_t;948,38171
typedef after_intercept_action_t intercept_function_t(952,38324
    JMP_REL32_OPCODE 958,38567
    JMP_REL32_OPCODE  = 0xe9,xe9958,38567
    JMP_REL32_SIZE 959,38597
    CALL_REL32_OPCODE 960,38667
    CALL_REL32_OPCODE = 0xe8,xe8960,38667
    JMP_ABS_IND64_OPCODE 962,38709
    JMP_ABS_IND64_OPCODE    = 0xff,xff962,38709
    JMP_ABS_IND64_SIZE 963,38745
    JMP_ABS_MEM_IND64_MODRM 964,38825
    JMP_ABS_MEM_IND64_MODRM = 0x25,x25964,38825
#define INJECT_LOCATION_IS_LDR(988,39977
#define INJECT_LOCATION_IS_LDR_NON_DEFAULT(989,40049
    INJECT_LOCATION_Invalid 991,40139
    INJECT_LOCATION_LdrpLoadDll 992,40207
    INJECT_LOCATION_LdrpLoadImportModule 993,40272
    INJECT_LOCATION_LdrCustom 994,40336
    INJECT_LOCATION_LdrLoadDll 995,40407
    INJECT_LOCATION_LdrDefault 996,40468
    INJECT_LOCATION_KiUserApc 1004,40973
    INJECT_LOCATION_KiUserException 1005,41015
    INJECT_LOCATION_MAX 1006,41088
    INJECT_LOCATION_MAX = INJECT_LOCATION_KiUserException,1006,41088
#define LANDING_PAD_AREA_SIZE 1038,42115
#define MAX_HOOK_DISPLACED_LENGTH 1039,42155
# define LANDING_PAD_SIZE 1044,42403
# define LANDING_PAD_SIZE 1049,42617

dispatch_no_threading_bkp.c,2074
# define CPU_SETSIZE 58,2226
# define CPU_SET(59,2261
# define CPU_CLR(60,2340
# define CPU_ISSET(61,2419
# define CPU_ZERO(63,2509
# define CPU_COUNT(64,2580
# define DISPLAY_STRING(73,2928
# define DISPLAY_STRING(75,2982
#define NULL_TERMINATE(78,3043
static struct timeval itr1_start_time,81,3148
static struct timeval itr1_start_time,itr1_end_time,81,3148
static struct timeval itr1_start_time,itr1_end_time,total_itr1_time;81,3148
static struct timeval itr1_start_time,84,3225
static struct timeval itr1_start_time,itr1_end_time,84,3225
static struct timeval itr1_start_time,itr1_end_time,total_itr1_time;84,3225
static unsigned long long sn_tr_cnt=86,3357
long total_sec_sn=116,3774
long total_usec_sn=117,3813
static int sn_fragment_instr_cnt1[sn_fragment_instr_cnt1118,3854
found_client_sysenter(166,5162
void pk_dummy_func(175,5460
void __attribute__ ((noinline)) pk_phase_change_dummy(186,5592
void __attribute__ ((noinline)) pk_set_affinity(195,5770
dispatch(244,7168
is_stopping_point(972,38178
dispatch_enter_fcache_stats(1000,39042
dispatch_enter_fcache(1080,42756
enter_fcache(1226,49564
handle_special_tag(1269,50921
dispatch_at_stopping_point(1288,51603
dispatch_enter_native(1326,52948
dispatch_enter_dynamorio(1379,55456
dispatch_exit_fcache(1618,67076
dispatch_exit_fcache_stats(1846,77593
adjust_syscall_continuation(2361,99432
handle_system_call(2395,100957
handle_post_system_call(2651,112640
handle_callback_return(2709,114611
issue_last_system_call_from_app(2759,116801
transfer_to_dispatch(2781,117612
long get_total_comp_time(2811,118790
int get_dispatch_call_cnt(2815,118847
int* get_frag_instr_cnt_arr(2819,118910
void __attribute__ ((noinline)) sn_fcache_exit_syscalls_subcat1(2824,119039
void __attribute__ ((noinline)) sn_fcache_exit_ind_br_subcat2(2830,119309
void __attribute__ ((noinline)) sn_fcache_exit_dir_br_subcat3(2836,119628
void __attribute__ ((noinline)) sn_fcache_exit_no_dir_link_subcat4(2842,119967
void __attribute__ ((noinline)) sn_fcache_exit_dir_syscall_subcat5(2848,120255

perfctr.c,265
int perfctr_eventset;48,2017
struct {int num;49,2039
struct {int num;char *name;name49,2039
struct {int num;char *name;} papi_events[papi_events49,2039
void hardware_perfctr_init(82,3555
void hardware_perfctr_exit(132,4943
void perfctr_update_gui(154,5525

emit.c,337
#define STATS_FCACHE_ADD(61,2409
get_last_fragment_body_instr_pc(78,3192
stress_test_recreate(95,3720
final_exit_shares_prev_stub(143,5734
set_linkstub_fields(187,7791
emit_fragment_common(404,17299
emit_invisible_fragment(1005,42768
emit_fragment(1019,43342
emit_fragment_ex(1033,43862
emit_fragment_as_replacement(1045,44349

emit.h,26
#define _EMIT_H_ 42,1932

etrans.c,214
struct jaddr_etrans_list* get_jaddr_list_head(17,1096
struct jaddr_etrans_list* get_jaddr_list_tail(31,1335
void add_bb_etrans_jaddr(38,1445
void set_jaddr_list_head(106,3399
int get_list_entry_count(114,3572

etrans.h,283
struct jaddr_etrans_list{jaddr_etrans_list17,1240
  app_pc jaddr;18,1266
  struct jaddr_etrans_list *next;next19,1308
struct jaddr_etrans_list *root;root23,1374
struct jaddr_etrans_list *tail;tail24,1451
struct jaddr_etrans_list *head;head25,1527
int l_entry_cnt;27,1724

fcache.c,9633
#define FCACHE_OPTION(69,2920
#define MAX_SINGLE_MULTIPLE 87,3832
#define MIN_EMPTY_HOLE(117,5192
#define MIN_UNIT_END_HOLE(127,5632
#define START_PC_ALIGNMENT 130,5744
#define SLOT_ALIGNMENT(138,6129
typedef struct _live_header_t 148,6643
    fragment_t *f;f150,6739
} live_header_t;151,6758
#define HEADER_SIZE(156,6926
#define HEADER_SIZE_FROM_CACHE(158,7021
typedef struct _empty_slot_t 186,8282
    cache_pc  start_pc;187,8313
    uint      flags;191,8515
    fragment_t  *next_fcache;next_fcache192,8536
    fragment_t  *prev_fcache;prev_fcache193,8614
    uint      fcache_size;194,8692
} empty_slot_t;197,8926
#define FRAG_EMPTY(201,9018
#define FRAG_START(203,9080
#define FRAG_START_ASSIGN(210,9437
#define FRAG_START_PADDING(219,9795
#define FRAG_HDR_START(226,10257
#define FRAG_SIZE(228,10341
#define FRAG_SIZE_ASSIGN(236,10754
#define FIFO_NEXT(248,11677
#define FIFO_NEXT_ASSIGN(252,11874
#define FIFO_PREV(261,12160
#define FIFO_PREV_ASSIGN(265,12357
#define FRAG_TAG(274,12643
# define FRAG_ID(278,12769
#define FIFO_UNIT(281,12853
#define USE_FIFO(288,13140
#define USE_FREE_LIST(289,13193
#define USE_FIFO_FOR_CACHE(291,13318
#define USE_FREE_LIST_FOR_CACHE(292,13366
static const uint FREE_LIST_SIZES[FREE_LIST_SIZES298,13631
#define FREE_LIST_SIZES_NUM 315,14407
typedef struct _free_list_header_t 336,15383
    struct _free_list_header_t *next;next337,15420
    ushort flags;350,16242
    ushort size;351,16260
    struct _free_list_header_t *prev;prev352,16277
} free_list_header_t;353,16315
typedef struct _free_list_footer_t 359,16538
    ushort size;360,16575
} free_list_footer_t;361,16592
#define MAX_FREE_ENTRY_SIZE 363,16615
#define FRAG_IS_FREE_LIST(369,16859
#define FRAG_NEXT_SLOT(374,17079
#define FRAG_NEXT_FREE(377,17207
#define MIN_FCACHE_SLOT_SIZE(384,17550
#define UNIT_RESERVED_SIZE(392,17782
typedef struct _fcache_unit_t 394,17862
    cache_pc start_pc;395,17894
    cache_pc end_pc;396,17963
    cache_pc cur_pc;397,18045
    cache_pc reserved_end_pc;398,18120
    size_t size;399,18193
    bool full;400,18273
    struct _fcache *cache;cache401,18349
    dcontext_t *dcontext;dcontext403,18465
    bool writable;405,18498
    bool was_trace;410,18717
    bool was_shared;411,18737
    profile_t *profile;profile412,18758
    bool pending_free;414,18789
    bool pending_flush;416,18884
    uint flushtime;418,18980
    struct _fcache_unit_t *next_global;next_global420,19139
    struct _fcache_unit_t *prev_global;prev_global421,19208
    struct _fcache_unit_t *next_local;next_local422,19277
} fcache_unit_t;423,19356
    HISTOGRAM_GRANULARITY 428,19431
    HISTOGRAM_MAX_SIZE 429,19462
typedef struct _fcache 437,19668
    bool is_trace:is_trace439,19766
    bool is_shared:is_shared440,19833
    bool is_local:is_local447,20097
    bool is_coarse:is_coarse450,20242
    fragment_t *fifo;fifo451,20264
    fcache_unit_t *units;units454,20488
    size_t size;457,20688
    mutex_t lock;462,20877
    const char *name;name465,20909
    bool consistent;466,20931
    coarse_info_t *coarse_info;coarse_info470,21094
    uint max_size;478,21446
    uint max_unit_size;479,21504
    uint max_quadrupled_unit_size;480,21528
    uint free_upgrade_size;481,21563
    uint init_unit_size;482,21591
    bool finite_cache;483,21616
    uint regen_param;484,21639
    uint replace_param;485,21661
    uint      num_regenerated;488,21722
    uint      num_replaced;489,21753
    int      wset_check;493,21973
    bool     record_wset;497,22120
    free_list_header_t *free_list[free_list499,22147
    uint free_stats_freed[free_stats_freed501,22216
    uint free_stats_reused[free_stats_reused502,22282
    uint free_stats_coalesced[free_stats_coalesced503,22349
    uint free_stats_split[free_stats_split504,22419
    uint free_stats_charge[free_stats_charge505,22498
    uint request_size_histogram[request_size_histogram507,22615
    uint free_size_histogram[free_size_histogram508,22690
} fcache_t;510,22769
typedef struct _fcache_thread_units_t 515,22862
    fcache_t *bb;bb516,22902
    fcache_t *trace;trace517,22948
    cache_pc pending_unmap_pc;519,23048
    size_t pending_unmap_size;520,23079
    bool pending_flush;522,23174
} fcache_thread_units_t;523,23198
#define ALLOC_DC(525,23224
#define PROTECT_CACHE(531,23477
#define CACHE_PROTECTED(537,23747
typedef struct _fcache_list_t 544,23994
    fcache_unit_t *units;units546,24080
    fcache_unit_t *dead;dead547,24152
    uint num_dead;551,24389
    fcache_unit_t *units_to_flush;units_to_flush559,24719
    fcache_unit_t *units_to_free;units_to_free563,24897
    fcache_unit_t *units_to_free_tail;units_to_free_tail564,24931
} fcache_list_t;565,24970
static fcache_list_t *allunits;allunits568,25037
static fcache_t *shared_cache_bb;shared_cache_bb574,25284
static fcache_t *shared_cache_trace;shared_cache_trace575,25318
vm_area_vector_t *fcache_unit_areas;fcache_unit_areas584,25703
    CACHE_BB 602,26506
    CACHE_TRACE,603,26524
    CACHE_NUM_TYPES,604,26541
#define STATS_FCACHE_ADD(609,26707
#define STATS_FCACHE_SUB(623,27406
#define STATS_FCACHE_MAX(626,27507
#define CHECK_PARAMS(666,28971
#define CHECK_WSET_PARAM(711,32318
fcache_check_option_compatibility(740,34437
fcache_reset_init(812,37781
fcache_init(875,40492
fcache_unit_profile_stop(907,41578
remove_unit_from_cache(941,42594
fcache_really_free_unit(961,43280
fcache_stats_exit(997,44515
fcache_reset_free(1030,45694
fcache_exit(1092,47713
fcache_profile_exit(1127,48690
fcache_lookup_unit(1143,49051
fcache_fragment_pclookup(1152,49353
fcache_pc_in_live_unit(1214,51617
fcache_is_writable(1232,52099
fcache_change_fragment_protection(1243,52349
in_fcache(1284,53847
fcache_create_unit(1295,54127
fcache_free_unit(1428,58922
#define FCACHE_GUARDED(1500,61801
#define SET_CACHE_PARAMS(1506,62100
fcache_cache_init(1523,63168
fcache_cache_free(1595,66129
fcache_free_list_consistency(1638,67538
fcache_cache_stats(1714,70797
get_histogram_bucket(1784,73861
fcache_shift_fragments(1795,74159
cache_extend_commitment(1877,77538
fcache_increase_size(1901,78508
fcache_thread_reset_init(2101,87240
fcache_thread_init(2107,87315
fragment_lookup_deleted(2129,88114
fragment_lookup_cache_deleted(2144,88665
fcache_thread_exit_stats(2167,89492
fcache_thread_reset_free(2180,89846
fcache_thread_exit(2204,90709
print_fifo(2217,91145
verify_fifo(2231,91550
fifo_append(2258,92444
fifo_remove(2279,93134
fifo_prepend_empty(2308,94152
check_regen_replace_ratio(2369,96771
extend_unit_end(2461,101124
try_for_more_space(2505,102853
place_fragment(2767,115350
removed_fragment_stats(2815,117519
force_fragment_from_cache(2858,119229
replace_fragments(2877,119943
replace_fifo(3048,127045
find_free_list_bucket(3076,128143
free_list_footer_from_header(3087,128470
free_list_header_from_footer(3093,128652
remove_from_free_list(3099,128818
add_to_free_list(3128,129876
find_free_list_slot(3286,137278
add_fragment_common(3490,145954
fcache_shift_start_pc(3754,158859
fcache_return_extra_space(3801,160321
get_cache_for_new_fragment(3945,166880
fcache_add_fragment(4085,172704
fcache_remove_fragment(4208,177689
get_dcontext_for_fragment(4252,179282
fcache_is_flush_pending(4273,180074
append_units_to_free_list(4283,180357
chain_fragments_for_flush(4322,181726
fcache_flush_pending_units(4432,186654
fcache_free_pending_units(4540,190879
fcache_mark_units_for_free(4573,192157
fcache_flush_all_caches(4604,193298
fcache_reset_all_caches_proactively(4652,195523
schedule_reset(4889,206361
fcache_reset_cache(4902,206700
fcache_low_on_memory(4992,210211
get_fcache_coarse_info(5099,214969
fcache_coarse_cache_delete(5110,215318
coarse_frozen_cache_size(5131,216157
fcache_coarse_init_frozen(5152,216852
fcache_coarse_set_info(5173,217785
cache_pc get_initial_shared_coarse_cache_start_pc(5185,218041
cache_pc get_initial_shared_coarse_cache_end_pc(5190,218148
cache_pc get_initial_shared_coarse_cache_cur_pc(5194,218250
cache_pc get_initial_shared_cache_start_pc(5198,218352
cache_pc get_initial_shared_cache_end_pc(5202,218444
cache_pc get_initial_shared_cache_cur_pc(5206,218532
cache_pc get_initial_private_cache_start_pc(5210,218620
cache_pc get_initial_private_cache_end_pc(5214,218714
cache_pc get_initial_private_cache_cur_pc(5218,218804
const char* get_cache_name(5228,218981
cache_pc get_last_trace_cache_start_pc(5232,219038
cache_pc get_last_trace_cache_end_pc(5236,219111
cache_pc get_last_trace_cache_cur_pc(5240,219180
int is_last_trace_cache_resized(5244,219249
cache_pc get_shared_coarse_cache_prev_end_pc(5256,219447
cache_pc get_shared_cache_prev_end_pc(5260,219543
cache_pc get_private_cache_prev_end_pc(5264,219625
void set_cache_variables_to_defaults(5268,219709
cache_pc get_initial_bb_shared_coarse_cache_start_pc(5303,220702
cache_pc get_initial_bb_shared_coarse_cache_end_pc(5307,220814
cache_pc get_initial_bb_shared_coarse_cache_cur_pc(5311,220922
cache_pc get_initial_bb_shared_cache_start_pc(5315,221030
cache_pc get_initial_bb_shared_cache_end_pc(5319,221128
cache_pc get_initial_bb_shared_cache_cur_pc(5323,221222
cache_pc get_initial_bb_private_cache_start_pc(5327,221316
cache_pc get_initial_bb_private_cache_end_pc(5331,221416
cache_pc get_initial_bb_private_cache_cur_pc(5335,221512
const char* get_bb_cache_name(5339,221608
cache_pc get_last_bb_cache_start_pc(5343,221671
cache_pc get_last_bb_cache_end_pc(5347,221744
cache_pc get_last_bb_cache_cur_pc(5351,221813

fcache.h,483
#define _FCACHE_H_ 42,1915
#define IN_TRACE_CACHE(49,2129
#define PAD_FRAGMENT_JMPS(54,2339
#define PAD_JMPS_SHIFT_START(57,2448
    RESET_ALL 65,2752
    RESET_ALL              = 0x001,x00165,2752
    RESET_BASIC_BLOCKS 67,2837
    RESET_BASIC_BLOCKS     = 0x002,x00267,2837
    RESET_TRACES 69,2925
    RESET_TRACES           = 0x004,x00469,2925
    RESET_PENDING_DELETION 74,3163
    RESET_PENDING_DELETION = 0x008,x00874,3163
#define SELF_PROTECT_CACHE(123,4757

fragment.c,13682
#define INIT_HTABLE_SIZE_SHARED_BB 59,2351
#define INIT_HTABLE_SIZE_SHARED_TRACE 60,2428
#define INIT_HTABLE_SIZE_BB 62,2528
#define INIT_HTABLE_SIZE_SHARED_FUTURE 64,2641
#  define INIT_HTABLE_SIZE_AFTER_CALL 67,2789
#define INIT_HTABLE_SIZE_FUTURE 70,2903
#define INIT_HTABLE_SIZE_COARSE 74,3038
#define INIT_HTABLE_SIZE_COARSE_TH 75,3072
#  define INIT_HTABLE_SIZE_RCT_IBT 80,3196
#define INIT_HTABLE_SIZE_TRACE 90,3484
static fragment_table_t *shared_bb;shared_bb106,4228
static fragment_table_t *shared_trace;shared_trace107,4264
static fragment_table_t *shared_future;shared_future110,4377
static per_thread_t *shared_pt;shared_pt116,4593
#define USE_SHARED_PT(118,4626
typedef struct _dead_fragment_table_t 125,4972
    fragment_entry_t *table_unaligned;table_unaligned126,5012
    uint table_flags;127,5051
    uint capacity;128,5073
    uint ref_count;129,5092
    struct _dead_fragment_table_t *next;next130,5112
} dead_fragment_table_t;131,5153
typedef struct _dead_table_lists_t 134,5251
    dead_fragment_table_t *dead_tables;dead_tables135,5288
    dead_fragment_table_t *dead_tables_tail;dead_tables_tail136,5328
} dead_table_lists_t;137,5373
static dead_table_lists_t *dead_lists;dead_lists139,5396
static rct_module_table_t rac_non_module_table;150,5881
rct_module_table_t rct_global_table;175,6856
#define NULL_TAG 178,6901
#define FAKE_TAG 180,7004
byte * hashlookup_null_target;189,7353
#define HASHLOOKUP_NULL_START_PC 190,7384
static const fragment_t null_fragment 191,7453
static const fragment_t sentinel_fragment 194,7666
static const fragment_t unlinked_fragment 204,8171
#define REAL_FRAGMENT(209,8422
#define GET_PT(214,8613
#define TABLE_PROTECTED(217,8743
#define GET_FTABLE_HELPER(221,8907
#define GET_FTABLE(229,9358
#define GET_IBT_TABLE(232,9512
#define SHOULD_OUTPUT_FRAGMENT(268,11209
#define FRAGMENT_COARSE_WRAPPER_FLAGS 273,11357
                     } coarse_emit_fragment,292,12167
typedef struct _thread_list_t 301,12522
    uint thread_num;302,12554
    uint count;303,12575
    struct _thread_list_t *next;next304,12591
} thread_list_t;305,12624
typedef struct _shared_entry_t 307,12642
    app_pc tag;308,12675
    uint num_threads;309,12691
    thread_list_t *threads;threads310,12713
    uint heap_size;311,12741
    uint cache_size;312,12761
    struct _shared_entry_t *next;next313,12782
} shared_entry_t;314,12816
# define SHARED_HASH_BITS 315,12834
static shared_entry_t ** shared_blocks;316,12863
static shared_entry_t ** shared_traces;319,13019
shared_block_lookup(325,13242
reset_shared_block_table(341,13600
add_shared_block(365,14373
print_shared_table_stats(430,16626
print_shared_stats(467,18027
static int bb_sizes[bb_sizes478,18417
static int trace_sizes[trace_sizes479,18446
static int num_bb 480,18477
static int num_traces 481,18500
record_fragment_size(484,18533
print_size_results(498,18810
#define FRAGTABLE_WHICH_HEAP(507,19117
# define UNPROT_STAT(512,19348
# define ALLOC_UNPROT_STATS(516,19488
# define DEALLOC_UNPROT_STATS(523,19970
# define CHECK_UNPROT_STATS(526,20203
check_stay_on_trace_stats_overflow(529,20286
update_lookuptable_tls(547,21115
static const char *ibl_bb_table_type_names[ibl_bb_table_type_names576,22280
static const char *ibl_trace_table_type_names[ibl_trace_table_type_names578,22390
dump_lookuptable_tls(584,22552
#define FRAGENTRY_FROM_FRAGMENT(613,23587
#define NAME_KEY 616,23727
#define ENTRY_TYPE 617,23748
static const fragment_entry_t fe_empty 620,23884
static const fragment_entry_t fe_sentinel 621,23965
#define ENTRY_TAG(622,24053
#define ENTRY_EMPTY 623,24115
#define ENTRY_SENTINEL 624,24156
#define IBL_ENTRY_IS_EMPTY(625,24200
#define IBL_ENTRY_IS_INVALID(628,24345
#define IBL_ENTRY_IS_SENTINEL(629,24410
#define ENTRY_IS_EMPTY(632,24564
#define ENTRY_IS_SENTINEL(633,24617
#define ENTRY_IS_INVALID(634,24673
#define IBL_ENTRIES_ARE_EQUAL(635,24728
#define ENTRIES_ARE_EQUAL(636,24811
#define HASHTABLE_WHICH_HEAP(637,24884
#define HTLOCK_RANK 638,24948
#define HASHTABLE_ENTRY_STATS 639,24995
hashtable_ibl_free_entry(647,25205
#define NAME_KEY 658,25565
#define ENTRY_TYPE 659,25591
#define ENTRY_TAG(662,25669
#define ENTRY_EMPTY 664,25780
#define ENTRY_SENTINEL 665,25845
#define ENTRY_IS_EMPTY(666,25914
#define ENTRY_IS_SENTINEL(667,25986
#define ENTRY_IS_INVALID(668,26062
#define ENTRIES_ARE_EQUAL(669,26138
#define HASHTABLE_WHICH_HEAP(670,26185
#define HTLOCK_RANK 671,26249
hashtable_fragment_resized_custom(677,26388
hashtable_fragment_init_internal_custom(686,26725
hashtable_fragment_study_custom(693,26860
hashtable_ibl_init_internal_custom(702,27151
hashtable_ibl_myinit(754,29252
hashtable_ibl_myfree(796,31187
hashtable_fragment_free_entry(808,31538
fragment_add_to_hashtable(822,31982
update_indirect_exit_stubs_from_table(861,33873
safely_nullify_tables(885,34673
add_to_dead_table_list(928,36714
hashtable_ibl_resized_custom(975,38714
hashtable_ibl_study_custom(1062,42987
hashtable_fragment_reset(1110,45441
#define APP_PC_EMPTY 1214,50145
#define APP_PC_SENTINEL 1216,50230
#define APP_PC_ENTRY_IS_EMPTY(1217,50288
#define APP_PC_ENTRY_IS_SENTINEL(1218,50348
#define APP_PC_ENTRY_IS_REAL(1219,50411
#define NAME_KEY 1222,50620
#define ENTRY_TYPE 1223,50644
#define ENTRY_TAG(1225,50715
#define ENTRY_EMPTY 1226,50767
#define ENTRY_SENTINEL 1227,50814
#define ENTRY_IS_EMPTY(1228,50864
#define ENTRY_IS_SENTINEL(1229,50923
#define ENTRY_IS_INVALID(1230,50985
#define ENTRIES_ARE_EQUAL(1231,51052
#define HASHTABLE_WHICH_HEAP(1232,51099
#define HTLOCK_RANK 1233,51153
#define HASHTABLE_SUPPORT_PERSISTENCE 1234,51207
hashtable_app_pc_init_internal_custom(1242,51425
hashtable_app_pc_resized_custom(1247,51540
hashtable_app_pc_study_custom(1256,51869
hashtable_app_pc_free_entry(1263,52071
fragment_initialized(1274,52390
fragment_reset_init(1281,52594
fragment_init(1396,58325
fragment_reset_free(1450,60362
fragment_exit(1576,65834
dec_table_ref_count(1718,71382
dec_all_table_ref_counts(1806,75475
fragment_thread_reset_init(1829,76405
fragment_thread_init(2006,85545
fragment_thread_reset_free(2060,87424
fragment_thread_exit(2185,92633
fragment_fork_init(2227,93880
fragment_heap_size(2253,94690
fragment_create_heap(2268,95256
fragment_init_heap(2286,96021
fragment_create(2341,97905
fragment_recreate_with_linkstubs(2497,104347
fragment_free(2551,106657
fragment_stubs_end_pc(2597,108203
fragment_body_end_pc(2607,108476
get_total_linkcount(2621,108873
fragment_get_fragment_delete_mutex(2638,109347
fragment_release_fragment_delete_mutex(2646,109571
    LOOKUP_TRACE 2658,109953
    LOOKUP_TRACE   = 0x001,x0012658,109953
    LOOKUP_BB 2659,109981
    LOOKUP_BB      = 0x002,x0022659,109981
    LOOKUP_PRIVATE 2660,110009
    LOOKUP_PRIVATE = 0x004,x0042660,110009
    LOOKUP_SHARED 2661,110037
    LOOKUP_SHARED  = 0x008,x0082661,110037
fragment_lookup_type(2666,110157
fragment_lookup(2758,114094
fragment_lookup_trace(2768,114437
fragment_lookup_bb(2777,114741
fragment_lookup_shared_bb(2786,115045
fragment_lookup_same_sharing(2796,115375
hashtable_pclookup(2805,115725
fragment_pclookup_by_htable(2826,116360
fragment_pclookup(2895,119014
fragment_pclookup_with_linkstubs(2923,120290
fragment_add(2940,120781
fragment_delete(3008,123661
fragment_record_translation_info(3132,128405
fragment_remove_shared_no_flush(3177,130320
fragment_unlink_for_deletion(3272,134198
update_private_ibt_table_ptrs(3356,137829
update_private_ptr_to_shared_ibt_table(3415,140235
update_all_private_ibt_table_ptrs(3506,144079
fragment_prepare_for_removal_from_table(3543,145578
fragment_prepare_for_removal(3620,149101
fragment_ibl_stat_account(3688,151853
fragment_remove_from_ibt_tables(3715,152898
fragment_remove_ibl_entries_in_region(3766,155318
fragment_remove_all_ibl_in_region(3809,157370
fragment_remove(3830,158266
fragment_replace(3870,159848
fragment_shift_fcache_pointers(3905,161403
fragment_copy_data_fields(3980,164365
dump_lookup_table(4008,165362
is_fragment_index_wraparound(4044,166727
fragment_add_ibl_target_helper(4060,167379
fragment_add_ibl_target(4146,171052
fragment_create_future(4382,182925
fragment_free_future(4403,183743
fragment_create_and_add_future(4413,184149
fragment_delete_future(4427,184722
fragment_delete_future_filter(4444,185356
fragment_delete_futures_in_region(4452,185558
fragment_lookup_future(4469,186370
fragment_lookup_private_future(4487,187042
#define STATS_RCT_ADD(4503,187639
rct_is_global_table(4511,187920
rct_get_table(4518,188118
rct_table_lookup_internal(4530,188428
rct_table_lookup(4553,189232
rct_table_add(4569,189700
rct_table_flush_entry(4659,194416
rct_table_invalidate_range(4692,195812
rct_table_free_internal(4739,197770
rct_table_free(4747,198034
rct_table_copy(4763,198567
rct_table_merge(4772,198762
rct_table_persist_size(4786,199212
rct_table_persist(4799,199562
rct_table_resurrect(4810,199885
rct_module_table_free(4818,200202
rct_module_table_persisted_invalidate(4837,200937
rct_module_table_copy(4893,203774
rct_module_table_set(4949,206193
rct_module_persisted_table_exists(4995,208365
rct_module_live_entries(5008,208745
coarse_persisted_fill_ibl_helper(5021,209121
coarse_persisted_fill_ibl(5080,211705
fragment_after_call_lookup(5135,214189
fragment_add_after_call(5141,214313
fragment_flush_after_call(5153,214653
invalidate_after_call_target_range(5164,214979
rct_ind_branch_target_lookup(5197,216035
rct_add_valid_ind_branch_target(5207,216316
rct_flush_ind_branch_target_entry(5229,217046
invalidate_ind_branch_target_range(5239,217382
fragment_self_write(5262,218095
fragment_overlaps(5314,220504
study_all_hashtables(5348,221622
get_flushtime_last_update(5436,225488
set_flushtime_last_update(5443,225650
set_at_syscall(5450,225821
get_at_syscall(5457,225966
check_flush_queue(5469,226341
is_self_flushing(5547,229761
is_self_allsynch_flushing(5556,229986
is_self_couldbelinking(5567,230346
is_couldbelinking(5578,230725
wait_for_flusher_nolinking(5593,231348
wait_for_flusher_linking(5615,232245
check_safe_for_flush_synch(5639,233199
process_client_flush_requests(5667,234379
enter_nolinking(5702,235961
enter_couldbelinking(5811,240390
enter_threadexit(5852,242101
increment_global_flushtime(5874,242844
flush_fragments_free_futures(5960,246702
flush_fragments_synchall_start(5991,248059
flush_fragments_synchall_end(6150,256353
flush_fragments_synch_unlink_priv(6188,257885
flush_fragments_unlink_shared(6520,273537
flush_invalidate_ibl_shared_target(6628,278553
flush_fragments_end_synch(6669,280115
flush_fragments_in_region_start(6788,285354
flush_fragments_in_region_finish(6829,286940
flush_fragments_and_remove_region(6840,287287
flush_fragments_from_region(6861,288385
invalidate_code_cache(6883,289357
flush_vmvector_regions(6901,290150
fragment_output(6935,291731
init_trace_file(6949,292259
exit_trace_file(6969,292909
#define TRACEBUF_SIZE 6997,294096
#define TRACEBUF_MAKE_ROOM(6999,294124
output_trace_binary(7007,294431
output_trace(7125,298976
profile_fragment_enter(7378,308935
profile_fragment_dispatch(7424,310405
#define NAME_KEY 7466,312265
#define ENTRY_TYPE 7467,312289
static app_to_cache_t a2c_empty 7468,312323
static app_to_cache_t a2c_sentinel 7469,312373
#define ENTRY_TAG(7475,312692
#define ENTRY_EMPTY 7476,312748
#define ENTRY_SENTINEL 7477,312794
#define ENTRY_IS_EMPTY(7478,312843
#define ENTRY_IS_SENTINEL(7479,312904
#define ENTRY_IS_INVALID(7480,312968
#define ENTRIES_ARE_EQUAL(7481,313035
#define HASHTABLE_WHICH_HEAP(7482,313090
#define COARSE_HTLOCK_RANK 7484,313220
#define HTLOCK_RANK 7485,313307
#define HASHTABLE_SUPPORT_PERSISTENCE 7486,313360
#define A2C_ENTRY_IS_EMPTY(7493,313632
#define A2C_ENTRY_IS_SENTINEL(7494,313684
#define A2C_ENTRY_IS_REAL(7495,313751
hashtable_coarse_init_internal_custom(7500,313939
hashtable_coarse_resized_custom(7505,314054
hashtable_coarse_study_custom(7514,314399
hashtable_coarse_free_entry(7521,314601
coarse_lookup_internal(7553,316206
fragment_coarse_htable_create(7572,316874
fragment_coarse_htable_merge_helper(7634,319919
fragment_coarse_htable_merge(7675,321728
study_and_free_coarse_htable(7746,325136
fragment_coarse_free_entry_pclookup_table(7799,327213
fragment_coarse_htable_free(7810,327617
fragment_coarse_num_entries(7833,328497
fragment_coarse_add(7847,328813
fragment_coarse_th_lookup(7905,331335
fragment_coarse_th_unlink_and_add(7939,332710
fragment_coarse_th_add(7971,334103
IF_DEBUG_ELSE(7993,335074
fragment_coarse_lookup_in_unit(8068,338586
fragment_coarse_lookup(8112,340533
fragment_coarse_wrapper(8130,341168
fragment_coarse_lookup_wrapper(8153,342046
fragment_lookup_fine_and_coarse(8171,342606
fragment_lookup_fine_and_coarse_sharing(8201,343856
get_fragment_coarse_info(8223,344742
coarse_is_trace_head_in_own_unit(8240,345341
fragment_coarse_replace(8272,346448
#define PCLOOKUP_LAST_HTABLE_INIT_SIZE 8292,347135
#define PCLOOKUP_LAST_HTABLE_MAX_ENTRIES 8301,347628
typedef struct _pclookup_last_t 8303,347675
    app_pc tag;8304,347709
    cache_pc entry;8305,347725
} pclookup_last_t;8306,347745
pclookup_last_free(8309,347777
fragment_coarse_pclookup(8319,348131
fragment_coarse_create_entry_pclookup_table(8442,353504
fragment_coarse_entry_pclookup(8521,357656
fragment_coarse_entry_freeze(8565,359254
fragment_coarse_unit_freeze(8676,364820
fragment_coarse_htable_persist_size(8785,369720
fragment_coarse_htable_persist(8795,370072
fragment_coarse_htable_resurrect(8805,370412

fragment.h,8348
#define _FRAGMENT_H_ 43,1990
#define FRAG_IS_FUTURE 49,2089
#define FRAG_TRACE_LINKS_SHIFTED 50,2134
#define FRAG_IS_TRACE 51,2179
#define FRAG_IS_TRACE_HEAD 52,2224
#define FRAG_LINKED_OUTGOING 53,2269
#define FRAG_LINKED_INCOMING 54,2314
#define FRAG_CANNOT_DELETE 55,2359
#define FRAG_CANNOT_BE_TRACE 56,2404
#define FRAG_FAKE 63,2731
#define FRAG_WRITES_EFLAGS_6 66,2848
#define FRAG_WRITES_EFLAGS_OF 68,2956
#define FRAG_FCACHE_FREE_LIST 76,3297
#define FRAG_HAS_SYSCALL 78,3343
#define FRAG_TRACE_BUILDING 80,3464
#define FRAG_WAS_DELETED 86,3699
#define FRAG_SELFMOD_SANDBOXED 88,3820
#define FRAG_HAS_DIRECT_CTI 90,3924
#define FRAG_IS_EMPTY_SLOT 92,4047
#define FRAG_IS_EXTRA_VMAREA 94,4170
#define FRAG_IS_EXTRA_VMAREA_INIT 95,4215
# define FRAG_DYNGEN 99,4360
#  define FRAG_DYNGEN_RESTRICTED 102,4497
# define FRAG_HAS_MOV_SEG 110,4691
# define FRAG_32_BIT 115,4796
#define FRAG_MUST_END_TRACE 118,4849
#define FRAG_SHARED 120,4895
#define FRAG_TEMP_PRIVATE 124,5025
#define FRAG_TRACE_OUTPUT 126,5071
#define FRAG_CBR_FALLTHROUGH_SHORT 128,5117
#define FRAG_COARSE_GRAIN 133,5263
#define FRAG_HAS_TRANSLATION_INFO 140,5606
# define FRAG_X86_TO_X64 144,5736
# define FRAG_DO_NOT_SIDELINE 149,5872
#define FRAG_FOLLOWS_FREE_ENTRY 153,5992
#define FUTURE_FLAGS_TRANSFER 164,6557
#define FUTURE_FLAGS_ALLOWED 166,6638
enum { MAX_FRAGMENT_SIZE 170,6864
enum { MAX_FRAGMENT_SIZE = USHRT_MAX 170,6864
struct _fragment_t 176,7058
    app_pc    tag;182,7336
    uint      flags;187,7548
    ushort       size;197,7974
    byte      prefix_size;204,8245
    byte      fcache_extra;205,8333
    cache_pc  start_pc;207,8428
        linkstub_t  *incoming_stubs;incoming_stubs215,8825
        translation_info_t *translation_info;translation_info219,8987
    } in_xlate;220,9033
    fragment_t  *next_vmarea;next_vmarea222,9050
    fragment_t  *prev_vmarea;prev_vmarea223,9128
        fragment_t  *also_vmarea;also_vmarea225,9218
        uint      flushtime;229,9459
    } also;230,9488
    int       id;233,9514
    int num_calls;237,9634
    int num_rets;238,9653
typedef struct _private_fragment_t 247,9903
    fragment_t  f;248,9940
    fragment_t  *next_fcache;next_fcache249,9959
    fragment_t  *prev_fcache;prev_fcache250,10037
} private_fragment_t;251,10115
struct _future_fragment_t 259,10409
    app_pc    tag;260,10437
    uint      flags;261,10514
    linkstub_t  *incoming_stubs;incoming_stubs262,10573
typedef struct _trace_bb_info_t 266,10709
    app_pc tag;267,10743
    uint num_exits;275,11111
} trace_bb_info_t;277,11138
typedef struct _trace_only_t 282,11300
    uint64    count;284,11352
    uint64    total_time;285,11428
    linkcount_type_t count_old_pre;289,11541
    linkcount_type_t count_old_post;290,11577
    trace_bb_info_t *bbs;bbs294,11697
    uint    num_bbs;295,11723
} trace_only_t;296,11744
struct _trace_t 299,11797
    fragment_t     f;300,11815
    trace_only_t t;301,11857
typedef struct _private_trace_t 305,11928
    private_fragment_t  f;306,11962
    trace_only_t        t;307,11989
} private_trace_t;308,12016
#define TRACE_FIELDS(311,12109
#define IS_IBL_TARGET(332,13201
#define HASHTABLE_IBL_OFFSET(338,13510
typedef struct _unprot_ht_statistics_t 344,13780
    hashtable_statistics_t trace_ibl_stats[trace_ibl_stats350,14191
    hashtable_statistics_t bb_ibl_stats[bb_ibl_stats351,14256
    hashtable_statistics_t shared_syscall_hit_stats;355,14404
} unprot_ht_statistics_t;357,14507
typedef struct _fragment_entry_t 363,14671
    app_pc    tag_fragment;364,14706
    cache_pc  start_pc_fragment;365,14783
} fragment_entry_t;366,14865
#define HASHLOOKUP_SENTINEL_START_PC 368,14886
#define FRAG_TABLE_INCLUSIVE_HIERARCHY 379,15360
#define FRAG_TABLE_IBL_TARGETED 381,15515
#define FRAG_TABLE_TARGET_SHARED 383,15663
#define FRAG_TABLE_SHARED 385,15768
#define FRAG_TABLE_PERSISTENT 387,15878
#define FRAG_TABLE_TRACE 389,15986
#define NAME_KEY 393,16173
#define ENTRY_TYPE 394,16199
#define HASHTABLEX_HEADER 396,16276
#define CUSTOM_FIELDS 397,16304
#undef HASHTABLEX_HEADER399,16361
#define NAME_KEY 404,16532
#define ENTRY_TYPE 405,16553
# define HASHTABLE_ENTRY_STATS 408,16662
# define CUSTOM_FIELDS 409,16695
# define CUSTOM_FIELDS 418,17109
#define HASHTABLEX_HEADER 421,17203
#undef HASHTABLEX_HEADER423,17255
#define NAME_KEY 428,17419
#define ENTRY_TYPE 429,17443
#define CUSTOM_FIELDS 431,17514
#define HASHTABLEX_HEADER 432,17547
#undef HASHTABLEX_HEADER434,17599
typedef struct _per_thread_t 456,18704
    ibl_table_t trace_ibt[trace_ibt457,18735
    ibl_table_t bb_ibt[bb_ibt458,18806
    fragment_table_t bb;459,18871
    fragment_table_t trace;460,18896
    fragment_table_t future;461,18924
    mutex_t fragment_delete_mutex;463,19011
    file_t tracefile;465,19053
    bool           could_be_linking;468,19140
    bool           wait_for_unlink;469,19216
    bool           about_to_exit;470,19303
    bool           flush_queue_nonempty;471,19401
    event_t        waiting_for_unlink;472,19490
    event_t        finished_with_unlink;473,19567
    event_t        finished_all_unlink;474,19620
    mutex_t          linking_lock;478,19831
    bool           soon_to_be_linking;479,19866
    uint           flushtime_last_update;481,19994
    bool           at_syscall_at_flush;486,20227
    uint tracedump_num_below_threshold;489,20293
    linkcount_type_t tracedump_count_below_threshold;490,20333
} per_thread_t;492,20394
#define FCACHE_ENTRY_PC(495,20412
#define FCACHE_PREFIX_ENTRY_PC(496,20470
#define FCACHE_IBT_ENTRY_PC(498,20579
#define FRAGMENT_STRUCT_SIZE(503,20777
#define FRAGMENT_EXIT_STUBS(509,21109
#define FRAGMENT_SELFMOD_COPY_SIZE(515,21398
#define FRAGMENT_SELFMOD_COPY_PC(518,21568
#define FRAGMENT_TRANSLATION_INFO_ADDR(522,21743
#define HAS_STORED_TRANSLATION_INFO(529,22118
#define FRAGMENT_TRANSLATION_INFO(533,22296
    FRAGDEL_ALL 614,24466
    FRAGDEL_ALL               = 0x000,x000614,24466
    FRAGDEL_NO_OUTPUT 615,24505
    FRAGDEL_NO_OUTPUT         = 0x001,x001615,24505
    FRAGDEL_NO_UNLINK 616,24544
    FRAGDEL_NO_UNLINK         = 0x002,x002616,24544
    FRAGDEL_NO_HTABLE 617,24583
    FRAGDEL_NO_HTABLE         = 0x004,x004617,24583
    FRAGDEL_NO_FCACHE 618,24622
    FRAGDEL_NO_FCACHE         = 0x008,x008618,24622
    FRAGDEL_NO_HEAP 619,24661
    FRAGDEL_NO_HEAP           = 0x010,x010619,24661
    FRAGDEL_NO_MONITOR 620,24700
    FRAGDEL_NO_MONITOR        = 0x020,x020620,24700
    FRAGDEL_NO_VMAREA 621,24739
    FRAGDEL_NO_VMAREA         = 0x040,x040621,24739
    FRAGDEL_NEED_CHLINK_LOCK 623,24779
    FRAGDEL_NEED_CHLINK_LOCK  = 0x080,x080623,24779
struct _rct_module_table_t 725,27923
    app_pc_table_t *persisted_table;persisted_table726,27952
    app_pc_table_t *live_table;live_table727,27989
    app_pc live_min;732,28236
    app_pc live_max;733,28257
typedef struct _app_to_cache_t 797,30051
    app_pc app;798,30084
    cache_pc cache;803,30325
} app_to_cache_t;804,30345
#define NAME_KEY 807,30442
#define ENTRY_TYPE 808,30466
#define CUSTOM_FIELDS 810,30545
#define HASHTABLEX_HEADER 812,30592
#undef HASHTABLEX_HEADER814,30644
#define PROTECT_FRAGMENT_ENABLED(1101,40521
get_ibl_per_type_statistics(1118,41061
typedef struct _tracedump_file_header_t 1162,42361
    int version;1163,42403
    bool x64;1164,42483
    int linkcount_size;1165,42571
} tracedump_file_header_t;1166,42657
typedef struct _tracedump_trace_header_t 1169,42752
    int frag_id;1170,42795
    app_pc tag;1171,42856
    app_pc cache_start_pc;1172,42931
    int entry_offs;1173,43004
    int num_exits;1174,43074
    int code_size;1175,43141
    uint num_bbs;1176,43215
    bool x64;1177,43306
} tracedump_trace_header_t;1178,43381
#define BB_ORIGIN_HEADER_SIZE 1181,43464
#define SEPARATE_STUB_MAX_SIZE 1184,43592
typedef struct _tracedump_stub_data 1187,43694
    int cti_offs;1188,43732
    app_pc stub_pc;1190,43874
    app_pc target;1191,43934
    bool linked;1192,43982
    int stub_size;1193,44052
        uint count32;1196,44198
        uint64 count64;1197,44257
    } count;1198,44318
    byte stub_code[stub_code1205,44678
} tracedump_stub_data_t;1206,44719
#define STUB_DATA_FIXED_SIZE 1209,44821

hashtable.c,1867
hashtable_bits_given_entries(44,2002
#define NAME_KEY 64,2742
#define ENTRY_TYPE 65,2767
#define ENTRY_TAG(67,2849
#define ENTRY_EMPTY 68,2894
#define ENTRY_SENTINEL 70,3009
#define ENTRY_IS_EMPTY(71,3077
#define ENTRY_IS_SENTINEL(72,3125
#define ENTRY_IS_INVALID(73,3183
#define ENTRIES_ARE_EQUAL(74,3250
#define HASHTABLE_WHICH_HEAP(76,3382
#define HTLOCK_RANK 77,3431
#define HASHTABLE_SUPPORT_PERSISTENCE 78,3478
#define GENERIC_ENTRY_IS_REAL(82,3597
hashtable_generic_init_internal_custom(87,3748
hashtable_generic_resized_custom(92,3865
hashtable_generic_study_custom(101,4216
hashtable_generic_free_entry(108,4420
generic_hash_create(119,4823
generic_hash_clear(134,5511
generic_hash_destroy(140,5634
generic_hash_lookup(159,6271
generic_hash_add(168,6501
generic_hash_remove(179,6815
generic_hash_iterate_next(194,7333
generic_hash_iterate_remove(220,8057
#define NAME_KEY 247,9046
#define ENTRY_TYPE 248,9071
#define ENTRY_TAG(250,9153
#define ENTRY_EMPTY 251,9210
#define STRHASH_SENTINEL 253,9325
#define ENTRY_SENTINEL 254,9393
#define ENTRY_IS_EMPTY(255,9444
#define ENTRY_IS_SENTINEL(256,9492
#define ENTRY_IS_INVALID(257,9552
#define TAGS_ARE_EQUAL(258,9619
#define ENTRIES_ARE_EQUAL(260,9775
#define HASHTABLE_WHICH_HEAP(262,9924
#define HTLOCK_RANK 263,9973
#define HASHTABLE_SUPPORT_PERSISTENCE 264,10020
#define STRHASH_CASE_INSENSITIVE 267,10093
strhash_key_cmp(270,10176
#define STRHASH_ENTRY_IS_REAL(280,10478
hashtable_strhash_init_internal_custom(285,10614
hashtable_strhash_resized_custom(290,10731
hashtable_strhash_study_custom(299,11084
hashtable_strhash_free_entry(306,11287
strhash_hash_create(317,11690
strhash_hash_clear(333,12467
strhash_hash_destroy(339,12590
strhash_hash_lookup(358,13227
strhash_hash_add(367,13470
strhash_hash_remove(378,13785
print_hashtable_stats(398,14422

hashtable.h,2101
#define _HASHTABLE_H_ 44,1899
#define HASHTABLE_SHARED 51,2044
#define HASHTABLE_ENTRY_SHARED 56,2240
#define HASHTABLE_LOCKLESS_ACCESS 58,2358
#define HASHTABLE_NOT_PRIMARY_STORAGE 60,2470
#define HASHTABLE_PERSISTENT 62,2572
#define HASHTABLE_USE_ENTRY_STATS 64,2673
#define HASHTABLE_RELAX_CLUSTER_CHECKS 66,2796
#define HASHTABLE_READ_ONLY 70,2971
#define HASHTABLE_ALIGN_TABLE 72,3067
#define HASHTABLE_CUSTOM_FLAGS_START 77,3250
#define HASHTABLE_COPY_IGNORE_FLAGS 80,3341
#define TABLE_NEEDS_LOCK(86,3556
#define ASSERT_TABLE_SYNCHRONIZED(91,3797
#define TABLE_RWLOCK(96,4120
#define TABLE_MEMOP(101,4271
#define TABLE_TYPE_MEMOP(105,4404
#define HASH_INDEX_WRAPAROUND(113,4738
# define INIT_HASHTABLE_STATS(118,4936
# define HTABLE_STAT_INC(122,5149
# define HTABLE_STAT_INC(124,5232
typedef struct _hashtable_statistics_t 129,5318
    uint hit_stat;130,5359
    uint collision_hit_stat;131,5419
    uint collision_stat;132,5491
    uint miss_stat;133,5565
    uint overwrap_stat;134,5642
    uint race_condition_stat;135,5728
    uint unlinked_count_stat;136,5817
    uint ib_stay_on_trace_stat;143,6141
    uint ib_stay_on_trace_stat_last;149,6489
    uint ib_stay_on_trace_stat_ovfl;150,6543
    uint ib_trace_last_ibl_exit;152,6632
    uint ib_trace_last_ibl_speculate_success;158,6891
} hashtable_statistics_t;160,7037
typedef struct _fragment_stat_entry_t 163,7140
    uint    hits;165,7234
    uint    age;167,7318
} fragment_stat_entry_t;168,7396
typedef struct _generic_entry_t 188,8106
    ptr_uint_t key;189,8140
    void *payload;payload190,8195
} generic_entry_t;191,8214
#define NAME_KEY 194,8307
#define ENTRY_TYPE 195,8332
#define CUSTOM_FIELDS 197,8414
#define HASHTABLEX_HEADER 199,8476
#undef HASHTABLEX_HEADER201,8528
typedef struct _strhash_entry_t 240,9856
    const char *key;key244,10011
    void *payload;payload245,10032
} strhash_entry_t;246,10051
#define NAME_KEY 248,10071
#define ENTRY_TYPE 249,10096
#define CUSTOM_FIELDS 251,10178
#define HASHTABLEX_HEADER 253,10240
#undef HASHTABLEX_HEADER255,10292

hashtablex.h,2001
#define EXPANDKEY(151,6018
#define HTNAME(152,6067
#define KEY_STRING 153,6124
#define ENTRY_IS_REAL(155,6164
# define _IFLOOKUP(159,6299
# define IFLOOKUP_ELSE(160,6325
# define _IFLOOKUP(162,6363
# define IFLOOKUP_ELSE(163,6399
# define TAGS_ARE_EQUAL(167,6462
typedef struct HTNAME(_,NAME_KEY,_table_t)176,6717
HTNAME(309,12182
HTNAME(326,12750
HTNAME(336,13064
HTNAME(531,21906
HTNAME(564,23283
HTNAME(576,23711
HTNAME(598,24549
HTNAME(643,26374
HTNAME(709,29484
HTNAME(771,31745
HTNAME(787,32271
HTNAME(939,39504
HTNAME(1230,52556
HTNAME(1254,53528
HTNAME(1276,54545
HTNAME(1364,58622
HTNAME(1388,59593
HTNAME(1409,60290
HTNAME(1445,61575
HTNAME(1494,63242
HTNAME(1552,65648
HTNAME(1636,68943
HTNAME(1685,70811
HTNAME(1719,72029
HTNAME(1871,77797
HTNAME(1966,81612
HTNAME(1981,82108
HTNAME(2041,84532
HTNAME(2059,85328
HTNAME(2079,85925
HTNAME(2120,87450
HTNAME(2149,88573
HTNAME(2183,90410
HTNAME(2214,91819
#undef NAME_KEY2253,93465
#undef ENTRY_TYPE2254,93481
#undef AUX_ENTRY_TYPE2255,93499
#undef CUSTOM_FIELDS2256,93521
#undef ENTRY_TAG2258,93543
#undef ENTRY_IS_EMPTY2259,93560
#undef ENTRY_IS_SENTINEL2260,93582
#undef ENTRY_IS_INVALID2261,93607
#undef ENTRIES_ARE_EQUAL2262,93631
#undef ENTRY_EMPTY2263,93656
#undef ENTRY_SENTINEL2264,93675
#undef TAGS_ARE_EQUAL2265,93697
#undef AUX_ENTRY_TAG2267,93720
#undef AUX_ENTRY_IS_EMPTY2268,93741
#undef AUX_ENTRY_IS_SENTINEL2269,93767
#undef AUX_ENTRY_IS_INVALID2270,93796
#undef AUX_PAYLOAD_IS_INVALID2271,93824
#undef AUX_ENTRY_SET_TO_SENTINEL2272,93854
#undef AUX_ENTRY_IS_SET_TO_ENTRY2273,93887
#undef AUX_ENTRY_SET_TO_ENTRY2274,93920
#undef AUX_ENTRY_FORMAT_STR2275,93950
#undef AUX_ENTRY_FORMAT_ARGS2276,93978
#undef HASHTABLE_WHICH_HEAP2278,94008
#undef HASHTABLE_USE_LOOKUPTABLE2279,94036
#undef HASHTABLE_ENTRY_STATS2280,94069
#undef HASHTABLE_SUPPORT_PERSISTENCE2281,94098
#undef HTLOCK_RANK2282,94135
#undef _IFLOOKUP2284,94155
#undef IFLOOKUP_ELSE2285,94172

heap.c,10105
# define CHKLVL_MEMFILL 62,2473
static const uint BLOCK_SIZES[BLOCK_SIZES101,4441
#define BLOCK_TYPES 137,6292
#define HEADER_SIZE 155,7164
#define VARIABLE_SIZE(157,7236
#define MEMSET_HEADER(158,7292
#define GET_VARIABLE_ALLOCATION_SIZE(159,7367
#define HEAP_UNIT_MIN_SIZE 187,8908
#define HEAP_UNIT_MAX_SIZE 188,8975
#define GLOBAL_UNIT_MIN_SIZE 189,9038
#define GUARD_PAGE_ADJUSTMENT 191,9115
#define UNITROOM(194,9231
#define UNIT_RESERVED_ROOM(195,9288
#define UNIT_COMMIT_SIZE(199,9507
#define UNIT_RESERVED_SIZE(200,9571
#define UNIT_ALLOC_START(201,9647
#define UNIT_GET_START_PC(202,9711
#define UNIT_COMMIT_END(203,9787
#define UNIT_RESERVED_END(204,9826
#define UNITALLOC(207,9949
#define UNITOVERHEAD 211,10131
#define MAXROOM 214,10261
#define MAX_VALID_HEAP_ALLOCATION 217,10391
typedef struct _heap_unit_t 222,10542
    heap_pc start_pc;223,10572
    heap_pc end_pc;224,10638
    heap_pc cur_pc;225,10713
    heap_pc reserved_end_pc;226,10793
    bool in_vmarea_list;227,10883
    int      id;229,10975
    struct _heap_unit_t *next_local;next_local231,11033
    struct _heap_unit_t *next_global;next_global232,11105
    struct _heap_unit_t *prev_global;prev_global233,11172
} heap_unit_t;234,11239
typedef struct _heap_acct_t 237,11278
    size_t alloc_reuse[alloc_reuse238,11308
    size_t alloc_new[alloc_new239,11343
    size_t cur_usage[cur_usage240,11376
    size_t max_usage[max_usage241,11409
    size_t max_single[max_single242,11442
    uint num_alloc[num_alloc243,11476
} heap_acct_t;244,11507
typedef struct _thread_units_t 252,11748
    heap_unit_t *top_unit;top_unit253,11781
    heap_unit_t *cur_unit;cur_unit254,11849
    heap_pc free_list[free_list255,11908
    int num_units;257,11957
    dcontext_t *dcontext;dcontext259,12013
    bool writable;260,12068
    heap_acct_t acct;262,12156
} thread_units_t;264,12185
typedef struct _thread_heap_t 267,12232
    thread_units_t *local_heap;local_heap268,12264
    thread_units_t *nonpersistent_heap;nonpersistent_heap269,12296
} thread_heap_t;270,12336
typedef struct _heap_t 275,12473
    heap_unit_t *units;units276,12498
    heap_unit_t *dead;dead277,12560
    uint num_dead;281,12792
} heap_t;282,12811
static bool heap_exiting 285,12868
vm_area_vector_t *landing_pad_areas;landing_pad_areas317,14363
static app_pc lpad_temp_writable_start;320,14487
static size_t lpad_temp_writable_size;321,14527
safe_to_allocate_or_free_heap_units(329,14739
const char * whichheap_name[whichheap_name342,15133
# define ACCOUNT_FOR_ALLOC_HELPER(387,16368
# define ACCOUNT_FOR_ALLOC(397,16968
# define ACCOUNT_FOR_FREE(404,17326
# define ACCOUNT_FOR_ALLOC(411,17556
# define ACCOUNT_FOR_FREE(412,17618
typedef byte *vm_addr_t;vm_addr_t415,17669
static byte *heap_allowable_region_start heap_allowable_region_start419,17787
static byte *heap_allowable_region_end heap_allowable_region_end420,17850
request_region_be_heap_reachable(436,18632
vmcode_get_reachable_region(509,22274
    OOM_INIT 537,23539
    OOM_INIT    = 0x1,x1537,23539
    OOM_RESERVE 541,23671
    OOM_RESERVE = 0x2,x2541,23671
    OOM_COMMIT 550,24096
    OOM_COMMIT  = 0x4,x4550,24096
    OOM_EXTEND 559,24514
    OOM_EXTEND  = 0x8,x8559,24514
} oom_source_t;560,24537
enum {VMM_BLOCK_SIZE VMM_BLOCK_SIZE566,24706
enum {VMM_BLOCK_SIZE = IF_WINDOWS_ELSE(566,24706
    MAX_VMM_HEAP_UNIT_SIZE 582,25348
    MIN_VMM_HEAP_UNIT_SIZE 587,25590
    MIN_VMM_HEAP_UNIT_SIZE = VMM_BLOCK_SIZE 587,25590
    vm_addr_t start_addr;591,25656
    vm_addr_t end_addr;592,25717
    vm_addr_t alloc_start;593,25803
    size_t    alloc_size;594,25875
    uint    num_blocks;598,26061
    mutex_t   lock;600,26145
    uint    num_free_blocks;604,26458
    bitmap_element_t blocks[blocks611,26860
} vm_heap_t;612,26943
typedef struct _heap_management_t 618,27131
    vm_heap_t vmheap;622,27332
    heap_t heap;623,27354
    thread_units_t global_units;625,27402
    thread_units_t global_nonpersistent_units;626,27435
    bool global_heap_writable;627,27482
    thread_units_t global_unprotected_units;628,27513
} heap_management_t;629,27558
static heap_management_t temp_heapmgt;634,27718
static heap_management_t *heapmgt heapmgt635,27757
static bool vmm_heap_exited 637,27843
vmm_addr_to_block(643,28082
vmm_block_to_addr(651,28296
vmm_in_same_block(658,28473
vmm_dump_map(666,28679
#define VMM_DUMP_MAP_LOG(683,29289
print_vmm_heap_data(702,30030
vmm_heap_initialize_unusable(713,30362
vmm_heap_unit_init(721,30516
vmm_heap_unit_exit(835,35397
vmm_is_reserved_unit(873,36811
is_vmm_reserved_address(890,37452
get_vmm_heap_bounds(905,37992
vmcode_get_start(917,38368
vmcode_get_end(925,38483
vmcode_unreachable_pc(933,38594
rel32_reachable_from_vmcode(944,38813
vmm_heap_reserve_blocks(965,39594
vmm_heap_free_blocks(1015,41175
at_reset_at_vmm_limit(1047,42209
vmm_heap_reserve(1060,42708
vmm_heap_commit(1171,47862
END_DATA_SECTION(1265,52920
vmm_heap_decommit(1305,54604
vmm_heap_alloc(1318,55106
vmm_heap_init_constraints(1331,55541
vmm_heap_init(1367,57170
vmm_heap_exit(1376,57373
heap_check_option_compatibility(1441,60354
heap_reset_init(1479,62103
heap_init(1489,62325
really_free_unit(1551,64985
heap_reset_free(1564,65518
heap_exit(1605,66860
heap_low_on_memory(1674,69172
get_oom_source_name(1720,71009
silent_oom_for_process(1739,71480
report_low_on_memory(1764,72345
account_for_memory(1804,74307
update_dynamo_areas_on_release(1834,75500
lockwise_safe_to_allocate_memory(1858,76452
get_real_memory(1872,76935
release_memory_and_update_areas(1914,78632
release_real_memory(1935,79553
extend_commitment(1950,80010
get_guarded_real_memory(1977,81179
release_guarded_real_memory(2033,83475
heap_mmap_ex(2060,84323
heap_mmap_reserve(2089,85563
heap_mmap_extend_commitment(2100,85942
heap_mmap_retract_commitment(2113,86355
heap_mmap_reserve_post_stack(2126,86827
heap_munmap_post_stack(2253,92680
heap_mmap(2289,94283
heap_munmap_ex(2296,94391
heap_munmap(2317,95089
# define STACK_GUARD_PAGES 2323,95198
stack_alloc(2331,95410
stack_free(2369,96643
is_stack_overflow(2386,97153
map_file(2405,97822
unmap_file(2422,98417
heap_vmareas_synch_units(2459,100058
common_global_heap_alloc(2583,106325
common_global_heap_free(2605,107084
global_heap_alloc(2631,107937
global_heap_free(2640,108207
global_heap_realloc(2653,108681
heap_create_unit(2668,109258
heap_free_unit(2758,112643
find_heap_unit(2851,116896
threadunits_init(2872,117881
#define MAX_5_DIGIT 2891,118396
print_tu_heap_statistics(2893,118434
print_heap_statistics(2923,119705
add_heapacct_to_global_stats(2958,121225
threadunits_exit(2982,122270
heap_thread_reset_init(3079,126264
heap_thread_init(3089,126556
heap_thread_reset_free(3106,127246
heap_thread_exit(3121,127740
print_free_list(3137,128355
common_heap_extend_commitment(3160,129023
heap_unit_extend_commitment(3200,130860
common_heap_alloc(3211,131217
heap_alloc(3519,145641
common_heap_free(3535,146139
heap_free(3694,152994
bool local_heap_protected(3707,153397
protect_local_units_helper(3715,153658
protect_threadunits(3728,154045
protect_local_heap(3738,154308
protect_global_heap(3750,154719
global_unprotected_heap_alloc(3793,156103
global_unprotected_heap_free(3803,156448
nonpersistent_heap_alloc(3811,156746
nonpersistent_heap_free(3832,157495
typedef struct _special_heap_unit_t 3865,158746
    heap_pc alloc_pc;3866,158784
    heap_pc start_pc;3867,158847
    heap_pc end_pc;3868,158924
    heap_pc cur_pc;3869,158995
    heap_pc reserved_end_pc;3870,159071
    profile_t *profile;profile3872,159182
    int      id;3875,159226
    struct _special_heap_unit_t *next;next3877,159284
} special_heap_unit_t;3878,159323
#define SPECIAL_UNIT_COMMIT_SIZE(3880,159347
#define SPECIAL_UNIT_RESERVED_SIZE(3881,159413
#define SPECIAL_UNIT_HEADER_INLINE(3882,159490
typedef struct _cfree_header 3885,159613
    struct _cfree_header *next_cfree;next_cfree3886,159644
    uint count;3887,159682
} cfree_header_t;3888,159698
typedef struct _special_units_t 3890,159717
    special_heap_unit_t *top_unit;top_unit3891,159751
    special_heap_unit_t *cur_unit;cur_unit3892,159827
    uint block_size;3893,159894
    heap_pc free_list;3894,159949
    cfree_header_t *cfree_list;cfree_list3895,159972
    int num_units;3897,160017
    bool writable:writable3899,160076
    bool executable:executable3900,160142
    bool use_lock:use_lock3904,160303
    bool in_iterator:in_iterator3905,160324
    bool persistent:persistent3906,160348
    mutex_t lock;3907,160371
    vm_area_vector_t *heap_areas;heap_areas3912,160526
    void *lookup_retval;lookup_retval3913,160560
    struct _special_units_t *next;next3916,160611
    heap_acct_t acct;3920,160760
} special_units_t;3922,160789
get_special_heap_header_size(3938,161479
static inline bool special_heap_profile_enabled(3945,161587
get_prot(3954,161812
special_unit_extend_commitment(3962,161983
special_heap_create_unit(3976,162571
special_heap_init_internal(4065,166117
special_heap_init(4134,168986
special_heap_pclookup_init(4143,169387
special_heap_set_vector_data(4154,169933
special_heap_set_unit_end(4174,170669
special_heap_profile_stop(4188,171067
special_heap_profile_exit(4207,171626
special_heap_exit(4229,172296
special_heap_calloc(4305,175173
special_heap_alloc(4410,179434
special_heap_cfree(4416,179522
special_heap_free(4447,180522
special_heap_iterator_start(4465,181349
special_heap_iterator_hasnext(4477,181653
special_heap_iterator_next(4494,182158
special_heap_iterator_stop(4516,182854
special_heap_delete_lock(4537,183557
    byte *start;start4587,185775
    byte *end;end4588,185830
    byte *commit_end;commit_end4589,185883
    byte *cur_ptr;cur_ptr4590,185960
    bool allocated;4591,186037
} landing_pad_area_t;4592,186105
alloc_landing_pad(4604,186597
trim_landing_pad(4805,196678
landing_pads_to_executable_areas(4827,197498
release_landing_pad_mem(4878,199441

heap.h,2821
#define _HEAP_H_ 43,1966
    ACCT_FRAGMENT=47,2024
    ACCT_COARSE_LINK,48,2045
    ACCT_FRAG_FUTURE,49,2067
    ACCT_FRAG_TABLE,50,2089
    ACCT_IBLTABLE,51,2110
    ACCT_TRACE,52,2129
    ACCT_FCACHE_EMPTY,53,2145
    ACCT_VMAREA_MULTI,54,2168
    ACCT_IR,55,2191
    ACCT_AFTER_CALL,56,2204
    ACCT_VMAREAS,57,2225
    ACCT_SYMBOLS,58,2243
    ACCT_SIDELINE,60,2278
    ACCT_THCOUNTER,62,2305
    ACCT_TOMBSTONE,63,2325
    ACCT_HOT_PATCHING,66,2441
    ACCT_THREAD_MGT,67,2464
    ACCT_MEM_MGT,68,2485
    ACCT_STATS,69,2503
    ACCT_SPECIAL,70,2519
    ACCT_CLIENT,72,2562
    ACCT_LIBDUP,74,2587
    ACCT_CLEANCALL,75,2652
    ACCT_OTHER,77,2746
    ACCT_LAST78,2762
} which_heap_t;79,2776
# define HEAPACCT(81,2793
# define IF_HEAPACCT_ELSE(82,2818
# define HEAPACCT(84,2858
# define IF_HEAPACCT_ELSE(85,2879
    MAP_FILE_COPY_ON_WRITE 89,2936
    MAP_FILE_COPY_ON_WRITE   = 0x0001,x000189,2936
    MAP_FILE_IMAGE 90,2975
    MAP_FILE_IMAGE           = 0x0002,x000290,2975
    MAP_FILE_FIXED 91,3033
    MAP_FILE_FIXED           = 0x0004,x000491,3033
    MAP_FILE_REACHABLE 92,3089
    MAP_FILE_REACHABLE       = 0x0008,x000892,3089
} map_flags_t;93,3172
typedef byte * heap_pc;95,3188
#define HEAP_ALIGNMENT 96,3212
#define UNPROTECTED_LOCAL_ALLOC(213,7559
#define UNPROTECTED_LOCAL_FREE(214,7643
#define UNPROTECTED_GLOBAL_ALLOC 215,7725
#define UNPROTECTED_GLOBAL_FREE 216,7788
#define FRAGMENT_ALLOC_DC(219,7927
#define FRAGMENT_TABLE_ALLOC_DC(220,8018
#define PROTECTED 226,8265
#define UNPROTECTED 227,8288
#define HEAP_ARRAY_ALLOC(228,8314
#define HEAP_TYPE_ALLOC(232,8549
#define HEAP_ARRAY_ALLOC_MEMSET(234,8655
#define HEAP_ARRAY_FREE(238,8836
#define HEAP_TYPE_FREE(242,9073
#define NONPERSISTENT_HEAP_ARRAY_ALLOC(246,9236
#define NONPERSISTENT_HEAP_TYPE_ALLOC(248,9377
#define NONPERSISTENT_HEAP_ARRAY_FREE(250,9489
#define NONPERSISTENT_HEAP_TYPE_FREE(252,9632
typedef struct _special_heap_iterator 268,10308
    void *heap;heap270,10412
    void *next_unit;next_unit271,10428
} special_heap_iterator_t;272,10449
# define HEAP_TO_BYTE_EX(315,12107
# define HEAP_TO_BYTE(316,12145
# define HEAP_TO_UINT_EX(317,12193
# define HEAP_TO_UINT(318,12246
#  define HEAP_TO_PTR_UINT_EX(320,12306
#  define HEAP_TO_PTR_UINT_EX(322,12391
# define HEAP_TO_PTR_UINT(324,12457
# define HEAP_UNALLOCATED 326,12514
# define HEAP_UNALLOCATED_BYTE 327,12543
# define HEAP_UNALLOCATED_UINT 328,12605
# define HEAP_UNALLOCATED_PTR_UINT 329,12667
# define HEAP_ALLOCATED 331,12738
# define HEAP_ALLOCATED_BYTE 332,12765
# define HEAP_ALLOCATED_UINT 333,12823
# define HEAP_ALLOCATED_PTR_UINT 334,12881
# define HEAP_PAD 336,12948
# define HEAP_PAD_BYTE 337,12969
# define HEAP_PAD_UINT 338,13015
# define HEAP_PAD_PTR_UINT 339,13061

hotpatch.c,11551
#define HOTP_ONLY_GBOP_PRECEDENCE 78,2994
    MIN_HOTP_INTERFACE_VERSION 82,3113
    MIN_HOTP_INTERFACE_VERSION = HOTP_INTERFACE_VERSION,82,3113
    MAX_HOTP_INTERFACE_VERSION 83,3170
    MAX_HOTP_INTERFACE_VERSION = HOTP_INTERFACE_VERSION,83,3170
    MIN_NUM_VULNERABILITIES 84,3227
    MAX_NUM_VULNERABILITIES 85,3260
    MIN_VULNERABILITY_ID_LENGTH 86,3297
    MAX_VULNERABILITY_ID_LENGTH 87,3334
    MIN_POLICY_ID_LENGTH 88,3372
    MIN_POLICY_ID_LENGTH = HOTP_POLICY_ID_LENGTH,88,3372
    MAX_POLICY_ID_LENGTH 89,3422
    MAX_POLICY_ID_LENGTH = HOTP_POLICY_ID_LENGTH,89,3422
    MIN_POLICY_VERSION 90,3472
    MAX_POLICY_VERSION 91,3500
    MIN_NUM_SETS 92,3532
    MAX_NUM_SETS 93,3554
    MIN_NUM_MODULES 94,3580
    MAX_NUM_MODULES 95,3605
    MAX_MODULE_SIZE 98,3700
    MIN_PE_TIMESTAMP 106,4124
    MAX_PE_TIMESTAMP 107,4150
    MAX_PE_TIMESTAMP = UINT_MAX,107,4150
    PE_TIMESTAMP_IGNORE 108,4183
    PE_TIMESTAMP_IGNORE = UINT_MAX,108,4183
    PE_TIMESTAMP_UNAVAILABLE 109,4219
    PE_TIMESTAMP_UNAVAILABLE = PE_TIMESTAMP_IGNORE 109,4219
    MIN_PE_CHECKSUM 111,4276
    MAX_PE_CHECKSUM 112,4301
    MAX_PE_CHECKSUM = UINT_MAX,112,4301
    PE_CHECKSUM_IGNORE 113,4333
    PE_CHECKSUM_IGNORE = UINT_MAX,113,4333
    PE_CHECKSUM_UNAVAILABLE 114,4368
    PE_CHECKSUM_UNAVAILABLE = PE_CHECKSUM_IGNORE 114,4368
    MIN_PE_IMAGE_SIZE 116,4423
    MAX_PE_IMAGE_SIZE 117,4450
    MAX_PE_IMAGE_SIZE = UINT_MAX,117,4450
    PE_IMAGE_SIZE_IGNORE 118,4484
    PE_IMAGE_SIZE_IGNORE = UINT_MAX,118,4484
    PE_IMAGE_SIZE_UNAVAILABLE 119,4521
    PE_IMAGE_SIZE_UNAVAILABLE = PE_IMAGE_SIZE_IGNORE 119,4521
    MIN_PE_CODE_SIZE 121,4580
    MAX_PE_CODE_SIZE 122,4648
    MAX_PE_CODE_SIZE = UINT_MAX,122,4648
    PE_CODE_SIZE_IGNORE 123,4681
    PE_CODE_SIZE_IGNORE = UINT_MAX,123,4681
    PE_CODE_SIZE_UNAVAILABLE 124,4717
    PE_CODE_SIZE_UNAVAILABLE = PE_CODE_SIZE_IGNORE 124,4717
    MIN_PE_FILE_VERSION 126,4774
    MAX_PE_FILE_VERSION 127,4803
    MAX_PE_FILE_VERSION = ULLONG_MAX,127,4803
    PE_FILE_VERSION_IGNORE 128,4841
    PE_FILE_VERSION_IGNORE = IF_WINDOWS_ELSE(128,4841
    PE_FILE_VERSION_IGNORE = IF_WINDOWS_ELSE(MODULE_FILE_VERSION_INVALID,128,4841
    PE_FILE_VERSION_IGNORE = IF_WINDOWS_ELSE(MODULE_FILE_VERSION_INVALID, ULLONG_MAX)128,4841
    PE_FILE_VERSION_UNAVAILABLE 129,4928
    PE_FILE_VERSION_UNAVAILABLE = PE_FILE_VERSION_IGNORE 129,4928
    MIN_NUM_PATCH_POINT_HASHES 131,4991
    MAX_NUM_PATCH_POINT_HASHES 132,5027
    MIN_HASH_START_OFFSET 133,5067
    MAX_HASH_START_OFFSET 134,5098
    MAX_HASH_START_OFFSET = MAX_MODULE_SIZE,134,5098
    MIN_HASH_LENGTH 135,5178
    MAX_HASH_LENGTH 136,5203
    MAX_HASH_LENGTH = MAX_MODULE_SIZE,136,5203
    MIN_HASH_VALUE 137,5283
    MAX_HASH_VALUE 138,5307
    MAX_HASH_VALUE = UINT_MAX,138,5307
    MIN_NUM_PATCH_POINTS 140,5339
    MIN_NUM_PATCH_POINTS = MIN_NUM_PATCH_POINT_HASHES,140,5339
    MAX_NUM_PATCH_POINTS 141,5394
    MAX_NUM_PATCH_POINTS = MAX_NUM_PATCH_POINT_HASHES,141,5394
    MIN_PATCH_OFFSET 142,5449
    MAX_PATCH_OFFSET 143,5475
    MAX_PATCH_OFFSET = MAX_MODULE_SIZE,143,5475
    MIN_PATCH_PRECEDENCE 144,5555
    MAX_PATCH_PRECEDENCE 145,5585
    MIN_DETECTOR_OFFSET 146,5619
    MAX_DETECTOR_OFFSET 152,5950
    MIN_PROTECTOR_OFFSET 154,6070
    MAX_PROTECTOR_OFFSET 155,6100
    MAX_PROTECTOR_OFFSET = MAX_DETECTOR_OFFSET,155,6100
    MIN_RETURN_ADDR 159,6276
    MAX_RETURN_ADDR 164,6512
    MAX_RETURN_ADDR = MAX_PATCH_OFFSET,164,6512
    MIN_MODE 165,6552
    MIN_MODE = HOTP_MODE_OFF,165,6552
    MAX_MODE 166,6582
    MAX_MODE = HOTP_MODE_PROTECT,166,6582
    MAX_POLICY_FILE_SIZE 172,6905
#define PE_NAME_IGNORE 175,6947
#define PE_NAME_UNAVAILABLE 176,7021
    const char *pe_name;pe_name184,7314
    uint pe_checksum;189,7494
    uint pe_timestamp;190,7516
    size_t pe_image_size;191,7539
    size_t pe_code_size;210,8671
    uint64 pe_file_version;215,8834
} hotp_module_sig_t;216,8862
    app_rva_t offset;235,9801
    app_rva_t detector_fn;242,10133
    app_rva_t protector_fn;244,10267
    app_rva_t return_addr;245,10295
    uint precedence;251,10525
    byte *trampoline;trampoline264,11093
    byte *app_code_copy;app_code_copy270,11353
    byte *tramp_exit_tgt;tramp_exit_tgt277,11686
} hotp_patch_point_t;278,11712
#define HOTP_ONLY_TRAMPOLINE_SIZE 283,11882
#define HOTP_ONLY_NUM_THREADS_AT_INIT 284,11920
#define HOTP_ONLY_PATCH_REGION_SIZE 300,12699
#define HOTP_CACHE_PATCH_REGION_SIZE 301,12743
#define HOTP_BAD_PATCH_REGION_SIZE 302,12787
#define HOTP_PATCH_REGION_SIZE 303,12832
    app_rva_t start;319,13586
    uint len;320,13607
    uint hash_value;321,13685
} hotp_patch_point_hash_t;322,13706
    hotp_module_sig_t sig;325,13751
    uint num_patch_points;326,13778
    hotp_patch_point_t *patch_points;patch_points327,13805
    uint num_patch_point_hashes;328,13843
    hotp_patch_point_hash_t *hashes;hashes329,13876
    bool matched;332,13985
    app_pc base_address;333,14063
} hotp_module_t;334,14088
    uint num_modules;337,14123
    hotp_module_t *modules;modules338,14145
} hotp_set_t;339,14173
    hotp_exec_status_t exec_status;346,14411
    hotp_inject_status_t *inject_status;inject_status349,14522
    uint64 num_detected;355,14737
    uint64 num_not_detected;356,14762
    uint64 num_detector_error;357,14791
    uint64 num_protected;358,14822
    uint64 num_not_protected;359,14848
    uint64 num_kill_thread;360,14878
    uint64 num_kill_process;361,14906
    uint64 num_raise_exception;362,14935
    uint64 num_change_control_flow;363,14967
    uint64 num_protector_error;364,15003
    uint64 num_aborted;365,15035
} hotp_vul_info_t;366,15059
    HOTP_TYPE_HOT_PATCH 378,15544
    HOTP_TYPE_HOT_PATCH = 0x1,x1378,15544
    HOTP_TYPE_GBOP_HOOK 390,16200
    HOTP_TYPE_GBOP_HOOK = 0x2,x2390,16200
    HOTP_TYPE_PROBE 395,16346
    HOTP_TYPE_PROBE = 0x4x4395,16346
} hotp_type_t;396,16372
    const char *vul_id;vul_id405,16737
    const char *policy_id;policy_id413,17062
    uint policy_version;414,17089
    const char *hotp_dll;hotp_dll415,17114
    const char *hotp_dll_hash;hotp_dll_hash416,17140
    hotp_policy_mode_t mode;417,17171
    uint num_sets;419,17201
    hotp_set_t *sets;sets420,17220
    hotp_vul_info_t *info;info423,17314
    app_pc  hotp_dll_base;424,17341
    hotp_type_t type;440,18182
    unsigned int id;446,18426
} hotp_vul_t;447,18447
typedef struct hotp_vul_tab_t 458,19069
    hotp_vul_t *vul_tab;vul_tab459,19101
    uint num_vuls;460,19126
    struct hotp_vul_tab_t *next;next461,19145
} hotp_vul_tab_t;462,19178
typedef struct hotp_globals_t 470,19468
    bool ldr_safe_hook_removal;476,19797
    bool ldr_safe_hook_injection;477,19868
} hotp_globals_t;478,19939
#define VUL(493,20654
#define SET(494,20708
#define MODULE(495,20775
#define SIG(496,20848
#define PPOINT(497,20920
#define PPOINT_HASH(498,21004
#define NUM_GLOBAL_VULS 501,21094
#define GLOBAL_VUL_TABLE 502,21150
#define GLOBAL_VUL(503,21207
#define GLOBAL_SET(504,21272
#define GLOBAL_MODULE(505,21340
#define GLOBAL_SIG(506,21413
#define GLOBAL_PPOINT(507,21484
#define GLOBAL_HASH(508,21561
#define VUL_STAT_INC(517,22081
#define SET_NUM(519,22119
#define SET_STR_DUP(540,23613
#define SET_STR_PTR(549,24129
#define SET_STR(558,24643
#define HOTP_IS_IN_REGION(560,24704
#define HOTP_ONLY_IS_IN_TRAMPOLINE(564,24875
#define HOTP_ONLY_IS_IN_PATCH_REGION(569,25121
#define GENERATE_PROBE_ID(580,25738
hotp_policy_status_table_t *hotp_policy_status_table;hotp_policy_status_table627,28380
static hotp_vul_t *hotp_vul_table;hotp_vul_table630,28500
static uint hotp_num_vuls;631,28536
static hotp_vul_tab_t *hotp_old_vul_tabs;hotp_old_vul_tabs632,28564
static void *hotp_only_tramp_heap;hotp_only_tramp_heap636,28749
static void *hotp_only_tramp_heap_cache;hotp_only_tramp_heap_cache644,29157
static vm_area_vector_t *hotp_only_tramp_areas;hotp_only_tramp_areas651,29447
static vm_area_vector_t *hotp_patch_point_areas;hotp_patch_point_areas670,30537
static hotp_globals_t *hotp_globals;hotp_globals673,30600
static unsigned int probe_id_counter;681,30834
hotp_get_lock(688,31077
hotp_ppoint_addr(695,31197
hotp_ppoint_areas_add(710,31681
hotp_ppoint_areas_remove(745,32980
hotp_ppoint_areas_release(781,34178
hotp_get_next_str(806,35087
    POLICY_FILE 835,35758
    MODES_FILE836,35779
hotp_read_data_file(840,35812
hotp_read_policy_defs(920,38931
hotp_load_hotp_dlls(1147,49237
hotp_read_policy_modes(1283,55542
hotp_set_policy_status(1392,59653
hotp_init_policy_status_table(1444,62187
static void hotp_free_one_vul(1544,66875
hotp_free_vul_table(1627,70343
hotp_remove_patches_from_module(1658,71445
hotp_remove_hot_patches(1783,77889
hotp_module_match(1800,78683
hotp_compute_hash(1913,84115
hotp_process_image(2068,91872
hotp_ppoint_on_list(2079,92353
hotp_perscache_overlap(2106,93162
hotp_process_image_helper(2159,95542
hotp_patch_point_persist_helper(2604,118582
hotp_num_matched_patch_points(2658,120851
hotp_get_matched_patch_points(2669,121281
hotp_point_not_on_list(2681,121764
hotp_walk_loader_list(2759,125268
hotp_init(2819,127885
hotp_reset_init(2890,130745
hotp_reset_free(2899,130926
hotp_exit(2923,131742
nudge_action_read_policies(2993,134482
hotp_nudge_handler(3208,145034
hotp_only_lookup_patch_addr(3345,151561
hotp_lookup_patch_addr(3396,153861
hotp_does_region_need_patch(3483,157583
hotp_inject_gateway_call(3614,162715
#define HOTP_CONTEXT_OFFSET_ON_DSTACK 3625,163256
#define GET_FROM_DC_OFFS_TO_REG(3630,163477
hotp_inject(3715,167647
hotp_only_patch_region_valid(3815,172827
patch_cti_tgt(3967,180652
hotp_only_inject_patch(3994,181830
hotp_only_remove_patch(4293,195833
hotp_only_in_tramp(4386,200127
hotp_only_detach_helper(4408,201049
hotp_only_mem_prot_change(4449,202989
hotp_only_gateway(4557,207592
hotp_gateway(4617,210455
hotp_execute_patch(4981,227730
hotp_event_notify(5103,233469
hotp_spill_before_notify(5224,238610
hotp_restore_after_notify(5281,241073
hotp_dump_reg_state(5300,241685
hotp_update_vul_stats(5316,242536
#define CLEAN_CALL_XFLAGS_OFFSET 5411,246472
#define CLEAN_CALL_ERRNO_OFFSET 5412,246510
hotp_change_control_flow(5414,246560
hotp_print_diagnostics(5440,247503
hotp_only_contains_leaked_trampoline(5595,254962
hotp_only_gbop_detector(5644,257002
hotp_only_gbop_protector(5658,257515
hotp_only_read_gbop_policy_defs(5675,258107
    DR_PROBE_ADDR_VIRTUAL,5810,263549
    DR_PROBE_ADDR_LIB_OFFS,5820,263981
    DR_PROBE_ADDR_EXP_FUNC,5830,264506
} dr_probe_addr_t;5831,264534
    char *library;library5841,264974
    app_rva_t offset;5846,265197
} dr_probe_lib_offs_t;5847,265219
    char *library;library5857,265674
    char *func;func5861,265843
} dr_probe_exp_func_t;5862,265859
    dr_probe_addr_t type;5871,266185
        app_pc vaddr;5875,266286
        dr_probe_lib_offs_t lib_offs;5878,266366
        dr_probe_exp_func_t exp_func;5881,266465
} dr_probe_location_t;5883,266510
    DR_PROBE_RETURN_NORMAL 5897,266958
} dr_probe_return_t;5898,266990
    char *name;name5910,267356
    dr_probe_location_t insert_loc;5920,267857
    dr_probe_location_t callback_func;5937,268608
    unsigned int id;5940,268726
    dr_probe_status_t status;5943,268808
} dr_probe_desc_t;5944,268838
dr_register_probes(6074,275497
#define HOTP_PROBE_PRECEDENCE 6246,283398
dr_get_probe_status(6357,288415
hotp_read_policies(6395,289586

hotpatch.h,260
#define _HOTPATCH_H_ 40,1831
    int vul_index;53,2284
    int set_index;56,2380
    int module_index;57,2399
    int ppoint_index;58,2471
} hotp_offset_match_t;59,2551
    CXT_TYPE_HOT_PATCH,69,3006
    CXT_TYPE_CORE_HOOK70,3030
} cxt_type_t;71,3053

instrlist.c,1118
# undef ASSERT 47,2118
# undef ASSERT_TRUNCATE48,2189
# undef ASSERT_BITFIELD_TRUNCATE49,2213
# undef ASSERT_NOT_REACHED50,2246
# define ASSERT 51,2273
# define ASSERT_TRUNCATE 52,2333
# define ASSERT_BITFIELD_TRUNCATE 53,2402
# define ASSERT_NOT_REACHED 54,2480
instrlist_create(59,2615
instrlist_init(70,2969
instrlist_destroy(83,3305
instrlist_clear(92,3607
instrlist_clear_and_destroy(103,3912
instrlist_set_fall_through_target(116,4330
instrlist_get_fall_through_target(123,4453
instrlist_set_return_target(134,4753
instrlist_get_return_target(141,4870
instrlist_set_translation_target(151,5122
instrlist_get_translation_target(157,5234
instrlist_set_our_mangling(163,5335
instrlist_get_our_mangling(172,5515
instrlist_first(179,5668
pk_test_func(186,5777
instrlist_last(192,5846
check_translation(198,5929
instrlist_append(209,6297
instrlist_prepend(235,6965
instrlist_preinsert(262,7644
instrlist_postinsert(297,8640
instrlist_replace(334,9696
instrlist_remove(353,10282
instrlist_clone(370,10721
instrlist_prepend_instrlist(431,12945
void instrlist_append_instrlist(442,13260

instrlist.h,225
#define _INSTRLIST_H_ 40,1907
struct _instr_list_t 42,1932
    instr_t *first;first43,1955
    instr_t *last;last44,1975
    int flags;45,1994
    app_pc translation_target;46,2009
    app_pc fall_through_bb;56,2566

io.c,1431
#  define _EXTERNALIZE_CTYPE_INLINES_TOP_50,2199
# undef CLIENT_ASSERT59,2421
# define CLIENT_ASSERT(60,2443
#define VA_ARG_CHAR2INT63,2517
#define BUF_SIZE 64,2541
const static double pos_inf 67,2574
const static double neg_inf 68,2613
const static double zerof 74,2860
# define pos_inf 75,2893
# define neg_inf 76,2922
double2int_trunc(81,2997
double2int(94,3260
utf8_to_utf16(131,4590
utf16_to_utf8(221,8256
utf16_to_utf8_size(303,10918
#undef IOX_WIDE_CHAR314,11240
#define IOX_WIDE_CHAR317,11279
typedef enum _specifier_t 324,11441
    SPEC_INT,325,11469
    SPEC_CHAR,326,11483
    SPEC_STRING327,11498
} specifer_t;328,11514
typedef enum _int_sz_t 330,11529
    SZ_SHORT,331,11554
    SZ_INT,332,11568
    SZ_LONG,333,11580
    SZ_LONGLONG,334,11593
    SZ_PTR 336,11647
    SZ_PTR = SZ_LONGLONG336,11647
    SZ_PTR 338,11678
    SZ_PTR = SZ_LONG338,11678
} int_sz_t;340,11706
our_isspace(347,11956
parse_int(354,12093
our_vsscanf(436,14240
our_sscanf(632,21008
# define MAPS_LINE_FORMAT4 652,21556
# define MAPS_LINE_FORMAT8 653,21619
test_sscanf_maps_x86(656,21704
test_sscanf_maps_x64(685,22597
test_sscanf_all_specs(714,23524
#  define RTLD_NEXT 794,26218
typedef void (*memcpy_t)memcpy_t796,26258
test_memcpy_offset_size(799,26335
test_our_memcpy(821,27079
test_memset_offset_size(844,27700
test_our_memset(861,28189
our_memcpy_vs_libc(880,28605
unit_test_io(923,30201

iox.h,407
# define TCHAR 44,1987
# define _T(45,2010
# define TNAME(46,2030
# define IF_WIDE_ELSE(47,2057
# define TCHAR 49,2092
# define _T(50,2112
# define TNAME(51,2129
# define IF_WIDE_ELSE(52,2149
TNAME(66,2607
TNAME(90,3206
TNAME(116,3932
TNAME(162,5239
TNAME(197,6184
TNAME(267,8385
TNAME(704,24357
#undef TCHAR715,24575
#undef _T716,24588
#undef TNAME717,24598
#undef IF_WIDE_ELSE718,24611

link.c,6386
#define FRAG_INCOMING_ADDR(55,2328
void *stub_heap;stub_heap113,4566
void *stub32_heap;stub32_heap115,4594
# define SEPARATE_STUB_HEAP(119,4632
# define SEPARATE_STUB_HEAP(121,4719
#define SEPARATE_STUB_ALLOC_SIZE(128,4948
#define COARSE_STUB_ALLOC_SIZE(135,5232
static const fragment_t linkstub_empty_fragment 147,5880
static const fragment_t linkstub_empty_fragment_x86 149,5963
static const linkstub_t linkstub_starting 151,6060
static const linkstub_t linkstub_reset 152,6125
static const linkstub_t linkstub_syscall 153,6190
static const linkstub_t linkstub_selfmod 154,6255
static const linkstub_t linkstub_ibl_deleted 155,6320
static const linkstub_t linkstub_sigreturn 157,6397
static const linkstub_t linkstub_asynch 159,6482
static const linkstub_t linkstub_native_exec 161,6554
static const linkstub_t linkstub_native_exec_syscall 163,6705
static const fragment_t linkstub_shared_syscall_trace_fragment 168,6851
static const fragment_t linkstub_shared_syscall_bb_fragment 170,6977
static const linkstub_t linkstub_shared_syscall_trace 185,7735
static const linkstub_t linkstub_shared_syscall_bb 187,7839
static const linkstub_t linkstub_shared_syscall_unlinked 191,8050
static const fragment_t coarse_fragment 196,8207
static const linkstub_t linkstub_coarse_exit 202,8520
static const linkstub_t linkstub_coarse_trace_head_exit 203,8585
static const linkstub_t linkstub_hot_patch 207,8749
static const linkstub_t linkstub_client 212,8913
static const fragment_t linkstub_ibl_trace_fragment 219,9152
static const fragment_t linkstub_ibl_bb_fragment 221,9248
static const linkstub_t linkstub_ibl_trace_ret 244,10397
static const linkstub_t linkstub_ibl_trace_jmp 246,10498
static const linkstub_t linkstub_ibl_trace_call 248,10596
static const linkstub_t linkstub_ibl_bb_ret 250,10696
static const linkstub_t linkstub_ibl_bb_jmp 252,10794
static const linkstub_t linkstub_ibl_bb_call 254,10889
static const linkstub_t linkstub_ibl_trace_ret_client 257,11012
static const linkstub_t linkstub_ibl_bb_ret_client 259,11120
is_empty_fragment(265,11262
empty_fragment_mark_x86(273,11453
typedef struct thread_link_data_t 281,11684
    linkstub_t linkstub_deleted;282,11720
    fragment_t linkstub_deleted_fragment;283,11753
    int linkstub_deleted_ordinal;289,11998
} thread_link_data_t;290,12032
link_reset_init(294,12133
link_reset_free(313,12858
link_init(325,13089
link_exit(332,13159
link_thread_init(340,13277
link_thread_exit(355,13824
linkstubs_init(363,14091
linkstub_size(384,14958
linkstub_propagatable_flags(397,15503
linkstub_frag_offs_at_end(406,15723
use_cbr_fallthrough_short(433,17040
linkstubs_heap_size(461,18263
linkstub_fragment(481,19026
linkstub_owned_by_fragment(551,22137
set_last_exit(582,23282
last_exit_deleted(600,24070
set_coarse_ibl_exit(678,27425
get_last_linkstub_ordinal(717,28781
get_deleted_linkstub(726,29020
get_starting_linkstub(735,29253
get_reset_linkstub(741,29332
get_syscall_linkstub(747,29405
get_selfmod_linkstub(753,29482
get_ibl_deleted_linkstub(759,29559
get_sigreturn_linkstub(766,29656
get_asynch_linkstub(772,29756
get_native_exec_linkstub(779,29838
get_native_exec_syscall_linkstub(785,29923
get_shared_syscalls_unlinked_linkstub(792,30039
get_shared_syscalls_trace_linkstub(798,30149
get_shared_syscalls_bb_linkstub(804,30253
get_hot_patch_linkstub(812,30402
get_client_linkstub(820,30514
is_ibl_sourceless_linkstub(827,30582
get_ibl_sourceless_linkstub(844,31065
is_client_ibl_linkstub(867,31759
get_client_ibl_linkstub(874,31925
get_coarse_exit_linkstub(886,32268
get_coarse_trace_head_exit_linkstub(893,32394
should_separate_stub(899,32487
local_exit_stub_size(905,32649
is_cbr_of_cbr_fallthrough(940,34223
separate_stub_create(949,34446
separate_stub_free(1004,37018
linkstub_shares_next_stub(1055,39260
linkstub_free_exitstubs(1072,39803
linkstubs_shift(1092,40531
is_linkable(1114,41453
link_branch(1169,43657
unlink_branch(1217,45671
incoming_direct_linkstubs_match(1262,47487
incoming_find_link(1278,48234
incoming_link_exists(1318,49878
incoming_remove_link_nosearch(1331,50349
incoming_remove_link_search(1394,53449
incoming_remove_link(1427,54894
add_to_incoming_list(1458,56171
add_private_check_shared(1491,57687
add_future_incoming(1531,59254
add_incoming(1569,60930
incoming_remove_fragment(1589,61715
debug_after_link_change(1732,68483
link_fragment_incoming(1744,68781
link_fragment_outgoing(1797,71128
unlink_fragment_incoming(1877,74466
unlink_fragment_outgoing(1916,76018
link_new_fragment(1950,77231
shift_links_to_new_fragment(2032,80896
static vm_area_vector_t *coarse_stub_areas;coarse_stub_areas2389,98705
coarse_stubs_init(2392,98762
coarse_stubs_free(2400,98969
num_coarse_stubs_for_prefix(2410,99314
coarse_stub_alignment(2419,99644
coarse_stubs_create(2428,99872
    special_heap_iterator_t shi;2478,102272
    cache_pc start,2479,102305
    cache_pc start, end,2479,102305
    cache_pc start, end, pc;2479,102305
    coarse_info_t *info;info2480,102334
} coarse_stubs_iterator_t;2481,102359
coarse_stubs_iterator_start(2484,102399
coarse_stubs_iterator_hasnext(2503,103103
coarse_stubs_iterator_next(2509,103268
coarse_stubs_iterator_stop(2531,103950
coarse_stubs_delete(2537,104060
entrance_stub_create(2579,105568
set_fake_direct_linkstub(2610,106941
print_coarse_incoming(2623,107414
prepend_new_coarse_incoming(2643,108119
fragment_coarse_link_wrapper(2689,109942
fragment_link_lookup_same_sharing(2703,110402
coarse_link_to_fine(2716,110983
coarse_link_direct(2768,113651
link_new_coarse_grain_fragment(2907,120290
coarse_remove_incoming(3143,131896
coarse_remove_outgoing(3184,133640
coarse_mark_trace_head(3247,136601
coarse_unit_unlink(3276,137762
coarse_unit_unlink_outgoing(3357,141190
coarse_unit_outgoing_linked(3386,142226
coarse_stub_lookup_by_target(3414,143043
coarse_lazy_link(3433,143832
fcache_return_coarse_prefix(3560,150240
trace_head_return_coarse_prefix(3577,150745
get_coarse_ibl_prefix(3594,151281
in_coarse_stubs(3613,151879
in_coarse_stub_prefixes(3619,151979
coarse_deref_ibl_prefix(3635,152492
get_stub_coarse_info(3649,152886
coarse_frozen_stub_size(3656,153087
coarse_update_outgoing(3718,155658
coarse_unit_shift_links(3797,159454
coarse_stubs_set_info(3849,161813
coarse_stubs_set_end_pc(3855,161919

link.h,4173
#define _CORE_LINK_H_ 43,2030
    LINK_DIRECT 68,3105
    LINK_DIRECT          = 0x0001,x000168,3105
    LINK_INDIRECT 69,3140
    LINK_INDIRECT        = 0x0002,x000269,3140
    LINK_RETURN 76,3492
    LINK_RETURN          = 0x0004,x000476,3492
    LINK_CALL 78,3618
    LINK_CALL            = 0x0008,x000878,3618
    LINK_JMP 79,3653
    LINK_JMP             = 0x0010,x001079,3653
    LINK_FAR 82,3751
    LINK_FAR             = 0x0020,x002082,3751
    LINK_TARGET_PREFIX 85,3810
    LINK_TARGET_PREFIX   = 0x0040,x004085,3810
    LINK_TRACE_CMP 91,4030
    LINK_TRACE_CMP       = 0x0080,x008091,4030
    LINK_SPECIAL_EXIT 97,4243
    LINK_SPECIAL_EXIT    = 0x0100,x010097,4243
    LINK_CALLBACK_RETURN 99,4293
    LINK_CALLBACK_RETURN = 0x0200,x020099,4293
    LINK_NI_SYSCALL_INT 102,4421
    LINK_NI_SYSCALL_INT  = 0x0200,x0200102,4421
    LINK_NI_SYSCALL 105,4530
    LINK_NI_SYSCALL      = 0x0400,x0400105,4530
    LINK_FINAL_INSTR_SHARED_FLAG 106,4565
    LINK_FINAL_INSTR_SHARED_FLAG = LINK_NI_SYSCALL,106,4565
    LINK_FRAG_OFFS_AT_END=110,4715
    LINK_FRAG_OFFS_AT_END= 0x0800,x0800110,4715
    LINK_END_OF_LIST 112,4751
    LINK_END_OF_LIST     = 0x1000,x1000112,4751
    LINK_FAKE 114,4787
    LINK_FAKE            = 0x2000,x2000114,4787
    LINK_LINKED 116,4823
    LINK_LINKED          = 0x4000,x4000116,4823
    LINK_SEPARATE_STUB 118,4859
    LINK_SEPARATE_STUB   = 0x8000,x8000118,4859
# define LINK_NI_SYSCALL_ALL 124,4978
# define LINK_NI_SYSCALL_ALL 126,5053
#  define LINKCOUNT_FORMAT_STRING 131,5156
#  define LINKCOUNT_FORMAT_STRING 133,5202
struct _linkstub_t 167,6207
    ushort         flags;168,6228
    ushort         cti_offset;174,6493
    ushort         fixed_stub_offset;177,6602
    linkcount_type_t count;182,6817
typedef struct _common_direct_linkstub_t 188,6912
    linkstub_t       l;189,6955
    linkstub_t       *next_incoming;next_incoming200,7438
    fragment_t       *target_fragment;target_fragment207,7711
} common_direct_linkstub_t;209,7757
typedef struct _direct_linkstub_t 213,7836
    common_direct_linkstub_t cdl;214,7872
    app_pc         target_tag;220,8092
    cache_pc       stub_pc;226,8318
} direct_linkstub_t;227,8346
typedef struct _cbr_fallthrough_linkstub_t 239,8887
    common_direct_linkstub_t cdl;251,9481
} cbr_fallthrough_linkstub_t;252,9515
typedef struct _indirect_linkstub_t 256,9619
    linkstub_t       l;257,9657
} indirect_linkstub_t;258,9681
typedef struct _post_linkstub_t 265,9879
    ushort         fragment_offset;273,10318
    ushort         padding;279,10646
} post_linkstub_t;280,10674
typedef struct _coarse_incoming_t 287,10987
        cache_pc stub_pc;289,11035
        linkstub_t *fine_l;fine_l290,11061
    } in;291,11089
    bool coarse;292,11099
    struct _coarse_incoming_t *next;next293,11116
} coarse_incoming_t;294,11153
#define LINKSTUB_FAKE(297,11251
#define LINKSTUB_DIRECT(299,11362
#define LINKSTUB_NORMAL_DIRECT(300,11422
#define LINKSTUB_INDIRECT(302,11528
#define LINKSTUB_CBR_FALLTHROUGH(304,11629
#define EXIT_IS_CALL(308,11788
#define EXIT_IS_JMP(309,11867
#define EXIT_IS_IND_JMP_PLT(310,11945
#define LINKSTUB_FINAL(312,12020
#define LINKSTUB_COARSE_PROXY(315,12157
#define LINKSTUB_SIZE(319,12308
#define LINKSTUB_NEXT_EXIT(325,12592
#define LINKSTUB_NEXT_INCOMING(332,12820
#define CBR_FALLTHROUGH_STUB_OFFS(340,13220
#define EXIT_CTI_PC_HELPER(343,13339
#define EXIT_CTI_PC(347,13466
#define EXIT_STUB_PC_HELPER(352,13664
#define EXIT_STUB_PC(356,13800
#define EXIT_TARGET_TAG(363,14130
# define EXIT_FIXED_STUB_PC(370,14418
# define EXIT_TARGETS_SHARED_SYSCALL(374,14529
# define EXIT_TARGETS_SHARED_SYSCALL(378,14682
#define EXIT_HAS_STUB(382,14819
#define EXIT_HAS_LOCAL_STUB(389,15284
# define IS_COARSE_LINKSTUB(512,19200
# define IS_SHARED_SYSCALLS_UNLINKED_LINKSTUB(517,19401
# define IS_SHARED_SYSCALLS_LINKSTUB(522,19631
# define IS_SHARED_SYSCALLS_TRACE_LINKSTUB(526,19854
# define IS_SHARED_SYSCALLS_UNLINKED_LINKSTUB(529,19968
# define IS_SHARED_SYSCALLS_LINKSTUB(530,20023
# define IS_SHARED_SYSCALLS_TRACE_LINKSTUB(531,20069

loader_shared.c,1050
static privmod_t *modlist;modlist54,2429
static privmod_t privmod_static[privmod_static71,2918
uint privmod_static_idx;73,3012
char search_paths[search_paths79,3257
uint search_paths_idx;81,3347
vm_area_vector_t *modlist_areas;modlist_areas84,3407
loader_init(99,3697
loader_exit(147,5699
loader_thread_init(164,6234
loader_thread_exit(212,8206
locate_and_load_private_library(244,9689
load_private_library(252,9939
unload_private_library(278,10621
in_private_library(291,10917
privload_lookup(299,11067
privload_lookup_by_base(323,11721
privload_insert(347,12357
privload_search_path_exists(410,14532
privload_read_drpath_file(426,15028
privload_load(480,17317
privload_unload(547,19995
# define LIB_SUBDIR 586,21535
# define LIB_SUBDIR 588,21569
#define EXT_SUBDIR 590,21604
privload_add_drext_path(592,21634
privload_load_finalize(629,23107
privload_has_thread_entry(662,24025
privload_modlist_initialized(668,24112
privload_next_module(674,24200
privload_first_module(681,24329
privload_print_modules(689,24475

module_list.c,1387
vm_area_vector_t *loaded_module_areas;loaded_module_areas49,2274
os_get_module_info_lock(66,2959
os_get_module_info_unlock(74,3142
os_get_module_info_write_lock(83,3324
os_get_module_info_write_unlock(91,3514
os_get_module_info_locked(99,3708
os_get_module_info_write_locked(107,3860
module_area_create(118,4097
module_area_delete(132,4575
modules_init(143,4873
is_module_list_initialized(154,5217
modules_reset_list(160,5300
modules_exit(191,6369
module_list_add_mapping(211,6903
module_list_remove_mapping(231,7747
module_list_add(241,8156
module_list_remove(282,9905
os_module_set_flag_value(341,11977
os_module_set_flag(362,12479
os_module_clear_flag(368,12601
os_module_get_flag(374,12726
module_pc_lookup(394,13301
module_overlaps(403,13550
os_get_module_name_internal(414,13891
os_get_module_name(446,14988
os_get_module_name_strdup(461,15295
os_get_module_name_buf(472,15691
os_get_module_name_buf_strdup(486,16195
os_module_get_view_size(494,16481
struct _module_iterator_t 510,16833
    vmvector_iterator_t vmvi;511,16861
module_iterator_start(516,16954
module_iterator_hasnext(529,17406
module_iterator_next(547,17939
module_iterator_stop(560,18335
region_intersection_MD5update(573,18780
module_calculate_digest_helper(594,19583
ensure_section_readable(633,21479
restore_unreadable_section(679,23301
module_calculate_digest(730,25290

module_shared.h,2890
#define MODULE_LIST_H35,1774
typedef struct _module_handle_t * module_handle_t;57,2430
#define MODULE_FILE_VERSION_INVALID 61,2498
typedef union _version_number_t 67,2684
    uint64 version;68,2718
        uint ms;70,2796
        uint ls;71,2825
    } version_uint;72,2854
        ushort p2;74,2933
        ushort p1;75,2962
        ushort p4;76,2991
        ushort p3;77,3020
    } version_parts;78,3049
} version_number_t;79,3115
typedef struct _module_names_t 98,3673
    const char *module_name;module_name99,3706
    const char *file_name;file_name103,4054
    const char *exe_name;exe_name106,4222
    const char *rsrc_name;rsrc_name109,4458
    uint64 inode;113,4721
} module_names_t;115,4794
#define GET_MODULE_NAME(130,5333
#define GET_MODULE_NAME(140,5942
typedef struct _module_area_t 148,6386
    app_pc start;162,7326
    app_pc end;163,7344
    app_pc entry_point;165,7361
    uint flags;167,7386
    module_names_t names;169,7403
    char *full_path;full_path170,7429
    os_module_data_t os_data;172,7451
} module_area_t;173,7520
    MODULE_HAS_PRIMARY_COARSE 178,7671
    MODULE_HAS_PRIMARY_COARSE = 0x00000001,x00000001178,7671
    MODULE_RCT_LOADED 181,7847
    MODULE_RCT_LOADED      = 0x00000002,x00000002181,7847
    MODULE_HAS_BORLAND_SEH 184,7980
    MODULE_HAS_BORLAND_SEH = 0x00000004,x00000004184,7980
    MODULE_BEING_UNLOADED 187,8109
    MODULE_BEING_UNLOADED  = 0x00000008,x00000008187,8109
    MODULE_WAS_EXEMPTED 189,8220
    MODULE_WAS_EXEMPTED    = 0x00000010,x00000010189,8220
    MODULE_RCT_SCANNED 192,8397
    MODULE_RCT_SCANNED     = 0x00000020,x00000020192,8397
    MODULE_DO_NOT_PERSIST 196,8521
    MODULE_DO_NOT_PERSIST  = 0x00000040,x00000040196,8521
    MODULE_NULL_INSTRUMENT 199,8593
    MODULE_NULL_INSTRUMENT = 0x00000080,x00000080199,8593
typedef struct _module_iterator_t module_iterator_t;260,10997
typedef void *module_base_t;module_base_t300,13043
module_info_exists(359,15447
    byte full_MD5[full_MD5383,16248
    byte short_MD5[short_MD5392,16702
} module_digest_t;398,16952
typedef struct _privmod_t 429,18206
    app_pc base;430,18234
    size_t size;431,18251
    const char *name;name432,18268
    char path[path433,18290
    uint ref_count;434,18319
    bool externally_loaded;435,18339
    bool is_client;437,18391
    struct _privmod_t *next;next439,18437
    struct _privmod_t *prev;prev440,18466
    void *os_privmod_data;os_privmod_data441,18495
} privmod_t;442,18522
# define DLL_PROCESS_INIT 447,18583
# define DLL_PROCESS_EXIT 448,18628
# define DLL_THREAD_INIT 449,18673
# define DLL_THREAD_EXIT 450,18717
# define DLL_PROCESS_INIT 452,18767
# define DLL_PROCESS_EXIT 453,18795
# define DLL_THREAD_INIT 454,18823
# define DLL_THREAD_EXIT 455,18851
#define PRIVMOD_STATIC_NUM 459,18942
#define SEARCH_PATHS_NUM 464,19163

moduledb.c,1011
static char **exemption_lists exemption_lists46,2172
#define GET_EXEMPT_LIST(47,2210
moduledb_add_to_exempt_list(55,2505
moduledb_remove_from_exempt_list(79,3334
moduledb_update_exempt_list(89,3745
moduledb_process_relaxation_flags(105,4366
START_DATA_SECTION(146,6247
#define MAX_COMPANY_NAME 166,6998
moduledb_process_image(169,7033
END_DATA_SECTION(240,10488
moduledb_init(246,10631
moduledb_exit(262,11103
moduledb_exempt_list_empty(283,11740
moduledb_check_exempt_list(291,11936
print_moduledb_exempt_lists(308,12498
    PROCESS_CONTROL_NO_HASHLIST,340,13711
    PROCESS_CONTROL_HASHLIST_EMPTY,341,13744
    PROCESS_CONTROL_LONG_LIST,347,13987
    PROCESS_CONTROL_NOT_MATCHED,349,14019
    PROCESS_CONTROL_MATCHED350,14052
# define IS_PROCESS_CONTROL_MATCHED(358,14388
process_control_report_long_list(366,14724
process_control_match(386,15445
process_control_whitelist(463,18925
process_control_blacklist(564,22997
process_control(625,25787
void process_control_init(662,27185

moduledb.h,1308
#define _MODULEDB_H_36,1758
    SECTION_NO_CHG 42,1943
    SECTION_IF_RX 43,1967
    SECTION_IF_X 44,1991
    SECTION_ALLOW 45,2015
    MODULEDB_ALL_SECTIONS_BITS 51,2164
    MODULEDB_ALL_SECTIONS_BITS   = 0x00000003,x0000000351,2164
    MODULEDB_ALL_SECTIONS_SHIFT 52,2247
    MODULEDB_RCT_EXEMPT_TO 53,2330
    MODULEDB_RCT_EXEMPT_TO       = 0x00000004,x0000000453,2330
    MODULEDB_REPORT_ON_LOAD 54,2377
    MODULEDB_REPORT_ON_LOAD      = 0x00000008,x0000000854,2377
    MODULEDB_DLL2HEAP 55,2424
    MODULEDB_DLL2HEAP            = 0x00000010,x0000001055,2424
    MODULEDB_DLL2STACK 56,2471
    MODULEDB_DLL2STACK           = 0x00000020,x0000002056,2471
    MODULEDB_EXEMPT_RCT 61,2608
    MODULEDB_EXEMPT_IMAGE 62,2646
    MODULEDB_EXEMPT_DLL2HEAP 63,2684
    MODULEDB_EXEMPT_DLL2STACK 64,2722
    MODULEDB_EXEMPT_NUM_LISTS 65,2760
} moduledb_exempt_list_t;66,2798
# define PROCESS_CONTROL_MODE_OFF 94,3455
# define PROCESS_CONTROL_MODE_WHITELIST 95,3511
# define PROCESS_CONTROL_MODE_BLACKLIST 96,3567
# define PROCESS_CONTROL_MODE_WHITELIST_INTEGRITY 101,3806
# define IS_PROCESS_CONTROL_MODE_WHITELIST(103,3863
# define IS_PROCESS_CONTROL_MODE_BLACKLIST(105,3986
# define IS_PROCESS_CONTROL_MODE_WHITELIST_INTEGRITY(107,4109
# define IS_PROCESS_CONTROL_ON(109,4252

monitor.c,1804
# define MAX_TRACE_BUFFER_SIZE 69,2824
# define MAX_TRACE_BUFFER_SIZE 71,2880
# define INITIAL_TRACE_BUFFER_SIZE 77,3056
# define INITIAL_TRACE_BUFFER_SIZE 79,3119
#define INITIAL_NUM_BLKS 82,3182
#define INIT_COUNTER_TABLE_SIZE 84,3210
#define COUNTER_TABLE_LOAD 85,3244
#define COUNTER_ALLOC(90,3420
#define COUNTER_FREE(94,3621
#define TH_COUNTER_CREATED_TRACE_VALUE(107,4178
delete_private_copy(110,4272
create_private_copy(149,6062
extend_unmangled_ilist(228,9961
mangle_trace_at_end(285,12472
monitor_init(301,12901
monitor_thread_reset_init(312,13197
monitor_thread_reset_free(318,13293
trace_abort_and_delete(324,13389
monitor_exit(335,13704
monitor_thread_init(343,13878
monitor_thread_exit(383,15642
thcounter_lookup(426,17396
thcounter_add(439,17786
thcounter_remove(460,18531
thcounter_range_remove(480,19215
is_building_trace(506,20174
cur_trace_tag(513,20331
cur_trace_vmlist(520,20474
reset_trace_state(527,20628
monitor_delete_would_abort_trace(620,24956
monitor_remove_fragment(634,25393
unlink_ibt_trace_head(688,27587
mark_trace_head(738,29833
should_be_trace_head_internal_unsafe(884,37198
should_be_trace_head_internal(953,39985
should_be_trace_head(995,42019
check_for_trace_head(1005,42416
monitor_is_linkable(1030,43599
make_room_in_trace_buffer(1072,45232
trace_exit_stub_size_diff(1149,48311
enum { MAX_TRACE_FRACTION_OF_CACHE 1179,49688
get_and_check_add_size(1191,50238
trace_flags_from_component_flags(1229,52214
trace_flags_from_trace_head_flags(1235,52368
end_and_emit_trace(1255,53039
internal_extend_trace(1712,72855
internal_restore_last(1858,78777
monitor_cache_exit(1904,80933
check_fine_to_coarse_trace_head(1945,82849
monitor_cache_enter(1982,84610
trace_abort(2507,107610
get_trace_exit_component_tag(2565,109756

monitor.h,1971
#define _MONITOR_H_ 42,1961
    TRACE_HEAD_YES 69,2998
    TRACE_HEAD_YES           = 0x01,x0169,2998
    TRACE_HEAD_OBTAINED_LOCK 70,3035
    TRACE_HEAD_OBTAINED_LOCK = 0x02,x0270,3035
typedef struct _trace_head_counter_t 117,5147
    app_pc tag;118,5186
    uint   counter;119,5202
    struct _trace_head_counter_t *next;next123,5314
} trace_head_counter_t;124,5354
typedef struct _trace_head_table_t 126,5379
    trace_head_counter_t **counter_table;counter_table127,5416
    uint  hash_bits;128,5458
    ptr_uint_t  hash_mask;129,5479
    uint  hash_mask_offset;130,5506
    hash_function_t hash_func;131,5534
    uint  capacity;132,5565
    uint  entries;133,5610
    uint  load_factor_percent;134,5629
    uint  resize_threshold;135,5699
} trace_head_table_t;136,5762
typedef struct _trace_bb_build_t 138,5785
    trace_bb_info_t info;139,5820
    void *vmlist;vmlist143,5960
    instr_t *end_instr;end_instr144,5978
    bool final_cti;149,6188
} trace_bb_build_t;150,6208
typedef struct _monitor_data_t 152,6229
    app_pc         trace_tag;157,6442
    uint           trace_flags;158,6502
    instrlist_t      trace;159,6570
    byte           *trace_buf;trace_buf160,6651
    uint           trace_buf_size;161,6732
    uint           trace_buf_top;162,6803
    void *         trace_vmlist;163,6886
    uint           num_blks;164,6958
    trace_bb_build_t *blk_info;blk_info165,7039
    uint           blk_info_length;166,7123
    uint           emitted_size;167,7190
    fragment_t *     last_copy;168,7273
    fragment_t *     last_fragment;171,7492
    uint           last_fragment_flags;172,7577
    trace_head_table_t thead_table;178,7842
    instrlist_t    unmangled_ilist;182,7967
    instrlist_t    *unmangled_bb_ilist;unmangled_bb_ilist183,8003
    bool           pass_to_client;185,8138
    uint           final_exit_flags;190,8291
    fragment_t     wrapper;193,8350
} monitor_data_t;195,8429

native_exec.c,639
vm_area_vector_t *native_exec_areas;native_exec_areas55,2374
static const app_pc retstub_start 57,2412
static const app_pc retstub_end 59,2497
native_exec_init(63,2584
native_exec_exit(75,2956
is_native_pc(85,3160
on_native_exec_list(91,3259
check_and_mark_native_exec(121,4321
native_exec_module_load(149,5309
native_exec_module_unload(157,5541
entering_native(169,5965
call_to_native(202,7356
return_to_native(242,8955
back_from_native_common(256,9312
pop_retaddr_for_index(289,10557
return_from_native(312,11514
native_module_callout(335,12301
interpret_back_from_native(353,12951
put_back_native_retaddrs(368,13596

native_exec.h,74
#define _NATIVE_EXEC_H_ 34,1705
native_exec_is_back_from_native(96,3222

nudge.c,251
nudge_terminate_on_dstack(65,2572
generic_nudge_target(81,3183
nudge_thread_cleanup(103,3925
generic_nudge_handler(196,8697
handle_nudge(282,11894
#define VALID_THIN_CLIENT_NUDGES 311,12921
nudge_add_pending(444,18727
nudge_internal(471,19566

nudge.h,26
#define _NUDGE_H_35,1765

options.c,4467
#  define inline 56,2235
#  define snprintf 57,2261
#  define WIN32_LEAN_AND_MEAN58,2290
typedef unsigned int uint;64,2426
# define print_file(66,2454
typedef char bool;69,2496
#  define true 72,2537
#  define false 73,2557
#  define NULL 76,2599
 struct stats_type 79,2628
     int logmask;80,2649
     int loglevel;81,2667
 } thestats;82,2686
 struct stats_type *stats stats84,2700
# define ASSERT(89,2921
# define OPTION_PARSE_ERROR(93,3055
static void ignore_varargs_function(95,3103
# define FATAL_USAGE_ERROR(97,3219
# define USAGE_ERROR 99,3312
# define DOLOG(100,3371
#  define OPTION_COMMAND_INTERNAL(109,3556
#  define OPTION_COMMAND(110,3692
const internal_options_t default_internal_options 115,3951
#undef OPTION_COMMAND_INTERNAL118,4032
#undef OPTION_COMMAND119,4063
#  define OPTION_COMMAND_INTERNAL 124,4125
#  define OPTION_COMMAND_INTERNAL(136,4778
#define OPTION_COMMAND(141,4950
const options_t default_options 146,5197
# define SELF_PROTECT_OPTIONS(152,5333
# define SELF_UNPROTECT_OPTIONS(153,5407
# define OPTIONS_PROTECTED(157,5608
char option_string[option_string162,5783
# define ASSERT_OWN_OPTIONS_LOCK(163,5830
# define CORE_STATIC 164,5897
options_t dynamo_options 166,5948
options_t temp_options 176,6413
# define ASSERT_OWN_OPTIONS_LOCK(187,6821
# define CORE_STATIC188,6860
#undef OPTION_COMMAND191,6954
set_dynamo_options_defaults(198,7072
#undef OPTION_COMMAND_INTERNAL203,7252
#  define OPTION_COMMAND_INTERNAL 207,7425
#  define OPTION_COMMAND_INTERNAL(209,7481
getword_common(219,7933
getword(281,9676
parse_word(288,9869
#define ISBOOL_bool 293,10034
#define ISBOOL_uint 294,10056
#define ISBOOL_uint_size 295,10078
#define ISBOOL_uint_time 296,10105
#define ISBOOL_uint_addr 297,10132
#define ISBOOL_pathstring_t 298,10159
#define ISBOOL_liststring_t 299,10189
parse_bool(302,10232
parse_uint(308,10311
parse_uint_size(325,10818
parse_uint_time(354,11717
parse_uint_addr(379,12519
parse_pathstring_t(395,13004
parse_liststring_t(407,13518
#define OPTION_COMMAND(439,14915
set_dynamo_options_common(464,16565
#undef OPTION_COMMAND520,18756
set_dynamo_options(523,18795
set_dynamo_options_other_process(530,18984
check_param_bounds(542,19332
PRINT_STRING_bool(579,20671
PRINT_STRING_uint(585,20852
#define PRINT_STRING_uint_size(592,21131
#define PRINT_STRING_uint_time(596,21367
#define PRINT_STRING_uint_addr(598,21497
#define PRINT_STRING_pathstring_t(600,21631
#define PRINT_STRING_liststring_t(601,21761
#define DIFF_bool(604,21893
#define DIFF_uint(605,21947
#define DIFF_uint_size(606,22001
#define DIFF_uint_time(607,22060
#define DIFF_uint_addr(608,22119
#define DIFF_pathstring_t(609,22178
#define DIFF_liststring_t(610,22243
#define COPY_bool(612,22309
#define COPY_uint(613,22362
#define COPY_uint_size(614,22415
#define COPY_uint_time(615,22473
#define COPY_uint_addr(616,22531
#define COPY_pathstring_t(617,22589
#define COPY_liststring_t(618,22670
get_dynamo_options_string(622,22815
#define OPTION_COMMAND(627,22958
#undef OPTION_COMMAND640,23803
get_pcache_dynamo_options_string(652,24071
#define OPTION_COMMAND(658,24267
#undef OPTION_COMMAND671,25115
has_pcache_dynamo_options(680,25319
#define OPTION_COMMAND(682,25394
#undef OPTION_COMMAND692,26020
enum {OPTION_TYPE_STATIC,OPTION_TYPE_STATIC696,26063
enum {OPTION_TYPE_STATIC, OPTION_TYPE_DYNAMIC}OPTION_TYPE_DYNAMIC696,26063
static char optionbuff[optionbuff701,26279
static char new_optionbuff[new_optionbuff702,26322
update_dynamic_options(708,26509
#define OPTION_COMMAND(715,26731
#undef OPTION_COMMAND742,28620
check_list_default_and_append(753,28966
#define SECURITY_OPTION_CONSISTENT(789,30395
check_option_compatibility_helper(800,31031
# define MAX_NUM_LIB_TLS_PAGES 1872,78965
check_option_compatibility(1903,80132
check_dynamic_option_compatibility(1912,80353
options_init(1922,80628
options_exit(1942,81284
options_make_writable(1949,81403
options_restore_readonly(1960,81660
synchronize_dynamic_options(1969,81867
get_process_options(2058,85276
dr_get_string_option(2103,87106
#define OPTION_COMMAND(2108,87289
#undef OPTION_COMMAND2116,87785
dr_get_integer_option(2125,87917
#define OPTION_COMMAND(2136,88397
#undef OPTION_COMMAND2144,88893
show_dynamo_options(2155,89042
show_dynamo_option_descriptions(2170,89536
#define OPTION_COMMAND(2172,89572
#undef OPTION_COMMAND2179,89982
unit_test_options(2183,90012

options.h,3755
#define _OPTIONS_H_44,1923
    OPTION_ENABLED 57,2243
    OPTION_ENABLED     = 0x1,x157,2243
    OPTION_DISABLED 58,2314
    OPTION_DISABLED    = 0x0,x058,2314
    OPTION_BLOCK 75,3256
    OPTION_BLOCK       = 0x2,x275,3256
    OPTION_NO_BLOCK 76,3286
    OPTION_NO_BLOCK    = 0x0,x076,3286
    OPTION_HANDLING 79,3403
    OPTION_HANDLING    = 0x4,x479,3403
    OPTION_NO_HANDLING 80,3483
    OPTION_NO_HANDLING = 0x0,x080,3483
    OPTION_REPORT 83,3600
    OPTION_REPORT      = 0x8,x883,3600
    OPTION_NO_REPORT 84,3675
    OPTION_NO_REPORT   = 0x0,x084,3675
    OPTION_BLOCK_IGNORE_DETECT 87,3811
    OPTION_BLOCK_IGNORE_DETECT  = 0x20,x2087,3811
    OPTION_CUSTOM 90,3938
    OPTION_CUSTOM      = 0x100,x10090,3938
    OPTION_NO_CUSTOM 91,4027
    OPTION_NO_CUSTOM   = 0x0,x091,4027
} security_option_t;92,4116
    HOOKED_TRAMPOLINE_DIE 97,4231
    HOOKED_TRAMPOLINE_SQUASH 98,4302
    HOOKED_TRAMPOLINE_CHAIN 99,4387
    HOOKED_TRAMPOLINE_HOOK_DEEPER 100,4471
    HOOKED_TRAMPOLINE_MAX 101,4555
    APPFAULT_FAULT 109,4786
    APPFAULT_FAULT    = 0x0001,x0001109,4786
    APPFAULT_CRASH 110,4867
    APPFAULT_CRASH    = 0x0002,x0002110,4867
#define uint_size 118,5189
#define uint_time 119,5212
#define uint_addr 121,5306
#define ISSTRING_bool 127,5509
#define ISSTRING_uint 128,5533
#define ISSTRING_uint_size 129,5557
#define ISSTRING_uint_time 130,5586
#define ISSTRING_ptr_uint_t 131,5615
#define ISSTRING_pathstring_t 132,5645
#define ISSTRING_liststring_t 133,5677
    OP_PCACHE_NOP 137,5783
    OP_PCACHE_LOCAL 138,5836
    OP_PCACHE_GLOBAL 142,6081
} op_pcache_t;143,6158
#define OPTION_STRING(155,6762
#define EMPTY_STRING 156,6813
#define OPTION_COMMAND(157,6864
#define OPTION_COMMAND_INTERNAL(163,7229
enum option_is_internal 169,7589
#undef OPTION_COMMAND172,7643
#undef OPTION_COMMAND_INTERNAL173,7665
#undef OPTION_STRING174,7696
#undef EMPTY_STRING175,7717
#define OPTION_STRING(178,7770
#define EMPTY_STRING 179,7797
#  define OPTION_COMMAND_INTERNAL(183,7945
#  define OPTION_COMMAND_INTERNAL(187,8135
#define OPTION_COMMAND(191,8313
typedef struct _options_t 194,8496
} options_t;196,8549
#undef OPTION_COMMAND198,8563
#undef OPTION_COMMAND_INTERNAL199,8585
#  define OPTION_COMMAND(203,8705
#  define OPTION_COMMAND_INTERNAL(205,8857
typedef struct _internal_options_t 208,9046
} internal_options_t;210,9108
#  undef OPTION_COMMAND211,9130
#  undef OPTION_COMMAND_INTERNAL212,9154
#undef uint_size215,9195
#undef uint_time216,9212
#undef uint_addr217,9229
#define IS_OPTION_INTERNAL(232,9749
#define IS_OPTION_STRING(233,9810
#define DEFAULT_OPTION_VALUE(236,9995
#  define DEFAULT_INTERNAL_OPTION_VALUE 239,10182
#  define DEFAULT_INTERNAL_OPTION_VALUE(241,10249
#define SET_DEFAULT_VALUE(248,10593
#define SYNCHRONIZE_DYNAMIC_OPTION(277,11264
#define SHARED_FRAGMENTS_ENABLED(313,12496
#define SCRATCH_ALWAYS_TLS(322,12908
#define PRIVATE_TRACES_ENABLED(326,13087
#define SHARED_BB_IB_TARGETS(330,13227
#define SHARED_BB_ONLY_IB_TARGETS(340,13646
#define SHARED_IB_TARGETS(344,13791
#define SHARED_IBT_TABLES_ENABLED(348,13930
#define TRACEDUMP_ENABLED(351,14054
#define RUNNING_WITHOUT_CODE_CACHE(357,14283
# define CLIENT_OR_STANDALONE(361,14469
# define CLIENT_OR_STANDALONE(364,14582
#define IS_STRING_OPTION_EMPTY(375,14950
#define IS_LISTSTRING_OPTION_FORALL(380,15143
#  define IS_INTERNAL_STRING_OPTION_EMPTY(383,15247
#  define IS_INTERNAL_STRING_OPTION_EMPTY(385,15326
#define COARSE_FILL_IBL_MASK(389,15467
string_option_read_lock(393,15597
string_option_read_unlock(397,15678
    LIST_NO_MATCH 402,15760
    LIST_ON_DEFAULT 403,15814
    LIST_ON_APPEND 404,15839
} list_default_or_append_t;405,15864

optionsx.h,1884
#define OPTION_DEFAULT(71,3068
#define OPTION_NAME_DEFAULT(75,3259
#define OPTION_NAME(79,3446
#define OPTION(82,3590
#define PC_OPTION_DEFAULT(85,3712
#define PC_OPTION(89,3905
#define PCL_OPTION_DEFAULT(92,4031
#define PCL_OPTION(96,4223
#define DYNAMIC_OPTION_DEFAULT(101,4470
#define DYNAMIC_OPTION(104,4631
#define DYNAMIC_PCL_OPTION_DEFAULT(107,4761
#define DYNAMIC_PCL_OPTION(110,4924
#define OPTION_ALIAS(115,5237
#define OPTION_DEFAULT_INTERNAL(125,5967
#define OPTION_NAME_INTERNAL(128,6163
#define OPTION_INTERNAL(131,6362
#define PC_OPTION_DEFAULT_INTERNAL(134,6474
#define PC_OPTION_INTERNAL(137,6676
#define DISABLE_RESET(141,6821
#define REENABLE_RESET(158,7752
#define DISABLE_TRACES(181,9264
#define REENABLE_TRACES(189,9672
#define ENABLE_SECURITY(198,10081
    DYNAMIC_OPTION_DEFAULT(218,11384
    PC_OPTION_INTERNAL(227,11757
    OPTION_DEFAULT(272,14364
#   define DISABLE_PROBE_API(447,23072
    PC_OPTION_INTERNAL(485,24803
    OPTION_DEFAULT_INTERNAL(714,37736
    OPTION_DEFAULT_INTERNAL(781,41700
    OPTION_DEFAULT(847,45016
    OPTION_DEFAULT(918,48790
    OPTION_DEFAULT(1235,66867
    OPTION_DEFAULT_INTERNAL(1245,67242
    DYNAMIC_PCL_OPTION(1534,84323
    DYNAMIC_OPTION(1540,84761
    DYNAMIC_OPTION(1549,85370
    DYNAMIC_OPTION_DEFAULT(1554,85738
    OPTION_DEFAULT(1802,101506
#   define ENABLE_COARSE_UNITS(1883,107296
    OPTION_ALIAS(1899,108247
    OPTION_DEFAULT(2085,118906
    OPTION_DEFAULT(2185,125580
    OPTION_DEFAULT(2481,141139
    OPTION_DEFAULT_INTERNAL(2580,146878
    OPTION_DEFAULT_INTERNAL(2614,148820
#define OPTIMIZE_OPTION(2644,150199
# undef OPTIMIZE_OPTION2683,151809
    DYNAMIC_OPTION_DEFAULT(2743,154829
#undef OPTION2826,159034
#undef OPTION_NAME2827,159048
#undef OPTION_DEFAULT2828,159067
#undef DYNAMIC_OPTION2830,159090
#undef DYNAMIC_OPTION_DEFAULT2831,159112

sample_file_creator.c,15
int main(4,40

unit-rct.c,494
typedef int (*fconvert_t)fconvert_t51,2102
typedef int (*fmult_t)fmult_t52,2136
int foo(54,2166
int f2(65,2375
int f3(70,2410
int f7(75,2445
bar(81,2485
fmult_t farr[farr92,2714
test_indcalls(95,2756
test_switch_helper(109,3009
test_switch(121,3178
test_small_array(136,3525
test_lookup_delete(285,8326
test_self_direct(305,9005
test_rct_ind_branch_check(381,11867
test_loaddll(439,13750
void func2(455,14137
void func3(459,14196
void func4(463,14269
unit_main(470,14358

unit_tests.c,14
main(51,2012

stats.c,1092
kstat_variables_t tkv;69,2965
kstat_stack_t ks;70,2988
kstat_init_variable(80,3149
kstats_evaluate_expressions(90,3398
#define KSTAT_SUM(95,3605
#define KSTAT_DEF(99,3832
#undef KSTAT_SUM101,3909
#undef KSTAT_DEF102,3926
#define KSTAT_SUM(106,4001
kstat_init_variables(109,4078
#define KSTAT_DEF(111,4124
#undef KSTAT_DEF113,4207
enum {KSTAT_OUTLIER_THRESHOLD_MS KSTAT_OUTLIER_THRESHOLD_MS123,4625
timestamp_t kstat_ignore_context_switch;124,4683
kstat_frequency_per_msec;127,4745
kstat_print_individual(131,4850
kstat_report(160,5945
#define KSTAT_DEF(165,6149
#undef KSTAT_DEF169,6374
kstats_main_logfile_name(179,6705
kstats_thread_logfile_name(185,6790
kstat_init(192,6861
kstat_exit(220,7653
kstat_calibrate(239,8076
kstat_thread_init(262,8695
kstat_merge_var(295,9912
kstat_merge(309,10453
#define KSTAT_DEF(311,10534
#undef KSTAT_DEF313,10649
dump_thread_kstats(317,10674
kstat_var_name(335,11430
#define KSTAT_DEF(338,11561
#undef KSTAT_DEF342,11668
kstats_dump_stack(348,11741
kstat_thread_exit(362,12164
kstat_test(392,13229
int main(454,14445

stats.h,1775
#define STATS_H40,1821
    uint num_self;63,2199
    timestamp_t total_self;82,3050
    timestamp_t total_sub;83,3118
    timestamp_t min_cum;86,3253
    timestamp_t max_cum;87,3332
    timestamp_t total_outliers;88,3410
} kstat_variable_t;90,3570
#define KSTAT_DEF(96,3748
#define KSTAT_SUM(97,3801
#undef KSTAT_SUM99,3894
#undef KSTAT_DEF100,3911
} kstat_variables_t;101,3928
    kstat_variable_t *var;var105,4014
    timestamp_t      self_time;106,4041
    timestamp_t      subpath_time;107,4073
    timestamp_t      outlier_time;108,4108
} kstat_node_t;109,4143
enum {KSTAT_MAX_DEPTH KSTAT_MAX_DEPTH111,4160
    volatile uint depth;115,4256
    timestamp_t last_start_time;116,4316
    timestamp_t last_end_time;117,4349
    kstat_node_t node[node118,4380
} kstat_stack_t;119,4420
    thread_id_t       thread_id;123,4501
    kstat_variables_t vars_kstats;124,4534
    kstat_stack_t     stack_kstats;125,4569
    file_t           outfile_kstats;126,4605
} thread_kstats_t;127,4642
#define KSTAT_THREAD_NO_PV_START(132,4712
#define KSTAT_THREAD_NO_PV_END(137,5032
#define KSTAT_THREAD(143,5227
#define KSTAT_OTHER_THREAD(151,5660
# define KSTAT_TOS_MATCHING(160,6136
#define KSTAT_SERIALIZE_INSTRUCTIONS(166,6461
#  define CORRECT_OUTLIER(174,6810
#  define CORRECT_OUTLIER(179,7015
#define UPDATE_CURRENT_COUNTER(184,7138
#define KSTAT_INTERNAL_DEBUG(200,8087
#define KSTAT_DUMP_STACK(210,8727
#define kstat_start_var(229,9621
#define kstat_switch_var(246,10490
#define kstat_stop_not_matching_var(249,10636
#define kstat_stop_matching_var(256,11021
#define kstat_tos_matching_var(264,11413
#define kstat_stop_not_propagated_var(266,11495
#define kstat_stop_rewind_var(291,13304
#define kstat_stop_longjmp_var(299,13728

string.c,380
strlen(62,2642
wcslen(73,2797
strchr(87,3111
strrchr(104,3524
strncpy(121,3856
memmove(137,4271
void *__memmove_chk(__memmove_chk157,4927
void *__strncpy_chk(__strncpy_chk168,5250
strncat(183,5611
strcmp(195,5870
strncmp(209,6149
memcmp(223,6449
strstr(240,6814
tolower(255,7128
strcasecmp(264,7256
strtoul(286,7923
identity(303,8435
unit_test_string(309,8487

synch.c,1503
typedef struct _thread_synch_data_t 53,2185
    spin_mutex_t *synch_lock;synch_lock58,2483
    int pending_synch_count;61,2661
    thread_synch_permission_t synch_perm;64,2821
    bool synch_with_success;68,3038
    priv_mcontext_t *set_mcontext;set_mcontext73,3281
    void *set_context;set_context74,3316
    size_t set_context_size;75,3339
    byte *set_context_alloc;set_context_alloc78,3429
} thread_synch_data_t;80,3465
free_setcontext(92,3866
synch_thread_free_setcontext(104,4240
synch_init(113,4497
synch_exit(118,4524
synch_thread_init(124,4592
synch_thread_exit(142,5317
thread_synch_state_no_xfer(165,6270
thread_synch_successful(178,6825
is_at_do_syscall(189,7159
is_native_thread_state_valid(244,9451
translate_mcontext(309,12705
waiting_at_safe_spot(406,17258
should_suspend_client_thread(431,18198
at_safe_spot(451,19091
should_wait_at_safe_spot(542,23676
set_synch_state(550,23937
check_wait_at_safe_spot(566,24511
adjust_wait_at_safe_spot(666,28938
set_synched_thread_context(685,29789
#define SYNCH_ALL_THREADS_MAXIMUM_LOOPS 761,33290
#define SYNCH_MAXIMUM_LOOPS 762,33375
#define SYNCH_WITH_WAIT_MS 767,33676
synch_thread_yield(771,33821
synch_with_thread(810,35796
synch_with_all_threads(1051,47374
        SYNCH_WITH_ALL_NEW 1070,48312
        SYNCH_WITH_ALL_NOTIFIED 1071,48349
        SYNCH_WITH_ALL_SYNCHED 1072,48386
resume_all_threads(1450,66866
end_synch_with_all_threads(1490,68121
translate_from_synchall_to_dispatch(1517,69192

synch.h,1308
#define SYNCH_H39,1808
    THREAD_SYNCH_NONE=46,2007
    THREAD_SYNCH_NO_LOCKS=50,2138
    THREAD_SYNCH_NO_LOCKS_NO_XFER=58,2466
    THREAD_SYNCH_VALID_MCONTEXT_NO_XFER=65,2742
    THREAD_SYNCH_VALID_MCONTEXT=69,2933
} thread_synch_permission_t;70,2967
    THREAD_SYNCH_SUSPENDED=77,3246
    THREAD_SYNCH_SUSPENDED_AND_CLEANED=78,3276
    THREAD_SYNCH_TERMINATED_AND_CLEANED=80,3403
    THREAD_SYNCH_SUSPENDED_VALID_MCONTEXT_OR_NO_XFER=85,3555
    THREAD_SYNCH_SUSPENDED_VALID_MCONTEXT=87,3612
} thread_synch_state_t;88,3656
    THREAD_SYNCH_RESULT_SUCCESS 91,3696
    THREAD_SYNCH_RESULT_SUSPEND_FAILURE 92,3741
    THREAD_SYNCH_RESULT_NOT_SAFE 93,3786
} thread_synch_result_t;94,3831
    THREAD_SYNCH_SUSPEND_FAILURE_ABORT 105,4273
    THREAD_SYNCH_SUSPEND_FAILURE_ABORT  = 0x00000001,x00000001105,4273
    THREAD_SYNCH_SUSPEND_FAILURE_IGNORE 106,4327
    THREAD_SYNCH_SUSPEND_FAILURE_IGNORE = 0x00000002,x00000002106,4327
    THREAD_SYNCH_SUSPEND_FAILURE_RETRY 111,4599
    THREAD_SYNCH_SUSPEND_FAILURE_RETRY  = 0x00000004,x00000004111,4599
    THREAD_SYNCH_SMALL_LOOP_MAX 114,4698
    THREAD_SYNCH_SMALL_LOOP_MAX         = 0x00000008,x00000008114,4698
#define THREAD_SYNCH_IS_CLEANED(118,4781
#define THREAD_SYNCH_IS_TERMINATED(122,5007
#define THREAD_SYNCH_SAFE(127,5255

utils.c,7110
try_except_t global_try_except;77,2679
soft_terminate(87,2917
ignore_assert(112,3498
internal_error(137,4280
external_error(191,6386
struct _thread_locks_t 213,7205
    mutex_t *last_lock;last_lock214,7230
#define DUMP_NONZERO(230,8019
#define DUMP_LOCK_INFO_ARGS(233,8176
dump_mutex_callstack(249,9099
dump_owned_locks(269,9686
thread_owns_no_locks(286,10361
thread_owns_one_lock(295,10648
thread_owns_two_locks(307,11113
thread_owns_first_or_both_locks_only(322,11696
dump_process_locks(338,12390
locks_not_closed(373,13932
locks_thread_init(419,15874
locks_thread_exit(432,16381
add_process_lock(450,17326
remove_process_lock(482,18726
mutex_collect_callstack(508,19847
enum {LOCK_NOT_OWNABLE,LOCK_NOT_OWNABLE541,20878
enum {LOCK_NOT_OWNABLE, LOCK_OWNABLE}LOCK_OWNABLE541,20878
deadlock_avoidance_lock(548,21086
deadlock_avoidance_unlock(637,25519
#define DEADLOCK_AVOIDANCE_LOCK(695,27976
#define DEADLOCK_AVOIDANCE_UNLOCK(696,28083
#  define DEADLOCK_AVOIDANCE_LOCK(698,28179
#  define DEADLOCK_AVOIDANCE_UNLOCK(699,28255
mutex_fork_reset(704,28373
static uint spinlock_count 721,29023
utils_init(726,29252
spinmutex_trylock(756,30430
spinmutex_lock(767,30796
spinmutex_lock_no_yield(779,31099
spinmutex_unlock(797,31663
spinmutex_delete(811,32159
mutex_ownable(819,32357
mutex_lock(834,32661
mutex_trylock(899,35278
mutex_unlock(923,35990
mutex_delete(952,37136
mutex_mark_as_app(974,37778
own_recursive_lock(984,37905
acquire_recursive_lock(995,38203
try_recursive_lock(1011,38563
release_recursive_lock(1025,38870
self_owns_recursive_lock(1037,39129
void read_lock(1090,41456
void write_lock(1207,46692
bool write_trylock(1237,47684
void read_unlock(1259,48473
void write_unlock(1298,50076
self_owns_write_lock(1325,50975
struct _broadcast_event_t 1338,51307
    event_t event;1339,51335
    volatile int num_waiting;1340,51354
create_broadcast_event(1344,51408
destroy_broadcast_event(1354,51640
signal_broadcast_event(1365,52001
intend_wait_broadcast_event_helper(1376,52314
unintend_wait_broadcast_event_helper(1381,52421
wait_broadcast_event_helper(1386,52529
hash_value(1402,52911
hashtable_num_bits(1481,55897
bitmap_find_first_set_bit(1505,56522
bitmap_find_set_block(1537,57025
bitmap_find_set_block_sequence(1556,57557
bitmap_initialize_free(1583,58422
bitmap_allocate_blocks(1589,58560
bitmap_free_blocks(1608,59005
bitmap_are_reserved_blocks(1620,59308
bitmap_count_set_bits(1633,59621
bitmap_check_consistency(1647,59800
get_thread_private_logfile(1667,60378
do_file_write(1685,60723
divide_uint64_print(1735,62864
double_print(1775,64799
display_error(1797,65457
print_symbolic_address(1809,65697
print_file(1816,65830
vprint_to_buffer(1830,66240
print_to_buffer(1853,67203
sn_print_line(1864,67436
print_log(1880,67824
do_syslog(1907,68423
notify(1924,68995
# define REPORT_MSG_MAX 2021,73061
# define REPORT_MSG_MAX 2023,73141
#define REPORT_LEN_VERSION 2025,73185
#define REPORT_LEN_OPTIONS 2034,73597
#define REPORT_NUM_STACK 2040,73964
# define REPORT_LEN_STACK_EACH 2042,74038
# define REPORT_LEN_STACK_EACH 2044,74084
#define REPORT_LEN_STACK 2047,74206
# define REPORT_LEN_PRIVLIBS 2050,74375
#define ASSERT_ROOM(2062,75015
under_internal_exception(2071,75327
# define EXCEPTION_PREFIX 2087,75818
# define EXCEPTION_PREFIX 2089,75899
#  define CLIENT_EXCEPTION_PREFIX 2093,76009
#  define CLIENT_EXCEPTION_PREFIX 2095,76096
#define REPORT_EXCEPTION_SKIP_PREFIX 2098,76183
#define REPORT_CLIENT_EXCEPTION_SKIP_PREFIX 2099,76282
report_dynamorio_problem(2108,76648
report_app_problem(2285,83910
is_readable_without_exception_try(2324,85275
is_string_readable_without_exception(2368,86842
memprot_string(2414,88251
is_region_memset_to_char(2431,88942
double_strchr(2446,89378
double_strrchr(2461,89712
our_wcsnlen(2485,90550
strcasecmp_with_wildcards(2500,90748
str_case_prefix(2525,91351
check_filter_common(2541,91664
check_filter(2574,92761
check_filter_with_wildcards(2580,92904
static char logdir[logdir2586,93060
static bool logdir_initialized 2587,93094
static char basedir[basedir2588,93134
static bool basedir_initialized 2589,93169
static char old_basedir[old_basedir2593,93384
enable_new_log_dir(2604,93995
create_log_dir(2610,94058
get_log_dir(2749,100081
open_log_file(2786,101418
close_log_file(2840,103428
get_unique_logfile(2854,103949
get_app_name_for_path(2902,105763
get_short_name(2908,105855
print_statistics(2926,106279
stats_thread_init(2975,107767
stats_thread_exit(2993,108551
dump_thread_stats(3009,109112
#define STATS_DEF(3042,110760
#undef STATS_DEF3052,111403
dump_global_stats(3064,111700
#define STATS_DEF(3076,112138
#undef STATS_DEF3085,112797
print_timestamp(3112,113481
dump_buffer_as_ascii(3133,114054
dump_buffer_as_bytes 3143,114277
is_valid_xml_char(3239,117664
is_valid_xml_string(3253,118211
is_valid_xml_cdata_string(3267,118584
is_valid_xml_body_string(3277,118867
is_valid_xml_attribute_string(3286,119161
print_xml_cdata(3302,119838
print_version_and_app_info(3324,120517
utils_exit(3341,121164
get_random_offset(3361,121732
        LCM_A 3368,121955
        LCM_Q 3369,121982
        LCM_R 3370,122002
set_random_seed(3402,123160
get_random_seed(3408,123221
static const uint days_per_month_normal[days_per_month_normal3414,123307
static const uint days_per_month_leap[days_per_month_leap3416,123408
year_is_leap_year(3420,123520
convert_millis_to_date(3429,123729
#define BASE_YEAR 3454,124688
#define DAYS_IN_400_YEARS 3456,124768
#define DAYS_IN_100_YEARS 3457,124809
#define DAYS_IN_4_YEARS 3458,124850
convert_date_to_millis(3491,125889
const uint crctab[crctab3524,126792
crc32(3593,130225
#define PUT_64BIT_LE(3627,131519
#define PUT_32BIT_LE(3637,132130
static unsigned char PADDING[PADDING3643,132461
MD5Init(3654,132835
MD5Update(3668,133115
MD5Pad(3706,134169
MD5Final(3727,134719
#define F1(3743,135111
#define F2(3744,135151
#define F3(3745,135183
#define F4(3746,135215
#define MD5STEP(3749,135304
MD5Transform(3758,135658
#undef F13852,139743
#undef F23853,139753
#undef F33854,139763
#undef F43855,139773
#undef MD5STEP3856,139783
module_digests_equal(3860,139885
read_entire_file(3881,140692
check_low_disk_threshold(3929,142231
#define MD5_FILE_READ_BUF_SIZE 3993,145327
get_md5_for_file(4002,145649
get_application_md5(4051,147493
get_md5_for_region(4111,150001
md5_digests_equal(4126,150402
region_intersection(4140,150919
typedef struct _profile_callers_t 4162,151833
    app_pc caller[caller4163,151869
    uint count;4164,151912
    struct _profile_callers_t *next;next4165,151928
} profile_callers_t;4166,151965
profile_callers(4180,152498
profile_callers_exit(4235,154346
#  undef printf4264,155191
# define printf(4266,155215
unit_test_utils(4271,155337
# define DO_TEST(4278,155416
# undef DO_TEST4295,156319
# define DO_TEST(4296,156335
# undef DO_TEST4314,157316
# undef printf4325,157598
dr_strdup(4331,157657
dr_wstrdup(4349,158151
dr_strfree(4396,159976
array_merge(4414,160682

dynamo.c,3828
bool    dynamo_initialized 89,2939
bool    dynamo_heap_initialized 90,2975
bool    automatic_startup 91,3016
bool    control_all_threads 92,3051
bool    dr_early_injected 94,3103
int     dr_early_injected_location 95,3138
bool    dr_earliest_injected 96,3200
static void * dr_earliest_inject_args;97,3238
bool    dr_injected_primary_thread 105,3580
bool    dr_injected_secondary_thread 106,3624
bool    dr_late_injected_primary_thread 109,3749
bool    dr_api_entry 113,3917
bool    dr_api_exit 114,3947
bool    dr_preinjected 117,4009
static bool dynamo_exiting 120,4084
bool    dynamo_exited 122,4127
bool    dynamo_exited_and_cleaned 123,4158
bool    dynamo_exited_log_and_stats 125,4214
bool    dynamo_resetting 131,4484
bool    standalone_library 133,4581
bool    post_execve 136,4636
byte *  initstack;139,4722
#define EXCEPTION_STACK_SIZE 143,4872
END_DATA_SECTION(173,6138
const char * const DATASEC_NAMES[DATASEC_NAMES195,6802
typedef struct _protect_info_t 203,7033
    mutex_t lock;207,7163
    int num_threads_unprot;208,7181
    int num_threads_suspended;209,7236
} protect_info_t;210,7267
static protect_info_t *protect_info;protect_info211,7285
static uint starttime;230,7721
file_t main_logfile 232,7745
dr_statistics_t *stats stats236,7829
thread_record_t ** all_threads;247,8254
main_logfile_name(269,9292
thread_logfile_name(275,9377
statistics_pre_init(284,9537
statistics_init(302,10262
# define STATS_DEF(315,10608
# define RSTATS_DEF(317,10648
#undef STATS_DEF320,10711
#undef RSTATS_DEF321,10728
# define STATS_DEF(329,11042
# define RSTATS_DEF(334,11256
#undef STATS_DEF340,11493
#undef RSTATS_DEF341,11510
statistics_exit(345,11543
get_dr_stats(351,11606
dynamorio_app_init(361,11857
dynamorio_fork_init(812,28784
standalone_init(926,32921
standalone_exit(996,35175
dynamo_process_exit_with_thread_info(1009,35482
dynamo_shared_exit(1016,35645
dynamorio_app_exit(1197,41453
synch_with_threads_at_exit(1207,41698
dynamo_process_exit_cleanup(1260,44222
dynamo_nullcalls_exit(1342,47640
dynamo_process_exit(1365,48134
create_new_dynamo_context(1530,54148
delete_dynamo_context(1601,57327
initialize_dynamo_context(1633,58672
create_callback_dcontext(1730,61862
is_thread_initialized(1826,66052
is_thread_known(1841,66456
mark_thread_execve(1851,66698
get_num_threads(1871,67224
is_last_app_thread(1877,67316
get_list_of_threads_common(1893,67973
get_list_of_threads(1942,69886
get_list_of_threads_ex(1949,70022
thread_lookup(1959,70282
get_thread_num(1991,71060
add_thread(2001,71274
remove_thread(2062,73900
dynamo_thread_init(2106,75300
dynamo_thread_exit_pre_client(2332,84316
dynamo_thread_exit_common(2355,85104
dynamo_thread_exit(2576,92913
dynamo_other_thread_exit(2584,93167
dynamo_thread_stack_free_and_exit(2599,93787
dr_app_setup(2613,94126
dr_app_cleanup(2626,94547
dr_app_start_helper(2652,95645
dr_app_stop(2671,96242
dr_app_setup_and_start(2677,96330
dynamo_thread_under_dynamo(2689,96539
dynamo_thread_not_under_dynamo(2711,97216
#define MAX_TAKE_OVER_ATTEMPTS 2730,97770
dynamorio_take_over_threads(2735,97864
dynamorio_app_take_over_helper(2760,98696
dynamorio_app_init_and_early_takeover(2812,100723
dynamorio_earliest_init_takeover_C(2845,102322
dynamorio_protect(2892,104101
dynamorio_unprotect(2961,106849
get_data_section_name(3018,109286
check_should_be_protected(3029,109496
data_sections_enclose_region(3073,111076
get_data_section_bounds(3099,112080
DECLARE_DATA_SECTION(3134,113746
data_section_exit(3172,114918
#define DATASEC_WRITABLE_MOD(3189,115544
protect_data_section(3199,115995
entering_dynamorio(3255,118523
exiting_dynamorio(3270,119020
is_on_initstack(3287,119626
is_on_dstack(3294,119783
is_currently_on_dstack(3301,119939
pre_second_thread(3309,120085

globals.h,16256
#define _GLOBALS_H_ 43,2015
#define SN_INJ_BLKS 45,2038
#define SURYA_CODE_INJECT 46,2063
#define CAPTURE_CACHE_INFO 47,2109
#define CAPTURE_TOTAL_COMP_TIME 49,2320
#define SURYA_DEBUG 52,2504
#define SURYA_DCONTEXT2 53,2591
#define SURYA_INTERFACE2_APP_WAIT 54,2705
#define SURYA_INTERFACE3_APP_PARALLEL 55,2829
int sn_subcat4_cnt;61,3075
int sn_build_fragment;62,3221
int sn_get_ibl_type;63,3407
unsigned int sn_ibl_routine_length;64,3508
int sn_new_fragment;66,3633
int sn_frag_cnt1;67,3738
int pk_is_affinity;68,3848
int sn_bb_cnt;69,3904
int sn_disassembly_bb_cnt;70,3937
int sn_start_trace,71,3982
int sn_start_trace,sn_end_trace,71,3982
int sn_start_trace,sn_end_trace,sn_extend_trace;71,3982
int sn_instr_cnt;72,4049
int sn_trace_cnt;73,4085
int sn_trace_blk_cnt,74,4121
int sn_trace_blk_cnt,sn_trace_instr_cnt;74,4121
int sn_total_instr_exec_cnt;75,4180
int sn_total_branch_instr_exec_cnt;76,4300
int sn_total_direct_branch_instr_exec_cnt;77,4451
long long sn_fcache_entry_cnt;81,4687
long long total_comp_time;82,4718
int sn_dispatch_call_cnt;84,4884
int collect_code_cache_stats;86,5031
int collect_context_switch_stats;87,5120
int collect_compilation_time_stats;88,5217
int print_basic_block_info;89,5318
const char *sn_cache_name;sn_cache_name104,6014
const char *sn_cache_region;sn_cache_region105,6113
const char *sn_bb_cache_name;sn_bb_cache_name106,6221
long sn_total_shared_trace_cache_size_inc;107,6322
int sn_trace_fragment;108,6430
int sn_bb_fragment;109,6546
int free_list_slot_cnt;113,6798
int fifo_entry_cnt;114,6874
int sn_private_cache;115,6931
int sn_shared_cache;116,7018
int sn_shared_coarse_cache;117,7103
int sn_bb_private_cache;119,7197
int sn_bb_shared_cache;120,7284
int sn_bb_shared_coarse_cache;121,7369
int shared_coarse_cache_resize;123,7463
int shared_cache_resize;124,7568
int private_cache_resize;125,7659
int trans_flag;127,7754
int trans_flag_new;128,7849
int sn_signal_flag;129,8000
pthread_mutex_t trans_lock;130,8112
pthread_mutex_t trans_lock1;131,8404
pthread_cond_t trans_flag_cv;132,8597
pthread_cond_t trans_flag_cv1;133,8627
pthread_mutex_t compiler_create_lock;134,8658
pthread_cond_t compiler_create_cond;135,8696
pthread_t tid;136,8733
pthread_attr_t attr;137,8821
int compiler_thread_state;138,8911
#define _WIN32_WINNT 152,9916
#  define WIN32_LEAN_AND_MEAN154,10002
app_pc prev_trace_end_pc;190,11848
app_pc curr_trace_end_pc;191,11940
app_pc curr_trace_start_pc;192,12043
#define DYNAMORIO_STATS_EXPORTS 196,12174
#    define DYNAMORIO_EXPORT 212,12779
#    define DYNAMORIO_EXPORT 219,13140
#    define DYNAMORIO_EXPORT 222,13297
#  define DR_API 226,13365
#  define DR_API 228,13405
#  define DR_UNS_API 231,13453
#  define DR_UNS_API 233,13487
# define NOINLINE 237,13545
# define NOINLINE 239,13590
#define INLINE_ONCE 242,13642
typedef unsigned long ulong;253,13838
typedef unsigned short ushort;254,13867
typedef HANDLE file_t;263,14265
#define INVALID_FILE 264,14288
#define STDOUT 265,14330
#define STDERR 266,14373
#define STDIN 267,14416
#define DIRSEP 268,14458
#define ALT_DIRSEP 269,14478
typedef unsigned long ulong;274,14578
#define DIRSEP 277,14653
#define ALT_DIRSEP 278,14672
pid_t tid_for_dcontext;281,14706
#define INVALID_THREAD_ID 290,15201
typedef unsigned char uchar;292,15231
typedef byte * cache_pc;293,15260
static cache_pc sn_shared_coarse_cache_start_pc;298,15339
static cache_pc sn_shared_coarse_cache_end_pc;299,15439
static cache_pc sn_shared_coarse_cache_cur_pc;300,15535
static cache_pc sn_shared_coarse_cache_prev_end_pc;301,15635
static cache_pc sn_shared_coarse_cache_initial_start_pc;302,15745
static cache_pc sn_shared_coarse_cache_initial_end_pc;303,15861
static cache_pc sn_shared_coarse_cache_initial_cur_pc;304,15973
static cache_pc sn_shared_cache_start_pc;306,16090
static cache_pc sn_shared_cache_end_pc;307,16175
static cache_pc sn_shared_cache_cur_pc;308,16256
static cache_pc sn_shared_cache_prev_end_pc;309,16341
static cache_pc sn_shared_cache_initial_start_pc;310,16437
static cache_pc sn_shared_cache_initial_end_pc;311,16543
static cache_pc sn_shared_cache_initial_cur_pc;312,16645
static cache_pc sn_private_cache_start_pc;314,16752
static cache_pc sn_private_cache_end_pc;315,16846
static cache_pc sn_private_cache_cur_pc;316,16936
static cache_pc sn_private_cache_prev_end_pc;317,17030
static cache_pc sn_private_cache_initial_start_pc;318,17134
static cache_pc sn_private_cache_initial_end_pc;319,17249
static cache_pc sn_private_cache_initial_cur_pc;320,17363
static cache_pc sn_cache_start_pc;323,17483
static cache_pc sn_cache_end_pc;324,17580
static cache_pc sn_cache_cur_pc;325,17673
static cache_pc sn_bb_shared_coarse_cache_initial_start_pc;328,17772
static cache_pc sn_bb_shared_coarse_cache_initial_end_pc;329,17888
static cache_pc sn_bb_shared_coarse_cache_initial_cur_pc;330,18000
static cache_pc sn_bb_shared_cache_initial_start_pc;331,18112
static cache_pc sn_bb_shared_cache_initial_end_pc;332,18221
static cache_pc sn_bb_shared_cache_initial_cur_pc;333,18328
static cache_pc sn_bb_private_cache_initial_start_pc;334,18435
static cache_pc sn_bb_private_cache_initial_end_pc;335,18545
static cache_pc sn_bb_private_cache_initial_cur_pc;336,18653
static cache_pc sn_bb_cache_start_pc;337,18761
static cache_pc sn_bb_cache_end_pc;338,18855
static cache_pc sn_bb_cache_cur_pc;339,18947
#define SUCCESS 344,19066
#define FAILURE 345,19084
# define _IF_DGCDIAG(349,19185
# define IF_DGCDIAG_ELSE(350,19213
# define _IF_DGCDIAG(352,19252
# define IF_DGCDIAG_ELSE(353,19276
typedef struct _opnd_t opnd_t;395,20250
typedef struct _instr_t instr_t;397,20298
typedef struct _fragment_t fragment_t;400,20373
typedef struct _future_fragment_t future_fragment_t;402,20439
typedef struct _trace_t trace_t;404,20509
typedef struct _linkstub_t linkstub_t;406,20562
typedef struct _dcontext_t dcontext_t;408,20621
typedef struct vm_area_vector_t vm_area_vector_t;410,20685
typedef struct _coarse_info_t coarse_info_t;412,20758
typedef struct _coarse_freeze_info_t coarse_freeze_info_t;414,20833
dcontext_t *dcon_etrans;dcon_etrans418,20938
dcontext_t *dcon_app;dcon_app419,21031
dcontext_t *dcon_global;dcon_global420,21112
typedef struct _instr_list_t instrlist_t;426,21334
typedef struct _module_data_t module_data_t;427,21376
    uint year;436,21566
    uint month;437,21597
    uint day_of_week;438,21628
    uint day;439,21659
    uint hour;440,21690
    uint minute;441,21721
    uint second;442,21752
    uint milliseconds;443,21783
} dr_time_t;444,21814
typedef struct _rct_module_table_t rct_module_table_t;449,21938
    RCT_RAC 452,22010
    RCT_RCT,453,22027
    RCT_NUM_TYPES,454,22040
} rct_type_t;455,22059
typedef struct _thread_record_t 458,22081
    thread_id_t id;459,22115
    HANDLE handle;461,22168
    bool retakeover;462,22216
    process_id_t pid;464,22243
    bool execve;465,22287
    uint num;467,22362
    bool under_dynamo_control;468,22407
    dcontext_t *dcontext;dcontext469,22490
    struct _thread_record_t * next;470,22572
} thread_record_t;471,22608
# undef DYNAMORIO_EXPORT480,22949
# define DYNAMORIO_EXPORT 481,22974
typedef uint linkcount_type_t;486,23070
typedef uint64 linkcount_type_t;488,23107
typedef struct _client_to_do_list_t 505,23378
    instrlist_t *ilist;ilist508,23552
    app_pc tag;509,23576
    struct _client_to_do_list_t *next;next510,23592
} client_todo_list_t;511,23631
typedef struct _client_flush_req_t 514,23732
    app_pc start;515,23769
    size_t size;516,23787
    uint   flush_id;517,23804
    void (*flush_callback)flush_callback518,23873
    struct _client_flush_req_t *next;next519,23906
} client_flush_req_t;520,23944
#define IS_CLIENT_THREAD(524,24140
typedef struct _client_data_t 530,24379
    void *         user_field;532,24460
    client_todo_list_t * to_do;533,24491
    client_flush_req_t *flush_list;flush_list534,24523
    mutex_t            sideline_mutex;536,24583
    module_data_t      *no_delete_mod_data;no_delete_mod_data539,24716
    bool           is_client_thread;556,25848
    bool           client_thread_safe_for_synch;557,25921
    bool           suspendable;558,25970
    bool           left_unsuspended;559,26039
    uint           mutex_count;560,26119
    void           *client_grab_mutex;client_grab_mutex561,26186
    bool           is_translating;563,26239
    bool           in_pre_syscall;567,26364
    bool           in_post_syscall;568,26399
    bool           invoke_another_syscall;570,26482
    bool           mcontext_in_dcontext;572,26579
    bool           suspended;573,26620
    priv_mcontext_t *cur_mc;cur_mc574,26650
} client_data_t;575,26679
# define IS_CLIENT_THREAD(577,26702
typedef struct _pending_nudge_t 582,26853
    nudge_arg_t arg;583,26887
    struct _pending_nudge_t *next;next584,26908
} pending_nudge_t;585,26943
#define DYNAMORIO_STACK_SIZE 589,27017
# define standalone_library 609,28034
#define ALL_THREADS_HASH_BITS 668,29832
    WHERE_APP=745,32945
    WHERE_INTERP,746,32963
    WHERE_DISPATCH,747,32981
    WHERE_MONITOR,748,33001
    WHERE_SYSCALL_HANDLER,749,33020
    WHERE_SIGNAL_HANDLER,750,33047
    WHERE_TRAMPOLINE,751,33073
    WHERE_CONTEXT_SWITCH,752,33095
    WHERE_IBL,753,33121
    WHERE_FCACHE,754,33136
    WHERE_UNKNOWN,755,33154
    WHERE_HOTPATCH,757,33203
    WHERE_LAST759,33230
} where_am_i_t;760,33245
    READONLY=766,33381
    READONLY=false,766,33381
    WRITABLE=767,33402
    WRITABLE=true767,33402
    EXIT_REASON_SELFMOD 773,33567
    EXIT_REASON_FLOAT_PC_FNSAVE,775,33654
    EXIT_REASON_FLOAT_PC_FXSAVE,776,33687
    EXIT_REASON_FLOAT_PC_FXSAVE64,777,33720
    EXIT_REASON_FLOAT_PC_XSAVE,778,33755
    EXIT_REASON_FLOAT_PC_XSAVE64,779,33787
enum { MAX_NATIVE_RETSTACK 788,34154
typedef struct _retaddr_and_retloc_t 790,34190
    app_pc retaddr;791,34229
    app_pc retloc;792,34249
} retaddr_and_retloc_t;793,34268
typedef struct try_except_context_t 796,34335
    dr_jmp_buf_t context;802,34662
    struct try_except_context_t *prev_context;prev_context804,34689
} try_except_context_t;805,34736
typedef struct _try_except_t 811,34937
    try_except_context_t *try_except_state;try_except_state812,34968
    bool unwinding_exception;813,35041
} try_except_t;815,35185
    priv_mcontext_t mcontext;823,35394
    int            errno;825,35490
    bool at_syscall;827,35582
    ushort exit_reason;831,35867
    reg_t inline_spill_slots[inline_spill_slots836,36096
} unprotected_context_t;838,36161
struct _dcontext_t 850,36595
        unprotected_context_t *separate_upcontext;separate_upcontext870,37447
        unprotected_context_t upcontext;871,37498
    } upcontext;872,37539
    unprotected_context_t *upcontext_ptr;upcontext_ptr876,37719
    app_pc         next_tag;883,38013
    linkstub_t *     last_exit;885,38043
    byte *         dstack;886,38108
    bool           is_exiting;888,38179
    int            app_errno;892,38322
    void *         app_fls_data;893,38352
    void *         priv_fls_data;894,38385
    void *         app_nt_rpc;895,38419
    void *         priv_nt_rpc;896,38450
    void *         app_nls_cache;897,38482
    void *         priv_nls_cache;898,38516
    void *         app_stack_limit;900,38564
    byte *         teb_base;903,38676
    app_pc         sysenter_storage;909,38971
    bool           ignore_enterexit;912,39091
        app_pc src_tag;922,39446
        coarse_info_t *dir_exit;dir_exit923,39470
    } coarse_exit;924,39503
    bool           initialized;931,39750
    thread_id_t      owning_thread;932,39824
    process_id_t     owning_process;934,39872
    thread_record_t   *thread_record;thread_record936,39965
    where_am_i_t       whereami;937,40046
    void *         allocated_start;938,40123
    fragment_t *     last_fragment;939,40190
    int            sys_num;941,40280
    reg_t *        sys_param_base;943,40363
    reg_t          sys_param0;946,40472
    reg_t          sys_param1;947,40540
    reg_t          sys_param2;948,40608
    reg_t          sys_param3;949,40676
    reg_t          sys_param4;952,40763
    bool           sys_was_int;953,40837
    bool           sys_xbp;954,40924
    bool           mprot_multi_areas;956,41006
    bool           x86_mode;966,41377
    void *         link_field;970,41469
    void *         monitor_field;971,41500
    void *         fcache_field;972,41534
    void *         fragment_field;973,41567
    void *         heap_field;974,41602
    void *         vm_areas_field;975,41633
    void *         os_field;976,41668
    void *         synch_field;977,41697
    void *         signal_field;979,41741
    void *         pcprofile_field;980,41774
    bool           signals_pending;981,41810
    void *         private_code;983,41853
    cache_pc       trace_head_pc;986,41963
    dcontext_t *next_saved;next_saved992,42155
    dcontext_t *prev_unused;prev_unused994,42191
    bool           valid;996,42298
    reg_t          nonswapped_scratch;1002,42633
    app_pc         asynch_target;1009,42880
    app_pc         native_exec_postsyscall;1014,43038
    retaddr_and_retloc_t native_retstack[native_retstack1019,43206
    uint native_retstack_cur;1020,43269
    bool           alloc_no_reserve;1023,43327
    int num_calls;1027,43451
    int num_rets;1028,43470
    int call_depth;1029,43488
    int            call_depth;1033,43542
    void *         call_stack;1034,43573
    file_t                        logfile;1038,43625
    thread_local_statistics_t *     thread_stats;1039,43668
    bool                        expect_last_syscall_to_fail;1040,43718
    bool                        in_opnd_disassemble;1044,43914
    thread_locks_t *               thread_owned_locks;1047,44012
    thread_kstats_t *              thread_kstats;1050,44088
    uint64         cache_enter_time;1054,44167
    uint64         start_time;1055,44204
    fragment_t *     prev_fragment;1056,44278
    uint64         cache_frag_count;1058,44353
    uint64         cache_time[cache_time1059,44434
    uint64         cache_count[cache_count1060,44506
    client_data_t *client_data;client_data1065,44648
    bool           trace_sysenter_exit;1076,45209
    app_pc         forged_exception_addr;1080,45400
    bool           nudge_thread;1083,45501
    dr_jmp_buf_t   hotp_excpt_state;1084,45580
    try_except_t   try_except;1086,45665
    aslr_syscall_context_t aslr_context;1094,46017
    void           *nudge_target;nudge_target1105,46692
    bool           free_app_stack;1109,46853
    bool           nudge_terminate_process;1112,46943
    uint           nudge_exit_code;1113,46987
    local_state_t *local_state;local_state1119,47164
    app_pc win32_start_addr;1128,47570
    void *bb_build_info;bb_build_info1132,47691
    pending_nudge_t *nudge_pending;nudge_pending1138,47821
    fragment_t *interrupted_for_nudge;interrupted_for_nudge1140,47911
    int libc_errno;1143,48028
    bool post_syscall;1147,48076
#define GLOBAL_DCONTEXT 1155,48218
get_mcontext(1159,48390
    DUMP_XML=1171,48855
    DUMP_XML=true,1171,48855
    DUMP_NOT_XML=1172,48874
    DUMP_NOT_XML=false1172,48874
#undef snprintf 1182,49311
#define snprintf 1183,49350
#undef _snprintf1184,49380
#define _snprintf 1185,49397
#undef vsnprintf1186,49428
#define vsnprintf 1187,49445
#define snwprintf 1188,49477
#define _snwprintf 1189,49514
#define sscanf 1196,49891
#  define strcasecmp 1203,49998
#  define strncasecmp 1204,50028
#  define wcscasecmp 1205,50060
#  define printf 1209,50170
#  undef sprintf 1210,50215
#  define sprintf 1211,50255
#  define swprintf 1212,50301
#  undef vsprintf 1213,50348
#  define vsprintf 1214,50389
#  define __try 1215,50436
#  define mprotect 1218,50526
#  define mmap 1219,50577
#  define munmap 1220,50624
#  define getppid 1221,50673
#  define sched_yield 1222,50723
#  define dup 1223,50777
#  define sigaltstack 1224,50823
#  define setitimer 1225,50877
#  define _exit 1226,50929
#  define modify_ldt 1229,51219

dispatch.c,2423
# define CPU_SETSIZE 58,2282
# define CPU_SET(59,2317
# define CPU_CLR(60,2396
# define CPU_ISSET(61,2475
# define CPU_ZERO(63,2565
# define CPU_COUNT(64,2636
# define DISPLAY_STRING(76,3063
# define DISPLAY_STRING(78,3117
#define NULL_TERMINATE(81,3178
static struct timeval itr1_start_time,84,3283
static struct timeval itr1_start_time,itr1_end_time,84,3283
static struct timeval itr1_start_time,itr1_end_time,total_itr1_time;84,3283
#undef sched_yield89,3368
static struct timeval itr1_start_time,91,3388
static struct timeval itr1_start_time,itr1_end_time,91,3388
static struct timeval itr1_start_time,itr1_end_time,total_itr1_time;91,3388
static unsigned long long sn_tr_cnt=93,3520
int thread_flag=95,3562
static unsigned int bBlock_call_count=101,3734
struct thread_buffer103,3803
  dcontext_t *tdcontext;tdcontext105,3826
  app_pc tdcon_ntag;106,3851
  fragment_t *tfrag;tfrag107,3872
typedef struct thread_buffer tbuff;110,3897
tbuff tbf;112,3934
long total_sec_sn=141,4320
long total_usec_sn=142,4359
static int sn_fragment_instr_cnt1[sn_fragment_instr_cnt1143,4400
found_client_sysenter(191,5708
void pk_dummy_func(200,6006
void __attribute__ ((noinline)) pk_phase_change_dummy(211,6138
void __attribute__ ((noinline)) pk_set_affinity(220,6316
void *print_state(print_state264,7509
dispatch(685,29213
is_stopping_point(1536,66426
dispatch_enter_fcache_stats(1564,67290
dispatch_enter_fcache(1644,71004
enter_fcache(1790,77812
handle_special_tag(1833,79169
dispatch_at_stopping_point(1852,79851
dispatch_enter_native(1890,81196
dispatch_enter_dynamorio(1943,83704
dispatch_exit_fcache(2182,95324
dispatch_exit_fcache_stats(2410,105841
adjust_syscall_continuation(2925,127680
handle_system_call(2959,129205
handle_post_system_call(3215,140888
handle_callback_return(3273,142859
issue_last_system_call_from_app(3323,145049
transfer_to_dispatch(3345,145860
long get_total_comp_time(3375,147038
int get_dispatch_call_cnt(3379,147095
int* get_frag_instr_cnt_arr(3383,147158
void __attribute__ ((noinline)) sn_fcache_exit_syscalls_subcat1(3388,147287
void __attribute__ ((noinline)) sn_fcache_exit_ind_br_subcat2(3394,147557
void __attribute__ ((noinline)) sn_fcache_exit_dir_br_subcat3(3400,147876
void __attribute__ ((noinline)) sn_fcache_exit_no_dir_link_subcat4(3406,148215
void __attribute__ ((noinline)) sn_fcache_exit_dir_syscall_subcat5(3412,148503

utils.h,24472
#define _UTILS_H_ 43,1984
# undef assert46,2019
#define assert 49,2082
#define CHKLVL_ASSERTS 52,2187
#define CHKLVL_DEFAULT 53,2212
# define DEBUG_CHECKS(59,2445
# define DEBUG_CHECKS(61,2519
#   define ASSERT(71,2905
#   define ASSERT_MESSAGE(77,3208
#   define REPORT_CURIOSITY(79,3362
#   define ASSERT_CURIOSITY(86,3910
#   define ASSERT_CURIOSITY_ONCE(91,4279
#   define ASSERT(98,4723
#   define ASSERT_MESSAGE(101,4864
#   define ASSERT_CURIOSITY(104,5016
#   define ASSERT_CURIOSITY_ONCE(105,5058
# define ASSERT_NOT_TESTED(107,5128
# define ASSERT(110,5293
# define ASSERT_MESSAGE(111,5331
# define ASSERT_NOT_TESTED(112,5380
# define ASSERT_CURIOSITY(113,5422
# define ASSERT_CURIOSITY_ONCE(114,5464
#define ASSERT_NOT_REACHED(117,5531
#define ASSERT_BUG_NUM(118,5574
#define ASSERT_NOT_IMPLEMENTED(119,5652
#define EXEMPT_TEST(120,5739
#define apicheck(128,6080
#  define CLIENT_ASSERT(135,6323
#  define CLIENT_ASSERT(137,6379
# define CLIENT_ASSERT(140,6468
# define APP_EXPORT_ASSERT(144,6568
# define APP_EXPORT_ASSERT(146,6626
#define CHECK_TRUNCATE_TYPE_byte(158,7316
#define CHECK_TRUNCATE_TYPE_sbyte(159,7389
#define CHECK_TRUNCATE_TYPE_ushort(160,7480
#define CHECK_TRUNCATE_TYPE_short(161,7555
#define CHECK_TRUNCATE_TYPE_uint(162,7644
# define CHECK_TRUNCATE_TYPE_int(170,8199
# define CHECK_TRUNCATE_TYPE_int(172,8262
# define CHECK_TRUNCATE_TYPE_size_t(175,8366
# define CHECK_TRUNCATE_TYPE_stats_int_t(177,8491
# define CHECK_TRUNCATE_TYPE_size_t 179,8550
# define CHECK_TRUNCATE_TYPE_stats_int_t 180,8611
#define ASSERT_TRUNCATE(187,8941
#define CURIOSITY_TRUNCATE(190,9182
#define CLIENT_ASSERT_TRUNCATE(194,9442
#define ASSERT_BITFIELD_TRUNCATE(198,9627
#define CLIENT_ASSERT_BITFIELD_TRUNCATE(200,9747
#define LOCK_FREE_STATE 204,9935
#define LOCK_SET_STATE 205,10011
#define LOCK_CONTENDED_STATE 207,10187
#define SPINLOCK_FREE_STATE 209,10238
#define CONTENTION_EVENT_NOT_CREATED 211,10329
typedef HANDLE contention_event_t;214,10406
typedef void * contention_event_t;216,10447
typedef struct _mutex_t 219,10490
    volatile int lock_requests;220,10516
    contention_event_t contended_event;222,10682
    const char *name;name225,10875
    uint      rank;229,11115
    thread_id_t owner;230,11199
    dcontext_t *owning_dcontext;owning_dcontext235,11442
    struct _mutex_t *prev_owned_lock;prev_owned_lock236,11534
    uint count_times_acquired;237,11612
    uint count_times_contended;238,11691
    uint count_times_spin_pause;239,11776
    uint max_contended_requests;240,11878
    uint count_times_spin_only;241,11971
    struct _mutex_t *prev_process_lock;prev_process_lock244,12270
    struct _mutex_t *next_process_lock;next_process_lock245,12310
#  define MAX_MUTEX_CALLSTACK 251,12593
    byte *callstack[callstack252,12625
    bool app_lock;256,12812
#  define MAX_MUTEX_CALLSTACK 259,12845
    bool deleted;261,12923
} mutex_t;264,13092
typedef struct _spin_mutex_t 269,13328
    mutex_t lock;270,13359
} spin_mutex_t;271,13377
typedef struct _recursive_lock_t 274,13449
    mutex_t lock;275,13484
    thread_id_t owner;281,13770
    uint count;282,13793
} recursive_lock_t;283,13809
typedef struct _read_write_lock_t 285,13830
    mutex_t lock;286,13866
    volatile int num_readers;291,14107
    thread_id_t writer;293,14198
    volatile int num_pending_readers;294,14222
    contention_event_t writer_waiting_readers;295,14314
    contention_event_t readers_waiting_writer;296,14402
} read_write_lock_t;298,14578
#  define LOCK_RANK(301,14626
    LOCK_RANK(307,14862
    LOCK_RANK(outermost_lock)307,14862
    LOCK_RANK(308,14948
    LOCK_RANK(thread_in_DR_exclusion)308,14948
    LOCK_RANK(309,15004
    LOCK_RANK(all_threads_synch_lock)309,15004
    LOCK_RANK(311,15074
    LOCK_RANK(trace_building_lock)311,15074
    LOCK_RANK(317,15338
    LOCK_RANK(thread_initexit_lock)317,15338
    LOCK_RANK(319,15418
    LOCK_RANK(bb_building_lock)319,15418
    LOCK_RANK(322,15554
    LOCK_RANK(exception_stack_lock)322,15554
    LOCK_RANK(326,15736
    LOCK_RANK(all_threads_lock)326,15736
    LOCK_RANK(328,15797
    LOCK_RANK(linking_lock)328,15797
    LOCK_RANK(331,15890
    LOCK_RANK(shared_blocks_lock)331,15890
    LOCK_RANK(332,15951
    LOCK_RANK(shared_traces_lock)332,15951
    LOCK_RANK(335,16020
    LOCK_RANK(synch_lock)335,16020
    LOCK_RANK(337,16081
    LOCK_RANK(protect_info)337,16081
    LOCK_RANK(340,16208
    LOCK_RANK(sideline_mutex)340,16208
    LOCK_RANK(343,16248
    LOCK_RANK(shared_cache_flush_lock)343,16248
    LOCK_RANK(346,16451
    LOCK_RANK(shared_delete_lock)346,16451
    LOCK_RANK(347,16532
    LOCK_RANK(lazy_delete_lock)347,16532
    LOCK_RANK(349,16614
    LOCK_RANK(shared_cache_lock)349,16614
    LOCK_RANK(354,16929
    LOCK_RANK(change_linking_lock)354,16929
    LOCK_RANK(356,17008
    LOCK_RANK(shared_vm_areas)356,17008
    LOCK_RANK(357,17089
    LOCK_RANK(shared_cache_count_lock)357,17089
    LOCK_RANK(360,17188
    LOCK_RANK(fragment_delete_mutex)360,17188
    LOCK_RANK(363,17258
    LOCK_RANK(tracedump_mutex)363,17258
    LOCK_RANK(365,17341
    LOCK_RANK(emulate_write_lock)365,17341
    LOCK_RANK(367,17422
    LOCK_RANK(unit_flush_lock)367,17422
    LOCK_RANK(370,17495
    LOCK_RANK(maps_iter_buf_lock)370,17495
    LOCK_RANK(380,17918
    LOCK_RANK(hotp_vul_table_lock)380,17918
    LOCK_RANK(383,18061
    LOCK_RANK(coarse_info_lock)383,18061
    LOCK_RANK(386,18201
    LOCK_RANK(executable_areas)386,18201
    LOCK_RANK(390,18410
    LOCK_RANK(rct_module_lock)390,18410
    LOCK_RANK(394,18593
    LOCK_RANK(after_call_lock)394,18593
    LOCK_RANK(398,18803
    LOCK_RANK(module_data_lock)398,18803
    LOCK_RANK(400,18943
    LOCK_RANK(special_units_list_lock)400,18943
    LOCK_RANK(401,19009
    LOCK_RANK(special_heap_lock)401,19009
    LOCK_RANK(403,19161
    LOCK_RANK(coarse_info_incoming_lock)403,19161
    LOCK_RANK(410,19545
    LOCK_RANK(coarse_table_rwlock)410,19545
    LOCK_RANK(412,19719
    LOCK_RANK(coarse_pclookup_table_rwlock)412,19719
    LOCK_RANK(415,19952
    LOCK_RANK(coarse_th_table_rwlock)415,19952
    LOCK_RANK(417,20018
    LOCK_RANK(process_module_vector_lock)417,20018
    LOCK_RANK(420,20257
    LOCK_RANK(snapshot_lock)420,20257
    LOCK_RANK(421,20310
    LOCK_RANK(written_areas)421,20310
    LOCK_RANK(424,20460
    LOCK_RANK(futureexec_areas)424,20460
    LOCK_RANK(427,20605
    LOCK_RANK(app_flushed_areas)427,20605
    LOCK_RANK(430,20695
    LOCK_RANK(pretend_writable_areas)430,20695
    LOCK_RANK(431,20775
    LOCK_RANK(patch_proof_areas)431,20775
    LOCK_RANK(432,20850
    LOCK_RANK(emulate_write_areas)432,20850
    LOCK_RANK(433,20927
    LOCK_RANK(IAT_areas)433,20927
    LOCK_RANK(436,21084
    LOCK_RANK(dr_client_mutex)436,21084
    LOCK_RANK(437,21141
    LOCK_RANK(client_thread_count_lock)437,21141
    LOCK_RANK(438,21206
    LOCK_RANK(client_flush_request_lock)438,21206
    LOCK_RANK(439,21272
    LOCK_RANK(callback_registration_lock)439,21272
    LOCK_RANK(440,21339
    LOCK_RANK(client_tls_lock)440,21339
    LOCK_RANK(442,21402
    LOCK_RANK(intercept_hook_lock)442,21402
    LOCK_RANK(443,21459
    LOCK_RANK(privload_lock)443,21459
    LOCK_RANK(445,21540
    LOCK_RANK(sigfdtable_lock)445,21540
    LOCK_RANK(447,21600
    LOCK_RANK(table_rwlock)447,21600
    LOCK_RANK(448,21653
    LOCK_RANK(loaded_module_areas)448,21653
    LOCK_RANK(449,21731
    LOCK_RANK(aslr_areas)449,21731
    LOCK_RANK(450,21799
    LOCK_RANK(aslr_pad_areas)450,21799
    LOCK_RANK(451,21871
    LOCK_RANK(native_exec_areas)451,21871
    LOCK_RANK(452,21946
    LOCK_RANK(thread_vm_areas)452,21946
    LOCK_RANK(454,22006
    LOCK_RANK(app_pc_table_rwlock)454,22006
    LOCK_RANK(457,22145
    LOCK_RANK(dead_tables_lock)457,22145
    LOCK_RANK(458,22201
    LOCK_RANK(aslr_lock)458,22201
    LOCK_RANK(461,22258
    LOCK_RANK(hotp_only_tramp_areas_lock)461,22258
    LOCK_RANK(463,22398
    LOCK_RANK(hotp_patch_point_areas_lock)463,22398
    LOCK_RANK(467,22565
    LOCK_RANK(profile_callers_lock)467,22565
    LOCK_RANK(469,22635
    LOCK_RANK(coarse_stub_areas)469,22635
    LOCK_RANK(470,22695
    LOCK_RANK(moduledb_lock)470,22695
    LOCK_RANK(471,22756
    LOCK_RANK(pcache_dir_check_lock)471,22756
    LOCK_RANK(473,22806
    LOCK_RANK(suspend_lock)473,22806
    LOCK_RANK(474,22835
    LOCK_RANK(shared_lock)474,22835
    LOCK_RANK(476,22870
    LOCK_RANK(modlist_areas)476,22870
    LOCK_RANK(478,22956
    LOCK_RANK(privload_fls_lock)478,22956
    LOCK_RANK(479,23031
    LOCK_RANK(drwinapi_localheap_lock)479,23031
    LOCK_RANK(482,23132
    LOCK_RANK(client_aux_libs)482,23132
    LOCK_RANK(484,23180
    LOCK_RANK(client_aux_lib64_lock)484,23180
    LOCK_RANK(488,23248
    LOCK_RANK(alt_tls_lock)488,23248
    LOCK_RANK(497,23641
    LOCK_RANK(allunits_lock)497,23641
    LOCK_RANK(498,23698
    LOCK_RANK(fcache_unit_areas)498,23698
    IF_LINUX_(500,23829
    IF_LINUX_(LOCK_RANK(500,23829
    IF_LINUX_(LOCK_RANK(all_memory_areas)500,23829
    IF_UNIX_(501,23896
    IF_UNIX_(LOCK_RANK(501,23896
    IF_UNIX_(LOCK_RANK(set_thread_area_lock)501,23896
    LOCK_RANK(502,23963
    LOCK_RANK(landing_pad_areas_lock)502,23963
    LOCK_RANK(503,24045
    LOCK_RANK(dynamo_areas)503,24045
    LOCK_RANK(504,24103
    LOCK_RANK(map_intercept_pc_lock)504,24103
    LOCK_RANK(505,24167
    LOCK_RANK(global_alloc_lock)505,24167
    LOCK_RANK(506,24223
    LOCK_RANK(heap_unit_lock)506,24223
    LOCK_RANK(507,24272
    LOCK_RANK(vmh_lock)507,24272
    LOCK_RANK(508,24323
    LOCK_RANK(last_deallocated_lock)508,24323
    LOCK_RANK(512,24450
    LOCK_RANK(tls_lock)512,24450
    LOCK_RANK(515,24613
    LOCK_RANK(reset_pending_lock)515,24613
    LOCK_RANK(517,24672
    LOCK_RANK(initstack_mutex)517,24672
    LOCK_RANK(519,24730
    LOCK_RANK(event_lock)519,24730
    LOCK_RANK(520,24782
    LOCK_RANK(do_threshold_mutex)520,24782
    LOCK_RANK(521,24842
    LOCK_RANK(threads_killed_lock)521,24842
    LOCK_RANK(522,24903
    LOCK_RANK(child_lock)522,24903
    LOCK_RANK(525,24976
    LOCK_RANK(sideline_lock)525,24976
    LOCK_RANK(526,25030
    LOCK_RANK(do_not_delete_lock)526,25030
    LOCK_RANK(527,25088
    LOCK_RANK(remember_lock)527,25088
    LOCK_RANK(528,25141
    LOCK_RANK(sideline_table_lock)528,25141
    LOCK_RANK(531,25230
    LOCK_RANK(simulate_lock)531,25230
    LOCK_RANK(534,25281
    LOCK_RANK(process_kstats_lock)534,25281
    LOCK_RANK(537,25335
    LOCK_RANK(request_region_be_heap_reachable_lock)537,25335
    LOCK_RANK(540,25517
    LOCK_RANK(report_buf_lock)540,25517
    LOCK_RANK(547,25827
    LOCK_RANK(memory_info_buf_lock)547,25827
    LOCK_RANK(550,25886
    LOCK_RANK(dump_core_lock)550,25886
    LOCK_RANK(553,25925
    LOCK_RANK(logdir_mutex)553,25925
    LOCK_RANK(554,25974
    LOCK_RANK(diagnost_reg_mutex)554,25974
    LOCK_RANK(556,26034
    LOCK_RANK(profile_dump_lock)556,26034
    LOCK_RANK(559,26076
    LOCK_RANK(prng_lock)559,26076
    LOCK_RANK(563,26277
    LOCK_RANK(options_lock)563,26277
    LOCK_RANK(565,26321
    LOCK_RANK(debugbox_lock)565,26321
    LOCK_RANK(567,26358
    LOCK_RANK(eventlog_mutex)567,26358
    LOCK_RANK(568,26442
    LOCK_RANK(datasec_selfprot_lock)568,26442
    LOCK_RANK(569,26480
    LOCK_RANK(thread_stats_lock)569,26480
    LOCK_RANK(574,26663
    LOCK_RANK(shared_itimer_lock)574,26663
    LOCK_RANK(576,26706
    LOCK_RANK(innermost_lock)576,26706
typedef struct _thread_locks_t thread_locks_t;580,26819
#  define INIT_LOCK_NO_TYPE(594,27444
#  define INIT_LOCK_NO_TYPE(600,27760
#  define STRUCTURE_TYPE(612,28325
#  define STRUCTURE_TYPE(618,28563
#define INIT_LOCK_FREE(621,28599
#define ASSIGN_INIT_LOCK_FREE(625,28770
#define ASSIGN_INIT_SPINMUTEX_FREE(632,29160
#define INIT_RECURSIVE_LOCK(635,29263
#define INIT_READWRITE_LOCK(642,29642
#define ASSIGN_INIT_READWRITE_LOCK_FREE(651,30170
#define ASSIGN_INIT_RECURSIVE_LOCK_FREE(663,30934
#define INIT_SPINLOCK_FREE(672,31474
#define DELETE_LOCK(675,31626
#define DELETE_SPINMUTEX(676,31672
#define DELETE_RECURSIVE_LOCK(677,31737
#define DELETE_READWRITE_LOCK(678,31808
mutex_testlock(711,33127
typedef struct _broadcast_event_t broadcast_event_t;733,33925
#define WAIT_FOR_BROADCAST_EVENT(755,35018
#define WRITE_LOCK_HELD(773,36197
#define READ_LOCK_HELD(774,36283
# define OWN_MUTEX(782,36562
# define ASSERT_OWN_MUTEX(783,36616
# define ASSERT_DO_NOT_OWN_MUTEX(785,36689
# define OWN_NO_LOCKS(787,36770
# define ASSERT_OWN_NO_LOCKS(788,36821
# define OWN_MUTEX(794,37063
# define ASSERT_OWN_MUTEX(795,37105
# define ASSERT_DO_NOT_OWN_MUTEX(797,37178
# define OWN_NO_LOCKS(799,37268
# define ASSERT_OWN_NO_LOCKS(800,37320
#define ASSERT_OWN_WRITE_LOCK(802,37379
#define ASSERT_DO_NOT_OWN_WRITE_LOCK(804,37469
#define ASSERT_OWN_READ_LOCK(807,37635
#define READWRITE_LOCK_HELD(809,37718
#define ASSERT_OWN_READWRITE_LOCK(810,37799
#define ASSERT_OWN_RECURSIVE_LOCK(812,37892
#define SHARED_MUTEX(818,38079
#define SHARED_RECURSIVE_LOCK(822,38331
#define USE_BB_BUILDING_LOCK_STEADY_STATE(827,38607
#define USE_BB_BUILDING_LOCK(830,38841
#define SHARED_BB_LOCK(832,38979
#define SHARED_BB_UNLOCK(847,39822
#define NEED_SHARED_LOCK(852,40149
#define SHARED_FLAGS_MUTEX(855,40344
#define SHARED_FLAGS_RECURSIVE_LOCK(859,40533
#define PHI_2_32 895,42114
#define PHI_2_64 896,42173
# define HASH_PHI 898,42253
# define HASH_TAG_BITS 899,42280
# define HASH_PHI 901,42312
# define HASH_TAG_BITS 902,42339
#define HASH_MASK(906,42429
#define HASH_FUNC(911,42697
# define HASH_FUNC_BITS(919,43033
# define HASH_FUNC_BITS(926,43366
#define HASH_VALUE_FOR_TABLE(935,43878
#define HASHTABLE_SIZE(947,44669
    HASH_FUNCTION_NONE 951,44775
    HASH_FUNCTION_MULTIPLY_PHI 952,44803
    HASH_FUNCTION_LOWER_BSWAP 954,44855
    HASH_FUNCTION_BSWAP_XOR 955,44890
    HASH_FUNCTION_SWAP_12TO15 956,44923
    HASH_FUNCTION_SWAP_12TO15_AND_NONE 957,44958
    HASH_FUNCTION_SHIFT_XOR 958,45002
    HASH_FUNCTION_STRING 960,45042
    HASH_FUNCTION_STRING_NOCASE 961,45072
    HASH_FUNCTION_ENUM_MAX,962,45109
} hash_function_t;963,45137
# define REACHABLE_32BIT_START(979,45901
# define REACHABLE_32BIT_END(986,46442
#define MAX_LOW_2GB 990,46664
#define ALIGNED(993,46768
#define ALIGN_FORWARD(994,46841
#define ALIGN_FORWARD_UINT(996,46954
#define ALIGN_BACKWARD(998,47054
#define PAD(999,47142
#define ALIGN_MOD(1000,47223
#define CROSSES_ALIGNMENT(1002,47320
#define ALIGN_SHIFT_SIZE(1005,47506
#define IS_POWER_OF_2(1009,47670
#define POINTER_OVERFLOW_ON_ADD(1014,47829
#define POINTER_UNDERFLOW_ON_SUB(1016,47929
typedef uint bitmap_element_t;1022,48122
typedef bitmap_element_t bitmap_t[bitmap_t1023,48153
#define BITMAP_DENSITY 1031,48434
#define BITMAP_MASK(1032,48462
#define BITMAP_INDEX(1033,48517
#define BITMAP_NOT_FOUND 1034,48565
bitmap_test(1045,48901
bitmap_set(1051,49014
bitmap_clear(1057,49111
#define LOGDIR_MAX_NUM 1075,49812
#define LOGDIR_FORMAT_STRING 1076,49849
#define LOGDIR_FORMAT_ARGS(1077,49891
# define MAX_LOG_LENGTH 1085,50264
# define MAX_LOG_LENGTH_MINUS_ONE 1086,50311
# define MAX_LOG_LENGTH 1092,50572
# define MAX_LOG_LENGTH_MINUS_ONE 1093,50632
# define LOG(1097,50761
# define DOELOG(1104,51107
# define DOCHECK(1111,51424
#  define DOLOG 1116,51581
#  define LOG_DECLARE(1117,51604
#  define DOLOG(1120,51731
#  define LOG_DECLARE(1121,51771
# define THREAD 1123,51829
# define THREAD_GET 1125,51969
# define GLOBAL 1126,52018
# define LOG(1130,52221
# define DOLOG(1131,52258
# define DOELOG 1132,52297
# define LOG_DECLARE(1133,52319
# define DOCHECK(1134,52353
# define wcsnlen 1153,53113
    BASE_DIR,1177,54049
    PROCESS_DIR 1178,54111
} log_dir_t;1179,54191
#define DO_ONCE(1200,55265
# define DECLARE_THRESHOLD_LOCK(1226,56663
# define DECLARE_THRESHOLD_LOCK(1228,56724
#define DO_THRESHOLD_SAFE(1236,57055
#define TRY_EXCEPT_ALLOW_NO_DCONTEXT(1275,59098
#define TRY_EXCEPT(1292,60413
#define TRY_FINALLY(1298,60739
#define TRY(1305,61092
#define EXCEPT(1355,63893
#define FINALLY(1371,64692
#define POP_TRY_BLOCK(1398,66497
enum {LONGJMP_EXCEPTION LONGJMP_EXCEPTION1404,66833
#define PROBE_READ_PC(1408,67005
#define PROBE_WRITE_PC(1409,67058
#define UNUSED_VARIABLE(1427,67944
#define GLOBAL_STAT(1433,68216
#define GLOBAL_STAT_ADDR(1435,68343
#define DO_GLOBAL_STATS(1436,68402
# define XSTATS_ATOMIC_INC(1443,68615
# define XSTATS_ATOMIC_DEC(1444,68670
# define XSTATS_ATOMIC_ADD(1445,68725
# define XSTATS_ATOMIC_MAX(1446,68790
# define XSTATS_ATOMIC_ADD_EXCHANGE(1447,68855
# define XSTATS_ATOMIC_INC(1449,68943
# define XSTATS_ATOMIC_DEC(1450,68996
# define XSTATS_ATOMIC_ADD(1451,69049
# define XSTATS_ATOMIC_MAX(1452,69112
# define XSTATS_ATOMIC_ADD_EXCHANGE(1453,69175
#define XSTATS_INC_DC(1459,69389
#define XSTATS_INC(1463,69627
#define XSTATS_DEC_DC(1467,69843
#define XSTATS_DEC(1471,70081
#define XSTATS_ADD_DC(1475,70297
#define XSTATS_ADD(1481,70763
#define XSTATS_SUB(1484,70992
#define XSTATS_ADD_ASSIGN_DC(1485,71064
#define XSTATS_INC_ASSIGN_DC(1494,71704
#define XSTATS_ADD_ASSIGN(1496,71834
#define XSTATS_INC_ASSIGN(1499,72072
#define XSTATS_MAX_HELPER(1502,72143
#define XSTATS_MAX_DC(1513,72909
#define XSTATS_PEAK_DC(1516,73119
#define XSTATS_MAX(1518,73243
#define XSTATS_TRACK_MAX(1521,73473
#define XSTATS_PEAK(1530,74089
#define XSTATS_ADD_MAX_DC(1535,74309
#define XSTATS_ADD_MAX(1541,74726
#define XSTATS_ADD_PEAK_DC(1545,75023
#define XSTATS_ADD_PEAK(1547,75162
#define XSTATS_RESET_DC(1552,75405
#define XSTATS_RESET(1556,75643
#define RSTATS_INC 1561,75908
#define RSTATS_DEC 1562,75938
#define RSTATS_ADD 1563,75968
#define RSTATS_SUB 1564,75998
#define RSTATS_ADD_PEAK 1565,76028
#   define DODEBUGINT 1568,76109
#   define DOCHECKINT 1569,76139
#   define DODEBUGINT(1571,76175
#   define DOCHECKINT(1572,76222
#   define DEBUG_EXT_DECLARE(1579,76496
#   define DEBUG_EXT_DECLARE(1581,76556
#   define DODEBUG(1585,76657
#   define DEBUG_DECLARE(1586,76714
#   define DOSTATS(1587,76764
#   define GLOBAL_STATS_ON(1602,77625
#   define THREAD_STAT(1603,77703
#   define THREAD_STATS_ON(1605,77798
#   define DO_THREAD_STATS(1608,78018
#   define XSTATS_WITH_DC(1613,78330
#   define STATS_INC 1620,78714
#   define STATS_INC_DC 1622,78791
#   define STATS_DEC 1623,78829
#   define STATS_ADD 1624,78861
#   define STATS_SUB 1625,78893
#   define STATS_INC_ASSIGN 1626,78925
#   define STATS_ADD_ASSIGN 1627,78971
#   define STATS_MAX 1628,79017
#   define STATS_TRACK_MAX 1629,79049
#   define STATS_PEAK 1630,79093
#   define STATS_ADD_MAX 1631,79127
#   define STATS_ADD_PEAK 1632,79167
#   define STATS_RESET 1633,79209
#   define DODEBUG(1636,79252
#   define DEBUG_DECLARE(1637,79282
#   define DOSTATS(1638,79320
#   define THREAD_STATS_ON(1639,79350
#   define XSTATS_WITH_DC(1640,79393
#   define DO_THREAD_STATS(1641,79445
#   define GLOBAL_STATS_ON(1642,79507
#   define STATS_INC(1647,79738
#   define STATS_INC_DC(1648,79779
#   define STATS_DEC(1649,79833
#   define STATS_ADD(1650,79874
#   define STATS_SUB(1651,79922
#   define STATS_INC_ASSIGN(1652,79970
#   define STATS_ADD_ASSIGN(1653,80023
#   define STATS_MAX(1654,80083
#   define STATS_TRACK_MAX(1655,80138
#   define STATS_PEAK(1656,80201
#   define STATS_ADD_MAX(1657,80243
#   define STATS_ADD_PEAK(1658,80309
#   define STATS_RESET(1659,80362
# define DOKSTATS(1663,80439
# define KSTART(1670,80714
# define KSTOP(1673,80824
# define KSWITCH(1676,80968
# define KSTOP_NOT_MATCHING(1679,81094
# define KSTOP_REWIND(1686,81480
# define KSTOP_REWIND_UNTIL(1687,81558
# define KSWITCH_STOP(1690,81696
# define KSWITCH_STOP_NOT_PROPAGATED(1696,81952
# define KSTOP_NOT_MATCHING_NOT_PROPAGATED(1703,82268
# define KSTOP_NOT_PROPAGATED(1710,82622
# define KSTART_DC(1725,83351
# define KSTOP_DC(1727,83479
# define KSTOP_NOT_MATCHING_DC(1729,83615
# define KSTOP_REWIND_DC(1733,83842
# define DOKSTATS(1735,83958
# define KSTART(1736,84004
# define KSWITCH(1737,84050
# define KSWITCH_STOP(1738,84096
# define KSWITCH_STOP_NOT_PROPAGATED(1739,84142
# define KSTOP_NOT_MATCHING_NOT_PROPAGATED(1740,84199
# define KSTOP_NOT_PROPAGATED(1741,84262
# define KSTOP_NOT_MATCHING(1742,84312
# define KSTOP(1743,84362
# define KSTOP_REWIND(1744,84408
# define KSTOP_REWIND_UNTIL(1745,84454
# define KSTART_DC(1747,84503
# define KSTOP_DC(1748,84549
# define KSTOP_NOT_MATCHING_DC(1749,84595
# define KSTOP_REWIND_DC(1750,84650
#  define DODEBUG_ONCE(1754,84736
#  define DOLOG_ONCE(1755,84798
#  define DODEBUG_ONCE(1757,84888
#  define DOLOG_ONCE(1758,84936
#define MAX_FP_STATE_SIZE 1761,85018
#define PRESERVE_FLOATING_POINT_STATE_START(1772,85522
#define PRESERVE_FLOATING_POINT_STATE_END(1778,85840
#define PRESERVE_FLOATING_POINT_STATE(1783,86045
#define ARGUMENT_COUNTER(1790,86396
#define _ARGUMENT_COUNT1(1791,86462
#define _ARGUMENT_COUNT2(1792,86535
#define SYSLOG_COMMON(1821,87679
#define SYSLOG_INTERNAL_COMMON(1824,87828
#define SYSLOG_CUSTOM_NOTIFY(1836,88521
#define SYSLOG(1839,88644
#define SYSLOG_NO_OPTION_SYNCH(1841,88733
# define SYSLOG_INTERNAL(1845,88895
# define SYSLOG_INTERNAL_NO_OPTION_SYNCH(1847,88987
# define SYSLOG_INTERNAL(1850,89102
# define SYSLOG_INTERNAL_NO_OPTION_SYNCH(1851,89132
#define SYSLOG_INTERNAL_INFO(1855,89223
#define SYSLOG_INTERNAL_WARNING(1857,89312
#define SYSLOG_INTERNAL_ERROR(1859,89400
#define SYSLOG_INTERNAL_CRITICAL(1861,89484
#define SYSLOG_INTERNAL_INFO_ONCE(1864,89575
#define SYSLOG_INTERNAL_WARNING_ONCE(1866,89668
#define SYSLOG_INTERNAL_ERROR_ONCE(1868,89767
#define SYSLOG_INTERNAL_CRITICAL_ONCE(1870,89862
#define USAGE_ERROR(1878,90315
#define FATAL_USAGE_ERROR(1883,90647
#define OPTION_PARSE_ERROR(1892,91306
# define TRACELOG(1900,91739
# define TRACELOG(1902,91828
#define LOG_NONE 1910,92110
#define LOG_STATS 1911,92148
#define LOG_TOP 1912,92186
#define LOG_THREADS 1913,92224
#define LOG_SYSCALLS 1914,92262
#define LOG_ASYNCH 1915,92300
#define LOG_INTERP 1916,92338
#define LOG_EMIT 1917,92376
#define LOG_LINKS 1918,92414
#define LOG_CACHE 1919,92452
#define LOG_FRAGMENT 1920,92490
#define LOG_DISPATCH 1921,92528
#define LOG_MONITOR 1922,92566
#define LOG_HEAP 1923,92604
#define LOG_VMAREAS 1924,92642
#define LOG_SYNCH 1925,92680
#define LOG_MEMSTATS 1926,92718
#define LOG_OPTS 1927,92756
#define LOG_SIDELINE 1928,92794
#define LOG_SYMBOLS 1929,92832
#define LOG_RCT 1930,92870
#define LOG_NT 1931,92908
#define LOG_HOT_PATCHING 1932,92946
#define LOG_HTABLE 1933,92984
#define LOG_MODULEDB 1934,93022
#define LOG_LOADER 1935,93060
#define LOG_CLEANCALL 1936,93098
#define LOG_ALL_RELEASE 1938,93137
#define LOG_ALL 1939,93175
# define LOG_PROFILE 1942,93239
#define MAXIMUM_SYMBOL_LENGTH 1948,93450
    DUMP_NO_QUOTING 1972,94130
    DUMP_NO_QUOTING   = 0x01000,x010001972,94130
    DUMP_OCTAL 1973,94197
    DUMP_OCTAL        = 0x02000,x020001973,94197
    DUMP_NO_CHARS 1974,94247
    DUMP_NO_CHARS     = 0x04000,x040001974,94247
    DUMP_RAW 1975,94308
    DUMP_RAW          = 0x08000,x080001975,94308
    DUMP_DWORD 1976,94368
    DUMP_DWORD        = 0x10000,x100001976,94368
    DUMP_ADDRESS 1977,94426
    DUMP_ADDRESS      = 0x20000,x200001977,94426
    DUMP_APPEND_ASCII 1978,94505
    DUMP_APPEND_ASCII = 0x40000,x400001978,94505
    DUMP_PER_LINE 1979,94580
    DUMP_PER_LINE     = 0x000ff x000ff1979,94580
#define DUMP_PER_LINE_DEFAULT 1981,94648
#define MD5_BLOCK_LENGTH 2024,96282
#define MD5_RAW_BYTES 2025,96310
#define MD5_STRING_LENGTH 2026,96335
struct MD5Context 2033,96641
    uint32 state[state2034,96661
    uint64 count;2035,96718
    unsigned char buffer[buffer2036,96794
#   undef isprint2080,97968
#   undef isdigit2085,98034
#define isprint_fast(2091,98098
#define isdigit_fast(2092,98154
#  undef isprint2100,98402
#  undef isdigit2103,98443
# define isprint 2105,98468
# define isdigit 2106,98534
#define MAX_CALL_PROFILE_DEPTH 2143,100173
#define EXPECT(2151,100354
#define EXPECT_RELATION(2156,100565
#define EXPECT_RELATION_INTERNAL(2161,100776
#define TESTRUN(2174,101603
#define UNIT_TEST_MAIN 2189,102230

buildmark.c,190
const char dynamorio_buildmark[dynamorio_buildmark38,1802
const char dynamorio_buildmark[dynamorio_buildmark40,1866
const char dynamorio_version_string[dynamorio_version_string43,1920

config.c,2840
# define GLOBAL_CONFIG_DIR 52,2066
# define LOCAL_CONFIG_ENV 53,2110
# define LOCAL_CONFIG_SUBDIR 54,2143
# define GLOBAL_CONFIG_SUBDIR 55,2185
# define LOCAL_CONFIG_ENV 57,2224
# define LOCAL_CONFIG_SUBDIR 58,2264
# define GLOBAL_CONFIG_SUBDIR 59,2305
#define CFG_SFX_64 65,2461
#define CFG_SFX_32 66,2491
# define CFG_SFX 68,2532
# define CFG_SFX 70,2566
# define VERBOSE 75,2673
# define VERBOSE 77,2698
# undef ASSERT82,2877
# undef ASSERT_NOT_IMPLEMENTED83,2892
# undef ASSERT_NOT_TESTED84,2923
# undef ASSERT_NOT_REACHED85,2949
# undef FATAL_USAGE_ERROR86,2976
# undef USAGE_ERROR87,3002
# define ASSERT(88,3022
# define ASSERT_NOT_IMPLEMENTED(89,3055
# define ASSERT_NOT_TESTED(90,3104
# define ASSERT_NOT_REACHED(91,3148
# define FATAL_USAGE_ERROR(92,3192
# define USAGE_ERROR(93,3241
#   define print_file(97,3370
#   define print_file(99,3445
#  define print_file(102,3502
# undef STDERR104,3557
# define STDERR 105,3572
# undef our_snprintf106,3595
#  define our_snprintf 108,3632
#  define our_snprintf 110,3672
# undef DECLARE_NEVERPROT_VAR112,3712
# define DECLARE_NEVERPROT_VAR(113,3742
# define INFO(118,3870
# define INFO(122,4013
static const char *const config_var[config_var126,4112
static const wchar_t *const w_config_var[w_config_var140,4484
#define NUM_CONFIG_VAR 154,4875
typedef struct _config_val_t 159,5029
    char val[val160,5060
    bool has_value;162,5139
    bool app_specific;164,5223
    bool from_env;165,5246
} config_val_t;166,5265
typedef struct _config_vals_t 168,5282
    config_val_t vals[vals169,5314
} config_vals_t;170,5353
typedef struct _config_info_t 172,5371
    char fname_app[fname_app173,5403
    char fname_default[fname_default174,5437
    const char *query;query181,5831
            config_val_t answer;184,5883
            bool have_answer;185,5916
        } q;186,5946
        config_vals_t *v;v187,5959
    } u;188,5985
    bool has_1config;189,5994
} config_info_t;190,6016
static config_vals_t myvals;192,6034
static config_info_t config;193,6063
static bool config_initialized;194,6092
static config_info_t *config_reread_info;config_reread_info201,6424
static config_vals_t *config_reread_vals;config_reread_vals202,6466
my_getenv(206,6585
get_config_val_ex(223,6992
get_config_val(246,7727
set_config_from_env(252,7823
process_config_line(275,8721
read_config_file(331,11268
#   define BUFSIZE 340,11756
config_read(403,14070
config_reread(513,18838
get_config_val_other(584,21512
get_config_val_other_app(612,22578
get_config_val_other_arch(630,23261
config_init(638,23587
config_heap_init(650,23870
config_heap_exit(661,24231
config_exit(678,24674
get_parameter_ex(699,25339
get_parameter(720,25992
get_unqualified_parameter(726,26115
config_init(735,26355
config_exit(740,26383

config.h,84
#define _CONFIG_H_ 39,1824
# define PARAM_STR(79,2705
# define PARAM_STR(90,2995

dispatch.c,2525
# define CPU_SETSIZE 58,2282
# define CPU_SET(59,2317
# define CPU_CLR(60,2396
# define CPU_ISSET(61,2475
# define CPU_ZERO(63,2565
# define CPU_COUNT(64,2636
# define DISPLAY_STRING(76,3063
# define DISPLAY_STRING(78,3117
#define NULL_TERMINATE(81,3178
static struct timeval itr1_start_time,84,3283
static struct timeval itr1_start_time,itr1_end_time,84,3283
static struct timeval itr1_start_time,itr1_end_time,total_itr1_time;84,3283
#undef sched_yield89,3368
static struct timeval itr1_start_time,91,3388
static struct timeval itr1_start_time,itr1_end_time,91,3388
static struct timeval itr1_start_time,itr1_end_time,total_itr1_time;91,3388
static unsigned long long sn_tr_cnt=93,3520
static unsigned int bBlock_call_count=101,3736
struct thread_buffer103,3805
  dcontext_t *tdcontext;tdcontext105,3828
  app_pc tdcon_ntag;106,3853
  fragment_t *tfrag;tfrag107,3874
typedef struct thread_buffer tbuff;110,3899
tbuff tbf;112,3936
long total_sec_sn=141,4322
long total_usec_sn=142,4361
static int sn_fragment_instr_cnt1[sn_fragment_instr_cnt1143,4402
found_client_sysenter(191,5710
void pk_dummy_func(200,6008
void __attribute__ ((noinline)) pk_phase_change_dummy(211,6140
void __attribute__ ((noinline)) pk_set_affinity(220,6318
void *compiler_etrans(compiler_etrans265,7593
void *compiler_etrans1(compiler_etrans1744,27686
void *compiler_parent_req(compiler_parent_req1098,40411
dispatch(1582,62244
is_stopping_point(2483,102574
dispatch_enter_fcache_stats(2511,103438
dispatch_enter_fcache(2591,107152
enter_fcache(2737,113960
handle_special_tag(2780,115317
dispatch_at_stopping_point(2831,116888
dispatch_enter_native(2869,118233
dispatch_enter_dynamorio(2922,120741
dispatch_exit_fcache(3161,132361
dispatch_exit_fcache_stats(3389,142878
adjust_syscall_continuation(3904,164717
handle_system_call(3938,166242
handle_post_system_call(4194,177925
handle_callback_return(4252,179896
issue_last_system_call_from_app(4302,182086
transfer_to_dispatch(4324,182897
long get_total_comp_time(4354,184075
int get_dispatch_call_cnt(4358,184132
int* get_frag_instr_cnt_arr(4362,184195
void __attribute__ ((noinline)) sn_fcache_exit_syscalls_subcat1(4367,184324
void __attribute__ ((noinline)) sn_fcache_exit_ind_br_subcat2(4373,184594
void __attribute__ ((noinline)) sn_fcache_exit_dir_br_subcat3(4379,184913
void __attribute__ ((noinline)) sn_fcache_exit_no_dir_link_subcat4(4385,185252
void __attribute__ ((noinline)) sn_fcache_exit_dir_syscall_subcat5(4391,185540

dispatch.h,288
#define _DISPATCH_H_ 40,1905
#define NO_HOOK 86,3761
#define HOOK_ENABLED_HELPER 88,3802
#define HOOK_ENABLED 90,3858
#define ENTER_DR_HOOK 92,3942
#define EXIT_DR_HOOK 93,4010
#define ENTERING_DR(95,4078
#define EXITING_DR(100,4189
#define BACK_TO_NATIVE_AFTER_SYSCALL 107,4375

dispatch_no_threading_bkp.c,2074
# define CPU_SETSIZE 58,2226
# define CPU_SET(59,2261
# define CPU_CLR(60,2340
# define CPU_ISSET(61,2419
# define CPU_ZERO(63,2509
# define CPU_COUNT(64,2580
# define DISPLAY_STRING(73,2928
# define DISPLAY_STRING(75,2982
#define NULL_TERMINATE(78,3043
static struct timeval itr1_start_time,81,3148
static struct timeval itr1_start_time,itr1_end_time,81,3148
static struct timeval itr1_start_time,itr1_end_time,total_itr1_time;81,3148
static struct timeval itr1_start_time,84,3225
static struct timeval itr1_start_time,itr1_end_time,84,3225
static struct timeval itr1_start_time,itr1_end_time,total_itr1_time;84,3225
static unsigned long long sn_tr_cnt=86,3357
long total_sec_sn=116,3774
long total_usec_sn=117,3813
static int sn_fragment_instr_cnt1[sn_fragment_instr_cnt1118,3854
found_client_sysenter(166,5162
void pk_dummy_func(175,5460
void __attribute__ ((noinline)) pk_phase_change_dummy(186,5592
void __attribute__ ((noinline)) pk_set_affinity(195,5770
dispatch(244,7168
is_stopping_point(972,38178
dispatch_enter_fcache_stats(1000,39042
dispatch_enter_fcache(1080,42756
enter_fcache(1226,49564
handle_special_tag(1269,50921
dispatch_at_stopping_point(1288,51603
dispatch_enter_native(1326,52948
dispatch_enter_dynamorio(1379,55456
dispatch_exit_fcache(1618,67076
dispatch_exit_fcache_stats(1846,77593
adjust_syscall_continuation(2361,99432
handle_system_call(2395,100957
handle_post_system_call(2651,112640
handle_callback_return(2709,114611
issue_last_system_call_from_app(2759,116801
transfer_to_dispatch(2781,117612
long get_total_comp_time(2811,118790
int get_dispatch_call_cnt(2815,118847
int* get_frag_instr_cnt_arr(2819,118910
void __attribute__ ((noinline)) sn_fcache_exit_syscalls_subcat1(2824,119039
void __attribute__ ((noinline)) sn_fcache_exit_ind_br_subcat2(2830,119309
void __attribute__ ((noinline)) sn_fcache_exit_dir_br_subcat3(2836,119628
void __attribute__ ((noinline)) sn_fcache_exit_no_dir_link_subcat4(2842,119967
void __attribute__ ((noinline)) sn_fcache_exit_dir_syscall_subcat5(2848,120255

dynamo.c,3840
bool    dynamo_initialized 91,3027
bool    dynamo_heap_initialized 92,3063
bool    automatic_startup 93,3104
bool    control_all_threads 94,3139
bool    dr_early_injected 96,3191
int     dr_early_injected_location 97,3226
bool    dr_earliest_injected 98,3288
static void * dr_earliest_inject_args;99,3326
bool    dr_injected_primary_thread 107,3668
bool    dr_injected_secondary_thread 108,3712
bool    dr_late_injected_primary_thread 111,3837
bool    dr_api_entry 115,4005
bool    dr_api_exit 116,4035
bool    dr_preinjected 119,4097
static bool dynamo_exiting 122,4172
bool    dynamo_exited 124,4215
bool    dynamo_exited_and_cleaned 125,4246
bool    dynamo_exited_log_and_stats 127,4302
bool    dynamo_resetting 133,4572
bool    standalone_library 135,4669
bool    post_execve 138,4724
byte *  initstack;141,4810
#define EXCEPTION_STACK_SIZE 145,4960
END_DATA_SECTION(175,6226
const char * const DATASEC_NAMES[DATASEC_NAMES197,6890
typedef struct _protect_info_t 205,7121
    mutex_t lock;209,7251
    int num_threads_unprot;210,7269
    int num_threads_suspended;211,7324
} protect_info_t;212,7355
static protect_info_t *protect_info;protect_info213,7373
static uint starttime;232,7809
file_t main_logfile 234,7833
dr_statistics_t *stats stats238,7917
thread_record_t ** all_threads;249,8342
main_logfile_name(271,9380
thread_logfile_name(277,9465
statistics_pre_init(286,9625
statistics_init(304,10350
# define STATS_DEF(317,10696
# define RSTATS_DEF(319,10736
#undef STATS_DEF322,10799
#undef RSTATS_DEF323,10816
# define STATS_DEF(331,11130
# define RSTATS_DEF(336,11344
#undef STATS_DEF342,11581
#undef RSTATS_DEF343,11598
statistics_exit(347,11631
get_dr_stats(353,11694
dynamorio_app_init(363,11945
dynamorio_fork_init(849,30547
standalone_init(963,34684
standalone_exit(1033,36938
dynamo_process_exit_with_thread_info(1046,37245
dynamo_shared_exit(1053,37408
dynamorio_app_exit(1234,43216
synch_with_threads_at_exit(1256,43841
dynamo_process_exit_cleanup(1309,46365
dynamo_nullcalls_exit(1391,49783
dynamo_process_exit(1414,50277
create_new_dynamo_context(1688,60363
delete_dynamo_context(1761,63565
initialize_dynamo_context(1793,64910
create_callback_dcontext(1890,68100
is_thread_initialized(1986,72290
is_thread_known(2001,72694
mark_thread_execve(2011,72936
get_num_threads(2031,73462
is_last_app_thread(2037,73554
get_list_of_threads_common(2053,74211
get_list_of_threads(2102,76124
get_list_of_threads_ex(2109,76260
thread_lookup(2119,76520
get_thread_num(2151,77298
add_thread(2161,77512
remove_thread(2222,80138
dynamo_thread_init(2266,81538
dynamo_thread_exit_pre_client(2502,90690
dynamo_thread_exit_common(2525,91478
dynamo_thread_exit(2746,99287
dynamo_other_thread_exit(2754,99541
dynamo_thread_stack_free_and_exit(2769,100161
dr_app_setup(2783,100500
dr_app_cleanup(2796,100921
dr_app_start_helper(2822,102019
dr_app_stop(2841,102616
dr_app_setup_and_start(2847,102704
dynamo_thread_under_dynamo(2859,102913
dynamo_thread_not_under_dynamo(2881,103590
#define MAX_TAKE_OVER_ATTEMPTS 2900,104144
dynamorio_take_over_threads(2905,104238
dynamorio_app_take_over_helper(2930,105070
dynamorio_app_init_and_early_takeover(2982,107097
dynamorio_earliest_init_takeover_C(3015,108696
dynamorio_protect(3062,110475
dynamorio_unprotect(3131,113223
get_data_section_name(3188,115660
check_should_be_protected(3199,115870
data_sections_enclose_region(3243,117450
get_data_section_bounds(3269,118454
DECLARE_DATA_SECTION(3304,120120
data_section_exit(3342,121292
#define DATASEC_WRITABLE_MOD(3359,121918
protect_data_section(3369,122369
entering_dynamorio(3425,124897
exiting_dynamorio(3440,125394
is_on_initstack(3457,126000
is_on_dstack(3464,126157
is_currently_on_dstack(3471,126313
pre_second_thread(3479,126459

emit.c,337
#define STATS_FCACHE_ADD(61,2409
get_last_fragment_body_instr_pc(78,3192
stress_test_recreate(95,3720
final_exit_shares_prev_stub(143,5734
set_linkstub_fields(187,7791
emit_fragment_common(404,17299
emit_invisible_fragment(1005,42850
emit_fragment(1019,43424
emit_fragment_ex(1033,43944
emit_fragment_as_replacement(1045,44431

emit.h,26
#define _EMIT_H_ 42,1932

etrans.c,311
struct jaddr_etrans_list* get_jaddr_stack_top(17,1102
app_pc get_jaddr_stack_top_addr(26,1685
void push_bb_etrans_jaddr(39,1998
void pop_bb_etrans_jaddr(69,2737
int get_list_entry_count(95,3689
void initialize_etrans_list(136,5292
void decrement_stack_entry_cnt(140,5427
void clear_jaddr_stack(144,5538

etrans.h,475
struct jaddr_etrans_list{jaddr_etrans_list17,1240
  app_pc jaddr;18,1266
  struct jaddr_etrans_list *next;next19,1308
struct jaddr_list_attr{jaddr_list_attr24,1429
  struct jaddr_etrans_list *stk_top;stk_top25,1453
  int stk_cnt;26,1490
struct jaddr_list_attr *parent_req_list,parent_req_list41,2089
struct jaddr_list_attr *parent_req_list,*etrans_list,etrans_list41,2089
struct jaddr_list_attr *parent_req_list,*etrans_list,*etrans_list1;etrans_list141,2089

fcache.c,9507
#define FCACHE_OPTION(69,2920
#define MAX_SINGLE_MULTIPLE 87,3832
#define MIN_EMPTY_HOLE(117,5192
#define MIN_UNIT_END_HOLE(127,5632
#define START_PC_ALIGNMENT 130,5744
#define SLOT_ALIGNMENT(138,6129
typedef struct _live_header_t 148,6643
    fragment_t *f;f150,6739
} live_header_t;151,6758
#define HEADER_SIZE(156,6926
#define HEADER_SIZE_FROM_CACHE(158,7021
typedef struct _empty_slot_t 186,8282
    cache_pc  start_pc;187,8313
    uint      flags;191,8515
    fragment_t  *next_fcache;next_fcache192,8536
    fragment_t  *prev_fcache;prev_fcache193,8614
    uint      fcache_size;194,8692
} empty_slot_t;197,8926
#define FRAG_EMPTY(201,9018
#define FRAG_START(203,9080
#define FRAG_START_ASSIGN(210,9437
#define FRAG_START_PADDING(219,9795
#define FRAG_HDR_START(226,10257
#define FRAG_SIZE(228,10341
#define FRAG_SIZE_ASSIGN(236,10754
#define FIFO_NEXT(248,11677
#define FIFO_NEXT_ASSIGN(252,11874
#define FIFO_PREV(261,12160
#define FIFO_PREV_ASSIGN(265,12357
#define FRAG_TAG(274,12643
# define FRAG_ID(278,12769
#define FIFO_UNIT(281,12853
#define USE_FIFO(288,13140
#define USE_FREE_LIST(289,13193
#define USE_FIFO_FOR_CACHE(291,13318
#define USE_FREE_LIST_FOR_CACHE(292,13366
static const uint FREE_LIST_SIZES[FREE_LIST_SIZES298,13631
#define FREE_LIST_SIZES_NUM 315,14407
typedef struct _free_list_header_t 336,15383
    struct _free_list_header_t *next;next337,15420
    ushort flags;350,16242
    ushort size;351,16260
    struct _free_list_header_t *prev;prev352,16277
} free_list_header_t;353,16315
typedef struct _free_list_footer_t 359,16538
    ushort size;360,16575
} free_list_footer_t;361,16592
#define MAX_FREE_ENTRY_SIZE 363,16615
#define FRAG_IS_FREE_LIST(369,16859
#define FRAG_NEXT_SLOT(374,17079
#define FRAG_NEXT_FREE(377,17207
#define MIN_FCACHE_SLOT_SIZE(384,17550
#define UNIT_RESERVED_SIZE(392,17782
typedef struct _fcache_unit_t 394,17862
    cache_pc start_pc;395,17894
    cache_pc end_pc;396,17963
    cache_pc cur_pc;397,18045
    cache_pc reserved_end_pc;398,18120
    size_t size;399,18193
    bool full;400,18273
    struct _fcache *cache;cache401,18349
    dcontext_t *dcontext;dcontext403,18465
    bool writable;405,18498
    bool was_trace;410,18717
    bool was_shared;411,18737
    profile_t *profile;profile412,18758
    bool pending_free;414,18789
    bool pending_flush;416,18884
    uint flushtime;418,18980
    struct _fcache_unit_t *next_global;next_global420,19139
    struct _fcache_unit_t *prev_global;prev_global421,19208
    struct _fcache_unit_t *next_local;next_local422,19277
} fcache_unit_t;423,19356
    HISTOGRAM_GRANULARITY 428,19431
    HISTOGRAM_MAX_SIZE 429,19462
typedef struct _fcache 437,19668
    bool is_trace:is_trace439,19766
    bool is_shared:is_shared440,19833
    bool is_local:is_local447,20097
    bool is_coarse:is_coarse450,20242
    fragment_t *fifo;fifo451,20264
    fcache_unit_t *units;units454,20488
    size_t size;457,20688
    mutex_t lock;462,20877
    const char *name;name465,20909
    bool consistent;466,20931
    coarse_info_t *coarse_info;coarse_info470,21094
    uint max_size;478,21446
    uint max_unit_size;479,21504
    uint max_quadrupled_unit_size;480,21528
    uint free_upgrade_size;481,21563
    uint init_unit_size;482,21591
    bool finite_cache;483,21616
    uint regen_param;484,21639
    uint replace_param;485,21661
    uint      num_regenerated;488,21722
    uint      num_replaced;489,21753
    int      wset_check;493,21973
    bool     record_wset;497,22120
    free_list_header_t *free_list[free_list499,22147
    uint free_stats_freed[free_stats_freed501,22216
    uint free_stats_reused[free_stats_reused502,22282
    uint free_stats_coalesced[free_stats_coalesced503,22349
    uint free_stats_split[free_stats_split504,22419
    uint free_stats_charge[free_stats_charge505,22498
} fcache_t;510,22769
typedef struct _fcache_thread_units_t 515,22862
    fcache_t *bb;bb516,22902
    fcache_t *trace;trace517,22948
    cache_pc pending_unmap_pc;519,23048
    size_t pending_unmap_size;520,23079
    bool pending_flush;522,23174
} fcache_thread_units_t;523,23198
#define ALLOC_DC(525,23224
#define PROTECT_CACHE(531,23477
#define CACHE_PROTECTED(537,23747
typedef struct _fcache_list_t 544,23994
    fcache_unit_t *units;units546,24080
    fcache_unit_t *dead;dead547,24152
    uint num_dead;551,24389
    fcache_unit_t *units_to_flush;units_to_flush559,24719
    fcache_unit_t *units_to_free;units_to_free563,24897
    fcache_unit_t *units_to_free_tail;units_to_free_tail564,24931
} fcache_list_t;565,24970
static fcache_list_t *allunits;allunits568,25037
static fcache_t *shared_cache_bb;shared_cache_bb574,25284
static fcache_t *shared_cache_trace;shared_cache_trace575,25318
vm_area_vector_t *fcache_unit_areas;fcache_unit_areas584,25703
    CACHE_BB 602,26506
    CACHE_TRACE,603,26524
    CACHE_NUM_TYPES,604,26541
#define STATS_FCACHE_ADD(609,26707
#define STATS_FCACHE_SUB(623,27406
#define STATS_FCACHE_MAX(626,27507
#define CHECK_PARAMS(666,28971
#define CHECK_WSET_PARAM(711,32318
fcache_check_option_compatibility(740,34437
fcache_reset_init(812,37781
fcache_init(875,40492
fcache_unit_profile_stop(907,41578
remove_unit_from_cache(941,42594
fcache_really_free_unit(961,43280
fcache_stats_exit(997,44515
fcache_reset_free(1030,45694
fcache_exit(1092,47713
fcache_profile_exit(1127,48690
fcache_lookup_unit(1143,49051
fcache_fragment_pclookup(1152,49353
fcache_pc_in_live_unit(1214,51617
fcache_is_writable(1232,52099
fcache_change_fragment_protection(1243,52349
in_fcache(1284,53847
fcache_create_unit(1295,54127
fcache_free_unit(1428,58922
#define FCACHE_GUARDED(1500,61801
#define SET_CACHE_PARAMS(1506,62100
fcache_cache_init(1523,63168
fcache_cache_free(1595,66129
fcache_free_list_consistency(1638,67538
fcache_cache_stats(1714,70797
get_histogram_bucket(1784,73861
fcache_shift_fragments(1795,74159
cache_extend_commitment(1877,77538
fcache_increase_size(1901,78508
fcache_thread_reset_init(2101,87240
fcache_thread_init(2107,87315
fragment_lookup_deleted(2129,88114
fragment_lookup_cache_deleted(2144,88665
fcache_thread_exit_stats(2167,89492
fcache_thread_reset_free(2180,89846
fcache_thread_exit(2204,90709
print_fifo(2217,91145
verify_fifo(2231,91550
fifo_append(2258,92444
fifo_remove(2279,93134
fifo_prepend_empty(2308,94152
check_regen_replace_ratio(2369,96771
extend_unit_end(2461,101124
try_for_more_space(2505,102853
place_fragment(2767,115350
removed_fragment_stats(2815,117519
force_fragment_from_cache(2858,119229
replace_fragments(2877,119943
replace_fifo(3048,127045
find_free_list_bucket(3076,128143
free_list_footer_from_header(3087,128470
free_list_header_from_footer(3093,128652
remove_from_free_list(3099,128818
add_to_free_list(3128,129876
find_free_list_slot(3286,137278
add_fragment_common(3490,145954
fcache_shift_start_pc(3754,158859
fcache_return_extra_space(3801,160321
get_cache_for_new_fragment(3945,166880
fcache_add_fragment(4085,172704
fcache_remove_fragment(4208,177689
get_dcontext_for_fragment(4252,179282
fcache_is_flush_pending(4273,180074
append_units_to_free_list(4283,180357
chain_fragments_for_flush(4322,181726
fcache_flush_pending_units(4432,186654
fcache_free_pending_units(4540,190879
fcache_mark_units_for_free(4573,192157
fcache_flush_all_caches(4604,193298
fcache_reset_all_caches_proactively(4652,195523
schedule_reset(4889,206361
fcache_reset_cache(4902,206700
fcache_low_on_memory(4992,210211
get_fcache_coarse_info(5099,214969
fcache_coarse_cache_delete(5110,215318
coarse_frozen_cache_size(5131,216157
fcache_coarse_init_frozen(5152,216852
fcache_coarse_set_info(5173,217785
cache_pc get_initial_shared_coarse_cache_start_pc(5185,218041
cache_pc get_initial_shared_coarse_cache_end_pc(5190,218148
cache_pc get_initial_shared_coarse_cache_cur_pc(5194,218250
cache_pc get_initial_shared_cache_start_pc(5198,218352
cache_pc get_initial_shared_cache_end_pc(5202,218444
cache_pc get_initial_shared_cache_cur_pc(5206,218532
cache_pc get_initial_private_cache_start_pc(5210,218620
cache_pc get_initial_private_cache_end_pc(5214,218714
cache_pc get_initial_private_cache_cur_pc(5218,218804
const char* get_cache_name(5228,218981
cache_pc get_last_trace_cache_start_pc(5232,219038
cache_pc get_last_trace_cache_end_pc(5236,219111
cache_pc get_last_trace_cache_cur_pc(5240,219180
int is_last_trace_cache_resized(5244,219249
cache_pc get_shared_coarse_cache_prev_end_pc(5256,219447
cache_pc get_shared_cache_prev_end_pc(5260,219543
cache_pc get_private_cache_prev_end_pc(5264,219625
void set_cache_variables_to_defaults(5268,219709
cache_pc get_initial_bb_shared_coarse_cache_start_pc(5303,220702
cache_pc get_initial_bb_shared_coarse_cache_end_pc(5307,220814
cache_pc get_initial_bb_shared_coarse_cache_cur_pc(5311,220922
cache_pc get_initial_bb_shared_cache_start_pc(5315,221030
cache_pc get_initial_bb_shared_cache_end_pc(5319,221128
cache_pc get_initial_bb_shared_cache_cur_pc(5323,221222
cache_pc get_initial_bb_private_cache_start_pc(5327,221316
cache_pc get_initial_bb_private_cache_end_pc(5331,221416
cache_pc get_initial_bb_private_cache_cur_pc(5335,221512
const char* get_bb_cache_name(5339,221608
cache_pc get_last_bb_cache_start_pc(5343,221671
cache_pc get_last_bb_cache_end_pc(5347,221744
cache_pc get_last_bb_cache_cur_pc(5351,221813

fcache.h,483
#define _FCACHE_H_ 42,1915
#define IN_TRACE_CACHE(49,2129
#define PAD_FRAGMENT_JMPS(54,2339
#define PAD_JMPS_SHIFT_START(57,2448
    RESET_ALL 65,2752
    RESET_ALL              = 0x001,x00165,2752
    RESET_BASIC_BLOCKS 67,2837
    RESET_BASIC_BLOCKS     = 0x002,x00267,2837
    RESET_TRACES 69,2925
    RESET_TRACES           = 0x004,x00469,2925
    RESET_PENDING_DELETION 74,3163
    RESET_PENDING_DELETION = 0x008,x00874,3163
#define SELF_PROTECT_CACHE(123,4757

fragment.c,13682
#define INIT_HTABLE_SIZE_SHARED_BB 59,2351
#define INIT_HTABLE_SIZE_SHARED_TRACE 60,2428
#define INIT_HTABLE_SIZE_BB 62,2528
#define INIT_HTABLE_SIZE_SHARED_FUTURE 64,2641
#  define INIT_HTABLE_SIZE_AFTER_CALL 67,2789
#define INIT_HTABLE_SIZE_FUTURE 70,2903
#define INIT_HTABLE_SIZE_COARSE 74,3038
#define INIT_HTABLE_SIZE_COARSE_TH 75,3072
#  define INIT_HTABLE_SIZE_RCT_IBT 80,3196
#define INIT_HTABLE_SIZE_TRACE 90,3484
static fragment_table_t *shared_bb;shared_bb106,4228
static fragment_table_t *shared_trace;shared_trace107,4264
static fragment_table_t *shared_future;shared_future110,4377
static per_thread_t *shared_pt;shared_pt116,4593
#define USE_SHARED_PT(118,4626
typedef struct _dead_fragment_table_t 125,4972
    fragment_entry_t *table_unaligned;table_unaligned126,5012
    uint table_flags;127,5051
    uint capacity;128,5073
    uint ref_count;129,5092
    struct _dead_fragment_table_t *next;next130,5112
} dead_fragment_table_t;131,5153
typedef struct _dead_table_lists_t 134,5251
    dead_fragment_table_t *dead_tables;dead_tables135,5288
    dead_fragment_table_t *dead_tables_tail;dead_tables_tail136,5328
} dead_table_lists_t;137,5373
static dead_table_lists_t *dead_lists;dead_lists139,5396
static rct_module_table_t rac_non_module_table;150,5881
rct_module_table_t rct_global_table;175,6856
#define NULL_TAG 178,6901
#define FAKE_TAG 180,7004
byte * hashlookup_null_target;189,7353
#define HASHLOOKUP_NULL_START_PC 190,7384
static const fragment_t null_fragment 191,7453
static const fragment_t sentinel_fragment 194,7666
static const fragment_t unlinked_fragment 204,8171
#define REAL_FRAGMENT(209,8422
#define GET_PT(214,8613
#define TABLE_PROTECTED(217,8743
#define GET_FTABLE_HELPER(221,8907
#define GET_FTABLE(229,9358
#define GET_IBT_TABLE(232,9512
#define SHOULD_OUTPUT_FRAGMENT(268,11209
#define FRAGMENT_COARSE_WRAPPER_FLAGS 273,11357
                     } coarse_emit_fragment,292,12167
typedef struct _thread_list_t 301,12522
    uint thread_num;302,12554
    uint count;303,12575
    struct _thread_list_t *next;next304,12591
} thread_list_t;305,12624
typedef struct _shared_entry_t 307,12642
    app_pc tag;308,12675
    uint num_threads;309,12691
    thread_list_t *threads;threads310,12713
    uint heap_size;311,12741
    uint cache_size;312,12761
    struct _shared_entry_t *next;next313,12782
} shared_entry_t;314,12816
# define SHARED_HASH_BITS 315,12834
static shared_entry_t ** shared_blocks;316,12863
static shared_entry_t ** shared_traces;319,13019
shared_block_lookup(325,13242
reset_shared_block_table(341,13600
add_shared_block(365,14373
print_shared_table_stats(430,16626
print_shared_stats(467,18027
static int bb_sizes[bb_sizes478,18417
static int trace_sizes[trace_sizes479,18446
static int num_bb 480,18477
static int num_traces 481,18500
record_fragment_size(484,18533
print_size_results(498,18810
#define FRAGTABLE_WHICH_HEAP(507,19117
# define UNPROT_STAT(512,19348
# define ALLOC_UNPROT_STATS(516,19488
# define DEALLOC_UNPROT_STATS(523,19970
# define CHECK_UNPROT_STATS(526,20203
check_stay_on_trace_stats_overflow(529,20286
update_lookuptable_tls(547,21115
static const char *ibl_bb_table_type_names[ibl_bb_table_type_names576,22280
static const char *ibl_trace_table_type_names[ibl_trace_table_type_names578,22390
dump_lookuptable_tls(584,22552
#define FRAGENTRY_FROM_FRAGMENT(613,23587
#define NAME_KEY 616,23727
#define ENTRY_TYPE 617,23748
static const fragment_entry_t fe_empty 620,23884
static const fragment_entry_t fe_sentinel 621,23965
#define ENTRY_TAG(622,24053
#define ENTRY_EMPTY 623,24115
#define ENTRY_SENTINEL 624,24156
#define IBL_ENTRY_IS_EMPTY(625,24200
#define IBL_ENTRY_IS_INVALID(628,24345
#define IBL_ENTRY_IS_SENTINEL(629,24410
#define ENTRY_IS_EMPTY(632,24564
#define ENTRY_IS_SENTINEL(633,24617
#define ENTRY_IS_INVALID(634,24673
#define IBL_ENTRIES_ARE_EQUAL(635,24728
#define ENTRIES_ARE_EQUAL(636,24811
#define HASHTABLE_WHICH_HEAP(637,24884
#define HTLOCK_RANK 638,24948
#define HASHTABLE_ENTRY_STATS 639,24995
hashtable_ibl_free_entry(647,25205
#define NAME_KEY 658,25565
#define ENTRY_TYPE 659,25591
#define ENTRY_TAG(662,25669
#define ENTRY_EMPTY 664,25780
#define ENTRY_SENTINEL 665,25845
#define ENTRY_IS_EMPTY(666,25914
#define ENTRY_IS_SENTINEL(667,25986
#define ENTRY_IS_INVALID(668,26062
#define ENTRIES_ARE_EQUAL(669,26138
#define HASHTABLE_WHICH_HEAP(670,26185
#define HTLOCK_RANK 671,26249
hashtable_fragment_resized_custom(677,26388
hashtable_fragment_init_internal_custom(686,26725
hashtable_fragment_study_custom(693,26860
hashtable_ibl_init_internal_custom(702,27151
hashtable_ibl_myinit(754,29252
hashtable_ibl_myfree(796,31187
hashtable_fragment_free_entry(808,31538
fragment_add_to_hashtable(822,31982
update_indirect_exit_stubs_from_table(861,33873
safely_nullify_tables(885,34673
add_to_dead_table_list(928,36714
hashtable_ibl_resized_custom(975,38714
hashtable_ibl_study_custom(1062,42987
hashtable_fragment_reset(1110,45441
#define APP_PC_EMPTY 1214,50145
#define APP_PC_SENTINEL 1216,50230
#define APP_PC_ENTRY_IS_EMPTY(1217,50288
#define APP_PC_ENTRY_IS_SENTINEL(1218,50348
#define APP_PC_ENTRY_IS_REAL(1219,50411
#define NAME_KEY 1222,50620
#define ENTRY_TYPE 1223,50644
#define ENTRY_TAG(1225,50715
#define ENTRY_EMPTY 1226,50767
#define ENTRY_SENTINEL 1227,50814
#define ENTRY_IS_EMPTY(1228,50864
#define ENTRY_IS_SENTINEL(1229,50923
#define ENTRY_IS_INVALID(1230,50985
#define ENTRIES_ARE_EQUAL(1231,51052
#define HASHTABLE_WHICH_HEAP(1232,51099
#define HTLOCK_RANK 1233,51153
#define HASHTABLE_SUPPORT_PERSISTENCE 1234,51207
hashtable_app_pc_init_internal_custom(1242,51425
hashtable_app_pc_resized_custom(1247,51540
hashtable_app_pc_study_custom(1256,51869
hashtable_app_pc_free_entry(1263,52071
fragment_initialized(1274,52390
fragment_reset_init(1281,52594
fragment_init(1396,58325
fragment_reset_free(1450,60362
fragment_exit(1576,65834
dec_table_ref_count(1718,71382
dec_all_table_ref_counts(1806,75475
fragment_thread_reset_init(1829,76405
fragment_thread_init(2006,85545
fragment_thread_reset_free(2060,87424
fragment_thread_exit(2185,92633
fragment_fork_init(2227,93880
fragment_heap_size(2253,94690
fragment_create_heap(2268,95256
fragment_init_heap(2286,96021
fragment_create(2341,97905
fragment_recreate_with_linkstubs(2497,104347
fragment_free(2551,106657
fragment_stubs_end_pc(2597,108203
fragment_body_end_pc(2607,108476
get_total_linkcount(2621,108873
fragment_get_fragment_delete_mutex(2638,109347
fragment_release_fragment_delete_mutex(2646,109571
    LOOKUP_TRACE 2658,109953
    LOOKUP_TRACE   = 0x001,x0012658,109953
    LOOKUP_BB 2659,109981
    LOOKUP_BB      = 0x002,x0022659,109981
    LOOKUP_PRIVATE 2660,110009
    LOOKUP_PRIVATE = 0x004,x0042660,110009
    LOOKUP_SHARED 2661,110037
    LOOKUP_SHARED  = 0x008,x0082661,110037
fragment_lookup_type(2666,110157
fragment_lookup(2764,114752
fragment_lookup_trace(2774,115095
fragment_lookup_bb(2783,115399
fragment_lookup_shared_bb(2792,115703
fragment_lookup_same_sharing(2802,116033
hashtable_pclookup(2811,116383
fragment_pclookup_by_htable(2832,117018
fragment_pclookup(2901,119672
fragment_pclookup_with_linkstubs(2929,120948
fragment_add(2946,121439
fragment_delete(3022,124486
fragment_record_translation_info(3146,129230
fragment_remove_shared_no_flush(3191,131145
fragment_unlink_for_deletion(3286,135023
update_private_ibt_table_ptrs(3370,138654
update_private_ptr_to_shared_ibt_table(3429,141060
update_all_private_ibt_table_ptrs(3520,144904
fragment_prepare_for_removal_from_table(3557,146403
fragment_prepare_for_removal(3634,149926
fragment_ibl_stat_account(3702,152678
fragment_remove_from_ibt_tables(3729,153723
fragment_remove_ibl_entries_in_region(3780,156143
fragment_remove_all_ibl_in_region(3823,158195
fragment_remove(3844,159091
fragment_replace(3884,160673
fragment_shift_fcache_pointers(3919,162228
fragment_copy_data_fields(3994,165190
dump_lookup_table(4022,166187
is_fragment_index_wraparound(4058,167552
fragment_add_ibl_target_helper(4074,168204
fragment_add_ibl_target(4160,171877
fragment_create_future(4396,183750
fragment_free_future(4417,184568
fragment_create_and_add_future(4427,184974
fragment_delete_future(4441,185547
fragment_delete_future_filter(4458,186181
fragment_delete_futures_in_region(4466,186383
fragment_lookup_future(4483,187195
fragment_lookup_private_future(4501,187867
#define STATS_RCT_ADD(4517,188464
rct_is_global_table(4525,188745
rct_get_table(4532,188943
rct_table_lookup_internal(4544,189253
rct_table_lookup(4567,190057
rct_table_add(4583,190525
rct_table_flush_entry(4673,195241
rct_table_invalidate_range(4706,196637
rct_table_free_internal(4753,198595
rct_table_free(4761,198859
rct_table_copy(4777,199392
rct_table_merge(4786,199587
rct_table_persist_size(4800,200037
rct_table_persist(4813,200387
rct_table_resurrect(4824,200710
rct_module_table_free(4832,201027
rct_module_table_persisted_invalidate(4851,201762
rct_module_table_copy(4907,204599
rct_module_table_set(4963,207018
rct_module_persisted_table_exists(5009,209190
rct_module_live_entries(5022,209570
coarse_persisted_fill_ibl_helper(5035,209946
coarse_persisted_fill_ibl(5094,212530
fragment_after_call_lookup(5149,215014
fragment_add_after_call(5155,215138
fragment_flush_after_call(5167,215478
invalidate_after_call_target_range(5178,215804
rct_ind_branch_target_lookup(5211,216860
rct_add_valid_ind_branch_target(5221,217141
rct_flush_ind_branch_target_entry(5243,217871
invalidate_ind_branch_target_range(5253,218207
fragment_self_write(5276,218920
fragment_overlaps(5328,221329
study_all_hashtables(5362,222447
get_flushtime_last_update(5450,226313
set_flushtime_last_update(5457,226475
set_at_syscall(5464,226646
get_at_syscall(5471,226791
check_flush_queue(5483,227166
is_self_flushing(5561,230586
is_self_allsynch_flushing(5570,230811
is_self_couldbelinking(5581,231171
is_couldbelinking(5592,231550
wait_for_flusher_nolinking(5607,232173
wait_for_flusher_linking(5629,233070
check_safe_for_flush_synch(5653,234024
process_client_flush_requests(5681,235204
enter_nolinking(5716,236786
enter_couldbelinking(5825,241215
enter_threadexit(5866,242926
increment_global_flushtime(5888,243669
flush_fragments_free_futures(5974,247527
flush_fragments_synchall_start(6005,248884
flush_fragments_synchall_end(6164,257178
flush_fragments_synch_unlink_priv(6202,258710
flush_fragments_unlink_shared(6534,274362
flush_invalidate_ibl_shared_target(6642,279378
flush_fragments_end_synch(6683,280940
flush_fragments_in_region_start(6802,286179
flush_fragments_in_region_finish(6843,287765
flush_fragments_and_remove_region(6854,288112
flush_fragments_from_region(6875,289210
invalidate_code_cache(6897,290182
flush_vmvector_regions(6915,290975
fragment_output(6949,292556
init_trace_file(6963,293084
exit_trace_file(6983,293734
#define TRACEBUF_SIZE 7011,294921
#define TRACEBUF_MAKE_ROOM(7013,294949
output_trace_binary(7021,295256
output_trace(7139,299801
profile_fragment_enter(7392,309760
profile_fragment_dispatch(7438,311230
#define NAME_KEY 7480,313090
#define ENTRY_TYPE 7481,313114
static app_to_cache_t a2c_empty 7482,313148
static app_to_cache_t a2c_sentinel 7483,313198
#define ENTRY_TAG(7489,313517
#define ENTRY_EMPTY 7490,313573
#define ENTRY_SENTINEL 7491,313619
#define ENTRY_IS_EMPTY(7492,313668
#define ENTRY_IS_SENTINEL(7493,313729
#define ENTRY_IS_INVALID(7494,313793
#define ENTRIES_ARE_EQUAL(7495,313860
#define HASHTABLE_WHICH_HEAP(7496,313915
#define COARSE_HTLOCK_RANK 7498,314045
#define HTLOCK_RANK 7499,314132
#define HASHTABLE_SUPPORT_PERSISTENCE 7500,314185
#define A2C_ENTRY_IS_EMPTY(7507,314457
#define A2C_ENTRY_IS_SENTINEL(7508,314509
#define A2C_ENTRY_IS_REAL(7509,314576
hashtable_coarse_init_internal_custom(7514,314764
hashtable_coarse_resized_custom(7519,314879
hashtable_coarse_study_custom(7528,315224
hashtable_coarse_free_entry(7535,315426
coarse_lookup_internal(7567,317031
fragment_coarse_htable_create(7586,317699
fragment_coarse_htable_merge_helper(7648,320744
fragment_coarse_htable_merge(7689,322553
study_and_free_coarse_htable(7760,325961
fragment_coarse_free_entry_pclookup_table(7813,328038
fragment_coarse_htable_free(7824,328442
fragment_coarse_num_entries(7847,329322
fragment_coarse_add(7861,329638
fragment_coarse_th_lookup(7919,332160
fragment_coarse_th_unlink_and_add(7953,333535
fragment_coarse_th_add(7985,334928
IF_DEBUG_ELSE(8007,335899
fragment_coarse_lookup_in_unit(8082,339411
fragment_coarse_lookup(8126,341358
fragment_coarse_wrapper(8144,341993
fragment_coarse_lookup_wrapper(8167,342871
fragment_lookup_fine_and_coarse(8185,343431
fragment_lookup_fine_and_coarse_sharing(8215,344681
get_fragment_coarse_info(8237,345567
coarse_is_trace_head_in_own_unit(8254,346166
fragment_coarse_replace(8286,347273
#define PCLOOKUP_LAST_HTABLE_INIT_SIZE 8306,347960
#define PCLOOKUP_LAST_HTABLE_MAX_ENTRIES 8315,348453
typedef struct _pclookup_last_t 8317,348500
    app_pc tag;8318,348534
    cache_pc entry;8319,348550
} pclookup_last_t;8320,348570
pclookup_last_free(8323,348602
fragment_coarse_pclookup(8333,348956
fragment_coarse_create_entry_pclookup_table(8456,354329
fragment_coarse_entry_pclookup(8535,358481
fragment_coarse_entry_freeze(8579,360079
fragment_coarse_unit_freeze(8690,365645
fragment_coarse_htable_persist_size(8799,370545
fragment_coarse_htable_persist(8809,370897
fragment_coarse_htable_resurrect(8819,371237

fragment.h,8348
#define _FRAGMENT_H_ 43,1990
#define FRAG_IS_FUTURE 49,2089
#define FRAG_TRACE_LINKS_SHIFTED 50,2134
#define FRAG_IS_TRACE 51,2179
#define FRAG_IS_TRACE_HEAD 52,2224
#define FRAG_LINKED_OUTGOING 53,2269
#define FRAG_LINKED_INCOMING 54,2314
#define FRAG_CANNOT_DELETE 55,2359
#define FRAG_CANNOT_BE_TRACE 56,2404
#define FRAG_FAKE 63,2731
#define FRAG_WRITES_EFLAGS_6 66,2848
#define FRAG_WRITES_EFLAGS_OF 68,2956
#define FRAG_FCACHE_FREE_LIST 76,3297
#define FRAG_HAS_SYSCALL 78,3343
#define FRAG_TRACE_BUILDING 80,3464
#define FRAG_WAS_DELETED 86,3699
#define FRAG_SELFMOD_SANDBOXED 88,3820
#define FRAG_HAS_DIRECT_CTI 90,3924
#define FRAG_IS_EMPTY_SLOT 92,4047
#define FRAG_IS_EXTRA_VMAREA 94,4170
#define FRAG_IS_EXTRA_VMAREA_INIT 95,4215
# define FRAG_DYNGEN 99,4360
#  define FRAG_DYNGEN_RESTRICTED 102,4497
# define FRAG_HAS_MOV_SEG 110,4691
# define FRAG_32_BIT 115,4796
#define FRAG_MUST_END_TRACE 118,4849
#define FRAG_SHARED 120,4895
#define FRAG_TEMP_PRIVATE 124,5025
#define FRAG_TRACE_OUTPUT 126,5071
#define FRAG_CBR_FALLTHROUGH_SHORT 128,5117
#define FRAG_COARSE_GRAIN 133,5263
#define FRAG_HAS_TRANSLATION_INFO 140,5606
# define FRAG_X86_TO_X64 144,5736
# define FRAG_DO_NOT_SIDELINE 149,5872
#define FRAG_FOLLOWS_FREE_ENTRY 153,5992
#define FUTURE_FLAGS_TRANSFER 164,6557
#define FUTURE_FLAGS_ALLOWED 166,6638
enum { MAX_FRAGMENT_SIZE 170,6864
enum { MAX_FRAGMENT_SIZE = USHRT_MAX 170,6864
struct _fragment_t 176,7058
    app_pc    tag;182,7336
    uint      flags;187,7548
    ushort       size;197,7974
    byte      prefix_size;204,8245
    byte      fcache_extra;205,8333
    cache_pc  start_pc;207,8428
        linkstub_t  *incoming_stubs;incoming_stubs215,8825
        translation_info_t *translation_info;translation_info219,8987
    } in_xlate;220,9033
    fragment_t  *next_vmarea;next_vmarea222,9050
    fragment_t  *prev_vmarea;prev_vmarea223,9128
        fragment_t  *also_vmarea;also_vmarea225,9218
        uint      flushtime;229,9459
    } also;230,9488
    int       id;233,9514
    int num_calls;237,9634
    int num_rets;238,9653
typedef struct _private_fragment_t 247,9903
    fragment_t  f;248,9940
    fragment_t  *next_fcache;next_fcache249,9959
    fragment_t  *prev_fcache;prev_fcache250,10037
} private_fragment_t;251,10115
struct _future_fragment_t 259,10409
    app_pc    tag;260,10437
    uint      flags;261,10514
    linkstub_t  *incoming_stubs;incoming_stubs262,10573
typedef struct _trace_bb_info_t 266,10709
    app_pc tag;267,10743
    uint num_exits;275,11111
} trace_bb_info_t;277,11138
typedef struct _trace_only_t 282,11300
    uint64    count;284,11352
    uint64    total_time;285,11428
    linkcount_type_t count_old_pre;289,11541
    linkcount_type_t count_old_post;290,11577
    trace_bb_info_t *bbs;bbs294,11697
    uint    num_bbs;295,11723
} trace_only_t;296,11744
struct _trace_t 299,11797
    fragment_t     f;300,11815
    trace_only_t t;301,11857
typedef struct _private_trace_t 305,11928
    private_fragment_t  f;306,11962
    trace_only_t        t;307,11989
} private_trace_t;308,12016
#define TRACE_FIELDS(311,12109
#define IS_IBL_TARGET(332,13201
#define HASHTABLE_IBL_OFFSET(338,13510
typedef struct _unprot_ht_statistics_t 344,13780
    hashtable_statistics_t trace_ibl_stats[trace_ibl_stats350,14191
    hashtable_statistics_t bb_ibl_stats[bb_ibl_stats351,14256
    hashtable_statistics_t shared_syscall_hit_stats;355,14404
} unprot_ht_statistics_t;357,14507
typedef struct _fragment_entry_t 363,14671
    app_pc    tag_fragment;364,14706
    cache_pc  start_pc_fragment;365,14783
} fragment_entry_t;366,14865
#define HASHLOOKUP_SENTINEL_START_PC 368,14886
#define FRAG_TABLE_INCLUSIVE_HIERARCHY 379,15360
#define FRAG_TABLE_IBL_TARGETED 381,15515
#define FRAG_TABLE_TARGET_SHARED 383,15663
#define FRAG_TABLE_SHARED 385,15768
#define FRAG_TABLE_PERSISTENT 387,15878
#define FRAG_TABLE_TRACE 389,15986
#define NAME_KEY 393,16173
#define ENTRY_TYPE 394,16199
#define HASHTABLEX_HEADER 396,16276
#define CUSTOM_FIELDS 397,16304
#undef HASHTABLEX_HEADER399,16361
#define NAME_KEY 404,16532
#define ENTRY_TYPE 405,16553
# define HASHTABLE_ENTRY_STATS 408,16662
# define CUSTOM_FIELDS 409,16695
# define CUSTOM_FIELDS 418,17109
#define HASHTABLEX_HEADER 421,17203
#undef HASHTABLEX_HEADER423,17255
#define NAME_KEY 428,17419
#define ENTRY_TYPE 429,17443
#define CUSTOM_FIELDS 431,17514
#define HASHTABLEX_HEADER 432,17547
#undef HASHTABLEX_HEADER434,17599
typedef struct _per_thread_t 456,18704
    ibl_table_t trace_ibt[trace_ibt457,18735
    ibl_table_t bb_ibt[bb_ibt458,18806
    fragment_table_t bb;459,18871
    fragment_table_t trace;460,18896
    fragment_table_t future;461,18924
    mutex_t fragment_delete_mutex;463,19011
    file_t tracefile;465,19053
    bool           could_be_linking;468,19140
    bool           wait_for_unlink;469,19216
    bool           about_to_exit;470,19303
    bool           flush_queue_nonempty;471,19401
    event_t        waiting_for_unlink;472,19490
    event_t        finished_with_unlink;473,19567
    event_t        finished_all_unlink;474,19620
    mutex_t          linking_lock;478,19831
    bool           soon_to_be_linking;479,19866
    uint           flushtime_last_update;481,19994
    bool           at_syscall_at_flush;486,20227
    uint tracedump_num_below_threshold;489,20293
    linkcount_type_t tracedump_count_below_threshold;490,20333
} per_thread_t;492,20394
#define FCACHE_ENTRY_PC(495,20412
#define FCACHE_PREFIX_ENTRY_PC(496,20470
#define FCACHE_IBT_ENTRY_PC(498,20579
#define FRAGMENT_STRUCT_SIZE(503,20777
#define FRAGMENT_EXIT_STUBS(509,21109
#define FRAGMENT_SELFMOD_COPY_SIZE(515,21398
#define FRAGMENT_SELFMOD_COPY_PC(518,21568
#define FRAGMENT_TRANSLATION_INFO_ADDR(522,21743
#define HAS_STORED_TRANSLATION_INFO(529,22118
#define FRAGMENT_TRANSLATION_INFO(533,22296
    FRAGDEL_ALL 614,24466
    FRAGDEL_ALL               = 0x000,x000614,24466
    FRAGDEL_NO_OUTPUT 615,24505
    FRAGDEL_NO_OUTPUT         = 0x001,x001615,24505
    FRAGDEL_NO_UNLINK 616,24544
    FRAGDEL_NO_UNLINK         = 0x002,x002616,24544
    FRAGDEL_NO_HTABLE 617,24583
    FRAGDEL_NO_HTABLE         = 0x004,x004617,24583
    FRAGDEL_NO_FCACHE 618,24622
    FRAGDEL_NO_FCACHE         = 0x008,x008618,24622
    FRAGDEL_NO_HEAP 619,24661
    FRAGDEL_NO_HEAP           = 0x010,x010619,24661
    FRAGDEL_NO_MONITOR 620,24700
    FRAGDEL_NO_MONITOR        = 0x020,x020620,24700
    FRAGDEL_NO_VMAREA 621,24739
    FRAGDEL_NO_VMAREA         = 0x040,x040621,24739
    FRAGDEL_NEED_CHLINK_LOCK 623,24779
    FRAGDEL_NEED_CHLINK_LOCK  = 0x080,x080623,24779
struct _rct_module_table_t 725,27923
    app_pc_table_t *persisted_table;persisted_table726,27952
    app_pc_table_t *live_table;live_table727,27989
    app_pc live_min;732,28236
    app_pc live_max;733,28257
typedef struct _app_to_cache_t 797,30051
    app_pc app;798,30084
    cache_pc cache;803,30325
} app_to_cache_t;804,30345
#define NAME_KEY 807,30442
#define ENTRY_TYPE 808,30466
#define CUSTOM_FIELDS 810,30545
#define HASHTABLEX_HEADER 812,30592
#undef HASHTABLEX_HEADER814,30644
#define PROTECT_FRAGMENT_ENABLED(1101,40521
get_ibl_per_type_statistics(1118,41061
typedef struct _tracedump_file_header_t 1162,42361
    int version;1163,42403
    bool x64;1164,42483
    int linkcount_size;1165,42571
} tracedump_file_header_t;1166,42657
typedef struct _tracedump_trace_header_t 1169,42752
    int frag_id;1170,42795
    app_pc tag;1171,42856
    app_pc cache_start_pc;1172,42931
    int entry_offs;1173,43004
    int num_exits;1174,43074
    int code_size;1175,43141
    uint num_bbs;1176,43215
    bool x64;1177,43306
} tracedump_trace_header_t;1178,43381
#define BB_ORIGIN_HEADER_SIZE 1181,43464
#define SEPARATE_STUB_MAX_SIZE 1184,43592
typedef struct _tracedump_stub_data 1187,43694
    int cti_offs;1188,43732
    app_pc stub_pc;1190,43874
    app_pc target;1191,43934
    bool linked;1192,43982
    int stub_size;1193,44052
        uint count32;1196,44198
        uint64 count64;1197,44257
    } count;1198,44318
    byte stub_code[stub_code1205,44678
} tracedump_stub_data_t;1206,44719
#define STUB_DATA_FIXED_SIZE 1209,44821

globals.h,19419
#define _GLOBALS_H_ 43,2015
#define SN_INJ_BLKS 45,2038
#define SURYA_CODE_INJECT 46,2063
#define CAPTURE_CACHE_INFO 47,2109
#define CAPTURE_TOTAL_COMP_TIME 49,2320
#define SURYA_DEBUG 52,2504
#define SURYA_DCONTEXT2 53,2591
#define SURYA_INTERFACE2_APP_WAIT 54,2705
#define SURYA_INTERFACE3_APP_PARALLEL 55,2829
#define SURYA_CLR_STK_AT_PREQ 56,3010
int sn_subcat4_cnt;64,3199
int sn_build_fragment;65,3345
int sn_get_ibl_type;66,3531
unsigned int sn_ibl_routine_length;67,3632
int sn_new_fragment;69,3757
int sn_frag_cnt1;70,3862
int pk_is_affinity;71,3972
int sn_bb_cnt;72,4028
int sn_disassembly_bb_cnt;73,4061
int sn_start_trace,74,4106
int sn_start_trace,sn_end_trace,74,4106
int sn_start_trace,sn_end_trace,sn_extend_trace;74,4106
int sn_instr_cnt;75,4173
int sn_trace_cnt;76,4209
int sn_trace_blk_cnt,77,4245
int sn_trace_blk_cnt,sn_trace_instr_cnt;77,4245
int sn_total_instr_exec_cnt;78,4304
int sn_total_branch_instr_exec_cnt;79,4424
int sn_total_direct_branch_instr_exec_cnt;80,4575
unsigned long long preq_cnt;84,4811
unsigned long long etrans_cnt;86,5068
int etrans_instance_jaddr_cnt;87,5192
long long sn_fcache_entry_cnt;88,5377
long long total_comp_time;89,5408
int sn_dispatch_call_cnt;91,5574
int collect_code_cache_stats;93,5721
int collect_context_switch_stats;94,5810
int collect_compilation_time_stats;95,5907
int print_basic_block_info;96,6008
const char *sn_cache_name;sn_cache_name112,6705
const char *sn_cache_region;sn_cache_region113,6804
const char *sn_bb_cache_name;sn_bb_cache_name114,6912
long sn_total_shared_trace_cache_size_inc;115,7013
int sn_trace_fragment;116,7121
int sn_bb_fragment;117,7237
int free_list_slot_cnt;121,7489
int fifo_entry_cnt;122,7565
int sn_private_cache;123,7622
int sn_shared_cache;124,7709
int sn_shared_coarse_cache;125,7794
int sn_bb_private_cache;127,7888
int sn_bb_shared_cache;128,7975
int sn_bb_shared_coarse_cache;129,8060
int shared_coarse_cache_resize;131,8154
int shared_cache_resize;132,8259
int private_cache_resize;133,8350
int thread_flag;135,8445
int trans_flag;136,8533
int trans_flag_new;137,8628
int sn_signal_flag;138,8779
pthread_mutex_t trans_lock;139,8891
pthread_mutex_t trans_lock1;140,9183
pthread_cond_t trans_flag_cv;141,9376
pthread_cond_t trans_flag_cv1;142,9406
pthread_mutex_t compiler_create_lock,143,9437
pthread_mutex_t compiler_create_lock,compiler_create_lock1,143,9437
pthread_mutex_t compiler_create_lock,compiler_create_lock1,compiler_create_lock2,143,9437
pthread_mutex_t compiler_create_lock,compiler_create_lock1,compiler_create_lock2,etrans_lock,143,9437
pthread_mutex_t compiler_create_lock,compiler_create_lock1,compiler_create_lock2,etrans_lock,etrans_lock1,143,9437
pthread_mutex_t compiler_create_lock,compiler_create_lock1,compiler_create_lock2,etrans_lock,etrans_lock1,preq_lock,143,9437
pthread_mutex_t compiler_create_lock,compiler_create_lock1,compiler_create_lock2,etrans_lock,etrans_lock1,preq_lock,jaddr_list_lock,143,9437
pthread_mutex_t compiler_create_lock,compiler_create_lock1,compiler_create_lock2,etrans_lock,etrans_lock1,preq_lock,jaddr_list_lock,jaddr_list_lock1;143,9437
pthread_cond_t compiler_create_cond;144,9587
pthread_cond_t compiler_create_cond1,145,9624
pthread_cond_t compiler_create_cond1,compiler_create_cond2;145,9624
pthread_cond_t trans_flag_cv_ct1_ct2,146,9684
pthread_cond_t trans_flag_cv_ct1_ct2,trans_flag_cv_ct1_ct3;146,9684
pthread_cond_t trans_flag_cv_ct2_ct1,147,9744
pthread_cond_t trans_flag_cv_ct2_ct1,trans_flag_cv_ct3_ct1,147,9744
pthread_cond_t trans_flag_cv_ct2_ct1,trans_flag_cv_ct3_ct1,jaddr_lock_cv,147,9744
pthread_cond_t trans_flag_cv_ct2_ct1,trans_flag_cv_ct3_ct1,jaddr_lock_cv,jaddr_lock_cv1;147,9744
pthread_t tid,148,9833
pthread_t tid,tid1,148,9833
pthread_t tid,tid1,tid2;148,9833
pthread_attr_t attr,149,9931
pthread_attr_t attr,attr1,149,9931
pthread_attr_t attr,attr1,attr2;149,9931
int compiler1_thread_state,150,10033
int compiler1_thread_state,compiler2_thread_state,150,10033
int compiler1_thread_state,compiler2_thread_state,compiler3_thread_state,150,10033
int compiler1_thread_state,compiler2_thread_state,compiler3_thread_state,etrans_flag,150,10033
int compiler1_thread_state,compiler2_thread_state,compiler3_thread_state,etrans_flag,etrans_flag1,150,10033
int compiler1_thread_state,compiler2_thread_state,compiler3_thread_state,etrans_flag,etrans_flag1,have_jaddr_lock,150,10033
int compiler1_thread_state,compiler2_thread_state,compiler3_thread_state,etrans_flag,etrans_flag1,have_jaddr_lock,have_jaddr_lock1,150,10033
int compiler1_thread_state,compiler2_thread_state,compiler3_thread_state,etrans_flag,etrans_flag1,have_jaddr_lock,have_jaddr_lock1,waiting_on_jaddr_lock,150,10033
int compiler1_thread_state,compiler2_thread_state,compiler3_thread_state,etrans_flag,etrans_flag1,have_jaddr_lock,have_jaddr_lock1,waiting_on_jaddr_lock,waiting_on_jaddr_lock1;150,10033
int sn_dynamo_exited;152,10658
#define _WIN32_WINNT 166,11237
#  define WIN32_LEAN_AND_MEAN168,11323
app_pc prev_trace_end_pc;204,13169
app_pc curr_trace_end_pc;205,13261
app_pc curr_trace_start_pc;206,13364
#define DYNAMORIO_STATS_EXPORTS 210,13495
#    define DYNAMORIO_EXPORT 226,14100
#    define DYNAMORIO_EXPORT 233,14461
#    define DYNAMORIO_EXPORT 236,14618
#  define DR_API 240,14686
#  define DR_API 242,14726
#  define DR_UNS_API 245,14774
#  define DR_UNS_API 247,14808
# define NOINLINE 251,14866
# define NOINLINE 253,14911
#define INLINE_ONCE 256,14963
void *stackarr[stackarr263,15072
size_t stack_sz;264,15113
size_t stk_str_itr;265,15161
char **stk_fr_strs;stk_fr_strs266,15257
typedef unsigned long ulong;274,15447
typedef unsigned short ushort;275,15476
typedef HANDLE file_t;284,15874
#define INVALID_FILE 285,15897
#define STDOUT 286,15939
#define STDERR 287,15982
#define STDIN 288,16025
#define DIRSEP 289,16067
#define ALT_DIRSEP 290,16087
typedef unsigned long ulong;295,16187
#define DIRSEP 298,16262
#define ALT_DIRSEP 299,16281
pid_t tid_for_dcontext,302,16315
pid_t tid_for_dcontext,tid_for_dcontext1,302,16315
pid_t tid_for_dcontext,tid_for_dcontext1,tid_for_dcontext2;302,16315
file_t app_fp,303,16486
file_t app_fp,comp1_fp,303,16486
file_t app_fp,comp1_fp,comp2_fp;303,16486
#define INVALID_THREAD_ID 312,16961
typedef unsigned char uchar;314,16991
typedef byte * cache_pc;315,17020
static cache_pc sn_shared_coarse_cache_start_pc;320,17099
static cache_pc sn_shared_coarse_cache_end_pc;321,17199
static cache_pc sn_shared_coarse_cache_cur_pc;322,17295
static cache_pc sn_shared_coarse_cache_prev_end_pc;323,17395
static cache_pc sn_shared_coarse_cache_initial_start_pc;324,17505
static cache_pc sn_shared_coarse_cache_initial_end_pc;325,17621
static cache_pc sn_shared_coarse_cache_initial_cur_pc;326,17733
static cache_pc sn_shared_cache_start_pc;328,17850
static cache_pc sn_shared_cache_end_pc;329,17935
static cache_pc sn_shared_cache_cur_pc;330,18016
static cache_pc sn_shared_cache_prev_end_pc;331,18101
static cache_pc sn_shared_cache_initial_start_pc;332,18197
static cache_pc sn_shared_cache_initial_end_pc;333,18303
static cache_pc sn_shared_cache_initial_cur_pc;334,18405
static cache_pc sn_private_cache_start_pc;336,18512
static cache_pc sn_private_cache_end_pc;337,18606
static cache_pc sn_private_cache_cur_pc;338,18696
static cache_pc sn_private_cache_prev_end_pc;339,18790
static cache_pc sn_private_cache_initial_start_pc;340,18894
static cache_pc sn_private_cache_initial_end_pc;341,19009
static cache_pc sn_private_cache_initial_cur_pc;342,19123
static cache_pc sn_cache_start_pc;345,19243
static cache_pc sn_cache_end_pc;346,19340
static cache_pc sn_cache_cur_pc;347,19433
static cache_pc sn_bb_shared_coarse_cache_initial_start_pc;350,19532
static cache_pc sn_bb_shared_coarse_cache_initial_end_pc;351,19648
static cache_pc sn_bb_shared_coarse_cache_initial_cur_pc;352,19760
static cache_pc sn_bb_shared_cache_initial_start_pc;353,19872
static cache_pc sn_bb_shared_cache_initial_end_pc;354,19981
static cache_pc sn_bb_shared_cache_initial_cur_pc;355,20088
static cache_pc sn_bb_private_cache_initial_start_pc;356,20195
static cache_pc sn_bb_private_cache_initial_end_pc;357,20305
static cache_pc sn_bb_private_cache_initial_cur_pc;358,20413
static cache_pc sn_bb_cache_start_pc;359,20521
static cache_pc sn_bb_cache_end_pc;360,20615
static cache_pc sn_bb_cache_cur_pc;361,20707
#define SUCCESS 366,20826
#define FAILURE 367,20844
# define _IF_DGCDIAG(371,20945
# define IF_DGCDIAG_ELSE(372,20973
# define _IF_DGCDIAG(374,21012
# define IF_DGCDIAG_ELSE(375,21036
typedef struct _opnd_t opnd_t;417,22010
typedef struct _instr_t instr_t;419,22058
typedef struct _fragment_t fragment_t;422,22133
typedef struct _future_fragment_t future_fragment_t;424,22199
typedef struct _trace_t trace_t;426,22269
typedef struct _linkstub_t linkstub_t;428,22322
typedef struct _dcontext_t dcontext_t;430,22381
typedef struct vm_area_vector_t vm_area_vector_t;432,22445
typedef struct _coarse_info_t coarse_info_t;434,22518
typedef struct _coarse_freeze_info_t coarse_freeze_info_t;436,22593
dcontext_t *dcon_etrans,dcon_etrans440,22698
dcontext_t *dcon_etrans,*dcon_etrans1,dcon_etrans1440,22698
dcontext_t *dcon_etrans,*dcon_etrans1,*dcon_etrans2;dcon_etrans2440,22698
dcontext_t *dcon_app;dcon_app441,22819
dcontext_t *dcon_global;dcon_global442,22900
typedef struct _instr_list_t instrlist_t;448,23122
typedef struct _module_data_t module_data_t;449,23164
    uint year;458,23354
    uint month;459,23385
    uint day_of_week;460,23416
    uint day;461,23447
    uint hour;462,23478
    uint minute;463,23509
    uint second;464,23540
    uint milliseconds;465,23571
} dr_time_t;466,23602
typedef struct _rct_module_table_t rct_module_table_t;471,23726
    RCT_RAC 474,23798
    RCT_RCT,475,23815
    RCT_NUM_TYPES,476,23828
} rct_type_t;477,23847
typedef struct _thread_record_t 480,23869
    thread_id_t id;481,23903
    HANDLE handle;483,23956
    bool retakeover;484,24004
    process_id_t pid;486,24031
    bool execve;487,24075
    uint num;489,24150
    bool under_dynamo_control;490,24195
    dcontext_t *dcontext;dcontext491,24278
    struct _thread_record_t * next;492,24360
} thread_record_t;493,24396
# undef DYNAMORIO_EXPORT502,24737
# define DYNAMORIO_EXPORT 503,24762
typedef uint linkcount_type_t;508,24858
typedef uint64 linkcount_type_t;510,24895
typedef struct _client_to_do_list_t 527,25166
    instrlist_t *ilist;ilist530,25340
    app_pc tag;531,25364
    struct _client_to_do_list_t *next;next532,25380
} client_todo_list_t;533,25419
typedef struct _client_flush_req_t 536,25520
    app_pc start;537,25557
    size_t size;538,25575
    uint   flush_id;539,25592
    void (*flush_callback)flush_callback540,25661
    struct _client_flush_req_t *next;next541,25694
} client_flush_req_t;542,25732
#define IS_CLIENT_THREAD(546,25928
typedef struct _client_data_t 552,26167
    void *         user_field;554,26248
    client_todo_list_t * to_do;555,26279
    client_flush_req_t *flush_list;flush_list556,26311
    mutex_t            sideline_mutex;558,26371
    module_data_t      *no_delete_mod_data;no_delete_mod_data561,26504
    bool           is_client_thread;578,27636
    bool           client_thread_safe_for_synch;579,27709
    bool           suspendable;580,27758
    bool           left_unsuspended;581,27827
    uint           mutex_count;582,27907
    void           *client_grab_mutex;client_grab_mutex583,27974
    bool           is_translating;585,28027
    bool           in_pre_syscall;589,28152
    bool           in_post_syscall;590,28187
    bool           invoke_another_syscall;592,28270
    bool           mcontext_in_dcontext;594,28367
    bool           suspended;595,28408
    priv_mcontext_t *cur_mc;cur_mc596,28438
} client_data_t;597,28467
# define IS_CLIENT_THREAD(599,28490
typedef struct _pending_nudge_t 604,28641
    nudge_arg_t arg;605,28675
    struct _pending_nudge_t *next;next606,28696
} pending_nudge_t;607,28731
#define DYNAMORIO_STACK_SIZE 611,28805
# define standalone_library 631,29822
#define ALL_THREADS_HASH_BITS 690,31620
    WHERE_APP=767,34733
    WHERE_INTERP,768,34751
    WHERE_DISPATCH,769,34769
    WHERE_MONITOR,770,34789
    WHERE_SYSCALL_HANDLER,771,34808
    WHERE_SIGNAL_HANDLER,772,34835
    WHERE_TRAMPOLINE,773,34861
    WHERE_CONTEXT_SWITCH,774,34883
    WHERE_IBL,775,34909
    WHERE_FCACHE,776,34924
    WHERE_UNKNOWN,777,34942
    WHERE_HOTPATCH,779,34991
    WHERE_LAST781,35018
} where_am_i_t;782,35033
    READONLY=788,35169
    READONLY=false,788,35169
    WRITABLE=789,35190
    WRITABLE=true789,35190
    EXIT_REASON_SELFMOD 795,35355
    EXIT_REASON_FLOAT_PC_FNSAVE,797,35442
    EXIT_REASON_FLOAT_PC_FXSAVE,798,35475
    EXIT_REASON_FLOAT_PC_FXSAVE64,799,35508
    EXIT_REASON_FLOAT_PC_XSAVE,800,35543
    EXIT_REASON_FLOAT_PC_XSAVE64,801,35575
enum { MAX_NATIVE_RETSTACK 810,35942
typedef struct _retaddr_and_retloc_t 812,35978
    app_pc retaddr;813,36017
    app_pc retloc;814,36037
} retaddr_and_retloc_t;815,36056
typedef struct try_except_context_t 818,36123
    dr_jmp_buf_t context;824,36450
    struct try_except_context_t *prev_context;prev_context826,36477
} try_except_context_t;827,36524
typedef struct _try_except_t 833,36725
    try_except_context_t *try_except_state;try_except_state834,36756
    bool unwinding_exception;835,36829
} try_except_t;837,36973
    priv_mcontext_t mcontext;845,37182
    int            errno;847,37278
    bool at_syscall;849,37370
    ushort exit_reason;853,37655
    reg_t inline_spill_slots[inline_spill_slots858,37884
} unprotected_context_t;860,37949
struct _dcontext_t 872,38383
        unprotected_context_t *separate_upcontext;separate_upcontext892,39235
        unprotected_context_t upcontext;893,39286
    } upcontext;894,39327
    unprotected_context_t *upcontext_ptr;upcontext_ptr898,39507
    app_pc         next_tag;905,39801
    linkstub_t *     last_exit;907,39831
    byte *         dstack;908,39896
    bool           is_exiting;910,39967
    int            app_errno;914,40110
    void *         app_fls_data;915,40140
    void *         priv_fls_data;916,40173
    void *         app_nt_rpc;917,40207
    void *         priv_nt_rpc;918,40238
    void *         app_nls_cache;919,40270
    void *         priv_nls_cache;920,40304
    void *         app_stack_limit;922,40352
    byte *         teb_base;925,40464
    app_pc         sysenter_storage;931,40759
    bool           ignore_enterexit;934,40879
        app_pc src_tag;944,41234
        coarse_info_t *dir_exit;dir_exit945,41258
    } coarse_exit;946,41291
    bool           initialized;953,41538
    thread_id_t      owning_thread;954,41612
    process_id_t     owning_process;956,41660
    thread_record_t   *thread_record;thread_record958,41753
    where_am_i_t       whereami;959,41834
    void *         allocated_start;960,41911
    fragment_t *     last_fragment;961,41978
    int            sys_num;963,42068
    reg_t *        sys_param_base;965,42151
    reg_t          sys_param0;968,42260
    reg_t          sys_param1;969,42328
    reg_t          sys_param2;970,42396
    reg_t          sys_param3;971,42464
    reg_t          sys_param4;974,42551
    bool           sys_was_int;975,42625
    bool           sys_xbp;976,42712
    bool           mprot_multi_areas;978,42794
    bool           x86_mode;988,43165
    void *         link_field;992,43257
    void *         monitor_field;993,43288
    void *         fcache_field;994,43322
    void *         fragment_field;995,43355
    void *         heap_field;996,43390
    void *         vm_areas_field;997,43421
    void *         os_field;998,43456
    void *         synch_field;999,43485
    void *         signal_field;1001,43529
    void *         pcprofile_field;1002,43562
    bool           signals_pending;1003,43598
    void *         private_code;1005,43641
    cache_pc       trace_head_pc;1008,43751
    dcontext_t *next_saved;next_saved1014,43943
    dcontext_t *prev_unused;prev_unused1016,43979
    bool           valid;1018,44086
    reg_t          nonswapped_scratch;1024,44421
    app_pc         asynch_target;1031,44668
    app_pc         native_exec_postsyscall;1036,44826
    retaddr_and_retloc_t native_retstack[native_retstack1041,44994
    uint native_retstack_cur;1042,45057
    bool           alloc_no_reserve;1045,45115
    int num_calls;1049,45239
    int num_rets;1050,45258
    int call_depth;1051,45276
    int            call_depth;1055,45330
    void *         call_stack;1056,45361
    file_t                        logfile;1060,45413
    thread_local_statistics_t *     thread_stats;1061,45456
    bool                        expect_last_syscall_to_fail;1062,45506
    bool                        in_opnd_disassemble;1066,45702
    thread_locks_t *               thread_owned_locks;1069,45800
    thread_kstats_t *              thread_kstats;1072,45876
    uint64         cache_enter_time;1076,45955
    uint64         start_time;1077,45992
    fragment_t *     prev_fragment;1078,46066
    uint64         cache_frag_count;1080,46141
    uint64         cache_time[cache_time1081,46222
    uint64         cache_count[cache_count1082,46294
    client_data_t *client_data;client_data1087,46436
    bool           trace_sysenter_exit;1098,46997
    app_pc         forged_exception_addr;1102,47188
    bool           nudge_thread;1105,47289
    dr_jmp_buf_t   hotp_excpt_state;1106,47368
    try_except_t   try_except;1108,47453
    aslr_syscall_context_t aslr_context;1116,47805
    void           *nudge_target;nudge_target1127,48480
    bool           free_app_stack;1131,48641
    bool           nudge_terminate_process;1134,48731
    uint           nudge_exit_code;1135,48775
    local_state_t *local_state;local_state1141,48952
    app_pc win32_start_addr;1150,49358
    void *bb_build_info;bb_build_info1154,49479
    pending_nudge_t *nudge_pending;nudge_pending1160,49609
    fragment_t *interrupted_for_nudge;interrupted_for_nudge1162,49699
    int libc_errno;1165,49816
    bool post_syscall;1169,49864
#define GLOBAL_DCONTEXT 1177,50006
get_mcontext(1181,50178
    DUMP_XML=1193,50643
    DUMP_XML=true,1193,50643
    DUMP_NOT_XML=1194,50662
    DUMP_NOT_XML=false1194,50662
#undef snprintf 1204,51099
#define snprintf 1205,51138
#undef _snprintf1206,51168
#define _snprintf 1207,51185
#undef vsnprintf1208,51216
#define vsnprintf 1209,51233
#define snwprintf 1210,51265
#define _snwprintf 1211,51302
#define sscanf 1218,51679
#  define strcasecmp 1225,51786
#  define strncasecmp 1226,51816
#  define wcscasecmp 1227,51848
#  define printf 1231,51958
#  undef sprintf 1232,52003
#  define sprintf 1233,52043
#  define swprintf 1234,52089
#  undef vsprintf 1235,52136
#  define vsprintf 1236,52177
#  define __try 1237,52224
#  define mprotect 1240,52314
#  define mmap 1241,52365
#  define munmap 1242,52412
#  define getppid 1243,52461
#  define sched_yield 1244,52511
#  define dup 1245,52565
#  define sigaltstack 1246,52611
#  define setitimer 1247,52665
#  define _exit 1248,52717
#  define modify_ldt 1251,53007

hashtable.c,1867
hashtable_bits_given_entries(44,2002
#define NAME_KEY 64,2742
#define ENTRY_TYPE 65,2767
#define ENTRY_TAG(67,2849
#define ENTRY_EMPTY 68,2894
#define ENTRY_SENTINEL 70,3009
#define ENTRY_IS_EMPTY(71,3077
#define ENTRY_IS_SENTINEL(72,3125
#define ENTRY_IS_INVALID(73,3183
#define ENTRIES_ARE_EQUAL(74,3250
#define HASHTABLE_WHICH_HEAP(76,3382
#define HTLOCK_RANK 77,3431
#define HASHTABLE_SUPPORT_PERSISTENCE 78,3478
#define GENERIC_ENTRY_IS_REAL(82,3597
hashtable_generic_init_internal_custom(87,3748
hashtable_generic_resized_custom(92,3865
hashtable_generic_study_custom(101,4216
hashtable_generic_free_entry(108,4420
generic_hash_create(119,4823
generic_hash_clear(134,5511
generic_hash_destroy(140,5634
generic_hash_lookup(159,6271
generic_hash_add(168,6501
generic_hash_remove(179,6815
generic_hash_iterate_next(194,7333
generic_hash_iterate_remove(220,8057
#define NAME_KEY 247,9046
#define ENTRY_TYPE 248,9071
#define ENTRY_TAG(250,9153
#define ENTRY_EMPTY 251,9210
#define STRHASH_SENTINEL 253,9325
#define ENTRY_SENTINEL 254,9393
#define ENTRY_IS_EMPTY(255,9444
#define ENTRY_IS_SENTINEL(256,9492
#define ENTRY_IS_INVALID(257,9552
#define TAGS_ARE_EQUAL(258,9619
#define ENTRIES_ARE_EQUAL(260,9775
#define HASHTABLE_WHICH_HEAP(262,9924
#define HTLOCK_RANK 263,9973
#define HASHTABLE_SUPPORT_PERSISTENCE 264,10020
#define STRHASH_CASE_INSENSITIVE 267,10093
strhash_key_cmp(270,10176
#define STRHASH_ENTRY_IS_REAL(280,10478
hashtable_strhash_init_internal_custom(285,10614
hashtable_strhash_resized_custom(290,10731
hashtable_strhash_study_custom(299,11084
hashtable_strhash_free_entry(306,11287
strhash_hash_create(317,11690
strhash_hash_clear(333,12467
strhash_hash_destroy(339,12590
strhash_hash_lookup(358,13227
strhash_hash_add(367,13470
strhash_hash_remove(378,13785
print_hashtable_stats(398,14422

hashtable.h,2101
#define _HASHTABLE_H_ 44,1899
#define HASHTABLE_SHARED 51,2044
#define HASHTABLE_ENTRY_SHARED 56,2240
#define HASHTABLE_LOCKLESS_ACCESS 58,2358
#define HASHTABLE_NOT_PRIMARY_STORAGE 60,2470
#define HASHTABLE_PERSISTENT 62,2572
#define HASHTABLE_USE_ENTRY_STATS 64,2673
#define HASHTABLE_RELAX_CLUSTER_CHECKS 66,2796
#define HASHTABLE_READ_ONLY 70,2971
#define HASHTABLE_ALIGN_TABLE 72,3067
#define HASHTABLE_CUSTOM_FLAGS_START 77,3250
#define HASHTABLE_COPY_IGNORE_FLAGS 80,3341
#define TABLE_NEEDS_LOCK(86,3556
#define ASSERT_TABLE_SYNCHRONIZED(91,3797
#define TABLE_RWLOCK(96,4120
#define TABLE_MEMOP(101,4271
#define TABLE_TYPE_MEMOP(105,4404
#define HASH_INDEX_WRAPAROUND(113,4738
# define INIT_HASHTABLE_STATS(118,4936
# define HTABLE_STAT_INC(122,5149
# define HTABLE_STAT_INC(124,5232
typedef struct _hashtable_statistics_t 129,5318
    uint hit_stat;130,5359
    uint collision_hit_stat;131,5419
    uint collision_stat;132,5491
    uint miss_stat;133,5565
    uint overwrap_stat;134,5642
    uint race_condition_stat;135,5728
    uint unlinked_count_stat;136,5817
    uint ib_stay_on_trace_stat;143,6141
    uint ib_stay_on_trace_stat_last;149,6489
    uint ib_stay_on_trace_stat_ovfl;150,6543
    uint ib_trace_last_ibl_exit;152,6632
    uint ib_trace_last_ibl_speculate_success;158,6891
} hashtable_statistics_t;160,7037
typedef struct _fragment_stat_entry_t 163,7140
    uint    hits;165,7234
    uint    age;167,7318
} fragment_stat_entry_t;168,7396
typedef struct _generic_entry_t 188,8106
    ptr_uint_t key;189,8140
    void *payload;payload190,8195
} generic_entry_t;191,8214
#define NAME_KEY 194,8307
#define ENTRY_TYPE 195,8332
#define CUSTOM_FIELDS 197,8414
#define HASHTABLEX_HEADER 199,8476
#undef HASHTABLEX_HEADER201,8528
typedef struct _strhash_entry_t 240,9856
    const char *key;key244,10011
    void *payload;payload245,10032
} strhash_entry_t;246,10051
#define NAME_KEY 248,10071
#define ENTRY_TYPE 249,10096
#define CUSTOM_FIELDS 251,10178
#define HASHTABLEX_HEADER 253,10240
#undef HASHTABLEX_HEADER255,10292

hashtablex.h,2001
#define EXPANDKEY(151,6018
#define HTNAME(152,6067
#define KEY_STRING 153,6124
#define ENTRY_IS_REAL(155,6164
# define _IFLOOKUP(159,6299
# define IFLOOKUP_ELSE(160,6325
# define _IFLOOKUP(162,6363
# define IFLOOKUP_ELSE(163,6399
# define TAGS_ARE_EQUAL(167,6462
typedef struct HTNAME(_,NAME_KEY,_table_t)176,6717
HTNAME(309,12182
HTNAME(326,12750
HTNAME(336,13064
HTNAME(531,21906
HTNAME(564,23283
HTNAME(576,23711
HTNAME(598,24549
HTNAME(643,26374
HTNAME(709,29484
HTNAME(771,31745
HTNAME(787,32271
HTNAME(939,39504
HTNAME(1230,52556
HTNAME(1254,53528
HTNAME(1276,54545
HTNAME(1364,58622
HTNAME(1388,59593
HTNAME(1409,60290
HTNAME(1445,61575
HTNAME(1494,63242
HTNAME(1552,65648
HTNAME(1636,68943
HTNAME(1685,70811
HTNAME(1719,72029
HTNAME(1871,77797
HTNAME(1966,81612
HTNAME(1981,82108
HTNAME(2041,84532
HTNAME(2059,85328
HTNAME(2079,85925
HTNAME(2120,87450
HTNAME(2149,88573
HTNAME(2183,90410
HTNAME(2214,91819
#undef NAME_KEY2253,93465
#undef ENTRY_TYPE2254,93481
#undef AUX_ENTRY_TYPE2255,93499
#undef CUSTOM_FIELDS2256,93521
#undef ENTRY_TAG2258,93543
#undef ENTRY_IS_EMPTY2259,93560
#undef ENTRY_IS_SENTINEL2260,93582
#undef ENTRY_IS_INVALID2261,93607
#undef ENTRIES_ARE_EQUAL2262,93631
#undef ENTRY_EMPTY2263,93656
#undef ENTRY_SENTINEL2264,93675
#undef TAGS_ARE_EQUAL2265,93697
#undef AUX_ENTRY_TAG2267,93720
#undef AUX_ENTRY_IS_EMPTY2268,93741
#undef AUX_ENTRY_IS_SENTINEL2269,93767
#undef AUX_ENTRY_IS_INVALID2270,93796
#undef AUX_PAYLOAD_IS_INVALID2271,93824
#undef AUX_ENTRY_SET_TO_SENTINEL2272,93854
#undef AUX_ENTRY_IS_SET_TO_ENTRY2273,93887
#undef AUX_ENTRY_SET_TO_ENTRY2274,93920
#undef AUX_ENTRY_FORMAT_STR2275,93950
#undef AUX_ENTRY_FORMAT_ARGS2276,93978
#undef HASHTABLE_WHICH_HEAP2278,94008
#undef HASHTABLE_USE_LOOKUPTABLE2279,94036
#undef HASHTABLE_ENTRY_STATS2280,94069
#undef HASHTABLE_SUPPORT_PERSISTENCE2281,94098
#undef HTLOCK_RANK2282,94135
#undef _IFLOOKUP2284,94155
#undef IFLOOKUP_ELSE2285,94172

heap.c,10059
# define CHKLVL_MEMFILL 62,2473
static const uint BLOCK_SIZES[BLOCK_SIZES101,4441
#define BLOCK_TYPES 137,6292
#define HEADER_SIZE 155,7164
#define VARIABLE_SIZE(157,7236
#define MEMSET_HEADER(158,7292
#define GET_VARIABLE_ALLOCATION_SIZE(159,7367
#define HEAP_UNIT_MIN_SIZE 187,8908
#define HEAP_UNIT_MAX_SIZE 188,8975
#define GLOBAL_UNIT_MIN_SIZE 189,9038
#define GUARD_PAGE_ADJUSTMENT 191,9115
#define UNITROOM(194,9231
#define UNIT_RESERVED_ROOM(195,9288
#define UNIT_COMMIT_SIZE(199,9507
#define UNIT_RESERVED_SIZE(200,9571
#define UNIT_ALLOC_START(201,9647
#define UNIT_GET_START_PC(202,9711
#define UNIT_COMMIT_END(203,9787
#define UNIT_RESERVED_END(204,9826
#define UNITALLOC(207,9949
#define UNITOVERHEAD 211,10131
#define MAXROOM 214,10261
#define MAX_VALID_HEAP_ALLOCATION 217,10391
typedef struct _heap_unit_t 222,10542
    heap_pc start_pc;223,10572
    heap_pc end_pc;224,10638
    heap_pc cur_pc;225,10713
    heap_pc reserved_end_pc;226,10793
    bool in_vmarea_list;227,10883
    int      id;229,10975
    struct _heap_unit_t *next_local;next_local231,11033
    struct _heap_unit_t *next_global;next_global232,11105
    struct _heap_unit_t *prev_global;prev_global233,11172
} heap_unit_t;234,11239
typedef struct _heap_acct_t 237,11278
    size_t alloc_reuse[alloc_reuse238,11308
    size_t alloc_new[alloc_new239,11343
    size_t cur_usage[cur_usage240,11376
    size_t max_usage[max_usage241,11409
    size_t max_single[max_single242,11442
    uint num_alloc[num_alloc243,11476
} heap_acct_t;244,11507
typedef struct _thread_units_t 252,11748
    heap_unit_t *top_unit;top_unit253,11781
    heap_unit_t *cur_unit;cur_unit254,11849
    heap_pc free_list[free_list255,11908
    int num_units;257,11957
    dcontext_t *dcontext;dcontext259,12013
    bool writable;260,12068
    heap_acct_t acct;262,12156
} thread_units_t;264,12185
typedef struct _thread_heap_t 267,12232
    thread_units_t *local_heap;local_heap268,12264
    thread_units_t *nonpersistent_heap;nonpersistent_heap269,12296
} thread_heap_t;270,12336
typedef struct _heap_t 275,12473
    heap_unit_t *units;units276,12498
    heap_unit_t *dead;dead277,12560
    uint num_dead;281,12792
} heap_t;282,12811
static bool heap_exiting 285,12868
vm_area_vector_t *landing_pad_areas;landing_pad_areas317,14363
static app_pc lpad_temp_writable_start;320,14487
static size_t lpad_temp_writable_size;321,14527
safe_to_allocate_or_free_heap_units(329,14739
const char * whichheap_name[whichheap_name342,15133
# define ACCOUNT_FOR_ALLOC_HELPER(387,16368
# define ACCOUNT_FOR_ALLOC(397,16968
# define ACCOUNT_FOR_FREE(404,17326
# define ACCOUNT_FOR_ALLOC(411,17556
# define ACCOUNT_FOR_FREE(412,17618
typedef byte *vm_addr_t;vm_addr_t415,17669
static byte *heap_allowable_region_start heap_allowable_region_start419,17787
static byte *heap_allowable_region_end heap_allowable_region_end420,17850
request_region_be_heap_reachable(436,18632
vmcode_get_reachable_region(509,22274
    OOM_INIT 537,23539
    OOM_INIT    = 0x1,x1537,23539
    OOM_RESERVE 541,23671
    OOM_RESERVE = 0x2,x2541,23671
    OOM_COMMIT 550,24096
    OOM_COMMIT  = 0x4,x4550,24096
    OOM_EXTEND 559,24514
    OOM_EXTEND  = 0x8,x8559,24514
} oom_source_t;560,24537
enum {VMM_BLOCK_SIZE VMM_BLOCK_SIZE566,24706
enum {VMM_BLOCK_SIZE = IF_WINDOWS_ELSE(566,24706
    MAX_VMM_HEAP_UNIT_SIZE 582,25348
    MIN_VMM_HEAP_UNIT_SIZE 587,25590
    MIN_VMM_HEAP_UNIT_SIZE = VMM_BLOCK_SIZE 587,25590
    vm_addr_t start_addr;591,25656
    vm_addr_t end_addr;592,25717
    vm_addr_t alloc_start;593,25803
    size_t    alloc_size;594,25875
    uint    num_blocks;598,26061
    mutex_t   lock;600,26145
    uint    num_free_blocks;604,26458
} vm_heap_t;612,26943
typedef struct _heap_management_t 618,27131
    vm_heap_t vmheap;622,27332
    heap_t heap;623,27354
    thread_units_t global_units;625,27402
    thread_units_t global_nonpersistent_units;626,27435
    bool global_heap_writable;627,27482
    thread_units_t global_unprotected_units;628,27513
} heap_management_t;629,27558
static heap_management_t temp_heapmgt;634,27718
static heap_management_t *heapmgt heapmgt635,27757
static bool vmm_heap_exited 637,27843
vmm_addr_to_block(643,28082
vmm_block_to_addr(651,28296
vmm_in_same_block(658,28473
vmm_dump_map(666,28679
#define VMM_DUMP_MAP_LOG(683,29289
print_vmm_heap_data(702,30030
vmm_heap_initialize_unusable(713,30362
vmm_heap_unit_init(721,30516
vmm_heap_unit_exit(835,35397
vmm_is_reserved_unit(873,36811
is_vmm_reserved_address(890,37452
get_vmm_heap_bounds(905,37992
vmcode_get_start(917,38368
vmcode_get_end(925,38483
vmcode_unreachable_pc(933,38594
rel32_reachable_from_vmcode(944,38813
vmm_heap_reserve_blocks(965,39594
vmm_heap_free_blocks(1015,41175
at_reset_at_vmm_limit(1047,42209
vmm_heap_reserve(1060,42708
vmm_heap_commit(1171,47862
END_DATA_SECTION(1265,52920
vmm_heap_decommit(1305,54604
vmm_heap_alloc(1318,55106
vmm_heap_init_constraints(1331,55541
vmm_heap_init(1367,57170
vmm_heap_exit(1376,57373
heap_check_option_compatibility(1441,60354
heap_reset_init(1479,62103
heap_init(1489,62325
really_free_unit(1551,64985
heap_reset_free(1564,65518
heap_exit(1605,66860
heap_low_on_memory(1674,69172
get_oom_source_name(1720,71009
silent_oom_for_process(1739,71480
report_low_on_memory(1764,72345
account_for_memory(1804,74307
update_dynamo_areas_on_release(1834,75500
lockwise_safe_to_allocate_memory(1858,76452
get_real_memory(1872,76935
release_memory_and_update_areas(1914,78632
release_real_memory(1935,79553
extend_commitment(1950,80010
get_guarded_real_memory(1977,81179
release_guarded_real_memory(2033,83475
heap_mmap_ex(2060,84323
heap_mmap_reserve(2089,85563
heap_mmap_extend_commitment(2100,85942
heap_mmap_retract_commitment(2113,86355
heap_mmap_reserve_post_stack(2126,86827
heap_munmap_post_stack(2253,92680
heap_mmap(2289,94283
heap_munmap_ex(2296,94391
heap_munmap(2317,95089
# define STACK_GUARD_PAGES 2323,95198
stack_alloc(2331,95410
stack_free(2369,96643
is_stack_overflow(2386,97153
map_file(2405,97822
unmap_file(2422,98417
heap_vmareas_synch_units(2459,100058
common_global_heap_alloc(2583,106325
common_global_heap_free(2605,107084
global_heap_alloc(2631,107937
global_heap_free(2640,108207
global_heap_realloc(2653,108681
heap_create_unit(2668,109258
heap_free_unit(2758,112643
find_heap_unit(2851,116896
threadunits_init(2872,117881
#define MAX_5_DIGIT 2891,118396
print_tu_heap_statistics(2893,118434
print_heap_statistics(2923,119705
add_heapacct_to_global_stats(2958,121225
threadunits_exit(2982,122270
heap_thread_reset_init(3079,126264
heap_thread_init(3089,126556
heap_thread_reset_free(3106,127246
heap_thread_exit(3121,127740
print_free_list(3137,128355
common_heap_extend_commitment(3160,129023
heap_unit_extend_commitment(3200,130860
common_heap_alloc(3211,131217
heap_alloc(3519,145641
common_heap_free(3535,146139
heap_free(3694,152994
bool local_heap_protected(3707,153397
protect_local_units_helper(3715,153658
protect_threadunits(3728,154045
protect_local_heap(3738,154308
protect_global_heap(3750,154719
global_unprotected_heap_alloc(3793,156103
global_unprotected_heap_free(3803,156448
nonpersistent_heap_alloc(3811,156746
nonpersistent_heap_free(3832,157495
typedef struct _special_heap_unit_t 3865,158746
    heap_pc alloc_pc;3866,158784
    heap_pc start_pc;3867,158847
    heap_pc end_pc;3868,158924
    heap_pc cur_pc;3869,158995
    heap_pc reserved_end_pc;3870,159071
    profile_t *profile;profile3872,159182
    int      id;3875,159226
    struct _special_heap_unit_t *next;next3877,159284
} special_heap_unit_t;3878,159323
#define SPECIAL_UNIT_COMMIT_SIZE(3880,159347
#define SPECIAL_UNIT_RESERVED_SIZE(3881,159413
#define SPECIAL_UNIT_HEADER_INLINE(3882,159490
typedef struct _cfree_header 3885,159613
    struct _cfree_header *next_cfree;next_cfree3886,159644
    uint count;3887,159682
} cfree_header_t;3888,159698
typedef struct _special_units_t 3890,159717
    special_heap_unit_t *top_unit;top_unit3891,159751
    special_heap_unit_t *cur_unit;cur_unit3892,159827
    uint block_size;3893,159894
    heap_pc free_list;3894,159949
    cfree_header_t *cfree_list;cfree_list3895,159972
    int num_units;3897,160017
    bool writable:writable3899,160076
    bool executable:executable3900,160142
    bool use_lock:use_lock3904,160303
    bool in_iterator:in_iterator3905,160324
    bool persistent:persistent3906,160348
    mutex_t lock;3907,160371
    vm_area_vector_t *heap_areas;heap_areas3912,160526
    void *lookup_retval;lookup_retval3913,160560
    struct _special_units_t *next;next3916,160611
    heap_acct_t acct;3920,160760
} special_units_t;3922,160789
get_special_heap_header_size(3938,161479
static inline bool special_heap_profile_enabled(3945,161587
get_prot(3954,161812
special_unit_extend_commitment(3962,161983
special_heap_create_unit(3976,162571
special_heap_init_internal(4065,166117
special_heap_init(4134,168986
special_heap_pclookup_init(4143,169387
special_heap_set_vector_data(4154,169933
special_heap_set_unit_end(4174,170669
special_heap_profile_stop(4188,171067
special_heap_profile_exit(4207,171626
special_heap_exit(4229,172296
special_heap_calloc(4305,175173
special_heap_alloc(4410,179434
special_heap_cfree(4416,179522
special_heap_free(4447,180522
special_heap_iterator_start(4465,181349
special_heap_iterator_hasnext(4477,181653
special_heap_iterator_next(4494,182158
special_heap_iterator_stop(4516,182854
special_heap_delete_lock(4537,183557
    byte *start;start4587,185775
    byte *end;end4588,185830
    byte *commit_end;commit_end4589,185883
    byte *cur_ptr;cur_ptr4590,185960
    bool allocated;4591,186037
} landing_pad_area_t;4592,186105
alloc_landing_pad(4604,186597
trim_landing_pad(4805,196678
landing_pads_to_executable_areas(4827,197498
release_landing_pad_mem(4878,199441

heap.h,2821
#define _HEAP_H_ 43,1966
    ACCT_FRAGMENT=47,2024
    ACCT_COARSE_LINK,48,2045
    ACCT_FRAG_FUTURE,49,2067
    ACCT_FRAG_TABLE,50,2089
    ACCT_IBLTABLE,51,2110
    ACCT_TRACE,52,2129
    ACCT_FCACHE_EMPTY,53,2145
    ACCT_VMAREA_MULTI,54,2168
    ACCT_IR,55,2191
    ACCT_AFTER_CALL,56,2204
    ACCT_VMAREAS,57,2225
    ACCT_SYMBOLS,58,2243
    ACCT_SIDELINE,60,2278
    ACCT_THCOUNTER,62,2305
    ACCT_TOMBSTONE,63,2325
    ACCT_HOT_PATCHING,66,2441
    ACCT_THREAD_MGT,67,2464
    ACCT_MEM_MGT,68,2485
    ACCT_STATS,69,2503
    ACCT_SPECIAL,70,2519
    ACCT_CLIENT,72,2562
    ACCT_LIBDUP,74,2587
    ACCT_CLEANCALL,75,2652
    ACCT_OTHER,77,2746
    ACCT_LAST78,2762
} which_heap_t;79,2776
# define HEAPACCT(81,2793
# define IF_HEAPACCT_ELSE(82,2818
# define HEAPACCT(84,2858
# define IF_HEAPACCT_ELSE(85,2879
    MAP_FILE_COPY_ON_WRITE 89,2936
    MAP_FILE_COPY_ON_WRITE   = 0x0001,x000189,2936
    MAP_FILE_IMAGE 90,2975
    MAP_FILE_IMAGE           = 0x0002,x000290,2975
    MAP_FILE_FIXED 91,3033
    MAP_FILE_FIXED           = 0x0004,x000491,3033
    MAP_FILE_REACHABLE 92,3089
    MAP_FILE_REACHABLE       = 0x0008,x000892,3089
} map_flags_t;93,3172
typedef byte * heap_pc;95,3188
#define HEAP_ALIGNMENT 96,3212
#define UNPROTECTED_LOCAL_ALLOC(213,7559
#define UNPROTECTED_LOCAL_FREE(214,7643
#define UNPROTECTED_GLOBAL_ALLOC 215,7725
#define UNPROTECTED_GLOBAL_FREE 216,7788
#define FRAGMENT_ALLOC_DC(219,7927
#define FRAGMENT_TABLE_ALLOC_DC(220,8018
#define PROTECTED 226,8265
#define UNPROTECTED 227,8288
#define HEAP_ARRAY_ALLOC(228,8314
#define HEAP_TYPE_ALLOC(232,8549
#define HEAP_ARRAY_ALLOC_MEMSET(234,8655
#define HEAP_ARRAY_FREE(238,8836
#define HEAP_TYPE_FREE(242,9073
#define NONPERSISTENT_HEAP_ARRAY_ALLOC(246,9236
#define NONPERSISTENT_HEAP_TYPE_ALLOC(248,9377
#define NONPERSISTENT_HEAP_ARRAY_FREE(250,9489
#define NONPERSISTENT_HEAP_TYPE_FREE(252,9632
typedef struct _special_heap_iterator 268,10308
    void *heap;heap270,10412
    void *next_unit;next_unit271,10428
} special_heap_iterator_t;272,10449
# define HEAP_TO_BYTE_EX(315,12107
# define HEAP_TO_BYTE(316,12145
# define HEAP_TO_UINT_EX(317,12193
# define HEAP_TO_UINT(318,12246
#  define HEAP_TO_PTR_UINT_EX(320,12306
#  define HEAP_TO_PTR_UINT_EX(322,12391
# define HEAP_TO_PTR_UINT(324,12457
# define HEAP_UNALLOCATED 326,12514
# define HEAP_UNALLOCATED_BYTE 327,12543
# define HEAP_UNALLOCATED_UINT 328,12605
# define HEAP_UNALLOCATED_PTR_UINT 329,12667
# define HEAP_ALLOCATED 331,12738
# define HEAP_ALLOCATED_BYTE 332,12765
# define HEAP_ALLOCATED_UINT 333,12823
# define HEAP_ALLOCATED_PTR_UINT 334,12881
# define HEAP_PAD 336,12948
# define HEAP_PAD_BYTE 337,12969
# define HEAP_PAD_UINT 338,13015
# define HEAP_PAD_PTR_UINT 339,13061

hotpatch.c,11551
#define HOTP_ONLY_GBOP_PRECEDENCE 78,2994
    MIN_HOTP_INTERFACE_VERSION 82,3113
    MIN_HOTP_INTERFACE_VERSION = HOTP_INTERFACE_VERSION,82,3113
    MAX_HOTP_INTERFACE_VERSION 83,3170
    MAX_HOTP_INTERFACE_VERSION = HOTP_INTERFACE_VERSION,83,3170
    MIN_NUM_VULNERABILITIES 84,3227
    MAX_NUM_VULNERABILITIES 85,3260
    MIN_VULNERABILITY_ID_LENGTH 86,3297
    MAX_VULNERABILITY_ID_LENGTH 87,3334
    MIN_POLICY_ID_LENGTH 88,3372
    MIN_POLICY_ID_LENGTH = HOTP_POLICY_ID_LENGTH,88,3372
    MAX_POLICY_ID_LENGTH 89,3422
    MAX_POLICY_ID_LENGTH = HOTP_POLICY_ID_LENGTH,89,3422
    MIN_POLICY_VERSION 90,3472
    MAX_POLICY_VERSION 91,3500
    MIN_NUM_SETS 92,3532
    MAX_NUM_SETS 93,3554
    MIN_NUM_MODULES 94,3580
    MAX_NUM_MODULES 95,3605
    MAX_MODULE_SIZE 98,3700
    MIN_PE_TIMESTAMP 106,4124
    MAX_PE_TIMESTAMP 107,4150
    MAX_PE_TIMESTAMP = UINT_MAX,107,4150
    PE_TIMESTAMP_IGNORE 108,4183
    PE_TIMESTAMP_IGNORE = UINT_MAX,108,4183
    PE_TIMESTAMP_UNAVAILABLE 109,4219
    PE_TIMESTAMP_UNAVAILABLE = PE_TIMESTAMP_IGNORE 109,4219
    MIN_PE_CHECKSUM 111,4276
    MAX_PE_CHECKSUM 112,4301
    MAX_PE_CHECKSUM = UINT_MAX,112,4301
    PE_CHECKSUM_IGNORE 113,4333
    PE_CHECKSUM_IGNORE = UINT_MAX,113,4333
    PE_CHECKSUM_UNAVAILABLE 114,4368
    PE_CHECKSUM_UNAVAILABLE = PE_CHECKSUM_IGNORE 114,4368
    MIN_PE_IMAGE_SIZE 116,4423
    MAX_PE_IMAGE_SIZE 117,4450
    MAX_PE_IMAGE_SIZE = UINT_MAX,117,4450
    PE_IMAGE_SIZE_IGNORE 118,4484
    PE_IMAGE_SIZE_IGNORE = UINT_MAX,118,4484
    PE_IMAGE_SIZE_UNAVAILABLE 119,4521
    PE_IMAGE_SIZE_UNAVAILABLE = PE_IMAGE_SIZE_IGNORE 119,4521
    MIN_PE_CODE_SIZE 121,4580
    MAX_PE_CODE_SIZE 122,4648
    MAX_PE_CODE_SIZE = UINT_MAX,122,4648
    PE_CODE_SIZE_IGNORE 123,4681
    PE_CODE_SIZE_IGNORE = UINT_MAX,123,4681
    PE_CODE_SIZE_UNAVAILABLE 124,4717
    PE_CODE_SIZE_UNAVAILABLE = PE_CODE_SIZE_IGNORE 124,4717
    MIN_PE_FILE_VERSION 126,4774
    MAX_PE_FILE_VERSION 127,4803
    MAX_PE_FILE_VERSION = ULLONG_MAX,127,4803
    PE_FILE_VERSION_IGNORE 128,4841
    PE_FILE_VERSION_IGNORE = IF_WINDOWS_ELSE(128,4841
    PE_FILE_VERSION_IGNORE = IF_WINDOWS_ELSE(MODULE_FILE_VERSION_INVALID,128,4841
    PE_FILE_VERSION_IGNORE = IF_WINDOWS_ELSE(MODULE_FILE_VERSION_INVALID, ULLONG_MAX)128,4841
    PE_FILE_VERSION_UNAVAILABLE 129,4928
    PE_FILE_VERSION_UNAVAILABLE = PE_FILE_VERSION_IGNORE 129,4928
    MIN_NUM_PATCH_POINT_HASHES 131,4991
    MAX_NUM_PATCH_POINT_HASHES 132,5027
    MIN_HASH_START_OFFSET 133,5067
    MAX_HASH_START_OFFSET 134,5098
    MAX_HASH_START_OFFSET = MAX_MODULE_SIZE,134,5098
    MIN_HASH_LENGTH 135,5178
    MAX_HASH_LENGTH 136,5203
    MAX_HASH_LENGTH = MAX_MODULE_SIZE,136,5203
    MIN_HASH_VALUE 137,5283
    MAX_HASH_VALUE 138,5307
    MAX_HASH_VALUE = UINT_MAX,138,5307
    MIN_NUM_PATCH_POINTS 140,5339
    MIN_NUM_PATCH_POINTS = MIN_NUM_PATCH_POINT_HASHES,140,5339
    MAX_NUM_PATCH_POINTS 141,5394
    MAX_NUM_PATCH_POINTS = MAX_NUM_PATCH_POINT_HASHES,141,5394
    MIN_PATCH_OFFSET 142,5449
    MAX_PATCH_OFFSET 143,5475
    MAX_PATCH_OFFSET = MAX_MODULE_SIZE,143,5475
    MIN_PATCH_PRECEDENCE 144,5555
    MAX_PATCH_PRECEDENCE 145,5585
    MIN_DETECTOR_OFFSET 146,5619
    MAX_DETECTOR_OFFSET 152,5950
    MIN_PROTECTOR_OFFSET 154,6070
    MAX_PROTECTOR_OFFSET 155,6100
    MAX_PROTECTOR_OFFSET = MAX_DETECTOR_OFFSET,155,6100
    MIN_RETURN_ADDR 159,6276
    MAX_RETURN_ADDR 164,6512
    MAX_RETURN_ADDR = MAX_PATCH_OFFSET,164,6512
    MIN_MODE 165,6552
    MIN_MODE = HOTP_MODE_OFF,165,6552
    MAX_MODE 166,6582
    MAX_MODE = HOTP_MODE_PROTECT,166,6582
    MAX_POLICY_FILE_SIZE 172,6905
#define PE_NAME_IGNORE 175,6947
#define PE_NAME_UNAVAILABLE 176,7021
    const char *pe_name;pe_name184,7314
    uint pe_checksum;189,7494
    uint pe_timestamp;190,7516
    size_t pe_image_size;191,7539
    size_t pe_code_size;210,8671
    uint64 pe_file_version;215,8834
} hotp_module_sig_t;216,8862
    app_rva_t offset;235,9801
    app_rva_t detector_fn;242,10133
    app_rva_t protector_fn;244,10267
    app_rva_t return_addr;245,10295
    uint precedence;251,10525
    byte *trampoline;trampoline264,11093
    byte *app_code_copy;app_code_copy270,11353
    byte *tramp_exit_tgt;tramp_exit_tgt277,11686
} hotp_patch_point_t;278,11712
#define HOTP_ONLY_TRAMPOLINE_SIZE 283,11882
#define HOTP_ONLY_NUM_THREADS_AT_INIT 284,11920
#define HOTP_ONLY_PATCH_REGION_SIZE 300,12699
#define HOTP_CACHE_PATCH_REGION_SIZE 301,12743
#define HOTP_BAD_PATCH_REGION_SIZE 302,12787
#define HOTP_PATCH_REGION_SIZE 303,12832
    app_rva_t start;319,13586
    uint len;320,13607
    uint hash_value;321,13685
} hotp_patch_point_hash_t;322,13706
    hotp_module_sig_t sig;325,13751
    uint num_patch_points;326,13778
    hotp_patch_point_t *patch_points;patch_points327,13805
    uint num_patch_point_hashes;328,13843
    hotp_patch_point_hash_t *hashes;hashes329,13876
    bool matched;332,13985
    app_pc base_address;333,14063
} hotp_module_t;334,14088
    uint num_modules;337,14123
    hotp_module_t *modules;modules338,14145
} hotp_set_t;339,14173
    hotp_exec_status_t exec_status;346,14411
    hotp_inject_status_t *inject_status;inject_status349,14522
    uint64 num_detected;355,14737
    uint64 num_not_detected;356,14762
    uint64 num_detector_error;357,14791
    uint64 num_protected;358,14822
    uint64 num_not_protected;359,14848
    uint64 num_kill_thread;360,14878
    uint64 num_kill_process;361,14906
    uint64 num_raise_exception;362,14935
    uint64 num_change_control_flow;363,14967
    uint64 num_protector_error;364,15003
    uint64 num_aborted;365,15035
} hotp_vul_info_t;366,15059
    HOTP_TYPE_HOT_PATCH 378,15544
    HOTP_TYPE_HOT_PATCH = 0x1,x1378,15544
    HOTP_TYPE_GBOP_HOOK 390,16200
    HOTP_TYPE_GBOP_HOOK = 0x2,x2390,16200
    HOTP_TYPE_PROBE 395,16346
    HOTP_TYPE_PROBE = 0x4x4395,16346
} hotp_type_t;396,16372
    const char *vul_id;vul_id405,16737
    const char *policy_id;policy_id413,17062
    uint policy_version;414,17089
    const char *hotp_dll;hotp_dll415,17114
    const char *hotp_dll_hash;hotp_dll_hash416,17140
    hotp_policy_mode_t mode;417,17171
    uint num_sets;419,17201
    hotp_set_t *sets;sets420,17220
    hotp_vul_info_t *info;info423,17314
    app_pc  hotp_dll_base;424,17341
    hotp_type_t type;440,18182
    unsigned int id;446,18426
} hotp_vul_t;447,18447
typedef struct hotp_vul_tab_t 458,19069
    hotp_vul_t *vul_tab;vul_tab459,19101
    uint num_vuls;460,19126
    struct hotp_vul_tab_t *next;next461,19145
} hotp_vul_tab_t;462,19178
typedef struct hotp_globals_t 470,19468
    bool ldr_safe_hook_removal;476,19797
    bool ldr_safe_hook_injection;477,19868
} hotp_globals_t;478,19939
#define VUL(493,20654
#define SET(494,20708
#define MODULE(495,20775
#define SIG(496,20848
#define PPOINT(497,20920
#define PPOINT_HASH(498,21004
#define NUM_GLOBAL_VULS 501,21094
#define GLOBAL_VUL_TABLE 502,21150
#define GLOBAL_VUL(503,21207
#define GLOBAL_SET(504,21272
#define GLOBAL_MODULE(505,21340
#define GLOBAL_SIG(506,21413
#define GLOBAL_PPOINT(507,21484
#define GLOBAL_HASH(508,21561
#define VUL_STAT_INC(517,22081
#define SET_NUM(519,22119
#define SET_STR_DUP(540,23613
#define SET_STR_PTR(549,24129
#define SET_STR(558,24643
#define HOTP_IS_IN_REGION(560,24704
#define HOTP_ONLY_IS_IN_TRAMPOLINE(564,24875
#define HOTP_ONLY_IS_IN_PATCH_REGION(569,25121
#define GENERATE_PROBE_ID(580,25738
hotp_policy_status_table_t *hotp_policy_status_table;hotp_policy_status_table627,28380
static hotp_vul_t *hotp_vul_table;hotp_vul_table630,28500
static uint hotp_num_vuls;631,28536
static hotp_vul_tab_t *hotp_old_vul_tabs;hotp_old_vul_tabs632,28564
static void *hotp_only_tramp_heap;hotp_only_tramp_heap636,28749
static void *hotp_only_tramp_heap_cache;hotp_only_tramp_heap_cache644,29157
static vm_area_vector_t *hotp_only_tramp_areas;hotp_only_tramp_areas651,29447
static vm_area_vector_t *hotp_patch_point_areas;hotp_patch_point_areas670,30537
static hotp_globals_t *hotp_globals;hotp_globals673,30600
static unsigned int probe_id_counter;681,30834
hotp_get_lock(688,31077
hotp_ppoint_addr(695,31197
hotp_ppoint_areas_add(710,31681
hotp_ppoint_areas_remove(745,32980
hotp_ppoint_areas_release(781,34178
hotp_get_next_str(806,35087
    POLICY_FILE 835,35758
    MODES_FILE836,35779
hotp_read_data_file(840,35812
hotp_read_policy_defs(920,38931
hotp_load_hotp_dlls(1147,49237
hotp_read_policy_modes(1283,55542
hotp_set_policy_status(1392,59653
hotp_init_policy_status_table(1444,62187
static void hotp_free_one_vul(1544,66875
hotp_free_vul_table(1627,70343
hotp_remove_patches_from_module(1658,71445
hotp_remove_hot_patches(1783,77889
hotp_module_match(1800,78683
hotp_compute_hash(1913,84115
hotp_process_image(2068,91872
hotp_ppoint_on_list(2079,92353
hotp_perscache_overlap(2106,93162
hotp_process_image_helper(2159,95542
hotp_patch_point_persist_helper(2604,118582
hotp_num_matched_patch_points(2658,120851
hotp_get_matched_patch_points(2669,121281
hotp_point_not_on_list(2681,121764
hotp_walk_loader_list(2759,125268
hotp_init(2819,127885
hotp_reset_init(2890,130745
hotp_reset_free(2899,130926
hotp_exit(2923,131742
nudge_action_read_policies(2993,134482
hotp_nudge_handler(3208,145034
hotp_only_lookup_patch_addr(3345,151561
hotp_lookup_patch_addr(3396,153861
hotp_does_region_need_patch(3483,157583
hotp_inject_gateway_call(3614,162715
#define HOTP_CONTEXT_OFFSET_ON_DSTACK 3625,163256
#define GET_FROM_DC_OFFS_TO_REG(3630,163477
hotp_inject(3715,167647
hotp_only_patch_region_valid(3815,172827
patch_cti_tgt(3967,180652
hotp_only_inject_patch(3994,181830
hotp_only_remove_patch(4293,195833
hotp_only_in_tramp(4386,200127
hotp_only_detach_helper(4408,201049
hotp_only_mem_prot_change(4449,202989
hotp_only_gateway(4557,207592
hotp_gateway(4617,210455
hotp_execute_patch(4981,227730
hotp_event_notify(5103,233469
hotp_spill_before_notify(5224,238610
hotp_restore_after_notify(5281,241073
hotp_dump_reg_state(5300,241685
hotp_update_vul_stats(5316,242536
#define CLEAN_CALL_XFLAGS_OFFSET 5411,246472
#define CLEAN_CALL_ERRNO_OFFSET 5412,246510
hotp_change_control_flow(5414,246560
hotp_print_diagnostics(5440,247503
hotp_only_contains_leaked_trampoline(5595,254962
hotp_only_gbop_detector(5644,257002
hotp_only_gbop_protector(5658,257515
hotp_only_read_gbop_policy_defs(5675,258107
    DR_PROBE_ADDR_VIRTUAL,5810,263549
    DR_PROBE_ADDR_LIB_OFFS,5820,263981
    DR_PROBE_ADDR_EXP_FUNC,5830,264506
} dr_probe_addr_t;5831,264534
    char *library;library5841,264974
    app_rva_t offset;5846,265197
} dr_probe_lib_offs_t;5847,265219
    char *library;library5857,265674
    char *func;func5861,265843
} dr_probe_exp_func_t;5862,265859
    dr_probe_addr_t type;5871,266185
        app_pc vaddr;5875,266286
        dr_probe_lib_offs_t lib_offs;5878,266366
        dr_probe_exp_func_t exp_func;5881,266465
} dr_probe_location_t;5883,266510
    DR_PROBE_RETURN_NORMAL 5897,266958
} dr_probe_return_t;5898,266990
    char *name;name5910,267356
    dr_probe_location_t insert_loc;5920,267857
    dr_probe_location_t callback_func;5937,268608
    unsigned int id;5940,268726
    dr_probe_status_t status;5943,268808
} dr_probe_desc_t;5944,268838
dr_register_probes(6074,275497
#define HOTP_PROBE_PRECEDENCE 6246,283398
dr_get_probe_status(6357,288415
hotp_read_policies(6395,289586

hotpatch.h,260
#define _HOTPATCH_H_ 40,1831
    int vul_index;53,2284
    int set_index;56,2380
    int module_index;57,2399
    int ppoint_index;58,2471
} hotp_offset_match_t;59,2551
    CXT_TYPE_HOT_PATCH,69,3006
    CXT_TYPE_CORE_HOOK70,3030
} cxt_type_t;71,3053

instrlist.c,1118
# undef ASSERT 47,2118
# undef ASSERT_TRUNCATE48,2189
# undef ASSERT_BITFIELD_TRUNCATE49,2213
# undef ASSERT_NOT_REACHED50,2246
# define ASSERT 51,2273
# define ASSERT_TRUNCATE 52,2333
# define ASSERT_BITFIELD_TRUNCATE 53,2402
# define ASSERT_NOT_REACHED 54,2480
instrlist_create(59,2615
instrlist_init(70,2969
instrlist_destroy(83,3305
instrlist_clear(92,3607
instrlist_clear_and_destroy(103,3912
instrlist_set_fall_through_target(116,4330
instrlist_get_fall_through_target(123,4453
instrlist_set_return_target(134,4753
instrlist_get_return_target(141,4870
instrlist_set_translation_target(151,5122
instrlist_get_translation_target(157,5234
instrlist_set_our_mangling(163,5335
instrlist_get_our_mangling(172,5515
instrlist_first(179,5668
pk_test_func(186,5777
instrlist_last(192,5846
check_translation(198,5929
instrlist_append(209,6297
instrlist_prepend(235,6965
instrlist_preinsert(262,7644
instrlist_postinsert(297,8640
instrlist_replace(334,9696
instrlist_remove(353,10282
instrlist_clone(370,10721
instrlist_prepend_instrlist(431,12945
void instrlist_append_instrlist(442,13260

instrlist.h,225
#define _INSTRLIST_H_ 40,1907
struct _instr_list_t 42,1932
    instr_t *first;first43,1955
    instr_t *last;last44,1975
    int flags;45,1994
    app_pc translation_target;46,2009
    app_pc fall_through_bb;56,2566

io.c,1431
#  define _EXTERNALIZE_CTYPE_INLINES_TOP_50,2199
# undef CLIENT_ASSERT59,2421
# define CLIENT_ASSERT(60,2443
#define VA_ARG_CHAR2INT63,2517
#define BUF_SIZE 64,2541
const static double pos_inf 67,2574
const static double neg_inf 68,2613
const static double zerof 74,2860
# define pos_inf 75,2893
# define neg_inf 76,2922
double2int_trunc(81,2997
double2int(94,3260
utf8_to_utf16(131,4590
utf16_to_utf8(221,8256
utf16_to_utf8_size(303,10918
#undef IOX_WIDE_CHAR314,11240
#define IOX_WIDE_CHAR317,11279
typedef enum _specifier_t 324,11441
    SPEC_INT,325,11469
    SPEC_CHAR,326,11483
    SPEC_STRING327,11498
} specifer_t;328,11514
typedef enum _int_sz_t 330,11529
    SZ_SHORT,331,11554
    SZ_INT,332,11568
    SZ_LONG,333,11580
    SZ_LONGLONG,334,11593
    SZ_PTR 336,11647
    SZ_PTR = SZ_LONGLONG336,11647
    SZ_PTR 338,11678
    SZ_PTR = SZ_LONG338,11678
} int_sz_t;340,11706
our_isspace(347,11956
parse_int(354,12093
our_vsscanf(436,14240
our_sscanf(632,21008
# define MAPS_LINE_FORMAT4 652,21556
# define MAPS_LINE_FORMAT8 653,21619
test_sscanf_maps_x86(656,21704
test_sscanf_maps_x64(685,22597
test_sscanf_all_specs(714,23524
#  define RTLD_NEXT 794,26218
typedef void (*memcpy_t)memcpy_t796,26258
test_memcpy_offset_size(799,26335
test_our_memcpy(821,27079
test_memset_offset_size(844,27700
test_our_memset(861,28189
our_memcpy_vs_libc(880,28605
unit_test_io(923,30201

iox.h,407
# define TCHAR 44,1987
# define _T(45,2010
# define TNAME(46,2030
# define IF_WIDE_ELSE(47,2057
# define TCHAR 49,2092
# define _T(50,2112
# define TNAME(51,2129
# define IF_WIDE_ELSE(52,2149
TNAME(66,2607
TNAME(90,3206
TNAME(116,3932
TNAME(162,5239
TNAME(197,6184
TNAME(267,8385
TNAME(704,24357
#undef TCHAR715,24575
#undef _T716,24588
#undef TNAME717,24598
#undef IF_WIDE_ELSE718,24611

lib/dr_api.h,120
#define _DR_API_H_ 34,1709
DR_EXPORT LINK_ONCE int _USES_DR_VERSION_ 97,3442
LINK_ONCE int _USES_DR_VERSION_ 99,3519

lib/dr_app.h,155
#define _DR_APP_H_ 40,1829
#    define DR_APP_API 44,1890
#    define DR_APP_API 46,1943
#    define DR_APP_API 50,2082
#    define DR_APP_API52,2154

lib/dr_config.h,979
#define _DR_CONFIG_H_ 35,1774
#define DR_MAX_OPTIONS_LENGTH 57,2638
    DR_MODE_NONE 66,2839
    DR_MODE_CODE_MANIPULATION 72,3011
    DR_MODE_PROBE 76,3147
    DR_MODE_MEMORY_FIREWALL 82,3256
    DR_MODE_DO_NOT_RUN 91,3459
} dr_operation_mode_t;93,3488
    DR_SUCCESS,98,3640
    DR_PROC_REG_EXISTS,101,3729
    DR_PROC_REG_INVALID,104,3830
    DR_PRIORITY_INVALID,107,3928
    DR_ID_CONFLICTING,110,4017
    DR_ID_INVALID,113,4105
    DR_FAILURE,116,4216
    DR_NUDGE_PID_NOT_INJECTED,119,4317
    DR_NUDGE_TIMEOUT,122,4440
    DR_CONFIG_STRING_TOO_LONG,125,4538
    DR_CONFIG_FILE_WRITE_FAILED,128,4617
    DR_NUDGE_PID_NOT_FOUND,131,4734
} dr_config_status_t;133,4763
    DR_PLATFORM_DEFAULT,137,4876
    DR_PLATFORM_32BIT,138,4949
    DR_PLATFORM_64BIT,139,5022
} dr_platform_t;140,5102
typedef struct _dr_registered_process_iterator_t dr_registered_process_iterator_t;398,17827
typedef struct _dr_client_iterator_t dr_client_iterator_t;709,33815

lib/dr_inject.h,142
#define _DR_INJECT_H_ 35,1764
# define ERROR_IMAGE_MACHINE_TYPE_MISMATCH_EXE 55,2379
# define WARN_IMAGE_MACHINE_TYPE_MISMATCH_EXE 60,2537

lib/dr_stats.h,1059
#define _DR_STATS_H_ 36,1759
# define DR_SHMEM_KEY 46,2071
# define DYNAMORIO_MAGIC_STRING 48,2136
# define DYNAMORIO_MAGIC_STRING_LEN 49,2193
#define STAT_NAME_MAX_LEN 52,2264
typedef struct _single_stat_t 53,2293
    char name[name58,2525
    stats_int_t value;62,2739
} single_stat_t;63,2762
#define NUM_EVENTS 69,2975
typedef struct _dr_statistics_t 70,2997
    char magicstring[magicstring72,3043
    process_id_t process_id;74,3100
    char process_name[process_name75,3149
    uint logmask;76,3205
    uint loglevel;77,3255
    char logdir[logdir78,3316
    uint64 perfctr_vals[perfctr_vals79,3386
    uint num_stats;80,3423
    single_stat_t stats[stats83,3533
#  define STATS_DEF(86,3581
#  define RSTATS_DEF(88,3647
# undef STATS_DEF91,3737
# undef RSTATS_DEF92,3755
} dr_statistics_t;94,3781
    thread_id_t thread_id;99,3875
    mutex_t thread_stats_lock;100,3902
# define STATS_DEF(116,4901
# define RSTATS_DEF(118,4967
} thread_local_statistics_t;121,5056
#undef STATS_DEF122,5085
#undef RSTATS_DEF123,5102

lib/fortran.c,93
void drsetup_(47,2070
void drcleanup_(52,2111
void drstart_(57,2156
void drstop_(62,2197

lib/globals_shared.h,22486
#define _GLOBALS_SHARED_H_44,1915
#    define WINDOWS49,2011
# define X6478,2822
# define UNIX82,2880
#  define WIN32_LEAN_AND_MEAN87,2940
#  define DR_EXPORT 113,3580
#  define LINK_ONCE 114,3622
#  define ALIGN_VAR(115,3664
#   define inline 117,3730
#  define INLINE_FORCED 119,3766
#    define DR_EXPORT 126,4030
#    define DR_EXPORT128,4101
#  define LINK_ONCE 130,4132
#  define ALIGN_VAR(131,4175
#   define inline 133,4250
#  define INLINE_FORCED 135,4288
#define MAXIMUM_PATH 149,4692
#  define NULL 154,4790
typedef _Bool bool;161,4964
typedef char bool;164,5038
#    define true 168,5092
#    define false 171,5139
#define CAST_TO_bool(178,5277
typedef unsigned int uint;181,5340
typedef unsigned short ushort;184,5406
typedef unsigned char byte;187,5474
typedef signed char sbyte;190,5540
typedef byte * app_pc;192,5574
typedef void (*generic_func_t)generic_func_t194,5598
typedef unsigned __int64 uint64;198,5683
typedef __int64 int64;201,5758
typedef __int64 ssize_t;204,5803
typedef int ssize_t;206,5836
#  define INT64_FORMAT 208,5866
typedef unsigned long int uint64;212,5962
typedef long int int64;215,6042
#    define INT64_FORMAT 217,6077
typedef unsigned long long int uint64;220,6150
typedef long long int int64;223,6235
#    define INT64_FORMAT 225,6275
typedef uint64 reg_t;233,6451
typedef uint reg_t;235,6479
typedef reg_t ptr_uint_t;238,6574
typedef int64 ptr_int_t;240,6611
typedef int ptr_int_t;242,6642
typedef size_t app_rva_t;250,6838
#define PTR_UINT_0 252,6865
#define PTR_UINT_1 253,6907
#define PTR_UINT_MINUS_1 254,6949
typedef ptr_uint_t thread_id_t;257,7007
typedef ptr_uint_t process_id_t;258,7039
typedef pid_t thread_id_t;260,7090
typedef pid_t process_id_t;261,7117
#define INVALID_PROCESS_ID 264,7153
typedef HANDLE file_t;272,7395
#  define INVALID_FILE 274,7467
#  define STDOUT 280,7719
#  define STDERR 282,7803
#  define STDIN 284,7887
typedef int file_t;289,7953
#  define INVALID_FILE 291,8022
#  define STDOUT 299,8349
#  define STDERR 301,8421
#  define STDIN 303,8493
typedef uint client_id_t;318,8983
    uint black_box_uint;328,9209
    uint64 black_box_uint64;329,9234
    uint black_box_uint[black_box_uint331,9270
} opnd_t;333,9306
    uint black_box_uint[black_box_uint342,9528
    uint black_box_uint[black_box_uint344,9564
} instr_t;346,9601
typedef struct _opnd_t opnd_t;349,9634
typedef struct _instr_t instr_t;351,9682
# define IN 356,9781
# define OUT 359,9836
# define INOUT 362,9895
# define POINTER_MAX 368,9985
#  define SSIZE_T_MAX 370,10038
# define POINTER_MAX_32BIT 372,10078
# define POINTER_MAX 374,10135
#  define SSIZE_T_MAX 376,10186
#define MAX_CLIENT_LIBS 380,10232
# define MAX(387,10483
# define MIN(388,10526
#define PTR_UINT_ABS(390,10576
#define TESTALL(393,10671
#define TESTANY(395,10772
#define TEST 397,10865
#define BOOLS_MATCH(399,10887
# define IF_DEBUG(403,11003
# define _IF_DEBUG(404,11026
# define IF_DEBUG_(405,11052
# define IF_DEBUG_ELSE(406,11078
# define IF_DEBUG_ELSE_0(407,11109
# define IF_DEBUG_ELSE_NULL(408,11141
# define IF_DEBUG(410,11182
# define _IF_DEBUG(411,11203
# define IF_DEBUG_(412,11225
# define IF_DEBUG_ELSE(413,11247
# define IF_DEBUG_ELSE_0(414,11278
# define IF_DEBUG_ELSE_NULL(415,11308
# define IF_INTERNAL(419,11370
# define IF_INTERNAL_ELSE(420,11396
# define IF_INTERNAL(422,11435
# define IF_INTERNAL_ELSE(423,11459
# define IF_WINDOWS(427,11515
# define IF_WINDOWS_(428,11540
# define _IF_WINDOWS(429,11568
# define IF_WINDOWS_ELSE_0(430,11596
# define IF_WINDOWS_ELSE(431,11630
# define IF_WINDOWS_ELSE_NP(432,11664
# define IF_UNIX(433,11699
# define IF_UNIX_ELSE(434,11719
# define IF_UNIX_(435,11748
# define _IF_UNIX(436,11769
# define IF_WINDOWS(438,11796
# define IF_WINDOWS_(439,11819
# define _IF_WINDOWS(440,11843
# define IF_WINDOWS_ELSE_0(441,11867
# define IF_WINDOWS_ELSE(442,11901
# define IF_WINDOWS_ELSE_NP(443,11935
# define IF_UNIX(444,11970
# define IF_UNIX_ELSE(445,11992
# define IF_UNIX_(446,12021
# define _IF_UNIX(447,12045
# define IF_LINUX(451,12091
# define IF_LINUX_ELSE(452,12114
# define IF_LINUX_(453,12144
# define IF_LINUX(455,12175
# define IF_LINUX_ELSE(456,12196
# define IF_LINUX_(457,12226
# define IF_VMX86(461,12276
# define IF_VMX86_ELSE(462,12299
# define _IF_VMX86(463,12329
# define IF_NOT_VMX86(464,12355
# define IF_VMX86(466,12387
# define IF_VMX86_ELSE(467,12408
# define _IF_VMX86(468,12438
# define IF_NOT_VMX86(469,12460
#  define IF_HAVE_TLS_ELSE(474,12524
#  define IF_NOT_HAVE_TLS(475,12559
#  define IF_HAVE_TLS_ELSE(477,12595
#  define IF_NOT_HAVE_TLS(478,12630
# define IF_HAVE_TLS_ELSE(482,12751
# define IF_NOT_HAVE_TLS(483,12785
# define IF_WINDOWS_AND_CORE(487,12874
# define IF_WINDOWS_AND_CORE(489,12914
# define IF_PROG_SHEP(493,12981
# define IF_PROG_SHEP(495,13014
# define IF_RCT_IND_BRANCH(499,13107
# define IF_RCT_IND_BRANCH(501,13145
# define IF_RETURN_AFTER_CALL(505,13246
# define IF_RETURN_AFTER_CALL_ELSE(506,13281
# define IF_RETURN_AFTER_CALL(508,13330
# define IF_RETURN_AFTER_CALL_ELSE(509,13363
# define IF_HOTP(513,13444
# define IF_HOTP(515,13472
# define IF_CLIENT_INTERFACE(519,13524
# define IF_CLIENT_INTERFACE_ELSE(520,13558
# define _IF_CLIENT_INTERFACE(521,13600
# define _IF_NOT_CLIENT_INTERFACE(522,13637
# define _IF_CLIENT(524,13713
# define IF_CLIENT_INTERFACE(526,13746
# define IF_CLIENT_INTERFACE_ELSE(527,13778
# define _IF_CLIENT_INTERFACE(528,13820
# define _IF_NOT_CLIENT_INTERFACE(529,13853
# define _IF_CLIENT(530,13894
# define IF_CUSTOM_TRACES(534,13946
# define IF_CUSTOM_TRACES(536,13983
# define IF_APP_EXPORTS(540,14042
# define IF_APP_EXPORTS(542,14077
# define IF_GBOP(546,14124
# define IF_GBOP(548,14152
# define IF_PROC_CTL(552,14203
# define IF_PROC_CTL(554,14235
# define IF_KSTATS(558,14281
# define IF_KSTATS(560,14311
# define IF_UNIT_TEST_ELSE(564,14369
# define IF_UNIT_TEST_ELSE(566,14409
# define IF_X64(572,14528
# define IF_X64_ELSE(573,14549
# define IF_X64_(574,14578
# define _IF_X64(575,14601
# define IF_NOT_X64(576,14625
# define _IF_NOT_X64(577,14648
# define IF_X64(579,14678
# define IF_X64_ELSE(580,14697
# define IF_X64_(581,14726
# define _IF_X64(582,14746
# define IF_NOT_X64(583,14766
# define _IF_NOT_X64(584,14791
    SYSLOG_INFORMATION 589,14866
    SYSLOG_INFORMATION = 0x1,x1589,14866
    SYSLOG_WARNING 590,14896
    SYSLOG_WARNING     = 0x2,x2590,14896
    SYSLOG_ERROR 591,14926
    SYSLOG_ERROR       = 0x4,x4591,14926
    SYSLOG_CRITICAL 592,14956
    SYSLOG_CRITICAL    = 0x8,x8592,14956
    SYSLOG_NONE 593,14986
    SYSLOG_NONE        = 0x0,x0593,14986
    SYSLOG_ALL 594,15016
    SYSLOG_ALL         = SYSLOG_INFORMATION 594,15016
    SYSLOG_ALL         = SYSLOG_INFORMATION | SYSLOG_WARNING 594,15016
    SYSLOG_ALL         = SYSLOG_INFORMATION | SYSLOG_WARNING | SYSLOG_ERROR 594,15016
    SYSLOG_ALL         = SYSLOG_INFORMATION | SYSLOG_WARNING | SYSLOG_ERROR | SYSLOG_CRITICAL594,15016
} syslog_event_type_t;595,15110
#define DYNAMO_OPTION(597,15134
#define DYNAMO_OPTION_NOT_STRING(601,15445
#define EXPOSE_INTERNAL_OPTIONS 604,15556
# define INTERNAL_OPTION(611,15890
# define INTERNAL_OPTION(624,16798
 typedef unsigned int uint32;629,16945
typedef uint64 timestamp_t;633,17107
#  define NAKED634,17135
#  define ZHEX32_FORMAT_STRING 635,17151
#  define HEX32_FORMAT_STRING 636,17189
#  define MAX_PATH 645,17610
 typedef unsigned int uint;647,17684
 typedef unsigned int uint32;650,17751
typedef unsigned __int64 uint64;653,17844
typedef __int64 int64;654,17877
typedef int64 ssize_t;656,17913
typedef int ssize_t;658,17944
#    define ZHEX32_FORMAT_STRING 662,18057
#    define HEX32_FORMAT_STRING 663,18100
#    define ZHEX32_FORMAT_STRING 665,18148
#    define HEX32_FORMAT_STRING 666,18188
#    define ULLONG_MAX 670,18330
typedef uint64 timestamp_t;672,18373
#  define NAKED 673,18401
#define FIXED_TIMESTAMP_FORMAT 676,18445
#define UINT64_FORMAT_CODE 680,18565
#define INT64_FORMAT_CODE 681,18609
#define UINT64_FORMAT_STRING 682,18652
#define INT64_FORMAT_STRING 683,18704
#define HEX64_FORMAT_STRING 684,18754
#define ZHEX64_FORMAT_STRING 685,18803
#define ZHEX32_FORMAT_STRING 687,18879
#define HEX32_FORMAT_STRING 688,18915
# define PFMT 691,19013
# define PIFMT 692,19048
# define SZFMT 693,19083
# define PFMT 695,19124
# define PIFMT 696,19159
# define SZFMT 697,19194
#define PFX 705,19410
#define PIFX 706,19432
typedef int64 stats_int_t;715,19674
typedef int stats_int_t;717,19707
#define L_UINT64_FORMAT_STRING 736,20483
#  define PFMT 738,20564
#  define PIFMT 739,20600
#  define SZFMT 740,20636
#  define SSZFMT 741,20673
#  define SZFC 742,20710
#  define SSZFC 743,20744
#  define PFMT 745,20784
#  define PIFMT 746,20820
#  define SZFMT 747,20856
#  define SSZFMT 748,20877
#  define SZFC 749,20899
#  define SSZFC 750,20918
#define L_PFMT 752,20945
#define PFX 753,21000
#define PIFX 754,21021
# define IDFMT 758,21104
# define IDFMT 760,21131
#define MAX_REGISTRY_PARAMETER 765,21282
# define MAX_OPTIONS_STRING 768,21433
# define MAX_CONFIG_VALUE 769,21469
# define MAX_OPTIONS_STRING 778,21938
# define MAX_CONFIG_VALUE 779,21974
#define MAX_LIST_OPTION_LENGTH 782,22091
#define MAX_PATH_OPTION_LENGTH 784,22200
#define MAX_OPTION_LENGTH 786,22291
#define MAX_PARAMNAME_LENGTH 788,22342
#define MAX_MODNAME_INTERNAL 791,22433
#define MAX_DWORD_STRING_LENGTH 796,22585
typedef char pathstring_t[pathstring_t798,22621
typedef char liststring_t[liststring_t802,22809
#define BUFFER_SIZE_BYTES(805,22922
#define BUFFER_SIZE_ELEMENTS(806,22970
#define BUFFER_LAST_ELEMENT(807,23048
#define NULL_TERMINATE_BUFFER(808,23119
#define BUFFER_ROOM_LEFT_W(810,23185
#define BUFFER_ROOM_LEFT(811,23266
#define CAT_AND_TERMINATE(816,23499
#define EXPANDSTR(824,23692
#define STRINGIFY(825,23716
#  define PRODUCT_NAME 829,23832
#  define PRODUCT_NAME 831,23892
#define COMPANY_NAME 841,24327
#define COMPANY_NAME_EVENTLOG 842,24383
#define COMPANY_LONG_NAME 844,24502
#  define BUILD_NUMBER_STRING 847,24572
#  define BUILD_NUMBER_STRING 849,24640
#  define BUILD_NUMBER 850,24685
#  define VERSION_NUMBER_STRING 854,24742
#  define VERSION_NUMBER_STRING 856,24816
#  define VERSION_NUMBER 857,24867
#  define HOT_PATCHING_DLL_CACHE_PATH 861,24936
#  define HOTP_MODES_FILENAME 862,24990
#  define HOTP_POLICIES_FILENAME 863,25035
#define DYNAMORIO_VAR_CONFIGDIR_ID 867,25163
#define DYNAMORIO_VAR_HOME_ID 868,25219
#define DYNAMORIO_VAR_LOGDIR_ID 869,25270
#define DYNAMORIO_VAR_OPTIONS_ID 870,25323
#define DYNAMORIO_VAR_AUTOINJECT_ID 871,25377
#define DYNAMORIO_VAR_UNSUPPORTED_ID 872,25434
#define DYNAMORIO_VAR_RUNUNDER_ID 873,25494
#define DYNAMORIO_VAR_CMDLINE_ID 874,25549
#define DYNAMORIO_VAR_ONCRASH_ID 875,25603
#define DYNAMORIO_VAR_SAFEMARKER_ID 876,25657
#define DYNAMORIO_VAR_CACHE_ROOT_ID 879,25793
#define DYNAMORIO_VAR_CACHE_SHARED_ID 885,26138
#define DYNAMORIO_VAR_PERSCACHE_ROOT_ID 892,26489
#define DYNAMORIO_VAR_PERSCACHE_SHARED_ID 894,26596
#define PERSCACHE_FILE_SUFFIX 898,26769
# define DYNAMORIO_VAR_HOT_PATCH_POLICES_ID 901,26836
# define DYNAMORIO_VAR_HOT_PATCH_MODES_ID 902,26910
# define DYNAMORIO_VAR_APP_PROCESS_WHITELIST_ID 905,27009
# define DYNAMORIO_VAR_ANON_PROCESS_WHITELIST_ID 906,27090
# define DYNAMORIO_VAR_APP_PROCESS_BLACKLIST_ID 908,27174
# define DYNAMORIO_VAR_ANON_PROCESS_BLACKLIST_ID 909,27255
#define DYNAMORIO_VAR_CONFIGDIR 912,27346
#define DYNAMORIO_VAR_HOME 913,27417
#define DYNAMORIO_VAR_LOGDIR 914,27483
#define DYNAMORIO_VAR_OPTIONS 915,27551
#define DYNAMORIO_VAR_AUTOINJECT 916,27620
#define DYNAMORIO_VAR_UNSUPPORTED 917,27692
#define DYNAMORIO_VAR_RUNUNDER 918,27767
#define DYNAMORIO_VAR_CMDLINE 919,27837
#define DYNAMORIO_VAR_ONCRASH 920,27906
#define DYNAMORIO_VAR_SAFEMARKER 921,27975
#define DYNAMORIO_VAR_CACHE_ROOT 922,28047
#define DYNAMORIO_VAR_CACHE_SHARED 923,28120
#define DYNAMORIO_VAR_PERSCACHE_ROOT 924,28197
#define DYNAMORIO_VAR_PERSCACHE_SHARED 925,28278
# define DYNAMORIO_VAR_HOT_PATCH_POLICIES 927,28393
# define DYNAMORIO_VAR_HOT_PATCH_MODES 928,28482
# define DYNAMORIO_VAR_APP_PROCESS_WHITELIST 931,28596
# define DYNAMORIO_VAR_ANON_PROCESS_WHITELIST 933,28697
# define DYNAMORIO_VAR_APP_PROCESS_BLACKLIST 936,28801
# define DYNAMORIO_VAR_ANON_PROCESS_BLACKLIST 938,28902
#  define DYNAMORIO_VAR_EXE_PATH 944,29026
#  define DYNAMORIO_VAR_EXECVE 945,29087
#  define DYNAMORIO_VAR_EXECVE_LOGDIR 946,29151
#  define L_IF_WIN(947,29217
#  define EXPAND_LEVEL(951,29263
#  define L_EXPAND_LEVEL(952,29331
#  define L(953,29368
#  define LCONCAT(954,29394
#  define L_IF_WIN(955,29454
#  define L_DYNAMORIO_VAR_CONFIGDIR 958,29533
#  define L_DYNAMORIO_VAR_HOME 959,29611
#  define L_DYNAMORIO_VAR_LOGDIR 960,29684
#  define L_DYNAMORIO_VAR_OPTIONS 961,29759
#  define L_DYNAMORIO_VAR_AUTOINJECT 962,29835
#  define L_DYNAMORIO_VAR_UNSUPPORTED 963,29914
#  define L_DYNAMORIO_VAR_RUNUNDER 964,29994
#  define L_DYNAMORIO_VAR_CMDLINE 965,30071
#  define L_DYNAMORIO_VAR_ONCRASH 966,30147
#  define L_DYNAMORIO_VAR_SAFEMARKER 967,30223
#  define L_DYNAMORIO_VAR_CACHE_ROOT 968,30302
#  define L_DYNAMORIO_VAR_CACHE_SHARED 969,30381
#  define L_DYNAMORIO_VAR_HOT_PATCH_POLICIES 971,30494
#  define L_DYNAMORIO_VAR_HOT_PATCH_MODES 972,30589
#  define L_DYNAMORIO_VAR_APP_PROCESS_WHITELIST 975,30710
#  define L_DYNAMORIO_VAR_ANON_PROCESS_WHITELIST 977,30816
#  define L_DYNAMORIO_VAR_APP_PROCESS_BLACKLIST 980,30925
#  define L_DYNAMORIO_VAR_ANON_PROCESS_BLACKLIST 982,31031
#  define L_PRODUCT_NAME 986,31148
#  define L_COMPANY_NAME 987,31215
#  define L_COMPANY_LONG_NAME 988,31282
#  define EVENTLOG_HIVE 991,31385
#  define EVENTLOG_NAME 992,31428
#  define EVENTSOURCE_NAME 993,31474
#  define EVENTLOG_REGISTRY_SUBKEY 995,31559
#  define L_EVENTLOG_REGISTRY_SUBKEY 996,31642
#  define L_EVENTLOG_REGISTRY_KEY 997,31720
#  define L_EVENT_LOG_KEY 998,31819
#  define L_EVENT_LOG_SUBKEY 999,31892
#  define L_EVENT_LOG_NAME 1000,31971
#  define L_EVENT_SOURCE_NAME 1001,32034
#  define L_EVENT_SOURCE_KEY 1002,32097
#  define L_EVENT_SOURCE_SUBKEY 1003,32169
#  define EVENT_LOG_KEY 1005,32248
#  define EVENT_SOURCE_KEY 1006,32336
#  define L_EVENT_FILE_VALUE_NAME 1012,32740
#  define L_EVENT_FILE_NAME_PRE_VISTA 1013,32782
#  define L_EVENT_FILE_NAME_VISTA 1015,32901
#  define L_EVENT_MAX_SIZE_NAME 1017,33022
#  define EVENT_MAX_SIZE 1018,33065
#  define L_EVENT_RETENTION_NAME 1019,33099
#  define EVENT_RETENTION 1020,33145
#  define L_EVENT_TYPES_SUPPORTED_NAME 1022,33194
#  define EVENT_TYPES_SUPPORTED 1023,33251
#  define L_EVENT_CATEGORY_COUNT_NAME 1024,33316
#  define EVENT_CATEGORY_COUNT 1025,33371
#  define L_EVENT_CATEGORY_FILE_NAME 1026,33404
#  define L_EVENT_MESSAGE_FILE 1027,33464
#  define BASE_NAMED_OBJECTS 1030,33551
#  define DYNAMORIO_SHARED_OBJECT_BASE 1032,33682
#  define DYNAMORIO_SHARED_OBJECT_DIRECTORY 1034,33808
#  define DYNAMORIO_REGISTRY_BASE_SUBKEY 1037,33921
#  define DYNAMORIO_REGISTRY_BASE 1038,34003
#  define DYNAMORIO_REGISTRY_HIVE 1039,34135
#  define DYNAMORIO_REGISTRY_KEY 1040,34188
#  define L_DYNAMORIO_REGISTRY_KEY 1041,34255
#  define INJECT_ALL_HIVE 1043,34366
#  define INJECT_ALL_KEY 1044,34414
#  define INJECT_ALL_SUBKEY 1045,34502
#  define INJECT_ALL_LOAD_SUBKEY 1047,34572
#  define INJECT_ALL_SIGN_SUBKEY 1049,34669
#  define INJECT_ALL_HIVE_L 1051,34738
#  define INJECT_ALL_KEY_L 1052,34794
#  define INJECT_ALL_SUBKEY_L 1053,34856
#  define INJECT_ALL_LOAD_SUBKEY_L 1054,34921
#  define INJECT_ALL_SIGN_SUBKEY_L 1055,35000
#  define INJECT_DLL_NAME 1057,35080
#  define INJECT_DLL_8_3_NAME 1058,35129
#  define INJECT_HELPER_DLL1_NAME 1060,35176
#  define INJECT_HELPER_DLL2_NAME 1061,35234
#  define DEBUGGER_INJECTION_HIVE 1063,35293
#  define DEBUGGER_INJECTION_KEY 1064,35352
#  define DEBUGGER_INJECTION_VALUE_NAME 1065,35472
#  define DEBUGGER_INJECTION_HIVE_L 1067,35524
#  define DEBUGGER_INJECTION_KEY_L 1068,35591
#  define DEBUGGER_INJECTION_VALUE_NAME_L 1069,35672
#  define DRINJECT_NAME 1071,35761
#  define SVCHOST_NAME 1074,35881
#  define EXE_SUFFIX 1075,35922
#  define L_EXE_SUFFIX 1076,35960
#  define SVCHOST_EXE_NAME 1077,36018
#  define L_SVCHOST_EXE_NAME 1078,36073
#  define DYNAMORIO_LIBRARY_NAME 1081,36188
#  define DLLPATH_RELEASE 1082,36237
#  define DLLPATH_DEBUG 1083,36307
#  define DLLPATH_PROFILE 1084,36375
#  define L_DYNAMORIO_LIBRARY_NAME 1086,36446
#  define L_DLLPATH_RELEASE 1087,36520
#  define L_DLLPATH_DEBUG 1088,36595
#  define L_DLLPATH_PROFILE 1089,36668
#  define INJECT_ALL_DLL_SUBPATH 1091,36744
#  define L_INJECT_ALL_DLL_SUBPATH 1092,36808
enum DLL_TYPE 1094,36892
        DLL_NONE,1095,36908
        DLL_UNKNOWN,1096,36926
        DLL_RELEASE,1097,36947
        DLL_DEBUG,1098,36968
        DLL_PROFILE,1099,36987
        DLL_CUSTOM,1100,37008
        DLL_PATHHAS1101,37028
# define UNIT_TEST_EXE_NAME 1106,37101
    RUNUNDER_OFF 1158,39462
    RUNUNDER_OFF                  = 0x00,x001158,39462
    RUNUNDER_ON 1159,39514
    RUNUNDER_ON                   = 0x01,x011159,39514
    RUNUNDER_ALL 1160,39566
    RUNUNDER_ALL                  = 0x02,x021160,39566
    RUNUNDER_FORMERLY_EXPLICIT 1165,39831
    RUNUNDER_FORMERLY_EXPLICIT    = 0x04,x041165,39831
    RUNUNDER_COMMANDLINE_MATCH 1167,39884
    RUNUNDER_COMMANDLINE_MATCH    = 0x08,x081167,39884
    RUNUNDER_COMMANDLINE_DISPATCH 1168,39936
    RUNUNDER_COMMANDLINE_DISPATCH = 0x10,x101168,39936
    RUNUNDER_COMMANDLINE_NO_STRIP 1169,39988
    RUNUNDER_COMMANDLINE_NO_STRIP = 0x20,x201169,39988
    RUNUNDER_ONCE 1170,40040
    RUNUNDER_ONCE                 = 0x40,x401170,40040
    RUNUNDER_EXPLICIT 1172,40093
    RUNUNDER_EXPLICIT             = 0x80,x801172,40093
#define NUDGE_DEFINITIONS(1191,41007
#define NUDGE_DEF(1225,43506
    NUDGE_DEFINITIONS(1226,43557
#undef NUDGE_DEF1227,43581
    NUDGE_DR_PARAMETRIZED_END1228,43598
} nudge_generic_type_t;1229,43628
#define NUDGE_GENERIC(1232,43694
#define NUDGE_ARG_VERSION_1 1235,43784
#define NUDGE_ARG_CURRENT_VERSION 1236,43814
    NUDGE_IS_INTERNAL 1242,43936
    NUDGE_IS_INTERNAL       = 0x01,x011242,43936
    NUDGE_NUDGER_FREE_STACK 1244,44023
    NUDGE_NUDGER_FREE_STACK = 0x02,x021244,44023
    NUDGE_FREE_ARG 1246,44183
    NUDGE_FREE_ARG          = 0x04,x041246,44183
    int ignored1;1257,44589
    uint nudge_action_mask:nudge_action_mask1262,44866
    uint version:version1263,44897
    uint flags:flags1264,44917
    int ignored2;1265,44935
    uint version;1267,45024
    uint nudge_action_mask;1268,45083
    uint flags;1269,45145
    client_id_t client_id;1271,45202
    uint64 client_arg;1272,45264
} nudge_arg_t;1278,45452
# define NUDGESIG_SIGNUM 1286,45688
#define AVOID_API_EXPORT 1296,46137
#define HOTP_POLICY_ID_LENGTH 1308,46555
    DR_PROBE_STATUS_ERROR 1322,47018
    DR_PROBE_STATUS_INVALID_ID 1325,47134
    DR_PROBE_STATUS_INVALID_VADDR 1335,47521
    DR_PROBE_STATUS_INVALID_LIB 1341,47771
    DR_PROBE_STATUS_INVALID_LIB_OFFS 1346,47969
    DR_PROBE_STATUS_INVALID_FUNC 1352,48212
    DR_PROBE_STATUS_VADDR_NOT_EXEC 1364,48782
    DR_PROBE_STATUS_LIB_NOT_SEEN 1367,48902
    DR_PROBE_STATUS_WAITING_FOR_EXEC 1373,49155
    DR_PROBE_STATUS_LIB_UNLOADED 1378,49359
    DR_PROBE_STATUS_INJECTED 1383,49482
    DR_PROBE_STATUS_UNSUPPORTED 1386,49590
    HOTP_INJECT_ERROR 1416,50955
    HOTP_INJECT_ERROR = DR_PROBE_STATUS_ERROR,1416,50955
    HOTP_INJECT_PROTECT 1419,51050
    HOTP_INJECT_PROTECT = DR_PROBE_STATUS_INJECTED,1419,51050
    HOTP_INJECT_DETECT 1425,51305
    HOTP_INJECT_IN_PROGRESS 1430,51498
    HOTP_INJECT_PENDING 1435,51648
    HOTP_INJECT_PENDING = DR_PROBE_STATUS_WAITING_FOR_EXEC,1435,51648
    HOTP_INJECT_NO_MATCH 1441,51936
    HOTP_INJECT_NO_MATCH = DR_PROBE_STATUS_LIB_NOT_SEEN,1441,51936
    HOTP_INJECT_OFF 1450,52209
} dr_probe_status_t;1452,52319
typedef dr_probe_status_t hotp_inject_status_t;1455,52365
    HOTP_MODE_OFF 1462,52563
    HOTP_MODE_DETECT 1463,52586
    HOTP_MODE_PROTECT 1464,52613
} hotp_policy_mode_t;1465,52639
    char policy_id[policy_id1481,53457
    hotp_inject_status_t inject_status;1482,53504
    hotp_policy_mode_t mode;1491,53985
} hotp_policy_status_t;1492,54014
    uint crc;1507,54702
    uint size;1508,54716
    uint num_policies;1509,54773
    hotp_policy_status_t *policy_status_array;policy_status_array1510,54796
} hotp_policy_status_table_t;1511,54843
    GET_PARAMETER_BUF_TOO_SMALL 1527,55531
    GET_PARAMETER_FAILURE 1528,55569
    GET_PARAMETER_SUCCESS 1529,55600
    GET_PARAMETER_NOAPPSPECIFIC 1530,55631
    SET_PARAMETER_FAILURE 1531,55668
    SET_PARAMETER_FAILURE = GET_PARAMETER_FAILURE,1531,55668
    SET_PARAMETER_SUCCESS 1532,55719
    SET_PARAMETER_SUCCESS = GET_PARAMETER_SUCCESS1532,55719
#define IS_GET_PARAMETER_FAILURE(1534,55772
#define IS_GET_PARAMETER_SUCCESS(1535,55820
typedef union _dr_xmm_t 1570,57437
    uint64 u64[u641572,57474
    uint   u32[u321574,57545
    byte   u8[u81575,57609
    reg_t  reg[reg1576,57673
} dr_xmm_t;1577,57751
typedef union _dr_ymm_t 1580,57793
    uint64 u64[u641596,58544
    uint   u32[u321599,58622
    byte   u8[u81600,58686
    reg_t  reg[reg1601,58750
} dr_ymm_t;1602,58828
#  define NUM_XMM_SLOTS 1615,59303
#  define NUM_XMM_SLOTS 1617,59399
# define PRE_XMM_PADDING 1619,59498
# define NUM_XMM_SLOTS 1621,59592
# define PRE_XMM_PADDING 1622,59680
    DR_MC_INTEGER 1631,60014
    DR_MC_INTEGER    = 0x01,x011631,60014
    DR_MC_CONTROL 1638,60247
    DR_MC_CONTROL    = 0x02,x021638,60247
    DR_MC_MULTIMEDIA 1645,60565
    DR_MC_MULTIMEDIA = 0x04,x041645,60565
    DR_MC_ALL 1647,60624
    DR_MC_ALL        = (DR_MC_INTEGER 1647,60624
    DR_MC_ALL        = (DR_MC_INTEGER | DR_MC_CONTROL 1647,60624
    DR_MC_ALL        = (DR_MC_INTEGER | DR_MC_CONTROL | DR_MC_MULTIMEDIA)1647,60624
} dr_mcontext_flags_t;1648,60699
typedef struct _dr_mcontext_t 1653,60761
    size_t size;1658,60940
    dr_mcontext_flags_t flags;1667,61402
} dr_mcontext_t;1669,61452
typedef struct _priv_mcontext_t 1673,61535
} priv_mcontext_t;1675,61588
#define NUM_XMM_SAVED 1698,62733

lib/hotpatch_interface.h,2216
#define _HOTPATCH_INTERFACE_H_ 36,1768
#define HOTP_INTERFACE_VERSION 48,2171
    HOTP_EXEC_EXPLOIT_DETECTED 61,2726
    HOTP_EXEC_EXPLOIT_DETECTED          = 0x00000001,x0000000161,2726
    HOTP_EXEC_EXPLOIT_NOT_DETECTED 62,2780
    HOTP_EXEC_EXPLOIT_NOT_DETECTED      = 0x00000002,x0000000262,2780
    HOTP_EXEC_DETECTOR_ERROR 63,2834
    HOTP_EXEC_DETECTOR_ERROR            = 0x00000004,x0000000463,2834
    HOTP_EXEC_EXPLOIT_PROTECTED 66,2952
    HOTP_EXEC_EXPLOIT_PROTECTED         = 0x00000008,x0000000866,2952
    HOTP_EXEC_EXPLOIT_NOT_PROTECTED 67,3006
    HOTP_EXEC_EXPLOIT_NOT_PROTECTED     = 0x00000010,x0000001067,3006
    HOTP_EXEC_PROTECTOR_ERROR 68,3060
    HOTP_EXEC_PROTECTOR_ERROR           = 0x00000020,x0000002068,3060
    HOTP_EXEC_EXPLOIT_KILL_THREAD 71,3193
    HOTP_EXEC_EXPLOIT_KILL_THREAD       = 0x00000040,x0000004071,3193
    HOTP_EXEC_EXPLOIT_KILL_PROCESS 72,3247
    HOTP_EXEC_EXPLOIT_KILL_PROCESS      = 0x00000080,x0000008072,3247
    HOTP_EXEC_EXPLOIT_RAISE_EXCEPTION 73,3301
    HOTP_EXEC_EXPLOIT_RAISE_EXCEPTION   = 0x00000100,x0000010073,3301
    HOTP_EXEC_CHANGE_CONTROL_FLOW 74,3355
    HOTP_EXEC_CHANGE_CONTROL_FLOW       = 0x00000200,x0000020074,3355
    HOTP_EXEC_LOG_EVENT 79,3567
    HOTP_EXEC_LOG_EVENT                 = 0x00000400,x0000040079,3567
    HOTP_EXEC_ABORTED 84,3787
    HOTP_EXEC_ABORTED                   = 0x00000800x0000080084,3787
} hotp_exec_status_t;85,3840
typedef priv_mcontext_t hotp_context_t;87,3863
typedef hotp_exec_status_t (*hotp_func_t)hotp_func_t92,4067
#define APP_XDI(94,4140
#define APP_XSI(95,4189
#define APP_XBP(96,4238
#define APP_XSP(97,4287
#define APP_XBX(98,4336
#define APP_XDX(99,4385
#define APP_XCX(100,4434
#define APP_XAX(101,4483
#define APP_R8(102,4532
#define APP_R9(103,4580
#define APP_R10(104,4628
#define APP_R11(105,4677
#define APP_R12(106,4726
#define APP_R13(107,4775
#define APP_R14(108,4824
#define APP_R15(109,4873
#define APP_XFLAGS(110,4922
#define APP_EDI 113,5011
#define APP_ESI 114,5035
#define APP_EBP 115,5059
#define APP_ESP 116,5083
#define APP_EBX 117,5107
#define APP_EDX 118,5131
#define APP_ECX 119,5155
#define APP_EAX 120,5179

lib/kstatsx.h,19
KSTAT_DEF(55,2208

lib/mcxtx.h,920
        reg_t xdi;57,2593
        reg_t IF_X64_ELSE(58,2672
        reg_t xsi;61,2847
        reg_t IF_X64_ELSE(62,2926
        reg_t xbp;65,3101
        reg_t IF_X64_ELSE(66,3180
        reg_t xsp;69,3355
        reg_t IF_X64_ELSE(70,3434
        reg_t xbx;73,3609
        reg_t IF_X64_ELSE(74,3688
        reg_t xdx;77,3863
        reg_t IF_X64_ELSE(78,3942
        reg_t xcx;81,4117
        reg_t IF_X64_ELSE(82,4196
        reg_t xax;85,4371
        reg_t IF_X64_ELSE(86,4450
    reg_t r8;89,4624
    reg_t r9;90,4693
    reg_t r10;91,4762
    reg_t r11;92,4832
    reg_t r12;93,4902
    reg_t r13;94,4972
    reg_t r14;95,5042
    reg_t r15;96,5112
        reg_t xflags;99,5201
        reg_t IF_X64_ELSE(100,5289
        byte *xip;xip109,5722
        byte *pc;pc110,5801
        byte *IF_X64_ELSE(IF_X64_ELSE111,5883
    byte padding[padding113,5980
    dr_ymm_t ymm[ymm140,7430

lib/statsx.h,80
# define RSTATS_DEF 69,2780
# define STATS_DEF(71,2816
    STATS_DEF(74,2869

link.c,6386
#define FRAG_INCOMING_ADDR(55,2328
void *stub_heap;stub_heap113,4566
void *stub32_heap;stub32_heap115,4594
# define SEPARATE_STUB_HEAP(119,4632
# define SEPARATE_STUB_HEAP(121,4719
#define SEPARATE_STUB_ALLOC_SIZE(128,4948
#define COARSE_STUB_ALLOC_SIZE(135,5232
static const fragment_t linkstub_empty_fragment 147,5880
static const fragment_t linkstub_empty_fragment_x86 149,5963
static const linkstub_t linkstub_starting 151,6060
static const linkstub_t linkstub_reset 152,6125
static const linkstub_t linkstub_syscall 153,6190
static const linkstub_t linkstub_selfmod 154,6255
static const linkstub_t linkstub_ibl_deleted 155,6320
static const linkstub_t linkstub_sigreturn 157,6397
static const linkstub_t linkstub_asynch 159,6482
static const linkstub_t linkstub_native_exec 161,6554
static const linkstub_t linkstub_native_exec_syscall 163,6705
static const fragment_t linkstub_shared_syscall_trace_fragment 168,6851
static const fragment_t linkstub_shared_syscall_bb_fragment 170,6977
static const linkstub_t linkstub_shared_syscall_trace 185,7735
static const linkstub_t linkstub_shared_syscall_bb 187,7839
static const linkstub_t linkstub_shared_syscall_unlinked 191,8050
static const fragment_t coarse_fragment 196,8207
static const linkstub_t linkstub_coarse_exit 202,8520
static const linkstub_t linkstub_coarse_trace_head_exit 203,8585
static const linkstub_t linkstub_hot_patch 207,8749
static const linkstub_t linkstub_client 212,8913
static const fragment_t linkstub_ibl_trace_fragment 219,9152
static const fragment_t linkstub_ibl_bb_fragment 221,9248
static const linkstub_t linkstub_ibl_trace_ret 244,10397
static const linkstub_t linkstub_ibl_trace_jmp 246,10498
static const linkstub_t linkstub_ibl_trace_call 248,10596
static const linkstub_t linkstub_ibl_bb_ret 250,10696
static const linkstub_t linkstub_ibl_bb_jmp 252,10794
static const linkstub_t linkstub_ibl_bb_call 254,10889
static const linkstub_t linkstub_ibl_trace_ret_client 257,11012
static const linkstub_t linkstub_ibl_bb_ret_client 259,11120
is_empty_fragment(265,11262
empty_fragment_mark_x86(273,11453
typedef struct thread_link_data_t 281,11684
    linkstub_t linkstub_deleted;282,11720
    fragment_t linkstub_deleted_fragment;283,11753
    int linkstub_deleted_ordinal;289,11998
} thread_link_data_t;290,12032
link_reset_init(294,12133
link_reset_free(313,12858
link_init(325,13089
link_exit(332,13159
link_thread_init(340,13277
link_thread_exit(355,13824
linkstubs_init(363,14091
linkstub_size(384,14958
linkstub_propagatable_flags(397,15503
linkstub_frag_offs_at_end(406,15723
use_cbr_fallthrough_short(433,17040
linkstubs_heap_size(461,18263
linkstub_fragment(481,19026
linkstub_owned_by_fragment(551,22137
set_last_exit(582,23282
last_exit_deleted(600,24070
set_coarse_ibl_exit(678,27425
get_last_linkstub_ordinal(717,28781
get_deleted_linkstub(726,29020
get_starting_linkstub(735,29253
get_reset_linkstub(741,29332
get_syscall_linkstub(747,29405
get_selfmod_linkstub(753,29482
get_ibl_deleted_linkstub(759,29559
get_sigreturn_linkstub(766,29656
get_asynch_linkstub(772,29756
get_native_exec_linkstub(779,29838
get_native_exec_syscall_linkstub(785,29923
get_shared_syscalls_unlinked_linkstub(792,30039
get_shared_syscalls_trace_linkstub(798,30149
get_shared_syscalls_bb_linkstub(804,30253
get_hot_patch_linkstub(812,30402
get_client_linkstub(820,30514
is_ibl_sourceless_linkstub(827,30582
get_ibl_sourceless_linkstub(844,31065
is_client_ibl_linkstub(867,31759
get_client_ibl_linkstub(874,31925
get_coarse_exit_linkstub(886,32268
get_coarse_trace_head_exit_linkstub(893,32394
should_separate_stub(899,32487
local_exit_stub_size(905,32649
is_cbr_of_cbr_fallthrough(940,34223
separate_stub_create(949,34446
separate_stub_free(1004,37018
linkstub_shares_next_stub(1055,39260
linkstub_free_exitstubs(1072,39803
linkstubs_shift(1092,40531
is_linkable(1114,41453
link_branch(1169,43657
unlink_branch(1217,45671
incoming_direct_linkstubs_match(1262,47487
incoming_find_link(1278,48234
incoming_link_exists(1318,49878
incoming_remove_link_nosearch(1331,50349
incoming_remove_link_search(1394,53449
incoming_remove_link(1427,54894
add_to_incoming_list(1458,56171
add_private_check_shared(1491,57687
add_future_incoming(1531,59254
add_incoming(1569,60930
incoming_remove_fragment(1589,61715
debug_after_link_change(1732,68483
link_fragment_incoming(1744,68781
link_fragment_outgoing(1797,71128
unlink_fragment_incoming(1877,74466
unlink_fragment_outgoing(1916,76018
link_new_fragment(1950,77231
shift_links_to_new_fragment(2032,80896
static vm_area_vector_t *coarse_stub_areas;coarse_stub_areas2389,98705
coarse_stubs_init(2392,98762
coarse_stubs_free(2400,98969
num_coarse_stubs_for_prefix(2410,99314
coarse_stub_alignment(2419,99644
coarse_stubs_create(2428,99872
    special_heap_iterator_t shi;2478,102272
    cache_pc start,2479,102305
    cache_pc start, end,2479,102305
    cache_pc start, end, pc;2479,102305
    coarse_info_t *info;info2480,102334
} coarse_stubs_iterator_t;2481,102359
coarse_stubs_iterator_start(2484,102399
coarse_stubs_iterator_hasnext(2503,103103
coarse_stubs_iterator_next(2509,103268
coarse_stubs_iterator_stop(2531,103950
coarse_stubs_delete(2537,104060
entrance_stub_create(2579,105568
set_fake_direct_linkstub(2610,106941
print_coarse_incoming(2623,107414
prepend_new_coarse_incoming(2643,108119
fragment_coarse_link_wrapper(2689,109942
fragment_link_lookup_same_sharing(2703,110402
coarse_link_to_fine(2716,110983
coarse_link_direct(2768,113651
link_new_coarse_grain_fragment(2907,120290
coarse_remove_incoming(3143,131896
coarse_remove_outgoing(3184,133640
coarse_mark_trace_head(3247,136601
coarse_unit_unlink(3276,137762
coarse_unit_unlink_outgoing(3357,141190
coarse_unit_outgoing_linked(3386,142226
coarse_stub_lookup_by_target(3414,143043
coarse_lazy_link(3433,143832
fcache_return_coarse_prefix(3560,150240
trace_head_return_coarse_prefix(3577,150745
get_coarse_ibl_prefix(3594,151281
in_coarse_stubs(3613,151879
in_coarse_stub_prefixes(3619,151979
coarse_deref_ibl_prefix(3635,152492
get_stub_coarse_info(3649,152886
coarse_frozen_stub_size(3656,153087
coarse_update_outgoing(3718,155658
coarse_unit_shift_links(3797,159454
coarse_stubs_set_info(3849,161813
coarse_stubs_set_end_pc(3855,161919

link.h,4173
#define _CORE_LINK_H_ 43,2030
    LINK_DIRECT 68,3105
    LINK_DIRECT          = 0x0001,x000168,3105
    LINK_INDIRECT 69,3140
    LINK_INDIRECT        = 0x0002,x000269,3140
    LINK_RETURN 76,3492
    LINK_RETURN          = 0x0004,x000476,3492
    LINK_CALL 78,3618
    LINK_CALL            = 0x0008,x000878,3618
    LINK_JMP 79,3653
    LINK_JMP             = 0x0010,x001079,3653
    LINK_FAR 82,3751
    LINK_FAR             = 0x0020,x002082,3751
    LINK_TARGET_PREFIX 85,3810
    LINK_TARGET_PREFIX   = 0x0040,x004085,3810
    LINK_TRACE_CMP 91,4030
    LINK_TRACE_CMP       = 0x0080,x008091,4030
    LINK_SPECIAL_EXIT 97,4243
    LINK_SPECIAL_EXIT    = 0x0100,x010097,4243
    LINK_CALLBACK_RETURN 99,4293
    LINK_CALLBACK_RETURN = 0x0200,x020099,4293
    LINK_NI_SYSCALL_INT 102,4421
    LINK_NI_SYSCALL_INT  = 0x0200,x0200102,4421
    LINK_NI_SYSCALL 105,4530
    LINK_NI_SYSCALL      = 0x0400,x0400105,4530
    LINK_FINAL_INSTR_SHARED_FLAG 106,4565
    LINK_FINAL_INSTR_SHARED_FLAG = LINK_NI_SYSCALL,106,4565
    LINK_FRAG_OFFS_AT_END=110,4715
    LINK_FRAG_OFFS_AT_END= 0x0800,x0800110,4715
    LINK_END_OF_LIST 112,4751
    LINK_END_OF_LIST     = 0x1000,x1000112,4751
    LINK_FAKE 114,4787
    LINK_FAKE            = 0x2000,x2000114,4787
    LINK_LINKED 116,4823
    LINK_LINKED          = 0x4000,x4000116,4823
    LINK_SEPARATE_STUB 118,4859
    LINK_SEPARATE_STUB   = 0x8000,x8000118,4859
# define LINK_NI_SYSCALL_ALL 124,4978
# define LINK_NI_SYSCALL_ALL 126,5053
#  define LINKCOUNT_FORMAT_STRING 131,5156
#  define LINKCOUNT_FORMAT_STRING 133,5202
struct _linkstub_t 167,6207
    ushort         flags;168,6228
    ushort         cti_offset;174,6493
    ushort         fixed_stub_offset;177,6602
    linkcount_type_t count;182,6817
typedef struct _common_direct_linkstub_t 188,6912
    linkstub_t       l;189,6955
    linkstub_t       *next_incoming;next_incoming200,7438
    fragment_t       *target_fragment;target_fragment207,7711
} common_direct_linkstub_t;209,7757
typedef struct _direct_linkstub_t 213,7836
    common_direct_linkstub_t cdl;214,7872
    app_pc         target_tag;220,8092
    cache_pc       stub_pc;226,8318
} direct_linkstub_t;227,8346
typedef struct _cbr_fallthrough_linkstub_t 239,8887
    common_direct_linkstub_t cdl;251,9481
} cbr_fallthrough_linkstub_t;252,9515
typedef struct _indirect_linkstub_t 256,9619
    linkstub_t       l;257,9657
} indirect_linkstub_t;258,9681
typedef struct _post_linkstub_t 265,9879
    ushort         fragment_offset;273,10318
    ushort         padding;279,10646
} post_linkstub_t;280,10674
typedef struct _coarse_incoming_t 287,10987
        cache_pc stub_pc;289,11035
        linkstub_t *fine_l;fine_l290,11061
    } in;291,11089
    bool coarse;292,11099
    struct _coarse_incoming_t *next;next293,11116
} coarse_incoming_t;294,11153
#define LINKSTUB_FAKE(297,11251
#define LINKSTUB_DIRECT(299,11362
#define LINKSTUB_NORMAL_DIRECT(300,11422
#define LINKSTUB_INDIRECT(302,11528
#define LINKSTUB_CBR_FALLTHROUGH(304,11629
#define EXIT_IS_CALL(308,11788
#define EXIT_IS_JMP(309,11867
#define EXIT_IS_IND_JMP_PLT(310,11945
#define LINKSTUB_FINAL(312,12020
#define LINKSTUB_COARSE_PROXY(315,12157
#define LINKSTUB_SIZE(319,12308
#define LINKSTUB_NEXT_EXIT(325,12592
#define LINKSTUB_NEXT_INCOMING(332,12820
#define CBR_FALLTHROUGH_STUB_OFFS(340,13220
#define EXIT_CTI_PC_HELPER(343,13339
#define EXIT_CTI_PC(347,13466
#define EXIT_STUB_PC_HELPER(352,13664
#define EXIT_STUB_PC(356,13800
#define EXIT_TARGET_TAG(363,14130
# define EXIT_FIXED_STUB_PC(370,14418
# define EXIT_TARGETS_SHARED_SYSCALL(374,14529
# define EXIT_TARGETS_SHARED_SYSCALL(378,14682
#define EXIT_HAS_STUB(382,14819
#define EXIT_HAS_LOCAL_STUB(389,15284
# define IS_COARSE_LINKSTUB(512,19200
# define IS_SHARED_SYSCALLS_UNLINKED_LINKSTUB(517,19401
# define IS_SHARED_SYSCALLS_LINKSTUB(522,19631
# define IS_SHARED_SYSCALLS_TRACE_LINKSTUB(526,19854
# define IS_SHARED_SYSCALLS_UNLINKED_LINKSTUB(529,19968
# define IS_SHARED_SYSCALLS_LINKSTUB(530,20023
# define IS_SHARED_SYSCALLS_TRACE_LINKSTUB(531,20069

loader_shared.c,1051
static privmod_t *modlist;modlist54,2429
static privmod_t privmod_static[privmod_static71,2918
uint privmod_static_idx;73,3012
char search_paths[search_paths79,3257
uint search_paths_idx;81,3347
vm_area_vector_t *modlist_areas;modlist_areas84,3407
loader_init(99,3697
loader_exit(147,5699
loader_thread_init(164,6234
loader_thread_exit(216,8273
locate_and_load_private_library(248,9756
load_private_library(256,10006
unload_private_library(282,10688
in_private_library(295,10984
privload_lookup(303,11134
privload_lookup_by_base(327,11788
privload_insert(351,12424
privload_search_path_exists(414,14599
privload_read_drpath_file(430,15095
privload_load(484,17384
privload_unload(551,20062
# define LIB_SUBDIR 590,21602
# define LIB_SUBDIR 592,21636
#define EXT_SUBDIR 594,21671
privload_add_drext_path(596,21701
privload_load_finalize(633,23174
privload_has_thread_entry(666,24092
privload_modlist_initialized(672,24179
privload_next_module(678,24267
privload_first_module(685,24396
privload_print_modules(693,24542

module_list.c,1387
vm_area_vector_t *loaded_module_areas;loaded_module_areas49,2274
os_get_module_info_lock(66,2959
os_get_module_info_unlock(74,3142
os_get_module_info_write_lock(83,3324
os_get_module_info_write_unlock(91,3514
os_get_module_info_locked(99,3708
os_get_module_info_write_locked(107,3860
module_area_create(118,4097
module_area_delete(132,4575
modules_init(143,4873
is_module_list_initialized(154,5217
modules_reset_list(160,5300
modules_exit(191,6369
module_list_add_mapping(211,6903
module_list_remove_mapping(231,7747
module_list_add(241,8156
module_list_remove(282,9905
os_module_set_flag_value(341,11977
os_module_set_flag(362,12479
os_module_clear_flag(368,12601
os_module_get_flag(374,12726
module_pc_lookup(394,13301
module_overlaps(403,13550
os_get_module_name_internal(414,13891
os_get_module_name(446,14988
os_get_module_name_strdup(461,15295
os_get_module_name_buf(472,15691
os_get_module_name_buf_strdup(486,16195
os_module_get_view_size(494,16481
struct _module_iterator_t 510,16833
    vmvector_iterator_t vmvi;511,16861
module_iterator_start(516,16954
module_iterator_hasnext(529,17406
module_iterator_next(547,17939
module_iterator_stop(560,18335
region_intersection_MD5update(573,18780
module_calculate_digest_helper(594,19583
ensure_section_readable(633,21479
restore_unreadable_section(679,23301
module_calculate_digest(730,25290

module_shared.h,2890
#define MODULE_LIST_H35,1774
typedef struct _module_handle_t * module_handle_t;57,2430
#define MODULE_FILE_VERSION_INVALID 61,2498
typedef union _version_number_t 67,2684
    uint64 version;68,2718
        uint ms;70,2796
        uint ls;71,2825
    } version_uint;72,2854
        ushort p2;74,2933
        ushort p1;75,2962
        ushort p4;76,2991
        ushort p3;77,3020
    } version_parts;78,3049
} version_number_t;79,3115
typedef struct _module_names_t 98,3673
    const char *module_name;module_name99,3706
    const char *file_name;file_name103,4054
    const char *exe_name;exe_name106,4222
    const char *rsrc_name;rsrc_name109,4458
    uint64 inode;113,4721
} module_names_t;115,4794
#define GET_MODULE_NAME(130,5333
#define GET_MODULE_NAME(140,5942
typedef struct _module_area_t 148,6386
    app_pc start;162,7326
    app_pc end;163,7344
    app_pc entry_point;165,7361
    uint flags;167,7386
    module_names_t names;169,7403
    char *full_path;full_path170,7429
    os_module_data_t os_data;172,7451
} module_area_t;173,7520
    MODULE_HAS_PRIMARY_COARSE 178,7671
    MODULE_HAS_PRIMARY_COARSE = 0x00000001,x00000001178,7671
    MODULE_RCT_LOADED 181,7847
    MODULE_RCT_LOADED      = 0x00000002,x00000002181,7847
    MODULE_HAS_BORLAND_SEH 184,7980
    MODULE_HAS_BORLAND_SEH = 0x00000004,x00000004184,7980
    MODULE_BEING_UNLOADED 187,8109
    MODULE_BEING_UNLOADED  = 0x00000008,x00000008187,8109
    MODULE_WAS_EXEMPTED 189,8220
    MODULE_WAS_EXEMPTED    = 0x00000010,x00000010189,8220
    MODULE_RCT_SCANNED 192,8397
    MODULE_RCT_SCANNED     = 0x00000020,x00000020192,8397
    MODULE_DO_NOT_PERSIST 196,8521
    MODULE_DO_NOT_PERSIST  = 0x00000040,x00000040196,8521
    MODULE_NULL_INSTRUMENT 199,8593
    MODULE_NULL_INSTRUMENT = 0x00000080,x00000080199,8593
typedef struct _module_iterator_t module_iterator_t;260,10997
typedef void *module_base_t;module_base_t300,13043
module_info_exists(359,15447
    byte full_MD5[full_MD5383,16248
    byte short_MD5[short_MD5392,16702
} module_digest_t;398,16952
typedef struct _privmod_t 429,18206
    app_pc base;430,18234
    size_t size;431,18251
    const char *name;name432,18268
    char path[path433,18290
    uint ref_count;434,18319
    bool externally_loaded;435,18339
    bool is_client;437,18391
    struct _privmod_t *next;next439,18437
    struct _privmod_t *prev;prev440,18466
    void *os_privmod_data;os_privmod_data441,18495
} privmod_t;442,18522
# define DLL_PROCESS_INIT 447,18583
# define DLL_PROCESS_EXIT 448,18628
# define DLL_THREAD_INIT 449,18673
# define DLL_THREAD_EXIT 450,18717
# define DLL_PROCESS_INIT 452,18767
# define DLL_PROCESS_EXIT 453,18795
# define DLL_THREAD_INIT 454,18823
# define DLL_THREAD_EXIT 455,18851
#define PRIVMOD_STATIC_NUM 459,18942
#define SEARCH_PATHS_NUM 464,19163

moduledb.c,1011
static char **exemption_lists exemption_lists46,2172
#define GET_EXEMPT_LIST(47,2210
moduledb_add_to_exempt_list(55,2505
moduledb_remove_from_exempt_list(79,3334
moduledb_update_exempt_list(89,3745
moduledb_process_relaxation_flags(105,4366
START_DATA_SECTION(146,6247
#define MAX_COMPANY_NAME 166,6998
moduledb_process_image(169,7033
END_DATA_SECTION(240,10488
moduledb_init(246,10631
moduledb_exit(262,11103
moduledb_exempt_list_empty(283,11740
moduledb_check_exempt_list(291,11936
print_moduledb_exempt_lists(308,12498
    PROCESS_CONTROL_NO_HASHLIST,340,13711
    PROCESS_CONTROL_HASHLIST_EMPTY,341,13744
    PROCESS_CONTROL_LONG_LIST,347,13987
    PROCESS_CONTROL_NOT_MATCHED,349,14019
    PROCESS_CONTROL_MATCHED350,14052
# define IS_PROCESS_CONTROL_MATCHED(358,14388
process_control_report_long_list(366,14724
process_control_match(386,15445
process_control_whitelist(463,18925
process_control_blacklist(564,22997
process_control(625,25787
void process_control_init(662,27185

moduledb.h,1308
#define _MODULEDB_H_36,1758
    SECTION_NO_CHG 42,1943
    SECTION_IF_RX 43,1967
    SECTION_IF_X 44,1991
    SECTION_ALLOW 45,2015
    MODULEDB_ALL_SECTIONS_BITS 51,2164
    MODULEDB_ALL_SECTIONS_BITS   = 0x00000003,x0000000351,2164
    MODULEDB_ALL_SECTIONS_SHIFT 52,2247
    MODULEDB_RCT_EXEMPT_TO 53,2330
    MODULEDB_RCT_EXEMPT_TO       = 0x00000004,x0000000453,2330
    MODULEDB_REPORT_ON_LOAD 54,2377
    MODULEDB_REPORT_ON_LOAD      = 0x00000008,x0000000854,2377
    MODULEDB_DLL2HEAP 55,2424
    MODULEDB_DLL2HEAP            = 0x00000010,x0000001055,2424
    MODULEDB_DLL2STACK 56,2471
    MODULEDB_DLL2STACK           = 0x00000020,x0000002056,2471
    MODULEDB_EXEMPT_RCT 61,2608
    MODULEDB_EXEMPT_IMAGE 62,2646
    MODULEDB_EXEMPT_DLL2HEAP 63,2684
    MODULEDB_EXEMPT_DLL2STACK 64,2722
    MODULEDB_EXEMPT_NUM_LISTS 65,2760
} moduledb_exempt_list_t;66,2798
# define PROCESS_CONTROL_MODE_OFF 94,3455
# define PROCESS_CONTROL_MODE_WHITELIST 95,3511
# define PROCESS_CONTROL_MODE_BLACKLIST 96,3567
# define PROCESS_CONTROL_MODE_WHITELIST_INTEGRITY 101,3806
# define IS_PROCESS_CONTROL_MODE_WHITELIST(103,3863
# define IS_PROCESS_CONTROL_MODE_BLACKLIST(105,3986
# define IS_PROCESS_CONTROL_MODE_WHITELIST_INTEGRITY(107,4109
# define IS_PROCESS_CONTROL_ON(109,4252

monitor.c,1804
# define MAX_TRACE_BUFFER_SIZE 69,2824
# define MAX_TRACE_BUFFER_SIZE 71,2880
# define INITIAL_TRACE_BUFFER_SIZE 77,3056
# define INITIAL_TRACE_BUFFER_SIZE 79,3119
#define INITIAL_NUM_BLKS 82,3182
#define INIT_COUNTER_TABLE_SIZE 84,3210
#define COUNTER_TABLE_LOAD 85,3244
#define COUNTER_ALLOC(90,3420
#define COUNTER_FREE(94,3621
#define TH_COUNTER_CREATED_TRACE_VALUE(107,4178
delete_private_copy(110,4272
create_private_copy(149,6062
extend_unmangled_ilist(228,9961
mangle_trace_at_end(285,12472
monitor_init(301,12901
monitor_thread_reset_init(312,13197
monitor_thread_reset_free(318,13293
trace_abort_and_delete(324,13389
monitor_exit(335,13704
monitor_thread_init(343,13878
monitor_thread_exit(383,15642
thcounter_lookup(426,17396
thcounter_add(439,17786
thcounter_remove(460,18531
thcounter_range_remove(480,19215
is_building_trace(506,20174
cur_trace_tag(513,20331
cur_trace_vmlist(520,20474
reset_trace_state(527,20628
monitor_delete_would_abort_trace(620,24956
monitor_remove_fragment(634,25393
unlink_ibt_trace_head(688,27587
mark_trace_head(738,29833
should_be_trace_head_internal_unsafe(884,37198
should_be_trace_head_internal(953,39985
should_be_trace_head(995,42019
check_for_trace_head(1005,42416
monitor_is_linkable(1030,43599
make_room_in_trace_buffer(1072,45232
trace_exit_stub_size_diff(1149,48311
enum { MAX_TRACE_FRACTION_OF_CACHE 1179,49688
get_and_check_add_size(1191,50238
trace_flags_from_component_flags(1229,52214
trace_flags_from_trace_head_flags(1235,52368
end_and_emit_trace(1255,53039
internal_extend_trace(1712,72855
internal_restore_last(1858,78777
monitor_cache_exit(1904,80933
check_fine_to_coarse_trace_head(1945,82849
monitor_cache_enter(1982,84610
trace_abort(2507,107610
get_trace_exit_component_tag(2565,109756

monitor.h,1971
#define _MONITOR_H_ 42,1961
    TRACE_HEAD_YES 69,2998
    TRACE_HEAD_YES           = 0x01,x0169,2998
    TRACE_HEAD_OBTAINED_LOCK 70,3035
    TRACE_HEAD_OBTAINED_LOCK = 0x02,x0270,3035
typedef struct _trace_head_counter_t 117,5147
    app_pc tag;118,5186
    uint   counter;119,5202
    struct _trace_head_counter_t *next;next123,5314
} trace_head_counter_t;124,5354
typedef struct _trace_head_table_t 126,5379
    trace_head_counter_t **counter_table;counter_table127,5416
    uint  hash_bits;128,5458
    ptr_uint_t  hash_mask;129,5479
    uint  hash_mask_offset;130,5506
    hash_function_t hash_func;131,5534
    uint  capacity;132,5565
    uint  entries;133,5610
    uint  load_factor_percent;134,5629
    uint  resize_threshold;135,5699
} trace_head_table_t;136,5762
typedef struct _trace_bb_build_t 138,5785
    trace_bb_info_t info;139,5820
    void *vmlist;vmlist143,5960
    instr_t *end_instr;end_instr144,5978
    bool final_cti;149,6188
} trace_bb_build_t;150,6208
typedef struct _monitor_data_t 152,6229
    app_pc         trace_tag;157,6442
    uint           trace_flags;158,6502
    instrlist_t      trace;159,6570
    byte           *trace_buf;trace_buf160,6651
    uint           trace_buf_size;161,6732
    uint           trace_buf_top;162,6803
    void *         trace_vmlist;163,6886
    uint           num_blks;164,6958
    trace_bb_build_t *blk_info;blk_info165,7039
    uint           blk_info_length;166,7123
    uint           emitted_size;167,7190
    fragment_t *     last_copy;168,7273
    fragment_t *     last_fragment;171,7492
    uint           last_fragment_flags;172,7577
    trace_head_table_t thead_table;178,7842
    instrlist_t    unmangled_ilist;182,7967
    instrlist_t    *unmangled_bb_ilist;unmangled_bb_ilist183,8003
    bool           pass_to_client;185,8138
    uint           final_exit_flags;190,8291
    fragment_t     wrapper;193,8350
} monitor_data_t;195,8429

native_exec.c,639
vm_area_vector_t *native_exec_areas;native_exec_areas55,2374
static const app_pc retstub_start 57,2412
static const app_pc retstub_end 59,2497
native_exec_init(63,2584
native_exec_exit(75,2956
is_native_pc(85,3160
on_native_exec_list(91,3259
check_and_mark_native_exec(121,4321
native_exec_module_load(149,5309
native_exec_module_unload(157,5541
entering_native(169,5965
call_to_native(202,7356
return_to_native(242,8955
back_from_native_common(256,9312
pop_retaddr_for_index(289,10557
return_from_native(312,11514
native_module_callout(335,12301
interpret_back_from_native(353,12951
put_back_native_retaddrs(368,13596

native_exec.h,74
#define _NATIVE_EXEC_H_ 34,1705
native_exec_is_back_from_native(96,3222

nudge.c,251
nudge_terminate_on_dstack(65,2572
generic_nudge_target(81,3183
nudge_thread_cleanup(103,3925
generic_nudge_handler(196,8697
handle_nudge(282,11894
#define VALID_THIN_CLIENT_NUDGES 311,12921
nudge_add_pending(444,18727
nudge_internal(471,19566

nudge.h,26
#define _NUDGE_H_35,1765

options.c,4467
#  define inline 56,2235
#  define snprintf 57,2261
#  define WIN32_LEAN_AND_MEAN58,2290
typedef unsigned int uint;64,2426
# define print_file(66,2454
typedef char bool;69,2496
#  define true 72,2537
#  define false 73,2557
#  define NULL 76,2599
 struct stats_type 79,2628
     int logmask;80,2649
     int loglevel;81,2667
 } thestats;82,2686
 struct stats_type *stats stats84,2700
# define ASSERT(89,2921
# define OPTION_PARSE_ERROR(93,3055
static void ignore_varargs_function(95,3103
# define FATAL_USAGE_ERROR(97,3219
# define USAGE_ERROR 99,3312
# define DOLOG(100,3371
#  define OPTION_COMMAND_INTERNAL(109,3556
#  define OPTION_COMMAND(110,3692
const internal_options_t default_internal_options 115,3951
#undef OPTION_COMMAND_INTERNAL118,4032
#undef OPTION_COMMAND119,4063
#  define OPTION_COMMAND_INTERNAL 124,4125
#  define OPTION_COMMAND_INTERNAL(136,4778
#define OPTION_COMMAND(141,4950
const options_t default_options 146,5197
# define SELF_PROTECT_OPTIONS(152,5333
# define SELF_UNPROTECT_OPTIONS(153,5407
# define OPTIONS_PROTECTED(157,5608
char option_string[option_string162,5783
# define ASSERT_OWN_OPTIONS_LOCK(163,5830
# define CORE_STATIC 164,5897
options_t dynamo_options 166,5948
options_t temp_options 176,6413
# define ASSERT_OWN_OPTIONS_LOCK(187,6821
# define CORE_STATIC188,6860
#undef OPTION_COMMAND191,6954
set_dynamo_options_defaults(198,7072
#undef OPTION_COMMAND_INTERNAL203,7252
#  define OPTION_COMMAND_INTERNAL 207,7425
#  define OPTION_COMMAND_INTERNAL(209,7481
getword_common(219,7933
getword(281,9676
parse_word(288,9869
#define ISBOOL_bool 293,10034
#define ISBOOL_uint 294,10056
#define ISBOOL_uint_size 295,10078
#define ISBOOL_uint_time 296,10105
#define ISBOOL_uint_addr 297,10132
#define ISBOOL_pathstring_t 298,10159
#define ISBOOL_liststring_t 299,10189
parse_bool(302,10232
parse_uint(308,10311
parse_uint_size(325,10818
parse_uint_time(354,11717
parse_uint_addr(379,12519
parse_pathstring_t(395,13004
parse_liststring_t(407,13518
#define OPTION_COMMAND(439,14915
set_dynamo_options_common(464,16565
#undef OPTION_COMMAND520,18756
set_dynamo_options(523,18795
set_dynamo_options_other_process(530,18984
check_param_bounds(542,19332
PRINT_STRING_bool(579,20671
PRINT_STRING_uint(585,20852
#define PRINT_STRING_uint_size(592,21131
#define PRINT_STRING_uint_time(596,21367
#define PRINT_STRING_uint_addr(598,21497
#define PRINT_STRING_pathstring_t(600,21631
#define PRINT_STRING_liststring_t(601,21761
#define DIFF_bool(604,21893
#define DIFF_uint(605,21947
#define DIFF_uint_size(606,22001
#define DIFF_uint_time(607,22060
#define DIFF_uint_addr(608,22119
#define DIFF_pathstring_t(609,22178
#define DIFF_liststring_t(610,22243
#define COPY_bool(612,22309
#define COPY_uint(613,22362
#define COPY_uint_size(614,22415
#define COPY_uint_time(615,22473
#define COPY_uint_addr(616,22531
#define COPY_pathstring_t(617,22589
#define COPY_liststring_t(618,22670
get_dynamo_options_string(622,22815
#define OPTION_COMMAND(627,22958
#undef OPTION_COMMAND640,23803
get_pcache_dynamo_options_string(652,24071
#define OPTION_COMMAND(658,24267
#undef OPTION_COMMAND671,25115
has_pcache_dynamo_options(680,25319
#define OPTION_COMMAND(682,25394
#undef OPTION_COMMAND692,26020
enum {OPTION_TYPE_STATIC,OPTION_TYPE_STATIC696,26063
enum {OPTION_TYPE_STATIC, OPTION_TYPE_DYNAMIC}OPTION_TYPE_DYNAMIC696,26063
static char optionbuff[optionbuff701,26279
static char new_optionbuff[new_optionbuff702,26322
update_dynamic_options(708,26509
#define OPTION_COMMAND(715,26731
#undef OPTION_COMMAND742,28620
check_list_default_and_append(753,28966
#define SECURITY_OPTION_CONSISTENT(789,30395
check_option_compatibility_helper(800,31031
# define MAX_NUM_LIB_TLS_PAGES 1872,78965
check_option_compatibility(1903,80132
check_dynamic_option_compatibility(1912,80353
options_init(1922,80628
options_exit(1942,81284
options_make_writable(1949,81403
options_restore_readonly(1960,81660
synchronize_dynamic_options(1969,81867
get_process_options(2058,85276
dr_get_string_option(2103,87106
#define OPTION_COMMAND(2108,87289
#undef OPTION_COMMAND2116,87785
dr_get_integer_option(2125,87917
#define OPTION_COMMAND(2136,88397
#undef OPTION_COMMAND2144,88893
show_dynamo_options(2155,89042
show_dynamo_option_descriptions(2170,89536
#define OPTION_COMMAND(2172,89572
#undef OPTION_COMMAND2179,89982
unit_test_options(2183,90012

options.h,3755
#define _OPTIONS_H_44,1923
    OPTION_ENABLED 57,2243
    OPTION_ENABLED     = 0x1,x157,2243
    OPTION_DISABLED 58,2314
    OPTION_DISABLED    = 0x0,x058,2314
    OPTION_BLOCK 75,3256
    OPTION_BLOCK       = 0x2,x275,3256
    OPTION_NO_BLOCK 76,3286
    OPTION_NO_BLOCK    = 0x0,x076,3286
    OPTION_HANDLING 79,3403
    OPTION_HANDLING    = 0x4,x479,3403
    OPTION_NO_HANDLING 80,3483
    OPTION_NO_HANDLING = 0x0,x080,3483
    OPTION_REPORT 83,3600
    OPTION_REPORT      = 0x8,x883,3600
    OPTION_NO_REPORT 84,3675
    OPTION_NO_REPORT   = 0x0,x084,3675
    OPTION_BLOCK_IGNORE_DETECT 87,3811
    OPTION_BLOCK_IGNORE_DETECT  = 0x20,x2087,3811
    OPTION_CUSTOM 90,3938
    OPTION_CUSTOM      = 0x100,x10090,3938
    OPTION_NO_CUSTOM 91,4027
    OPTION_NO_CUSTOM   = 0x0,x091,4027
} security_option_t;92,4116
    HOOKED_TRAMPOLINE_DIE 97,4231
    HOOKED_TRAMPOLINE_SQUASH 98,4302
    HOOKED_TRAMPOLINE_CHAIN 99,4387
    HOOKED_TRAMPOLINE_HOOK_DEEPER 100,4471
    HOOKED_TRAMPOLINE_MAX 101,4555
    APPFAULT_FAULT 109,4786
    APPFAULT_FAULT    = 0x0001,x0001109,4786
    APPFAULT_CRASH 110,4867
    APPFAULT_CRASH    = 0x0002,x0002110,4867
#define uint_size 118,5189
#define uint_time 119,5212
#define uint_addr 121,5306
#define ISSTRING_bool 127,5509
#define ISSTRING_uint 128,5533
#define ISSTRING_uint_size 129,5557
#define ISSTRING_uint_time 130,5586
#define ISSTRING_ptr_uint_t 131,5615
#define ISSTRING_pathstring_t 132,5645
#define ISSTRING_liststring_t 133,5677
    OP_PCACHE_NOP 137,5783
    OP_PCACHE_LOCAL 138,5836
    OP_PCACHE_GLOBAL 142,6081
} op_pcache_t;143,6158
#define OPTION_STRING(155,6762
#define EMPTY_STRING 156,6813
#define OPTION_COMMAND(157,6864
#define OPTION_COMMAND_INTERNAL(163,7229
enum option_is_internal 169,7589
#undef OPTION_COMMAND172,7643
#undef OPTION_COMMAND_INTERNAL173,7665
#undef OPTION_STRING174,7696
#undef EMPTY_STRING175,7717
#define OPTION_STRING(178,7770
#define EMPTY_STRING 179,7797
#  define OPTION_COMMAND_INTERNAL(183,7945
#  define OPTION_COMMAND_INTERNAL(187,8135
#define OPTION_COMMAND(191,8313
typedef struct _options_t 194,8496
} options_t;196,8549
#undef OPTION_COMMAND198,8563
#undef OPTION_COMMAND_INTERNAL199,8585
#  define OPTION_COMMAND(203,8705
#  define OPTION_COMMAND_INTERNAL(205,8857
typedef struct _internal_options_t 208,9046
} internal_options_t;210,9108
#  undef OPTION_COMMAND211,9130
#  undef OPTION_COMMAND_INTERNAL212,9154
#undef uint_size215,9195
#undef uint_time216,9212
#undef uint_addr217,9229
#define IS_OPTION_INTERNAL(232,9749
#define IS_OPTION_STRING(233,9810
#define DEFAULT_OPTION_VALUE(236,9995
#  define DEFAULT_INTERNAL_OPTION_VALUE 239,10182
#  define DEFAULT_INTERNAL_OPTION_VALUE(241,10249
#define SET_DEFAULT_VALUE(248,10593
#define SYNCHRONIZE_DYNAMIC_OPTION(277,11264
#define SHARED_FRAGMENTS_ENABLED(313,12496
#define SCRATCH_ALWAYS_TLS(322,12908
#define PRIVATE_TRACES_ENABLED(326,13087
#define SHARED_BB_IB_TARGETS(330,13227
#define SHARED_BB_ONLY_IB_TARGETS(340,13646
#define SHARED_IB_TARGETS(344,13791
#define SHARED_IBT_TABLES_ENABLED(348,13930
#define TRACEDUMP_ENABLED(351,14054
#define RUNNING_WITHOUT_CODE_CACHE(357,14283
# define CLIENT_OR_STANDALONE(361,14469
# define CLIENT_OR_STANDALONE(364,14582
#define IS_STRING_OPTION_EMPTY(375,14950
#define IS_LISTSTRING_OPTION_FORALL(380,15143
#  define IS_INTERNAL_STRING_OPTION_EMPTY(383,15247
#  define IS_INTERNAL_STRING_OPTION_EMPTY(385,15326
#define COARSE_FILL_IBL_MASK(389,15467
string_option_read_lock(393,15597
string_option_read_unlock(397,15678
    LIST_NO_MATCH 402,15760
    LIST_ON_DEFAULT 403,15814
    LIST_ON_APPEND 404,15839
} list_default_or_append_t;405,15864

optionsx.h,1884
#define OPTION_DEFAULT(71,3068
#define OPTION_NAME_DEFAULT(75,3259
#define OPTION_NAME(79,3446
#define OPTION(82,3590
#define PC_OPTION_DEFAULT(85,3712
#define PC_OPTION(89,3905
#define PCL_OPTION_DEFAULT(92,4031
#define PCL_OPTION(96,4223
#define DYNAMIC_OPTION_DEFAULT(101,4470
#define DYNAMIC_OPTION(104,4631
#define DYNAMIC_PCL_OPTION_DEFAULT(107,4761
#define DYNAMIC_PCL_OPTION(110,4924
#define OPTION_ALIAS(115,5237
#define OPTION_DEFAULT_INTERNAL(125,5967
#define OPTION_NAME_INTERNAL(128,6163
#define OPTION_INTERNAL(131,6362
#define PC_OPTION_DEFAULT_INTERNAL(134,6473
#define PC_OPTION_INTERNAL(137,6675
#define DISABLE_RESET(141,6820
#define REENABLE_RESET(158,7751
#define DISABLE_TRACES(181,9263
#define REENABLE_TRACES(189,9671
#define ENABLE_SECURITY(198,10080
    DYNAMIC_OPTION_DEFAULT(218,11383
    PC_OPTION_INTERNAL(227,11756
    OPTION_DEFAULT(272,14363
#   define DISABLE_PROBE_API(447,23071
    PC_OPTION_INTERNAL(485,24802
    OPTION_DEFAULT_INTERNAL(714,37735
    OPTION_DEFAULT_INTERNAL(781,41699
    OPTION_DEFAULT(847,45015
    OPTION_DEFAULT(918,48789
    OPTION_DEFAULT(1235,66866
    OPTION_DEFAULT_INTERNAL(1245,67241
    DYNAMIC_PCL_OPTION(1534,84322
    DYNAMIC_OPTION(1540,84760
    DYNAMIC_OPTION(1549,85369
    DYNAMIC_OPTION_DEFAULT(1554,85737
    OPTION_DEFAULT(1802,101505
#   define ENABLE_COARSE_UNITS(1883,107295
    OPTION_ALIAS(1899,108246
    OPTION_DEFAULT(2085,118905
    OPTION_DEFAULT(2185,125579
    OPTION_DEFAULT(2481,141138
    OPTION_DEFAULT_INTERNAL(2580,146877
    OPTION_DEFAULT_INTERNAL(2614,148819
#define OPTIMIZE_OPTION(2644,150198
# undef OPTIMIZE_OPTION2683,151808
    DYNAMIC_OPTION_DEFAULT(2743,154828
#undef OPTION2826,159033
#undef OPTION_NAME2827,159047
#undef OPTION_DEFAULT2828,159066
#undef DYNAMIC_OPTION2830,159089
#undef DYNAMIC_OPTION_DEFAULT2831,159111

os_shared.h,11012
#define OS_SHARED_H41,1899
enum {VM_ALLOCATION_BOUNDARY VM_ALLOCATION_BOUNDARY43,1920
    HEAP_ERROR_SUCCESS 85,3468
    HEAP_ERROR_CANT_RESERVE_IN_REGION 87,3587
    HEAP_ERROR_NOT_AT_PREFERRED 89,3721
typedef uint heap_error_code_t;91,3761
    RAW_ALLOC_RESERVE_ONLY 97,3891
    RAW_ALLOC_RESERVE_ONLY = 0x0001,x000197,3891
    RAW_ALLOC_COMMIT_ONLY 98,3928
    RAW_ALLOC_COMMIT_ONLY  = 0x0002,x000298,3928
    RAW_ALLOC_32BIT 101,3984
    RAW_ALLOC_32BIT        = 0x0004,x0004101,3984
    DR_STATE_PEB 211,8133
    DR_STATE_PEB              = 0x0001,x0001211,8133
    DR_STATE_TEB_MISC 212,8205
    DR_STATE_TEB_MISC         = 0x0002,x0002212,8205
    DR_STATE_STACK_BOUNDS 213,8286
    DR_STATE_STACK_BOUNDS     = 0x0004,x0004213,8286
    DR_STATE_ALL 215,8377
    DR_STATE_ALL              =     ~0,215,8377
} dr_state_flags_t;216,8443
    TERMINATE_PROCESS 247,9129
    TERMINATE_PROCESS = 0x1,x1247,9129
    TERMINATE_THREAD 248,9158
    TERMINATE_THREAD  = 0x2,x2248,9158
    TERMINATE_CLEANUP 260,9893
    TERMINATE_CLEANUP = 0x4 x4260,9893
} terminate_flags_t;261,9977
    ILLEGAL_INSTRUCTION_EXCEPTION,267,10172
    UNREADABLE_MEMORY_EXECUTION_EXCEPTION,268,10207
    IN_PAGE_ERROR_EXCEPTION,269,10250
} exception_type_t;270,10279
    DUMPCORE_INTERNAL_EXCEPTION 278,10533
    DUMPCORE_INTERNAL_EXCEPTION = 0x0001,x0001278,10533
    DUMPCORE_SECURITY_VIOLATION 279,10575
    DUMPCORE_SECURITY_VIOLATION = 0x0002,x0002279,10575
    DUMPCORE_DEADLOCK 280,10617
    DUMPCORE_DEADLOCK           = 0x0004,x0004280,10617
    DUMPCORE_ASSERTION 281,10659
    DUMPCORE_ASSERTION          = 0x0008,x0008281,10659
    DUMPCORE_FATAL_USAGE_ERROR 282,10701
    DUMPCORE_FATAL_USAGE_ERROR  = 0x0010,x0010282,10701
    DUMPCORE_CLIENT_EXCEPTION 284,10767
    DUMPCORE_CLIENT_EXCEPTION   = 0x0020,x0020284,10767
    DUMPCORE_TIMEOUT 286,10816
    DUMPCORE_TIMEOUT            = 0x0040,x0040286,10816
    DUMPCORE_CURIOSITY 287,10858
    DUMPCORE_CURIOSITY          = 0x0080,x0080287,10858
    DUMPCORE_HOTP_FAILURE 290,11052
    DUMPCORE_HOTP_FAILURE       = 0x0100,x0100290,11052
    DUMPCORE_OUT_OF_MEM 292,11101
    DUMPCORE_OUT_OF_MEM         = 0x0200,x0200292,11101
    DUMPCORE_OUT_OF_MEM_SILENT 293,11143
    DUMPCORE_OUT_OF_MEM_SILENT  = 0x0400,x0400293,11143
    DUMPCORE_INCLUDE_STACKDUMP 295,11230
    DUMPCORE_INCLUDE_STACKDUMP  = 0x0800,x0800295,11230
    DUMPCORE_WAIT_FOR_DEBUGGER 296,11272
    DUMPCORE_WAIT_FOR_DEBUGGER  = 0x1000,x1000296,11272
    DUMPCORE_HOTP_DETECTION 299,11418
    DUMPCORE_HOTP_DETECTION     = 0x2000,x2000299,11418
    DUMPCORE_HOTP_PROTECTION 300,11493
    DUMPCORE_HOTP_PROTECTION    = 0x4000,x4000300,11493
    DUMPCORE_DR_ABORT 303,11599
    DUMPCORE_DR_ABORT           = 0x8000,x8000303,11599
    DUMPCORE_FORGE_ILLEGAL_INST 307,11793
    DUMPCORE_FORGE_ILLEGAL_INST = 0x10000,x10000307,11793
    DUMPCORE_FORGE_UNREAD_EXEC 308,11836
    DUMPCORE_FORGE_UNREAD_EXEC  = 0x20000,x20000308,11836
    DUMPCORE_APP_EXCEPTION 314,12244
    DUMPCORE_APP_EXCEPTION      = 0x40000,x40000314,12244
    DUMPCORE_TRY_EXCEPT 315,12287
    DUMPCORE_TRY_EXCEPT         = 0x80000,x80000315,12287
    DUMPCORE_UNSUPPORTED_APP 316,12367
    DUMPCORE_UNSUPPORTED_APP    = 0x100000,x100000316,12367
    DUMPCORE_OPTION_PAUSE 319,12424
    DUMPCORE_OPTION_PAUSE       = DUMPCORE_WAIT_FOR_DEBUGGER 319,12424
                                  DUMPCORE_INTERNAL_EXCEPTION 320,12488
                                  DUMPCORE_SECURITY_VIOLATION 321,12552
                                  DUMPCORE_DEADLOCK 322,12616
                                  DUMPCORE_ASSERTION 323,12680
                                  DUMPCORE_FATAL_USAGE_ERROR 324,12744
                                  DUMPCORE_CLIENT_EXCEPTION 326,12833
                                  DUMPCORE_UNSUPPORTED_APP 328,12905
                                  DUMPCORE_TIMEOUT 329,12969
                                  DUMPCORE_CURIOSITY 330,13033
                                  DUMPCORE_DR_ABORT 332,13122
                                  DUMPCORE_OUT_OF_MEM 334,13194
                                  DUMPCORE_OUT_OF_MEM_SILENT,335,13258
typedef void * dr_auxlib_handle_t;356,13898
typedef void (*dr_auxlib_routine_ptr_t)dr_auxlib_routine_ptr_t358,13998
typedef uint64 dr_auxlib64_handle_t;364,14235
typedef uint64 dr_auxlib64_routine_ptr_t;366,14344
typedef void * shlib_handle_t;375,14638
typedef void (*shlib_routine_ptr_t)shlib_routine_ptr_t376,14669
typedef uint64 dr_auxlib64_handle_t;381,14863
typedef uint64 dr_auxlib64_routine_ptr_t;382,14900
#define DR_MEMPROT_NONE 405,15658
#define DR_MEMPROT_READ 406,15735
#define DR_MEMPROT_WRITE 407,15790
#define DR_MEMPROT_EXEC 408,15846
# define DR_MEMPROT_GUARD 410,15919
#define DR_MEMPROT_PRETEND_WRITE 420,16411
    DR_MEMTYPE_FREE,426,16530
    DR_MEMTYPE_IMAGE,427,16588
    DR_MEMTYPE_DATA,428,16652
    DR_MEMTYPE_RESERVED,429,16716
} dr_mem_type_t;430,16798
typedef struct _dr_mem_info_t 435,16885
    byte          *base_pc;base_pc437,16962
    size_t        size;439,17016
    uint          prot;441,17093
    dr_mem_type_t type;443,17143
} dr_mem_info_t;444,17167
#define MEMPROT_NONE 448,17210
#define MEMPROT_READ 449,17248
#define MEMPROT_WRITE 450,17286
#define MEMPROT_EXEC 451,17325
# define MEMPROT_GUARD 453,17378
#define SAFE_READ_VAL(469,18099
    SELFPROT_DATA_RARE 527,20826
    SELFPROT_DATA_RARE   = 0x001,x001527,20826
    SELFPROT_DATA_FREQ 531,21018
    SELFPROT_DATA_FREQ   = 0x002,x002531,21018
    SELFPROT_DATA_CXTSW 535,21173
    SELFPROT_DATA_CXTSW  = 0x004,x004535,21173
    SELFPROT_GLOBAL 543,21481
    SELFPROT_GLOBAL      = 0x008,x008543,21481
    SELFPROT_DCONTEXT 544,21515
    SELFPROT_DCONTEXT    = 0x010,x010544,21515
    SELFPROT_LOCAL 546,21681
    SELFPROT_LOCAL       = 0x020,x020546,21681
    SELFPROT_CACHE 547,21715
    SELFPROT_CACHE       = 0x040,x040547,21715
    SELFPROT_STACK 548,21799
    SELFPROT_STACK       = 0x080,x080548,21799
    SELFPROT_GENCODE 551,22047
    SELFPROT_GENCODE     = 0x100,x100551,22047
    SELFPROT_ON_CXT_SWITCH 562,22513
    SELFPROT_ON_CXT_SWITCH = (SELFPROT_DATA_CXTSW 562,22513
    SELFPROT_ON_CXT_SWITCH = (SELFPROT_DATA_CXTSW | SELFPROT_GLOBAL562,22513
                              | SELFPROT_DATA_FREQ)565,22736
    SELFPROT_ANY_DATA_SECTION 566,22789
    SELFPROT_ANY_DATA_SECTION = (SELFPROT_DATA_RARE 566,22789
    SELFPROT_ANY_DATA_SECTION = (SELFPROT_DATA_RARE | SELFPROT_DATA_FREQ 566,22789
                                 SELFPROT_DATA_CXTSW)567,22864
    DATASEC_NEVER_PROT 574,23019
    DATASEC_RARELY_PROT,575,23047
    DATASEC_FREQ_PROT,576,23072
    DATASEC_CXTSW_PROT,577,23095
    DATASEC_NUM,578,23119
#define DATASEC_WRITABLE(591,23484
#define NEVER_PROTECTED_SECTION 598,23838
#define RARELY_PROTECTED_SECTION 599,23882
#define FREQ_PROTECTED_SECTION 600,23923
#define CXTSW_PROTECTED_SECTION 601,23967
#define DATASEC_PROTECTED(607,24184
#define DECLARE_FREQPROT_VAR(613,24449
#define DECLARE_CXTSWPROT_VAR(618,24666
#define DECLARE_NEVERPROT_VAR(623,24886
#define SELF_PROTECT_ON_CXT_SWITCH 628,25106
#define SELF_PROTECT_LOCAL(633,25330
#define SELF_PROTECT_GLOBAL(638,25507
#define ASSERT_LOCAL_HEAP_PROTECTED(643,25683
#define ASSERT_LOCAL_HEAP_UNPROTECTED(646,25841
#define SELF_PROTECT_DATASEC(650,26003
#define SELF_UNPROTECT_DATASEC(654,26181
#define OS_OPEN_READ 681,27082
#define OS_OPEN_WRITE 682,27115
#define OS_OPEN_APPEND 683,27148
#define OS_OPEN_REQUIRE_NEW 684,27221
#define OS_EXECUTE 685,27254
#define OS_SHARE_DELETE 686,27323
#define OS_OPEN_FORCE_OWNER 687,27392
#define OS_OPEN_ALLOW_LARGE 688,27461
#define OS_OPEN_CLOSE_ON_FORK 689,27532
#define OS_OPEN_RESERVED 690,27593
    CREATE_DIR_ALLOW_EXISTING 705,28322
    CREATE_DIR_ALLOW_EXISTING = 0x0,x0705,28322
    CREATE_DIR_REQUIRE_NEW 711,28603
    CREATE_DIR_REQUIRE_NEW    = 0x1,x1711,28603
    CREATE_DIR_FORCE_OWNER 712,28640
    CREATE_DIR_FORCE_OWNER    = 0x2,x2712,28640
} create_directory_flags_t;713,28677
#define OS_SEEK_SET 726,29270
#define OS_SEEK_CUR 727,29313
#define OS_SEEK_END 728,29364
    STACK_EXECUTION_VIOLATION 785,31858
    HEAP_EXECUTION_VIOLATION 786,31900
    RETURN_TARGET_VIOLATION 787,31942
    RETURN_DIRECT_RCT_VIOLATION 788,31985
    INDIRECT_CALL_RCT_VIOLATION 789,32055
    INDIRECT_JUMP_RCT_VIOLATION 790,32097
    HOT_PATCH_DETECTOR_VIOLATION 792,32170
    HOT_PATCH_PROTECTOR_VIOLATION 793,32212
    HOT_PATCH_FAILURE 795,32335
    ATTACK_SIMULATION_VIOLATION 798,32404
    ATTACK_SIM_NUDGE_VIOLATION 799,32447
    ASLR_TARGET_VIOLATION 802,32538
    GBOP_SOURCE_VIOLATION 804,32593
    PROCESS_CONTROL_VIOLATION 807,32677
    APC_THREAD_SHELLCODE_VIOLATION 809,32748
    INVALID_VIOLATION 811,32917
    ALLOWING_OK 816,33162
    ALLOWING_BAD 817,33204
    NO_VIOLATION_BAD_INTERNAL_STATE 819,33257
    NO_VIOLATION_OK_INTERNAL_STATE 820,33299
} security_violation_t;821,33340
    INITIAL_STACK_EMPTY 833,33770
    INITIAL_STACK_BOTTOM_REACHED 834,33812
    INITIAL_STACK_BOTTOM_NOT_REACHED 835,33854
} initial_call_stack_status_t;836,33895
typedef HANDLE event_t;855,34594
typedef struct linux_event_t *event_t;event_t857,34624
# define POST_SYSCALL_PC(911,36402
# define POST_SYSCALL_PC(918,36867
    AFTER_INTERCEPT_LET_GO,925,37052
    AFTER_INTERCEPT_LET_GO_ALT_DYN,926,37080
    AFTER_INTERCEPT_TAKE_OVER,930,37339
    AFTER_INTERCEPT_DYNAMIC_DECISION,931,37370
    AFTER_INTERCEPT_TAKE_OVER_SINGLE_SHOT,934,37513
} after_intercept_action_t;935,37598
    void *callee_arg;callee_arg945,37979
    app_pc start_pc;946,38053
    priv_mcontext_t mc;947,38118
} app_state_at_intercept_t;948,38171
typedef after_intercept_action_t intercept_function_t(952,38324
    JMP_REL32_OPCODE 958,38567
    JMP_REL32_OPCODE  = 0xe9,xe9958,38567
    JMP_REL32_SIZE 959,38597
    CALL_REL32_OPCODE 960,38667
    CALL_REL32_OPCODE = 0xe8,xe8960,38667
    JMP_ABS_IND64_OPCODE 962,38709
    JMP_ABS_IND64_OPCODE    = 0xff,xff962,38709
    JMP_ABS_IND64_SIZE 963,38745
    JMP_ABS_MEM_IND64_MODRM 964,38825
    JMP_ABS_MEM_IND64_MODRM = 0x25,x25964,38825
#define INJECT_LOCATION_IS_LDR(988,39977
#define INJECT_LOCATION_IS_LDR_NON_DEFAULT(989,40049
    INJECT_LOCATION_Invalid 991,40139
    INJECT_LOCATION_LdrpLoadDll 992,40207
    INJECT_LOCATION_LdrpLoadImportModule 993,40272
    INJECT_LOCATION_LdrCustom 994,40336
    INJECT_LOCATION_LdrLoadDll 995,40407
    INJECT_LOCATION_LdrDefault 996,40468
    INJECT_LOCATION_KiUserApc 1004,40973
    INJECT_LOCATION_KiUserException 1005,41015
    INJECT_LOCATION_MAX 1006,41088
    INJECT_LOCATION_MAX = INJECT_LOCATION_KiUserException,1006,41088
#define LANDING_PAD_AREA_SIZE 1038,42115
#define MAX_HOOK_DISPLACED_LENGTH 1039,42155
# define LANDING_PAD_SIZE 1044,42403
# define LANDING_PAD_SIZE 1049,42617

perfctr.c,265
int perfctr_eventset;48,2017
struct {int num;49,2039
struct {int num;char *name;name49,2039
struct {int num;char *name;} papi_events[papi_events49,2039
void hardware_perfctr_init(82,3555
void hardware_perfctr_exit(132,4943
void perfctr_update_gui(154,5525

perfctr.h,40
#define GUI_ALARM_UPDATE_RATIO 39,1842

perscache.c,2357
#define MAX_PCACHE_OPTIONS_STRING 61,2293
#define OPTION_STRING_ALIGNMENT 64,2473
#define CLIENT_ALIGNMENT 66,2599
typedef struct _jmp_tgt_list_t 69,2667
    app_pc tag;70,2701
    cache_pc jmp_end_pc;71,2717
    struct _jmp_tgt_list_t *next;next72,2742
} jmp_tgt_list_t;73,2776
coarse_unit_mark_primary(110,4019
coarse_unit_unmark_primary(134,4881
coarse_unit_mark_in_use(149,5329
coarse_unit_create(156,5456
coarse_unit_free(221,8530
coarse_unit_init(245,9316
coarse_unit_reset_free_internal(260,9835
coarse_unit_reset_free(371,14327
static file_t perscache_user_directory 382,14757
perscache_init(385,14818
perscache_fast_exit(434,17055
perscache_slow_exit(449,17465
coarse_units_freeze_translate(460,17727
coarse_units_freeze_all(489,18871
coarse_replace_unit(611,24818
coarse_unit_freeze(668,27080
transfer_coarse_stub(882,36766
transfer_coarse_stub_fix_trace_head(936,39284
push_pending_freeze(959,40361
redirect_to_tgt_ibl_prefix(1021,43193
transfer_coarse_fragment(1041,44021
coarse_unit_shift_jmps_internal(1196,50728
coarse_unit_shift_jmps(1283,55112
coarse_merge_process_stub(1315,56648
coarse_merge_update_jmps(1421,62318
coarse_merge_without_dups(1548,68827
coarse_unit_merge(1840,84947
perscache_dirname(2139,98686
get_persist_dir(2178,100281
coarse_unit_check_persist_space(2205,101205
persist_get_options_level(2235,102318
persist_get_relevant_options(2255,103193
get_persist_filename(2275,104098
print_module_digest(2398,109246
persist_calculate_self_digest(2409,109622
persist_calculate_module_digest(2430,110491
persist_modinfo_cmp(2472,112583
persist_record_base_mismatch(2503,114386
get_unique_name(2525,115334
coarse_unit_merge_with_disk(2558,116782
coarse_unit_calculate_persist_info(2666,122175
coarse_unit_merge_persist_info(2788,127695
write_persist_file(2900,132548
pad_persist_file(2913,133020
coarse_unit_set_persist_data(2935,133815
coarse_unit_persist_rename(3125,141448
instrument_persist_section(3175,143726
dr_persist_start(3204,144874
dr_persist_size(3213,145072
dr_fragment_persistable(3222,145282
coarse_unit_persist(3251,146275
persist_check_option_compat(3603,161393
pcache_dir_check_permissions(3680,164691
persist_get_name_and_open(3719,166387
coarse_unit_load(3792,169448
exists_coarse_ibl_pending_table(4372,195071
mark_module_exempted(4396,196098

perscache.h,6395
#define _PERSCACHE_H_ 41,1871
struct _coarse_info_t 70,3262
    bool frozen:frozen71,3286
    bool persisted:persisted72,3305
    bool in_use:in_use73,3327
    bool has_persist_info:has_persist_info77,3508
    bool primary_for_module:primary_for_module82,3734
    bool stubs_readonly:stubs_readonly84,3820
    bool is_local:is_local89,4011
    void *cache;cache92,4103
    void *htable;htable98,4352
    void *th_htable;th_htable99,4431
    void *pclookup_last_htable;pclookup_last_htable102,4579
    void *stubs;stubs104,4667
    cache_pc fcache_return_prefix;106,4711
    cache_pc trace_head_return_prefix;107,4746
    cache_pc ibl_ret_prefix;108,4785
    cache_pc ibl_call_prefix;109,4814
    cache_pc ibl_jmp_prefix;110,4844
    coarse_incoming_t *incoming;incoming112,4874
    cache_pc cache_start_pc;117,5053
    cache_pc cache_end_pc;118,5082
    cache_pc stubs_start_pc;119,5149
    cache_pc stubs_end_pc;120,5206
    size_t mmap_size;125,5502
    void *pclookup_htable;pclookup_htable127,5606
    uint flags;131,5760
    cache_pc mmap_pc;132,5834
    size_t mmap_ro_size;137,6079
    file_t fd;139,6183
    size_t persisted_source_mmap_size;144,6335
    app_pc_table_t *rct_table;rct_table147,6433
    app_pc_table_t *rac_table;rac_table148,6464
    uint ibl_pending_used;152,6630
    app_rva_t *hotp_ppoint_vec;hotp_ppoint_vec163,7156
    uint hotp_ppoint_vec_num;164,7188
    uint stubs_write_count;168,7332
    struct _coarse_info_t *non_frozen;non_frozen174,7562
    mutex_t lock;187,7985
    mutex_t incoming_lock;190,8145
    app_pc base_pc;195,8280
    app_pc end_pc;196,8339
    const char *module;module198,8410
    module_digest_t module_md5;203,8599
    app_pc persist_base;205,8656
    ssize_t mod_shift;207,8721
# define COARSE_32_FLAG(214,8902
# define COARSE_32_FLAG(216,8996
typedef struct _pending_freeze_t 243,9742
    bool entrance_stub;244,9777
    bool trace_head;245,9801
    app_pc tag;246,9822
    cache_pc cur_pc;247,9838
    cache_pc link_cti_opnd;248,9859
    bool elide_ubr;249,9930
    struct _pending_freeze_t *next;next250,10003
} pending_freeze_t;251,10039
struct _coarse_freeze_info_t 253,10060
    coarse_info_t *src_info;src_info254,10091
    coarse_info_t *dst_info;dst_info255,10120
    cache_pc cache_start_pc;256,10149
    cache_pc cache_cur_pc;257,10178
    cache_pc stubs_start_pc;258,10205
    cache_pc stubs_cur_pc;259,10234
    bool unlink;260,10261
    pending_freeze_t *pending;pending261,10278
    size_t app_code_size;264,10391
    uint num_cbr;265,10417
    uint num_jmp;266,10435
    uint num_call;267,10453
    uint num_indbr;268,10472
    uint num_elisions;270,10516
    uint added_fallthrough;272,10589
    uint added_indbr_mangle;273,10617
    uint added_indbr_stub;274,10701
    uint added_jecxz_mangle;275,10760
    PERSISTENT_CACHE_MAGIC 319,11928
    PERSISTENT_CACHE_MAGIC = 0x244f4952,x244f4952319,11928
    PERSISTENT_CACHE_VERSION 320,11980
    PERSCACHE_X86_32 326,12139
    PERSCACHE_X86_32             = 0x00000001,x00000001326,12139
    PERSCACHE_X86_64 327,12186
    PERSCACHE_X86_64             = 0x00000002,x00000002327,12186
    PERSCACHE_SEEN_BORLAND_SEH 335,12539
    PERSCACHE_SEEN_BORLAND_SEH   = 0x00000004,x00000004335,12539
    PERSCACHE_ELIDED_UBR 338,12629
    PERSCACHE_ELIDED_UBR         = 0x00000008,x00000008338,12629
    PERSCACHE_SUPPORT_RAC 341,12740
    PERSCACHE_SUPPORT_RAC        = 0x00000010,x00000010341,12740
    PERSCACHE_SUPPORT_RCT 342,12787
    PERSCACHE_SUPPORT_RCT        = 0x00000020,x00000020342,12787
    PERSCACHE_ENTIRE_MODULE_RCT 345,12897
    PERSCACHE_ENTIRE_MODULE_RCT  = 0x00000040,x00000040345,12897
    PERSCACHE_SUPPORT_TRACES 348,12990
    PERSCACHE_SUPPORT_TRACES     = 0x00000080,x00000080348,12990
    PERSCACHE_MAP_RW_SEPARATE 351,13108
    PERSCACHE_MAP_RW_SEPARATE    = 0x00000100,x00000100351,13108
    PERSCACHE_EXEMPTION_OPTIONS 354,13227
    PERSCACHE_EXEMPTION_OPTIONS  = 0x00000200,x00000200354,13227
    PERSCACHE_CODE_INVALID 362,13620
    PERSCACHE_CODE_INVALID       = 0x00000400,x00000400362,13620
    PERSCACHE_MODULE_MD5_SHORT 368,13761
    PERSCACHE_MODULE_MD5_SHORT       = 0x00000001,x00000001368,13761
    PERSCACHE_MODULE_MD5_COMPLETE 369,13834
    PERSCACHE_MODULE_MD5_COMPLETE    = 0x00000002,x00000002369,13834
    PERSCACHE_GENFILE_MD5_SHORT 371,13953
    PERSCACHE_GENFILE_MD5_SHORT      = 0x00000004,x00000004371,13953
    PERSCACHE_GENFILE_MD5_COMPLETE 372,14017
    PERSCACHE_GENFILE_MD5_COMPLETE   = 0x00000008,x00000008372,14017
    PERSCACHE_MODULE_MD5_AT_LOAD 376,14221
    PERSCACHE_MODULE_MD5_AT_LOAD     = 0x00000010,x00000010376,14221
typedef struct _persisted_module_info_t 384,14508
    app_pc base;385,14550
    uint checksum;386,14604
    uint timestamp;387,14623
    uint64 image_size;391,14778
    uint64 code_size;392,14801
    uint64 file_version;393,14875
    module_digest_t module_md5;402,15240
} persisted_module_info_t;403,15272
typedef struct _persisted_footer_t 409,15469
    module_digest_t self_md5;414,15715
    uint magic;415,15791
} persisted_footer_t;416,15807
typedef struct _coarse_persisted_info_t 438,17026
    uint magic;442,17153
    uint version;443,17169
    size_t header_len;449,17367
    size_t data_len;450,17390
    uint flags;455,17527
    uint build_number;458,17570
    persisted_module_info_t modinfo;461,17635
    size_t start_offs;464,17749
    size_t end_offs;465,17772
    uint tls_offs_base;468,17870
    size_t instrument_rw_len;474,18051
    size_t stubs_len;477,18111
    size_t ibl_jmp_prefix_len;478,18133
    size_t ibl_call_prefix_len;479,18164
    size_t ibl_ret_prefix_len;480,18196
    size_t trace_head_return_prefix_len;481,18227
    size_t fcache_return_prefix_len;482,18268
    size_t cache_len;485,18334
    size_t post_cache_pad_len;486,18356
    size_t pad_len;488,18504
    size_t instrument_rx_len;489,18563
    size_t view_pad_len;490,18593
    size_t stub_htable_len;493,18695
    size_t cache_htable_len;494,18723
    size_t rct_htable_len;495,18752
    size_t rac_htable_len;496,18779
    size_t reloc_len;497,18806
    size_t hotp_patch_list_len;499,18858
    size_t instrument_ro_len;501,18945
    size_t option_string_len;504,19054
} coarse_persisted_info_t;587,22089

rct.c,229
find_address_references(90,3521
rct_check_ref_and_add(175,6886
is_address_taken(243,9376
is_address_after_call(249,9521
rct_ind_branch_check(262,9954
rct_known_targets_init(537,21998
rct_init(556,22571
rct_exit(569,23034

rct.h,157
#define RCT_H40,1789
enum {RCT_CACHE_EXEMPT_NONE RCT_CACHE_EXEMPT_NONE42,1804
      RCT_CACHE_EXEMPT_MODULES 43,1837
      RCT_CACHE_EXEMPT_ALL 44,1873

sample_file_creator.c,15
int main(4,40

stats.c,1092
kstat_variables_t tkv;69,2965
kstat_stack_t ks;70,2988
kstat_init_variable(80,3149
kstats_evaluate_expressions(90,3398
#define KSTAT_SUM(95,3605
#define KSTAT_DEF(99,3832
#undef KSTAT_SUM101,3909
#undef KSTAT_DEF102,3926
#define KSTAT_SUM(106,4001
kstat_init_variables(109,4078
#define KSTAT_DEF(111,4124
#undef KSTAT_DEF113,4207
enum {KSTAT_OUTLIER_THRESHOLD_MS KSTAT_OUTLIER_THRESHOLD_MS123,4625
timestamp_t kstat_ignore_context_switch;124,4683
kstat_frequency_per_msec;127,4745
kstat_print_individual(131,4850
kstat_report(160,5945
#define KSTAT_DEF(165,6149
#undef KSTAT_DEF169,6374
kstats_main_logfile_name(179,6705
kstats_thread_logfile_name(185,6790
kstat_init(192,6861
kstat_exit(220,7653
kstat_calibrate(239,8076
kstat_thread_init(262,8695
kstat_merge_var(295,9912
kstat_merge(309,10453
#define KSTAT_DEF(311,10534
#undef KSTAT_DEF313,10649
dump_thread_kstats(317,10674
kstat_var_name(335,11430
#define KSTAT_DEF(338,11561
#undef KSTAT_DEF342,11668
kstats_dump_stack(348,11741
kstat_thread_exit(362,12164
kstat_test(392,13229
int main(454,14445

stats.h,1775
#define STATS_H40,1821
    uint num_self;63,2199
    timestamp_t total_self;82,3050
    timestamp_t total_sub;83,3118
    timestamp_t min_cum;86,3253
    timestamp_t max_cum;87,3332
    timestamp_t total_outliers;88,3410
} kstat_variable_t;90,3570
#define KSTAT_DEF(96,3748
#define KSTAT_SUM(97,3801
#undef KSTAT_SUM99,3894
#undef KSTAT_DEF100,3911
} kstat_variables_t;101,3928
    kstat_variable_t *var;var105,4014
    timestamp_t      self_time;106,4041
    timestamp_t      subpath_time;107,4073
    timestamp_t      outlier_time;108,4108
} kstat_node_t;109,4143
enum {KSTAT_MAX_DEPTH KSTAT_MAX_DEPTH111,4160
    volatile uint depth;115,4256
    timestamp_t last_start_time;116,4316
    timestamp_t last_end_time;117,4349
    kstat_node_t node[node118,4380
} kstat_stack_t;119,4420
    thread_id_t       thread_id;123,4501
    kstat_variables_t vars_kstats;124,4534
    kstat_stack_t     stack_kstats;125,4569
    file_t           outfile_kstats;126,4605
} thread_kstats_t;127,4642
#define KSTAT_THREAD_NO_PV_START(132,4712
#define KSTAT_THREAD_NO_PV_END(137,5032
#define KSTAT_THREAD(143,5227
#define KSTAT_OTHER_THREAD(151,5660
# define KSTAT_TOS_MATCHING(160,6136
#define KSTAT_SERIALIZE_INSTRUCTIONS(166,6461
#  define CORRECT_OUTLIER(174,6810
#  define CORRECT_OUTLIER(179,7015
#define UPDATE_CURRENT_COUNTER(184,7138
#define KSTAT_INTERNAL_DEBUG(200,8087
#define KSTAT_DUMP_STACK(210,8727
#define kstat_start_var(229,9621
#define kstat_switch_var(246,10490
#define kstat_stop_not_matching_var(249,10636
#define kstat_stop_matching_var(256,11021
#define kstat_tos_matching_var(264,11413
#define kstat_stop_not_propagated_var(266,11495
#define kstat_stop_rewind_var(291,13304
#define kstat_stop_longjmp_var(299,13728

string.c,380
strlen(62,2642
wcslen(73,2797
strchr(87,3111
strrchr(104,3524
strncpy(121,3856
memmove(137,4271
void *__memmove_chk(__memmove_chk157,4927
void *__strncpy_chk(__strncpy_chk168,5250
strncat(183,5611
strcmp(195,5870
strncmp(209,6149
memcmp(223,6449
strstr(240,6814
tolower(255,7128
strcasecmp(264,7256
strtoul(286,7923
identity(303,8435
unit_test_string(309,8487

synch.c,1503
typedef struct _thread_synch_data_t 53,2185
    spin_mutex_t *synch_lock;synch_lock58,2483
    int pending_synch_count;61,2661
    thread_synch_permission_t synch_perm;64,2821
    bool synch_with_success;68,3038
    priv_mcontext_t *set_mcontext;set_mcontext73,3281
    void *set_context;set_context74,3316
    size_t set_context_size;75,3339
    byte *set_context_alloc;set_context_alloc78,3429
} thread_synch_data_t;80,3465
free_setcontext(92,3866
synch_thread_free_setcontext(104,4240
synch_init(113,4497
synch_exit(118,4524
synch_thread_init(124,4592
synch_thread_exit(142,5317
thread_synch_state_no_xfer(165,6270
thread_synch_successful(178,6825
is_at_do_syscall(189,7159
is_native_thread_state_valid(244,9451
translate_mcontext(309,12705
waiting_at_safe_spot(406,17258
should_suspend_client_thread(431,18198
at_safe_spot(451,19091
should_wait_at_safe_spot(542,23676
set_synch_state(550,23937
check_wait_at_safe_spot(566,24511
adjust_wait_at_safe_spot(666,28938
set_synched_thread_context(685,29789
#define SYNCH_ALL_THREADS_MAXIMUM_LOOPS 761,33290
#define SYNCH_MAXIMUM_LOOPS 762,33375
#define SYNCH_WITH_WAIT_MS 767,33676
synch_thread_yield(771,33821
synch_with_thread(810,35796
synch_with_all_threads(1051,47374
        SYNCH_WITH_ALL_NEW 1070,48312
        SYNCH_WITH_ALL_NOTIFIED 1071,48349
        SYNCH_WITH_ALL_SYNCHED 1072,48386
resume_all_threads(1450,66866
end_synch_with_all_threads(1490,68121
translate_from_synchall_to_dispatch(1517,69192

synch.h,1308
#define SYNCH_H39,1808
    THREAD_SYNCH_NONE=46,2007
    THREAD_SYNCH_NO_LOCKS=50,2138
    THREAD_SYNCH_NO_LOCKS_NO_XFER=58,2466
    THREAD_SYNCH_VALID_MCONTEXT_NO_XFER=65,2742
    THREAD_SYNCH_VALID_MCONTEXT=69,2933
} thread_synch_permission_t;70,2967
    THREAD_SYNCH_SUSPENDED=77,3246
    THREAD_SYNCH_SUSPENDED_AND_CLEANED=78,3276
    THREAD_SYNCH_TERMINATED_AND_CLEANED=80,3403
    THREAD_SYNCH_SUSPENDED_VALID_MCONTEXT_OR_NO_XFER=85,3555
    THREAD_SYNCH_SUSPENDED_VALID_MCONTEXT=87,3612
} thread_synch_state_t;88,3656
    THREAD_SYNCH_RESULT_SUCCESS 91,3696
    THREAD_SYNCH_RESULT_SUSPEND_FAILURE 92,3741
    THREAD_SYNCH_RESULT_NOT_SAFE 93,3786
} thread_synch_result_t;94,3831
    THREAD_SYNCH_SUSPEND_FAILURE_ABORT 105,4273
    THREAD_SYNCH_SUSPEND_FAILURE_ABORT  = 0x00000001,x00000001105,4273
    THREAD_SYNCH_SUSPEND_FAILURE_IGNORE 106,4327
    THREAD_SYNCH_SUSPEND_FAILURE_IGNORE = 0x00000002,x00000002106,4327
    THREAD_SYNCH_SUSPEND_FAILURE_RETRY 111,4599
    THREAD_SYNCH_SUSPEND_FAILURE_RETRY  = 0x00000004,x00000004111,4599
    THREAD_SYNCH_SMALL_LOOP_MAX 114,4698
    THREAD_SYNCH_SMALL_LOOP_MAX         = 0x00000008,x00000008114,4698
#define THREAD_SYNCH_IS_CLEANED(118,4781
#define THREAD_SYNCH_IS_TERMINATED(122,5007
#define THREAD_SYNCH_SAFE(127,5255

unit-rct.c,494
typedef int (*fconvert_t)fconvert_t51,2102
typedef int (*fmult_t)fmult_t52,2136
int foo(54,2166
int f2(65,2375
int f3(70,2410
int f7(75,2445
bar(81,2485
fmult_t farr[farr92,2714
test_indcalls(95,2756
test_switch_helper(109,3009
test_switch(121,3178
test_small_array(136,3525
test_lookup_delete(285,8326
test_self_direct(305,9005
test_rct_ind_branch_check(381,11867
test_loaddll(439,13750
void func2(455,14137
void func3(459,14196
void func4(463,14269
unit_main(470,14358

unit_tests.c,14
main(51,2012

unix/diagnost.c,118
report_diagnostics(41,1901
append_diagnostics(49,2105
diagnost_exit(55,2254
check_for_unsupported_modules(60,2280

unix/include/sigcontext.h,4028
#define _SIGCONTEXT_H_14,662
#define _BITS_SIGCONTEXT_H 17,734
#define _ASM_X86_SIGCONTEXT_H 21,895
#define _ASMi386_SIGCONTEXT_H 22,927
#define _ASM_X86_64_SIGCONTEXT_H 23,959
#define _ASM_X86_SIGCONTEXT32_H 24,994
#define FP_XSTATE_MAGIC1	28,1055
#define FP_XSTATE_MAGIC2	29,1092
#define FP_XSTATE_MAGIC2_SIZE	30,1129
struct _fpx_sw_bytes 44,1790
	__u32 magic1;45,1813
	__u32 extended_size;46,1852
	__u64 xstate_bv;49,1964
	__u32 xstate_size;54,2100
	__u32 padding[padding59,2272
struct _fpreg 77,2855
	unsigned short significand[significand78,2871
	unsigned short exponent;79,2903
struct _fpxreg 82,2933
	unsigned short significand[significand83,2950
	unsigned short exponent;84,2982
	unsigned short padding[padding85,3008
struct _xmmreg 88,3040
	unsigned long element[element89,3057
struct _fpstate 92,3088
	unsigned long	cw;94,3137
	unsigned long	sw;95,3156
	unsigned long	tag;96,3175
	unsigned long	ipoff;97,3195
	unsigned long	cssel;98,3217
	unsigned long	dataoff;99,3239
	unsigned long	datasel;100,3263
	struct _fpreg	_st[_st101,3287
	unsigned short	status;102,3310
	unsigned short	magic;103,3334
	unsigned long	_fxsr_env[_fxsr_env106,3424
	unsigned long	mxcsr;107,3483
	unsigned long	reserved;108,3505
	struct _fpxreg	_fxsr_st[_fxsr_st109,3530
	struct _xmmreg	_xmm[_xmm110,3594
	unsigned long	padding1[padding1111,3619
		unsigned long	padding2[padding2114,3658
		struct _fpx_sw_bytes sw_reserved;115,3688
#define X86_FXSR_MAGIC	120,3784
struct sigcontext 125,3877
	unsigned short gs,126,3897
	unsigned short gs, __gsh;126,3897
	unsigned short fs,127,3924
	unsigned short fs, __fsh;127,3924
	unsigned short es,128,3951
	unsigned short es, __esh;128,3951
	unsigned short ds,129,3978
	unsigned short ds, __dsh;129,3978
	unsigned long edi;130,4005
	unsigned long esi;131,4025
	unsigned long ebp;132,4045
	unsigned long esp;133,4065
	unsigned long ebx;134,4085
	unsigned long edx;135,4105
	unsigned long ecx;136,4125
	unsigned long eax;137,4145
	unsigned long trapno;138,4165
	unsigned long err;139,4188
	unsigned long eip;140,4208
	unsigned short cs,141,4228
	unsigned short cs, __csh;141,4228
	unsigned long eflags;142,4255
	unsigned long esp_at_signal;143,4278
	unsigned short ss,144,4308
	unsigned short ss, __ssh;144,4308
	struct _fpstate *fpstate;fpstate145,4335
	unsigned long oldmask;146,4362
	unsigned long cr2;147,4386
struct _fpstate 155,4569
	__u16	cwd;156,4587
	__u16	swd;157,4599
	__u16	twd;158,4611
	__u16	fop;160,4690
	__u64	rip;161,4702
	__u64	rdp;162,4714
	__u32	mxcsr;163,4726
	__u32	mxcsr_mask;164,4740
	__u32	st_space[st_space165,4759
	__u32	xmm_space[xmm_space166,4813
	__u32	reserved2[reserved2167,4871
		__u32	reserved3[reserved3169,4902
		struct _fpx_sw_bytes sw_reserved;170,4925
struct sigcontext 178,5089
	unsigned long r8;179,5109
	unsigned long r9;180,5128
	unsigned long r10;181,5147
	unsigned long r11;182,5167
	unsigned long r12;183,5187
	unsigned long r13;184,5207
	unsigned long r14;185,5227
	unsigned long r15;186,5247
	unsigned long rdi;187,5267
	unsigned long rsi;188,5287
	unsigned long rbp;189,5307
	unsigned long rbx;190,5327
	unsigned long rdx;191,5347
	unsigned long rax;192,5367
	unsigned long rcx;193,5387
	unsigned long rsp;194,5407
	unsigned long rip;195,5427
	unsigned long eflags;196,5447
	unsigned short cs;197,5484
	unsigned short gs;198,5504
	unsigned short fs;199,5524
	unsigned short __pad0;200,5544
	unsigned long err;201,5568
	unsigned long trapno;202,5588
	unsigned long oldmask;203,5611
	unsigned long cr2;204,5635
	struct _fpstate *fpstate;fpstate205,5655
	unsigned long reserved1[reserved1206,5713
struct _xsave_hdr 211,5770
	__u64 xstate_bv;212,5790
	__u64 reserved1[reserved1213,5808
	__u64 reserved2[reserved2214,5829
struct _ymmh_state 217,5854
	__u32 ymmh_space[ymmh_space219,5914
struct _xstate 228,6185
	struct _fpstate fpstate;229,6202
	struct _xsave_hdr xstate_hdr;230,6228
	struct _ymmh_state ymmh;231,6259

unix/include/signalfd.h,565
#define _SIGNALFD_H14,659
#define SFD_CLOEXEC 19,731
#define SFD_NONBLOCK 20,761
struct signalfd_siginfo 22,794
	__u32 ssi_signo;23,820
	__s32 ssi_errno;24,838
	__s32 ssi_code;25,856
	__u32 ssi_pid;26,873
	__u32 ssi_uid;27,889
	__s32 ssi_fd;28,905
	__u32 ssi_tid;29,920
	__u32 ssi_band;30,936
	__u32 ssi_overrun;31,953
	__u32 ssi_trapno;32,973
	__s32 ssi_status;33,992
	__s32 ssi_int;34,1011
	__u64 ssi_ptr;35,1027
	__u64 ssi_utime;36,1043
	__u64 ssi_stime;37,1061
	__u64 ssi_addr;38,1079
	__u16 ssi_addr_lsb;39,1096
	__u8 __pad[__pad50,1498

unix/include/syscall.h,46281
#define _SYSCALL_H_ 14,659
# define __NR_read 19,760
# define __NR_write 20,810
# define __NR_open 21,860
# define __NR_close 22,910
# define __NR_stat 23,960
# define __NR_fstat 24,1010
# define __NR_lstat 25,1060
# define __NR_poll 26,1110
# define __NR_lseek 27,1160
# define __NR_mmap 28,1210
# define __NR_mprotect 29,1260
# define __NR_munmap 30,1311
# define __NR_brk 31,1362
# define __NR_rt_sigaction 32,1413
# define __NR_rt_sigprocmask 33,1464
# define __NR_rt_sigreturn 34,1515
# define __NR_ioctl 35,1566
# define __NR_pread64 36,1617
# define __NR_pwrite64 37,1668
# define __NR_readv 38,1719
# define __NR_writev 39,1770
# define __NR_access 40,1821
# define __NR_pipe 41,1872
# define __NR_select 42,1923
# define __NR_sched_yield 43,1974
# define __NR_mremap 44,2025
# define __NR_msync 45,2076
# define __NR_mincore 46,2127
# define __NR_madvise 47,2178
# define __NR_shmget 48,2229
# define __NR_shmat 49,2280
# define __NR_shmctl 50,2331
# define __NR_dup 51,2382
# define __NR_dup2 52,2433
# define __NR_pause 53,2484
# define __NR_nanosleep 54,2535
# define __NR_getitimer 55,2586
# define __NR_alarm 56,2637
# define __NR_setitimer 57,2688
# define __NR_getpid 58,2739
# define __NR_sendfile 59,2790
# define __NR_socket 60,2841
# define __NR_connect 61,2892
# define __NR_accept 62,2943
# define __NR_sendto 63,2994
# define __NR_recvfrom 64,3045
# define __NR_sendmsg 65,3096
# define __NR_recvmsg 66,3147
# define __NR_shutdown 67,3198
# define __NR_bind 68,3249
# define __NR_listen 69,3300
# define __NR_getsockname 70,3351
# define __NR_getpeername 71,3402
# define __NR_socketpair 72,3453
# define __NR_setsockopt 73,3504
# define __NR_getsockopt 74,3555
# define __NR_clone 75,3606
# define __NR_fork 76,3657
# define __NR_vfork 77,3708
# define __NR_execve 78,3759
# define __NR_exit 79,3810
# define __NR_wait4 80,3861
# define __NR_kill 81,3912
# define __NR_uname 82,3963
# define __NR_semget 83,4014
# define __NR_semop 84,4065
# define __NR_semctl 85,4116
# define __NR_shmdt 86,4167
# define __NR_msgget 87,4218
# define __NR_msgsnd 88,4269
# define __NR_msgrcv 89,4320
# define __NR_msgctl 90,4371
# define __NR_fcntl 91,4422
# define __NR_flock 92,4473
# define __NR_fsync 93,4524
# define __NR_fdatasync 94,4575
# define __NR_truncate 95,4626
# define __NR_ftruncate 96,4677
# define __NR_getdents 97,4728
# define __NR_getcwd 98,4779
# define __NR_chdir 99,4830
# define __NR_fchdir 100,4881
# define __NR_rename 101,4932
# define __NR_mkdir 102,4983
# define __NR_rmdir 103,5034
# define __NR_creat 104,5085
# define __NR_link 105,5136
# define __NR_unlink 106,5187
# define __NR_symlink 107,5238
# define __NR_readlink 108,5289
# define __NR_chmod 109,5340
# define __NR_fchmod 110,5391
# define __NR_chown 111,5442
# define __NR_fchown 112,5493
# define __NR_lchown 113,5544
# define __NR_umask 114,5595
# define __NR_gettimeofday 115,5646
# define __NR_getrlimit 116,5697
# define __NR_getrusage 117,5748
# define __NR_sysinfo 118,5799
# define __NR_times 119,5850
# define __NR_ptrace 120,5902
# define __NR_getuid 121,5954
# define __NR_syslog 122,6006
# define __NR_getgid 124,6128
# define __NR_setuid 125,6180
# define __NR_setgid 126,6232
# define __NR_geteuid 127,6284
# define __NR_getegid 128,6336
# define __NR_setpgid 129,6388
# define __NR_getppid 130,6440
# define __NR_getpgrp 131,6492
# define __NR_setsid 132,6544
# define __NR_setreuid 133,6596
# define __NR_setregid 134,6648
# define __NR_getgroups 135,6700
# define __NR_setgroups 136,6752
# define __NR_setresuid 137,6804
# define __NR_getresuid 138,6856
# define __NR_setresgid 139,6908
# define __NR_getresgid 140,6960
# define __NR_getpgid 141,7012
# define __NR_setfsuid 142,7064
# define __NR_setfsgid 143,7116
# define __NR_getsid 144,7168
# define __NR_capget 145,7220
# define __NR_capset 146,7272
# define __NR_rt_sigpending 147,7324
# define __NR_rt_sigtimedwait 148,7376
# define __NR_rt_sigqueueinfo 149,7428
# define __NR_rt_sigsuspend 150,7480
# define __NR_sigaltstack 151,7532
# define __NR_utime 152,7584
# define __NR_mknod 153,7636
# define __NR_uselib 155,7716
# define __NR_personality 156,7768
# define __NR_ustat 157,7820
# define __NR_statfs 158,7872
# define __NR_fstatfs 159,7924
# define __NR_sysfs 160,7976
# define __NR_getpriority 161,8028
# define __NR_setpriority 162,8080
# define __NR_sched_setparam 163,8132
# define __NR_sched_getparam 164,8184
# define __NR_sched_setscheduler 165,8236
# define __NR_sched_getscheduler 166,8288
# define __NR_sched_get_priority_max 167,8340
# define __NR_sched_get_priority_min 168,8392
# define __NR_sched_rr_get_interval 169,8444
# define __NR_mlock 170,8496
# define __NR_munlock 171,8548
# define __NR_mlockall 172,8600
# define __NR_munlockall 173,8652
# define __NR_vhangup 174,8704
# define __NR_modify_ldt 175,8756
# define __NR_pivot_root 176,8808
# define __NR__sysctl 177,8860
# define __NR_prctl 178,8912
# define __NR_arch_prctl 179,8964
# define __NR_adjtimex 180,9016
# define __NR_setrlimit 181,9068
# define __NR_chroot 182,9120
# define __NR_sync 183,9172
# define __NR_acct 184,9224
# define __NR_settimeofday 185,9276
# define __NR_mount 186,9328
# define __NR_umount2 187,9380
# define __NR_swapon 188,9432
# define __NR_swapoff 189,9484
# define __NR_reboot 190,9536
# define __NR_sethostname 191,9588
# define __NR_setdomainname 192,9640
# define __NR_iopl 193,9692
# define __NR_ioperm 194,9744
# define __NR_create_module 195,9796
# define __NR_init_module 196,9848
# define __NR_delete_module 197,9900
# define __NR_get_kernel_syms 198,9952
# define __NR_query_module 199,10004
# define __NR_quotactl 200,10056
# define __NR_nfsservctl 201,10108
# define __NR_getpmsg 203,10191
# define __NR_putpmsg 204,10243
# define __NR_afs_syscall 206,10318
# define __NR_tuxcall 208,10393
# define __NR_security 209,10445
# define __NR_gettid 210,10497
# define __NR_readahead 211,10549
# define __NR_setxattr 212,10601
# define __NR_lsetxattr 213,10653
# define __NR_fsetxattr 214,10705
# define __NR_getxattr 215,10757
# define __NR_lgetxattr 216,10809
# define __NR_fgetxattr 217,10861
# define __NR_listxattr 218,10913
# define __NR_llistxattr 219,10965
# define __NR_flistxattr 220,11017
# define __NR_removexattr 221,11069
# define __NR_lremovexattr 222,11121
# define __NR_fremovexattr 223,11173
# define __NR_tkill 224,11225
# define __NR_time 225,11277
# define __NR_futex 226,11329
# define __NR_sched_setaffinity 227,11381
# define __NR_sched_getaffinity 228,11433
# define __NR_set_thread_area 229,11485
# define __NR_io_setup 230,11537
# define __NR_io_destroy 231,11589
# define __NR_io_getevents 232,11641
# define __NR_io_submit 233,11693
# define __NR_io_cancel 234,11745
# define __NR_get_thread_area 235,11797
# define __NR_lookup_dcookie 236,11849
# define __NR_epoll_create 237,11901
# define __NR_epoll_ctl_old 238,11953
# define __NR_epoll_wait_old 239,12005
# define __NR_remap_file_pages 240,12057
# define __NR_getdents64 241,12109
# define __NR_set_tid_address 242,12161
# define __NR_restart_syscall 243,12213
# define __NR_semtimedop 244,12265
# define __NR_fadvise64 245,12317
# define __NR_timer_create 246,12369
# define __NR_timer_settime 247,12421
# define __NR_timer_gettime 248,12473
# define __NR_timer_getoverrun 249,12525
# define __NR_timer_delete 250,12577
# define __NR_clock_settime 251,12629
# define __NR_clock_gettime 252,12681
# define __NR_clock_getres 253,12733
# define __NR_clock_nanosleep 254,12785
# define __NR_exit_group 255,12837
# define __NR_epoll_wait 256,12889
# define __NR_epoll_ctl 257,12941
# define __NR_tgkill 258,12993
# define __NR_utimes 259,13045
# define __NR_vserver 260,13097
# define __NR_mbind 261,13149
# define __NR_set_mempolicy 262,13201
# define __NR_get_mempolicy 263,13253
# define __NR_mq_open 264,13305
# define __NR_mq_unlink 265,13357
# define __NR_mq_timedsend 266,13409
# define __NR_mq_timedreceive 267,13461
# define __NR_mq_notify 268,13513
# define __NR_mq_getsetattr 269,13565
# define __NR_kexec_load 270,13617
# define __NR_waitid 271,13669
# define __NR_add_key 272,13721
# define __NR_request_key 273,13773
# define __NR_keyctl 274,13825
# define __NR_ioprio_set 275,13877
# define __NR_ioprio_get 276,13929
# define __NR_inotify_init 277,13981
# define __NR_inotify_add_watch 278,14033
# define __NR_inotify_rm_watch 279,14085
# define __NR_migrate_pages 280,14137
# define __NR_openat 281,14189
# define __NR_mkdirat 282,14241
# define __NR_mknodat 283,14293
# define __NR_fchownat 284,14345
# define __NR_futimesat 285,14397
# define __NR_newfstatat 286,14449
# define __NR_unlinkat 287,14501
# define __NR_renameat 288,14553
# define __NR_linkat 289,14605
# define __NR_symlinkat 290,14657
# define __NR_readlinkat 291,14709
# define __NR_fchmodat 292,14761
# define __NR_faccessat 293,14813
# define __NR_pselect6 294,14865
# define __NR_ppoll 295,14917
# define __NR_unshare 296,14969
# define __NR_set_robust_list 297,15021
# define __NR_get_robust_list 298,15073
# define __NR_splice 299,15125
# define __NR_tee 300,15177
# define __NR_sync_file_range 301,15229
# define __NR_vmsplice 302,15281
# define __NR_move_pages 303,15333
# define __NR_utimensat 304,15385
# define __IGNORE_getcpu 305,15437
# define __NR_epoll_pwait 306,15509
# define __NR_signalfd 307,15561
# define __NR_timerfd 308,15613
# define __NR_eventfd 309,15665
# define __NR_fallocate 310,15717
# define __NR_timerfd_settime 311,15769
# define __NR_timerfd_gettime 312,15821
# define __NR_accept4 313,15873
# define __NR_signalfd4 314,15925
# define __NR_eventfd2 315,15977
# define __NR_epoll_create1 316,16029
# define __NR_dup3 317,16081
# define __NR_pipe2 318,16133
# define __NR_inotify_init1 319,16185
# define __NR_preadv 320,16237
# define __NR_pwritev 321,16289
# define __NR_rt_tgsigqueueinfo 322,16341
# define __NR_perf_event_open 323,16393
# define __NR_recvmmsg 324,16445
# define __NR_fanotify_init 325,16497
# define __NR_fanotify_mark 326,16549
# define __NR_prlimit64 327,16601
# define __NR_name_to_handle_at 328,16653
# define __NR_open_by_handle_at 329,16705
# define __NR_clock_adjtime 330,16757
# define __NR_syncfs 331,16809
# define __NR_sendmmsg 332,16861
# define __NR_setns 333,16913
# define __NR_getcpu 334,16965
# define __NR_process_vm_readv 335,17017
# define __NR_process_vm_writev 336,17069
# define __NR_kcmp 337,17121
# define __NR_finit_module 338,17173
#  define __ARCH_WANT_OLD_READDIR340,17245
#  define __ARCH_WANT_OLD_STAT341,17279
#  define __ARCH_WANT_SYS_ALARM342,17310
#  define __ARCH_WANT_SYS_GETHOSTNAME343,17342
#  define __ARCH_WANT_SYS_PAUSE344,17380
#  define __ARCH_WANT_SYS_SGETMASK345,17412
#  define __ARCH_WANT_SYS_SIGNAL346,17447
#  define __ARCH_WANT_SYS_UTIME347,17480
#  define __ARCH_WANT_SYS_WAITPID348,17512
#  define __ARCH_WANT_SYS_SOCKETCALL349,17546
#  define __ARCH_WANT_SYS_FADVISE64350,17583
#  define __ARCH_WANT_SYS_GETPGRP351,17619
#  define __ARCH_WANT_SYS_LLSEEK352,17653
#  define __ARCH_WANT_SYS_NICE353,17686
#  define __ARCH_WANT_SYS_OLD_GETRLIMIT354,17717
#  define __ARCH_WANT_SYS_OLDUMOUNT355,17757
#  define __ARCH_WANT_SYS_SIGPENDING356,17793
#  define __ARCH_WANT_SYS_SIGPROCMASK357,17830
#  define __ARCH_WANT_SYS_RT_SIGACTION358,17868
#  define __ARCH_WANT_SYS_RT_SIGSUSPEND359,17907
#  define __ARCH_WANT_SYS_TIME360,17947
#  define __ARCH_WANT_COMPAT_SYS_TIME361,17978
# define __NR_restart_syscall 367,18115
# define __NR_exit 368,18152
# define __NR_fork 369,18189
# define __NR_read 370,18226
# define __NR_write 371,18263
# define __NR_open 372,18300
# define __NR_close 373,18337
# define __NR_waitpid 374,18374
# define __NR_creat 375,18411
# define __NR_link 376,18448
# define __NR_unlink 377,18485
# define __NR_execve 378,18522
# define __NR_chdir 379,18559
# define __NR_time 380,18596
# define __NR_mknod 381,18633
# define __NR_chmod 382,18670
# define __NR_lchown 383,18707
# define __NR_break 384,18744
# define __NR_oldstat 385,18781
# define __NR_lseek 386,18818
# define __NR_getpid 387,18855
# define __NR_mount 388,18892
# define __NR_umount 389,18929
# define __NR_setuid 390,18966
# define __NR_getuid 391,19003
# define __NR_stime 392,19040
# define __NR_ptrace 393,19077
# define __NR_alarm 394,19114
# define __NR_oldfstat 395,19151
# define __NR_pause 396,19188
# define __NR_utime 397,19225
# define __NR_stty 398,19262
# define __NR_gtty 399,19299
# define __NR_access 400,19336
# define __NR_nice 401,19373
# define __NR_ftime 402,19410
# define __NR_sync 403,19447
# define __NR_kill 404,19484
# define __NR_rename 405,19521
# define __NR_mkdir 406,19558
# define __NR_rmdir 407,19595
# define __NR_dup 408,19632
# define __NR_pipe 409,19669
# define __NR_times 410,19706
# define __NR_prof 411,19743
# define __NR_brk 412,19780
# define __NR_setgid 413,19817
# define __NR_getgid 414,19854
# define __NR_signal 415,19891
# define __NR_geteuid 416,19928
# define __NR_getegid 417,19965
# define __NR_acct 418,20002
# define __NR_umount2 419,20039
# define __NR_lock 420,20076
# define __NR_ioctl 421,20113
# define __NR_fcntl 422,20150
# define __NR_mpx 423,20187
# define __NR_setpgid 424,20224
# define __NR_ulimit 425,20261
# define __NR_oldolduname 426,20298
# define __NR_umask 427,20335
# define __NR_chroot 428,20372
# define __NR_ustat 429,20409
# define __NR_dup2 430,20446
# define __NR_getppid 431,20483
# define __NR_getpgrp 432,20520
# define __NR_setsid 433,20557
# define __NR_sigaction 434,20594
# define __NR_sgetmask 435,20631
# define __NR_ssetmask 436,20668
# define __NR_setreuid 437,20705
# define __NR_setregid 438,20742
# define __NR_sigsuspend 439,20779
# define __NR_sigpending 440,20816
# define __NR_sethostname 441,20853
# define __NR_setrlimit 442,20890
# define __NR_getrlimit 443,20927
# define __NR_getrusage 444,21010
# define __NR_gettimeofday 445,21047
# define __NR_settimeofday 446,21084
# define __NR_getgroups 447,21121
# define __NR_setgroups 448,21158
# define __NR_select 449,21195
# define __NR_symlink 450,21232
# define __NR_oldlstat 451,21269
# define __NR_readlink 452,21306
# define __NR_uselib 453,21343
# define __NR_swapon 454,21380
# define __NR_reboot 455,21417
# define __NR_readdir 456,21454
# define __NR_mmap 457,21491
# define __NR_munmap 458,21528
# define __NR_truncate 459,21565
# define __NR_ftruncate 460,21602
# define __NR_fchmod 461,21639
# define __NR_fchown 462,21676
# define __NR_getpriority 463,21713
# define __NR_setpriority 464,21750
# define __NR_profil 465,21787
# define __NR_statfs 466,21824
# define __NR_fstatfs 467,21861
# define __NR_ioperm 468,21898
# define __NR_socketcall 469,21935
# define __NR_syslog 470,21972
# define __NR_setitimer 471,22009
# define __NR_getitimer 472,22046
# define __NR_stat 473,22083
# define __NR_lstat 474,22120
# define __NR_fstat 475,22157
# define __NR_olduname 476,22194
# define __NR_iopl 477,22231
# define __NR_vhangup 478,22268
# define __NR_idle 479,22305
# define __NR_vm86old 480,22342
# define __NR_wait4 481,22379
# define __NR_swapoff 482,22416
# define __NR_sysinfo 483,22453
# define __NR_ipc 484,22490
# define __NR_fsync 485,22527
# define __NR_sigreturn 486,22564
# define __NR_clone 487,22601
# define __NR_setdomainname 488,22638
# define __NR_uname 489,22675
# define __NR_modify_ldt 490,22712
# define __NR_adjtimex 491,22749
# define __NR_mprotect 492,22786
# define __NR_sigprocmask 493,22823
# define __NR_create_module 494,22860
# define __NR_init_module 495,22897
# define __NR_delete_module 496,22934
# define __NR_get_kernel_syms 497,22971
# define __NR_quotactl 498,23008
# define __NR_getpgid 499,23045
# define __NR_fchdir 500,23082
# define __NR_bdflush 501,23119
# define __NR_sysfs 502,23156
# define __NR_personality 503,23193
# define __NR_afs_syscall 504,23230
# define __NR_setfsuid 505,23304
# define __NR_setfsgid 506,23341
# define __NR__llseek 507,23378
# define __NR_getdents 508,23415
# define __NR__newselect 509,23452
# define __NR_flock 510,23489
# define __NR_msync 511,23526
# define __NR_readv 512,23563
# define __NR_writev 513,23600
# define __NR_getsid 514,23637
# define __NR_fdatasync 515,23674
# define __NR__sysctl 516,23711
# define __NR_mlock 517,23748
# define __NR_munlock 518,23785
# define __NR_mlockall 519,23822
# define __NR_munlockall 520,23859
# define __NR_sched_setparam 521,23896
# define __NR_sched_getparam 522,23941
# define __NR_sched_setscheduler 523,23986
# define __NR_sched_getscheduler 524,24031
# define __NR_sched_yield 525,24076
# define __NR_sched_get_priority_max 526,24121
# define __NR_sched_get_priority_min 527,24166
# define __NR_sched_rr_get_interval 528,24211
# define __NR_nanosleep 529,24256
# define __NR_mremap 530,24293
# define __NR_setresuid 531,24330
# define __NR_getresuid 532,24367
# define __NR_vm86 533,24404
# define __NR_query_module 534,24441
# define __NR_poll 535,24478
# define __NR_nfsservctl 536,24515
# define __NR_setresgid 537,24552
# define __NR_getresgid 538,24589
# define __NR_prctl 539,24626
# define __NR_rt_sigreturn 540,24663
# define __NR_rt_sigaction 541,24700
# define __NR_rt_sigprocmask 542,24737
# define __NR_rt_sigpending 543,24774
# define __NR_rt_sigtimedwait 544,24811
# define __NR_rt_sigqueueinfo 545,24848
# define __NR_rt_sigsuspend 546,24885
# define __NR_pread64 547,24922
# define __NR_pwrite64 548,24959
# define __NR_chown 549,24996
# define __NR_getcwd 550,25033
# define __NR_capget 551,25070
# define __NR_capset 552,25107
# define __NR_sigaltstack 553,25144
# define __NR_sendfile 554,25181
# define __NR_getpmsg 555,25218
# define __NR_putpmsg 556,25299
# define __NR_vfork 557,25380
# define __NR_ugetrlimit 558,25417
# define __NR_mmap2 559,25488
# define __NR_truncate64 560,25525
# define __NR_ftruncate64 561,25562
# define __NR_stat64 562,25599
# define __NR_lstat64 563,25636
# define __NR_fstat64 564,25673
# define __NR_lchown32 565,25710
# define __NR_getuid32 566,25747
# define __NR_getgid32 567,25784
# define __NR_geteuid32 568,25821
# define __NR_getegid32 569,25858
# define __NR_setreuid32 570,25895
# define __NR_setregid32 571,25932
# define __NR_getgroups32 572,25969
# define __NR_setgroups32 573,26006
# define __NR_fchown32 574,26043
# define __NR_setresuid32 575,26080
# define __NR_getresuid32 576,26117
# define __NR_setresgid32 577,26154
# define __NR_getresgid32 578,26191
# define __NR_chown32 579,26228
# define __NR_setuid32 580,26265
# define __NR_setgid32 581,26302
# define __NR_setfsuid32 582,26339
# define __NR_setfsgid32 583,26376
# define __NR_pivot_root 584,26413
# define __NR_mincore 585,26450
# define __NR_madvise 586,26487
# define __NR_madvise1 587,26524
# define __NR_getdents64 588,26605
# define __NR_fcntl64 589,26642
# define __NR_gettid 591,26699
# define __NR_readahead 592,26736
# define __NR_setxattr 593,26773
# define __NR_lsetxattr 594,26810
# define __NR_fsetxattr 595,26847
# define __NR_getxattr 596,26884
# define __NR_lgetxattr 597,26921
# define __NR_fgetxattr 598,26958
# define __NR_listxattr 599,26995
# define __NR_llistxattr 600,27032
# define __NR_flistxattr 601,27069
# define __NR_removexattr 602,27106
# define __NR_lremovexattr 603,27143
# define __NR_fremovexattr 604,27180
# define __NR_tkill 605,27217
# define __NR_sendfile64 606,27254
# define __NR_futex 607,27291
# define __NR_sched_setaffinity 608,27328
# define __NR_sched_getaffinity 609,27365
# define __NR_set_thread_area 610,27402
# define __NR_get_thread_area 611,27439
# define __NR_io_setup 612,27476
# define __NR_io_destroy 613,27513
# define __NR_io_getevents 614,27550
# define __NR_io_submit 615,27587
# define __NR_io_cancel 616,27624
# define __NR_fadvise64 617,27661
# define __NR_exit_group 619,27766
# define __NR_lookup_dcookie 620,27803
# define __NR_epoll_create 621,27840
# define __NR_epoll_ctl 622,27877
# define __NR_epoll_wait 623,27914
# define __NR_remap_file_pages 624,27951
# define __NR_set_tid_address 625,27988
# define __NR_timer_create 626,28025
# define __NR_timer_settime 627,28062
# define __NR_timer_gettime 628,28117
# define __NR_timer_getoverrun 629,28172
# define __NR_timer_delete 630,28227
# define __NR_clock_settime 631,28282
# define __NR_clock_gettime 632,28337
# define __NR_clock_getres 633,28392
# define __NR_clock_nanosleep 634,28447
# define __NR_statfs64 635,28502
# define __NR_fstatfs64 636,28539
# define __NR_tgkill 637,28576
# define __NR_utimes 638,28613
# define __NR_fadvise64_64 639,28650
# define __NR_vserver 640,28687
# define __NR_mbind 641,28724
# define __NR_get_mempolicy 642,28761
# define __NR_set_mempolicy 643,28798
# define __NR_mq_open 644,28835
# define __NR_mq_unlink 645,28872
# define __NR_mq_timedsend 646,28922
# define __NR_mq_timedreceive 647,28972
# define __NR_mq_notify 648,29022
# define __NR_mq_getsetattr 649,29072
# define __NR_kexec_load 650,29122
# define __NR_waitid 651,29159
# define __NR_add_key 653,29235
# define __NR_request_key 654,29272
# define __NR_keyctl 655,29309
# define __NR_ioprio_set 656,29346
# define __NR_ioprio_get 657,29383
# define __NR_inotify_init 658,29420
# define __NR_inotify_add_watch 659,29457
# define __NR_inotify_rm_watch 660,29494
# define __NR_migrate_pages 661,29531
# define __NR_openat 662,29568
# define __NR_mkdirat 663,29605
# define __NR_mknodat 664,29642
# define __NR_fchownat 665,29679
# define __NR_futimesat 666,29716
# define __NR_fstatat64 667,29753
# define __NR_unlinkat 668,29790
# define __NR_renameat 669,29827
# define __NR_linkat 670,29864
# define __NR_symlinkat 671,29901
# define __NR_readlinkat 672,29938
# define __NR_fchmodat 673,29975
# define __NR_faccessat 674,30012
# define __NR_pselect6 675,30049
# define __NR_ppoll 676,30086
# define __NR_unshare 677,30123
# define __NR_set_robust_list 678,30160
# define __NR_get_robust_list 679,30197
# define __NR_splice 680,30234
# define __NR_sync_file_range 681,30271
# define __NR_tee 682,30308
# define __NR_vmsplice 683,30345
# define __NR_move_pages 684,30382
# define __NR_getcpu 685,30419
# define __NR_epoll_pwait 686,30456
# define __NR_utimensat 687,30493
# define __NR_signalfd 688,30530
# define __NR_timerfd 689,30567
# define __NR_eventfd 690,30604
# define __NR_fallocate 691,30641
# define __NR_timerfd_settime 692,30678
# define __NR_timerfd_gettime 693,30715
# define __NR_signalfd4 694,30752
# define __NR_eventfd2 695,30789
# define __NR_epoll_create1 696,30826
# define __NR_dup3 697,30863
# define __NR_pipe2 698,30900
# define __NR_inotify_init1 699,30937
# define __NR_preadv 700,30974
# define __NR_pwritev 701,31011
# define __NR_rt_tgsigqueueinfo 702,31048
# define __NR_perf_event_open 703,31085
# define __NR_recvmmsg 704,31122
# define __NR_fanotify_init 705,31159
# define __NR_fanotify_mark 706,31196
# define __NR_prlimit64 707,31233
# define __NR_name_to_handle_at 708,31270
# define __NR_open_by_handle_at 709,31307
# define __NR_clock_adjtime 710,31344
# define __NR_syncfs 711,31381
# define __NR_sendmmsg 712,31418
# define __NR_setns 713,31455
# define __NR_process_vm_readv 714,31492
# define __NR_process_vm_writev 715,31529
# define __NR_kcmp 716,31566
# define __NR_finit_module 717,31603
# define SYS__sysctl 722,31706
# define SYS_accept 723,31740
# define SYS_accept4 724,31772
# define SYS_access 725,31806
# define SYS_acct 726,31838
# define SYS_add_key 727,31866
# define SYS_adjtimex 728,31900
# define SYS_afs_syscall 729,31936
# define SYS_alarm 730,31978
# define SYS_arch_prctl 731,32008
# define SYS_bind 732,32048
# define SYS_brk 733,32076
# define SYS_capget 734,32102
# define SYS_capset 735,32134
# define SYS_chdir 736,32166
# define SYS_chmod 737,32196
# define SYS_chown 738,32226
# define SYS_chroot 739,32256
# define SYS_clock_adjtime 740,32288
# define SYS_clock_getres 741,32334
# define SYS_clock_gettime 742,32378
# define SYS_clock_nanosleep 743,32424
# define SYS_clock_settime 744,32474
# define SYS_clone 745,32520
# define SYS_close 746,32550
# define SYS_connect 747,32580
# define SYS_creat 748,32614
# define SYS_create_module 749,32644
# define SYS_delete_module 750,32690
# define SYS_dup 751,32736
# define SYS_dup2 752,32762
# define SYS_dup3 753,32790
# define SYS_epoll_create 754,32818
# define SYS_epoll_create1 755,32862
# define SYS_epoll_ctl 756,32908
# define SYS_epoll_ctl_old 757,32946
# define SYS_epoll_pwait 758,32992
# define SYS_epoll_wait 759,33034
# define SYS_epoll_wait_old 760,33074
# define SYS_eventfd 761,33122
# define SYS_eventfd2 762,33156
# define SYS_execve 763,33192
# define SYS_exit 764,33224
# define SYS_exit_group 765,33252
# define SYS_faccessat 766,33292
# define SYS_fadvise64 767,33330
# define SYS_fallocate 768,33368
# define SYS_fanotify_init 769,33406
# define SYS_fanotify_mark 770,33452
# define SYS_fchdir 771,33498
# define SYS_fchmod 772,33530
# define SYS_fchmodat 773,33562
# define SYS_fchown 774,33598
# define SYS_fchownat 775,33630
# define SYS_fcntl 776,33666
# define SYS_fdatasync 777,33696
# define SYS_fgetxattr 778,33734
# define SYS_flistxattr 779,33772
# define SYS_flock 780,33812
# define SYS_fork 781,33842
# define SYS_fremovexattr 782,33870
# define SYS_fsetxattr 783,33914
# define SYS_fstat 784,33952
# define SYS_fstatfs 785,33982
# define SYS_fsync 786,34016
# define SYS_ftruncate 787,34046
# define SYS_futex 788,34084
# define SYS_futimesat 789,34114
# define SYS_get_kernel_syms 790,34152
# define SYS_get_mempolicy 791,34202
# define SYS_get_robust_list 792,34248
# define SYS_get_thread_area 793,34298
# define SYS_getcpu 794,34348
# define SYS_getcwd 795,34380
# define SYS_getdents 796,34412
# define SYS_getdents64 797,34448
# define SYS_getegid 798,34488
# define SYS_geteuid 799,34522
# define SYS_getgid 800,34556
# define SYS_getgroups 801,34588
# define SYS_getitimer 802,34626
# define SYS_getpeername 803,34664
# define SYS_getpgid 804,34706
# define SYS_getpgrp 805,34740
# define SYS_getpid 806,34774
# define SYS_getpmsg 807,34806
# define SYS_getppid 808,34840
# define SYS_getpriority 809,34874
# define SYS_getresgid 810,34916
# define SYS_getresuid 811,34954
# define SYS_getrlimit 812,34992
# define SYS_getrusage 813,35030
# define SYS_getsid 814,35068
# define SYS_getsockname 815,35100
# define SYS_getsockopt 816,35142
# define SYS_gettid 817,35182
# define SYS_gettimeofday 818,35214
# define SYS_getuid 819,35258
# define SYS_getxattr 820,35290
# define SYS_init_module 821,35326
# define SYS_inotify_add_watch 822,35368
# define SYS_inotify_init 823,35422
# define SYS_inotify_init1 824,35466
# define SYS_inotify_rm_watch 825,35512
# define SYS_io_cancel 826,35564
# define SYS_io_destroy 827,35602
# define SYS_io_getevents 828,35642
# define SYS_io_setup 829,35686
# define SYS_io_submit 830,35722
# define SYS_ioctl 831,35760
# define SYS_ioperm 832,35790
# define SYS_iopl 833,35822
# define SYS_ioprio_get 834,35850
# define SYS_ioprio_set 835,35890
# define SYS_kcmp 836,35930
# define SYS_kexec_load 837,35958
# define SYS_keyctl 838,35998
# define SYS_kill 839,36030
# define SYS_lchown 840,36058
# define SYS_lgetxattr 841,36090
# define SYS_link 842,36128
# define SYS_linkat 843,36156
# define SYS_listen 844,36188
# define SYS_listxattr 845,36220
# define SYS_llistxattr 846,36258
# define SYS_lookup_dcookie 847,36298
# define SYS_lremovexattr 848,36346
# define SYS_lseek 849,36390
# define SYS_lsetxattr 850,36420
# define SYS_lstat 851,36458
# define SYS_madvise 852,36488
# define SYS_mbind 853,36522
# define SYS_migrate_pages 854,36552
# define SYS_mincore 855,36598
# define SYS_mkdir 856,36632
# define SYS_mkdirat 857,36662
# define SYS_mknod 858,36696
# define SYS_mknodat 859,36726
# define SYS_mlock 860,36760
# define SYS_mlockall 861,36790
# define SYS_mmap 862,36826
# define SYS_modify_ldt 863,36854
# define SYS_mount 864,36894
# define SYS_move_pages 865,36924
# define SYS_mprotect 866,36964
# define SYS_mq_getsetattr 867,37000
# define SYS_mq_notify 868,37046
# define SYS_mq_open 869,37084
# define SYS_mq_timedreceive 870,37118
# define SYS_mq_timedsend 871,37168
# define SYS_mq_unlink 872,37212
# define SYS_mremap 873,37250
# define SYS_msgctl 874,37282
# define SYS_msgget 875,37314
# define SYS_msgrcv 876,37346
# define SYS_msgsnd 877,37378
# define SYS_msync 878,37410
# define SYS_munlock 879,37440
# define SYS_munlockall 880,37474
# define SYS_munmap 881,37514
# define SYS_name_to_handle_at 882,37546
# define SYS_nanosleep 883,37600
# define SYS_newfstatat 884,37638
# define SYS_nfsservctl 885,37678
# define SYS_open 886,37718
# define SYS_open_by_handle_at 887,37746
# define SYS_openat 888,37800
# define SYS_pause 889,37832
# define SYS_perf_event_open 890,37862
# define SYS_personality 891,37912
# define SYS_pipe 892,37954
# define SYS_pipe2 893,37982
# define SYS_pivot_root 894,38012
# define SYS_poll 895,38052
# define SYS_ppoll 896,38080
# define SYS_prctl 897,38110
# define SYS_pread64 898,38140
# define SYS_preadv 899,38174
# define SYS_prlimit64 900,38206
# define SYS_process_vm_readv 901,38244
# define SYS_process_vm_writev 902,38296
# define SYS_pselect6 903,38350
# define SYS_ptrace 904,38386
# define SYS_putpmsg 905,38418
# define SYS_pwrite64 906,38452
# define SYS_pwritev 907,38488
# define SYS_query_module 908,38522
# define SYS_quotactl 909,38566
# define SYS_read 910,38602
# define SYS_readahead 911,38630
# define SYS_readlink 912,38668
# define SYS_readlinkat 913,38704
# define SYS_readv 914,38744
# define SYS_reboot 915,38774
# define SYS_recvfrom 916,38806
# define SYS_recvmmsg 917,38842
# define SYS_recvmsg 918,38878
# define SYS_remap_file_pages 919,38912
# define SYS_removexattr 920,38964
# define SYS_rename 921,39006
# define SYS_renameat 922,39038
# define SYS_request_key 923,39074
# define SYS_restart_syscall 924,39116
# define SYS_rmdir 925,39166
# define SYS_rt_sigaction 926,39196
# define SYS_rt_sigpending 927,39240
# define SYS_rt_sigprocmask 928,39286
# define SYS_rt_sigqueueinfo 929,39334
# define SYS_rt_sigreturn 930,39384
# define SYS_rt_sigsuspend 931,39428
# define SYS_rt_sigtimedwait 932,39474
# define SYS_rt_tgsigqueueinfo 933,39524
# define SYS_sched_get_priority_max 934,39578
# define SYS_sched_get_priority_min 935,39642
# define SYS_sched_getaffinity 936,39706
# define SYS_sched_getparam 937,39760
# define SYS_sched_getscheduler 938,39808
# define SYS_sched_rr_get_interval 939,39864
# define SYS_sched_setaffinity 940,39926
# define SYS_sched_setparam 941,39980
# define SYS_sched_setscheduler 942,40028
# define SYS_sched_yield 943,40084
# define SYS_security 944,40126
# define SYS_select 945,40162
# define SYS_semctl 946,40194
# define SYS_semget 947,40226
# define SYS_semop 948,40258
# define SYS_semtimedop 949,40288
# define SYS_sendfile 950,40328
# define SYS_sendmmsg 951,40364
# define SYS_sendmsg 952,40400
# define SYS_sendto 953,40434
# define SYS_set_mempolicy 954,40466
# define SYS_set_robust_list 955,40512
# define SYS_set_thread_area 956,40562
# define SYS_set_tid_address 957,40612
# define SYS_setdomainname 958,40662
# define SYS_setfsgid 959,40708
# define SYS_setfsuid 960,40744
# define SYS_setgid 961,40780
# define SYS_setgroups 962,40812
# define SYS_sethostname 963,40850
# define SYS_setitimer 964,40892
# define SYS_setns 965,40930
# define SYS_setpgid 966,40960
# define SYS_setpriority 967,40994
# define SYS_setregid 968,41036
# define SYS_setresgid 969,41072
# define SYS_setresuid 970,41110
# define SYS_setreuid 971,41148
# define SYS_setrlimit 972,41184
# define SYS_setsid 973,41222
# define SYS_setsockopt 974,41254
# define SYS_settimeofday 975,41294
# define SYS_setuid 976,41338
# define SYS_setxattr 977,41370
# define SYS_shmat 978,41406
# define SYS_shmctl 979,41436
# define SYS_shmdt 980,41468
# define SYS_shmget 981,41498
# define SYS_shutdown 982,41530
# define SYS_sigaltstack 983,41566
# define SYS_signalfd 984,41608
# define SYS_signalfd4 985,41644
# define SYS_socket 986,41682
# define SYS_socketpair 987,41714
# define SYS_splice 988,41754
# define SYS_stat 989,41786
# define SYS_statfs 990,41814
# define SYS_swapoff 991,41846
# define SYS_swapon 992,41880
# define SYS_symlink 993,41912
# define SYS_symlinkat 994,41946
# define SYS_sync 995,41984
# define SYS_sync_file_range 996,42012
# define SYS_syncfs 997,42062
# define SYS_sysfs 998,42094
# define SYS_sysinfo 999,42124
# define SYS_syslog 1000,42158
# define SYS_tee 1001,42190
# define SYS_tgkill 1002,42216
# define SYS_time 1003,42248
# define SYS_timer_create 1004,42276
# define SYS_timer_delete 1005,42320
# define SYS_timer_getoverrun 1006,42364
# define SYS_timer_gettime 1007,42416
# define SYS_timer_settime 1008,42462
# define SYS_timerfd_create 1009,42508
# define SYS_timerfd_gettime 1010,42556
# define SYS_timerfd_settime 1011,42606
# define SYS_times 1012,42656
# define SYS_tkill 1013,42686
# define SYS_truncate 1014,42716
# define SYS_tuxcall 1015,42752
# define SYS_umask 1016,42786
# define SYS_umount2 1017,42816
# define SYS_uname 1018,42850
# define SYS_unlink 1019,42880
# define SYS_unlinkat 1020,42912
# define SYS_unshare 1021,42948
# define SYS_uselib 1022,42982
# define SYS_ustat 1023,43014
# define SYS_utime 1024,43044
# define SYS_utimensat 1025,43074
# define SYS_utimes 1026,43112
# define SYS_vfork 1027,43144
# define SYS_vhangup 1028,43174
# define SYS_vmsplice 1029,43208
# define SYS_vserver 1030,43244
# define SYS_wait4 1031,43278
# define SYS_waitid 1032,43308
# define SYS_write 1033,43340
# define SYS_writev 1034,43370
# define SYS__llseek 1037,43409
# define SYS__newselect 1038,43443
# define SYS__sysctl 1039,43483
# define SYS_access 1040,43517
# define SYS_acct 1041,43549
# define SYS_add_key 1042,43577
# define SYS_adjtimex 1043,43611
# define SYS_afs_syscall 1044,43647
# define SYS_alarm 1045,43689
# define SYS_bdflush 1046,43719
# define SYS_break 1047,43753
# define SYS_brk 1048,43783
# define SYS_capget 1049,43809
# define SYS_capset 1050,43841
# define SYS_chdir 1051,43873
# define SYS_chmod 1052,43903
# define SYS_chown 1053,43933
# define SYS_chown32 1054,43963
# define SYS_chroot 1055,43997
# define SYS_clock_adjtime 1056,44029
# define SYS_clock_getres 1057,44075
# define SYS_clock_gettime 1058,44119
# define SYS_clock_nanosleep 1059,44165
# define SYS_clock_settime 1060,44215
# define SYS_clone 1061,44261
# define SYS_close 1062,44291
# define SYS_creat 1063,44321
# define SYS_create_module 1064,44351
# define SYS_delete_module 1065,44397
# define SYS_dup 1066,44443
# define SYS_dup2 1067,44469
# define SYS_dup3 1068,44497
# define SYS_epoll_create 1069,44525
# define SYS_epoll_create1 1070,44569
# define SYS_epoll_ctl 1071,44615
# define SYS_epoll_pwait 1072,44653
# define SYS_epoll_wait 1073,44695
# define SYS_eventfd 1074,44735
# define SYS_eventfd2 1075,44769
# define SYS_execve 1076,44805
# define SYS_exit 1077,44837
# define SYS_exit_group 1078,44865
# define SYS_faccessat 1079,44905
# define SYS_fadvise64 1080,44943
# define SYS_fadvise64_64 1081,44981
# define SYS_fallocate 1082,45025
# define SYS_fanotify_init 1083,45063
# define SYS_fanotify_mark 1084,45109
# define SYS_fchdir 1085,45155
# define SYS_fchmod 1086,45187
# define SYS_fchmodat 1087,45219
# define SYS_fchown 1088,45255
# define SYS_fchown32 1089,45287
# define SYS_fchownat 1090,45323
# define SYS_fcntl 1091,45359
# define SYS_fcntl64 1092,45389
# define SYS_fdatasync 1093,45423
# define SYS_fgetxattr 1094,45461
# define SYS_flistxattr 1095,45499
# define SYS_flock 1096,45539
# define SYS_fork 1097,45569
# define SYS_fremovexattr 1098,45597
# define SYS_fsetxattr 1099,45641
# define SYS_fstat 1100,45679
# define SYS_fstat64 1101,45709
# define SYS_fstatat64 1102,45743
# define SYS_fstatfs 1103,45781
# define SYS_fstatfs64 1104,45815
# define SYS_fsync 1105,45853
# define SYS_ftime 1106,45883
# define SYS_ftruncate 1107,45913
# define SYS_ftruncate64 1108,45951
# define SYS_futex 1109,45993
# define SYS_futimesat 1110,46023
# define SYS_get_kernel_syms 1111,46061
# define SYS_get_mempolicy 1112,46111
# define SYS_get_robust_list 1113,46157
# define SYS_get_thread_area 1114,46207
# define SYS_getcpu 1115,46257
# define SYS_getcwd 1116,46289
# define SYS_getdents 1117,46321
# define SYS_getdents64 1118,46357
# define SYS_getegid 1119,46397
# define SYS_getegid32 1120,46431
# define SYS_geteuid 1121,46469
# define SYS_geteuid32 1122,46503
# define SYS_getgid 1123,46541
# define SYS_getgid32 1124,46573
# define SYS_getgroups 1125,46609
# define SYS_getgroups32 1126,46647
# define SYS_getitimer 1127,46689
# define SYS_getpgid 1128,46727
# define SYS_getpgrp 1129,46761
# define SYS_getpid 1130,46795
# define SYS_getpmsg 1131,46827
# define SYS_getppid 1132,46861
# define SYS_getpriority 1133,46895
# define SYS_getresgid 1134,46937
# define SYS_getresgid32 1135,46975
# define SYS_getresuid 1136,47017
# define SYS_getresuid32 1137,47055
# define SYS_getrlimit 1138,47097
# define SYS_getrusage 1139,47135
# define SYS_getsid 1140,47173
# define SYS_gettid 1141,47205
# define SYS_gettimeofday 1142,47237
# define SYS_getuid 1143,47281
# define SYS_getuid32 1144,47313
# define SYS_getxattr 1145,47349
# define SYS_gtty 1146,47385
# define SYS_idle 1147,47413
# define SYS_init_module 1148,47441
# define SYS_inotify_add_watch 1149,47483
# define SYS_inotify_init 1150,47537
# define SYS_inotify_init1 1151,47581
# define SYS_inotify_rm_watch 1152,47627
# define SYS_io_cancel 1153,47679
# define SYS_io_destroy 1154,47717
# define SYS_io_getevents 1155,47757
# define SYS_io_setup 1156,47801
# define SYS_io_submit 1157,47837
# define SYS_ioctl 1158,47875
# define SYS_ioperm 1159,47905
# define SYS_iopl 1160,47937
# define SYS_ioprio_get 1161,47965
# define SYS_ioprio_set 1162,48005
# define SYS_ipc 1163,48045
# define SYS_kcmp 1164,48071
# define SYS_kexec_load 1165,48099
# define SYS_keyctl 1166,48139
# define SYS_kill 1167,48171
# define SYS_lchown 1168,48199
# define SYS_lchown32 1169,48231
# define SYS_lgetxattr 1170,48267
# define SYS_link 1171,48305
# define SYS_linkat 1172,48333
# define SYS_listxattr 1173,48365
# define SYS_llistxattr 1174,48403
# define SYS_lock 1175,48443
# define SYS_lookup_dcookie 1176,48471
# define SYS_lremovexattr 1177,48519
# define SYS_lseek 1178,48563
# define SYS_lsetxattr 1179,48593
# define SYS_lstat 1180,48631
# define SYS_lstat64 1181,48661
# define SYS_madvise 1182,48695
# define SYS_mbind 1183,48729
# define SYS_migrate_pages 1184,48759
# define SYS_mincore 1185,48805
# define SYS_mkdir 1186,48839
# define SYS_mkdirat 1187,48869
# define SYS_mknod 1188,48903
# define SYS_mknodat 1189,48933
# define SYS_mlock 1190,48967
# define SYS_mlockall 1191,48997
# define SYS_mmap 1192,49033
# define SYS_mmap2 1193,49061
# define SYS_modify_ldt 1194,49091
# define SYS_mount 1195,49131
# define SYS_move_pages 1196,49161
# define SYS_mprotect 1197,49201
# define SYS_mpx 1198,49237
# define SYS_mq_getsetattr 1199,49263
# define SYS_mq_notify 1200,49309
# define SYS_mq_open 1201,49347
# define SYS_mq_timedreceive 1202,49381
# define SYS_mq_timedsend 1203,49431
# define SYS_mq_unlink 1204,49475
# define SYS_mremap 1205,49513
# define SYS_msync 1206,49545
# define SYS_munlock 1207,49575
# define SYS_munlockall 1208,49609
# define SYS_munmap 1209,49649
# define SYS_name_to_handle_at 1210,49681
# define SYS_nanosleep 1211,49735
# define SYS_nfsservctl 1212,49773
# define SYS_nice 1213,49813
# define SYS_oldfstat 1214,49841
# define SYS_oldlstat 1215,49877
# define SYS_oldolduname 1216,49913
# define SYS_oldstat 1217,49955
# define SYS_olduname 1218,49989
# define SYS_open 1219,50025
# define SYS_open_by_handle_at 1220,50053
# define SYS_openat 1221,50107
# define SYS_pause 1222,50139
# define SYS_perf_event_open 1223,50169
# define SYS_personality 1224,50219
# define SYS_pipe 1225,50261
# define SYS_pipe2 1226,50289
# define SYS_pivot_root 1227,50319
# define SYS_poll 1228,50359
# define SYS_ppoll 1229,50387
# define SYS_prctl 1230,50417
# define SYS_pread64 1231,50447
# define SYS_preadv 1232,50481
# define SYS_prlimit64 1233,50513
# define SYS_process_vm_readv 1234,50551
# define SYS_process_vm_writev 1235,50603
# define SYS_prof 1236,50657
# define SYS_profil 1237,50685
# define SYS_pselect6 1238,50717
# define SYS_ptrace 1239,50753
# define SYS_putpmsg 1240,50785
# define SYS_pwrite64 1241,50819
# define SYS_pwritev 1242,50855
# define SYS_query_module 1243,50889
# define SYS_quotactl 1244,50933
# define SYS_read 1245,50969
# define SYS_readahead 1246,50997
# define SYS_readdir 1247,51035
# define SYS_readlink 1248,51069
# define SYS_readlinkat 1249,51105
# define SYS_readv 1250,51145
# define SYS_reboot 1251,51175
# define SYS_recvmmsg 1252,51207
# define SYS_remap_file_pages 1253,51243
# define SYS_removexattr 1254,51295
# define SYS_rename 1255,51337
# define SYS_renameat 1256,51369
# define SYS_request_key 1257,51405
# define SYS_restart_syscall 1258,51447
# define SYS_rmdir 1259,51497
# define SYS_rt_sigaction 1260,51527
# define SYS_rt_sigpending 1261,51571
# define SYS_rt_sigprocmask 1262,51617
# define SYS_rt_sigqueueinfo 1263,51665
# define SYS_rt_sigreturn 1264,51715
# define SYS_rt_sigsuspend 1265,51759
# define SYS_rt_sigtimedwait 1266,51805
# define SYS_rt_tgsigqueueinfo 1267,51855
# define SYS_sched_get_priority_max 1268,51909
# define SYS_sched_get_priority_min 1269,51973
# define SYS_sched_getaffinity 1270,52037
# define SYS_sched_getparam 1271,52091
# define SYS_sched_getscheduler 1272,52139
# define SYS_sched_rr_get_interval 1273,52195
# define SYS_sched_setaffinity 1274,52257
# define SYS_sched_setparam 1275,52311
# define SYS_sched_setscheduler 1276,52359
# define SYS_sched_yield 1277,52415
# define SYS_select 1278,52457
# define SYS_sendfile 1279,52489
# define SYS_sendfile64 1280,52525
# define SYS_sendmmsg 1281,52565
# define SYS_set_mempolicy 1282,52601
# define SYS_set_robust_list 1283,52647
# define SYS_set_thread_area 1284,52697
# define SYS_set_tid_address 1285,52747
# define SYS_setdomainname 1286,52797
# define SYS_setfsgid 1287,52843
# define SYS_setfsgid32 1288,52879
# define SYS_setfsuid 1289,52919
# define SYS_setfsuid32 1290,52955
# define SYS_setgid 1291,52995
# define SYS_setgid32 1292,53027
# define SYS_setgroups 1293,53063
# define SYS_setgroups32 1294,53101
# define SYS_sethostname 1295,53143
# define SYS_setitimer 1296,53185
# define SYS_setns 1297,53223
# define SYS_setpgid 1298,53253
# define SYS_setpriority 1299,53287
# define SYS_setregid 1300,53329
# define SYS_setregid32 1301,53365
# define SYS_setresgid 1302,53405
# define SYS_setresgid32 1303,53443
# define SYS_setresuid 1304,53485
# define SYS_setresuid32 1305,53523
# define SYS_setreuid 1306,53565
# define SYS_setreuid32 1307,53601
# define SYS_setrlimit 1308,53641
# define SYS_setsid 1309,53679
# define SYS_settimeofday 1310,53711
# define SYS_setuid 1311,53755
# define SYS_setuid32 1312,53787
# define SYS_setxattr 1313,53823
# define SYS_sgetmask 1314,53859
# define SYS_sigaction 1315,53895
# define SYS_sigaltstack 1316,53933
# define SYS_signal 1317,53975
# define SYS_signalfd 1318,54007
# define SYS_signalfd4 1319,54043
# define SYS_sigpending 1320,54081
# define SYS_sigprocmask 1321,54121
# define SYS_sigreturn 1322,54163
# define SYS_sigsuspend 1323,54201
# define SYS_socketcall 1324,54241
# define SYS_splice 1325,54281
# define SYS_ssetmask 1326,54313
# define SYS_stat 1327,54349
# define SYS_stat64 1328,54377
# define SYS_statfs 1329,54409
# define SYS_statfs64 1330,54441
# define SYS_stime 1331,54477
# define SYS_stty 1332,54507
# define SYS_swapoff 1333,54535
# define SYS_swapon 1334,54569
# define SYS_symlink 1335,54601
# define SYS_symlinkat 1336,54635
# define SYS_sync 1337,54673
# define SYS_sync_file_range 1338,54701
# define SYS_syncfs 1339,54751
# define SYS_sysfs 1340,54783
# define SYS_sysinfo 1341,54813
# define SYS_syslog 1342,54847
# define SYS_tee 1343,54879
# define SYS_tgkill 1344,54905
# define SYS_time 1345,54937
# define SYS_timer_create 1346,54965
# define SYS_timer_delete 1347,55009
# define SYS_timer_getoverrun 1348,55053
# define SYS_timer_gettime 1349,55105
# define SYS_timer_settime 1350,55151
# define SYS_timerfd_create 1351,55197
# define SYS_timerfd_gettime 1352,55245
# define SYS_timerfd_settime 1353,55295
# define SYS_times 1354,55345
# define SYS_tkill 1355,55375
# define SYS_truncate 1356,55405
# define SYS_truncate64 1357,55441
# define SYS_ugetrlimit 1358,55481
# define SYS_ulimit 1359,55521
# define SYS_umask 1360,55553
# define SYS_umount 1361,55583
# define SYS_umount2 1362,55615
# define SYS_uname 1363,55649
# define SYS_unlink 1364,55679
# define SYS_unlinkat 1365,55711
# define SYS_unshare 1366,55747
# define SYS_uselib 1367,55781
# define SYS_ustat 1368,55813
# define SYS_utime 1369,55843
# define SYS_utimensat 1370,55873
# define SYS_utimes 1371,55911
# define SYS_vfork 1372,55943
# define SYS_vhangup 1373,55973
# define SYS_vm86 1374,56007
# define SYS_vm86old 1375,56035
# define SYS_vmsplice 1376,56069
# define SYS_vserver 1377,56105
# define SYS_wait4 1378,56139
# define SYS_waitid 1379,56169
# define SYS_waitpid 1380,56201
# define SYS_write 1381,56235
# define SYS_writev 1382,56265

unix/injector.c,2734
static bool verbose 67,2475
static volatile int timeout_expired;71,2539
typedef enum _inject_method_t 73,2577
    INJECT_EARLY,74,2609
    INJECT_LD_PRELOAD,75,2665
    INJECT_PTRACE 76,2721
} inject_method_t;77,2780
typedef struct _dr_inject_info_t 80,2844
    process_id_t pid;81,2879
    const char *exe;exe82,2901
    const char *image_name;image_name83,2963
    const char **argv;argv84,3017
    int pipe_fd;85,3074
    bool exec_self;87,3092
    inject_method_t method;88,3161
    bool killpg;90,3190
    bool exited;91,3207
    int exitcode;92,3224
} dr_inject_info_t;93,3242
get_application_short_name(107,3613
safe_read(115,3734
internal_error(126,4074
ignore_assert(134,4248
report_dynamorio_problem(140,4333
pre_execve_ld_preload(162,4932
pre_execve_early(211,7114
fork_suspended_child(217,7233
write_pipe_cmd(267,9007
inject_early(283,9392
inject_ld_preload(303,10058
create_inject_info(320,10620
get_elf_platform_path(334,11007
exe_is_right_bitwidth(346,11284
dr_inject_process_create(371,12059
dr_inject_prepare_to_exec(407,13046
dr_inject_prepare_to_ptrace(429,13648
dr_inject_prepare_new_process_group(442,13906
dr_inject_get_process_id(460,14314
dr_inject_get_image_name(468,14451
option_present(478,14739
dr_inject_process_inject(489,15019
alarm_handler(545,16855
dr_inject_process_run(552,16926
dr_inject_wait_for_child(574,17580
dr_inject_process_exit(609,18625
enum { MAX_SHELL_CODE 653,20210
# define REG_PC_FIELD 656,20254
# define REG_SP_FIELD 657,20298
# define REG_RETVAL_FIELD 658,20342
enum { REG_PC_OFFSET 663,20467
enum { REG_PC_OFFSET = offsetof(663,20467
enum { REG_PC_OFFSET = offsetof(struct user_regs_struct,663,20467
enum { REG_PC_OFFSET = offsetof(struct user_regs_struct, REG_PC_FIELD)663,20467
#define APP 665,20542
static bool op_exec_gdb 667,20573
static dr_inject_info_t *injector_info;injector_info670,20665
static file_t injector_dr_fd;671,20705
static file_t injectee_dr_fd;672,20735
typedef struct _enum_name_pair_t 674,20766
    const int enum_val;675,20801
    const char * const enum_name;676,20825
} enum_name_pair_t;677,20859
static const enum_name_pair_t pt_req_map[pt_req_map682,20970
our_ptrace(715,22395
#define ptrace 736,23136
ptrace_read_memory(741,23251
ptrace_write_memory(761,23881
gen_push_string(784,24611
gen_syscall(796,25053
gen_print(824,26010
unexpected_trace_event(836,26366
wait_until_signal(848,26752
continue_until_break(866,27208
injectee_run_get_retval(879,27640
injectee_open(951,30082
injectee_mmap(967,30661
injectee_map_file(991,31734
injectee_unmap(1023,32728
injectee_prot(1045,33399
user_regs_to_mc(1070,34215
detach_and_exec_gdb(1113,35304
inject_ptrace(1151,36735

unix/loader.c,3234
#define SYSTEM_LIBRARY_PATH_VAR 60,2634
char *ld_library_path ld_library_path61,2684
static const char *system_lib_paths[system_lib_paths62,2714
#define NUM_SYSTEM_LIB_PATHS 83,3292
#define RPATH_ORIGIN 86,3383
static os_privmod_data_t *libdr_opd;libdr_opd88,3415
static bool privmod_initialized 89,3452
static size_t max_client_tls_size 90,3493
static bool printed_gdb_commands 93,3596
static char gdb_priv_cmds[gdb_priv_cmds95,3683
static size_t gdb_priv_cmds_sofar;96,3716
struct _IO_FILE  **privmod_stdout;privmod_stdout102,3881
struct _IO_FILE  **privmod_stderr;privmod_stderr103,3916
struct _IO_FILE  **privmod_stdin;privmod_stdin104,3951
#define LIBC_STDOUT_NAME 105,3985
#define LIBC_STDERR_NAME 106,4019
#define LIBC_STDIN_NAME 107,4053
os_loader_init_prologue(142,4878
os_loader_init_epilogue(167,5653
privload_add_gdb_cmd(189,6571
os_loader_exit(199,6885
os_loader_thread_init_prologue(213,7314
os_loader_thread_init_epilogue(245,8656
os_loader_thread_exit(251,8740
privload_add_areas(257,8815
privload_remove_areas(281,9674
privload_unmap_file(304,10549
privload_unload_imports(326,11295
dr_gdb_add_symbol_file(338,11690
privload_map_and_relocate(350,12139
privload_process_imports(421,14775
privload_call_entry(458,16051
privload_redirect_setup(510,17929
privload_os_finalize(516,18045
privload_init_search_paths(522,18123
privload_locate_and_load(529,18266
privload_load_private_library(538,18541
privload_load_finalized(555,18981
privload_search_rpath(561,19070
privload_locate(622,21680
get_private_library_address(711,24828
privload_call_modules_entry(760,26696
privload_call_lib_func(790,27769
get_private_library_bounds(806,28227
privload_relocate_mod(824,28680
privload_create_os_privmod_data(874,30911
privload_delete_os_privmod_data(893,31595
#define MAX_NUM_TLS_MOD 943,33957
typedef struct _tls_info_t 944,33984
    uint num_mods;945,34013
    int  offset;946,34032
    int  max_align;947,34049
    int  offs[offs948,34069
    privmod_t *mods[mods949,34101
} tls_info_t;950,34139
static tls_info_t tls_info;951,34153
static size_t tcb_size 977,35724
typedef struct _tcb_head_t 982,35881
    void *tcb;tcb983,35910
    void *dtv;dtv984,35925
    void *self;self985,35940
    int multithread;986,35956
    int gscope_flag;988,35988
    ptr_uint_t sysinfo;990,36016
    ptr_uint_t stack_guard;993,36085
    ptr_uint_t pointer_guard;994,36113
} tcb_head_t;995,36143
#define APP_LIBC_TLS_SIZE 1003,36546
privload_mod_tls_init(1007,36651
privload_tls_init(1050,38355
privload_tls_exit(1113,40967
typedef struct _tls_index_t 1126,41437
  unsigned long int ti_module;1127,41467
  unsigned long int ti_offset;1128,41498
} tls_index_t;1129,41529
redirect___tls_get_addr(1132,41559
redirect____tls_get_addr(1142,41892
typedef struct _redirect_import_t 1156,42385
    const char *name;name1157,42421
    app_pc func;1158,42443
} redirect_import_t;1159,42460
static const redirect_import_t redirect_imports[redirect_imports1161,42482
#define REDIRECT_IMPORTS_NUM 1173,43008
privload_redirect_sym(1176,43098
privload_setup_auxv(1198,43815
takeover_ptrace(1246,45498
reserve_brk(1293,47728
privload_early_inject(1307,48184

unix/module.c,3303
typedef union _elf_generic_header_t 44,2100
    Elf64_Ehdr elf64;45,2138
    Elf32_Ehdr elf32;46,2160
} elf_generic_header_t;47,2182
# undef LOG50,2240
# define LOG(51,2252
typedef struct _elf_import_iterator_t 55,2348
    dr_symbol_import_t symbol_import;56,2388
    ELF_SYM_TYPE *dynsym;dynsym61,2605
    size_t symentry_size;62,2676
    const char *dynstr;dynstr63,2746
    size_t dynstr_size;64,2817
    ELF_SYM_TYPE *cur_sym;cur_sym66,2880
    ELF_SYM_TYPE safe_cur_sym;67,2960
    ELF_SYM_TYPE *import_end;import_end68,3034
    bool error_occurred;69,3106
} elf_import_iterator_t;70,3175
# define DT_GNU_HASH 75,3330
# define STT_GNU_IFUNC 79,3392
is_elf_so_header_common(108,4700
is_elf_so_header(172,7103
os_modules_init(178,7210
os_modules_exit(184,7260
elf_dt_abs_addr(193,7421
module_segment_prot_to_osprot(233,9203
module_add_segment_data(249,9670
module_fill_os_data(305,12144
module_walk_program_headers(415,17128
module_num_program_headers(481,20179
module_vaddr_from_prog_header(495,20578
module_read_program_header(525,21696
module_hashtab_init(559,23134
os_module_area_init(590,24451
free_module_names(693,28806
print_modules(704,29118
os_module_area_reset(735,30237
elf_hash(765,31527
elf_gnu_hash(780,31787
elf_sym_matches(789,31971
gnu_hash_lookup(811,32790
elf_hash_lookup(856,34285
get_proc_address_from_os_data(894,35454
get_proc_address_ex(928,36911
get_proc_address(967,38485
get_named_section_bounds(974,38664
rct_is_exported_function(987,38989
get_module_short_name(996,39179
get_module_company_name(1004,39377
get_module_base(1011,39519
is_range_in_code_section(1025,39844
is_in_code_section(1034,40148
is_in_dot_data_section(1043,40421
is_in_any_section(1052,40702
is_mapped_as_image(1060,40890
os_get_module_info(1083,41830
os_get_module_info_all_names(1134,43502
os_module_get_rct_htable(1147,43940
module_get_nth_segment(1158,44270
module_get_header_size(1187,45247
get_elf_platform(1201,45656
file_is_elf64(1220,46263
module_has_text_relocs(1237,46793
module_has_text_relocs_ex(1282,48362
module_get_section_with_name(1294,48686
module_read_os_data(1322,49775
get_shared_lib_name(1351,50828
module_get_os_privmod_data(1365,51188
module_find_phdr(1501,56077
module_get_relro(1516,56467
module_lookup_symbol(1534,57056
module_undef_symbols(1596,59168
dr_module_import_iterator_start(1606,59407
dr_module_import_iterator_hasnext(1614,59601
dr_module_import_iterator_next(1620,59714
dr_module_import_iterator_stop(1626,59807
dynsym_next(1631,59890
dynsym_next_import(1638,60071
dr_symbol_import_iterator_start(1663,60933
dr_symbol_import_iterator_hasnext(1730,63562
dr_symbol_import_iterator_next(1738,63829
dr_symbol_import_iterator_stop(1752,64280
module_relocate_symbol(1762,64568
module_relocate_rel(1899,68984
module_relocate_rela(1911,69265
module_get_text_section(1928,69745
redirect_malloc(1958,70867
redirect_realloc(1977,71431
redirect_calloc(1996,71954
redirect_free(2011,72303
os_read_until(2025,72650
elf_loader_init(2039,72931
elf_loader_destroy(2048,73145
elf_loader_read_ehdr(2060,73401
elf_loader_map_file(2079,73996
elf_loader_read_phdrs(2100,74781
elf_loader_read_headers(2125,75724
elf_loader_map_phdrs(2137,76012
elf_loader_find_pt_interp(2255,81423

unix/module.h,5107
#define MODULE_H35,1769
# define ELF_HEADER_TYPE 42,1991
# define ELF_PROGRAM_HEADER_TYPE 43,2027
# define ELF_SECTION_HEADER_TYPE 44,2071
# define ELF_DYNAMIC_ENTRY_TYPE 45,2115
# define ELF_ADDR 46,2157
# define ELF_WORD 47,2186
# define ELF_HALF 48,2216
# define ELF_SYM_TYPE 49,2245
# define ELF_ST_TYPE 50,2277
# define ELF_WORD_SIZE 51,2312
# define ELF_ST_BIND 52,2363
# define ELF_ST_VISIBILITY 53,2398
# define ELF_REL_TYPE 54,2445
# define ELF_RELA_TYPE 55,2477
# define ELF_AUXV_TYPE 56,2511
# define ELF_HEADER_TYPE 58,2553
# define ELF_PROGRAM_HEADER_TYPE 59,2589
# define ELF_SECTION_HEADER_TYPE 60,2633
# define ELF_DYNAMIC_ENTRY_TYPE 61,2677
# define ELF_ADDR 62,2719
# define ELF_WORD 63,2748
# define ELF_HALF 64,2777
# define ELF_SYM_TYPE 65,2806
# define ELF_ST_TYPE 66,2838
# define ELF_WORD_SIZE 67,2873
# define ELF_ST_BIND 68,2924
# define ELF_ST_VISIBILITY 69,2959
# define ELF_REL_TYPE 70,3006
# define ELF_RELA_TYPE 71,3038
# define ELF_AUXV_TYPE 72,3072
# define ELF_R_TYPE 77,3159
# define ELF_R_SYM 78,3194
# define ELF_R_INFO 79,3228
# define ELF_R_NONE 81,3285
# define ELF_R_DIRECT 82,3346
# define ELF_R_PC32 83,3412
# define ELF_R_COPY 84,3490
# define ELF_R_GLOB_DAT 85,3565
# define ELF_R_JUMP_SLOT 86,3627
# define ELF_R_RELATIVE 87,3689
#  define R_X86_64_IRELATIVE 89,3793
# define ELF_R_IRELATIVE 91,3833
# define ELF_R_TLS_DTPMOD 93,3938
# define ELF_R_TLS_TPOFF 94,4000
# define ELF_R_TLS_DTPOFF 95,4081
#  define R_X86_64_TLSDESC 97,4187
# define ELF_R_TLS_DESC 99,4227
# define ELF_R_TYPE 105,4593
# define ELF_R_SYM 106,4628
# define ELF_R_INFO 107,4662
# define ELF_R_NONE 109,4719
# define ELF_R_DIRECT 110,4775
# define ELF_R_PC32 111,4836
# define ELF_R_COPY 112,4903
# define ELF_R_GLOB_DAT 113,4973
# define ELF_R_JUMP_SLOT 114,5030
# define ELF_R_RELATIVE 115,5087
#  define R_386_IRELATIVE 117,5183
# define ELF_R_IRELATIVE 119,5220
# define ELF_R_TLS_DTPMOD 121,5319
# define ELF_R_TLS_TPOFF 122,5381
# define ELF_R_TLS_DTPOFF 123,5469
#  define R_386_TLS_DESC 125,5565
# define ELF_R_TLS_DESC 127,5603
#define OS_IMAGE_READ 135,6036
#define OS_IMAGE_WRITE 136,6076
#define OS_IMAGE_EXECUTE 137,6117
typedef struct _module_segment_t 142,6315
    app_pc start;144,6420
    app_pc end;145,6438
    uint prot;146,6454
} module_segment_t;147,6469
typedef struct _os_module_data_t 149,6490
    app_pc base_address;157,6976
    size_t alignment;158,7002
    size_t checksum;161,7103
    size_t timestamp;162,7124
    bool   hash_is_gnu;167,7284
    app_pc hashtab;168,7335
    size_t num_buckets;169,7403
    app_pc buckets;170,7460
    size_t num_chain;171,7527
    app_pc chain;172,7583
    app_pc dynsym;173,7649
    app_pc dynstr;174,7706
    size_t dynstr_size;175,7763
    size_t symentry_size;176,7811
    app_pc gnu_bitmask;178,7891
    ptr_uint_t gnu_shift;179,7915
    ptr_uint_t gnu_bitidx;180,7941
    size_t gnu_symbias;181,7968
    bool contiguous;184,8098
    uint num_segments;185,8119
    uint alloc_segments;186,8192
    module_segment_t *segments;segments187,8250
} os_module_data_t;188,8282
typedef void (*fp_t)fp_t190,8303
typedef struct _os_privmod_data_t 194,8458
    os_module_data_t os_data;195,8494
    ELF_DYNAMIC_ENTRY_TYPE *dyn;dyn196,8524
    ptr_int_t      load_delta;197,8557
    char          *soname;soname198,8621
    ELF_ADDR       pltgot;199,8648
    size_t         pltrelsz;200,8675
    ELF_WORD       pltrel;201,8704
    bool           textrel;202,8731
    app_pc         jmprel;203,8759
    ELF_REL_TYPE  *rel;rel204,8786
    size_t         relsz;205,8810
    size_t         relent;206,8836
    ELF_RELA_TYPE *rela;rela207,8863
    size_t         relasz;208,8888
    size_t         relaent;209,8915
    app_pc         verneed;210,8943
    int            verneednum;211,8971
    int            relcount;212,9002
    ELF_HALF      *versym;versym213,9031
    fp_t           init;215,9105
    fp_t           fini;216,9130
    fp_t          *init_array;init_array217,9155
    fp_t          *fini_array;fini_array218,9220
    size_t         init_arraysz;219,9285
    size_t         fini_arraysz;220,9318
    uint           tls_block_size;222,9370
    uint           tls_align;223,9440
    uint           tls_modid;224,9510
    uint           tls_offset;225,9585
    uint           tls_image_size;226,9652
    uint           tls_first_byte;227,9724
    app_pc         tls_image;228,9804
} os_privmod_data_t;229,9873
typedef struct elf_loader_t 307,11864
    const char *filename;filename308,11894
    file_t fd;309,11920
    ELF_HEADER_TYPE *ehdr;ehdr310,11935
    ELF_PROGRAM_HEADER_TYPE *phdrs;phdrs311,11998
    app_pc load_base;312,12073
    ptr_int_t load_delta;313,12130
    size_t image_size;314,12203
    void *file_map;file_map315,12275
    size_t file_size;316,12348
    byte buf[buf324,12783
} elf_loader_t;325,12861
typedef byte *(*map_fn_t)map_fn_t327,12878
typedef bool (*unmap_fn_t)unmap_fn_t329,13033
typedef bool (*prot_fn_t)prot_fn_t330,13085

unix/native_elf.c,923
enum { DL_RUNTIME_RESOLVE_IDX 73,2938
typedef void *(*fixup_fn_t)fixup_fn_t76,3034
app_pc app_dl_runtime_resolve;79,3170
fixup_fn_t app_dl_fixup;80,3201
enum { MAX_STUB_SIZE 82,3227
static byte plt_stub_template[plt_stub_template84,3257
static uint plt_stub_immed_offset;85,3303
static uint plt_stub_jmp_tgt_offset;86,3338
static size_t plt_stub_size;87,3375
static app_pc stub_heap;88,3404
static app_pc reachability_stub;90,3440
module_contains_pc(94,3493
find_dl_fixup(104,3821
initialize_plt_stub_template(137,4853
replace_module_resolver(184,6887
create_plt_stub(243,8975
destroy_plt_stub(266,9695
plt_reloc_entry_size(276,9929
is_special_stub(290,10191
update_plt_relocations(312,10797
module_change_hooks(347,12116
native_module_hook(393,13713
native_module_unhook(400,13875
find_plt_reloc(407,14057
dynamorio_dl_fixup(443,14931
native_module_init(470,15841
native_module_exit(488,16437

unix/nudgesig.c,64
create_nudge_signal_payload(51,2042
send_nudge_signal(77,2729

unix/os.c,18831
#define _LARGEFILE64_SOURCE50,2488
# define MAP_32BIT 56,2646
# define F_DUPFD_CLOEXEC 90,3490
# define SYSNUM_STAT 95,3597
# define SYSNUM_FSTAT 96,3627
# define SYSNUM_STAT 98,3665
# define SYSNUM_FSTAT 99,3697
typedef int (*init_fn_t)init_fn_t103,3789
char **our_environ;our_environ110,4127
#undef errno113,4233
# define _GNU_SOURCE 125,4567
# define __USE_GNU 127,4659
# undef ASSERT153,5306
# undef ASSERT_NOT_IMPLEMENTED154,5321
# undef ASSERT_NOT_TESTED155,5352
# undef ASSERT_CURIOSITY156,5378
# define ASSERT(157,5403
# define ASSERT_NOT_IMPLEMENTED(158,5436
# define ASSERT_NOT_TESTED(159,5485
# define ASSERT_CURIOSITY(160,5529
# undef LOG161,5572
# undef DOSTATS162,5584
# define LOG(163,5600
# define DOSTATS(164,5632
typedef struct _our_modify_ldt_t 172,5988
    unsigned int  entry_number;173,6023
    unsigned int  base_addr;174,6055
    unsigned int  limit;175,6084
    unsigned int  seg_32bit:seg_32bit176,6109
    unsigned int  contents:contents177,6140
    unsigned int  read_exec_only:read_exec_only178,6170
    unsigned int  limit_in_pages:limit_in_pages179,6206
    unsigned int  seg_not_present:seg_not_present180,6242
    unsigned int  useable:useable181,6279
} our_modify_ldt_t;182,6308
# define FS_TLS 195,6671
# define GS_TLS 196,6723
#define GDT_NUM_TLS_SLOTS 205,6988
#define GDT_ENTRY_TLS_MIN_32 206,7016
#define GDT_ENTRY_TLS_MIN_64 207,7047
static uint gdt_entry_tls_min 212,7251
static bool return_stolen_lib_tls_gdt;221,7657
#define MAX_THREADS 231,8058
typedef struct _tls_slot_t 232,8082
    thread_id_t tid;233,8111
    dcontext_t *dcontext;dcontext234,8132
} tls_slot_t;235,8158
static tls_slot_t *tls_table;tls_table237,8207
#define MAX_NUM_CLIENT_TLS 242,8376
static bool client_tls_allocated[client_tls_allocated247,8531
static char dynamorio_library_path[dynamorio_library_path265,9332
static char dynamorio_alt_arch_path[dynamorio_alt_arch_path267,9425
#define DR_LIBDIR_X86 269,9525
#define DR_LIBDIR_X64 270,9569
static app_pc dynamo_dll_start 273,9658
static app_pc dynamo_dll_end 274,9697
static app_pc executable_start 276,9752
static app_pc executable_end 277,9791
static char executable_path[executable_path280,9867
static char *executable_basename;executable_basename281,9910
static bool kernel_thread_groups;284,10033
bool kernel_futex_support 289,10168
static bool kernel_64bit;291,10204
pid_t pid_cached;293,10231
static bool fault_handling_initialized;295,10250
uint kilo_hertz;298,10312
static mutex_t memory_info_buf_lock 302,10436
static mutex_t maps_iter_buf_lock 304,10572
DR_API file_t our_stdout 307,10721
DR_API file_t our_stderr 308,10763
DR_API file_t our_stdin 309,10805
static struct rlimit app_rlimit_nofile;312,10878
static generic_table_t *fd_table;fd_table318,11116
#define INIT_HTABLE_SIZE_FD 319,11150
IF_DEBUG_ELSE(328,11546
typedef struct _allmem_info_t 330,11606
    uint prot;331,11638
    dr_mem_type_t type;332,11653
    bool shareable;333,11677
} allmem_info_t;334,11697
typedef struct _maps_iter_t 363,12716
    app_pc vm_start;364,12746
    app_pc vm_end;365,12767
    uint prot;366,12786
    size_t offset;367,12801
    uint64 inode;368,12860
    const char *comment;comment373,13296
    bool may_alloc;379,13616
    file_t maps;380,13636
    char *newline;newline381,13653
    int bufread;382,13672
    int bufwant;383,13689
    char *buf;buf384,13706
    char *comment_buffer;comment_buffer385,13721
} maps_iter_t;386,13747
typedef struct _dir_iterator_t 395,14084
    file_t fd;396,14117
    int off;397,14132
    int end;398,14145
    const char *name;name399,14158
    char buf[buf400,14224
} dir_iterator_t;401,14299
app_pc vsyscall_page_start 417,14993
app_pc vsyscall_syscall_end_pc 419,15076
app_pc vsyscall_sysenter_return_pc 421,15177
#define VSYSCALL_PAGE_START_HARDCODED 422,15220
# define VSYSCALL_REGION_MAPS_NAME 428,15467
static int init_errno;445,16316
__errno_location(448,16385
static int libc_errno_tls_offs;479,17658
our_libc_errno_loc(481,17703
typedef int *(*errno_loc_t)errno_loc_t505,18553
get_libc_errno_location(508,18608
get_libc_errno(566,21025
our_unsetenv(600,22160
getenv(641,23101
dynamorio_set_envp(670,24111
our_init(677,24202
init_array[init_array717,25563
_init(724,25670
kernel_is_64bit(731,25768
get_uname(737,25832
os_init(757,26595
os_file_init(823,28989
get_application_pid_helper(864,31048
get_application_pid(877,31348
set_executable_path(886,31541
get_application_name_helper(894,31771
get_application_name(929,33128
get_application_short_name(941,33628
#define PROC_CPUINFO 947,33784
#define CPUMHZ_LINE_LENGTH 948,33821
#define CPUMHZ_LINE_FORMAT 949,33852
get_timer_frequency_cpuinfo(954,34129
get_timer_frequency(993,35373
#define UTC_TO_EPOCH_SECONDS 1006,35704
query_time_seconds(1010,35776
query_time_millis(1017,35922
find_stack_bottom(1037,36609
os_slow_exit(1062,37370
os_fast_exit(1081,37799
os_terminate_with_code(1087,37846
os_terminate(1104,38512
os_timeout(1110,38631
# define ARCH_SET_GS 1126,39115
# define ARCH_SET_FS 1127,39143
# define ARCH_GET_FS 1128,39171
# define ARCH_GET_GS 1129,39199
    TLS_TYPE_NONE,1134,39329
    TLS_TYPE_LDT,1135,39348
    TLS_TYPE_GDT,1136,39366
    TLS_TYPE_ARCH_PRCTL,1138,39395
} tls_type_t;1140,39427
static tls_type_t tls_type;1142,39442
static bool tls_using_msr;1144,39481
static int tls_gdt_index 1151,39623
static int lib_tls_gdt_index 1153,39701
# define GDT_NO_SIZE_LIMIT 1154,39736
#  define GDT_32BIT 1156,39786
#  define GDT_64BIT 1157,39831
modify_ldt_syscall(1161,39897
    unsigned int limit1500:limit15001168,40134
    unsigned int base1500:base15001169,40165
    unsigned int base2316:base23161170,40195
    unsigned int type:type1171,40224
    unsigned int not_system:not_system1172,40249
    unsigned int privilege_level:privilege_level1173,40280
    unsigned int seg_present:seg_present1174,40316
    unsigned int limit1916:limit19161175,40348
    unsigned int custom:custom1176,40378
    unsigned int zero:zero1177,40405
    unsigned int seg_32bit:seg_32bit1178,40430
    unsigned int limit_in_pages:limit_in_pages1179,40460
    unsigned int base3124:base31241180,40495
} raw_ldt_entry_t;1181,40524
    LDT_TYPE_CODE 1184,40551
    LDT_TYPE_CODE      = 0x8,x81184,40551
    LDT_TYPE_DOWN 1185,40581
    LDT_TYPE_DOWN      = 0x4,x41185,40581
    LDT_TYPE_WRITE 1186,40611
    LDT_TYPE_WRITE     = 0x2,x21186,40611
    LDT_TYPE_ACCESSED 1187,40641
    LDT_TYPE_ACCESSED  = 0x1,x11187,40641
#define LDT_BASE(1190,40675
print_raw_ldt(1201,41025
print_all_ldt(1230,42128
#define LDT_ENTRIES_TO_CHECK 1255,43194
find_unused_ldt_index(1259,43282
initialize_ldt_struct(1287,44196
clear_ldt_struct(1305,44872
create_ldt_entry(1315,45131
clear_ldt_entry(1325,45383
#define USER_PRIVILEGE 1339,45736
#define LDT_NOT_GDT 1340,45762
#define GDT_NOT_LDT 1341,45788
#define SELECTOR_IS_LDT 1342,45814
#define LDT_SELECTOR(1343,45843
#define GDT_SELECTOR(1344,45924
#define SELECTOR_INDEX(1345,46005
#define WRITE_DR_SEG(1347,46047
#define WRITE_LIB_SEG(1352,46261
read_selector(1358,46496
typedef struct _os_seg_info_t 1379,47130
    int   tls_type;1380,47162
    void *dr_fs_base;dr_fs_base1381,47182
    void *dr_gs_base;dr_gs_base1382,47204
    our_modify_ldt_t app_thread_areas[app_thread_areas1383,47226
} os_seg_info_t;1384,47284
typedef struct _os_local_state_t 1387,47326
    local_state_extended_t state;1390,47485
    struct _os_local_state_t *self;self1392,47556
    tls_type_t tls_type;1394,47661
    int ldt_index;1397,47799
    thread_id_t tid;1399,47878
    ushort app_gs;1401,47961
    ushort app_fs;1402,48021
    void  *app_gs_base;app_gs_base1403,48081
    void  *app_fs_base;app_fs_base1404,48145
        os_seg_info_t os_seg_info;1410,48437
        void *client_tls[client_tls1411,48472
} os_local_state_t;1413,48525
#define TLS_LOCAL_STATE_OFFSET 1415,48546
#define TLS_OS_LOCAL_STATE 1418,48644
#define TLS_SELF_OFFSET 1420,48681
#define TLS_THREAD_ID_OFFSET 1421,48768
#define TLS_DCONTEXT_OFFSET 1422,48854
#define TLS_APP_GS_BASE_OFFSET 1425,49016
#define TLS_APP_FS_BASE_OFFSET 1426,49089
#define TLS_APP_GS_OFFSET 1427,49162
#define TLS_APP_FS_OFFSET 1428,49225
#define WRITE_TLS_SLOT_IMM(1440,49888
#define READ_TLS_SLOT_IMM(1445,50172
#define WRITE_TLS_SLOT(1451,50482
#define READ_TLS_SLOT(1459,50951
is_segment_register_initialized(1468,51440
os_tls_offset(1498,52576
os_get_dr_seg_base(1510,52920
get_os_tls(1529,53411
get_os_tls_from_dc(1541,53719
os_get_app_seg_base(1552,54005
os_get_app_seg_base_offset(1576,54760
os_get_app_seg_offset(1589,55067
get_tls(1602,55358
set_tls(1610,55458
get_segment_base(1623,55748
get_app_segment_base(1689,58299
get_local_state_extended(1701,58635
get_local_state(1710,58837
os_handle_mov_seg(1724,59181
choose_gdt_slots(1785,61295
os_tls_app_seg_init(1891,65288
os_tls_init(1951,67510
os_tls_exit(2161,77352
os_tls_get_gdt_index(2213,79233
os_tls_pre_init(2224,79520
os_tls_calloc(2245,80219
os_tls_cfree(2279,81182
os_thread_init(2296,81600
os_thread_exit(2341,83310
os_fork_pre(2374,84402
os_fork_post(2420,86610
os_fork_init(2439,87383
os_should_swap_state(2486,89069
os_using_app_state(2494,89312
os_swap_context(2514,90016
os_thread_under_dynamo(2521,90198
os_thread_not_under_dynamo(2528,90342
get_process_group_id(2535,90497
get_process_id(2542,90665
get_parent_id(2549,90825
get_sys_thread_id(2555,90909
get_thread_id(2565,91100
get_tls_thread_id(2591,92130
get_thread_private_dcontext(2607,92772
set_thread_private_dcontext(2730,98262
replace_thread_id(2776,99548
permstr_to_memprot(2805,100407
memprot_to_osprot(2821,100807
osprot_to_memprot(2835,101175
osprot_replace_memprot(2850,101580
mprotect_syscall(2861,101903
mmap_syscall_succeeded(2867,102025
mmap_syscall(2889,102833
munmap_syscall(2896,103091
os_raw_mem_free(2904,103280
os_raw_mem_alloc(2923,103759
dr_raw_mremap(2962,105088
dr_raw_brk(2987,106032
os_heap_free(3007,106692
os_heap_reserve(3028,107386
find_free_memory_in_region(3095,110256
os_heap_reserve_in_region(3124,111205
os_heap_commit(3166,112773
os_heap_decommit(3191,113571
os_heap_systemwide_overcommit(3212,114265
os_heap_get_commit_limit(3219,114398
futex_wait(3231,114800
futex_wake(3249,115363
futex_wake_all(3265,115791
thread_yield(3283,116207
thread_signal(3289,116282
thread_sleep(3302,116812
thread_suspend(3334,118157
thread_resume(3404,121166
thread_terminate(3447,122640
is_thread_terminated(3460,123061
os_wait_thread_terminated(3468,123246
thread_get_mcontext(3485,123770
thread_set_mcontext(3501,124264
is_thread_currently_native(3517,124761
client_thread_run(3524,124929
dr_create_client_thread(3562,126497
get_num_processors(3627,129554
load_shared_library(3668,131090
lookup_library_routine(3690,131883
unload_shared_library(3701,132204
shared_library_error(3714,132515
shared_library_bounds(3734,133127
llseek_syscall(3769,134444
os_file_exists(3781,134818
os_files_same(3796,135298
os_get_file_size(3813,135807
os_get_file_size_by_handle(3828,136234
os_create_dir(3846,136768
open_syscall(3856,137168
close_syscall(3863,137317
dup_syscall(3869,137396
read_syscall(3875,137475
write_syscall(3881,137595
fcntl_syscall(3888,137760
#    define O_LARGEFILE 3898,137998
#    define O_LARGEFILE 3900,138035
os_open(3910,138335
os_open_directory(3940,139552
os_close(3947,139690
fd_priv_dup(3957,139843
fd_mark_close_on_exec(3983,140953
fd_table_add(3994,141252
fd_is_dr_owned(4022,142337
fd_is_in_private_range(4033,142628
os_open_protected(4041,142811
os_close_protected(4068,143565
os_write(4082,143984
os_read(4089,144129
os_flush(4095,144222
os_seek(4102,144401
os_tell(4114,144624
os_delete_file(4128,144802
os_rename_file(4134,144903
os_delete_mapped_file(4157,145745
os_map_file(4163,145838
#   define MAX_MMAP_LOOP_ITERS 4171,146083
os_unmap_file(4243,148852
os_get_disk_free_space(4253,149085
exit_process_syscall(4279,150194
exit_thread_syscall(4295,150830
os_syslog(4305,151064
all_memory_areas_initialized(4323,151716
print_all_memory_areas(4332,151973
safe_read_via_query(4356,152805
safe_read_ex(4379,153568
safe_read(4396,154257
safe_write_ex(4402,154375
is_readable_without_exception_internal(4457,156370
is_readable_without_exception(4477,157048
is_readable_without_exception_query_os(4490,157556
is_user_address(4496,157695
os_set_protection(4509,158013
set_protection(4551,159614
change_protection(4572,160513
make_writable(4580,160734
bool make_copy_on_writable(4633,163014
make_unwritable(4641,163197
ignorable_system_call(4704,165919
        unsigned long addr;4782,167614
        unsigned long len;4783,167642
        unsigned long prot;4784,167669
        unsigned long flags;4785,167697
        unsigned long fd;4786,167726
        unsigned long offset;4787,167752
} mmap_arg_struct_t;4788,167782
const reg_id_t syscall_regparms[syscall_regparms4792,167886
sys_param_addr(4813,168268
sys_param(4857,170023
#define SET_RETURN_VAL(4863,170183
dr_syscall_get_param(4868,170285
dr_syscall_set_param(4878,170595
dr_syscall_get_result(4889,170992
dr_syscall_set_result(4899,171287
dr_syscall_set_sysnum(4910,171649
dr_syscall_invoke_another(4922,172047
is_clone_thread_syscall_helper(4939,172751
is_clone_thread_syscall(4947,172926
was_clone_thread_syscall(4954,173108
is_sigreturn_syscall_helper(4962,173369
is_sigreturn_syscall(4968,173499
was_sigreturn_syscall(4975,173651
handle_self_signal(4982,173835
    ENV_PROP_RUNUNDER,5016,175287
    ENV_PROP_OPTIONS,5017,175310
static const char * const env_to_propagate[env_to_propagate5019,175335
#define NUM_ENV_TO_PROPAGATE 5026,175533
handle_execve(5029,175630
handle_execve_post(5315,188036
cleanup_after_vfork_execve(5355,189683
handle_close_pre(5378,190418
#define SYSCALL_PC(5453,193745
handle_exit(5461,194050
os_set_app_thread_area(5548,198119
os_get_app_thread_area(5605,200562
os_switch_lib_tls(5630,201733
os_switch_seg_to_context(5636,201871
pre_system_call(5736,205761
allmem_info_free(6500,237054
allmem_info_dup(6506,237185
allmem_should_merge(6517,237445
allmem_info_merge(6531,237907
sync_all_memory_areas(6545,238288
add_all_memory_area(6559,238691
update_all_memory_areas(6576,239327
remove_from_all_memory_areas(6665,243449
mmap_check_for_module_overlap(6679,243944
process_mmap(6740,247547
os_set_dr_seg(6912,256334
handle_post_arch_prctl(6926,256733
handle_app_mremap(6988,259147
handle_app_brk(7037,261276
post_system_call(7080,263015
#define PROC_SELF_MAPS 7579,283295
#define MAPS_LINE_LENGTH 7582,283395
#define MAPS_LINE_FORMAT4 7584,283475
#define MAPS_LINE_MAX4 7585,283566
#define MAPS_LINE_FORMAT8 7587,283677
#define MAPS_LINE_MAX8 7588,283771
#define MAPS_LINE_MAX 7590,283843
#define BUFSIZE 7599,284217
static char buf_scratch[buf_scratch7600,284254
static char comment_buf_scratch[comment_buf_scratch7601,284288
static char buf_iter[buf_iter7608,284684
static char comment_buf_iter[comment_buf_iter7609,284715
maps_iterator_start(7613,284795
maps_iterator_stop(7653,286098
maps_iterator_next(7667,286485
typedef struct _dl_iterate_data_t 7787,291624
    app_pc target_addr;7788,291660
    const char *target_path;target_path7789,291684
    char *path_out;path_out7790,291713
    size_t path_size;7791,291733
    app_pc mod_start;7792,291755
    app_pc mod_end;7793,291777
} dl_iterate_data_t;7794,291797
dl_iterate_get_path_cb(7797,291830
get_library_bounds(7873,295818
get_dynamo_library_bounds(8042,303306
get_dynamorio_library_path(8109,306045
read_proc_self_exe(8123,306426
get_application_base(8151,307434
get_application_end(8177,308230
get_image_entry(8185,308359
mem_stats_snapshot(8206,308969
is_in_dynamo_dll(8213,309028
get_dynamorio_dll_start(8228,309420
get_dynamorio_dll_end(8237,309596
get_dynamorio_dll_preferred_base(8246,309764
# define VSYSCALL_PAGE_SO_NAME 8258,310118
# define USER_MAX 8263,310358
dl_iterate_get_areas_cb(8267,310477
probe_address(8343,313761
probe_add_region(8403,315741
find_vm_areas_via_probe(8426,316565
find_executable_vm_areas(8524,320438
find_dynamo_library_vm_areas(8717,329747
get_stack_bounds(8738,330491
at_initial_stack_bottom(8775,332116
query_memory_ex(8800,333075
get_memory_info(8911,338032
query_memory_ex_from_os(8937,338853
get_memory_info_from_os(9063,343876
all_memory_areas_lock(9082,344490
all_memory_areas_unlock(9103,345239
mutex_wait_contended_lock(9124,345907
mutex_notify_released_lock(9193,348561
rwlock_wait_contended_writer(9211,349212
rwlock_notify_writer(9217,349298
rwlock_wait_contended_reader(9223,349385
rwlock_notify_readers(9229,349471
typedef struct linux_event_t 9237,349693
    volatile int signaled;9243,349971
    mutex_t lock;9244,349998
} linux_event_t;9245,350016
create_event(9252,350219
destroy_event(9261,350468
signal_event(9268,350598
reset_event(9278,350829
wait_for_event(9289,351149
struct linux_dirent 9333,352715
    long           d_ino;9334,352737
    off_t          d_off;9335,352789
    unsigned short d_reclen;9336,352856
    char           d_name[d_name9337,352923
    char           d_pad;9339,353057
    char           d_type;9340,353108
#define CURRENT_DIRENT(9344,353187
os_dir_iterator_start(9348,353288
os_dir_iterator_next(9356,353417
typedef struct _takeover_record_t 9391,354711
    thread_id_t tid;9392,354747
    event_t event;9393,354768
} takeover_record_t;9394,354787
static takeover_record_t *thread_takeover_records;thread_takeover_records9404,355214
static uint num_thread_takeover_records;9405,355265
static dcontext_t *takeover_dcontext;takeover_dcontext9411,355495
os_list_threads(9418,355744
os_take_over_all_unknown_threads(9477,358084
os_thread_take_over(9561,361187
os_thread_take_over_suspended_native(9608,362739
os_random_seed(9628,363361
rct_analyze_module_at_violation(9646,363866
rct_add_rip_rel_addr(9694,365478
get_drmarker_hotp_policy_status_table(9704,365692
set_drmarker_hotp_policy_status_table(9711,365794
hook_text(9717,365896
unhook_text(9728,366254
insert_jmp_at_tramp_entry(9734,366351
aslr_is_possible_attack(9741,366491
aslr_possible_preferred_address(9748,366598
take_over_primary_thread(9755,366715
os_current_user_directory(9761,366781
os_validate_user_owned(9788,367858
os_check_option_compatibility(9796,368044
os_file_has_elf_so_header(9803,368160
uint64_divmod(9824,368713
        uint64 v64;9828,368842
            uint32 lo;9830,368879
            uint32 hi;9831,368902
__udivdi3(9869,370089
__umoddi3(9877,370255
test_uint64_divmod(9890,370546
unit_test_os(9930,371774

unix/os_exports.h,1980
#define _OS_EXPORTS_H_ 43,2007
# define _XOPEN_SOURCE 48,2092
# define getpid 53,2244
#define DYNAMORIO_LIBRARY_NAME 56,2304
#define DYNAMORIO_PRELOAD_NAME 57,2353
#define OS_ALLOC_GRANULARITY 60,2450
#define MAP_FILE_VIEW_ALIGNMENT 61,2492
# define SEG_TLS 72,2890
# define ASM_SEG 73,2914
# define LIB_SEG_TLS 74,2937
# define LIB_ASM_SEG 75,2987
# define SEG_TLS 77,3020
# define ASM_SEG 78,3044
# define LIB_SEG_TLS 79,3067
# define LIB_ASM_SEG 80,3117
#define unsetenv 128,4850
# define DECLARE_DATA_SECTION(141,5336
# define DECLARE_DATA_SECTION(145,5454
# define END_DATA_SECTION_DECLARATIONS(157,5989
# define END_DATA_SECTION_DECLARATIONS(162,6119
#define START_DATA_SECTION(169,6306
#define END_DATA_SECTION(170,6357
# define VAR_IN_SECTION(177,6637
# define VAR_IN_SECTION(179,6715
#define VSYSCALL_PAGE_MAPS_NAME 188,7052
#define NUM_NONRT 209,7618
#define OFFS_RT 210,7658
#define NUM_RT 211,7681
#define MAX_SIGNUM 213,7801
#define SIGARRAY_SIZE 216,7926
# define _NSIG_BPW 220,7996
# define _NSIG_BPW 222,8024
#define _NSIG_WORDS 225,8054
typedef struct _kernel_sigset_t 230,8213
    unsigned long sig[sig231,8247
} kernel_sigset_t;232,8283
#  define SIGCXT_TYPE 240,8490
#  define SIGCXT_TYPE 242,8538
# define SIGCXT_TYPE 245,8591
#define CONTEXT_HEAP_SIZE(247,8637
#define CONTEXT_HEAP_SIZE_OPAQUE 248,8680
# define SC_FIELD(253,8884
# define SC_FIELD(255,8928
# define SC_XIP 258,8975
# define SC_XAX 259,9005
# define SC_XCX 260,9035
# define SC_XDX 261,9065
# define SC_XBX 262,9095
# define SC_XSP 263,9125
# define SC_XBP 264,9155
# define SC_XSI 265,9185
# define SC_XDI 266,9215
#  define SC_XFLAGS 268,9259
#  define SC_XFLAGS 270,9303
# define SC_XIP 273,9354
# define SC_XAX 274,9384
# define SC_XCX 275,9414
# define SC_XDX 276,9444
# define SC_XBX 277,9474
# define SC_XSP 278,9504
# define SC_XBP 279,9534
# define SC_XSI 280,9564
# define SC_XDI 281,9594
# define SC_XFLAGS 282,9624

unix/os_private.h,1397
#define _OS_PRIVATE_H_ 40,1890
# define ASM_XAX 50,2164
# define ASM_XDX 51,2187
# define ASM_XBP 52,2210
# define ASM_XSP 53,2233
# define ASM_XAX 55,2262
# define ASM_XDX 56,2285
# define ASM_XBP 57,2308
# define ASM_XSP 58,2331
#define SUSPEND_SIGNAL 62,2416
#define PTHREAD_CLONE_FLAGS 66,2530
enum { MAX_SYSCALL_ARGS 71,2803
typedef struct _os_thread_data_t 74,2893
    app_pc stack_base;78,3098
    app_pc stack_top;79,3121
    app_pc stack_bottom_pc;82,3169
    mutex_t suspend_lock;92,3632
    int suspend_count;93,3658
    thread_record_t **fork_threads;fork_threads96,3740
    int fork_num_threads;97,3776
    volatile int suspended;107,4153
    volatile int wakeup;108,4181
    volatile int resumed;109,4206
    struct sigcontext *suspended_sigcxt;suspended_sigcxt110,4232
    bool terminate;113,4318
    volatile int terminated;119,4583
    volatile bool retakeover;121,4613
    int processing_signal;124,4716
    void *dr_fs_base;dr_fs_base130,4976
    void *dr_gs_base;dr_gs_base131,4998
    void *app_thread_areas;app_thread_areas132,5020
} os_thread_data_t;133,5096
enum { ARGC_PTRACE_SENTINEL 135,5117
typedef struct ptrace_stack_args_t 138,5223
    ptr_int_t argc;139,5260
    priv_mcontext_t mc;140,5327
    char home_dir[home_dir141,5391
} ptrace_stack_args_t;142,5474
typedef struct _kernel_sigaction_t kernel_sigaction_t;173,5964

unix/pcprofile.c,1173
#define USE_SYMTAB 58,2504
static bool valid_symtab;61,2560
typedef struct _pc_profile_entry_t 74,3083
    void *                  pc;75,3120
    app_pc                 tag;76,3170
    int                     id;78,3246
    ushort              offset;80,3315
    where_am_i_t    whereami:whereami81,3395
    bool               trace:trace82,3453
    bool             retired:retired83,3527
    int                counter;84,3598
    struct _pc_profile_entry_t *next;next85,3659
} pc_profile_entry_t;86,3725
#define HASH_BITS 88,3748
typedef struct _thread_pc_info_t 91,3814
    bool thread_shared;92,3849
    pc_profile_entry_t **htable;htable93,3873
    void *special_heap;special_heap94,3958
    file_t file;95,3982
    int where[where96,3999
} thread_pc_info_t;97,4026
#define ALARM_FREQUENCY 99,4047
pcprofile_thread_init(110,4530
pcprofile_thread_exit(155,6376
pcprofile_fork_init(184,7339
pcprof_dump_callstack(198,7816
pcprofile_alarm(230,8898
pcprofile_add_entry(297,11484
pcprofile_lookup(327,12252
pcprofile_fragment_deleted(344,12716
pcprofile_destroy_entry(369,13394
pcprofile_reset(392,14012
pcprofile_results(417,14878

unix/preload.c,272
#define START_DYNAMO 44,2080
#define VERBOSE_INIT_FINI 45,2142
#define VERBOSE 46,2214
#define INIT_BEFORE_LIBC 47,2232
#define pf(62,2505
#define pf(64,2559
#define MAX_COMMAND_LENGTH 82,3183
int nothing 85,3257
take_over(96,3733
_init(152,5381
_fini 211,6782

unix/signal.c,10773
#undef errno44,2007
typedef void (*handler_t)handler_t105,3786
    DEFAULT_TERMINATE,109,3869
    DEFAULT_TERMINATE_CORE,110,3892
    DEFAULT_IGNORE,111,3920
    DEFAULT_STOP,112,3940
    DEFAULT_CONTINUE,113,3958
int default_action[default_action116,3984
bool can_always_delay[can_always_delay192,6914
sig_is_alarm_signal(263,9683
#define SIGSTACK_SIZE 273,10048
#define SA_RESTORER 276,10135
void kernel_sigemptyset(284,10397
void kernel_sigfillset(290,10508
void kernel_sigaddset(296,10619
void kernel_sigdelset(306,10851
bool kernel_sigismember(316,11089
void copy_kernel_sigset_to_sigset(327,11417
void copy_sigset_to_kernel_sigset(346,11876
struct _kernel_sigaction_t 369,12761
    handler_t handler;370,12790
    unsigned long flags;371,12813
    void (*restorer)restorer372,12838
    kernel_sigset_t mask;373,12866
    unsigned long     uc_flags;380,13045
    struct ucontext  *uc_link;uc_link381,13077
    stack_t           uc_stack;382,13108
    struct sigcontext uc_mcontext;383,13140
    kernel_sigset_t   uc_sigmask;384,13175
} kernel_ucontext_t;385,13243
#define RETCODE_SIZE 391,13428
typedef struct sigframe 393,13452
    char *pretcode;pretcode394,13478
    int sig;395,13498
    struct sigcontext sc;396,13511
    struct _fpstate fpstate;400,13676
    unsigned long extramask[extramask401,13705
    char retcode[retcode402,13749
    int sig_noclobber;413,14354
} sigframe_plain_t;415,14424
typedef struct rt_sigframe 418,14495
    char *pretcode;pretcode419,14524
    siginfo_t info;422,14576
    kernel_ucontext_t uc;423,14596
    kernel_ucontext_t uc;425,14629
    siginfo_t info;426,14655
    int sig;429,14689
    siginfo_t *pinfo;pinfo430,14702
    void *puc;puc431,14724
    siginfo_t info;432,14739
    kernel_ucontext_t uc;433,14759
    char retcode[retcode441,15205
} sigframe_rt_t;444,15291
#define IS_RT_FOR_APP(448,15371
#define APP_HAS_SIGSTACK(458,15870
#define AVX_ALIGNMENT 464,16120
#define FPSTATE_ALIGNMENT 465,16145
#define XSTATE_ALIGNMENT 466,16174
typedef struct _sigpending_t 474,16489
    sigframe_rt_t rt_frame;475,16520
    struct _xstate __attribute__ ((aligned (AVX_ALIGNMENT))) xstate;480,16759
    byte *access_address;access_address483,16936
    bool use_sigcontext;486,17054
    struct _sigpending_t *next;next487,17079
} sigpending_t;488,17111
#define AVX_FRAME_EXTRA 496,17447
#define FPSTATE_FRAME_EXTRA 497,17520
#define XSTATE_FRAME_EXTRA 498,17598
#define AVX_DATA_SIZE 500,17682
#define FPSTATE_DATA_SIZE 501,17733
#define XSTATE_DATA_SIZE 502,17785
typedef struct _itimer_info_t 505,17941
    uint64 interval;507,18053
    uint64 value;508,18074
} itimer_info_t;509,18092
typedef struct _thread_itimer_info_t 511,18110
    itimer_info_t app;512,18149
    itimer_info_t app_saved;513,18172
    itimer_info_t dr;514,18201
    itimer_info_t actual;515,18223
    void (*cb)cb516,18249
    void (*cb_api)cb_api518,18328
} thread_itimer_info_t;519,18379
#define NUM_ITIMERS 524,18526
#define SKIP_ALARM_XL8_MAX 527,18623
typedef struct _sigfd_pipe_t sigfd_pipe_t;530,18675
#define EMULATE_SIGMASK(537,18967
typedef struct _thread_sig_info_t 540,19079
    kernel_sigaction_t **app_sigaction;app_sigaction545,19313
    bool fully_initialized;550,19500
    bool shared_app_sigaction;553,19593
    mutex_t *shared_lock;shared_lock554,19624
    int *shared_refcount;shared_refcount555,19650
    bool *we_intercept;we_intercept557,19729
    bool shared_itimer;564,20030
    recursive_lock_t *shared_itimer_lock;shared_itimer_lock568,20208
    int *shared_itimer_refcount;shared_itimer_refcount572,20374
    int *shared_itimer_underDR;shared_itimer_underDR573,20407
    thread_itimer_info_t (*itimer)itimer574,20485
    int restorer_valid[restorer_valid577,20611
    stack_t app_sigstack;580,20679
    sigpending_t *sigpending[sigpending581,20705
    bool accessing_sigpending;583,20831
    kernel_sigset_t app_sigblocked;584,20862
    kernel_sigset_t pre_syscall_app_sigblocked;586,20952
    kernel_sigset_t pre_syscall_app_sigprocmask;588,21054
    uint skip_alarm_xl8;592,21258
    sigfd_pipe_t *signalfd[signalfd594,21329
    bool in_sigsuspend;597,21432
    kernel_sigset_t app_sigblocked_save;598,21456
    volatile int num_unstarted_children;601,21571
    mutex_t child_lock;602,21612
    stack_t sigstack;605,21666
    void *sigheap;sigheap606,21688
    fragment_t *interrupted;interrupted607,21726
    cache_pc interrupted_pc;608,21798
    app_pc signal_restorer_retaddr;611,21906
} thread_sig_info_t;613,22001
typedef struct _clone_record_t 617,22143
    byte *dstack;dstack618,22176
    reg_t app_thread_xsp;619,22260
    app_pc continuation_pc;620,22333
    thread_id_t caller_id;621,22361
    int clone_sysnum;622,22388
    uint clone_flags;623,22410
    thread_sig_info_t info;624,22432
    thread_sig_info_t *parent_info;parent_info625,22460
    void *pcprofile_info;pcprofile_info626,22496
    reg_t for_dynamorio_clone[for_dynamorio_clone630,22619
} clone_record_t;631,22653
static thread_sig_info_t init_info;634,22740
static kernel_sigset_t init_sigmask;635,22776
static bool removed_sig_handler;638,22827
sigaction_syscall(713,24945
sigaltstack_syscall(727,25428
getitimer_syscall(733,25585
setitimer_syscall(739,25720
sigprocmask_syscall(745,25883
unblock_all_signals(752,26094
set_default_signal_action(761,26296
handler_free(779,26827
handler_alloc(785,26955
struct i387_fsave_struct 799,27352
    long        cwd;800,27379
    long        swd;801,27400
    long        twd;802,27421
    long        fip;803,27442
    long        fcs;804,27463
    long        foo;805,27484
    long        fos;806,27505
    long        st_space[st_space807,27526
    long        status;808,27602
struct i387_fxsave_struct 814,27765
    unsigned short      cwd;815,27793
    unsigned short      swd;816,27822
    unsigned short      twd;817,27851
    unsigned short      fop;818,27880
    long        rip;820,27920
    long        rdp;821,27941
    int         mxcsr;822,27962
    int         mxcsr_mask;823,27985
    int         st_space[st_space824,28013
    int         xmm_space[xmm_space825,28090
    int         padding[padding826,28169
    long        fip;828,28204
    long        fcs;829,28225
    long        foo;830,28246
    long        fos;831,28267
    long        mxcsr;832,28288
    long        reserved;833,28311
    long        st_space[st_space834,28337
    long        xmm_space[xmm_space835,28414
    long        padding[padding836,28492
union i387_union 840,28563
    struct i387_fsave_struct    fsave;841,28582
    struct i387_fxsave_struct   fxsave;842,28621
twd_fxsr_to_i387(850,28839
convert_fxsave_to_fpstate(893,30053
save_xmm(919,30810
save_fpstate(963,32404
os_itimers_thread_shared(1027,35147
signal_init(1062,36363
signal_exit(1085,37196
signal_thread_init(1097,37465
create_clone_record(1157,39991
set_clone_record_fields(1198,41848
get_clone_record(1219,42759
get_clone_record_app_xsp(1247,43926
get_clone_record_dstack(1254,44061
signal_info_init_sigaction(1262,44272
signal_info_exit_sigaction(1274,44894
signal_thread_inherit(1317,46761
share_siginfo_after_take_over(1553,57635
signal_fork_init(1578,58696
sigsegv_handler_is_ours(1637,61153
signal_thread_exit(1647,61383
set_our_handler_sigact(1768,66342
intercept_signal(1811,68114
handle_clone(1875,70488
handle_sigaction(1939,73233
handle_post_sigaction(2027,76711
handle_sigaltstack(2069,78504
set_blocked(2095,79406
check_signals_pending(2121,80364
handle_sigprocmask(2143,80980
handle_post_sigprocmask(2228,84871
handle_sigsuspend(2257,86010
static generic_table_t *sigfd_table;sigfd_table2304,87882
struct _sigfd_pipe_t 2306,87920
    file_t write_fd;2307,87943
    file_t read_fd;2308,87964
    uint refcount;2309,87984
    dcontext_t *dcontext;dcontext2310,88003
sigfd_pipe_free(2314,88045
signalfd_init(2340,88936
#   define SIGNALFD_HTABLE_INIT_SIZE 2342,88958
signalfd_exit(2358,89749
signalfd_thread_exit(2364,89842
handle_pre_signalfd(2379,90300
notify_signalfd(2473,94110
signal_handle_dup(2517,95941
signal_handle_close(2535,96555
dump_fpstate(2556,97257
dump_sigcontext(2640,100856
dump_sigset(2687,103133
safe_is_in_fcache(2707,103923
safe_is_in_coarse_stubs(2719,104284
is_on_alt_stack(2731,104657
sigcontext_to_mcontext(2744,105049
mcontext_to_sigcontext(2797,106923
translate_sigcontext(2846,108561
thread_set_self_context(2894,110450
thread_set_self_mcontext(2934,112270
sig_has_restorer(2943,112464
get_app_frame_size(2993,114594
get_sigcontext_from_rt_frame(3002,114801
get_sigcontext_from_app_frame(3008,114943
get_sigcontext_from_pending(3021,115315
get_sigstack_frame_ptr(3034,115839
convert_frame_to_nonrt(3112,119032
convert_frame_to_nonrt_partial(3137,120173
fixup_rtframe_pointers(3154,120860
copy_frame_to_stack(3241,124382
copy_frame_to_pending(3368,129684
send_signal_to_client(3408,131418
handle_client_action_from_cache(3484,135125
abort_on_fault(3544,137794
abort_on_DR_fault(3575,139037
unlink_fragment_for_signal(3587,139428
interrupted_inlined_syscall(3640,141907
sysnum_is_not_restartable(3687,143938
adjust_syscall_for_restart(3719,145396
record_pending_signal(3827,149895
is_sys_kill(4211,168295
compute_memory_target(4229,168930
check_for_modified_code(4350,173506
struct clone_and_swap_args 4429,176969
    byte *stack;stack4430,176998
    byte *tos;tos4431,177015
sig_should_swap_stack(4436,177092
sig_take_over(4464,178098
is_safe_read_ucxt(4473,178269
master_signal_handler_C(4486,178603
execute_handler_from_cache(4888,196607
execute_handler_from_dispatch(4999,201762
terminate_via_kill(5184,209574
execute_default_action(5203,210278
execute_default_from_cache(5400,220183
execute_default_from_dispatch(5407,220408
receive_pending_signal(5413,220563
handle_sigreturn(5478,223325
is_signal_restorer_code(5630,229865
#   define reverse(5644,230399
os_forge_exception(5674,231465
os_request_fatal_coredump(5759,235410
os_request_live_coredump(5775,236004
os_dump_core(5789,236310
at_known_exception(5836,237991
timeval_to_usec(5928,242216
usec_to_timeval(5934,242333
init_itimer(5941,242480
set_actual_itimer(5976,243959
itimer_new_settings(6000,244942
set_itimer_callback(6056,247578
get_itimer_frequency(6084,248669
handle_alarm(6102,249246
start_itimer(6198,253349
stop_itimer(6236,254788
handle_pre_setitimer(6273,256190
handle_post_setitimer(6300,257386
handle_post_getitimer(6325,258406
handle_pre_alarm(6362,259961
handle_post_alarm(6373,260241
handle_suspend_signal(6384,260542
dr_setjmp_sigmask(6486,264809
handle_nudge_signal(6502,265344

unix/stackdump.c,408
#define DEBUGGER 56,2238
#define QUIET_MODE 58,2307
#define TEMPORARY_FILENAME 59,2331
#define CORE_NAME 60,2385
#define VERBOSE 62,2411
#define BATCH_MODE 69,2650
#define DEBUGGER_COMMAND 71,2686
#define DEBUGGER_COMMAND 77,2901
wait_syscall(81,2961
execve_syscall(87,3074
fork_syscall(93,3209
#   define CLONE_CHILD_CLEARTID 117,4417
#   define CLONE_CHILD_SETTID 119,4563
stackdump(148,5787

unix/symtab.c,360
static uint bfd_symcount,51,2242
static uint bfd_symcount, nonnull_symcount;51,2242
static asymbol **bfd_syms bfd_syms52,2286
static bfd *infile infile53,2320
compare_symbols 56,2367
sort_symtab(78,3009
lookup_symbol_address(102,3709
prepare_symtab(138,4758
get_symtab(157,5273
symtab_init(191,6217
symtab_exit(229,7180
symtab_lookup_pc(235,7235

unix/symtab.h,28
#define _SYMTAB_H_ 43,1964

utils.c,7114
try_except_t global_try_except;79,2681
soft_terminate(89,2919
ignore_assert(114,3500
internal_error(139,4282
external_error(193,6388
struct _thread_locks_t 215,7207
    mutex_t *last_lock;last_lock216,7232
#define DUMP_NONZERO(232,8021
#define DUMP_LOCK_INFO_ARGS(235,8178
dump_mutex_callstack(251,9101
dump_owned_locks(271,9688
thread_owns_no_locks(288,10363
thread_owns_one_lock(297,10650
thread_owns_two_locks(309,11115
thread_owns_first_or_both_locks_only(324,11698
dump_process_locks(340,12392
locks_not_closed(375,13934
locks_thread_init(421,15876
locks_thread_exit(434,16383
add_process_lock(452,17328
remove_process_lock(484,18728
mutex_collect_callstack(510,19849
enum {LOCK_NOT_OWNABLE,LOCK_NOT_OWNABLE543,20880
enum {LOCK_NOT_OWNABLE, LOCK_OWNABLE}LOCK_OWNABLE543,20880
deadlock_avoidance_lock(550,21088
deadlock_avoidance_unlock(655,26929
#define DEADLOCK_AVOIDANCE_LOCK(724,30073
#define DEADLOCK_AVOIDANCE_UNLOCK(725,30180
#  define DEADLOCK_AVOIDANCE_LOCK(727,30276
#  define DEADLOCK_AVOIDANCE_UNLOCK(728,30352
mutex_fork_reset(733,30470
static uint spinlock_count 750,31120
utils_init(755,31349
spinmutex_trylock(785,32527
spinmutex_lock(796,32893
spinmutex_lock_no_yield(808,33196
spinmutex_unlock(826,33760
spinmutex_delete(840,34256
mutex_ownable(848,34454
mutex_lock(863,34758
mutex_trylock(945,38231
mutex_unlock(969,38943
mutex_delete(1013,40832
mutex_mark_as_app(1035,41474
own_recursive_lock(1045,41601
acquire_recursive_lock(1056,41899
try_recursive_lock(1072,42259
release_recursive_lock(1086,42566
self_owns_recursive_lock(1098,42825
void read_lock(1151,45152
void write_lock(1268,50388
bool write_trylock(1298,51380
void read_unlock(1325,52295
void write_unlock(1364,53898
self_owns_write_lock(1391,54797
struct _broadcast_event_t 1404,55129
    event_t event;1405,55157
    volatile int num_waiting;1406,55176
create_broadcast_event(1410,55230
destroy_broadcast_event(1420,55462
signal_broadcast_event(1431,55823
intend_wait_broadcast_event_helper(1442,56136
unintend_wait_broadcast_event_helper(1447,56243
wait_broadcast_event_helper(1452,56351
hash_value(1468,56733
hashtable_num_bits(1565,59507
bitmap_find_first_set_bit(1589,60132
bitmap_find_set_block(1621,60635
bitmap_find_set_block_sequence(1640,61167
bitmap_initialize_free(1667,62032
bitmap_allocate_blocks(1673,62170
bitmap_free_blocks(1692,62615
bitmap_are_reserved_blocks(1704,62918
bitmap_count_set_bits(1717,63231
bitmap_check_consistency(1731,63410
get_thread_private_logfile(1751,63988
do_file_write(1769,64333
divide_uint64_print(1819,66474
double_print(1859,68409
display_error(1881,69067
print_symbolic_address(1893,69307
print_file(1900,69440
vprint_to_buffer(1914,69850
print_to_buffer(1937,70813
sn_print_line(1948,71046
print_log(1964,71434
do_syslog(1991,72033
notify(2008,72605
# define REPORT_MSG_MAX 2107,76747
# define REPORT_MSG_MAX 2109,76827
#define REPORT_LEN_VERSION 2111,76871
#define REPORT_LEN_OPTIONS 2120,77283
#define REPORT_NUM_STACK 2126,77650
# define REPORT_LEN_STACK_EACH 2128,77724
# define REPORT_LEN_STACK_EACH 2130,77770
#define REPORT_LEN_STACK 2133,77892
# define REPORT_LEN_PRIVLIBS 2136,78061
#define ASSERT_ROOM(2148,78701
under_internal_exception(2157,79013
# define EXCEPTION_PREFIX 2173,79504
# define EXCEPTION_PREFIX 2175,79585
#  define CLIENT_EXCEPTION_PREFIX 2179,79695
#  define CLIENT_EXCEPTION_PREFIX 2181,79782
#define REPORT_EXCEPTION_SKIP_PREFIX 2184,79869
#define REPORT_CLIENT_EXCEPTION_SKIP_PREFIX 2185,79968
report_dynamorio_problem(2194,80334
report_app_problem(2371,87596
is_readable_without_exception_try(2410,88961
is_string_readable_without_exception(2454,90528
memprot_string(2500,91937
is_region_memset_to_char(2517,92628
double_strchr(2535,93291
double_strrchr(2550,93625
our_wcsnlen(2574,94463
strcasecmp_with_wildcards(2589,94661
str_case_prefix(2614,95264
check_filter_common(2630,95577
check_filter(2663,96674
check_filter_with_wildcards(2669,96817
static char logdir[logdir2675,96973
static bool logdir_initialized 2676,97007
static char basedir[basedir2677,97047
static bool basedir_initialized 2678,97082
static char old_basedir[old_basedir2682,97297
enable_new_log_dir(2693,97908
create_log_dir(2699,97971
get_log_dir(2838,103994
open_log_file(2875,105331
close_log_file(2929,107341
get_unique_logfile(2943,107862
get_app_name_for_path(2991,109676
get_short_name(2997,109768
print_statistics(3015,110192
stats_thread_init(3064,111680
stats_thread_exit(3082,112464
dump_thread_stats(3098,113025
#define STATS_DEF(3131,114673
#undef STATS_DEF3141,115316
dump_global_stats(3153,115613
#define STATS_DEF(3165,116051
#undef STATS_DEF3174,116710
print_timestamp(3201,117394
dump_buffer_as_ascii(3222,117967
dump_buffer_as_bytes 3232,118190
is_valid_xml_char(3328,121577
is_valid_xml_string(3342,122124
is_valid_xml_cdata_string(3356,122497
is_valid_xml_body_string(3366,122780
is_valid_xml_attribute_string(3375,123074
print_xml_cdata(3391,123751
print_version_and_app_info(3413,124430
utils_exit(3430,125077
get_random_offset(3450,125645
        LCM_A 3457,125868
        LCM_Q 3458,125895
        LCM_R 3459,125915
set_random_seed(3491,127073
get_random_seed(3497,127134
static const uint days_per_month_normal[days_per_month_normal3503,127220
static const uint days_per_month_leap[days_per_month_leap3505,127321
year_is_leap_year(3509,127433
convert_millis_to_date(3518,127642
#define BASE_YEAR 3543,128601
#define DAYS_IN_400_YEARS 3545,128681
#define DAYS_IN_100_YEARS 3546,128722
#define DAYS_IN_4_YEARS 3547,128763
convert_date_to_millis(3580,129802
const uint crctab[crctab3613,130705
crc32(3682,134138
#define PUT_64BIT_LE(3716,135432
#define PUT_32BIT_LE(3726,136043
static unsigned char PADDING[PADDING3732,136374
MD5Init(3743,136748
MD5Update(3757,137028
MD5Pad(3795,138082
MD5Final(3816,138632
#define F1(3832,139024
#define F2(3833,139064
#define F3(3834,139096
#define F4(3835,139128
#define MD5STEP(3838,139217
MD5Transform(3847,139571
#undef F13941,143656
#undef F23942,143666
#undef F33943,143676
#undef F43944,143686
#undef MD5STEP3945,143696
module_digests_equal(3949,143798
read_entire_file(3970,144605
check_low_disk_threshold(4018,146144
#define MD5_FILE_READ_BUF_SIZE 4082,149240
get_md5_for_file(4091,149562
get_application_md5(4140,151406
get_md5_for_region(4200,153914
md5_digests_equal(4215,154315
region_intersection(4229,154832
typedef struct _profile_callers_t 4251,155746
    app_pc caller[caller4252,155782
    uint count;4253,155825
    struct _profile_callers_t *next;next4254,155841
} profile_callers_t;4255,155878
profile_callers(4269,156411
profile_callers_exit(4324,158259
#  undef printf4353,159104
# define printf(4355,159128
unit_test_utils(4360,159250
# define DO_TEST(4367,159329
# undef DO_TEST4384,160232
# define DO_TEST(4385,160248
# undef DO_TEST4403,161229
# undef printf4414,161511
dr_strdup(4420,161570
dr_wstrdup(4438,162064
dr_strfree(4485,163889
array_merge(4503,164595

utils.h,24472
#define _UTILS_H_ 43,1984
# undef assert46,2019
#define assert 49,2082
#define CHKLVL_ASSERTS 52,2187
#define CHKLVL_DEFAULT 53,2212
# define DEBUG_CHECKS(59,2445
# define DEBUG_CHECKS(61,2519
#   define ASSERT(71,2905
#   define ASSERT_MESSAGE(77,3208
#   define REPORT_CURIOSITY(79,3362
#   define ASSERT_CURIOSITY(86,3910
#   define ASSERT_CURIOSITY_ONCE(91,4279
#   define ASSERT(98,4723
#   define ASSERT_MESSAGE(101,4864
#   define ASSERT_CURIOSITY(104,5016
#   define ASSERT_CURIOSITY_ONCE(105,5058
# define ASSERT_NOT_TESTED(107,5128
# define ASSERT(110,5293
# define ASSERT_MESSAGE(111,5331
# define ASSERT_NOT_TESTED(112,5380
# define ASSERT_CURIOSITY(113,5422
# define ASSERT_CURIOSITY_ONCE(114,5464
#define ASSERT_NOT_REACHED(117,5531
#define ASSERT_BUG_NUM(118,5574
#define ASSERT_NOT_IMPLEMENTED(119,5652
#define EXEMPT_TEST(120,5739
#define apicheck(128,6080
#  define CLIENT_ASSERT(135,6323
#  define CLIENT_ASSERT(137,6379
# define CLIENT_ASSERT(140,6468
# define APP_EXPORT_ASSERT(144,6568
# define APP_EXPORT_ASSERT(146,6626
#define CHECK_TRUNCATE_TYPE_byte(158,7316
#define CHECK_TRUNCATE_TYPE_sbyte(159,7389
#define CHECK_TRUNCATE_TYPE_ushort(160,7480
#define CHECK_TRUNCATE_TYPE_short(161,7555
#define CHECK_TRUNCATE_TYPE_uint(162,7644
# define CHECK_TRUNCATE_TYPE_int(170,8199
# define CHECK_TRUNCATE_TYPE_int(172,8262
# define CHECK_TRUNCATE_TYPE_size_t(175,8366
# define CHECK_TRUNCATE_TYPE_stats_int_t(177,8491
# define CHECK_TRUNCATE_TYPE_size_t 179,8550
# define CHECK_TRUNCATE_TYPE_stats_int_t 180,8611
#define ASSERT_TRUNCATE(187,8941
#define CURIOSITY_TRUNCATE(190,9182
#define CLIENT_ASSERT_TRUNCATE(194,9442
#define ASSERT_BITFIELD_TRUNCATE(198,9627
#define CLIENT_ASSERT_BITFIELD_TRUNCATE(200,9747
#define LOCK_FREE_STATE 204,9935
#define LOCK_SET_STATE 205,10011
#define LOCK_CONTENDED_STATE 207,10187
#define SPINLOCK_FREE_STATE 209,10238
#define CONTENTION_EVENT_NOT_CREATED 211,10329
typedef HANDLE contention_event_t;214,10406
typedef void * contention_event_t;216,10447
typedef struct _mutex_t 219,10490
    volatile int lock_requests;220,10516
    contention_event_t contended_event;222,10682
    const char *name;name225,10875
    uint      rank;229,11115
    thread_id_t owner;230,11199
    dcontext_t *owning_dcontext;owning_dcontext235,11442
    struct _mutex_t *prev_owned_lock;prev_owned_lock236,11534
    uint count_times_acquired;237,11612
    uint count_times_contended;238,11691
    uint count_times_spin_pause;239,11776
    uint max_contended_requests;240,11878
    uint count_times_spin_only;241,11971
    struct _mutex_t *prev_process_lock;prev_process_lock244,12270
    struct _mutex_t *next_process_lock;next_process_lock245,12310
#  define MAX_MUTEX_CALLSTACK 251,12593
    byte *callstack[callstack252,12625
    bool app_lock;256,12812
#  define MAX_MUTEX_CALLSTACK 259,12845
    bool deleted;261,12923
} mutex_t;264,13092
typedef struct _spin_mutex_t 269,13328
    mutex_t lock;270,13359
} spin_mutex_t;271,13377
typedef struct _recursive_lock_t 274,13449
    mutex_t lock;275,13484
    thread_id_t owner;281,13770
    uint count;282,13793
} recursive_lock_t;283,13809
typedef struct _read_write_lock_t 285,13830
    mutex_t lock;286,13866
    volatile int num_readers;291,14107
    thread_id_t writer;293,14198
    volatile int num_pending_readers;294,14222
    contention_event_t writer_waiting_readers;295,14314
    contention_event_t readers_waiting_writer;296,14402
} read_write_lock_t;298,14578
#  define LOCK_RANK(301,14626
    LOCK_RANK(307,14862
    LOCK_RANK(outermost_lock)307,14862
    LOCK_RANK(308,14948
    LOCK_RANK(thread_in_DR_exclusion)308,14948
    LOCK_RANK(309,15004
    LOCK_RANK(all_threads_synch_lock)309,15004
    LOCK_RANK(311,15074
    LOCK_RANK(trace_building_lock)311,15074
    LOCK_RANK(317,15338
    LOCK_RANK(thread_initexit_lock)317,15338
    LOCK_RANK(319,15418
    LOCK_RANK(bb_building_lock)319,15418
    LOCK_RANK(322,15554
    LOCK_RANK(exception_stack_lock)322,15554
    LOCK_RANK(326,15736
    LOCK_RANK(all_threads_lock)326,15736
    LOCK_RANK(328,15797
    LOCK_RANK(linking_lock)328,15797
    LOCK_RANK(331,15890
    LOCK_RANK(shared_blocks_lock)331,15890
    LOCK_RANK(332,15951
    LOCK_RANK(shared_traces_lock)332,15951
    LOCK_RANK(335,16020
    LOCK_RANK(synch_lock)335,16020
    LOCK_RANK(337,16081
    LOCK_RANK(protect_info)337,16081
    LOCK_RANK(340,16208
    LOCK_RANK(sideline_mutex)340,16208
    LOCK_RANK(343,16248
    LOCK_RANK(shared_cache_flush_lock)343,16248
    LOCK_RANK(346,16451
    LOCK_RANK(shared_delete_lock)346,16451
    LOCK_RANK(347,16532
    LOCK_RANK(lazy_delete_lock)347,16532
    LOCK_RANK(349,16614
    LOCK_RANK(shared_cache_lock)349,16614
    LOCK_RANK(354,16929
    LOCK_RANK(change_linking_lock)354,16929
    LOCK_RANK(356,17008
    LOCK_RANK(shared_vm_areas)356,17008
    LOCK_RANK(357,17089
    LOCK_RANK(shared_cache_count_lock)357,17089
    LOCK_RANK(360,17188
    LOCK_RANK(fragment_delete_mutex)360,17188
    LOCK_RANK(363,17258
    LOCK_RANK(tracedump_mutex)363,17258
    LOCK_RANK(365,17341
    LOCK_RANK(emulate_write_lock)365,17341
    LOCK_RANK(367,17422
    LOCK_RANK(unit_flush_lock)367,17422
    LOCK_RANK(370,17495
    LOCK_RANK(maps_iter_buf_lock)370,17495
    LOCK_RANK(380,17918
    LOCK_RANK(hotp_vul_table_lock)380,17918
    LOCK_RANK(383,18061
    LOCK_RANK(coarse_info_lock)383,18061
    LOCK_RANK(386,18201
    LOCK_RANK(executable_areas)386,18201
    LOCK_RANK(390,18410
    LOCK_RANK(rct_module_lock)390,18410
    LOCK_RANK(394,18593
    LOCK_RANK(after_call_lock)394,18593
    LOCK_RANK(398,18803
    LOCK_RANK(module_data_lock)398,18803
    LOCK_RANK(400,18943
    LOCK_RANK(special_units_list_lock)400,18943
    LOCK_RANK(401,19009
    LOCK_RANK(special_heap_lock)401,19009
    LOCK_RANK(403,19161
    LOCK_RANK(coarse_info_incoming_lock)403,19161
    LOCK_RANK(410,19545
    LOCK_RANK(coarse_table_rwlock)410,19545
    LOCK_RANK(412,19719
    LOCK_RANK(coarse_pclookup_table_rwlock)412,19719
    LOCK_RANK(415,19952
    LOCK_RANK(coarse_th_table_rwlock)415,19952
    LOCK_RANK(417,20018
    LOCK_RANK(process_module_vector_lock)417,20018
    LOCK_RANK(420,20257
    LOCK_RANK(snapshot_lock)420,20257
    LOCK_RANK(421,20310
    LOCK_RANK(written_areas)421,20310
    LOCK_RANK(424,20460
    LOCK_RANK(futureexec_areas)424,20460
    LOCK_RANK(427,20605
    LOCK_RANK(app_flushed_areas)427,20605
    LOCK_RANK(430,20695
    LOCK_RANK(pretend_writable_areas)430,20695
    LOCK_RANK(431,20775
    LOCK_RANK(patch_proof_areas)431,20775
    LOCK_RANK(432,20850
    LOCK_RANK(emulate_write_areas)432,20850
    LOCK_RANK(433,20927
    LOCK_RANK(IAT_areas)433,20927
    LOCK_RANK(436,21084
    LOCK_RANK(dr_client_mutex)436,21084
    LOCK_RANK(437,21141
    LOCK_RANK(client_thread_count_lock)437,21141
    LOCK_RANK(438,21206
    LOCK_RANK(client_flush_request_lock)438,21206
    LOCK_RANK(439,21272
    LOCK_RANK(callback_registration_lock)439,21272
    LOCK_RANK(440,21339
    LOCK_RANK(client_tls_lock)440,21339
    LOCK_RANK(442,21402
    LOCK_RANK(intercept_hook_lock)442,21402
    LOCK_RANK(443,21459
    LOCK_RANK(privload_lock)443,21459
    LOCK_RANK(445,21540
    LOCK_RANK(sigfdtable_lock)445,21540
    LOCK_RANK(447,21600
    LOCK_RANK(table_rwlock)447,21600
    LOCK_RANK(448,21653
    LOCK_RANK(loaded_module_areas)448,21653
    LOCK_RANK(449,21731
    LOCK_RANK(aslr_areas)449,21731
    LOCK_RANK(450,21799
    LOCK_RANK(aslr_pad_areas)450,21799
    LOCK_RANK(451,21871
    LOCK_RANK(native_exec_areas)451,21871
    LOCK_RANK(452,21946
    LOCK_RANK(thread_vm_areas)452,21946
    LOCK_RANK(454,22006
    LOCK_RANK(app_pc_table_rwlock)454,22006
    LOCK_RANK(457,22145
    LOCK_RANK(dead_tables_lock)457,22145
    LOCK_RANK(458,22201
    LOCK_RANK(aslr_lock)458,22201
    LOCK_RANK(461,22258
    LOCK_RANK(hotp_only_tramp_areas_lock)461,22258
    LOCK_RANK(463,22398
    LOCK_RANK(hotp_patch_point_areas_lock)463,22398
    LOCK_RANK(467,22565
    LOCK_RANK(profile_callers_lock)467,22565
    LOCK_RANK(469,22635
    LOCK_RANK(coarse_stub_areas)469,22635
    LOCK_RANK(470,22695
    LOCK_RANK(moduledb_lock)470,22695
    LOCK_RANK(471,22756
    LOCK_RANK(pcache_dir_check_lock)471,22756
    LOCK_RANK(473,22806
    LOCK_RANK(suspend_lock)473,22806
    LOCK_RANK(474,22835
    LOCK_RANK(shared_lock)474,22835
    LOCK_RANK(476,22870
    LOCK_RANK(modlist_areas)476,22870
    LOCK_RANK(478,22956
    LOCK_RANK(privload_fls_lock)478,22956
    LOCK_RANK(479,23031
    LOCK_RANK(drwinapi_localheap_lock)479,23031
    LOCK_RANK(482,23132
    LOCK_RANK(client_aux_libs)482,23132
    LOCK_RANK(484,23180
    LOCK_RANK(client_aux_lib64_lock)484,23180
    LOCK_RANK(488,23248
    LOCK_RANK(alt_tls_lock)488,23248
    LOCK_RANK(497,23641
    LOCK_RANK(allunits_lock)497,23641
    LOCK_RANK(498,23698
    LOCK_RANK(fcache_unit_areas)498,23698
    IF_LINUX_(500,23829
    IF_LINUX_(LOCK_RANK(500,23829
    IF_LINUX_(LOCK_RANK(all_memory_areas)500,23829
    IF_UNIX_(501,23896
    IF_UNIX_(LOCK_RANK(501,23896
    IF_UNIX_(LOCK_RANK(set_thread_area_lock)501,23896
    LOCK_RANK(502,23963
    LOCK_RANK(landing_pad_areas_lock)502,23963
    LOCK_RANK(503,24045
    LOCK_RANK(dynamo_areas)503,24045
    LOCK_RANK(504,24103
    LOCK_RANK(map_intercept_pc_lock)504,24103
    LOCK_RANK(505,24167
    LOCK_RANK(global_alloc_lock)505,24167
    LOCK_RANK(506,24223
    LOCK_RANK(heap_unit_lock)506,24223
    LOCK_RANK(507,24272
    LOCK_RANK(vmh_lock)507,24272
    LOCK_RANK(508,24323
    LOCK_RANK(last_deallocated_lock)508,24323
    LOCK_RANK(512,24450
    LOCK_RANK(tls_lock)512,24450
    LOCK_RANK(515,24613
    LOCK_RANK(reset_pending_lock)515,24613
    LOCK_RANK(517,24672
    LOCK_RANK(initstack_mutex)517,24672
    LOCK_RANK(519,24730
    LOCK_RANK(event_lock)519,24730
    LOCK_RANK(520,24782
    LOCK_RANK(do_threshold_mutex)520,24782
    LOCK_RANK(521,24842
    LOCK_RANK(threads_killed_lock)521,24842
    LOCK_RANK(522,24903
    LOCK_RANK(child_lock)522,24903
    LOCK_RANK(525,24976
    LOCK_RANK(sideline_lock)525,24976
    LOCK_RANK(526,25030
    LOCK_RANK(do_not_delete_lock)526,25030
    LOCK_RANK(527,25088
    LOCK_RANK(remember_lock)527,25088
    LOCK_RANK(528,25141
    LOCK_RANK(sideline_table_lock)528,25141
    LOCK_RANK(531,25230
    LOCK_RANK(simulate_lock)531,25230
    LOCK_RANK(534,25281
    LOCK_RANK(process_kstats_lock)534,25281
    LOCK_RANK(537,25335
    LOCK_RANK(request_region_be_heap_reachable_lock)537,25335
    LOCK_RANK(540,25517
    LOCK_RANK(report_buf_lock)540,25517
    LOCK_RANK(547,25827
    LOCK_RANK(memory_info_buf_lock)547,25827
    LOCK_RANK(550,25886
    LOCK_RANK(dump_core_lock)550,25886
    LOCK_RANK(553,25925
    LOCK_RANK(logdir_mutex)553,25925
    LOCK_RANK(554,25974
    LOCK_RANK(diagnost_reg_mutex)554,25974
    LOCK_RANK(556,26034
    LOCK_RANK(profile_dump_lock)556,26034
    LOCK_RANK(559,26076
    LOCK_RANK(prng_lock)559,26076
    LOCK_RANK(563,26277
    LOCK_RANK(options_lock)563,26277
    LOCK_RANK(565,26321
    LOCK_RANK(debugbox_lock)565,26321
    LOCK_RANK(567,26358
    LOCK_RANK(eventlog_mutex)567,26358
    LOCK_RANK(568,26442
    LOCK_RANK(datasec_selfprot_lock)568,26442
    LOCK_RANK(569,26480
    LOCK_RANK(thread_stats_lock)569,26480
    LOCK_RANK(574,26663
    LOCK_RANK(shared_itimer_lock)574,26663
    LOCK_RANK(576,26706
    LOCK_RANK(innermost_lock)576,26706
typedef struct _thread_locks_t thread_locks_t;580,26819
#  define INIT_LOCK_NO_TYPE(594,27444
#  define INIT_LOCK_NO_TYPE(600,27760
#  define STRUCTURE_TYPE(612,28325
#  define STRUCTURE_TYPE(618,28563
#define INIT_LOCK_FREE(621,28599
#define ASSIGN_INIT_LOCK_FREE(625,28770
#define ASSIGN_INIT_SPINMUTEX_FREE(632,29160
#define INIT_RECURSIVE_LOCK(635,29263
#define INIT_READWRITE_LOCK(642,29642
#define ASSIGN_INIT_READWRITE_LOCK_FREE(651,30170
#define ASSIGN_INIT_RECURSIVE_LOCK_FREE(663,30934
#define INIT_SPINLOCK_FREE(672,31474
#define DELETE_LOCK(675,31626
#define DELETE_SPINMUTEX(676,31672
#define DELETE_RECURSIVE_LOCK(677,31737
#define DELETE_READWRITE_LOCK(678,31808
mutex_testlock(711,33127
typedef struct _broadcast_event_t broadcast_event_t;733,33925
#define WAIT_FOR_BROADCAST_EVENT(755,35018
#define WRITE_LOCK_HELD(773,36197
#define READ_LOCK_HELD(774,36283
# define OWN_MUTEX(782,36562
# define ASSERT_OWN_MUTEX(783,36616
# define ASSERT_DO_NOT_OWN_MUTEX(785,36689
# define OWN_NO_LOCKS(787,36770
# define ASSERT_OWN_NO_LOCKS(788,36821
# define OWN_MUTEX(794,37063
# define ASSERT_OWN_MUTEX(795,37105
# define ASSERT_DO_NOT_OWN_MUTEX(797,37178
# define OWN_NO_LOCKS(799,37268
# define ASSERT_OWN_NO_LOCKS(800,37320
#define ASSERT_OWN_WRITE_LOCK(802,37379
#define ASSERT_DO_NOT_OWN_WRITE_LOCK(804,37469
#define ASSERT_OWN_READ_LOCK(807,37635
#define READWRITE_LOCK_HELD(809,37718
#define ASSERT_OWN_READWRITE_LOCK(810,37799
#define ASSERT_OWN_RECURSIVE_LOCK(812,37892
#define SHARED_MUTEX(818,38079
#define SHARED_RECURSIVE_LOCK(822,38331
#define USE_BB_BUILDING_LOCK_STEADY_STATE(827,38607
#define USE_BB_BUILDING_LOCK(830,38841
#define SHARED_BB_LOCK(832,38979
#define SHARED_BB_UNLOCK(847,39820
#define NEED_SHARED_LOCK(852,40147
#define SHARED_FLAGS_MUTEX(855,40342
#define SHARED_FLAGS_RECURSIVE_LOCK(859,40531
#define PHI_2_32 895,42112
#define PHI_2_64 896,42171
# define HASH_PHI 898,42251
# define HASH_TAG_BITS 899,42278
# define HASH_PHI 901,42310
# define HASH_TAG_BITS 902,42337
#define HASH_MASK(906,42427
#define HASH_FUNC(911,42695
# define HASH_FUNC_BITS(919,43031
# define HASH_FUNC_BITS(926,43364
#define HASH_VALUE_FOR_TABLE(935,43876
#define HASHTABLE_SIZE(947,44667
    HASH_FUNCTION_NONE 951,44773
    HASH_FUNCTION_MULTIPLY_PHI 952,44801
    HASH_FUNCTION_LOWER_BSWAP 954,44853
    HASH_FUNCTION_BSWAP_XOR 955,44888
    HASH_FUNCTION_SWAP_12TO15 956,44921
    HASH_FUNCTION_SWAP_12TO15_AND_NONE 957,44956
    HASH_FUNCTION_SHIFT_XOR 958,45000
    HASH_FUNCTION_STRING 960,45040
    HASH_FUNCTION_STRING_NOCASE 961,45070
    HASH_FUNCTION_ENUM_MAX,962,45107
} hash_function_t;963,45135
# define REACHABLE_32BIT_START(979,45899
# define REACHABLE_32BIT_END(986,46440
#define MAX_LOW_2GB 990,46662
#define ALIGNED(993,46766
#define ALIGN_FORWARD(994,46839
#define ALIGN_FORWARD_UINT(996,46952
#define ALIGN_BACKWARD(998,47052
#define PAD(999,47140
#define ALIGN_MOD(1000,47221
#define CROSSES_ALIGNMENT(1002,47318
#define ALIGN_SHIFT_SIZE(1005,47504
#define IS_POWER_OF_2(1009,47668
#define POINTER_OVERFLOW_ON_ADD(1014,47827
#define POINTER_UNDERFLOW_ON_SUB(1016,47927
typedef uint bitmap_element_t;1022,48120
typedef bitmap_element_t bitmap_t[bitmap_t1023,48151
#define BITMAP_DENSITY 1031,48432
#define BITMAP_MASK(1032,48460
#define BITMAP_INDEX(1033,48515
#define BITMAP_NOT_FOUND 1034,48563
bitmap_test(1045,48899
bitmap_set(1051,49012
bitmap_clear(1057,49109
#define LOGDIR_MAX_NUM 1075,49810
#define LOGDIR_FORMAT_STRING 1076,49847
#define LOGDIR_FORMAT_ARGS(1077,49889
# define MAX_LOG_LENGTH 1085,50262
# define MAX_LOG_LENGTH_MINUS_ONE 1086,50309
# define MAX_LOG_LENGTH 1092,50570
# define MAX_LOG_LENGTH_MINUS_ONE 1093,50630
# define LOG(1097,50759
# define DOELOG(1104,51105
# define DOCHECK(1111,51422
#  define DOLOG 1116,51579
#  define LOG_DECLARE(1117,51602
#  define DOLOG(1120,51729
#  define LOG_DECLARE(1121,51769
# define THREAD 1123,51827
# define THREAD_GET 1125,51967
# define GLOBAL 1126,52016
# define LOG(1130,52219
# define DOLOG(1131,52256
# define DOELOG 1132,52295
# define LOG_DECLARE(1133,52317
# define DOCHECK(1134,52351
# define wcsnlen 1153,53111
    BASE_DIR,1177,54047
    PROCESS_DIR 1178,54109
} log_dir_t;1179,54189
#define DO_ONCE(1200,55263
# define DECLARE_THRESHOLD_LOCK(1226,56661
# define DECLARE_THRESHOLD_LOCK(1228,56722
#define DO_THRESHOLD_SAFE(1236,57053
#define TRY_EXCEPT_ALLOW_NO_DCONTEXT(1275,59096
#define TRY_EXCEPT(1292,60411
#define TRY_FINALLY(1298,60737
#define TRY(1305,61090
#define EXCEPT(1355,63891
#define FINALLY(1371,64690
#define POP_TRY_BLOCK(1398,66495
enum {LONGJMP_EXCEPTION LONGJMP_EXCEPTION1404,66831
#define PROBE_READ_PC(1408,67003
#define PROBE_WRITE_PC(1409,67056
#define UNUSED_VARIABLE(1427,67942
#define GLOBAL_STAT(1433,68214
#define GLOBAL_STAT_ADDR(1435,68341
#define DO_GLOBAL_STATS(1436,68400
# define XSTATS_ATOMIC_INC(1443,68613
# define XSTATS_ATOMIC_DEC(1444,68668
# define XSTATS_ATOMIC_ADD(1445,68723
# define XSTATS_ATOMIC_MAX(1446,68788
# define XSTATS_ATOMIC_ADD_EXCHANGE(1447,68853
# define XSTATS_ATOMIC_INC(1449,68941
# define XSTATS_ATOMIC_DEC(1450,68994
# define XSTATS_ATOMIC_ADD(1451,69047
# define XSTATS_ATOMIC_MAX(1452,69110
# define XSTATS_ATOMIC_ADD_EXCHANGE(1453,69173
#define XSTATS_INC_DC(1459,69387
#define XSTATS_INC(1463,69625
#define XSTATS_DEC_DC(1467,69841
#define XSTATS_DEC(1471,70079
#define XSTATS_ADD_DC(1475,70295
#define XSTATS_ADD(1481,70761
#define XSTATS_SUB(1484,70990
#define XSTATS_ADD_ASSIGN_DC(1485,71062
#define XSTATS_INC_ASSIGN_DC(1494,71702
#define XSTATS_ADD_ASSIGN(1496,71832
#define XSTATS_INC_ASSIGN(1499,72070
#define XSTATS_MAX_HELPER(1502,72141
#define XSTATS_MAX_DC(1513,72907
#define XSTATS_PEAK_DC(1516,73117
#define XSTATS_MAX(1518,73241
#define XSTATS_TRACK_MAX(1521,73471
#define XSTATS_PEAK(1530,74087
#define XSTATS_ADD_MAX_DC(1535,74307
#define XSTATS_ADD_MAX(1541,74724
#define XSTATS_ADD_PEAK_DC(1545,75021
#define XSTATS_ADD_PEAK(1547,75160
#define XSTATS_RESET_DC(1552,75403
#define XSTATS_RESET(1556,75641
#define RSTATS_INC 1561,75906
#define RSTATS_DEC 1562,75936
#define RSTATS_ADD 1563,75966
#define RSTATS_SUB 1564,75996
#define RSTATS_ADD_PEAK 1565,76026
#   define DODEBUGINT 1568,76107
#   define DOCHECKINT 1569,76137
#   define DODEBUGINT(1571,76173
#   define DOCHECKINT(1572,76220
#   define DEBUG_EXT_DECLARE(1579,76494
#   define DEBUG_EXT_DECLARE(1581,76554
#   define DODEBUG(1585,76655
#   define DEBUG_DECLARE(1586,76712
#   define DOSTATS(1587,76762
#   define GLOBAL_STATS_ON(1602,77623
#   define THREAD_STAT(1603,77701
#   define THREAD_STATS_ON(1605,77796
#   define DO_THREAD_STATS(1608,78016
#   define XSTATS_WITH_DC(1613,78328
#   define STATS_INC 1620,78712
#   define STATS_INC_DC 1622,78789
#   define STATS_DEC 1623,78827
#   define STATS_ADD 1624,78859
#   define STATS_SUB 1625,78891
#   define STATS_INC_ASSIGN 1626,78923
#   define STATS_ADD_ASSIGN 1627,78969
#   define STATS_MAX 1628,79015
#   define STATS_TRACK_MAX 1629,79047
#   define STATS_PEAK 1630,79091
#   define STATS_ADD_MAX 1631,79125
#   define STATS_ADD_PEAK 1632,79165
#   define STATS_RESET 1633,79207
#   define DODEBUG(1636,79250
#   define DEBUG_DECLARE(1637,79280
#   define DOSTATS(1638,79318
#   define THREAD_STATS_ON(1639,79348
#   define XSTATS_WITH_DC(1640,79391
#   define DO_THREAD_STATS(1641,79443
#   define GLOBAL_STATS_ON(1642,79505
#   define STATS_INC(1647,79736
#   define STATS_INC_DC(1648,79777
#   define STATS_DEC(1649,79831
#   define STATS_ADD(1650,79872
#   define STATS_SUB(1651,79920
#   define STATS_INC_ASSIGN(1652,79968
#   define STATS_ADD_ASSIGN(1653,80021
#   define STATS_MAX(1654,80081
#   define STATS_TRACK_MAX(1655,80136
#   define STATS_PEAK(1656,80199
#   define STATS_ADD_MAX(1657,80241
#   define STATS_ADD_PEAK(1658,80307
#   define STATS_RESET(1659,80360
# define DOKSTATS(1663,80437
# define KSTART(1670,80712
# define KSTOP(1673,80822
# define KSWITCH(1676,80966
# define KSTOP_NOT_MATCHING(1679,81092
# define KSTOP_REWIND(1686,81478
# define KSTOP_REWIND_UNTIL(1687,81556
# define KSWITCH_STOP(1690,81694
# define KSWITCH_STOP_NOT_PROPAGATED(1696,81950
# define KSTOP_NOT_MATCHING_NOT_PROPAGATED(1703,82266
# define KSTOP_NOT_PROPAGATED(1710,82620
# define KSTART_DC(1725,83349
# define KSTOP_DC(1727,83477
# define KSTOP_NOT_MATCHING_DC(1729,83613
# define KSTOP_REWIND_DC(1733,83840
# define DOKSTATS(1735,83956
# define KSTART(1736,84002
# define KSWITCH(1737,84048
# define KSWITCH_STOP(1738,84094
# define KSWITCH_STOP_NOT_PROPAGATED(1739,84140
# define KSTOP_NOT_MATCHING_NOT_PROPAGATED(1740,84197
# define KSTOP_NOT_PROPAGATED(1741,84260
# define KSTOP_NOT_MATCHING(1742,84310
# define KSTOP(1743,84360
# define KSTOP_REWIND(1744,84406
# define KSTOP_REWIND_UNTIL(1745,84452
# define KSTART_DC(1747,84501
# define KSTOP_DC(1748,84547
# define KSTOP_NOT_MATCHING_DC(1749,84593
# define KSTOP_REWIND_DC(1750,84648
#  define DODEBUG_ONCE(1754,84734
#  define DOLOG_ONCE(1755,84796
#  define DODEBUG_ONCE(1757,84886
#  define DOLOG_ONCE(1758,84934
#define MAX_FP_STATE_SIZE 1761,85016
#define PRESERVE_FLOATING_POINT_STATE_START(1772,85520
#define PRESERVE_FLOATING_POINT_STATE_END(1778,85838
#define PRESERVE_FLOATING_POINT_STATE(1783,86043
#define ARGUMENT_COUNTER(1790,86394
#define _ARGUMENT_COUNT1(1791,86460
#define _ARGUMENT_COUNT2(1792,86533
#define SYSLOG_COMMON(1821,87677
#define SYSLOG_INTERNAL_COMMON(1824,87826
#define SYSLOG_CUSTOM_NOTIFY(1836,88519
#define SYSLOG(1839,88642
#define SYSLOG_NO_OPTION_SYNCH(1841,88731
# define SYSLOG_INTERNAL(1845,88893
# define SYSLOG_INTERNAL_NO_OPTION_SYNCH(1847,88985
# define SYSLOG_INTERNAL(1850,89100
# define SYSLOG_INTERNAL_NO_OPTION_SYNCH(1851,89130
#define SYSLOG_INTERNAL_INFO(1855,89221
#define SYSLOG_INTERNAL_WARNING(1857,89310
#define SYSLOG_INTERNAL_ERROR(1859,89398
#define SYSLOG_INTERNAL_CRITICAL(1861,89482
#define SYSLOG_INTERNAL_INFO_ONCE(1864,89573
#define SYSLOG_INTERNAL_WARNING_ONCE(1866,89666
#define SYSLOG_INTERNAL_ERROR_ONCE(1868,89765
#define SYSLOG_INTERNAL_CRITICAL_ONCE(1870,89860
#define USAGE_ERROR(1878,90313
#define FATAL_USAGE_ERROR(1883,90645
#define OPTION_PARSE_ERROR(1892,91304
# define TRACELOG(1900,91737
# define TRACELOG(1902,91826
#define LOG_NONE 1910,92108
#define LOG_STATS 1911,92146
#define LOG_TOP 1912,92184
#define LOG_THREADS 1913,92222
#define LOG_SYSCALLS 1914,92260
#define LOG_ASYNCH 1915,92298
#define LOG_INTERP 1916,92336
#define LOG_EMIT 1917,92374
#define LOG_LINKS 1918,92412
#define LOG_CACHE 1919,92450
#define LOG_FRAGMENT 1920,92488
#define LOG_DISPATCH 1921,92526
#define LOG_MONITOR 1922,92564
#define LOG_HEAP 1923,92602
#define LOG_VMAREAS 1924,92640
#define LOG_SYNCH 1925,92678
#define LOG_MEMSTATS 1926,92716
#define LOG_OPTS 1927,92754
#define LOG_SIDELINE 1928,92792
#define LOG_SYMBOLS 1929,92830
#define LOG_RCT 1930,92868
#define LOG_NT 1931,92906
#define LOG_HOT_PATCHING 1932,92944
#define LOG_HTABLE 1933,92982
#define LOG_MODULEDB 1934,93020
#define LOG_LOADER 1935,93058
#define LOG_CLEANCALL 1936,93096
#define LOG_ALL_RELEASE 1938,93135
#define LOG_ALL 1939,93173
# define LOG_PROFILE 1942,93237
#define MAXIMUM_SYMBOL_LENGTH 1948,93448
    DUMP_NO_QUOTING 1972,94128
    DUMP_NO_QUOTING   = 0x01000,x010001972,94128
    DUMP_OCTAL 1973,94195
    DUMP_OCTAL        = 0x02000,x020001973,94195
    DUMP_NO_CHARS 1974,94245
    DUMP_NO_CHARS     = 0x04000,x040001974,94245
    DUMP_RAW 1975,94306
    DUMP_RAW          = 0x08000,x080001975,94306
    DUMP_DWORD 1976,94366
    DUMP_DWORD        = 0x10000,x100001976,94366
    DUMP_ADDRESS 1977,94424
    DUMP_ADDRESS      = 0x20000,x200001977,94424
    DUMP_APPEND_ASCII 1978,94503
    DUMP_APPEND_ASCII = 0x40000,x400001978,94503
    DUMP_PER_LINE 1979,94578
    DUMP_PER_LINE     = 0x000ff x000ff1979,94578
#define DUMP_PER_LINE_DEFAULT 1981,94646
#define MD5_BLOCK_LENGTH 2024,96280
#define MD5_RAW_BYTES 2025,96308
#define MD5_STRING_LENGTH 2026,96333
struct MD5Context 2033,96639
    uint32 state[state2034,96659
    uint64 count;2035,96716
    unsigned char buffer[buffer2036,96792
#   undef isprint2080,97966
#   undef isdigit2085,98032
#define isprint_fast(2091,98096
#define isdigit_fast(2092,98152
#  undef isprint2100,98400
#  undef isdigit2103,98441
# define isprint 2105,98466
# define isdigit 2106,98532
#define MAX_CALL_PROFILE_DEPTH 2143,100171
#define EXPECT(2151,100352
#define EXPECT_RELATION(2156,100563
#define EXPECT_RELATION_INTERNAL(2161,100774
#define TESTRUN(2174,101601
#define UNIT_TEST_MAIN 2189,102228

vmareas.c,13382
    VM_WRITABLE 76,2697
    VM_WRITABLE     = 0x0001,x000176,2697
    VM_UNMOD_IMAGE 80,2936
    VM_UNMOD_IMAGE  = 0x0002,x000280,2936
    VM_DELETE_ME 81,2966
    VM_DELETE_ME    = 0x0004,x000481,2966
    VM_WAS_FUTURE 85,3262
    VM_WAS_FUTURE   = 0x0008,x000885,3262
    VM_DR_HEAP 86,3337
    VM_DR_HEAP      = 0x0010,x001086,3337
    VM_ONCE_ONLY 87,3389
    VM_ONCE_ONLY    = 0x0020,x002087,3389
    VM_MADE_READONLY 93,3724
    VM_MADE_READONLY = VM_WRITABLE/VM_WRITABLE93,3724
    VM_DELAY_READONLY 97,4019
    VM_DELAY_READONLY = 0x0080,x008097,4019
    VM_PATTERN_REVERIFY 108,4690
    VM_PATTERN_REVERIFY = 0x0100,x0100108,4690
    VM_DRIVER_ADDRESS 111,4734
    VM_DRIVER_ADDRESS   = 0x0200,x0200111,4734
    VM_PERSISTED_CACHE 124,5347
    VM_PERSISTED_CACHE     = 0x0400,x0400124,5347
    VM_EXECUTED_FROM 127,5456
    VM_EXECUTED_FROM       = 0x0800,x0800127,5456
    VM_ADD_TO_SHARED_DATA 133,5684
    VM_ADD_TO_SHARED_DATA  = 0x1000,x1000133,5684
#define SANDBOX_FLAG(137,5764
typedef struct _ro_vs_sandbox_data_t 140,5895
    uint written_count;145,6128
    uint selfmod_execs;154,6614
    uint ro2s_xfers;156,6651
    uint s2ro_xfers;157,6672
} ro_vs_sandbox_data_t;159,6700
typedef struct vm_area_t 170,7259
    app_pc start;171,7286
    app_pc end;172,7304
    uint vm_flags;178,7604
    uint frag_flags;182,7728
    char *comment;comment184,7762
        fragment_t *frags;frags199,8414
        void *client;client201,8503
    } custom;202,8525
} vm_area_t;203,8539
typedef struct thread_data_t 208,8691
    vm_area_vector_t areas;209,8722
    vm_area_t *last_area;last_area211,8810
    app_pc last_decode_area_page_pc;220,9357
    bool   last_decode_area_valid;221,9394
    uint thrown_exceptions;223,9487
} thread_data_t;225,9572
#define SHOULD_LOCK_VECTOR(227,9590
#define LOCK_VECTOR(232,9820
#define UNLOCK_VECTOR(241,10268
static vm_area_vector_t *executable_areas;executable_areas256,11028
static vm_area_vector_t *dynamo_areas;dynamo_areas257,11071
static coarse_info_t **coarse_to_delete;coarse_to_delete264,11348
static vm_area_vector_t *pretend_writable_areas;pretend_writable_areas270,11556
vm_area_vector_t *patch_proof_areas;patch_proof_areas273,11668
vm_area_vector_t *emulate_write_areas;emulate_write_areas278,11849
vm_area_vector_t *IAT_areas;IAT_areas285,12154
static vm_area_vector_t *written_areas;written_areas290,12302
static vm_area_vector_t *futureexec_areas;futureexec_areas298,12581
static vm_area_vector_t *app_flushed_areas;app_flushed_areas303,12776
static app_pc tamper_resistant_region_start,311,12987
static app_pc tamper_resistant_region_start, tamper_resistant_region_end;311,12987
static thread_data_t *shared_data;shared_data324,13603
typedef struct _pending_delete_t 326,13674
    app_pc start;329,13793
    app_pc end;330,13811
    fragment_t *frags;frags333,13902
    uint ref_count;335,14002
    uint flushtime_deleted;336,14022
    struct _pending_delete_t *next;next338,14099
} pending_delete_t;339,14135
typedef struct _deletion_lists_t 342,14228
    pending_delete_t *shared_delete;shared_delete349,14642
    pending_delete_t *shared_delete_tail;shared_delete_tail351,14749
    uint shared_delete_count;353,14832
    fragment_t *lazy_delete_list;lazy_delete_list359,15066
    fragment_t *lazy_delete_tail;lazy_delete_tail361,15152
    uint lazy_delete_count;363,15231
    bool move_pending;365,15331
} deletion_lists_t;366,15354
static deletion_lists_t *todelete;todelete368,15375
typedef struct _last_deallocated_t 370,15411
    bool unload_in_progress;388,16429
    app_pc last_unload_base;389,16458
    size_t last_unload_size;390,16487
} last_deallocated_t;398,16919
static last_deallocated_t *last_deallocated;last_deallocated399,16941
#define MULTI_ALLOC_DC(412,17604
#define GET_DATA(413,17667
#define GET_VECTOR(416,17821
#define SHARED_VECTOR_RWLOCK(420,18121
#define ASSERT_VMAREA_DATA_PROTECTED(426,18383
# define ASSERT_VMAREA_VECTOR_PROTECTED(435,18804
# define ASSERT_VMAREA_VECTOR_PROTECTED(443,19261
#define MAXIMUM_VIOLATION_NAME_LENGTH 447,19392
#define VMVECTOR_INITIALIZE_VECTOR(449,19434
bool vm_areas_exited 523,21815
typedef struct _multi_entry_t 546,23067
    fragment_t *f;f547,23099
    uint      flags;552,23355
    fragment_t *next_vmarea;next_vmarea554,23462
    fragment_t *prev_vmarea;prev_vmarea555,23491
    fragment_t *also_vmarea;also_vmarea556,23520
    app_pc pc;559,23699
} multi_entry_t;560,23714
#define FRAG_MULTI(563,23807
#define FRAG_MULTI_INIT(565,23871
#define FRAG_NEXT(567,23971
#define FRAG_NEXT_ASSIGN(570,24099
#define FRAG_PREV(577,24304
#define FRAG_PREV_ASSIGN(580,24432
#define FRAG_ALSO(588,24713
#define FRAG_ALSO_DEL_OK(592,24967
#define FRAG_ALSO_ASSIGN(595,25107
#define FRAG_PC(605,25462
#define FRAG_PC_ASSIGN(608,25571
#define FRAG_FRAG(615,25761
#define FRAG_FRAG_ASSIGN(618,25870
#define FRAG_ID(625,26064
vm_make_writable(632,26305
vm_make_unwritable(643,26635
revert_memory_regions(671,27797
print_vm_flags(695,28689
print_vm_area(711,29313
print_vm_areas(769,31606
print_contig_vm_areas(780,31866
print_pending_list(797,32316
writelock_if_not_already(813,32857
vm_area_vector_check_size(823,33087
vm_area_merge_fraglists(848,34055
add_vm_area(895,36243
adjust_coarse_unit_bounds(1230,53123
remove_vm_area(1275,55066
binary_search(1452,63742
lookup_addr(1513,66074
vm_area_overlap(1523,66400
vm_areas_reset_init(1533,66721
dynamo_vm_areas_init(1541,66946
vm_areas_init(1552,67274
vm_areas_statistics(1627,70313
vm_areas_reset_free(1650,71146
vm_areas_exit(1665,71684
vm_areas_thread_reset_init(1772,75431
vm_areas_thread_init(1783,75878
vm_areas_thread_reset_free(1791,76101
vm_areas_thread_exit(1804,76540
vmvector_set_callbacks(1822,77138
vmvector_print(1839,77760
vmvector_add(1848,78001
vmvector_add_replace(1858,78358
vmvector_remove(1878,79014
vmvector_remove_containing_area(1894,79540
vmvector_overlap(1920,80342
vmvector_lookup(1938,80931
vmvector_lookup_data(1950,81289
vmvector_lookup_prev_next(1980,82301
vmvector_modify_data(2013,83346
vmvector_init_vector(2030,83943
vmvector_create_vector(2038,84160
vmvector_reset_vector(2048,84441
vmvector_free_vector(2089,86190
vmvector_delete_vector(2097,86401
vmvector_iterator_start(2116,87028
vmvector_iterator_hasnext(2127,87263
vmvector_iterator_startover(2134,87440
vmvector_iterator_peek(2150,87864
vmvector_iterator_next(2172,88636
vmvector_iterator_stop(2181,88893
print_executable_areas(2197,89329
print_dynamo_areas(2203,89419
print_futureexec_areas(2212,89601
print_written_areas(2220,89745
free_written_area(2227,89843
add_written_area(2239,90298
add_executable_vm_area_check_IAT(2316,93689
add_executable_vm_area_helper(2490,102891
vm_area_load_coarse_unit(2552,105680
add_executable_vm_area(2626,109551
add_executable_region(2730,113869
remove_executable_vm_area(2742,114363
remove_executable_region(2760,114994
vm_area_delay_load_coarse_units(2770,115303
free_nonexec_coarse_and_unlock(2812,117090
add_futureexec_vm_area(2859,118889
remove_futureexec_vm_area(2884,119897
futureexec_vm_area_overlap(2897,120330
is_executable_address(2909,120669
get_executable_area_vm_flags(2923,121030
get_executable_area_flags(2943,121578
get_coarse_info_internal(2963,122208
get_executable_area_coarse_info(3042,125919
mark_executable_area_coarse_frozen(3051,126181
executable_areas_match_flags(3088,127781
is_executable_area_writable(3130,129663
is_executable_area_writable_overlap(3152,130551
is_pretend_or_executable_writable(3165,130977
executable_vm_area_coarse_overlap(3178,131385
executable_vm_area_persisted_overlap(3192,131826
executable_vm_area_executed_from(3204,132247
executable_area_overlap_bounds(3232,133629
vm_area_coarse_iter_start(3282,135878
vm_area_coarse_iter_find_next(3297,136420
vm_area_coarse_iter_hasnext(3320,137331
vm_area_coarse_iter_next(3326,137573
vm_area_coarse_iter_stop(3333,137764
is_executable_area_on_all_selfmod_pages(3344,138074
was_executable_area_writable(3365,138972
is_executable_area_selfmod(3397,140377
is_executable_area_dyngen(3409,140672
is_valid_address(3421,140916
update_dynamo_vm_areas(3434,141330
are_dynamo_vm_areas_stale(3459,142199
mark_dynamo_vm_areas_stale(3470,142493
dynamo_vm_areas_lock(3480,142858
dynamo_vm_areas_unlock(3501,143594
self_owns_dynamo_vm_area_lock(3518,144137
dynamo_vm_areas_start_reading(3531,144635
dynamo_vm_areas_done_reading(3554,145442
add_dynamo_vm_area(3564,145735
remove_dynamo_vm_area(3591,146958
add_dynamo_heap_vm_area(3614,147735
is_dynamo_area_buffer(3636,148696
remove_dynamo_heap_areas(3643,148860
is_dynamo_address(3670,150016
is_pretend_writable_address(3687,150588
pretend_writable_vm_area_overlap(3702,151167
get_address_comment(3715,151510
executable_vm_area_overlap(3740,152154
executable_areas_lock(3752,152477
executable_areas_unlock(3758,152552
dynamo_vm_area_overlap(3766,152756
is_on_stack(3782,153253
is_address_on_stack(3829,155137
is_driver_address(3837,155372
#define MESSAGE_EXEC_VIOLATION 3856,155920
#define MESSAGE_CONTACT_VENDOR 3857,156001
const char * const action_message[action_message3858,156090
const uint action_event_id[action_event_id3868,156572
fill_security_violation_target(3881,156873
get_security_violation_name(3890,157128
is_exempt_threat_name(4001,161440
security_violation_report(4030,162530
security_violation_internal_main(4138,167266
security_violation_action(4474,182945
security_violation_main(4533,185401
security_violation_internal(4549,186080
security_violation(4574,187219
END_DATA_SECTION(4584,187621
is_in_futureexec_area(4601,188241
is_dyngen_code(4611,188460
is_direct_jmp_to_image(4625,188797
check_trampoline_displaced_code(4649,189672
check_origins_bb_pattern(4721,192900
check_origins_trim_region_helper(4966,204087
check_origins_helper(4985,204973
check_origins(5482,230354
vm_area_fragment_self_write(5526,232146
    SIMULATE_INIT 5570,234183
    SIMULATE_GENERIC 5571,234212
    SIMULATE_AT_ADDR 5572,234241
    SIMULATE_AT_FRAGNUM 5573,234270
    SIMULATE_WIPE_STACK 5574,234299
    SIMULATE_OVER 5575,234328
    SIMULATE_OVER       = 0x1000,x10005575,234328
next_simulate_at_fragment(5592,234959
simulate_attack(5641,236667
print_entry(5702,238798
print_fraglist(5722,239518
print_fraglists(5758,241112
print_frag_arealist(5771,241501
area_contains_frag_pc(5787,241976
prepend_entry_to_fraglist(5803,242464
prepend_fraglist(5828,243478
dyngen_diagnostics(5853,244447
app_memory_pre_alloc(5915,246711
app_memory_allocation(5959,248713
app_memory_deallocation(6075,253961
flush_and_remove_executable_vm_area(6160,258259
tamper_resistant_region_add(6186,259338
tamper_resistant_region_overlap(6209,260226
app_memory_protection_change(6237,261586
app_memory_flush(6915,296664
was_address_flush_start(6976,299309
handle_delay_readonly(6995,299995
check_thread_vm_area_cleanup(7034,301839
check_thread_vm_area_abort(7077,303700
allow_xfer_for_frag_flags(7093,304327
check_thread_vm_area(7159,307405
set_thread_decode_page_start(8018,348966
check_in_last_thread_vm_area(8052,350247
remove_shared_vmlist(8103,352972
vm_area_add_fragment(8164,355593
acquire_vm_areas_lock(8280,360065
acquire_vm_areas_lock_if_not_already(8287,360237
release_vm_areas_lock(8294,360422
frag_also_list_areas_unique(8306,360827
exec_area_bounds_match(8342,362237
vm_area_add_to_list(8383,363973
vm_area_destroy_list(8503,369458
vm_list_overlaps(8510,369614
remove_fraglist_entry(8545,370849
vm_area_check_clean_fraglist(8604,373050
vm_area_clean_fraglist(8641,374545
vm_area_remove_fragment(8695,377076
add_to_pending_list(8740,378629
print_lazy_deletion_list(8791,380674
check_lazy_deletion_list_consistency(8806,381072
remove_from_lazy_deletion_list(8819,381348
move_lazy_list_to_pending_delete(8845,382242
add_to_lazy_deletion_list(8905,385201
check_lazy_deletion_list(8989,389159
unlink_fragments_for_deletion(9044,391455
vm_area_unlink_fragments(9086,393078
vm_area_unlink_incoming(9283,403338
vm_area_check_shared_pending(9322,404750
vm_area_flush_fragments(9539,414668
vm_area_flush_coarse_unit(9637,418937
vm_area_allsynch_flush_fragments(9712,422411
vm_area_coarse_units_reset_free(9887,431165
coarse_region_should_persist(9937,433580
vm_area_coarse_region_freeze(10007,436518
vm_area_coarse_units_freeze(10118,442078
remove_thread_vm_area(10161,443847
thread_vm_area_overlap(10178,444456
handle_modified_code(10199,445181
get_selfmod_exec_counter(10621,466897
vm_area_selfmod_check_clear_exec_count(10672,469018
mark_unload_start(10833,476921
mark_unload_future_added(10853,477647
mark_unload_end(10874,478452
is_in_last_unloaded_region(10959,482626
is_currently_unloaded_region(10980,483269
is_unreadable_or_currently_unloaded_region(10993,483543
print_last_deallocated(11018,484319
safe_apc_or_thread_target(11055,485529
apc_thread_policy_helper(11070,485933
    enum {PIC_SHELLCODE_MATCH PIC_SHELLCODE_MATCH11098,487079
    enum {PIC_SHELLCODE_MATCH = 0x0000e853}x0000e85311098,487079
aslr_report_violation(11252,493790
# define INT_TO_PC(11324,496905
print_vector_msg(11327,496966
check_vec(11334,497107
vmvector_tests(11346,497471
unit_test_vmareas(11389,499277

vmareas.h,2137
#define _VMAREAS_H_ 42,1931
#define EMPTY_REGION_BASE 47,2074
#define EMPTY_REGION_SIZE 48,2161
#define UNIVERSAL_REGION_BASE 49,2201
#define UNIVERSAL_REGION_SIZE 51,2297
#define UNIVERSAL_REGION_END 53,2397
    VECTOR_SHARED 60,2531
    VECTOR_SHARED        = 0x0001,x000160,2531
    VECTOR_FRAGMENT_LIST 61,2566
    VECTOR_FRAGMENT_LIST = 0x0002,x000261,2566
    VECTOR_NEVER_MERGE_ADJACENT 63,2669
    VECTOR_NEVER_MERGE_ADJACENT = 0x0004,x000463,2669
    VECTOR_NEVER_OVERLAP 65,2776
    VECTOR_NEVER_OVERLAP = 0x0008,x000865,2776
    VECTOR_NO_LOCK 69,2938
    VECTOR_NO_LOCK       = 0x0010,x001069,2938
#define VECTOR_NEVER_MERGE 72,2977
struct vm_area_vector_t 82,3462
    struct vm_area_t *buf;buf83,3488
    int size;84,3515
    int length;85,3544
    uint flags;86,3560
    read_write_lock_t lock;91,3780
    void (*free_payload_func)free_payload_func95,3875
    void *(*split_payload_func)split_payload_func99,4015
    bool (*should_merge_func)should_merge_func108,4498
    void *(*merge_payload_func)merge_payload_func113,4754
#define VMVECTOR_ALLOC_VECTOR(119,5011
typedef struct vmvector_iterator_t 125,5260
    vm_area_vector_t *vector;vector126,5297
    int index;127,5327
} vmvector_iterator_t;128,5342
vmvector_empty(170,6689
#define USING_PRETEND_WRITABLE(419,13816
    ACTION_TERMINATE_PROCESS,545,18338
    ACTION_CONTINUE,546,18368
    ACTION_TERMINATE_THREAD,547,18418
    ACTION_THROW_EXCEPTION,548,18447
} action_type_t;549,18475
#  define USING_FUTURE_EXEC_LIST 572,19340
#  define USING_FUTURE_EXEC_LIST 577,19641
    DO_APP_MEM_PROT_CHANGE,597,20292
    FAIL_APP_MEM_PROT_CHANGE,598,20365
    PRETEND_APP_MEM_PROT_CHANGE,600,20493
    SUBSET_APP_MEM_PROT_CHANGE,601,20572
    DR_MODIFY_HALT 612,21026
    DR_MODIFY_NOP 613,21105
    DR_MODIFY_FAIL 614,21187
    DR_MODIFY_ALLOW 615,21241
    DR_MODIFY_OFF 616,21325
#    define APC_API 777,27109
#    define APC_API779,27163
    APC_TARGET_NATIVE,790,27384
    APC_TARGET_WINDOWS,791,27408
    THREAD_TARGET_NATIVE,792,27433
    THREAD_TARGET_WINDOWS793,27460
} apc_thread_type_t;794,27486

win32/aslr.c,4855
enum {ASLR_MAP_GRANULARITY ASLR_MAP_GRANULARITY53,2183
    module_digest_t original_source;66,2774
    module_digest_t relocated_target;67,2811
    uint magic;79,3389
    uint version;84,3603
} aslr_persistent_digest_t;86,3700
enum {ASLR_PERSISTENT_CACHE_VERSION ASLR_PERSISTENT_CACHE_VERSION89,3769
enum {ASLR_PERSISTENT_CACHE_MAGIC ASLR_PERSISTENT_CACHE_MAGIC91,3836
enum {ASLR_PERSISTENT_CACHE_MAGIC = 0x45504441}x4550444191,3836
typedef struct _aslr_last_dll_bounds_t 97,4070
    app_pc end;98,4111
    app_pc start;101,4252
} aslr_last_dll_bounds_t;102,4270
static aslr_last_dll_bounds_t *aslr_last_dll_bounds;aslr_last_dll_bounds104,4297
vm_area_vector_t *aslr_wouldbe_areas;aslr_wouldbe_areas118,4897
vm_area_vector_t *aslr_heap_pad_areas;aslr_heap_pad_areas129,5422
HANDLE shared_object_directory 132,5516
HANDLE relocated_dlls_filecache_initial 137,5686
#define KNOWN_DLLS_OBJECT_DIRECTORY 139,5751
HANDLE known_dlls_object_directory 140,5802
#define KNOWN_DLL_PATH_SYMLINK 142,5862
wchar_t known_dll_path[known_dll_path143,5909
aslr_init(179,6975
aslr_exit(431,19074
aslr_thread_init(474,20680
aslr_thread_exit(479,20729
aslr_get_next_base(489,21021
aslr_get_fitting_base(534,23007
aslr_update_failed(613,26424
aslr_update_view_size(647,27698
aslr_track_randomized_dlls(686,29172
aslr_pre_process_mapview(796,34496
aslr_retry_map_syscall(1101,49868
aslr_get_module_mapping_size(1149,52280
#define SET_RETURN_VAL(1198,54206
aslr_post_process_mapview(1207,54485
void aslr_pre_process_unmapview(1897,87973
aslr_post_process_unmapview(1926,89172
aslr_doublecheck_wouldbe_areas(1943,89678
aslr_is_possible_attack(1964,90312
aslr_possible_preferred_address(1985,91189
aslr_reserve_remote_random_pad(2020,92746
aslr_maybe_pad_stack(2062,94573
#define LOADBLOCK_PAGE_PROTECT 2121,97163
aslr_force_dynamorio_rebase(2135,97729
aslr_free_dynamorio_loadblock(2180,99407
aslr_post_process_allocate_virtual_memory(2230,101432
aslr_pre_process_free_virtual_memory(2413,110905
aslr_reserve_initial_heap_pad(2475,113706
aslr_free_heap_pads(2543,117078
get_relocated_dlls_filecache_directory(2585,118622
open_relocated_dlls_filecache_directory(2610,119753
aslr_module_force_size(2725,125038
aslr_module_append_signature(2790,127262
aslr_module_read_signature(2844,129499
aslr_get_section_digest(2929,132629
aslr_create_private_module_section(2978,134469
aslr_get_file_digest(3011,135985
aslr_compare_in_place(3058,137611
aslr_module_verify_relocated_contents(3148,141119
aslr_verify_file_checksum(3337,149172
aslr_open_relocated_dll_file(3521,156357
aslr_check_low_disk_threshold(3650,162479
aslr_create_relocated_dll_file(3684,163958
is_aslr_exempted_file_name(3816,169767
get_file_short_name(3894,173204
calculate_publish_name(3922,174319
aslr_write_header(4042,179406
aslr_generate_relocated_section(4124,182896
aslr_experiment_with_section_handle(4385,194645
aslr_file_relocate_cow(4535,201556
aslr_module_get_times(4636,206611
aslr_produce_randomized_file(4732,210212
aslr_get_unique_wide_name(4949,219863
aslr_rename_temporary_file(4974,220918
aslr_publish_section_handle(5029,223292
aslr_set_randomized_handle(5315,236750
aslr_get_original_metadata(5386,239852
aslr_verify_section_backing(5454,242520
aslr_replace_section_handle(5475,243353
aslr_subscribe_section_handle(5559,246960
aslr_post_process_create_section_internal(5673,251555
aslr_publish_file(5792,256959
aslr_get_known_dll_path(5825,258097
aslr_is_handle_KnownDlls(5887,260322
aslr_recreate_known_dll_file(5940,262286
aslr_post_process_create_or_open_section(6035,266269
aslr_process_worklist(6088,268497
#define GBOP_DEFINE_HOOK(6144,270903
#define GBOP_DEFINE_HOOK_MODULE(6145,270963
static const gbop_hook_desc_t gbop_hooks[gbop_hooks6154,271455
#undef GBOP_DEFINE_HOOK6158,271525
#undef GBOP_DEFINE_HOOK_MODULE6159,271549
#define GBOP_HOOK_LIST_END_SENTINEL 6161,271581
#define GBOP_DEFINE_HOOK(6166,271802
#define GBOP_DEFINE_HOOK_MODULE(6167,271846
static const uint gbop_hooks_set_sizes[gbop_hooks_set_sizes6174,272163
#undef GBOP_DEFINE_HOOK6180,272321
#undef GBOP_DEFINE_HOOK_MODULE6181,272345
#define GBOP_DEFINE_HOOK_MODULE(6188,272630
static int gbop_hooks_set_enabled[gbop_hooks_set_enabled6190,272689
#undef GBOP_DEFINE_HOOK_MODULE6195,272841
static const uint gbop_num_hooks 6197,272873
bool gbop_vm_loaded 6206,273242
gbop_get_hook(6211,273416
gbop_get_num_hooks(6242,274528
gbop_exclude_filter(6290,276289
    CTI_MIN_LENGTH 6358,279118
    CTI_MIN_LENGTH = CTI_IND1_LENGTH,6358,279118
    CTI_MAX_LENGTH 6359,279156
    CTI_MAX_LENGTH = CTI_FAR_ABS_LENGTH,6359,279156
gbop_is_after_cti(6365,279305
check_exempt_gbop_addr(6510,285174
gbop_check_valid_caller(6558,287442
gbop_validate_and_act(6828,300350
gbop_init(6922,304619
gbop_exit(6956,305838

win32/aslr.h,8020
#define ASLR_H42,1878
    ASLR_DISABLED 48,1956
    ASLR_DISABLED          = 0x00,x0048,1956
    ASLR_DLL 51,2041
    ASLR_DLL               = 0x01,x0151,2041
    ASLR_STACK 52,2113
    ASLR_STACK             = 0x02,x0252,2113
    ASLR_HEAP 55,2264
    ASLR_HEAP              = 0x04,x0455,2264
    ASLR_MAPPED 56,2343
    ASLR_MAPPED            = 0x08,x0856,2343
    ASLR_EXECUTABLE 57,2416
    ASLR_EXECUTABLE        = 0x10,x1057,2416
    ASLR_PROCESS_PARAM 59,2492
    ASLR_PROCESS_PARAM     = 0x20,x2059,2492
    ASLR_HEAP_FILL 67,2863
    ASLR_HEAP_FILL         = 0x40,x4067,2863
    ASLR_TEB 68,2947
    ASLR_TEB               = 0x80,x8068,2947
    ASLR_RANGE_BOTTOM_UP 89,3987
    ASLR_RANGE_BOTTOM_UP   = 0x00100,x0010089,3987
    ASLR_RANGE_TOP_DOWN 90,4059
    ASLR_RANGE_TOP_DOWN    = 0x00200,x0020090,4059
    ASLR_RANGE_RANDOM 93,4256
    ASLR_RANGE_RANDOM      = 0x00400,x0040093,4256
    ASLR_SHARE_DR_DLL 99,4597
    ASLR_SHARE_DR_DLL      = 0x10000000,x1000000099,4597
    ASLR_CLIENT_DEFAULT 105,4903
    ASLR_CLIENT_DEFAULT = ASLR_DLL 105,4903
    ASLR_CLIENT_DEFAULT = ASLR_DLL | ASLR_STACK 105,4903
    ASLR_CLIENT_DEFAULT = ASLR_DLL | ASLR_STACK | ASLR_HEAP,105,4903
} aslr_option_t;106,4974
    ASLR_PROCESS_PRIVATE 116,5307
    ASLR_PROCESS_PRIVATE           = 0x1,x1116,5307
    ASLR_SHARED_PER_USER 118,5389
    ASLR_SHARED_PER_USER           = 0x2,x2118,5389
    ASLR_SHARED_INHERIT 128,5877
    ASLR_SHARED_INHERIT            = 0x4,x4128,5877
    ASLR_SHARED_IN_SESSION 146,6639
    ASLR_SHARED_IN_SESSION         = 0x8,x8146,6639
    ASLR_SHARED_CONTENTS 160,7414
    ASLR_SHARED_CONTENTS           = 0x10,x10160,7414
    ASLR_SHARED_PUBLISHER 167,7698
    ASLR_SHARED_PUBLISHER          = 0x20,x20167,7698
    ASLR_SHARED_SUBSCRIBER 173,7942
    ASLR_SHARED_SUBSCRIBER         = 0x40,x40173,7942
    ASLR_SHARED_ANONYMOUS_CONSUMER 180,8212
    ASLR_SHARED_ANONYMOUS_CONSUMER = 0x80,x80180,8212
    ASLR_SHARED_FILE_PRODUCER 193,8808
    ASLR_SHARED_FILE_PRODUCER      = 0x100,x100193,8808
    ASLR_SHARED_WORKLIST 203,9210
    ASLR_SHARED_WORKLIST           = 0x200,x200203,9210
    ASLR_SHARED_INITIALIZE 209,9430
    ASLR_SHARED_INITIALIZE         = 0x1000,x1000209,9430
    ASLR_SHARED_INITIALIZE_NONPERMANENT 221,10069
    ASLR_SHARED_INITIALIZE_NONPERMANENT = 0x2000,x2000221,10069
    ASLR_PERSISTENT 228,10395
    ASLR_PERSISTENT                = 0x100000,x100000228,10395
    ASLR_ALLOW_ORIGINAL_CLOBBER 235,10697
    ASLR_ALLOW_ORIGINAL_CLOBBER  = 0x1000000,x1000000235,10697
    ASLR_RANDOMIZE_EXECUTABLE 247,11331
    ASLR_RANDOMIZE_EXECUTABLE    = 0x2000000,x2000000247,11331
    ASLR_AVOID_NET20_NATIVE_IMAGES 260,11964
    ASLR_AVOID_NET20_NATIVE_IMAGES = 0x4000000,x4000000260,11964
    ASLR_CACHE_DEFAULT 263,12072
    ASLR_CACHE_DEFAULT = ASLR_SHARED_PER_USER 263,12072
                         ASLR_SHARED_CONTENTS 264,12131
               ASLR_SHARED_ANONYMOUS_CONSUMER 265,12190
                     ASLR_SHARED_FILE_PRODUCER 266,12249
} aslr_cache_t;267,12308
    ASLR_CACHE_LIST_DEFAULT,272,12453
    ASLR_CACHE_LIST_INCLUDE,273,12482
    ASLR_CACHE_LIST_EXCLUDE 274,12545
} aslr_cache_list_t;278,12722
    ASLR_PERSISTENT_LAX 290,13212
    ASLR_PERSISTENT_LAX           = 0x0,x0290,13212
    ASLR_PERSISTENT_PARANOID 296,13392
    ASLR_PERSISTENT_PARANOID      = 0x1,x1296,13392
    ASLR_PERSISTENT_SOURCE_DIGEST 302,13602
    ASLR_PERSISTENT_SOURCE_DIGEST = 0x2,x2302,13602
    ASLR_PERSISTENT_TARGET_DIGEST 307,13790
    ASLR_PERSISTENT_TARGET_DIGEST = 0x4,x4307,13790
    ASLR_PERSISTENT_MODIFIED_TIME 323,14620
    ASLR_PERSISTENT_MODIFIED_TIME = 0x8,x8323,14620
    ASLR_PERSISTENT_NOTOWNER_PARANOIA 336,15237
    ASLR_PERSISTENT_NOTOWNER_PARANOIA = 0x10,x10336,15237
    ASLR_PERSISTENT_SHORT_DIGESTS 344,15602
    ASLR_PERSISTENT_SHORT_DIGESTS     = 0x20,x20344,15602
    ASLR_PERSISTENT_PARANOID_TRANSFORM_EXPLICITLY 352,15951
    ASLR_PERSISTENT_PARANOID_TRANSFORM_EXPLICITLY = 0x10000,x10000352,15951
    ASLR_PERSISTENT_PARANOID_PREFIX 362,16468
    ASLR_PERSISTENT_PARANOID_PREFIX = 0x20000,x20000362,16468
} aslr_consistency_check_t;375,17079
    ASLR_NO_ACTION 380,17158
    ASLR_NO_ACTION      = 0x0,x0380,17158
    ASLR_TRACK_AREAS 383,17269
    ASLR_TRACK_AREAS    = 0x1,x1383,17269
    ASLR_AVOID_AREAS 384,17338
    ASLR_AVOID_AREAS    = 0x2,x2384,17338
    ASLR_RESERVE_AREAS 385,17408
    ASLR_RESERVE_AREAS  = 0x4,x4385,17408
    ASLR_DETECT_EXECUTE 394,17759
    ASLR_DETECT_EXECUTE = 0x10,x10394,17759
    ASLR_DETECT_READ 397,17926
    ASLR_DETECT_READ    = 0x20,x20397,17926
    ASLR_DETECT_WRITE 398,17968
    ASLR_DETECT_WRITE   = 0x40,x40398,17968
    ASLR_REPORT 401,18046
    ASLR_REPORT         = 0x100,x100401,18046
    ASLR_HANDLING 407,18270
    ASLR_HANDLING =     0x1000,x1000407,18270
    ASLR_NORMALIZE_ID 411,18466
    ASLR_NORMALIZE_ID = 0x10000,x10000411,18466
} aslr_action_t;414,18673
    ASLR_INTERNAL_DEFAULT 418,18762
    ASLR_INTERNAL_DEFAULT       = 0x0000,x0000418,18762
    ASLR_INTERNAL_SAME_STRESS 422,18968
    ASLR_INTERNAL_SAME_STRESS   = 0x1000,x1000422,18968
    ASLR_INTERNAL_RANGE_NONE 425,19086
    ASLR_INTERNAL_RANGE_NONE    = 0x2000,x2000425,19086
    ASLR_INTERNAL_SHARED_NONUNIQUE 427,19130
    ASLR_INTERNAL_SHARED_NONUNIQUE = 0x800000,x800000427,19130
    ASLR_INTERNAL_SHARED_APPFILE 430,19218
    ASLR_INTERNAL_SHARED_APPFILE = 0x1000000,x1000000430,19218
    ASLR_INTERNAL_SHARED_AND_PRIVATE 433,19328
    ASLR_INTERNAL_SHARED_AND_PRIVATE = 0x2000000,x2000000433,19328
} aslr_internal_option_t;439,19577
    bool           sys_aslr_clobbered;442,19621
    HANDLE randomized_section_handle;450,20010
    app_pc original_section_base;451,20079
    uint   original_section_timestamp;452,20141
    uint   original_section_checksum;453,20202
    HANDLE original_image_section_handle;454,20262
    HANDLE last_app_section_handle;460,20529
    process_id_t last_child_padded;470,21077
} aslr_syscall_context_t;471,21123
#define ASLR_INVALID_SECTION_BASE 473,21150
#define MAX_PUBLISHED_SECTION_NAME 476,21263
aslr_timestamp_transformation(522,22957
    GBOP_DISABLED 546,23807
    GBOP_DISABLED          = 0x0,x0546,23807
    GBOP_IS_EXECUTABLE 557,24262
    GBOP_IS_EXECUTABLE     = 0x1,x1557,24262
    GBOP_IS_X 558,24337
    GBOP_IS_X              = 0x2,x2558,24337
    GBOP_IS_IMAGE 559,24421
    GBOP_IS_IMAGE          = 0x4,x4559,24421
    GBOP_IS_NOT_STACK 566,24748
    GBOP_IS_NOT_STACK      = 0x8,x8566,24748
    GBOP_CHECK_INSTR_TYPE 578,25227
    GBOP_CHECK_INSTR_TYPE  = 0x10,x10578,25227
    GBOP_IS_CALL 579,25318
    GBOP_IS_CALL           = 0x20,x20579,25318
    GBOP_IS_JMP 580,25402
    GBOP_IS_JMP            = 0x40,x40580,25402
    GBOP_IS_HOTPATCH_JMP 581,25492
    GBOP_IS_HOTPATCH_JMP   = 0x80,x80581,25492
    GBOP_EMULATE_SOURCE 595,26163
    GBOP_EMULATE_SOURCE   = 0x100,x100595,26163
    GBOP_IS_RET_TO_ENTRY 611,26961
    GBOP_IS_RET_TO_ENTRY  = 0x00200,x00200611,26961
    GBOP_IS_DGC 631,27923
    GBOP_IS_DGC           = 0x02000,x02000631,27923
    GBOP_IS_FUTURE_EXEC 642,28585
    GBOP_IS_FUTURE_EXEC   = 0x04000,x04000642,28585
    GBOP_DIAGNOSE_SOURCE 647,28713
    GBOP_DIAGNOSE_SOURCE  = 0x10000,x10000647,28713
    GBOP_CLIENT_DEFAULT 659,29246
    GBOP_CLIENT_DEFAULT = GBOP_IS_DGC 659,29246
    GBOP_CLIENT_DEFAULT = GBOP_IS_DGC | GBOP_IS_FUTURE_EXEC 659,29246
                          GBOP_CHECK_INSTR_TYPE 660,29331
                          GBOP_CHECK_INSTR_TYPE | GBOP_IS_CALL 660,29331
                          GBOP_IS_EXECUTABLE 661,29415
                          GBOP_IS_EXECUTABLE | GBOP_IS_X 661,29415
                          GBOP_IS_EXECUTABLE | GBOP_IS_X | GBOP_IS_IMAGE 661,29415
    const char *mod_name;mod_name667,29549
    const char *func_name;func_name668,29575
} gbop_hook_desc_t;669,29602

win32/callback.c,6037
static LPTOP_LEVEL_EXCEPTION_FILTER app_top_handler;82,3121
ALIGN_VAR(92,3558
#define CURRENTLY_UNKNOWN 129,4852
#define INTERCEPT_POINT(132,4926
#undef INTERCEPT_POINT136,5052
typedef struct _intercept_map_elem_t 140,5158
    byte *interception_pc;interception_pc141,5197
    app_pc original_app_pc;142,5224
    size_t displace_length;143,5252
    size_t orig_length;144,5304
    struct _intercept_map_elem_t *next;next145,5328
} intercept_map_elem_t;146,5368
typedef struct _intercept_map_t 148,5393
    intercept_map_elem_t *head;head149,5427
    intercept_map_elem_t *tail;tail150,5459
} intercept_map_t;151,5491
static intercept_map_t *intercept_map;intercept_map153,5511
static byte *LdrInitializeThunk LdrInitializeThunk172,6273
static byte *RtlUserThreadStart RtlUserThreadStart179,6779
static byte *KiFastSystemCall KiFastSystemCall183,6911
get_setcontext_interceptor(187,6978
set_asynch_interception(194,7116
intercept_asynch_global(205,7448
intercept_asynch_common(212,7623
intercept_asynch_for_thread(244,8840
intercept_asynch_for_self(254,9163
#define APP 543,20103
insert_let_go_cleanup(547,20219
#define JMP_SIZE 702,27947
emit_landing_pad_code(704,28028
finalize_landing_pad_code(767,30183
copy_app_code(796,31698
emit_intercept_code(865,34883
# define STACK_ALIGNMENT 1174,49898
#undef APP1347,57624
map_intercept_pc_to_app_pc(1350,57648
unmap_intercept_pc(1377,58426
free_intercept_list(1413,59508
get_app_pc_from_intercept_pc(1440,60543
is_intercepted_app_pc(1462,61172
emit_resume_jmp(1499,62611
intercept_call(1568,65960
un_intercept_call(1773,74455
clean_syscall_wrapper(1829,76694
#define APP(1891,79182
#undef APP1963,82753
syscall_wrapper_ilist(2083,88664
#           define CHROME_HOOK_DISTANCE_JMP_TO_SKIP 2366,102714
intercept_syscall_wrapper(2453,106359
insert_trampoline(2593,112197
remove_trampoline(2627,113748
is_in_interception_buffer(2633,113843
is_part_of_interception(2640,113990
is_on_interception_initial_route(2647,114141
is_syscall_trampoline(2665,114681
make_writable_incr(2711,116186
make_inaccessible(2728,116634
wipe_out_ntdll(2745,117063
asynch_retakeover_if_native(2795,118650
asynch_take_over(2816,119510
possible_new_thread_wait_for_dr_init(2855,121117
intercept_new_thread(2878,122009
#define BASE_THREAD_START_THUNK_USHORT 3032,129414
#define LDR_INIT_CXT_XSP_OFFSET 3159,136428
intercept_ldr_init(3162,136538
#define APC_CONTEXT_XSP_OFFS 3291,142032
#define APC_TARGET_XSP_OFFS 3292,142082
intercept_apc(3298,142404
check_apc_context_offset(3504,153206
intercept_nt_continue(3570,156169
intercept_nt_setcontext(3673,161528
our_top_handler(3745,164665
transfer_to_fcache_return(3756,164978
    MOD_CODE_TAKEOVER 3785,166024
    MOD_CODE_TAKEOVER      = 0x01,x013785,166024
    MOD_CODE_EMULATE_WRITE 3786,166059
    MOD_CODE_EMULATE_WRITE = 0x02,x023786,166059
    MOD_CODE_APP_CXT 3787,166094
    MOD_CODE_APP_CXT       = 0x04,x043787,166094
found_modified_code(3799,166591
is_dstack_overflow(4025,177443
check_for_modified_code(4052,178633
get_exception_list(4177,184716
exception_frame_chain_depth(4197,185493
dump_context_info(4264,188478
#define DUMP(4266,188539
#define DUMPNM(4267,188606
#define NEWLINE 4268,188679
#undef DUMP4356,191111
#undef DUMPNM4357,191123
#undef NEWLINE4358,191137
exception_access_violation_type(4362,191175
dump_exception_info(4375,191521
dump_exception_frames(4394,192285
typedef struct scopetable_entry_t 4436,193809
    DWORD previousTryLevel;4437,193845
    PVOID lpfnFilter;4438,193873
    PVOID lpfnHandler;4439,193895
} scopetable_entry_t;4440,193918
typedef struct _vc_exception_registration_t4443,193996
    EXCEPTION_REGISTRATION   exception_base;4445,194042
    struct scopetable_entry_t *scopetable;scopetable4446,194087
    int                      trylevel;4447,194130
    int                      _ebp;4448,194169
} vc_exception_registration_t;4449,194204
void dump_vc_exception_frame(4456,194454
report_app_exception(4473,195062
report_internal_exception(4488,195782
internal_exception_info(4569,199615
internal_dynamo_exception(4578,199973
is_execution_exception(4610,201166
client_exception_event(4668,203320
check_internal_exception(4744,206833
intercept_exception(4927,216314
intercept_raise_exception(5573,249411
initialize_exception_record(5604,250545
os_forge_exception(5652,252528
intercept_callback_start(5808,260474
callback_setup(5992,269432
callback_start_return(6138,275386
get_prev_swapped_dcontext(6296,282559
get_pc_after_call(6319,283314
intercept_load_dll(6395,286515
intercept_unload_dll(6522,292843
#       define HACK_EXE_NAME 6550,294137
#       define L_PIN_DLL_NAME 6551,294194
retakeover_after_native(6635,298099
remove_image_entry_trampoline(6749,303478
take_over_primary_thread(6769,304400
intercept_image_entry(6840,307474
insert_image_entry_trampoline(7001,315384
callback_interception_init_start(7094,319908
callback_interception_init_finish(7260,327537
callback_interception_unintercept(7444,335879
callback_interception_exit(7482,337421
swap_dcontexts(7497,337925
at_initial_stack_bottom(7545,340225
at_xdata_rct_exception(7608,343091
at_driver_rct_exception(7626,343729
at_fiber_init_known_exception(7714,347817
            SUB_RSP_LENGTH 7736,348736
            FIBER_SEH_LENGTH 7737,348768
    MAX_SEH_TRYLEVEL 7805,351659
    INSTR_PUSH_IMMED32_LENGTH 7806,351685
    INSTR_PUSH_IMMED32_OPCODE 7807,351720
    INSTR_PUSH_IMMED32_OPCODE = 0x68,x687807,351720
at_SEH_rct_exception(7850,353246
bool seen_Borland_SEH 7904,355723
at_Borland_SEH_rct_exemption(7924,356947
at_rct_exempt_module(7976,359643
at_known_exception(8074,364630
callback_init(8133,366752
callback_exit(8138,366778
get_drmarker(8149,366997
hook_text(8159,367229
unhook_text(8199,368974
insert_jmp_at_tramp_entry(8206,369169
get_segment_base(8223,369680
get_app_segment_base(8237,370020
thread_attach_takeover_callee(8244,370170
emit_takeover_code(8255,370461

win32/diagnost.c,1178
static const char * const separator 63,2939
static const wchar_t * const HKLM_entries[HKLM_entries71,3321
static const wchar_t * const HKCU_entries[HKCU_entries101,5548
diagnostics_log_data(120,6559
open_diagnostics_file(175,9025
#define PRINT_MEM_BUF_BYTE 182,9243
#define PRINT_MEM_BUF_START 184,9321
#define PRINT_MEM_BUF_NO_ALIGN 187,9453
#define PRINT_MEM_BUF_ASCII 190,9559
print_memory_buffer(196,9855
report_addr_info(237,11445
report_src_info(274,13012
report_target_info(333,15397
report_preferred_target_info(347,15939
report_vm_counters(364,16497
report_dcontext_info(390,17473
report_internal_data_structures(448,19917
report_ntdll_info(547,24051
report_thread(598,26241
report_current_process(615,26927
get_system_processes(833,36831
report_processes(865,38101
report_registry_settings(936,40942
report_registry_settings_helper(955,41743
report_autostart_programs(1058,46469
report_intro(1104,48155
report_processor_info(1142,49588
report_system_diagnostics(1182,50962
add_diagnostics_xml_header(1370,60694
report_diagnostics_common(1386,61493
report_diagnostics(1463,65113
append_diagnostics(1502,66425
diagnost_exit(1516,66948

win32/diagnost.h,2530
#define _DIAGNOST_H_ 40,1807
#define DIAGNOSTICS_LOGDIR_KEY 43,1902
#define DIAGNOSTICS_FILE_XML_EXTENSION 44,1953
#define DIAGNOSTICS_XML_FILE_VERSION 45,1999
#define DIAGNOSTICS_NTDLL_DLL_LOCATION 46,2042
#define DIAGNOSTICS_HARDWARE_REG_KEY 47,2104
#define DIAGNOSTICS_CONTROL_REG_KEY 48,2197
#define DIAGNOSTICS_TEST_REG_KEY 49,2292
#define DIAGNOSTICS_OS_REG_KEY 50,2358
#define DIAGNOSTICS_OS_HOTFIX_REG_KEY 51,2461
#define DIAGNOSTICS_BIOS_REG_KEY 52,2581
#define DIAGNOSTICS_SYSTEMROOT_REG_KEY 53,2668
#define DIAGNOSTICS_DESCRIPTION_KEY 54,2721
#define DIAGNOSTICS_MANUFACTURER_KEY 55,2771
#define DIAGNOSTICS_FRIENDLYNAME_KEY 56,2815
#define DIAGNOSTICS_MAX_REG_KEYS 58,2869
#define DIAGNOSTICS_MAX_REG_VALUES 59,2959
#define DIAGNOSTICS_MAX_RECURSION_LEVEL 60,3049
#define DIAGNOSTICS_MAX_NAME_AND_DATA_SIZE 61,3143
#define DIAGNOSTICS_MAX_KEY_NAME_SIZE 62,3233
#define DIAGNOSTICS_MAX_LOG_BUFFER_SIZE 63,3319
#define DIAGNOSTICS_MAX_LOG_FILES 64,3364
#define DIAGNOSTICS_MINI_DUMP_SIZE 65,3438
#define DIAGNOSTICS_REG_NAME 67,3536
#define DIAGNOSTICS_REG_DATA 68,3610
#define DIAGNOSTICS_REG_HARDWARE 69,3684
#define DIAGNOSTICS_REG_ALLKEYS 70,3766
#define DIAGNOSTICS_REG_ALLSUBKEYS 71,3843
#define DIAGNOSTICS_INITIAL_PROCESS_TOTAL 72,3934
#define DIAGNOSTICS_BYTES_PER_LINE 74,3980
#define DECREMENT_FOR_DATA_OFFSET 80,4367
typedef struct _DIAGNOSTICS_INFORMATION 82,4461
    SYSTEM_BASIC_INFORMATION sbasic_info;83,4503
    SYSTEM_PROCESSOR_INFORMATION sproc_info;84,4545
    SYSTEM_PERFORMANCE_INFORMATION sperf_info;85,4590
    SYSTEM_TIME_OF_DAY_INFORMATION stime_info;86,4637
    SYSTEM_PROCESSOR_TIMES sptime_info;87,4684
    SYSTEM_GLOBAL_FLAG global_flag;88,4724
} DIAGNOSTICS_INFORMATION, *PDIAGNOSTICS_INFORMATION;PDIAGNOSTICS_INFORMATION89,4760
typedef struct _DIAGNOSTICS_KEY_VALUE_FULL_INFORMATION 100,5452
    ULONG   TitleIndex;101,5509
    ULONG   Type;102,5533
    ULONG   DataOffset;103,5551
    ULONG   DataLength;104,5575
    ULONG   NameLength;105,5599
    BYTE    NameAndData[NameAndData106,5660
} DIAGNOSTICS_KEY_VALUE_FULL_INFORMATION, *PDIAGNOSTICS_KEY_VALUE_FULL_INFORMATION;PDIAGNOSTICS_KEY_VALUE_FULL_INFORMATION107,5721
typedef struct _DIAGNOSTICS_KEY_NAME_INFORMATION 110,5861
    LARGE_INTEGER   LastWriteTime;111,5912
    ULONG   TitleIndex;112,5947
    ULONG   NameLength;113,5971
    WCHAR   Name[Name114,6032
} DIAGNOSTICS_KEY_NAME_INFORMATION, *PDIAGNOSTICS_KEY_NAME_INFORMATION;PDIAGNOSTICS_KEY_NAME_INFORMATION115,6088

win32/drmarker.c,757
# define WIN32_LEAN_AND_MEAN51,2191
# define READ_FUNC 60,2438
# define DR_MARKER_VERSION_CURRENT 61,2480
typedef unsigned char byte;68,2962
# define PAGE_START(70,2998
# define PAGE_SIZE 71,3060
# define READ_FUNC 72,3088
#define OP_jmp_byte 75,3133
is_wow64_process(80,3228
    typedef DWORD (WINAPI 83,3313
read_and_verify_dr_marker_common(109,4189
read_and_verify_dr_marker_64(173,6476
read_and_verify_dr_marker(180,6626
#define DR_MARKER_MAGIC1 190,7110
#define DR_MARKER_MAGIC2 191,7146
#define DR_MARKER_MAGIC3 192,7182
#define DR_MARKER_MAGIC4 193,7218
dr_marker_verify(196,7260
dr_marker_magic_init(208,7695
init_dr_marker(227,8352
get_drmarker_hotp_policy_status_table(259,9494
set_drmarker_hotp_policy_status_table(272,9790

win32/drmarker.h,1566
#define _DRMARKER_H_44,1979
#define L_DR_MARKER_HOOKED_DLL 52,2042
# define DR_MARKER_HOOKED_DLL 54,2101
# define DR_MARKER_HOOKED_DLL 56,2160
#define DR_MARKER_HOOKED_FUNCTION 59,2210
#define DR_MARKER_HOOKED_FUNCTION_ARGS 60,2269
#define DR_MARKER_HOOKED_FUNCTION_STRING 62,2408
    DR_MARKER_RELEASE_BUILD 65,2494
    DR_MARKER_RELEASE_BUILD  = 0x1,x165,2494
    DR_MARKER_DEBUG_BUILD 66,2530
    DR_MARKER_DEBUG_BUILD    = 0x2,x266,2530
    DR_MARKER_PROFILE_BUILD 67,2566
    DR_MARKER_PROFILE_BUILD  = 0x4,x467,2566
    DR_MARKER_BUILD_TYPES 68,2602
        DR_MARKER_RELEASE_BUILD|DR_MARKER_RELEASE_BUILD69,2634
        DR_MARKER_RELEASE_BUILD|DR_MARKER_DEBUG_BUILD|DR_MARKER_DEBUG_BUILD69,2634
        DR_MARKER_RELEASE_BUILD|DR_MARKER_DEBUG_BUILD|DR_MARKER_PROFILE_BUILDDR_MARKER_PROFILE_BUILD69,2634
#define DR_MARKER_VERSION_1 72,2716
#define DR_MARKER_VERSION_2 73,2746
#define WINDBG_CMD_MAX_LEN 75,2777
typedef struct _dr_marker_t 85,3268
    uint magic1;86,3298
    uint magic2;87,3315
    uint magic3;88,3332
    uint magic4;89,3349
    uint flags;90,3366
    uint build_num;91,3382
    uint dr_marker_version;92,3402
    void *dr_base_addr;dr_base_addr93,3466
    void *dr_generic_nudge_target;dr_generic_nudge_target94,3490
    void *dr_hotp_policy_status_table;dr_hotp_policy_status_table95,3525
    struct _dr_statistics_t *stats;stats96,3564
    char windbg_cmds[windbg_cmds100,3735
} dr_marker_t;104,3900
    DR_MARKER_FOUND 107,3923
    DR_MARKER_NOT_FOUND 108,3966
    DR_MARKER_ERROR 109,4009

win32/drwinapi/advapi32_redir.c,690
#define MAX_REG_KEY_NAME_LEN 45,1933
static strhash_table_t *advapi32_table;advapi32_table48,2067
static const redirect_import_t redirect_advapi32[redirect_advapi3250,2108
#define REDIRECT_ADVAPI32_NUM 57,2525
advapi32_redir_init(60,2618
advapi32_redir_exit(78,3330
advapi32_redir_onload(84,3425
advapi32_redir_lookup(90,3497
redirect_RegCloseKey(102,3754
redirect_RegOpenKeyExA(113,3901
open_key_common(136,4555
key_is_special(149,4961
special_to_handle(158,5237
key_close_special(201,7010
redirect_RegOpenKeyExW(209,7160
redirect_RegQueryValueExA(251,8527
redirect_RegQueryValueExW(298,10320
unit_test_drwinapi_advapi32(371,12754
#   define REG_KEY_DATA_SZ 377,12925

win32/drwinapi/advapi32_redir.h,102
#define _ADVAPI32_REDIR_H_ 39,1837
# define __out_data_source(61,2200
typedef LONG LSTATUS;66,2302

win32/drwinapi/drwinapi.c,293
drwinapi_init(47,2032
drwinapi_exit(56,2165
drwinapi_onload(65,2298
drwinapi_redirect_imports(76,2612
ntstatus_to_last_error(118,4574
redirect_ignore_arg0(168,7563
redirect_ignore_arg4(174,7624
redirect_ignore_arg8(180,7691
redirect_ignore_arg12(186,7770
unit_test_drwinapi(201,8186

win32/drwinapi/drwinapi.h,30
#define _DRWINAPI_H_ 39,1891

win32/drwinapi/drwinapi_private.h,170
#define _DRWINAPI_PRIVATE_H_ 36,1796
typedef struct _redirect_import_t 45,2162
    const char *name;name46,2198
    app_pc func;47,2220
} redirect_import_t;48,2237

win32/drwinapi/kernel32_file.c,2711
static HANDLE base_named_obj_dir;44,2059
static HANDLE base_named_pipe_dir;45,2093
get_base_named_obj_dir_name(49,2214
kernel32_redir_init_file(97,4239
kernel32_redir_exit_file(114,4852
kernel32_redir_onload_file(121,4983
init_object_attr_for_files(128,5187
largeint_to_filetime(145,5958
create_dir_common(158,6261
redirect_CreateDirectoryA(195,7409
redirect_CreateDirectoryW(212,7870
redirect_RemoveDirectoryA(237,8576
redirect_RemoveDirectoryW(249,8821
redirect_GetCurrentDirectoryA(261,9068
redirect_GetCurrentDirectoryW(287,9857
redirect_SetCurrentDirectoryA(321,11060
redirect_SetCurrentDirectoryW(335,11369
file_create_disp_winapi_to_nt(357,12003
file_options_to_nt(371,12415
file_access_to_nt(409,13769
create_file_common(425,14230
redirect_CreateFileA(520,17798
redirect_CreateFileW(543,18563
redirect_DeleteFileA(575,19601
redirect_DeleteFileW(597,20114
redirect_ReadFile(625,20843
redirect_WriteFile(684,22794
redirect_GetFileAttributesA(749,24958
redirect_GetFileAttributesW(770,25473
redirect_GetFileInformationByHandle(805,26439
redirect_GetFileSize(862,28572
redirect_GetFileType(881,29079
redirect_CreateFileMappingA(932,30385
redirect_CreateFileMappingW(958,31197
redirect_MapViewOfFile(1021,33527
redirect_MapViewOfFileEx(1036,33955
redirect_UnmapViewOfFile(1083,35619
redirect_FlushViewOfFile(1097,35914
redirect_CreatePipe(1126,36689
redirect_DeviceIoControl(1213,40170
redirect_GetDiskFreeSpaceA(1280,42514
open_dir_from_path(1309,43481
redirect_GetDiskFreeSpaceW(1362,45150
redirect_GetDriveTypeA(1400,46269
redirect_GetDriveTypeW(1421,46766
redirect_CloseHandle(1470,48043
redirect_DuplicateHandle(1479,48153
redirect_GetStdHandle(1500,48924
redirect_FileTimeToLocalFileTime(1519,49366
redirect_LocalFileTimeToFileTime(1546,50233
redirect_FileTimeToSystemTime(1569,50905
redirect_SystemTimeToFileTime(1581,51194
redirect_GetSystemTimeAsFileTime(1595,51512
redirect_GetFileTime(1606,51724
redirect_SetFileTime(1635,52507
#define FIND_FILE_INFO_SZ 1674,53829
redirect_FindClose(1679,53937
find_next_file_common(1691,54271
find_first_file_common(1745,56445
find_nt_to_win32A(1815,59345
find_nt_to_win32W(1851,61003
redirect_FindFirstFileA(1882,62354
redirect_FindFirstFileW(1907,63187
redirect_FindNextFileA(1938,64191
redirect_FindNextFileW(1952,64647
redirect_FlushFileBuffers(1967,65128
test_directories(1991,65582
test_files(2027,66793
test_file_mapping(2145,71306
test_pipe(2206,73660
test_DeviceIoControl(2238,74623
within_one(2283,76168
test_file_times(2290,76285
test_find_file(2360,79044
test_file_paths(2456,83343
test_drive(2511,85818
test_handles(2561,88309
unit_test_drwinapi_kernel32_file(2574,88601

win32/drwinapi/kernel32_lib.c,279
kernel32_redir_onload_lib(50,2367
redirect_GetModuleHandleA(69,3316
redirect_GetModuleHandleW(88,3848
redirect_GetProcAddress(111,4564
redirect_LoadLibraryA(135,5485
redirect_LoadLibraryW(156,6342
redirect_GetModuleFileNameA(174,6908
redirect_GetModuleFileNameW(200,7698

win32/drwinapi/kernel32_mem.c,1278
static ptr_uint_t magic_val;46,2107
kernel32_redir_init_mem(55,2381
kernel32_redir_exit_mem(61,2482
redirect_DecodePointer(68,2563
redirect_EncodePointer 77,2684
redirect_GetProcessHeap(86,2807
__bcount(98,3133
redirect_HeapCompact(112,3343
redirect_HeapCreate(127,3727
redirect_HeapDestroy(140,4084
redirect_HeapFree(149,4194
__bcount(158,4358
redirect_HeapSetInformation 173,4612
redirect_HeapSize(196,5332
redirect_HeapValidate(207,5508
redirect_HeapWalk(218,5704
typedef struct _local_header_t 247,6818
    ushort lock_count;248,6851
    ushort flags;249,6874
    struct _local_header_t *alloc;alloc250,6892
} local_header_t;251,6927
local_header_from_handle(254,6977
redirect_LocalAlloc(261,7079
redirect_LocalFree(299,8214
redirect_LocalReAlloc(318,8752
redirect_LocalLock(393,11755
redirect_LocalHandle(413,12162
redirect_LocalUnlock(428,12463
redirect_LocalSize(452,12974
redirect_LocalFlags(475,13572
redirect_IsBadReadPtr(500,14254
redirect_ReadProcessMemory(512,14461
__bcount(532,15093
redirect_VirtualFree(568,16268
redirect_VirtualProtect(593,16817
redirect_VirtualQuery(626,18003
redirect_VirtualQueryEx(637,18275
test_heap(658,18808
test_local(683,19560
test_syscalls(755,22107
unit_test_drwinapi_kernel32_mem(782,23034

win32/drwinapi/kernel32_misc.c,104
redirect_GetLastError(40,1859
redirect_SetLastError(49,1943
unit_test_drwinapi_kernel32_misc(67,2252

win32/drwinapi/kernel32_proc.c,570
typedef struct _fls_cb_t 45,2117
    PFLS_CALLBACK_FUNCTION cb;46,2144
    struct _fls_cb_t *next;next47,2175
} fls_cb_t;48,2203
static fls_cb_t *fls_cb_list;fls_cb_list50,2216
kernel32_redir_init_proc(55,2415
kernel32_redir_exit_proc(65,2688
kernel32_redir_onload_proc(78,3034
redirect_GetCurrentProcess(90,3321
redirect_GetCurrentProcessId(99,3413
redirect_ExitProcess(109,3530
redirect_GetCurrentThread(128,3950
redirect_GetCurrentThreadId(137,4040
kernel32_redir_fls_cb(149,4219
redirect_FlsAlloc(198,6159
unit_test_drwinapi_kernel32_proc(238,7601

win32/drwinapi/kernel32_redir.c,308
static strhash_table_t *kernel32_table;kernel32_table46,2052
static const redirect_import_t redirect_kernel32[redirect_kernel3248,2093
#define REDIRECT_KERNEL32_NUM 171,10228
kernel32_redir_init(174,10321
kernel32_redir_exit(196,11129
kernel32_redir_onload(206,11320
kernel32_redir_lookup(227,11912

win32/drwinapi/kernel32_redir.h,3425
#define _KERNEL32_REDIR_H_ 40,1922
#define _WIN32_WINNT 46,2035
#define WIN32_LEAN_AND_MEAN 47,2099
#undef _WIN32_WINNT49,2150
#undef WIN32_LEAN_AND_MEAN50,2170
# define __drv_interlocked 60,2391
    HeapEnableTerminationOnCorruption 65,2482
typedef struct _CONSOLE_READCONSOLE_CONTROL 69,2544
    ULONG nLength;70,2590
    ULONG nInitialChars;71,2609
    ULONG dwCtrlWakeupMask;72,2634
    ULONG dwControlKeyState;73,2662
} CONSOLE_READCONSOLE_CONTROL, *PCONSOLE_READCONSOLE_CONTROL;PCONSOLE_READCONSOLE_CONTROL74,2691
typedef enum _FILE_INFO_BY_HANDLE_CLASS 77,2770
    FileBasicInfo,78,2812
    FileStandardInfo,79,2831
    FileNameInfo,80,2853
    FileRenameInfo,81,2871
    FileDispositionInfo,82,2891
    FileAllocationInfo,83,2916
    FileEndOfFileInfo,84,2940
    FileStreamInfo,85,2963
    FileCompressionInfo,86,2983
    FileAttributeTagInfo,87,3008
    FileIdBothDirectoryInfo,88,3034
    FileIdBothDirectoryRestartInfo,89,3063
    FileIoPriorityHintInfo,90,3099
    FileRemoteProtocolInfo,91,3127
    MaximumFileInfoByHandleClass92,3155
} FILE_INFO_BY_HANDLE_CLASS, *PFILE_INFO_BY_HANDLE_CLASS;PFILE_INFO_BY_HANDLE_CLASS93,3188
#define UNWIND_HISTORY_TABLE_SIZE 97,3310
typedef struct _UNWIND_HISTORY_TABLE_ENTRY 99,3348
    DWORD64 ImageBase;100,3393
    PRUNTIME_FUNCTION FunctionEntry;101,3416
} UNWIND_HISTORY_TABLE_ENTRY, *PUNWIND_HISTORY_TABLE_ENTRY;PUNWIND_HISTORY_TABLE_ENTRY102,3453
typedef struct _UNWIND_HISTORY_TABLE 104,3514
    DWORD Count;105,3553
    BYTE  LocalHint;106,3570
    BYTE  GlobalHint;107,3591
    BYTE  Search;108,3613
    BYTE  Once;109,3631
    DWORD64 LowAddress;110,3647
    DWORD64 HighAddress;111,3671
    UNWIND_HISTORY_TABLE_ENTRY Entry[Entry112,3696
} UNWIND_HISTORY_TABLE, *PUNWIND_HISTORY_TABLE;PUNWIND_HISTORY_TABLE113,3761
typedef struct _KNONVOLATILE_CONTEXT_POINTERS 115,3810
        PM128A FloatingContext[FloatingContext117,3870
            PM128A Xmm0;119,3923
            PM128A Xmm1;120,3948
            PM128A Xmm2;121,3973
            PM128A Xmm3;122,3998
            PM128A Xmm4;123,4023
            PM128A Xmm5;124,4048
            PM128A Xmm6;125,4073
            PM128A Xmm7;126,4098
            PM128A Xmm8;127,4123
            PM128A Xmm9;128,4148
            PM128A Xmm10;129,4173
            PM128A Xmm11;130,4199
            PM128A Xmm12;131,4225
            PM128A Xmm13;132,4251
            PM128A Xmm14;133,4277
            PM128A Xmm15;134,4303
        } DUMMYSTRUCTNAME;135,4329
    } DUMMYUNIONNAME;136,4356
        PDWORD64 IntegerContext[IntegerContext139,4391
            PDWORD64 Rax;141,4445
            PDWORD64 Rcx;142,4471
            PDWORD64 Rdx;143,4497
            PDWORD64 Rbx;144,4523
            PDWORD64 Rsp;145,4549
            PDWORD64 Rbp;146,4575
            PDWORD64 Rsi;147,4601
            PDWORD64 Rdi;148,4627
            PDWORD64 R8;149,4653
            PDWORD64 R9;150,4678
            PDWORD64 R10;151,4703
            PDWORD64 R11;152,4729
            PDWORD64 R12;153,4755
            PDWORD64 R13;154,4781
            PDWORD64 R14;155,4807
            PDWORD64 R15;156,4833
        } DUMMYSTRUCTNAME;157,4859
    } DUMMYUNIONNAME2;158,4886
} KNONVOLATILE_CONTEXT_POINTERS, *PKNONVOLATILE_CONTEXT_POINTERS;PKNONVOLATILE_CONTEXT_POINTERS160,4910
# define RTL_CRITICAL_SECTION_FLAG_NO_DEBUG_INFO 164,5032
__bcount(560,11494

win32/drwinapi/kernel32_sync.c,512
redirect_InitializeCriticalSection(42,1914
redirect_InitializeCriticalSectionAndSpinCount(57,2362
redirect_InitializeCriticalSectionEx(73,2746
redirect_DeleteCriticalSection(90,3140
redirect_EnterCriticalSection(99,3302
redirect_LeaveCriticalSection(112,3654
redirect_InterlockedCompareExchange 125,4006
redirect_InterlockedDecrement(136,4247
redirect_InterlockedExchange(145,4395
redirect_InterlockedIncrement(155,4569
redirect_WaitForSingleObject(164,4718
unit_test_drwinapi_kernel32_sync(190,5504

win32/drwinapi/ntdll_redir.c,1977
static strhash_table_t *ntdll_table;ntdll_table46,2031
static strhash_table_t *ntdll_win7_table;ntdll_win7_table47,2068
static const redirect_import_t redirect_ntdll[redirect_ntdll60,2784
#define REDIRECT_NTDLL_NUM 149,8826
static const redirect_import_t redirect_ntdll_win7[redirect_ntdll_win7154,9005
#define REDIRECT_NTDLL_WIN7_NUM 158,9174
ntdll_redir_init(162,9279
ntdll_redir_exit(195,10724
ntdll_redir_lookup(204,10922
redirect_RtlCreateHeap(235,11919
redirect_heap_call(251,12624
redirect_RtlDestroyHeap(273,13381
wrapped_dr_alloc(291,13990
wrapped_dr_free(309,14516
wrapped_dr_size(316,14663
redirect_RtlAllocateHeap(322,14774
redirect_RtlReAllocateHeap(339,15326
redirect_RtlFreeHeap(388,17256
redirect_RtlSizeHeap(406,17902
redirect_RtlValidateHeap(420,18301
redirect_RtlLockHeap(432,18642
redirect_RtlUnlockHeap(446,18937
redirect_RtlSetHeapInformation(460,19227
redirect_RtlFreeUnicodeString(475,19757
redirect_RtlFreeAnsiString(488,20150
redirect_RtlFreeOemString(501,20532
# define RTL_CRITICAL_SECTION_FLAG_NO_DEBUG_INFO 517,21015
# define RTL_CRITICAL_SECTION_FLAG_STATIC_INIT 520,21127
redirect_RtlInitializeCriticalSection(524,21211
redirect_RtlInitializeCriticalSectionAndSpinCount(530,21362
redirect_RtlInitializeCriticalSectionEx(537,21616
redirect_RtlDeleteCriticalSection(582,23473
redirect_NtCreateFile(610,24504
redirect_NtCreateKey(636,25536
redirect_NtMapViewOfSection(650,26055
redirect_NtOpenFile(674,27096
redirect_NtOpenKey(690,27654
redirect_NtOpenKeyEx(701,27945
redirect_NtOpenProcess(713,28330
redirect_NtOpenProcessToken(725,28738
redirect_NtOpenProcessTokenEx(735,29068
redirect_NtOpenThread(747,29521
redirect_NtOpenThreadToken(759,29919
redirect_NtOpenThreadTokenEx(771,30338
redirect_NtQueryAttributesFile(785,30882
redirect_NtQueryFullAttributesFile(793,31159
redirect_NtSetInformationFile(801,31459
redirect_NtSetInformationThread(815,32035
redirect_NtUnmapViewOfSection(827,32552

win32/drwinapi/ntdll_redir.h,33
#define _NTDLL_REDIR_H_ 37,1843

win32/drwinapi/rpcrt4_redir.c,345
static strhash_table_t *rpcrt4_table;rpcrt4_table46,2004
static const redirect_import_t redirect_rpcrt4[redirect_rpcrt448,2043
#define REDIRECT_RPCRT4_NUM 51,2168
rpcrt4_redir_init(54,2255
rpcrt4_redir_exit(72,2947
rpcrt4_redir_onload(78,3038
rpcrt4_redir_lookup(84,3108
redirect_UuidCreate 96,3363
unit_test_drwinapi_rpcrt4(123,4254

win32/drwinapi/rpcrt4_redir.h,34
#define _RPCRT4_REDIR_H_ 40,1918

win32/early_inject_helper1.c,73
#define WIN32_LEAN_AND_MEAN41,2034
__declspec(44,2084
DllMain(53,2359

win32/early_inject_helper2.c,73
#define WIN32_LEAN_AND_MEAN41,2033
__declspec(44,2083
DllMain(51,2233

win32/eventlog.c,1736
#define NONCE_LENGTH 47,2029
#define MAX_MESSAGE_SIZE 49,2054
typedef struct eventlog_state_t 52,2164
    HANDLE eventlog_pipe;53,2198
    HANDLE eventlog_completion;54,2224
    uint message_seq;55,2287
    char nonce[nonce56,2339
    mutex_t eventlog_mutex;57,2417
    char outbuf[outbuf61,2736
    size_t outlen;62,2771
    char buf[buf63,2790
    int request_length;64,2822
} eventlog_state_t;65,2846
set_event_source_registry_values(91,3988
init_registry_source(147,5981
#define MAX_SYSLOG_ARGS 208,8382
void os_syslog(210,8493
#define FIELD(238,9527
#define VARFIELD(246,9888
#define PADDING(255,10282
append_string(272,11030
#define HEADER_SIZE 289,11465
#define HEADER_OFFSET 290,11488
prepend_header(294,11535
#define EVENTLOG 310,12011
#define RPC_VERSION_BOGUS 317,12312
#define RPC_VERSION_5 318,12375
static char hello_message[hello_message322,12597
#define REPORT 381,15162
#define REGISTER_UNKNOWN_HEADER 383,15189
#define REPORT_UNKNOWN_HEADER 384,15240
#define DEREGISTER_UNKNOWN_HEADER 385,15289
#define EVENTLOG_NAMED_PIPE 390,15507
#define PRINT(395,15597
print_buffer_as_bytes 397,15669
#undef PRINT420,16236
#define HELLO_RESPONSE_LENGTH 424,16340
#define REGISTER_RESPONSE_LENGTH 426,16431
#define REPORT_RESPONSE_LENGTH 427,16467
eventlog_register(432,16569
#define REPORT_IN_LOG 487,18985
get_computer_name(550,21780
eventlog_report(590,23537
eventlog_deregister(720,29340
static eventlog_state_t *shared_eventlog_connection;shared_eventlog_connection766,31192
static eventlog_state_t temp_shared_eventlog_connection;768,31316
eventlog_alloc(772,31453
eventlog_init(809,33083
eventlog_fast_exit(847,34448
eventlog_slow_exit(861,34952
os_eventlog(882,35854

win32/gbop.h,635
#define GBOP_H43,1837
#define GBOP_DEFINE_KERNEL32_BASE_HOOKS(74,3064
#define GBOP_DEFINE_KERNEL32_MORE_HOOKS(113,5695
#define GBOP_DEFINE_WININET_BASE_HOOKS(166,9513
#define GBOP_DEFINE_MSVCRT_BASE_HOOKS(178,10255
#define GBOP_DEFINE_MSVCRT_MORE_HOOKS(182,10444
#define GBOP_DEFINE_WS2_32_BASE_HOOKS(224,13456
#define GBOP_DEFINE_WS2_32_MORE_HOOKS(233,13994
#define GBOP_DEFINE_USER32_BASE_HOOKS(245,14593
#define GBOP_DEFINE_SHELL32_BASE_HOOKS(258,15413
#define GBOP_DEFINE_NTDLL_MORE_HOOKS(280,16886
#define GBOP_ALL_HOOKS 303,18062
    GBOP_SET_NTDLL_BASE 321,18991
    GBOP_SET_NTDLL_BASE         = 0x1,x1321,18991

win32/inject.c,4484
#define WIN32_LEAN_AND_MEAN46,2163
# define GET_PROC_ADDR 60,2505
# define GET_PROC_ADDR 62,2551
#define DYNAMORIO_ENTRY 66,2651
# define display_error(73,2870
static ptr_uint_t addr_getprocaddr;79,3089
static ptr_uint_t addr_loadlibrarya;80,3125
static ptr_uint_t addr_debugbreak;82,3192
static bool inject_initialized 84,3234
inject_init(86,3279
#define SIZE_OF_LOAD_DYNAMO 104,3898
inject_into_thread(111,4096
    PUSHF 368,14987
    PUSHF                 = 0x9c,x9c368,14987
    POPF 369,15021
    POPF                  = 0x9d,x9d369,15021
    PUSHA 370,15055
    PUSHA                 = 0x60,x60370,15055
    POPA 371,15089
    POPA                  = 0x61,x61371,15089
    PUSH_EAX 372,15123
    PUSH_EAX              = 0x50,x50372,15123
    POP_EAX 373,15157
    POP_EAX               = 0x58,x58373,15157
    PUSH_ECX 374,15191
    PUSH_ECX              = 0x51,x51374,15191
    POP_ECX 375,15225
    POP_ECX               = 0x59,x59375,15225
    PUSH_IMM32 376,15259
    PUSH_IMM32            = 0x68,x68376,15259
    PUSH_IMM8 377,15293
    PUSH_IMM8             = 0x6a,x6a377,15293
    JMP_REL8 379,15328
    JMP_REL8              = 0xeb,xeb379,15328
    JMP_REL32 380,15362
    JMP_REL32             = 0xe9,xe9380,15362
    CALL_REL32 381,15396
    CALL_REL32            = 0xe8,xe8381,15396
    CALL_RM32 382,15430
    CALL_RM32             = 0xff,xff382,15430
    CALL_EAX_RM 383,15464
    CALL_EAX_RM           = 0xd0,xd0383,15464
    MOV_RM32_2_REG32 385,15499
    MOV_RM32_2_REG32      = 0x8b,x8b385,15499
    MOV_ESP_2_EAX_RM 386,15533
    MOV_ESP_2_EAX_RM      = 0xc4,xc4386,15533
    MOV_EAX_2_ECX_RM 387,15567
    MOV_EAX_2_ECX_RM      = 0xc8,xc8387,15567
    MOV_EAX_2_EDX_RM 388,15601
    MOV_EAX_2_EDX_RM      = 0xd0,xd0388,15601
    MOV_EAX_2_EAX_RM 389,15635
    MOV_EAX_2_EAX_RM      = 0xc0,xc0389,15635
    MOV_derefEAX_2_EAX_RM 390,15669
    MOV_derefEAX_2_EAX_RM = 0x00,x00390,15669
    MOV_deref_disp8_EAX_2_EAX_RM 391,15703
    MOV_deref_disp8_EAX_2_EAX_RM = 0x40,x40391,15703
    MOV_IMM8_2_RM8 392,15744
    MOV_IMM8_2_RM8        = 0xc6,xc6392,15744
    MOV_IMM32_2_RM32 393,15778
    MOV_IMM32_2_RM32      = 0xc7,xc7393,15778
    MOV_IMM_RM_ABS 394,15812
    MOV_IMM_RM_ABS        = 0x05,x05394,15812
    MOV_IMM_XAX 395,15846
    MOV_IMM_XAX           = 0xb8,xb8395,15846
    ADD_EAX_IMM32 397,15881
    ADD_EAX_IMM32         = 0x05,x05397,15881
    CMP_EAX_IMM32 399,15916
    CMP_EAX_IMM32         = 0x3d,x3d399,15916
    JZ_REL8 400,15950
    JZ_REL8               = 0x74,x74400,15950
    JNZ_REL8 401,15984
    JNZ_REL8              = 0x75,x75401,15984
    REX_W 404,16030
    REX_W                 = 0x48,x48404,16030
    REX_B 405,16064
    REX_B                 = 0x41,x41405,16064
    REX_R 406,16098
    REX_R                 = 0x44,x44406,16098
#define DEBUG_LOOP 410,16143
#define ASSERT_ROOM(412,16165
allocate_remote_code_buffer(431,16990
free_remote_code_buffer(490,19451
inject_gencode_at_ldr(497,19615
#define GET_PROC_ADDR_BAD_ADDR 523,20913
#define INSERT_INT(600,24369
#define INSERT_ADDR(605,24536
# define INSERT_PUSH_ALL_REG(610,24687
# define INSERT_PUSH_ALL_REG(636,25596
# define INSERT_POP_ALL_REG(641,25679
# define INSERT_POP_ALL_REG(667,26611
#define PUSH_IMMEDIATE(671,26681
#define PUSH_SHORT_IMMEDIATE(675,26774
# define PUSH_PTRSZ_IMMEDIATE(680,26897
# define PUSH_PTRSZ_IMMEDIATE(692,27387
#define MOV_ESP_TO_EAX(696,27461
# define MOV_EAX_TO_PARAM_0(703,27658
# define MOV_EAX_TO_PARAM_1(708,27843
# define MOV_EAX_TO_PARAM_2(713,28027
# define MOV_EAX_TO_PARAM_3(718,28211
# define MOV_TOS_TO_PARAM_0(723,28398
# define MOV_TOS_TO_PARAM_1(729,28615
# define MOV_TOS_TO_PARAM_2(735,28831
# define MOV_TOS_TO_PARAM_3(741,29047
#define ADD_TO_EAX(749,29311
#define ADD_IMM8_TO_ESP(754,29458
#define CMP_TO_EAX(760,29663
#define INSERT_REL32_ADDRESS(765,29810
# define CALL(773,30181
# define CALL(780,30431
#define PROT_IN_ECX 788,30762
#define CHANGE_PROTECTION(789,30829
#undef INSERT_INT990,40796
#undef PUSH_IMMEDIATE991,40814
#undef PUSH_SHORT_IMMEDIATE992,40836
#undef MOV_ESP_TO_EAX993,40864
#undef ADD_TO_EAX994,40886
#undef INSERT_REL32_ADDRESS995,40904
#undef CALL996,40932
#undef PROT_IN_ECX997,40944
#undef CHANGE_PROTECTION998,40963
#define APP 1007,41076
#define GDC 1008,41106
inject_gencode_earliest(1014,41302
inject_into_new_process(1202,49525

win32/inject_shared.c,2448
# undef assert64,2403
#define assert 67,2466
#  define display_warning 72,2704
#   undef ASSERT74,2760
#   define ASSERT(77,2804
#   define ASSERT(79,2891
#  define display_warning 82,3029
# define ASSERT(85,3127
# define display_error(86,3165
# define display_warning(87,3193
#define MAX_RUNVALUE_LENGTH 90,3231
# define VERBOSE 92,3333
# define VERBOSE 94,3358
    REGISTRY_DEFAULT,98,3400
    REGISTRY_32,100,3493
    REGISTRY_64,101,3555
} reg_platform_t;102,3611
ignore_assert(107,3741
report_dynamorio_problem(113,3826
notcore_mutex_lock(131,4506
notcore_mutex_unlock(139,4643
display_verbose_message(145,4706
double_strrchr(199,6935
wchar_to_char(212,7177
set_registry_parameter(242,8404
get_registry_parameter(271,9280
get_remote_process_ldr_status(365,13442
get_process_imgname_cmdline(400,14487
get_rununder_value(487,17629
#define DIRSEP 502,18081
#define ALT_DIRSEP 503,18101
double_wcsrchr(510,18212
w_get_short_name(523,18478
get_commandline_qualifier(556,19731
    QUALIFIED_FULL_NAME,619,21679
    QUALIFIED_SHORT_NAME,620,21705
    UNQUALIFIED_FULL_NAME,621,21731
    UNQUALIFIED_SHORT_NAME,622,21758
} qualified_name_type_t;623,21786
#define NAME_TYPE_IS_UNQUALIFIED(625,21812
#define NAME_TYPE_IS_SHORT(627,21938
commandline_qualifier_needed(646,22657
get_process_qualified_name(683,24346
get_own_qualified_name(778,28732
get_own_unqualified_name(793,29244
get_own_short_qualified_name(809,29803
get_own_short_unqualified_name(824,30306
get_subkey_parameter(844,31027
get_process_parameter_internal(895,33114
get_process_parameter(930,34423
get_parameter(938,34703
get_parameter_ex(946,34994
get_parameter_32(954,35214
get_parameter_64(962,35501
get_unqualified_parameter(972,35876
set_process_parameter(994,37011
get_parameter_from_registry(1027,38525
get_process_parameter_ex(1037,38893
get_process_parameter(1068,40170
get_parameter_64(1076,40379
is_nt_or_custom_safe_mode(1087,40664
is_windows_version_nt(1134,42793
is_windows_version_vista_plus(1144,43050
is_safe_mode(1154,43310
        MINIMAL 1160,43490
        NETWORK 1161,43511
systemwide_inject_enabled(1197,44749
check_commandline_match(1222,45770
systemwide_should_inject_common(1276,47841
systemwide_should_preinject_64(1369,51331
systemwide_should_inject(1376,51502
systemwide_should_preinject(1382,51664
check_for_run_once(1399,52372
test(1441,53964
nametest(1451,54216
main(1478,55122

win32/inject_shared.h,242
#define INJECT_SHARED_H44,1965
    INJECT_FALSE 48,2084
    INJECT_TRUE 49,2109
    INJECT_EXCLUDED 50,2134
    INJECT_EXPLICIT 51,2159
} inject_setting_mask_t;52,2183
# define double_tcsrchr 180,6335
# define double_tcsrchr 182,6380

win32/injector.c,2489
#define WIN32_LEAN_AND_MEAN53,2342
#define VERBOSE 73,2758
# define DO_VERBOSE(75,2788
# undef printf76,2813
# define VERBOSE_PRINT 77,2828
# define DO_VERBOSE(79,2864
# define VERBOSE_PRINT(80,2888
#define FP 82,2923
#define HANDLE_CONTROL_C 89,3208
static int limit;92,3254
static BOOL showmem;93,3289
static BOOL showstats;94,3310
static BOOL inject;95,3333
static BOOL force_injection;96,3353
static BOOL use_environment 97,3382
static const char *ops_param;ops_param102,3709
static double wallclock;103,3739
# undef assert110,3935
#define assert 113,3998
#undef ASSERT115,4113
#   define ASSERT(119,4188
#   define ASSERT(121,4274
# define display_error(124,4381
# define ASSERT(125,4420
display_error_helper(133,4589
internal_error(153,5212
# define FILENAME_LENGTH 156,5291
# define FILENAME_LENGTH 159,5371
display_error(172,5720
BOOL WINAPI HandlerRoutine(186,6022
typedef struct _dr_inject_info_t 199,6391
    PROCESS_INFORMATION pi;200,6426
    bool using_debugger_injection;201,6454
    char image_name[image_name202,6489
} dr_inject_info_t;203,6524
dr_inject_get_image_name(207,6569
dr_inject_get_process_handle(217,6763
dr_inject_get_process_id(227,6984
dr_inject_using_debug_key(237,7177
dr_inject_print_stats(247,7385
static BOOL created_product_reg_key;309,9742
static BOOL created_image_reg_key;310,9779
static HKEY image_name_key;311,9814
static HKEY product_name_key;312,9842
#define DO_ENV_VARS(321,10184
#define TEMP_CMD(330,10587
set_registry_from_env(340,10985
#undef TEMP_CMD342,11058
#define TEMP_CMD(343,11074
#undef TEMP_CMD 354,11374
#define TEMP_CMD(355,11394
#undef TEMP_CMD420,14290
#define TEMP_CMD(421,14306
unset_registry_from_env(448,15904
#undef TEMP_CMD455,16063
#define TEMP_CMD(456,16079
#undef DO_ENV_VARS487,17563
#undef TEMP_CMD488,17582
static HKEY debugger_key;500,17994
static TCHAR debugger_key_full_name[debugger_key_full_name501,18020
static TCHAR debugger_key_value[debugger_key_value502,18067
static DWORD debugger_key_value_size 503,18112
using_debugger_key_injection(508,18255
void unset_debugger_key_injection(546,19688
void restore_debugger_key_injection(562,20191
enum { MAX_CMDLINE 585,21080
get_image_name(588,21136
exe_is_right_bitwidth(606,21756
append_app_arg_and_space(643,22981
dr_inject_process_create(726,27051
dr_inject_process_inject(796,29575
dr_inject_process_run(877,32822
dr_inject_wait_for_child(889,33099
dr_inject_process_exit(902,33508

win32/loader.c,2596
# define IMAGE_ORDINAL_FLAG 79,3254
# define IMAGE_ORDINAL_FLAG 81,3309
static char systemroot[systemroot91,3641
static bool windbg_cmds_initialized;93,3680
typedef BOOL (WINAPI *dllmain_t)dllmain_t96,3752
static PEB *private_peb;private_peb128,4681
static bool private_peb_initialized 129,4706
static void *pre_fls_data;pre_fls_data131,4833
static void *pre_nt_rpc;pre_nt_rpc133,4951
static void *pre_nls_cache;pre_nls_cache135,5059
static bool swapped_to_app_peb;137,5146
typedef ULONG_PTR (NTAPI *ntdll_NtTickCount_t)ntdll_NtTickCount_t146,5470
static ntdll_NtTickCount_t ntdll_NtTickCount;147,5524
os_loader_init_prologue(158,5845
os_loader_init_epilogue(292,12330
os_loader_exit(308,12785
os_loader_thread_init_prologue(338,13841
os_loader_thread_init_epilogue(386,16067
os_loader_thread_exit(401,16550
get_private_peb(409,16709
should_swap_peb_pointer(425,17327
get_teb_field(432,17479
set_teb_field(444,17760
is_using_app_peb(457,18092
swap_peb_pointer_ex(504,19947
swap_peb_pointer(602,25023
restore_peb_pointer_for_thread(611,25293
os_should_swap_state(635,26504
os_using_app_state(641,26612
os_swap_context(651,26821
privload_add_areas(662,27113
privload_remove_areas(669,27275
privload_unmap_file(675,27410
privload_unload_imports(681,27494
privload_map_and_relocate(718,28801
privload_lookup_locate_and_load(822,32888
privload_load_private_library(842,33586
privload_load_finalized(856,34002
privload_process_imports(863,34182
privload_get_import_descriptor(963,38309
privload_process_one_import(993,39526
privload_call_entry(1102,44406
map_api_set_dll(1163,47020
privload_map_name(1318,55291
privload_locate_and_load(1337,55994
privload_init_search_paths(1407,58947
privload_disable_console_init(1439,60379
privload_redirect_setup(1600,67123
privload_redirect_imports(1613,67554
private_lib_handle_cb(1620,67788
# define SECURITY_COOKIE_INITIAL 1630,68008
# define SECURITY_COOKIE_INITIAL 1632,68066
#define SECURITY_COOKIE_16BIT_INITIAL 1634,68117
get_tick_count(1637,68180
privload_set_security_cookie(1652,68674
privload_os_finalize(1733,71705
add_mod_to_drmarker(1750,72211
#define WINDBG_ADD_PATH 1767,72900
privload_add_windbg_cmds(1787,73846
privload_add_windbg_cmds_post_init(1819,74937
typedef NTSTATUS (NTAPI *nt_protect_t)nt_protect_t1843,75971
static nt_protect_t bootstrap_ProtectVirtualMemory;1845,76115
bootstrap_protect_virtual_memory(1849,76215
bootstrap_tolower(1861,76610
bootstrap_strcmp(1870,76739
privload_bootstrap_get_export(1900,77430
privload_bootstrap_dynamorio_imports(1954,79324

win32/module.c,8613
typedef struct _version_info_t 55,2290
    version_number_t file_version;56,2323
    version_number_t product_version;57,2358
    wchar_t *company_name;company_name58,2396
    wchar_t *product_name;product_name59,2423
    wchar_t *original_filename;original_filename60,2450
} version_info_t;61,2482
typedef struct _pe_module_import_iterator_t 76,2986
    dr_module_import_t module_import;77,3032
    byte *mod_base;mod_base79,3111
    size_t mod_size;80,3131
    IMAGE_IMPORT_DESCRIPTOR *cur_module;cur_module84,3273
    IMAGE_IMPORT_DESCRIPTOR safe_module;85,3314
    byte *imports_end;imports_end86,3393
    bool hasnext;87,3473
} pe_module_import_iterator_t;88,3552
typedef struct _pe_symbol_import_iterator_t 90,3584
    dr_symbol_import_t symbol_import;91,3630
    dr_symbol_import_t next_symbol;92,3713
    byte *mod_base;mod_base94,3783
    dr_module_import_iterator_t *mod_iter;mod_iter95,3803
    IMAGE_IMPORT_DESCRIPTOR *cur_module;cur_module96,3884
    IMAGE_THUNK_DATA *cur_thunk;cur_thunk98,4023
    bool hasnext;99,4056
} pe_symbol_import_iterator_t;100,4135
static generic_table_t *section2file_table;section2file_table107,4341
#define INIT_HTABLE_SIZE_SECTION 108,4385
typedef struct _section_to_file_t 110,4447
    HANDLE section_handle;111,4483
    const char *file_path;file_path112,4510
} section_to_file_t;113,4556
section_to_file_free(116,4590
section_to_file_lookup(124,4875
section_to_file_add_common(138,5326
section_to_file_add_wide(163,6278
section_to_file_add(170,6501
section_to_file_remove(177,6715
typedef struct export_entry_t 201,7494
    app_pc  entry_point;202,7526
    char *export_name;export_name203,7596
} export_entry_t;204,7619
typedef struct module_info_t 214,7992
    app_pc start;215,8023
    app_pc end;216,8041
    char * module_name;217,8097
    size_t exports_size;218,8121
    uint   exports_num;219,8187
    export_entry_t *exports_table;exports_table221,8251
} module_info_t;239,9136
typedef struct module_info_vector_t 253,9607
    struct module_info_t *buf;buf254,9645
    int   capacity;255,9676
    int   length;256,9696
    mutex_t lock;259,9829
} module_info_vector_t;260,9847
print_module_list(267,10099
module_info_compare(289,10697
lookup_module_info(308,11273
#define INITIAL_MODULE_NUMBER 337,12143
module_info_create(346,12434
remove_module_info_vector(400,14304
remove_module_info(445,15704
module_cleanup(466,16346
module_info_exit(492,17180
export_entry_compare(499,17275
find_predecessor(512,17721
remove_export_duplicates(538,18272
print_symbolic_address(563,18801
add_module_info(658,23238
print_ldr_data(804,30120
static LDR_MODULE *DR_module;DR_module875,33553
hide_from_module_lists(898,34725
print_modules(1001,39336
print_modules_ldrlist_and_ourlist(1008,39611
print_modules_safe(1126,44704
check_for_unsupported_modules(1173,46646
#define DOS_HEADER(1225,48825
#define NT_HEADER(1226,48880
#define VERIFY_DOS_HEADER(1229,49029
#define VERIFY_NT_HEADER(1234,49246
on_subset_of_pages(1246,49825
is_readable_pe_base(1253,50039
get_image_section_unpadded_size(1284,51381
get_image_section_size(1310,52925
get_image_section_map_size(1322,53497
get_image_section_file_offs(1342,54674
print_module_section_info(1351,55058
is_in_executable_file_section(1408,57643
module_pc_section_lookup(1536,64051
is_range_in_code_section(1550,64728
is_in_code_section(1563,65409
is_in_dot_data_section(1575,65940
is_in_xdata_section(1588,66572
is_in_any_section(1612,67697
get_executable_segment(1623,68154
is_mapped_as_image(1636,68728
module_get_nth_segment(1657,69412
module_get_header_size(1670,69856
get_named_section_bounds(1680,70126
get_IAT_section_bounds(1696,70664
is_IAT(1711,71256
is_in_IAT(1734,72043
get_module_entry(1746,72327
get_module_base(1767,73267
get_module_preferred_base(1783,73784
in_same_module(1801,74391
get_dll_short_name(1819,75170
get_all_module_short_names_uncached(1864,77240
get_module_short_name_uncached(2019,83911
get_module_short_name(2042,84879
get_module_preferred_base_delta(2056,85444
get_ldr_module_by_pc(2074,85997
get_module_name(2142,88539
get_module_base_reloc(2155,88916
get_module_characteristics(2225,91315
get_module_cor20_header(2245,92026
module_has_cor20_header(2309,94304
get_module_magic(2319,94566
module_is_32bit(2330,94816
module_is_64bit(2336,94939
is_module_patch_region(2353,95646
#define IMAGE_REL_BASED_TYPE(2475,101911
#define IMAGE_REL_BASED_OFFSET_MASK 2476,101960
#define IMAGE_REL_BASED_OFFSET(2477,102004
process_one_relocation(2494,102701
add_SEH_address(2597,107003
add_SEH_to_rct_table(2616,107759
rct_add_rip_rel_addr(2808,117521
rct_add_exports(2868,120300
find_relocation_references(2986,125669
find_address_references_by_region(3149,132766
add_rct_module(3196,134894
rct_analyze_module_at_load(3428,146802
rct_analyze_module_at_violation(3460,148130
rct_process_module_mmap(3519,150727
rct_is_exported_function(3688,158740
os_modules_init(3717,159619
os_modules_exit(3735,160261
free_module_names(3741,160356
os_module_area_reset(3757,160910
get_module_info_pe(3812,163160
os_module_area_init(3878,165944
get_module_preferred_base_safe(3983,170977
os_get_module_info(4015,172162
os_get_module_info_all_names(4063,174042
os_module_get_rct_htable(4133,176704
os_module_store_IAT_code(4145,176961
bool os_module_cmp_IAT_code(4164,177722
module_area_free_IAT(4201,179471
bool os_module_free_IAT_code(4220,180124
module_apply_relocations(4249,181114
typedef struct reloc_iterator_t 4397,187539
    app_pc relocs;4398,187573
    app_pc relocs_end;4399,187639
    app_pc relocs_block_end;4400,187702
    uint rva_page;4401,187768
    app_pc module_base;4402,187823
} reloc_iterator_t;4421,188786
module_reloc_iterator_next_block_internal(4424,188819
module_reloc_iterator_start(4455,190113
module_reloc_iterator_next(4524,192745
module_make_writable(4611,196186
module_restore_permissions(4642,197521
module_file_relocatable(4665,198274
module_rebase(4728,201069
module_dump_pe_file(4824,204635
ensure_section_readable(4937,209549
restore_unreadable_section(4979,211321
module_region_compare(5027,213198
module_pe_section_compare(5044,213936
aslr_compare_header(5137,218249
module_contents_compare(5248,222777
#define CHECK_SAFE_READ(5462,231916
#define GET_FOLLOWING_ADDRESS(5473,232542
get_resource_directory_entries(5476,232637
get_module_resource_directory(5482,232812
get_resource_directory_entry_by_id(5539,235343
get_module_resource_version_data(5583,237071
typedef struct ver_rsrc_header 5776,246007
    size_t length;5777,246040
    size_t value_length;5778,246094
    uint type;5779,246150
    wchar_t *key;key5780,246165
    size_t key_length;5781,246183
} ver_rsrc_header_t;5782,246249
typedef struct vs_version_info 5783,246270
    VS_FIXEDFILEINFO *info;info5784,246303
    void *string_or_var_info;string_or_var_info5785,246350
} vs_version_info_t;5789,246636
typedef struct string_file_info 5790,246657
    size_t size;5791,246691
    void *string_table;string_table5792,246751
} string_file_info_t;5793,246807
typedef struct string_table 5794,246829
    size_t size;5795,246859
    wchar_t *lang;lang5796,246913
    void *string;string5797,246958
} string_table_t;5798,247007
typedef struct rsrc_string 5799,247025
    size_t key_length;5800,247054
    size_t value_length;5801,247120
    wchar_t *key;key5802,247188
    wchar_t *value;value5803,247206
} rsrc_string_t;5804,247226
#define RSRC_TYPE_STRING 5807,247321
#define RSRC_TYPE_BINARY 5808,247348
#define RSRC_ALIGNMENT 5811,247426
read_version_struct_header(5821,247951
read_vs_version_info(5886,250535
read_string_or_var_info(5934,252473
read_string_table(6009,255605
read_rsrc_string(6058,257578
get_module_resource_version_info(6128,260768
get_module_company_name(6243,265998
get_module_original_filename(6260,266602
get_loader_lock_owner(6277,267180
get_shared_lib_name(6286,267373
os_module_has_dynamic_base(6292,267451
safe_read_cur_module(6306,267825
dr_module_import_iterator_start(6328,268643
dr_module_import_iterator_hasnext(6356,269627
dr_module_import_iterator_next(6363,269850
dr_module_import_iterator_stop(6385,270738
pe_symbol_import_iterator_read_thunk(6397,271113
pe_symbol_import_iterator_first_thunk(6424,272103
pe_symbol_import_iterator_next_module(6442,272700
dr_symbol_import_iterator_start(6462,273422
dr_symbol_import_iterator_hasnext(6496,274541
dr_symbol_import_iterator_next(6503,274764
dr_symbol_import_iterator_stop(6527,275647

win32/module.h,750
#define MODULE_H35,1769
#define OS_IMAGE_READ 42,1963
#define OS_IMAGE_WRITE 43,2007
#define OS_IMAGE_EXECUTE 44,2052
# define IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE 47,2146
typedef struct _os_module_data_t 50,2208
    app_pc preferred_base;51,2243
    uint checksum;52,2318
    uint timestamp;53,2379
    size_t module_internal_size;54,2442
    size_t code_size;56,2533
    version_number_t file_version;59,2632
    version_number_t product_version;60,2667
    char *company_name;company_name61,2705
    char *product_name;product_name62,2729
    HANDLE noclobber_section_handle;73,3198
    rct_module_table_t rct_table[rct_table87,3736
    byte *iat_code;iat_code94,3981
    size_t iat_len;95,4001
} os_module_data_t;96,4021

win32/module_shared.c,1520
# define ASSERT(47,2225
# define ASSERT_NOT_REACHED(48,2244
# define ASSERT_NOT_IMPLEMENTED(49,2274
# define DODEBUG(50,2309
# define DOCHECK(51,2329
# define DECLARE_NEVERPROT_VAR(52,2352
# define ALIGN_BACKWARD(53,2412
# define PAGE_SIZE 54,2488
# undef strcasecmp74,3120
# define strcasecmp 75,3139
# define wcscasecmp 76,3168
# undef TRY_EXCEPT_ALLOW_NO_DCONTEXT77,3197
# define TRY_EXCEPT_ALLOW_NO_DCONTEXT(78,3234
# undef ASSERT_OWN_NO_LOCKS79,3293
# define ASSERT_OWN_NO_LOCKS(80,3321
# undef ASSERT_CURIOSITY81,3384
# define ASSERT_CURIOSITY(82,3409
# define convert_data_to_function(88,3725
# undef LOG 89,3791
# define LOG(90,3832
is_readable_without_exception(108,4623
get_module_exports_directory_common(146,6281
get_module_exports_directory_check_common(224,9491
get_proc_address_common(279,12420
get_module_exports_directory(439,19409
get_module_exports_directory_check(446,19627
get_proc_address(455,19947
get_proc_address_ex(464,20238
get_proc_address_by_ordinal(471,20497
get_proc_address_resolve_forward(479,20763
get_ldr_module_by_name(538,23575
typedef struct ALIGN_VAR(591,25758
typedef struct ALIGN_VAR(601,26012
typedef struct ALIGN_VAR(614,26464
typedef void (*void_func_t)void_func_t633,27014
get_own_x64_peb(651,27531
get_ldr_data_64(667,27867
get_ldr_module_64(680,28244
get_module_handle_64(733,30627
get_proc_address_64(744,30906
load_library_64(755,31273
free_library_64(835,34599
thread_get_context_64(850,35051
thread_set_context_64(864,35519

win32/native_pe.c,114
native_module_init(41,1834
native_module_exit(47,1887
native_module_hook(53,1940
native_module_unhook(59,2043

win32/ntdll.c,11140
# define ASSERT(45,2039
# define ASSERT_CURIOSITY(46,2058
# define ASSERT_NOT_REACHED(47,2087
# define ASSERT_NOT_IMPLEMENTED(48,2117
# define DODEBUG(49,2152
# define DOCHECK(50,2172
# define DEBUG_DECLARE(51,2195
# define INVALID_FILE 54,2411
# define snprintf 55,2454
# undef ASSERT_OWN_NO_LOCKS68,2872
# define ASSERT_OWN_NO_LOCKS(69,2900
# define VERBOSE 88,3501
# define VERBOSE 90,3526
# define NTPRINT(96,3677
# define NTPRINT(98,3742
uint context_xstate 102,3796
bool avx_supported 103,3821
# define GET_SYSCALL(108,4070
# define GET_RAW_SYSCALL 109,4138
# define NT_SYSCALL(110,4175
# define NTLOG(111,4231
# define NTLOG 113,4257
    DR_SYSCALL_INT2E,136,5527
    DR_SYSCALL_SYSENTER,137,5549
    DR_SYSCALL_SYSCALL,138,5574
    DR_SYSCALL_WOW64,139,5598
} dr_which_syscall_t;140,5620
# define GET_RAW_SYSCALL(146,5830
# define GET_SYSCALL(151,6061
# define NT_RAW_SYSCALL(171,7072
# define NT_SYSCALL(188,8479
#  define SYSNUM_OFFS 195,8755
#  define SYSNUM_OFFS 197,8786
# define CHECK_SYSNUM_AT(199,8818
# define ALLOW_HOOKER(204,9118
# define TEB_TLS64_OFFSET 220,9674
# define TEB_TLS64_OFFSET 222,9713
#undef CreateFile315,13669
typedef struct _context_chunk_t 351,15072
    LONG offset;352,15106
    DWORD length;353,15123
} context_chunk_t;354,15141
typedef struct _context_ex_t 357,15215
    context_chunk_t all;358,15246
    context_chunk_t legacy;359,15271
    context_chunk_t xstate;360,15299
} context_ex_t;361,15327
typedef int (WINAPI *ntdll_RtlGetExtendedContextLength_t)ntdll_RtlGetExtendedContextLength_t367,15537
typedef int (WINAPI *ntdll_RtlInitializeExtendedContext_t)ntdll_RtlInitializeExtendedContext_t368,15610
typedef CONTEXT* (WINAPI *ntdll_RtlLocateLegacyContext_t)ntdll_RtlLocateLegacyContext_t370,15706
ntdll_RtlGetExtendedContextLength_t ntdll_RtlGetExtendedContextLength 371,15788
ntdll_RtlInitializeExtendedContext_t ntdll_RtlInitializeExtendedContext 372,15868
ntdll_RtlLocateLegacyContext_t ntdll_RtlLocateLegacyContext 373,15948
typedef NTSTATUS (WINAPI *NtGetNextThread_t)NtGetNextThread_t377,16158
NtGetNextThread_t NtGetNextThread;383,16592
uint sysenter_tls_offset 393,16919
static bool nt_wrappers_intercepted 397,17226
syscalls_init_options_read(400,17276
syscalls_init(416,17850
use_ki_syscall_routines(568,24980
nt_get_context_extended_functions(585,25782
nt_init_dynamic_syscall_wrappers(603,26558
ntdll_init(610,26739
ntdll_exit(628,27377
query_thread_info(638,27549
query_seg_descriptor(652,28050
query_win32_start_addr(669,28673
query_system_info(683,29096
get_thread_id(703,29745
get_process_id(709,29842
get_last_error(715,29933
set_last_error(721,30002
get_stderr_handle(728,30116
get_stdout_handle(737,30292
get_stdin_handle(746,30469
is_thread_exited(755,30657
thread_id_from_handle(801,32677
query_process_info(813,32971
process_id_from_handle(827,33416
process_id_from_thread_handle(839,33704
process_handle_from_id(850,33961
thread_handle_from_id(871,34555
get_peb(898,35307
get_own_peb(909,35513
get_teb(926,36017
static app_pc ntdll_base;936,36222
get_ntdll_base(939,36256
set_ntdll_base(954,36696
is_in_ntdll(962,36825
context_ymmh_saved_area(977,37212
context_to_mcontext(1021,39041
mcontext_to_context(1083,41436
# define HEX(1147,44107
# define RAW(1148,44131
get_own_context_integer_control(1188,45851
get_own_context(1210,46824
#define TLS_SPAREBYTES_SLOTS 1231,47627
static bool alt_tls_spare_taken[alt_tls_spare_taken1233,47736
# define TLS_POSTTEB_SLOTS 1235,47802
static bool alt_tls_post_taken[alt_tls_post_taken1236,47832
# define TLS_POSTTEB_BASE_OFFS 1238,47930
tls_exit(1242,48029
alt_tls_acquire_helper(1251,48142
alt_tls_acquire(1294,49714
alt_tls_release_helper(1324,50886
alt_tls_release(1339,51302
tls_segment_offs(1366,52224
tls_find_free_block_sequence(1379,52692
tls_mark_taken_block_sequence(1459,55712
tls_alloc_helper(1477,56432
tls_alloc(1704,66618
tls_calloc(1715,66978
tls_free_helper(1722,67185
tls_free(1795,70269
tls_cfree(1801,70362
get_process_mem_stats(1810,70586
get_process_mem_quota(1822,70939
get_process_handle_count(1834,71290
get_process_load(1844,71555
is_wow64_process(1869,72429
nt_get_drive_map(1903,73604
nt_remote_allocate_virtual_memory(1914,73940
nt_remote_free_virtual_memory(1939,74930
nt_allocate_virtual_memory(1952,75351
nt_commit_virtual_memory(1962,75703
nt_decommit_virtual_memory(1980,76361
nt_free_virtual_memory(1996,76944
protect_virtual_memory(2012,77560
nt_remote_protect_virtual_memory(2025,78001
nt_remote_query_virtual_memory(2042,78687
query_virtual_memory(2056,79265
get_mapped_file_name(2078,79970
nt_raw_read_virtual_memory(2102,80910
nt_read_virtual_memory(2117,81532
nt_raw_write_virtual_memory(2125,81834
nt_write_virtual_memory(2140,82398
nt_continue(2149,82748
nt_get_context(2158,82981
nt_set_context(2182,84061
nt_thread_suspend(2192,84385
nt_thread_resume(2207,84989
nt_thread_iterator_next(2218,85382
nt_terminate_thread(2228,85673
nt_terminate_process(2243,86277
nt_terminate_process_for_app(2258,86872
am_I_sole_thread(2267,87176
check_sole_thread(2277,87446
nt_create_and_set_timer(2287,87601
        NotificationTimer,2292,87714
        SynchronizationTimer2293,87741
nt_sleep(2319,88743
nt_yield(2331,89080
get_section_address(2338,89168
get_section_attributes(2354,89665
nt_raw_close(2381,90584
close_handle(2389,90716
duplicate_handle(2396,90825
nt_get_handle_access_rights(2421,91870
nt_get_object_name(2435,92327
wchar_to_unicode(2446,92699
char_to_unicode(2460,93112
char_to_ansi(2467,93283
query_full_attributes_file(2479,93633
nt_query_value_key(2498,94184
reg_create_key(2517,95025
reg_open_key(2541,95734
reg_close_key(2570,96575
reg_delete_key(2577,96644
reg_query_value(2598,97424
reg_set_key_value(2640,98775
reg_set_dword_key_value(2659,99368
reg_flush_key(2678,100007
reg_enum_key(2700,100754
reg_enum_value(2740,102186
env_get_value(2771,103214
get_current_user_token(2793,104026
get_primary_user_token(2820,104811
get_primary_owner_token(2845,105463
get_current_user_SID(2868,106078
get_process_primary_SID(2896,106906
get_sd_pointers(2919,107458
get_owner_sd(2964,109164
initialize_security_descriptor(2984,109665
set_owner_sd(2998,110171
length_sid(3027,111092
equal_sid(3035,111248
get_application_name(3069,112298
get_application_short_name(3081,112575
get_application_short_unqualified_name(3093,112900
get_application_pid(3106,113334
get_process_param_buf(3120,113631
get_application_cmdline(3147,114687
query_time_100ns(3155,114896
query_time_millis(3170,115422
query_time_seconds(3177,115559
convert_100ns_to_system_time(3190,116001
convert_system_time_to_100ns(3206,116554
query_system_time(3223,117060
set_primary_user_owner(3234,117330
nt_create_file(3269,118698
create_file(3321,120855
nt_open_file(3363,122802
nt_delete_file(3383,123360
nt_flush_file_buffers(3423,124896
read_file(3434,125155
write_file(3461,126183
close_file(3489,127333
create_iocompletion(3495,127402
typedef struct _FILE_PIPE_INFORMATION 3518,128196
    ULONG ReadModeMessage;3519,128260
    ULONG WaitModeBlocking;3520,128287
} FILE_PIPE_INFORMATION, *PFILE_PIPE_INFORMATION;PFILE_PIPE_INFORMATION3521,128315
typedef struct _FILE_COMPLETION_INFORMATION 3523,128366
    HANDLE IoCompletionHandle;3524,128436
    ULONG CompletionKey;3525,128467
} FILE_COMPLETION_INFORMATION, *PFILE_COMPLETION_INFORMATION;PFILE_COMPLETION_INFORMATION3526,128492
open_pipe(3530,128622
#define STATUS_SHOW_MESSAGEBOX_UNDOCUMENTED 3615,132844
nt_messagebox(3618,132916
nt_raise_exception(3661,134561
nt_create_event(3677,135012
nt_close_event(3703,135777
nt_wait_event_with_timeout(3709,135852
nt_set_event(3723,136228
nt_clear_event(3749,137148
nt_signal_and_wait(3763,137400
nt_query_performance_counter(3782,138043
#define CTL_CODE(3800,138638
#define METHOD_BUFFERED 3805,138883
#define METHOD_IN_DIRECT 3806,138925
#define METHOD_OUT_DIRECT 3807,138967
#define METHOD_NEITHER 3808,139009
#define FILE_READ_ACCESS 3811,139100
#define FILE_WRITE_ACCESS 3812,139163
#define FSCTL_PIPE_TRANSCEIVE 3814,139227
static bool do_once_nt_pipe_transceive 3819,139460
nt_pipe_transceive(3828,139692
typedef struct _THREAD_IMPERSONATION_INFORMATION 3934,144651
    HANDLE ThreadImpersonationToken;3935,144702
} THREAD_IMPERSONATION_INFORMATION, *PTHREAD_IMPERSONATION_INFORMATION;PTHREAD_IMPERSONATION_INFORMATION3936,144739
get_thread_impersonation_token(3942,144903
set_thread_impersonation_token(3960,145332
nt_create_profile(3983,145960
nt_set_profile_interval(4011,146925
nt_query_profile_interval(4025,147244
nt_start_profile(4042,147604
nt_stop_profile(4054,147804
typedef struct _PORT_MESSAGE 4070,148155
    USHORT DataSize;4071,148186
    USHORT MessageSize;4072,148207
    USHORT MessageType;4073,148231
    USHORT VirtualRangesOffset;4074,148255
    CLIENT_ID ClientId;4075,148287
    ULONG MessageId;4076,148311
    ULONG SectionSize;4077,148332
} PORT_MESSAGE, *PPORT_MESSAGE;PPORT_MESSAGE4079,148376
typedef struct _CSRSS_MESSAGE 4081,148409
    ULONG Unknown1;4082,148441
    ULONG Opcode;4083,148461
    ULONG Status;4084,148479
    ULONG Unknown2;4085,148497
} CSRSS_MESSAGE, *PCSRSS_MESSAGE;PCSRSS_MESSAGE4086,148517
inform_csrss(4092,148685
        PORT_MESSAGE PortMessage;4110,149724
        CSRSS_MESSAGE CsrssMessage;4112,149808
        PROCESS_INFORMATION ProcessInformation;4114,149896
        CLIENT_ID Debugger;4115,149944
        ULONG CreationFlags;4116,149972
        ULONG VdmInfo[VdmInfo4117,150001
        ULONG Unknown[Unknown4121,150205
copy_environment(4147,151146
create_process_parameters(4172,151866
create_process(4218,154101
create_thread_common(4342,159348
create_thread(4441,163606
create_thread_have_stack(4485,165654
load_library(4536,168591
free_library(4563,169542
get_module_handle(4586,170445
#define LDR_GET_DLL_HANDLE_ARG1 4595,170845
nt_create_object_directory(4618,171704
nt_initialize_shared_directory(4674,174022
nt_open_object_directory(4742,176651
nt_close_object_directory(4788,178559
nt_get_symlink_target(4799,178883
nt_create_section(4874,182096
nt_open_section(4926,184008
are_mapped_files_the_same(4957,185110
nt_create_module_file(5005,186839
nt_query_file_info(5030,187861
nt_set_file_info(5054,188604
nt_query_volume_info(5082,189440
nt_query_security_object(5122,191069
initialize_known_SID(5159,192686
nt_initialize_context(5180,193307
nt_raw_CreateFile(5276,197051
nt_raw_OpenFile(5311,198159
nt_raw_OpenKey(5336,198861
nt_raw_OpenKeyEx(5355,199326
nt_raw_OpenProcessTokenEx(5378,200021
nt_raw_OpenThread(5399,200638
nt_raw_OpenThreadTokenEx(5420,201196
nt_raw_QueryAttributesFile(5443,201893
nt_raw_SetInformationFile(5460,202354
nt_raw_SetInformationThread(5483,203054
nt_raw_UnmapViewOfSection(5504,203711
nt_raw_MapViewOfSection(5555,205450
nt_raw_OpenProcess(5588,206532
nt_raw_QueryFullAttributesFile(5609,207098
nt_raw_CreateKey(5626,207582
nt_raw_OpenThreadToken(5653,208342
nt_raw_OpenProcessToken(5674,208911

win32/ntdll.h,44699
#define _NTDLL_H_ 48,2221
#define WIN32_LEAN_AND_MEAN50,2242
#define GET_NTDLL(74,3151
#define NT_CURRENT_PROCESS 88,3772
#define NT_CURRENT_THREAD 89,3829
typedef struct ALIGN_VAR(92,3897
#define DIRECTORY_QUERY 103,4192
#define DIRECTORY_TRAVERSE 104,4241
#define DIRECTORY_CREATE_OBJECT 105,4290
#define DIRECTORY_CREATE_SUBDIRECTORY 106,4339
#define DIRECTORY_ALL_ACCESS 107,4388
typedef struct _PEB_LDR_DATA 110,4497
    ULONG Length;111,4530
    BOOLEAN Initialized;112,4548
    PVOID SsHandle;113,4573
    LIST_ENTRY InLoadOrderModuleList;114,4593
    LIST_ENTRY InMemoryOrderModuleList;115,4631
    LIST_ENTRY InInitializationOrderModuleList;116,4671
} PEB_LDR_DATA, *PPEB_LDR_DATA;PPEB_LDR_DATA117,4719
typedef struct _LDR_MODULE 122,4914
    LIST_ENTRY InLoadOrderModuleList;123,4943
    LIST_ENTRY InMemoryOrderModuleList;124,4981
    LIST_ENTRY InInitializationOrderModuleList;125,5021
    PVOID BaseAddress;126,5069
    PVOID EntryPoint;127,5092
    ULONG SizeOfImage;128,5114
    UNICODE_STRING FullDllName;129,5137
    UNICODE_STRING BaseDllName;130,5169
    ULONG Flags;131,5201
    SHORT LoadCount;132,5218
    SHORT TlsIndex;133,5239
    LIST_ENTRY HashTableEntry;134,5259
    ULONG TimeDateStamp;136,5448
} LDR_MODULE, *PLDR_MODULE;PLDR_MODULE137,5473
# define OPT_HDR(151,6141
# define OPT_HDR_P(152,6207
# define OPT_HDR_BASE(153,6284
# define OPT_HDR(158,6579
# define OPT_HDR_P(159,6648
enum {MAX_MODULE_LIST_INFINITE_LOOP_THRESHOLD MAX_MODULE_LIST_INFINITE_LOOP_THRESHOLD163,6784
#define LDR_IMAGE_IS_DLL 168,6960
#define LDR_LOAD_IN_PROGRESS 169,7011
#define LDR_UNLOAD_IN_PROGRESS 170,7062
#define LDR_NO_DLL_CALLS 171,7113
#define LDR_PROCESS_ATTACHED 172,7164
#define LDR_MODULE_REBASED 173,7215
typedef struct _PEBLOCKROUTINE *PPEBLOCKROUTINE;PPEBLOCKROUTINE175,7267
typedef struct _PEB_FREE_BLOCK *PPEB_FREE_BLOCK;PPEB_FREE_BLOCK176,7316
typedef PVOID *PPVOID;PPVOID177,7365
typedef struct _RTL_BITMAP 179,7389
    ULONG  SizeOfBitMap;180,7418
    LPBYTE BitMapBuffer;181,7478
} RTL_BITMAP, *PRTL_BITMAP;PRTL_BITMAP182,7556
typedef const RTL_BITMAP *PCRTL_BITMAP;PCRTL_BITMAP183,7584
typedef struct _PEB 189,7777
    BOOLEAN                      InheritedAddressSpace;190,7863
    BOOLEAN                      ReadImageFileExecOptions;191,7949
    BOOLEAN                      BeingDebugged;192,8035
    BOOLEAN                      ImageUsesLargePages:ImageUsesLargePages195,8213
    BOOLEAN                      SpareBits:SpareBits196,8299
    BOOLEAN                      ImageUsesLargePages;198,8391
    HANDLE                       Mutant;200,8484
    PVOID                        ImageBaseAddress;201,8570
    PPEB_LDR_DATA                LoaderData;202,8656
    PRTL_USER_PROCESS_PARAMETERS ProcessParameters;203,8742
    PVOID                        SubSystemData;204,8828
    PVOID                        ProcessHeap;205,8914
    PRTL_CRITICAL_SECTION        FastPebLock;206,9000
    PVOID                        AtlThunkSListPtr;209,9135
    PVOID                        SparePtr2;210,9221
    PPEBLOCKROUTINE              FastPebLockRoutine;213,9341
    PPEBLOCKROUTINE              FastPebUnlockRoutine;214,9427
    DWORD                        EnvironmentUpdateCount;216,9520
    PVOID                        KernelCallbackTable;217,9606
    DWORD                        SystemReserved[SystemReserved220,9741
    DWORD                        SpareUlong;221,9827
    DWORD                        EvengLogSection;224,9947
    DWORD                        EventLog;225,10033
    PPEB_FREE_BLOCK              FreeList;227,10126
    DWORD                        TlsExpansionCounter;228,10212
    PRTL_BITMAP                  TlsBitmap;229,10298
    DWORD                        TlsBitmapBits[TlsBitmapBits230,10384
    PVOID                        ReadOnlySharedMemoryBase;231,10470
    PVOID                        ReadOnlySharedMemoryHeap;232,10556
    PPVOID                       ReadOnlyStaticServerData;233,10642
    PVOID                        AnsiCodePageData;234,10728
    PVOID                        OemCodePageData;235,10814
    PVOID                        UnicodeCaseTableData;236,10900
    DWORD                        NumberOfProcessors;237,10986
    DWORD                        NtGlobalFlag;238,11072
    LARGE_INTEGER                CriticalSectionTimeout;239,11158
    ptr_uint_t                   HeapSegmentReserve;240,11244
    ptr_uint_t                   HeapSegmentCommit;241,11330
    ptr_uint_t                   HeapDeCommitTotalFreeThreshold;242,11416
    ptr_uint_t                   HeapDeCommitFreeBlockThreshold;243,11502
    DWORD                        NumberOfHeaps;244,11588
    DWORD                        MaximumNumberOfHeaps;245,11674
    PPVOID                       ProcessHeaps;246,11760
    PVOID                        GdiSharedHandleTable;247,11846
    PVOID                        ProcessStarterHelper;248,11932
    DWORD                        GdiDCAttributeList;249,12018
    PRTL_CRITICAL_SECTION        LoaderLock;250,12104
    DWORD                        OSMajorVersion;251,12190
    DWORD                        OSMinorVersion;252,12276
    WORD                         OSBuildNumber;253,12362
    WORD                         OSCSDVersion;254,12448
    DWORD                        OSPlatformId;255,12534
    DWORD                        ImageSubsystem;256,12620
    DWORD                        ImageSubsystemMajorVersion;257,12706
    DWORD                        ImageSubsystemMinorVersion;258,12792
    ptr_uint_t                   ImageProcessAffinityMask;259,12878
    DWORD                        GdiHandleBuffer[GdiHandleBuffer261,12975
    DWORD                        GdiHandleBuffer[GdiHandleBuffer263,13067
    PVOID                        PostProcessInitRoutine;265,13160
    PVOID                        TlsExpansionBitmap;266,13246
    DWORD                        TlsExpansionBitmapBits[TlsExpansionBitmapBits267,13332
    DWORD                        SessionId;268,13418
    ULARGE_INTEGER               AppCompatFlags;269,13504
    ULARGE_INTEGER               AppCompatFlagsUser;270,13590
    PVOID                        pShimData;271,13676
    PVOID                        AppCompatInfo;272,13762
    UNICODE_STRING               CSDVersion;273,13848
    PVOID                        ActivationContextData;274,13934
    PVOID                        ProcessAssemblyStorageMap;275,14020
    PVOID                        SystemDefaultActivationContextData;276,14106
    PVOID                        SystemAssemblyStorageMap;277,14194
    ptr_uint_t                   MinimumStackCommit;278,14280
    PPVOID                       FlsCallback;279,14366
    LIST_ENTRY                   FlsListHead;280,14452
    PVOID                        FlsBitmap;281,14538
    DWORD                        FlsBitmapBits[FlsBitmapBits282,14624
    DWORD                        FlsHighIndex;283,14710
    PVOID                        WerRegistrationData;284,14796
    PVOID                        WerShipAssertPtr;285,14882
    PVOID                        pUnused;286,14968
    PVOID                        pImageHeaderHash;287,15054
        ULONG                    TracingFlags;289,15152
            ULONG                HeapTracingEnabled:HeapTracingEnabled291,15255
            ULONG                CritSecTracingEnabled:CritSecTracingEnabled292,15341
            ULONG                LibLoaderTracingEnabled:LibLoaderTracingEnabled293,15427
            ULONG                SpareTracingBits:SpareTracingBits294,15513
    ULONG64                      CsrServerReadOnlySharedMemoryBase;297,15617
} PEB, *PPEB;PPEB298,15703
# define _W64301,15731
typedef _W64 long LONG_PTR,304,15764
typedef _W64 long LONG_PTR, *PLONG_PTR;PLONG_PTR304,15764
typedef _W64 unsigned long ULONG_PTR,305,15804
typedef _W64 unsigned long ULONG_PTR, *PULONG_PTR;PULONG_PTR305,15804
typedef ULONG KAFFINITY;306,15855
typedef LONG KPRIORITY;308,15887
typedef struct _KERNEL_USER_TIMES 310,15912
    LARGE_INTEGER CreateTime;311,15948
    LARGE_INTEGER ExitTime;312,15978
    LARGE_INTEGER KernelTime;313,16006
    LARGE_INTEGER UserTime;314,16036
} KERNEL_USER_TIMES;315,16064
typedef struct _PROCESS_BASIC_INFORMATION 319,16124
    NTSTATUS ExitStatus;320,16168
    PPEB PebBaseAddress;321,16193
    ULONG_PTR AffinityMask;322,16218
    KPRIORITY BasePriority;323,16246
    ULONG_PTR UniqueProcessId;324,16274
    ULONG_PTR InheritedFromUniqueProcessId;325,16305
} PROCESS_BASIC_INFORMATION;326,16349
typedef PROCESS_BASIC_INFORMATION *PPROCESS_BASIC_INFORMATION;PPROCESS_BASIC_INFORMATION327,16378
typedef struct _DESCRIPTOR_TABLE_ENTRY 329,16442
    ULONG Selector;330,16483
    LDT_ENTRY Descriptor;331,16503
} DESCRIPTOR_TABLE_ENTRY, *PDESCRIPTOR_TABLE_ENTRY;PDESCRIPTOR_TABLE_ENTRY332,16529
typedef struct _VM_COUNTERS 335,16657
    SIZE_T PeakVirtualSize;336,16687
    SIZE_T VirtualSize;337,16715
    ULONG PageFaultCount;338,16739
    SIZE_T PeakWorkingSetSize;339,16765
    SIZE_T WorkingSetSize;340,16796
    SIZE_T QuotaPeakPagedPoolUsage;341,16823
    SIZE_T QuotaPagedPoolUsage;342,16859
    SIZE_T QuotaPeakNonPagedPoolUsage;343,16891
    SIZE_T QuotaNonPagedPoolUsage;344,16930
    SIZE_T PagefileUsage;345,16965
    SIZE_T PeakPagefileUsage;346,16991
} VM_COUNTERS;347,17021
typedef struct _PROCESS_DEVICEMAP_INFORMATION 350,17111
            HANDLE DirectoryHandle;353,17188
        } Set;354,17224
            ULONG DriveMap;356,17256
            UCHAR DriveType[DriveType357,17284
        } Query;358,17317
    ULONG Flags;361,17352
} PROCESS_DEVICEMAP_INFORMATION, *PPROCESS_DEVICEMAP_INFORMATION;PPROCESS_DEVICEMAP_INFORMATION363,17376
typedef char bool;367,17489
typedef unsigned __int64 uint64;369,17527
typedef struct _PROCESS_WS_WATCH_INFORMATION 398,18650
    PVOID FaultingPc;399,18697
    PVOID FaultingVa;400,18719
} PROCESS_WS_WATCH_INFORMATION, *PPROCESS_WS_WATCH_INFORMATION;PPROCESS_WS_WATCH_INFORMATION401,18741
typedef struct _POOLED_USAGE_AND_LIMITS 404,18866
    SIZE_T PeakPagedPoolUsage;405,18908
    SIZE_T PagedPoolUsage;406,18939
    SIZE_T PagedPoolLimit;407,18966
    SIZE_T PeakNonPagedPoolUsage;408,18993
    SIZE_T NonPagedPoolUsage;409,19027
    SIZE_T NonPagedPoolLimit;410,19057
    SIZE_T PeakPagefileUsage;411,19087
    SIZE_T PagefileUsage;412,19117
    SIZE_T PagefileLimit;413,19143
} POOLED_USAGE_AND_LIMITS;414,19169
typedef POOLED_USAGE_AND_LIMITS *PPOOLED_USAGE_AND_LIMITS;PPOOLED_USAGE_AND_LIMITS415,19196
typedef struct _PROCESS_ACCESS_TOKEN 421,19397
    HANDLE Token;426,19567
    HANDLE Thread;435,19966
} PROCESS_ACCESS_TOKEN, *PPROCESS_ACCESS_TOKEN;PPROCESS_ACCESS_TOKEN436,19985
#define JOB_OBJECT_LIMIT_WORKINGSET 441,20155
#define JOB_OBJECT_LIMIT_PROCESS_TIME 442,20218
#define JOB_OBJECT_LIMIT_JOB_TIME 443,20281
#define JOB_OBJECT_LIMIT_ACTIVE_PROCESS 444,20344
#define JOB_OBJECT_LIMIT_AFFINITY 445,20407
#define JOB_OBJECT_LIMIT_PRIORITY_CLASS 446,20470
#define JOB_OBJECT_LIMIT_PRESERVE_JOB_TIME 447,20533
#define JOB_OBJECT_LIMIT_SCHEDULING_CLASS 448,20596
#define JOB_OBJECT_LIMIT_PROCESS_MEMORY 451,20742
#define JOB_OBJECT_LIMIT_JOB_MEMORY 452,20805
#define JOB_OBJECT_LIMIT_DIE_ON_UNHANDLED_EXCEPTION 453,20868
#define JOB_OBJECT_LIMIT_BREAKAWAY_OK 454,20931
#define JOB_OBJECT_LIMIT_SILENT_BREAKAWAY_OK 455,20994
#define JOB_OBJECT_LIMIT_KILL_ON_JOB_CLOSE 456,21057
typedef struct _EXCEPTION_REGISTRATION 463,21322
     struct _EXCEPTION_REGISTRATION* prev;464,21363
     PVOID                   handler;465,21406
} EXCEPTION_REGISTRATION, *PEXCEPTION_REGISTRATION;PEXCEPTION_REGISTRATION466,21444
typedef struct _GDI_TEB_BATCH468,21497
    ULONG  Offset;470,21529
    HANDLE HDC;471,21548
    ULONG  Buffer[Buffer472,21564
} GDI_TEB_BATCH;473,21590
typedef struct _TEB 478,21698
    PEXCEPTION_REGISTRATION   ExceptionList;480,21840
    PVOID                     StackBase;481,21920
    PVOID                     StackLimit;482,22000
    PVOID                     SubSystemTib;483,22080
        PVOID                 FiberData;485,22172
        DWORD                 Version;486,22252
    PVOID                     ArbitraryUserPointer;488,22339
    struct _TEB*              Self;489,22419
    PVOID                     EnvironmentPointer;490,22499
    CLIENT_ID                 ClientId;491,22579
    PVOID                     ActiveRpcHandle;492,22659
    PVOID                     ThreadLocalStoragePointer;493,22739
    PEB*                      ProcessEnvironmentBlock;494,22819
    DWORD                     LastErrorValue;495,22899
    DWORD                     CountOfOwnedCriticalSections;496,22979
    PVOID                     CsrClientThread;497,23059
    PVOID                     Win32ThreadInfo;498,23139
    DWORD                     User32Reserved[User32Reserved499,23219
    DWORD                     UserReserved[UserReserved500,23299
    PVOID                     WOW32Reserved;501,23379
    DWORD                     CurrentLocale;502,23459
    DWORD                     FpSoftwareStatusRegister;503,23539
    PVOID /* kernel32 data */ SystemReserved1[SystemReserved1504,23619
    LONG                      ExceptionCode;505,23699
    PVOID                     ActivationContextStackPointer;506,23779
    byte                      SpareBytes1[SpareBytes1509,23943
    byte                      SpareBytes1[SpareBytes1511,24029
    DWORD                     TxFsContext;513,24116
    GDI_TEB_BATCH             GdiTebBatch;514,24196
    CLIENT_ID                 RealClientId;515,24276
    PVOID                     GdiCachedProcessHandle;516,24356
    DWORD                     GdiClientPID;517,24436
    DWORD                     GdiClientTID;518,24516
    PVOID                     GdiThreadLocalInfo;519,24596
    ptr_uint_t                Win32ClientInfo[Win32ClientInfo520,24676
    PVOID                     glDispatchTable[glDispatchTable521,24756
    ptr_uint_t                glReserved1[glReserved1522,24836
    PVOID                     glReserved2;523,24917
    PVOID                     glSectionInfo;524,24998
    PVOID                     glSection;525,25079
    PVOID                     glTable;526,25160
    PVOID                     glCurrentRC;527,25241
    PVOID                     glContext;528,25322
    DWORD                     LastStatusValue;529,25403
    UNICODE_STRING            StaticUnicodeString;530,25484
    WORD                      StaticUnicodeBuffer[StaticUnicodeBuffer531,25565
    PVOID                     DeallocationStack;532,25646
    PVOID                     TlsSlots[TlsSlots533,25727
    LIST_ENTRY                TlsLinks;534,25808
    PVOID                     Vdm;535,25889
    PVOID                     ReservedForNtRpc;536,25970
    PVOID                     DbgSsReserved[DbgSsReserved537,26051
    DWORD                     HardErrorMode;538,26132
    PVOID                     Instrumentation[Instrumentation539,26213
    PVOID                     SubProcessTag;540,26294
    PVOID                     EtwTraceData;541,26375
    PVOID                     WinSockData;542,26456
    DWORD                     GdiBatchCount;543,26537
    byte                      InDbgPrint;544,26618
    byte                      FreeStackOnTermination;545,26699
    byte                      HasFiberData;546,26780
    byte                      IdealProcessor;547,26861
    DWORD                     GuaranteedStackBytes;548,26942
    PVOID                     ReservedForPerf;549,27023
    PVOID                     ReservedForOle;550,27104
    DWORD                     WaitingOnLoaderLock;551,27185
    ptr_uint_t                SparePointer1;552,27266
    ptr_uint_t                SoftPatchPtr1;553,27347
    ptr_uint_t                SoftPatchPtr2;554,27428
    PPVOID                    TlsExpansionSlots;555,27509
    PVOID                     DeallocationBStore;557,27601
    PVOID                     BStoreLimit;558,27682
    DWORD                     ImpersonationLocale;560,27770
    DWORD                     IsImpersonating;561,27851
    PVOID                     NlsCache;562,27932
    PVOID                     pShimData;563,28013
    DWORD                     HeapVirtualAffinity;564,28094
    PVOID                     CurrentTransactionHandle;565,28175
    PVOID                     ActiveFrame;566,28256
    PVOID                     FlsData;567,28337
    PVOID                     PreferredLanguages;569,28503
    PVOID                     UserPrefLanguages;570,28584
    PVOID                     MergedPrefLanguages;571,28665
    ULONG                     MuiImpersonation;572,28746
        USHORT                CrossTebFlags;574,28839
        USHORT                SpareCrossTebFlags:SpareCrossTebFlags575,28920
        USHORT                SameTebFlags;579,29024
            USHORT            SafeThunkCall:SafeThunkCall581,29122
            USHORT            InDebugPrint:InDebugPrint582,29203
            USHORT            HasFiberData2:HasFiberData2583,29284
            USHORT            SkipThreadAttach:SkipThreadAttach584,29365
            USHORT            WerInShipAssertCode:WerInShipAssertCode585,29446
            USHORT            RanProcessInit:RanProcessInit586,29527
            USHORT            ClonedThread:ClonedThread587,29608
            USHORT            SuppressDebugMsg:SuppressDebugMsg588,29689
            USHORT            DisableUserStackWalk:DisableUserStackWalk589,29770
            USHORT            RtlExceptionAttached:RtlExceptionAttached590,29851
            USHORT            InitialThread:InitialThread591,29932
            USHORT            SessionAware:SessionAware592,30013
            USHORT            SpareSameTebBits:SpareSameTebBits593,30094
    PVOID                     TxnScopeEntercallback;596,30193
    PVOID                     TxnScopeExitCAllback;597,30274
    PVOID                     TxnScopeContext;598,30355
    ULONG                     LockCount;599,30436
    ULONG                     SpareUlong0;600,30517
    PVOID                     ResourceRetValue;601,30598
    PVOID                     ReservedForWdf;602,30679
    byte                      SafeThunkCall;604,30783
    byte                      BooleanSpare[BooleanSpare605,30864
} TEB;607,30952
typedef struct _THREAD_BASIC_INFORMATION 609,30960
    NTSTATUS ExitStatus;610,31026
    PNT_TIB TebBaseAddress;611,31051
    CLIENT_ID ClientId;612,31079
    KAFFINITY AffinityMask;613,31103
    KPRIORITY Priority;614,31131
    KPRIORITY BasePriority;615,31155
} THREAD_BASIC_INFORMATION, *PTHREAD_BASIC_INFORMATION;PTHREAD_BASIC_INFORMATION616,31183
typedef struct _SYSTEM_BASIC_INFORMATION 618,31240
    ULONG   Unknown;619,31283
    ULONG   MaximumIncrement;620,31304
    ULONG   PhysicalPageSize;621,31334
    ULONG   NumberOfPhysicalPages;622,31364
    ULONG   LowestPhysicalPage;623,31399
    ULONG   HighestPhysicalPage;624,31431
    ULONG   AllocationGranularity;625,31464
    PVOID   LowestUserAddress;626,31499
    PVOID   HighestUserAddress;627,31530
    ULONG_PTR ActiveProcessors;628,31562
    UCHAR   NumberProcessors;629,31594
    ULONG   Unknown2;631,31635
} SYSTEM_BASIC_INFORMATION, *PSYSTEM_BASIC_INFORMATION;PSYSTEM_BASIC_INFORMATION633,31728
typedef struct _SYSTEM_PROCESSOR_INFORMATION 635,31785
    USHORT  ProcessorArchitecture;636,31832
    USHORT  ProcessorLevel;637,31867
    USHORT  ProcessorRevision;638,31895
    USHORT  Unknown;639,31926
    ULONG   FeatureBits;640,31947
} SYSTEM_PROCESSOR_INFORMATION, *PSYSTEM_PROCESSOR_INFORMATION;PSYSTEM_PROCESSOR_INFORMATION641,31972
typedef struct _SYSTEM_PERFORMANCE_INFORMATION 643,32037
    LARGE_INTEGER IdleTime;644,32086
    LARGE_INTEGER ReadTransferCount;645,32114
    LARGE_INTEGER WriteTransferCount;646,32151
    LARGE_INTEGER OtherTransferCount;647,32189
    ULONG   ReadOperationCount;648,32227
    ULONG   WriteOperationCount;649,32259
    ULONG   OtherOperationCount;650,32292
    ULONG   AvailablePages;651,32325
    ULONG   TotalCommittedPages;652,32353
    ULONG   TotalCommitLimit;653,32386
    ULONG   PeakCommitment;654,32416
    ULONG   PageFaults;655,32444
    ULONG   WriteCopyFaults;656,32468
    ULONG   TranstitionFaults;657,32497
    ULONG   Reserved1;658,32528
    ULONG   DemandZeroFaults;659,32551
    ULONG   PagesRead;660,32581
    ULONG   PageReadIos;661,32604
    ULONG   Reserved2[Reserved2662,32629
    ULONG   PageFilePagesWritten;663,32655
    ULONG   PageFilePagesWriteIos;664,32689
    ULONG   MappedFilePagesWritten;665,32724
    ULONG   PagedPoolUsage;666,32760
    ULONG   NonPagedPoolUsage;667,32788
    ULONG   PagedPoolAllocs;668,32819
    ULONG   PagedPoolFrees;669,32848
    ULONG   NonPagedPoolAllocs;670,32876
    ULONG   NonPagedPoolFrees;671,32908
    ULONG   TotalFreeSystemPtes;672,32939
    ULONG   SystemCodePage;673,32972
    ULONG   TotalSystemDriverPages;674,33000
    ULONG   TotalSystemCodePages;675,33036
    ULONG   SmallNonPagedLookasideListAllocateHits;676,33070
    ULONG   SmallPagedLookasieListAllocateHits;677,33122
    ULONG   Reserved3;678,33170
    ULONG   MmSystemCachePage;679,33193
    ULONG   PagedPoolPage;680,33224
    ULONG   SystemDriverPage;681,33251
    ULONG   FastReadNoWait;682,33281
    ULONG   FastReadWait;683,33309
    ULONG   FastReadResourceMiss;684,33335
    ULONG   FastReadNotPossible;685,33369
    ULONG   FastMdlReadNoWait;686,33402
    ULONG   FastMdlReadWait;687,33433
    ULONG   FastMdlReadResourceMiss;688,33462
    ULONG   FastMdlReadNotPossible;689,33499
    ULONG   MapDataNoWait;690,33535
    ULONG   MapDataWait;691,33562
    ULONG   MapDataNoWaitMiss;692,33587
    ULONG   MapDataWaitMiss;693,33618
    ULONG   PinMappedDataCount;694,33647
    ULONG   PinReadNoWait;695,33679
    ULONG   PinReadWait;696,33706
    ULONG   PinReadNoWaitMiss;697,33731
    ULONG   PinReadWaitMiss;698,33762
    ULONG   CopyReadNoWait;699,33791
    ULONG   CopyReadWait;700,33819
    ULONG   CopyReadNoWaitMiss;701,33845
    ULONG   CopyReadWaitMiss;702,33877
    ULONG   MdlReadNoWait;703,33907
    ULONG   MdlReadWait;704,33934
    ULONG   MdlReadNoWaitMiss;705,33959
    ULONG   MdlReadWaitMiss;706,33990
    ULONG   ReadAheadIos;707,34019
    ULONG   LazyWriteIos;708,34045
    ULONG   LazyWritePages;709,34071
    ULONG   DataFlushes;710,34099
    ULONG   DataPages;711,34124
    ULONG   ContextSwitches;712,34147
    ULONG   FirstLevelTbFills;713,34176
    ULONG   SecondLevelTbFills;714,34207
    ULONG   SystemCalls;715,34239
    ULONG   Unknown[Unknown717,34300
} SYSTEM_PERFORMANCE_INFORMATION, *PSYSTEM_PERFORMANCE_INFORMATION;PSYSTEM_PERFORMANCE_INFORMATION718,34324
typedef struct _SYSTEM_TIME_OF_DAY_INFORMATION 720,34393
    LARGE_INTEGER BootTime;721,34442
    LARGE_INTEGER CurrentTime;722,34470
    LARGE_INTEGER TimeZoneBias;723,34501
    ULONG   CurrentTimeZoneId;724,34533
} SYSTEM_TIME_OF_DAY_INFORMATION, *PSYSTEM_TIME_OF_DAY_INFORMATION;PSYSTEM_TIME_OF_DAY_INFORMATION725,34564
typedef struct _SYSTEM_PROCESSOR_TIMES 727,34633
    LARGE_INTEGER IdleTime;728,34674
    LARGE_INTEGER KernelTime;729,34702
    LARGE_INTEGER UserTime;730,34732
    LARGE_INTEGER DpcTime;731,34760
    LARGE_INTEGER InterruptTime;732,34787
    ULONG   InterruptCount;733,34820
} SYSTEM_PROCESSOR_TIMES, *PSYSTEM_PROCESSOR_TIMES;PSYSTEM_PROCESSOR_TIMES734,34848
typedef struct _IO_COUNTERSEX 736,34901
    LARGE_INTEGER ReadOperationCount;737,34933
    LARGE_INTEGER WriteOperationCount;738,34971
    LARGE_INTEGER OtherOperationCount;739,35010
    LARGE_INTEGER ReadTransferCount;740,35049
    LARGE_INTEGER WriteTransferCount;741,35086
    LARGE_INTEGER OtherTransferCount;742,35124
} IO_COUNTERSEX, *PIO_COUNTERSEX;PIO_COUNTERSEX743,35162
typedef enum _THREAD_STATE 745,35197
    StateInitialized,746,35226
    StateReady,747,35248
    StateRunning,748,35264
    StateStandby,749,35282
    StateTerminated,750,35300
    StateWait,751,35321
    StateTransition,752,35336
    StateUnknown753,35357
} THREAD_STATE;754,35374
typedef enum _KWAIT_REASON 756,35391
    Executive,757,35420
    FreePage,758,35435
    PageIn,759,35449
    PoolAllocation,760,35461
    DelayExecution,761,35481
    Suspended,762,35501
    UserRequest,763,35516
    WrExecutive,764,35533
    WrFreePage,765,35550
    WrPageIn,766,35566
    WrPoolAllocation,767,35580
    WrDelayExecution,768,35602
    WrSuspended,769,35624
    WrUserRequest,770,35641
    WrEventPair,771,35660
    WrQueue,772,35677
    WrLpcReceive,773,35690
    WrVirtualMemory,774,35708
    WrPageOut,775,35729
    WrRendevous,776,35744
    WrSpare2,777,35761
    WrSpare3,778,35775
    WrSpare4,779,35789
    WrSpare5,780,35803
    WrSpare6,781,35817
    WrKernel782,35831
} KWAIT_REASON;783,35844
typedef struct _SYSTEM_THREADS 785,35861
    LARGE_INTEGER CreateTime;786,35894
    LARGE_INTEGER UserTime;787,35924
    LARGE_INTEGER KernelTime;788,35952
    ULONG   WaitTime;789,35982
    PVOID   StartAddress;790,36004
    CLIENT_ID ClientId;791,36030
    KPRIORITY Priority;792,36054
    KPRIORITY BasePriority;793,36078
    ULONG   ContextSwitchCount;794,36106
    THREAD_STATE ThreadState;795,36138
    KWAIT_REASON WaitReason;796,36168
} SYSTEM_THREADS, *PSYSTEM_THREADS;PSYSTEM_THREADS797,36197
typedef struct _SYSTEM_PROCESSES 799,36234
    ULONG NextEntryDelta;800,36270
    ULONG ThreadCount;801,36296
    ULONG Reserved1[Reserved1802,36319
    LARGE_INTEGER CreateTime;803,36343
    LARGE_INTEGER UserTime;804,36373
    LARGE_INTEGER KernelTime;805,36401
    UNICODE_STRING ProcessName;806,36431
    KPRIORITY BasePriority;807,36463
    HANDLE ProcessId;808,36491
    HANDLE InheritedFromProcessId;809,36513
    ULONG HandleCount;810,36548
    ULONG SessionId;811,36571
    ULONG PageDirectoryFrame;812,36592
    VM_COUNTERS VmCounters;813,36622
    IO_COUNTERSEX IoCounters;814,36650
    SYSTEM_THREADS Threads[Threads815,36706
} SYSTEM_PROCESSES, *PSYSTEM_PROCESSES;PSYSTEM_PROCESSES816,36757
typedef struct _SYSTEM_GLOBAL_FLAG 819,36799
    ULONG   GlobalFlag;820,36836
} SYSTEM_GLOBAL_FLAG, *PSYSTEM_GLOBAL_FLAG;PSYSTEM_GLOBAL_FLAG821,36860
typedef struct _MEMORY_SECTION_NAME 823,36905
    UNICODE_STRING SectionFileName;824,36943
} MEMORY_SECTION_NAME, *PMEMORY_SECTION_NAME;PMEMORY_SECTION_NAME825,36979
#define SYMBOLIC_LINK_QUERY 827,37026
#define SYMBOLIC_LINK_ALL_ACCESS 828,37060
    THREAD_INFO_ELEMENT_BUFFER_IS_INOUT 838,37575
    THREAD_INFO_ELEMENT_BUFFER_IS_INOUT = 0x00000,x00000838,37575
    THREAD_INFO_ELEMENT_BUFFER_IS_OUT 839,37653
    THREAD_INFO_ELEMENT_BUFFER_IS_OUT   = 0x10000,x10000839,37653
    THREAD_INFO_ELEMENT_BUFFER_IS_IN 840,37727
    THREAD_INFO_ELEMENT_BUFFER_IS_IN    = 0x20000,x20000840,37727
} thread_info_elm_buf_access_t;841,37802
    THREAD_INFO_ELEMENT_CLIENT_ID 844,37885
    THREAD_INFO_ELEMENT_CLIENT_ID       = 0x3,x3844,37885
    THREAD_INFO_ELEMENT_TEB 845,37964
    THREAD_INFO_ELEMENT_TEB             = 0x4,x4845,37964
    THREAD_INFO_ELEMENT_NT_PATH_TO_EXE 846,38039
    THREAD_INFO_ELEMENT_NT_PATH_TO_EXE  = 0x5,x5846,38039
    THREAD_INFO_ELEMENT_EXE_STUFF 848,38204
    THREAD_INFO_ELEMENT_EXE_STUFF       = 0x6,x6848,38204
    THREAD_INFO_ELEMENT_UNKNOWN_1 850,38350
    THREAD_INFO_ELEMENT_UNKNOWN_1       = 0x9,x9850,38350
} thread_info_elm_buf_type_t;852,38500
typedef struct _thread_info_element_t 854,38531
    ptr_uint_t flags;855,38604
    size_t buffer_size;856,38692
    void *buffer;buffer857,38749
    ptr_uint_t unknown;858,38835
} thread_info_elm_t;859,38888
typedef struct _exe_stuff_t 861,38910
    OUT void *exe_entrypoint_addr;exe_entrypoint_addr862,38973
    ptr_uint_t unknown1[unknown1864,39137
    uint32 unknown2[unknown2865,39216
} exe_stuff_t;866,39299
typedef struct _create_proc_thread_info_t 868,39315
    size_t struct_size;869,39392
    thread_info_elm_t nt_path_to_exe;874,39694
    thread_info_elm_t client_id;879,39880
    thread_info_elm_t exe_stuff;884,40092
    thread_info_elm_t info[info891,40606
}  create_proc_thread_info_t;893,40643
typedef struct _create_thread_info_t 897,40776
    size_t struct_size;898,40848
    thread_info_elm_t client_id;906,41293
    thread_info_elm_t teb;911,41445
} create_thread_info_t;912,41472
typedef struct _BASE_STATIC_SERVER_DATA919,41753
    UNICODE_STRING WindowsDirectory;921,41795
    UNICODE_STRING WindowsSystemDirectory;922,41832
    UNICODE_STRING NamedObjectDirectory;923,41875
    USHORT WindowsMajorVersion;924,41916
    USHORT WindowsMinorVersion;925,41948
    USHORT BuildNumber;926,41980
} BASE_STATIC_SERVER_DATA, *PBASE_STATIC_SERVER_DATA;PBASE_STATIC_SERVER_DATA928,42039
typedef struct _BASE_STATIC_SERVER_DATA_64931,42106
    UNICODE_STRING_64 WindowsDirectory;933,42151
    UNICODE_STRING_64 WindowsSystemDirectory;934,42191
    UNICODE_STRING_64 NamedObjectDirectory;935,42237
    USHORT WindowsMajorVersion;936,42281
    USHORT WindowsMinorVersion;937,42313
    USHORT BuildNumber;938,42345
} BASE_STATIC_SERVER_DATA_64, *PBASE_STATIC_SERVER_DATA_64;PBASE_STATIC_SERVER_DATA_64940,42404
typedef struct _FILE_BOTH_DIR_INFORMATION 944,42525
    ULONG NextEntryOffset;945,42569
    ULONG FileIndex;946,42596
    LARGE_INTEGER CreationTime;947,42617
    LARGE_INTEGER LastAccessTime;948,42649
    LARGE_INTEGER LastWriteTime;949,42683
    LARGE_INTEGER ChangeTime;950,42716
    LARGE_INTEGER EndOfFile;951,42746
    LARGE_INTEGER AllocationSize;952,42775
    ULONG FileAttributes;953,42809
    ULONG FileNameLength;954,42835
    ULONG EaSize;955,42861
    CCHAR ShortNameLength;956,42879
    WCHAR ShortName[ShortName957,42906
    WCHAR FileName[FileName958,42931
} FILE_BOTH_DIR_INFORMATION, *PFILE_BOTH_DIR_INFORMATION;PFILE_BOTH_DIR_INFORMATION959,42954
typedef enum _NT_PRODUCT_TYPE 962,43032
    NtProductWinNt 963,43064
    NtProductLanManNt,964,43088
    NtProductServer965,43111
} NT_PRODUCT_TYPE, *PNT_PRODUCT_TYPE;PNT_PRODUCT_TYPE966,43131
typedef enum _ALTERNATIVE_ARCHITECTURE_TYPE 969,43189
    StandardDesign,970,43235
    NEC98x86,971,43303
    EndAlternatives 972,43367
} ALTERNATIVE_ARCHITECTURE_TYPE;973,43437
typedef struct _KSYSTEM_TIME 975,43471
    ULONG LowPart;976,43502
    LONG High1Time;977,43521
    LONG High2Time;978,43541
} KSYSTEM_TIME, *PKSYSTEM_TIME;PKSYSTEM_TIME979,43561
#define PROCESSOR_FEATURE_MAX 981,43594
typedef struct _KUSER_SHARED_DATA 983,43628
    ULONG TickCountLowDeprecated;991,43819
    ULONG TickCountMultiplier;992,43853
    volatile KSYSTEM_TIME InterruptTime;998,43953
    volatile KSYSTEM_TIME SystemTime;1004,44060
    volatile KSYSTEM_TIME TimeZoneBias;1010,44152
    USHORT ImageNumberLow;1018,44316
    USHORT ImageNumberHigh;1019,44343
    WCHAR NtSystemRoot[NtSystemRoot1025,44425
    ULONG MaxStackTraceDepth;1031,44525
    ULONG CryptoExponent;1037,44594
    ULONG TimeZoneId;1043,44654
    ULONG LargePageMinimum;1045,44677
    ULONG Reserved2[Reserved21046,44705
    NT_PRODUCT_TYPE NtProductType;1052,44767
    BOOLEAN ProductTypeIsValid;1053,44802
    ULONG NtMajorVersion;1061,45077
    ULONG NtMinorVersion;1062,45103
    BOOLEAN ProcessorFeatures[ProcessorFeatures1068,45175
    ULONG Reserved1;1073,45280
    ULONG Reserved3;1074,45301
    volatile ULONG TimeSlip;1080,45377
    ALTERNATIVE_ARCHITECTURE_TYPE AlternativeArchitecture;1086,45490
    LARGE_INTEGER SystemExpirationDate;1095,45830
    ULONG SuiteMask;1101,45907
    BOOLEAN KdDebuggerEnabled;1107,45998
    volatile ULONG ActiveConsoleId;1113,46110
    volatile ULONG DismountCount;1122,46373
    ULONG ComPlusPackage;1130,46645
    ULONG LastSystemRITEventTickCount;1139,46912
    ULONG NumberOfPhysicalPages;1147,47123
    BOOLEAN SafeBootMode;1153,47228
    ULONG TraceLogging;1162,47496
    ULONGLONG   Fill0;1174,47871
    ULONGLONG   SystemCall[SystemCall1175,47916
        volatile KSYSTEM_TIME TickCount;1182,48005
        volatile ULONG64 TickCountQuad;1183,48046
} KUSER_SHARED_DATA;1187,48139
#define KUSER_SHARED_DATA_ADDRESS 1190,48210
typedef enum {MEMORY_RESERVE_ONLY MEMORY_RESERVE_ONLY1195,48371
typedef enum {MEMORY_RESERVE_ONLY = MEM_RESERVE,1195,48371
              MEMORY_COMMIT 1196,48421
              MEMORY_COMMIT = MEM_RESERVE|MEM_RESERVE1196,48421
              MEMORY_COMMIT = MEM_RESERVE|MEM_COMMITMEM_COMMIT1196,48421
} memory_commit_status_t;1197,48474
#define DUPLICATE_SAME_ATTRIBUTES 1216,48755
typedef enum {THREAD_EXITED,THREAD_EXITED1225,49051
typedef enum {THREAD_EXITED, THREAD_NOT_EXITED,1225,49051
typedef enum {THREAD_EXITED, THREAD_NOT_EXITED, THREAD_EXIT_ERROR}THREAD_EXIT_ERROR1225,49051
typedef enum {THREAD_EXITED, THREAD_NOT_EXITED, THREAD_EXIT_ERROR} thread_exited_status_t;1225,49051
#define SEC_LARGE_PAGES 1414,53809
# define SEC_VLM 1417,53984
#define SEC_BASED_UNSUPPORTED 1420,54111
#define SEC_NO_CHANGE_UNSUPPORTED 1421,54156
typedef enum _reg_query_value_result 1448,54901
    REG_QUERY_FAILURE,1449,54940
    REG_QUERY_BUFFER_TOO_SMALL,1450,54963
    REG_QUERY_SUCCESS1451,54995
} reg_query_value_result_t;1452,55017
#define LengthRequiredSID(1478,55744
# define SECURITY_MAX_SID_SIZE 1484,56032
#define SECURITY_MAX_TOKEN_SIZE 1491,56233
#define FILE_ANY_ACCESS 1535,57646
#define FILE_SPECIAL_ACCESS 1536,57688
#define FILE_READ_ACCESS 1537,57737
#define FILE_WRITE_ACCESS 1538,57800
#define FILE_SHARE_VALID_FLAGS 1541,57917
#define FILE_ATTRIBUTE_VALID_FLAGS 1544,58026
#define FILE_ATTRIBUTE_VALID_SET_FLAGS 1545,58081
#define FILE_DIRECTORY_FILE 1549,58220
#define FILE_WRITE_THROUGH 1550,58279
#define FILE_SEQUENTIAL_ONLY 1551,58338
#define FILE_NO_INTERMEDIATE_BUFFERING 1552,58397
#define FILE_SYNCHRONOUS_IO_ALERT 1554,58457
#define FILE_SYNCHRONOUS_IO_NONALERT 1555,58516
#define FILE_NON_DIRECTORY_FILE 1556,58575
#define FILE_CREATE_TREE_CONNECTION 1557,58634
#define FILE_COMPLETE_IF_OPLOCKED 1559,58694
#define FILE_NO_EA_KNOWLEDGE 1560,58753
#define FILE_OPEN_FOR_RECOVERY 1561,58812
#define FILE_OPEN_REMOTE_INSTANCE 1562,58871
#define FILE_RANDOM_ACCESS 1563,58945
#define FILE_DELETE_ON_CLOSE 1565,59005
#define FILE_OPEN_BY_FILE_ID 1566,59064
#define FILE_OPEN_FOR_BACKUP_INTENT 1567,59123
#define FILE_NO_COMPRESSION 1568,59182
#define FILE_RESERVE_OPFILTER 1570,59242
#define FILE_OPEN_REPARSE_POINT 1571,59301
#define FILE_OPEN_NO_RECALL 1572,59360
#define FILE_OPEN_FOR_FREE_SPACE_QUERY 1573,59419
#define FILE_COPY_STRUCTURED_STORAGE 1575,59479
#define FILE_STRUCTURED_STORAGE 1576,59538
#define FILE_VALID_OPTION_FLAGS 1578,59598
#define FILE_VALID_PIPE_OPTION_FLAGS 1579,59657
#define FILE_VALID_MAILSLOT_OPTION_FLAGS 1580,59716
#define FILE_VALID_SET_FLAGS 1581,59775
#define FILE_SUPERSEDED 1584,59888
#define FILE_OPENED 1585,59927
#define FILE_CREATED 1586,59966
#define FILE_OVERWRITTEN 1587,60005
#define FILE_EXISTS 1588,60044
#define FILE_DOES_NOT_EXIST 1589,60083
#define FILE_SUPERSEDE 1592,60165
#define FILE_OPEN 1593,60216
#define FILE_CREATE 1594,60267
#define FILE_OPEN_IF 1595,60318
#define FILE_OVERWRITE 1596,60369
#define FILE_OVERWRITE_IF 1597,60420
#define FILE_MAXIMUM_DISPOSITION 1598,60471
#define FILE_DISPOSITION_SET_OWNER 1601,60593
#define FILE_WRITE_TO_END_OF_FILE 1604,60695
#define FILE_USE_FILE_POINTER_POSITION 1605,60746
# define STATUS_PENDING 1612,61104
#define FILE_DEVICE_FILE_SYSTEM 1616,61187
#define FILE_DEVICE_NAMED_PIPE 1617,61238
#define STATUS_NOT_IMPLEMENTED 1622,61408
#define STATUS_INFO_LENGTH_MISMATCH 1624,61474
#define STATUS_NOT_IMPLEMENTED 1627,61590
#define STATUS_NO_SUCH_FILE 1630,61687
#define STATUS_CONFLICTING_ADDRESSES 1633,61850
#define STATUS_END_OF_FILE 1638,62022
#define STATUS_INVALID_ADDRESS 1641,62151
#define STATUS_BUFFER_OVERFLOW 1644,62282
#define STATUS_NO_MORE_FILES 1647,62415
#define STATUS_INVALID_FILE_FOR_SECTION 1651,62587
#define STATUS_ACCESS_DENIED 1655,62770
#define STATUS_BUFFER_TOO_SMALL 1659,62940
#define STATUS_OBJECT_TYPE_MISMATCH 1664,63156
#define STATUS_OBJECT_NAME_INVALID 1667,63249
#define STATUS_OBJECT_NAME_NOT_FOUND 1670,63345
#define STATUS_OBJECT_NAME_COLLISION 1673,63451
#define STATUS_OBJECT_PATH_INVALID 1676,63573
#define STATUS_OBJECT_PATH_NOT_FOUND 1679,63670
#define STATUS_SECTION_TOO_BIG 1682,63792
#define STATUS_SHARING_VIOLATION 1685,63938
#define STATUS_INVALID_PAGE_PROTECTION 1688,64055
#define STATUS_FILE_LOCK_CONFLICT 1691,64200
#define STATUS_DELETE_PENDING 1694,64354
#define STATUS_FILE_INVALID 1699,64527
#define STATUS_FILE_IS_A_DIRECTORY 1704,64727
#define STATUS_OBJECT_NAME_EXISTS 1707,64885
#define STATUS_IMAGE_NOT_AT_BASE 1713,65120
#  define STATUS_NO_MEMORY 1718,65343
#define STATUS_PAGEFILE_QUOTA_EXCEEDED 1723,65556
#define STATUS_COMMITMENT_LIMIT 1730,65838
#define STATUS_COMMITMENT_MINIMUM 1740,66313
#define EXCEPTION_THROWN 1743,66447
#define STATUS_PROCESS_NOT_IN_JOB 1747,66590
#define STATUS_PROCESS_IN_JOB 1749,66702
#define STATUS_NO_SUCH_PRIVILEGE 1752,66812
#define STATUS_PRIVILEGE_NOT_HELD 1754,66932
#define STATUS_CALLBACK_POP_STACK 1757,67069
#define STATUS_INVALID_INFO_CLASS 1760,67162
#define STATUS_MAPPED_FILE_SIZE_ZERO 1765,67326
#define STATUS_PARTIAL_COPY 1767,67392
# define STATUS_INVALID_PARAMETER 1771,67555
#define STATUS_NOT_MAPPED_DATA 1775,67688
#define STATUS_INVALID_PARAMETER_1 1778,67840
#define STATUS_INVALID_PARAMETER_2 1781,67993
#define STATUS_INVALID_PARAMETER_3 1784,68145
#define STATUS_INVALID_PARAMETER_4 1787,68298
#define STATUS_INVALID_PARAMETER_5 1790,68450
#define STATUS_INVALID_PARAMETER_6 1793,68602
#define STATUS_INVALID_PARAMETER_7 1796,68756
#define STATUS_INVALID_PARAMETER_8 1799,68909
#define STATUS_INVALID_PARAMETER_9 1802,69061
#define STATUS_INVALID_PARAMETER_10 1805,69213
#define STATUS_INVALID_PARAMETER_11 1808,69368
#define STATUS_INVALID_PARAMETER_12 1811,69522
#define STATUS_THREAD_IS_TERMINATING 1814,69661
#define STATUS_PROCESS_IS_TERMINATING 1817,69783
#define STATUS_NOT_A_REPARSE_POINT 1820,69906
# define IMAGE_SIZEOF_BASE_RELOCATION 1824,70064
typedef struct _FILE_STANDARD_INFORMATION 1865,71387
    LARGE_INTEGER AllocationSize;1866,71448
    LARGE_INTEGER EndOfFile;1867,71509
    ULONG NumberOfLinks;1868,71570
    BOOLEAN DeletePending;1869,71631
    BOOLEAN Directory;1870,71692
} FILE_STANDARD_INFORMATION, *PFILE_STANDARD_INFORMATION;PFILE_STANDARD_INFORMATION1871,71753
typedef struct _FILE_INTERNAL_INFORMATION 1873,71815
    LARGE_INTEGER IndexNumber;1874,71859
} FILE_INTERNAL_INFORMATION, *PFILE_INTERNAL_INFORMATION;PFILE_INTERNAL_INFORMATION1875,71890
typedef struct _FILE_POSITION_INFORMATION 1877,71999
    LARGE_INTEGER CurrentByteOffset;1878,72060
} FILE_POSITION_INFORMATION, *PFILE_POSITION_INFORMATION;PFILE_POSITION_INFORMATION1879,72121
typedef struct _FILE_ALIGNMENT_INFORMATION 1881,72243
    ULONG AlignmentRequirement;1882,72304
} FILE_ALIGNMENT_INFORMATION, *PFILE_ALIGNMENT_INFORMATION;PFILE_ALIGNMENT_INFORMATION1883,72365
#define MAX_FILE_NAME_LENGTH 1885,72487
typedef struct _FILE_NAME_INFORMATION 1886,72525
    ULONG FileNameLength;1887,72586
    WCHAR FileName[FileName1888,72642
} FILE_NAME_INFORMATION, *PFILE_NAME_INFORMATION;PFILE_NAME_INFORMATION1891,72807
typedef struct _FILE_RENAME_INFORMATION 1893,72918
    BOOLEAN ReplaceIfExists;1894,72960
    HANDLE RootDirectory;1895,72989
    ULONG FileNameLength;1896,73015
    WCHAR FileName[FileName1897,73041
} FILE_RENAME_INFORMATION, *PFILE_RENAME_INFORMATION;PFILE_RENAME_INFORMATION1898,73083
typedef struct _FILE_ATTRIBUTE_TAG_INFORMATION 1900,73138
    ULONG FileAttributes;1901,73202
    ULONG ReparseTag;1902,73267
} FILE_ATTRIBUTE_TAG_INFORMATION, *PFILE_ATTRIBUTE_TAG_INFORMATION;PFILE_ATTRIBUTE_TAG_INFORMATION1903,73332
typedef struct _FILE_DISPOSITION_INFORMATION 1905,73467
    BOOLEAN DeleteFile;1906,73532
} FILE_DISPOSITION_INFORMATION, *PFILE_DISPOSITION_INFORMATION;PFILE_DISPOSITION_INFORMATION1907,73597
typedef struct _FILE_END_OF_FILE_INFORMATION 1909,73727
    LARGE_INTEGER EndOfFile;1910,73792
} FILE_END_OF_FILE_INFORMATION, *PFILE_END_OF_FILE_INFORMATION;PFILE_END_OF_FILE_INFORMATION1911,73857
typedef struct _FILE_VALID_DATA_LENGTH_INFORMATION 1913,73987
    LARGE_INTEGER ValidDataLength;1914,74076
} FILE_VALID_DATA_LENGTH_INFORMATION, *PFILE_VALID_DATA_LENGTH_INFORMATION;PFILE_VALID_DATA_LENGTH_INFORMATION1915,74165
typedef enum {WAIT_TIMEDOUT,WAIT_TIMEDOUT1924,74408
typedef enum {WAIT_TIMEDOUT, WAIT_SIGNALED,1924,74408
typedef enum {WAIT_TIMEDOUT, WAIT_SIGNALED, WAIT_ERROR}WAIT_ERROR1924,74408
typedef enum {WAIT_TIMEDOUT, WAIT_SIGNALED, WAIT_ERROR} wait_status_t;1924,74408
#define INFINITE_WAIT 1925,74479
#define TIMER_UNITS_PER_MILLISECOND 1946,75039
#define GET_OWN_CONTEXT(2022,77834
    X64_PEB_TIB_OFFSET 2049,79061
    X64_PEB_TIB_OFFSET        = 0x060,x0602049,79061
    X64_LDR_PEB_OFFSET 2050,79100
    X64_LDR_PEB_OFFSET        = 0x018,x0182050,79100
typedef struct _module_handle_t *module_handle_t;module_handle_t2096,80439
typedef void *module_base_t;module_base_t2097,80489
#define __IMAGE_COR20_HEADER_DEFINED__2112,80794
typedef enum replaces_cor_hdr_numeric_defines_t2114,80834
    COMIMAGE_FLAGS_ILONLY 2117,80918
    COMIMAGE_FLAGS_ILONLY               =0x00000001,x000000012117,80918
    COMIMAGE_FLAGS_32BITREQUIRED 2118,80971
    COMIMAGE_FLAGS_32BITREQUIRED        =0x00000002,x000000022118,80971
    COMIMAGE_FLAGS_IL_LIBRARY 2119,81024
    COMIMAGE_FLAGS_IL_LIBRARY           =0x00000004,x000000042119,81024
    COMIMAGE_FLAGS_STRONGNAMESIGNED 2120,81077
    COMIMAGE_FLAGS_STRONGNAMESIGNED     =0x00000008,x000000082120,81077
    COMIMAGE_FLAGS_TRACKDEBUGDATA 2121,81130
    COMIMAGE_FLAGS_TRACKDEBUGDATA       =0x00010000,x000100002121,81130
    COR_VERSION_MAJOR_V2 2124,81212
    COR_VERSION_MAJOR 2125,81256
    COR_VERSION_MAJOR                   =COR_VERSION_MAJOR_V2,2125,81256
    COR_VERSION_MINOR 2126,81319
    COR_DELETED_NAME_LENGTH 2127,81363
    COR_VTABLEGAP_NAME_LENGTH 2128,81407
    NATIVE_TYPE_MAX_CB 2131,81496
    COR_ILMETHOD_SECT_SMALL_MAX_DATASIZE=2132,81543
    COR_ILMETHOD_SECT_SMALL_MAX_DATASIZE=0xFF,xFF2132,81543
    IMAGE_COR_MIH_METHODRVA 2135,81621
    IMAGE_COR_MIH_METHODRVA             =0x01,x012135,81621
    IMAGE_COR_MIH_EHRVA 2136,81668
    IMAGE_COR_MIH_EHRVA                 =0x02,x022136,81668
    IMAGE_COR_MIH_BASICBLOCK 2137,81719
    IMAGE_COR_MIH_BASICBLOCK            =0x08,x082137,81719
    COR_VTABLE_32BIT 2140,81788
    COR_VTABLE_32BIT                    =0x01,x012140,81788
    COR_VTABLE_64BIT 2141,81885
    COR_VTABLE_64BIT                    =0x02,x022141,81885
    COR_VTABLE_FROM_UNMANAGED 2142,81982
    COR_VTABLE_FROM_UNMANAGED           =0x04,x042142,81982
    COR_VTABLE_CALL_MOST_DERIVED 2143,82076
    COR_VTABLE_CALL_MOST_DERIVED        =0x10,x102143,82076
    IMAGE_COR_EATJ_THUNK_SIZE 2146,82192
    MAX_CLASS_NAME 2150,82360
    MAX_PACKAGE_NAME 2151,82407
} replaces_cor_hdr_numeric_defines_t;2152,82454
typedef struct IMAGE_COR20_HEADER2155,82523
    DWORD                   cb;2158,82584
    WORD                    MajorRuntimeVersion;2159,82630
    WORD                    MinorRuntimeVersion;2160,82679
    IMAGE_DATA_DIRECTORY    MetaData;2163,82777
    DWORD                   Flags;2164,82823
    DWORD                   EntryPointToken;2165,82869
    IMAGE_DATA_DIRECTORY    Resources;2168,82946
    IMAGE_DATA_DIRECTORY    StrongNameSignature;2169,82985
    IMAGE_DATA_DIRECTORY    CodeManagerTable;2172,83080
    IMAGE_DATA_DIRECTORY    VTableFixups;2173,83126
    IMAGE_DATA_DIRECTORY    ExportAddressTableJumps;2174,83168
    IMAGE_DATA_DIRECTORY    ManagedNativeHeader;2177,83286
} IMAGE_COR20_HEADER, *PIMAGE_COR20_HEADER;PIMAGE_COR20_HEADER2179,83340
#define IMAGE_SCN_ALIGN_MASK 2185,83457
#define MAX_OBJECT_NAME_LENGTH 2205,84133
typedef struct _OBJECT_NAME_INFORMATION 2206,84173
    UNICODE_STRING ObjectName;2207,84215
    wchar_t object_name_buffer[object_name_buffer2210,84364
} OBJECT_NAME_INFORMATION, *POBJECT_NAME_INFORMATION;POBJECT_NAME_INFORMATION2211,84420
#define HEAP_CLASS_PRIVATE 2441,93429

win32/ntdll_imports.c,3611
#define WIN32_LEAN_AND_MEAN39,1940
#define NTEXPORT 47,2055
KiUserApcDispatcher(54,2203
KiUserCallbackDispatcher(63,2419
KiUserExceptionDispatcher(70,2569
KiRaiseUserExceptionDispatcher(76,2679
NtAllocateVirtualMemory(85,2833
NtQueryVirtualMemory(96,3177
NtFreeVirtualMemory(107,3563
NtProtectVirtualMemory(116,3795
NtCreateFile(126,4089
NtWriteVirtualMemory(143,4620
NtGetContextThread(154,4911
NtSetContextThread(161,5051
NtSuspendThread(168,5190
NtResumeThread(175,5344
NtTerminateThread(182,5496
NtClose(189,5645
NtDuplicateObject(195,5727
NtCreateSection(207,6100
NtOpenSection(219,6466
NtMapViewOfSection(227,6661
NtUnmapViewOfSection(242,7254
NtCallbackReturn(250,7417
NtTestAlert(258,7593
NtContinue(265,7668
NtQueryInformationThread(272,7789
NtQueryInformationProcess(283,8135
NtQueryInformationFile(294,8491
NtSetInformationFile(305,8829
NtQuerySection(316,9156
NtOpenFile(327,9466
NtOpenThreadToken(339,9763
NtOpenProcessToken(348,9997
NtQueryInformationToken(356,10189
NtYieldExecution(366,10524
NtQuerySystemInformation(373,10604
NtOpenProcess(382,10867
NtSetInformationThread(391,11100
NtReadVirtualMemory(400,11377
NtCreateTimer(410,11663
NtSetTimer(419,11907
NtDelayExecution(431,12227
NtQueryObject(438,12367
NtQueryFullAttributesFile(448,12666
NtCreateKey(455,12850
NtOpenKey(467,13196
NtSetValueKey(475,13375
NtDeleteKey(486,13645
NtQueryValueKey(493,13735
NtFlushKey(504,14068
NtEnumerateKey(511,14157
NtEnumerateValueKey(522,14447
NtQuerySystemTime(533,14773
NtDeleteFile(540,14878
NtFlushBuffersFile(547,14989
NtReadFile(554,15141
NtWriteFile(568,15548
NtCreateIoCompletion(582,15997
NtRaiseHardError(591,16275
NtRaiseException(603,16700
NtCreateEvent(611,16891
NtWaitForSingleObject(621,17162
NtSetEvent(629,17358
NtClearEvent(636,17493
NtSignalAndWaitForSingleObject(643,17586
NtQueryPerformanceCounter(652,17873
NtFsControlFile(659,18068
NtCancelIoFile(674,18708
NtCreateProfile(681,18852
NtSetIntervalProfile(695,19248
NtQueryIntervalProfile(702,19392
NtStartProfile(709,19542
NtStopProfile(716,19639
NtCreateProcess(723,19735
NtTerminateProcess(736,20177
NtCreateDirectoryObject(743,20329
NtOpenDirectoryObject(751,20556
NtOpenSymbolicLinkObject(759,20777
NtQuerySymbolicLinkObject(767,21007
ZwAreMappedFilesTheSame(775,21237
NtQueryVolumeInformationFile(782,21379
NtQuerySecurityObject(792,21724
NtQueueApcThread(803,22082
NtCreateThread(813,22367
NtOpenThread(826,22770
NtFlushInstructionCache(835,22998
NtQueryAttributesFile(843,23203
NtCreateNamedPipeFile(850,23383
NtDeviceIoControlFile(869,24140
NtQueryDirectoryFile(884,24715
NtFlushVirtualMemory(900,25355
RtlInitializeCriticalSection(913,25701
RtlDeleteCriticalSection(920,25819
RtlEnterCriticalSection(927,25929
RtlLeaveCriticalSection(934,26045
RtlTryEnterCriticalSection(941,26161
RtlInitUnicodeString(948,26280
RtlInitAnsiString(955,26444
RtlFreeUnicodeString(962,26594
RtlFreeAnsiString(967,26664
RtlFreeOemString(972,26728
RtlQueryEnvironmentVariable_U(977,26794
RtlConvertSidToUnicodeString(985,27004
RtlCreateProcessParameters(993,27230
RtlDestroyProcessParameters(1008,27942
RtlCreateHeap(1015,28076
RtlDestroyHeap(1022,28264
RtlAllocateHeap(1028,28346
RtlReAllocateHeap(1034,28445
RtlFreeHeap(1040,28555
RtlSizeHeap(1046,28649
RtlValidateHeap(1052,28737
RtlLockHeap(1059,28834
RtlUnlockHeap(1065,28902
RtlGetProcessHeaps(1071,28976
RtlWalkHeap(1078,29105
LdrLoadDll(1089,29306
LdrUnloadDll(1098,29524
LdrGetProcedureAddress(1105,29618
LdrGetDllHandle(1114,29888
CsrClientCallServer(1127,30215

win32/ntdll_types.h,14687
#define _NTDLL_TYPES_H_ 17,785
typedef unsigned int uint;28,1086
typedef LONG NTSTATUS;29,1113
#define NT_SUCCESS(31,1191
#define NT_ERROR(32,1244
#define STATUS_SUCCESS 33,1302
#define STATUS_UNSUCCESSFUL 34,1349
typedef struct _UNICODE_STRING 36,1402
    USHORT Length;38,1496
    USHORT MaximumLength;39,1515
    PWSTR  Buffer;40,1541
} UNICODE_STRING;41,1560
typedef UNICODE_STRING *PUNICODE_STRING;PUNICODE_STRING42,1578
typedef struct _STRING 44,1620
  USHORT  Length;45,1645
  USHORT  MaximumLength;46,1663
  PCHAR  Buffer;47,1688
} ANSI_STRING;48,1705
typedef ANSI_STRING *PANSI_STRING;PANSI_STRING49,1720
typedef ANSI_STRING OEM_STRING;50,1755
typedef struct _OBJECT_ATTRIBUTES 52,1788
    ULONG Length;53,1824
    HANDLE RootDirectory;54,1842
    PUNICODE_STRING ObjectName;55,1868
    ULONG Attributes;56,1900
    PSECURITY_DESCRIPTOR SecurityDescriptor;57,1922
    PVOID SecurityQualityOfService;58,1967
} OBJECT_ATTRIBUTES;59,2050
typedef OBJECT_ATTRIBUTES *POBJECT_ATTRIBUTES;POBJECT_ATTRIBUTES60,2071
#define InitializeObjectAttributes(62,2119
#define OBJ_INHERIT 72,2579
#define OBJ_PERMANENT 73,2623
#define OBJ_EXCLUSIVE 74,2667
#define OBJ_CASE_INSENSITIVE 75,2711
#define OBJ_OPENIF 76,2755
#define OBJ_OPENLINK 77,2799
#define OBJ_KERNEL_HANDLE 78,2843
#define OBJ_FORCE_ACCESS_CHECK 79,2936
typedef ULONG ACCESS_MASK;81,3017
typedef enum _SECTION_INHERIT 84,3064
    ViewShare 85,3096
    ViewUnmap 86,3115
} SECTION_INHERIT;87,3133
typedef struct _CLIENT_ID 89,3153
    HANDLE UniqueProcess;91,3213
    HANDLE UniqueThread;92,3239
} CLIENT_ID;93,3264
typedef CLIENT_ID *PCLIENT_ID;PCLIENT_ID94,3277
typedef enum _MEMORY_INFORMATION_CLASS 96,3309
    MemoryBasicInformation,97,3350
    MemoryWorkingSetList,98,3378
    MemorySectionName,99,3404
    MemoryBasicVlmInformation100,3427
} MEMORY_INFORMATION_CLASS;101,3457
typedef enum _PROCESSINFOCLASS 104,3539
    ProcessBasicInformation,105,3572
    ProcessQuotaLimits,106,3601
    ProcessIoCounters,107,3625
    ProcessVmCounters,108,3648
    ProcessTimes,109,3671
    ProcessBasePriority,110,3689
    ProcessRaisePriority,111,3714
    ProcessDebugPort,112,3740
    ProcessExceptionPort,113,3762
    ProcessAccessToken,114,3788
    ProcessLdtInformation,115,3812
    ProcessLdtSize,116,3839
    ProcessDefaultHardErrorMode,117,3859
    ProcessIoPortHandlers,118,3892
    ProcessPooledUsageAndLimits,119,3962
    ProcessWorkingSetWatch,120,3995
    ProcessUserModeIOPL,121,4023
    ProcessEnableAlignmentFaultFixup,122,4048
    ProcessPriorityClass,123,4086
    ProcessWx86Information,124,4112
    ProcessHandleCount,125,4140
    ProcessAffinityMask,126,4164
    ProcessPriorityBoost,127,4189
    ProcessDeviceMap,128,4215
    ProcessSessionInformation,129,4237
    ProcessForegroundInformation,130,4268
    ProcessWow64Information,131,4302
    ProcessImageFileName,133,4357
    ProcessLUIDDeviceMapsEnabled,134,4383
    ProcessBreakOnTermination,135,4417
    ProcessDebugObjectHandle,136,4448
    ProcessDebugFlags,137,4478
    ProcessHandleTracing,138,4501
    ProcessIoPriority,139,4527
    ProcessExecuteFlags,140,4550
    ProcessResourceManagement,141,4575
    ProcessCookie,142,4606
    ProcessImageInformation,143,4625
    MaxProcessInfoClass 144,4654
} PROCESSINFOCLASS;145,4744
typedef enum _THREADINFOCLASS 148,4798
    ThreadBasicInformation,149,4830
    ThreadTimes,150,4858
    ThreadPriority,151,4875
    ThreadBasePriority,152,4895
    ThreadAffinityMask,153,4919
    ThreadImpersonationToken,154,4943
    ThreadDescriptorTableEntry,155,4973
    ThreadEnableAlignmentFaultFixup,156,5005
    ThreadEventPair_Reusable,157,5042
    ThreadQuerySetWin32StartAddress,158,5072
    ThreadZeroTlsCell,159,5109
    ThreadPerformanceCount,160,5132
    ThreadAmILastThread,161,5160
    ThreadIdealProcessor,162,5185
    ThreadPriorityBoost,163,5211
    ThreadSetTlsArrayAddress,164,5236
    ThreadIsIoPending,165,5266
    ThreadHideFromDebugger,166,5289
    MaxThreadInfoClass167,5317
} THREADINFOCLASS;168,5340
typedef struct _USER_STACK 170,5360
    PVOID FixedStackBase;171,5389
    PVOID FixedStackLimit;172,5415
    PVOID ExpandableStackBase;173,5442
    PVOID ExpandableStackLimit;174,5473
    PVOID ExpandableStackBottom;175,5505
} USER_STACK, *PUSER_STACK;PUSER_STACK176,5538
typedef enum _SECTION_INFORMATION_CLASS 178,5567
    SectionBasicInformation,179,5609
    SectionImageInformation180,5638
} SECTION_INFORMATION_CLASS;181,5666
typedef struct _SECTION_BASIC_INFORMATION 183,5696
    PVOID BaseAddress;184,5763
    ULONG Attributes;185,5786
    LARGE_INTEGER Size;186,5808
} SECTION_BASIC_INFORMATION, *PSECTION_BASIC_INFORMATION;PSECTION_BASIC_INFORMATION187,5832
typedef struct _SECTION_IMAGE_INFORMATION 189,5891
    PVOID EntryPoint;190,5958
    ULONG Unknown1;191,5980
    ULONG StackReserve;192,6000
    ULONG StackCommit;193,6024
    ULONG Subsystem;194,6047
    USHORT MinorSubsystemVersion;195,6068
    USHORT MajorSubsystemVersion;196,6102
    ULONG Unknown2;197,6136
    ULONG Characteristics;198,6156
    USHORT ImageNumber;199,6183
    BOOLEAN Executable;200,6207
    UCHAR Unknown3;201,6231
    ULONG Unknown4[Unknown4202,6251
} SECTION_IMAGE_INFORMATION, *PSECTION_IMAGE_INFORMATION;PSECTION_IMAGE_INFORMATION203,6274
typedef struct _IO_STATUS_BLOCK 205,6333
        NTSTATUS Status;207,6379
        PVOID Pointer;208,6404
    ULONG_PTR Information;210,6434
} IO_STATUS_BLOCK, *PIO_STATUS_BLOCK;PIO_STATUS_BLOCK211,6461
typedef enum _KPROFILE_SOURCE 213,6500
    ProfileTime214,6532
} KPROFILE_SOURCE;215,6548
typedef enum _OBJECT_INFORMATION_CLASS 217,6568
    ObjectBasicInformation,218,6609
    ObjectNameInformation,219,6637
    ObjectTypeInformation,220,6664
    ObjectAllTypesInformation,221,6691
    ObjectHandleInformation 222,6722
} OBJECT_INFORMATION_CLASS;223,6779
typedef struct _OBJECT_BASIC_INFORMATION 225,6808
    ULONG Attributes;226,6851
    ACCESS_MASK GrantedAccess;227,6873
    ULONG HandleCount;228,6904
    ULONG PointerCount;229,6927
    ULONG PagePoolUsage;230,6951
    ULONG NonPagedPoolUsage;231,6976
    ULONG Reserved[Reserved232,7005
    ULONG NameInformationLength;233,7028
    ULONG TypeInformationLength;234,7061
    ULONG SecurityDescriptorLength;235,7094
    LARGE_INTEGER CreateTime;236,7130
} OBJECT_BASIC_INFORMATION, *POBJECT_BASIC_INFORMATION;POBJECT_BASIC_INFORMATION237,7160
typedef enum _FILE_INFORMATION_CLASS 242,7318
    FileDirectoryInformation 243,7357
    FileFullDirectoryInformation,244,7399
    FileBothDirectoryInformation,245,7440
    FileBasicInformation,246,7481
    FileStandardInformation,247,7527
    FileInternalInformation,248,7573
    FileEaInformation,249,7614
    FileAccessInformation,250,7655
    FileNameInformation,251,7696
    FileRenameInformation,252,7737
    FileLinkInformation,253,7779
    FileNamesInformation,254,7821
    FileDispositionInformation,255,7863
    FilePositionInformation,256,7905
    FileFullEaInformation,257,7951
    FileModeInformation,258,7993
    FileAlignmentInformation,259,8035
    FileAllInformation,260,8077
    FileAllocationInformation,261,8119
    FileEndOfFileInformation,262,8161
    FileAlternateNameInformation,263,8207
    FileStreamInformation,264,8249
    FilePipeInformation,265,8291
    FilePipeLocalInformation,266,8333
    FilePipeRemoteInformation,267,8375
    FileMailslotQueryInformation,268,8417
    FileMailslotSetInformation,269,8459
    FileCompressionInformation,270,8501
    FileObjectIdInformation,271,8543
    FileCompletionInformation,272,8585
    FileMoveClusterInformation,273,8627
    FileQuotaInformation,274,8669
    FileReparsePointInformation,275,8711
    FileNetworkOpenInformation,276,8753
    FileAttributeTagInformation,277,8795
    FileTrackingInformation,278,8837
    FileIdBothDirectoryInformation,279,8879
    FileIdFullDirectoryInformation,280,8921
    FileValidDataLengthInformation,282,9020
    FileShortNameInformation,283,9062
    FileMaximumInformation284,9104
} FILE_INFORMATION_CLASS, *PFILE_INFORMATION_CLASS;PFILE_INFORMATION_CLASS285,9131
typedef struct _FILE_BASIC_INFORMATION 290,9284
    LARGE_INTEGER CreationTime;291,9325
    LARGE_INTEGER LastAccessTime;292,9357
    LARGE_INTEGER LastWriteTime;293,9391
    LARGE_INTEGER ChangeTime;294,9424
    ULONG FileAttributes;295,9454
} FILE_BASIC_INFORMATION, *PFILE_BASIC_INFORMATION;PFILE_BASIC_INFORMATION296,9480
typedef enum _FS_INFORMATION_CLASS 302,9750
    FileFsVolumeInformation=303,9787
    FileFsLabelInformation,304,9818
    FileFsSizeInformation,305,9878
    FileFsDeviceInformation,306,9905
    FileFsAttributeInformation,307,9934
    FileFsControlInformation,308,9966
    FileFsFullSizeInformation,309,9996
    FileFsObjectIdInformation,310,10027
    FileFsDriverPathInformation,311,10058
    FileFsMaximumInformation312,10108
} FS_INFORMATION_CLASS, *PFS_INFORMATION_CLASS;PFS_INFORMATION_CLASS313,10137
typedef struct _FILE_FS_SIZE_INFORMATION 315,10186
    LARGE_INTEGER TotalAllocationUnits;316,10229
    LARGE_INTEGER AvailableAllocationUnits;317,10269
    ULONG SectorsPerAllocationUnit;318,10313
    ULONG BytesPerSector;319,10349
} FILE_FS_SIZE_INFORMATION, *PFILE_FS_SIZE_INFORMATION;PFILE_FS_SIZE_INFORMATION320,10375
typedef struct _FILE_FS_DEVICE_INFORMATION 322,10432
    ULONG /*DEVICE_TYPE*/ DeviceType;323,10477
    ULONG Characteristics;324,10515
} FILE_FS_DEVICE_INFORMATION, *PFILE_FS_DEVICE_INFORMATION;PFILE_FS_DEVICE_INFORMATION325,10542
typedef struct _FILE_FS_VOLUME_INFORMATION 327,10603
    LARGE_INTEGER VolumeCreationTime;328,10648
    ULONG VolumeSerialNumber;329,10686
    ULONG VolumeLabelLength;330,10716
    BOOLEAN SupportsObjects;331,10745
    WCHAR VolumeLabel[VolumeLabel332,10774
} FILE_FS_VOLUME_INFORMATION, *PFILE_FS_VOLUME_INFORMATION;PFILE_FS_VOLUME_INFORMATION333,10800
#define FILE_REMOVABLE_MEDIA 336,10910
#define FILE_READ_ONLY_DEVICE 337,10969
#define FILE_FLOPPY_DISKETTE 338,11028
#define FILE_WRITE_ONCE_MEDIA 339,11087
#define FILE_REMOTE_DEVICE 340,11146
typedef struct _FILE_FS_FULL_SIZE_INFORMATION 342,11206
    LARGE_INTEGER TotalAllocationUnits;343,11254
    LARGE_INTEGER CallerAvailableAllocationUnits;344,11294
    LARGE_INTEGER ActualAvailableAllocationUnits;345,11344
    ULONG SectorsPerAllocationUnit;346,11394
    ULONG BytesPerSector;347,11430
} FILE_FS_FULL_SIZE_INFORMATION, *PFILE_FS_FULL_SIZE_INFORMATION;PFILE_FS_FULL_SIZE_INFORMATION348,11456
typedef struct _FILE_NETWORK_OPEN_INFORMATION 350,11523
    LARGE_INTEGER CreationTime;351,11571
    LARGE_INTEGER LastAccessTime;352,11603
    LARGE_INTEGER LastWriteTime;353,11637
    LARGE_INTEGER ChangeTime;354,11670
    LARGE_INTEGER AllocationSize;355,11700
    LARGE_INTEGER EndOfFile;356,11734
    ULONG   FileAttributes;357,11763
} FILE_NETWORK_OPEN_INFORMATION, *PFILE_NETWORK_OPEN_INFORMATION;PFILE_NETWORK_OPEN_INFORMATION358,11791
typedef enum _KEY_VALUE_INFORMATION_CLASS 360,11858
    KeyValueBasicInformation,361,11902
    KeyValueFullInformation,362,11932
    KeyValuePartialInformation,363,11961
    KeyValueFullInformationAlign64,364,11993
    KeyValuePartialInformationAlign64365,12029
} KEY_VALUE_INFORMATION_CLASS;366,12067
typedef struct _KEY_VALUE_FULL_INFORMATION 368,12099
    ULONG   TitleIndex;369,12144
    ULONG   Type;370,12168
    ULONG   DataOffset;371,12186
    ULONG   DataLength;372,12210
    ULONG   NameLength;373,12234
    WCHAR   Name[Name374,12258
} KEY_VALUE_FULL_INFORMATION, *PKEY_VALUE_FULL_INFORMATION;PKEY_VALUE_FULL_INFORMATION376,12374
typedef struct _KEY_VALUE_PARTIAL_INFORMATION 378,12435
    ULONG   TitleIndex;379,12483
    ULONG   Type;380,12507
    ULONG   DataLength;381,12525
    UCHAR   Data[Data382,12549
} KEY_VALUE_PARTIAL_INFORMATION, *PKEY_VALUE_PARTIAL_INFORMATION;PKEY_VALUE_PARTIAL_INFORMATION383,12598
typedef enum _KEY_INFORMATION_CLASS 385,12665
    KeyBasicInformation,386,12703
    KeyNodeInformation,387,12728
    KeyFullInformation,388,12752
    KeyNameInformation389,12776
} KEY_INFORMATION_CLASS;390,12799
typedef struct _KEY_NAME_INFORMATION 392,12825
    ULONG   NameLength;393,12864
    WCHAR   Name[Name394,12888
} KEY_NAME_INFORMATION, *PKEY_NAME_INFORMATION;PKEY_NAME_INFORMATION395,12937
typedef enum _SYSTEM_INFORMATION_CLASS 397,12986
    SystemBasicInformation 398,13027
    SystemProcessorInformation 399,13059
    SystemPerformanceInformation 400,13095
    SystemTimeOfDayInformation 401,13133
    SystemProcessesAndThreadsInformation 402,13169
    SystemProcessorTimes 403,13215
    SystemGlobalFlag 404,13245
    SystemModuleInformation 405,13271
    SystemLockInformation 406,13305
    SystemHandleInformation 407,13337
    SystemObjectInformation 408,13371
} SYSTEM_INFORMATION_CLASS;410,13437
typedef enum _EVENT_TYPE 413,13498
    NotificationEvent,414,13525
    SynchronizationEvent 415,13627
} EVENT_TYPE, *PEVENT_TYPE;PEVENT_TYPE416,13735
(NTAPI *PIO_APC_ROUTINE)PIO_APC_ROUTINE421,13853
typedef VOID (NTAPI *  PKNORMAL_ROUTINE 427,14062
typedef struct _RTL_USER_PROCESS_PARAMETERS 432,14288
    ULONG MaximumLength;433,14334
    ULONG Length;434,14359
    ULONG Flags;435,14377
    ULONG DebugFlags;436,14394
    PVOID ConsoleHandle;437,14416
    ULONG ConsoleFlags;438,14441
    HANDLE StdInputHandle;439,14465
    HANDLE StdOutputHandle;440,14492
    HANDLE StdErrorHandle;441,14520
    UNICODE_STRING CurrentDirectoryPath;442,14547
    HANDLE CurrentDirectoryHandle;443,14588
    UNICODE_STRING DllPath;444,14623
    UNICODE_STRING ImagePathName;445,14651
    UNICODE_STRING CommandLine;446,14685
    PVOID Environment;447,14717
    ULONG StartingPositionLeft;448,14740
    ULONG StartingPositionTop;449,14772
    ULONG Width;450,14803
    ULONG Height;451,14820
    ULONG CharWidth;452,14838
    ULONG CharHeight;453,14859
    ULONG ConsoleTextAttributes;454,14881
    ULONG WindowFlags;455,14914
    ULONG ShowWindowFlags;456,14937
    UNICODE_STRING WindowTitle;457,14964
    UNICODE_STRING DesktopName;458,14996
    UNICODE_STRING ShellInfo;459,15028
    UNICODE_STRING RuntimeData;460,15058
} RTL_USER_PROCESS_PARAMETERS, *PRTL_USER_PROCESS_PARAMETERS;PRTL_USER_PROCESS_PARAMETERS462,15146
#define FILE_PIPE_BYTE_STREAM_TYPE 465,15264
#define FILE_PIPE_MESSAGE_TYPE 466,15319
#define FILE_PIPE_BYTE_STREAM_MODE 469,15434
#define FILE_PIPE_MESSAGE_MODE 470,15485
#define FILE_PIPE_QUEUE_OPERATION 473,15592
#define FILE_PIPE_COMPLETE_OPERATION 474,15643

win32/os.c,12038
# undef ASSERT66,2516
# undef ASSERT_NOT_IMPLEMENTED67,2531
# undef ASSERT_NOT_TESTED68,2562
# undef ASSERT_CURIOSITY_ONCE69,2588
# define ASSERT(70,2618
# define ASSERT_NOT_IMPLEMENTED(71,2651
# define ASSERT_NOT_TESTED(72,2700
# define ASSERT_CURIOSITY_ONCE(73,2744
# undef LOG74,2792
# define LOG(75,2804
#define WOW64_SYSCALL_SETUP_SIZE 96,3839
#define WOW64_SYSCALL_STACK_SIZE 98,3963
const byte *wow64_syscall_stack wow64_syscall_stack102,4205
bool intercept_asynch 106,4339
bool intercept_callbacks 107,4370
process_id_t win32_pid 109,4477
void *peb_ptr;peb_ptr111,4579
static int os_version;112,4594
static uint os_service_pack_major;113,4617
static uint os_service_pack_minor;114,4652
static const char *os_name;os_name115,4687
app_pc vsyscall_page_start 116,4715
app_pc vsyscall_after_syscall 118,4804
app_pc vsyscall_syscall_end_pc 120,4890
uint kilo_hertz;125,5123
#define HEAP_INITIAL_SIZE 128,5170
app_pc dynamo_dll_start 131,5251
app_pc dynamo_dll_end 132,5283
static app_pc dynamo_dll_preferred_base 135,5380
enum {TLS_UNINITIALIZED TLS_UNINITIALIZED138,5462
enum {TLS_UNINITIALIZED = (ushort)138,5462
enum {TLS_UNINITIALIZED = (ushort) 0U}U138,5462
static ushort tls_local_state_offs 139,5502
static ushort tls_dcontext_offs 141,5604
app_pc parent_early_inject_address 144,5686
static int early_inject_location 148,5932
static app_pc early_inject_address 149,5992
static app_pc ldrpLoadDll_address_not_NT 150,6035
static app_pc ldrpLoadDll_address_NT 151,6084
static app_pc ldrpLoadImportModule_address 152,6129
dcontext_t *early_inject_load_helper_dcontext early_inject_load_helper_dcontext153,6180
get_nth_stack_frames_call_target(185,7060
check_for_ldrpLoadImportModule(216,8120
#define STACK_DEPTH_LdrpLoadImportModule 252,9812
DllMainThreadAttach(271,10414
DllMain(295,11271
#define STACK_DEPTH_LdrpLoadDll_NT 333,13337
#define STACK_DEPTH_LdrpLoadDll 334,13374
static profile_t *global_profile global_profile363,14553
static profile_t *dynamo_dll_profile dynamo_dll_profile364,14594
static profile_t *ntdll_profile ntdll_profile365,14639
file_t profile_file 366,14679
get_dll_bounds(370,14813
init_global_profiles(396,15595
dump_dll_profile(466,18572
exit_global_profiles(485,19216
os_supports_avx(522,20316
get_context_xstate_flag(533,20615
windows_version_init(554,21553
print_mem_quota(738,30527
os_init(770,31773
print_mem_stats(978,40063
os_fast_exit(1003,41120
os_slow_exit(1096,44542
os_terminate_wow64_stack(1118,45216
os_terminate_wow64_write_args(1155,46687
#define KILL_PROC_EXIT_STATUS 1171,47338
#define KILL_THREAD_EXIT_STATUS 1172,47371
os_terminate_static_arguments(1176,47476
    typedef struct _terminate_args_t 1181,47642
            const byte *debug_code;debug_code1183,47697
            byte pad_bytes[pad_bytes1184,47733
        } padding;1185,47787
            IN HANDLE ProcessOrThreadHandle;1187,47823
            IN NTSTATUS ExitStatus;1188,47868
        } args;1189,47904
    } terminate_args_t;1190,47920
os_terminate_common(1279,51939
os_terminate_with_code(1406,58239
os_terminate(1413,58434
os_tls_init(1419,58574
os_tls_exit(1425,58687
os_tls_calloc(1434,58963
os_tls_cfree(1441,59152
os_thread_init(1448,59265
os_thread_exit(1475,60201
os_thread_stack_exit(1487,60574
os_thread_under_dynamo(1561,64343
os_thread_not_under_dynamo(1570,64641
typedef struct _takeover_data_t 1583,65102
    app_pc continuation_pc;1584,65136
    bool in_progress;1585,65164
    thread_id_t tid;1586,65186
    HANDLE thread_handle;1589,65282
    CONTEXT_64 *cxt64;cxt641590,65308
    byte *cxt64_alloc;cxt64_alloc1591,65331
    ptr_uint_t memval_stack;1593,65423
    ptr_uint_t memval_r14;1594,65452
} takeover_data_t;1596,65486
typedef struct _thread_list_t 1599,65528
    HANDLE handle;1600,65560
    thread_id_t tid;1601,65579
    void *user_data;user_data1602,65656
} thread_list_t;1603,65705
    TAKEOVER_NEW 1607,65770
    TAKEOVER_TRIED,1608,65822
    TAKEOVER_SUCCESS,1609,65842
static generic_table_t *takeover_table;takeover_table1623,66482
#define INIT_HTABLE_SIZE_TAKEOVER 1624,66522
#define INVALID_PAYLOAD 1625,66584
takeover_table_entry_free(1628,66681
os_take_over_init(1645,67158
os_take_over_exit(1656,67617
os_take_over_mark_thread(1666,67910
os_take_over_unmark_thread(1675,68214
os_list_threads(1688,68734
thread_attach_remove_from_table(1751,71477
thread_attach_restore_full_state(1761,71786
thread_attach_translate(1789,72802
thread_attach_context_revert(1807,73460
thread_attach_exit(1823,74047
os_take_over_wow64_extra(1859,75777
os_take_over_thread(2010,82719
os_thread_take_over_suspended_native(2113,87720
os_take_over_all_unknown_threads(2128,88294
thread_attach_setup(2228,92792
client_thread_target(2306,95812
dr_create_client_thread(2328,96635
get_os_version(2363,97977
get_os_version_ex(2369,98027
is_in_dynamo_dll(2381,98385
mem_state_string(2388,98556
mem_type_string(2400,98810
prot_string(2412,99055
prot_is_readable(2429,99597
prot_is_writable(2448,100083
prot_is_executable(2456,100306
prot_is_copyonwrite(2465,100576
prot_is_guard(2477,100967
memprot_to_osprot(2484,101105
osprot_to_memprot(2509,101841
osprot_add_writecopy(2524,102188
osprot_add_write(2537,102574
osprot_replace_memprot(2550,102967
dump_mbi(2564,103415
dump_mbi_addr(2592,104608
is_pid_me(2618,105535
is_phandle_me(2624,105612
static char dynamorio_library_path[dynamorio_library_path2640,106123
get_dynamorio_library_path(2644,106269
should_inject_into_process(2668,107222
inject_into_process(2739,109977
is_first_thread_in_new_process(2828,114073
maybe_inject_into_process(2891,117355
is_child_in_thin_client(2936,119606
get_dynamorio_dll_start(2965,120526
get_dynamorio_dll_preferred_base(2972,120709
static app_pc highest_user_address 2982,121045
get_system_basic_info(2988,121265
is_user_address(3022,122580
merge_writecopy_pages(3040,123279
find_dynamo_library_vm_areas(3108,126327
print_dynamo_regions(3160,128459
# define MEM_STATS_ADD(3190,129555
add_mem_stats(3201,130026
mem_stats_snapshot(3254,132085
process_image(3394,137969
process_image_post_vmarea(3714,152981
process_memory_region(3761,154533
find_executable_vm_areas(3802,156397
void all_memory_areas_lock(3876,159702
void all_memory_areas_unlock(3877,159754
void update_all_memory_areas(3878,159806
bool remove_from_all_memory_areas(3881,159908
process_mmap(3889,160290
get_application_base(3939,162173
get_application_end(3951,162462
get_image_entry(3965,162822
os_tls_offset(3979,163284
get_local_state(3986,163467
get_local_state_extended(3993,163624
get_thread_private_dcontext(4001,163843
set_thread_private_dcontext(4015,164398
create_profile(4024,164575
free_profile(4063,166504
start_profile(4091,167669
stop_profile(4099,167812
dump_profile_range(4107,167953
dump_profile(4128,168888
sum_profile_range(4135,169054
sum_profile(4153,169738
reset_profile(4160,169896
os_raw_mem_free(4168,170051
os_raw_mem_alloc(4186,170625
os_heap_free(4215,171739
os_heap_reserve(4231,172256
find_free_memory_in_region(4249,172908
os_heap_reserve_in_region(4278,174062
#   define MAX_REGION_ITERS 4283,174253
os_heap_commit(4324,175852
os_heap_decommit(4344,176558
os_heap_systemwide_overcommit(4355,176875
os_heap_get_commit_limit(4377,177706
os_find_free_code_space_in_libs(4414,179370
thread_yield(4432,179952
thread_sleep(4439,180044
os_timeout(4450,180327
thread_suspend(4463,180685
thread_resume(4469,180779
thread_terminate(4475,180871
thread_get_mcontext(4481,180966
thread_set_mcontext(4493,181257
thread_get_context(4506,181666
thread_set_context(4512,181794
thread_set_self_context(4519,181957
thread_set_self_mcontext(4528,182163
get_num_processors(4539,182485
static wchar_t debugbox_title_buf[debugbox_title_buf4562,183494
static void init_debugbox_title_buf(4563,183546
debugbox(4579,184114
#define ID_MSGBOX_STATIC_TEXT 4604,184776
    char *message;message4607,184838
    char *title;title4608,184857
    HANDLE timer;4609,184874
    int seconds_left;4610,184892
    bool done;4611,184914
} timeout_context_t;4612,184929
#define print_timeout_message(4614,184951
message_box_timeout_thread(4626,185555
os_countdown_messagebox(4656,186563
os_countdown_messagebox(4698,187799
load_shared_library(4709,188136
lookup_library_routine(4727,188707
unload_shared_library(4733,188839
shared_library_error(4743,189058
shared_library_bounds(4756,189564
get_allocation_base(4774,190250
enum { MAX_QUERY_VM_BLOCKS 4795,190944
get_allocation_size_ex(4807,191401
get_allocation_size(4880,194270
query_memory_ex(4890,194609
get_memory_info(4962,197763
dr_virtual_query(4993,198790
get_stack_bounds(5012,199552
query_is_readable_without_exception(5096,203220
is_readable_without_exception_query_os(5121,204069
safe_read_syscall(5135,204727
safe_read_ex(5143,204962
safe_read(5160,205665
safe_write_ex(5170,206059
safe_write(5181,206453
get_current_protection(5194,206923
not_readable(5215,207700
mark_page_as_guard(5234,208287
internal_change_protection(5265,209478
os_set_protection(5465,218144
set_protection(5475,218419
change_protection(5490,219076
make_hookable(5500,219505
make_unhookable(5512,219993
make_writable(5526,220557
make_copy_on_writable(5537,220936
make_unwritable(5546,221263
convert_NT_to_Dos_path(5555,221520
convert_to_NT_file_path_wide(5645,225514
convert_to_NT_file_path_wide_free(5726,228529
convert_to_NT_file_path(5736,228839
os_internal_create_file(5842,233750
os_internal_create_file_test(5854,234188
os_file_exists(5867,234581
os_get_file_size(5883,235324
os_get_file_size_by_handle(5907,236082
os_set_file_size(5926,236698
os_get_disk_free_space(5946,237412
os_copy_file(6033,240944
os_create_dir(6050,241625
os_open_directory(6067,242401
os_open(6090,243276
os_close(6133,245295
os_open_protected(6140,245384
os_close_protected(6146,245492
os_write(6156,245772
os_read(6180,246422
os_flush(6200,246891
os_seek(6207,247042
os_tell(6245,248090
os_delete_mapped_file(6267,248774
os_delete_file_w(6340,251734
os_delete_file(6386,253458
os_rename_file(6404,254124
os_rename_file_in_directory(6466,256919
os_map_file(6508,258650
#   define MAX_MAP_LOOP_ITERS 6519,258974
os_unmap_file(6588,261918
translate_context(6603,262501
set_mcontext_for_syscall(6628,263440
os_raise_exception(6674,264963
    struct _raise_exception_arguments_t 6682,265261
        PEXCEPTION_RECORD ExceptionRecord;6683,265303
        PCONTEXT Context;6684,265346
        DWORD SearchFrames;6685,265372
os_dump_core_segment_info(6714,266558
os_dump_core_dump_thread(6739,267510
os_dump_core_live_dump(6788,269622
os_dump_core_external_dump(7020,279600
os_dump_core(7072,281960
END_DATA_SECTION(7128,283792
detach_helper(7284,291831
detach_internal(7669,309497
detach_internal_synch(7684,310073
is_thread_currently_native(7696,310399
mutex_get_contended_event(7705,310619
os_wait_event(7735,311687
os_wait_handle(7817,315435
mutex_wait_contended_lock(7833,315803
mutex_notify_released_lock(7852,316532
rwlock_wait_contended_writer(7860,316722
rwlock_notify_writer(7871,317141
rwlock_wait_contended_reader(7883,317518
rwlock_notify_readers(7894,317947
create_event(7905,318322
destroy_event(7911,318397
signal_event(7917,318455
reset_event(7923,318510
wait_for_event(7930,318634
get_timer_frequency(7936,318754
os_random_seed(7965,319698
early_inject_init(7983,320184
earliest_inject_init(8240,333326
earliest_inject_cleanup(8281,335035
#define SECURITY_MAX_SID_STRING_SIZE 8297,335590
get_process_SID_string(8304,335880
get_Everyone_SID(8324,336534
get_process_owner_SID(8341,336989
os_validate_owner_equals(8368,337890
os_filesystem_supports_ownership(8462,341443
open_trusted_cache_root_directory(8501,342835
os_user_directory_supports_ownership(8550,344902
os_validate_user_owned(8589,346726
os_current_user_directory(8625,348143
os_check_option_compatibility(8720,352540

win32/os_exports.h,6168
#define _OS_EXPORTS_H_ 43,2007
typedef ushort cxt_seg_t;47,2126
# define CXT_XIP 48,2152
# define CXT_XAX 49,2173
# define CXT_XCX 50,2194
# define CXT_XDX 51,2215
# define CXT_XBX 52,2236
# define CXT_XSP 53,2257
# define CXT_XBP 54,2278
# define CXT_XSI 55,2299
# define CXT_XDI 56,2320
# define CXT_XMM(60,2497
# define CXT_XFLAGS 64,2748
typedef DWORD cxt_seg_t;66,2781
# define CXT_XIP 67,2806
# define CXT_XAX 68,2827
# define CXT_XCX 69,2848
# define CXT_XDX 70,2869
# define CXT_XBX 71,2890
# define CXT_XSP 72,2911
# define CXT_XBP 73,2932
# define CXT_XSI 74,2953
# define CXT_XDI 75,2974
# define CXT_XFLAGS 76,2995
# define FXSAVE_XMM0_OFFSET 81,3213
# define CXT_XMM(82,3245
#define WINDOWS_VERSION_8 94,3685
#define WINDOWS_VERSION_7 95,3719
#define WINDOWS_VERSION_VISTA 96,3753
#define WINDOWS_VERSION_2003 97,3787
#define WINDOWS_VERSION_XP 98,3821
#define WINDOWS_VERSION_2000 99,3855
#define WINDOWS_VERSION_NT 100,3889
    EXCEPTION_LIST_TIB_OFFSET 112,4328
    EXCEPTION_LIST_TIB_OFFSET = 0x000,x000112,4328
    TOP_STACK_TIB_OFFSET 113,4367
    TOP_STACK_TIB_OFFSET      = 0x008,x008113,4367
    BASE_STACK_TIB_OFFSET 114,4406
    BASE_STACK_TIB_OFFSET     = 0x010,x010114,4406
    FIBER_DATA_TIB_OFFSET 115,4445
    FIBER_DATA_TIB_OFFSET     = 0x020,x020115,4445
    SELF_TIB_OFFSET 116,4484
    SELF_TIB_OFFSET           = 0x030,x030116,4484
    PID_TIB_OFFSET 117,4523
    PID_TIB_OFFSET            = 0x040,x040117,4523
    TID_TIB_OFFSET 118,4562
    TID_TIB_OFFSET            = 0x048,x048118,4562
    ERRNO_TIB_OFFSET 119,4601
    ERRNO_TIB_OFFSET          = 0x068,x068119,4601
    WOW64_TIB_OFFSET 120,4640
    WOW64_TIB_OFFSET          = 0x100,x100120,4640
    PEB_TIB_OFFSET 121,4679
    PEB_TIB_OFFSET            = 0x060,x060121,4679
    FLS_DATA_TIB_OFFSET 122,4718
    FLS_DATA_TIB_OFFSET       = 0x17c8,x17c8122,4718
    NT_RPC_TIB_OFFSET 123,4758
    NT_RPC_TIB_OFFSET         = 0x1698,x1698123,4758
    NLS_CACHE_TIB_OFFSET 124,4798
    NLS_CACHE_TIB_OFFSET      = 0x17a0,x17a0124,4798
    EXCEPTION_LIST_TIB_OFFSET 126,4844
    EXCEPTION_LIST_TIB_OFFSET = 0x00,x00126,4844
    TOP_STACK_TIB_OFFSET 127,4882
    TOP_STACK_TIB_OFFSET      = 0x04,x04127,4882
    BASE_STACK_TIB_OFFSET 128,4920
    BASE_STACK_TIB_OFFSET     = 0x08,x08128,4920
    FIBER_DATA_TIB_OFFSET 129,4958
    FIBER_DATA_TIB_OFFSET     = 0x10,x10129,4958
    SELF_TIB_OFFSET 130,4996
    SELF_TIB_OFFSET           = 0x18,x18130,4996
    PID_TIB_OFFSET 131,5034
    PID_TIB_OFFSET            = 0x20,x20131,5034
    TID_TIB_OFFSET 132,5072
    TID_TIB_OFFSET            = 0x24,x24132,5072
    ERRNO_TIB_OFFSET 133,5110
    ERRNO_TIB_OFFSET          = 0x34,x34133,5110
    WOW64_TIB_OFFSET 134,5148
    WOW64_TIB_OFFSET          = 0xC0,xC0134,5148
    PEB_TIB_OFFSET 135,5186
    PEB_TIB_OFFSET            = 0x30,x30135,5186
    FLS_DATA_TIB_OFFSET 136,5224
    FLS_DATA_TIB_OFFSET       = 0xfb4,xfb4136,5224
    NT_RPC_TIB_OFFSET 137,5263
    NT_RPC_TIB_OFFSET         = 0xf1c,xf1c137,5263
    NLS_CACHE_TIB_OFFSET 138,5302
    NLS_CACHE_TIB_OFFSET      = 0xfa0,xfa0138,5302
# define SEG_TLS 143,5363
# define LIB_SEG_TLS 144,5387
# define SEG_TLS 146,5441
# define LIB_SEG_TLS 147,5485
#define get_tls(151,5630
set_tls(155,5755
#define get_own_teb(161,5965
#define OS_ALLOC_GRANULARITY 167,6189
#define MAP_FILE_VIEW_ALIGNMENT 168,6229
#define CONTEXT_HEAP_SIZE(184,6852
#define CONTEXT_HEAP_SIZE_OPAQUE 185,6937
# define ACTUAL_PRAGMA(216,8175
# define ACTUAL_PRAGMA(218,8222
#define START_DATA_SECTION(220,8270
#define VAR_IN_SECTION(221,8341
#define END_DATA_SECTION(222,8384
#define START_DO_NOT_OPTIMIZE 223,8439
#define END_DO_NOT_OPTIMIZE 224,8505
#define VSYSCALL_PAGE_START_BOOTSTRAP_VALUE 253,9396
#define VSYSCALL_BOOTSTRAP_ADDR 254,9474
#define VSYSCALL_AFTER_SYSCALL_BOOTSTRAP_VALUE 255,9540
file_t profile_file;274,10287
mutex_t profile_dump_lock;275,10308
typedef struct _profile_t 277,10336
    void *start;start278,10364
    void *end;end279,10381
    uint bucket_shift;280,10396
    uint *buffer;buffer281,10419
    size_t buffer_size;282,10437
    bool enabled;283,10476
    dcontext_t *dcontext;dcontext284,10494
    HANDLE handle;285,10520
} profile_t;286,10539
    HIDE_FROM_QUERY_TYPE_PROTECT 320,11285
    HIDE_FROM_QUERY_TYPE_PROTECT   = 0x1,x1320,11285
    HIDE_FROM_QUERY_BASE_SIZE 321,11355
    HIDE_FROM_QUERY_BASE_SIZE      = 0x2,x2321,11355
    HIDE_FROM_QUERY_RETURN_INVALID 323,11512
    HIDE_FROM_QUERY_RETURN_INVALID = 0x4,x4323,11512
enum tls_flags 328,11691
    TLS_FLAG_BITMAP_TOP_DOWN 329,11708
    TLS_FLAG_BITMAP_TOP_DOWN  = 0x1,x1329,11708
    TLS_FLAG_CACHE_LINE_START 332,11918
    TLS_FLAG_CACHE_LINE_START = 0x2,x2332,11918
    TLS_FLAG_BITMAP_FILL 336,12195
    TLS_FLAG_BITMAP_FILL      = 0x4,x4336,12195
    OS_ASLR_DISABLE_ASLR_ALL 347,12681
    OS_ASLR_DISABLE_ASLR_ALL      = 0x01,x01347,12681
    OS_ASLR_DISABLE_PCACHE_ALL 348,12757
    OS_ASLR_DISABLE_PCACHE_ALL    = 0x02,x02348,12757
    OS_ASLR_DISABLE_ASLR_DETECT 353,12956
    OS_ASLR_DISABLE_ASLR_DETECT   = 0x10,x10353,12956
    OS_ASLR_DISABLE_PCACHE_DETECT 354,13018
    OS_ASLR_DISABLE_PCACHE_DETECT = 0x20,x20354,13018
    DETACH_UNHANDLED_VIOLATION 361,13258
    DETACH_UNHANDLED_VIOLATION   = 0x01,x01361,13258
    DETACH_UNSUPPORTED_MODULE 364,13432
    DETACH_UNSUPPORTED_MODULE    = 0x02,x02364,13432
    DETACH_ON_TERMINATE 371,13850
    DETACH_ON_TERMINATE          = 0x010,x010371,13850
    DETACH_ON_TERMINATE_NO_CLEAN 373,13948
    DETACH_ON_TERMINATE_NO_CLEAN = 0x020,x020373,13948
    DETACH_ON_TERMINATE_NO_KILL 379,14233
    DETACH_ON_TERMINATE_NO_KILL  = 0x040,x040379,14233
    DETACH_ON_TERMINATE_NO_LOCKS 384,14525
    DETACH_ON_TERMINATE_NO_LOCKS = 0x080,x080384,14525
    DETACH_ON_TERMINATE_NO_HANG 387,14695
    DETACH_ON_TERMINATE_NO_HANG  = 0x100,x100387,14695
    DETACH_NORMAL_TYPE 396,14965
    DETACH_BAD_STATE 397,15003
    DETACH_BAD_STATE_NO_CLEANUP 398,15041
get_app_pc_from_intercept_pc_if_necessary(474,17798

win32/os_private.h,5666
#define _OS_PRIVATE_H_ 42,1937
#define GLOBAL_NT_PREFIX 47,2056
typedef struct _os_thread_data_t 53,2237
    byte *stack_base;stack_base60,2690
    byte *stack_top;stack_top61,2712
    bool teb_stack_no_longer_valid;62,2733
} os_thread_data_t;63,2769
    byte *dr_base;dr_base73,3016
    byte *ntdll_base;ntdll_base74,3035
    byte *tofree_base;tofree_base75,3057
    byte *hook_location;hook_location76,3080
    char dynamorio_lib_path[dynamorio_lib_path77,3105
} earliest_args_t;78,3144
#define EARLY_INJECT_HOOK_SIZE 85,3418
#define SYSCALL_NOT_PRESENT 155,5020
#define SYSCALL(193,6221
#undef SYSCALL198,6514
    SYS_MAX,199,6529
#define SYSCALL_PARAM_MAX_OFFSET 212,7188
# define SYSCALL_PARAM_OFFSET(215,7307
# define SYSCALL_PARAM_OFFSET(224,7680
sys_param_addr(233,8052
sys_param(251,8517
postsys_param(261,8831
#define INTERCEPTION_CODE_SIZE 304,10123
#define THREAD_START_ADDR 307,10243
#define THREAD_START_ARG 308,10299
#define UNDER_DYN_HACK 319,10444
#define IS_UNDER_DYN_HACK(320,10472
#define INTERCEPT_POINT(350,11437
#define INTERCEPT_ALL_POINTS 351,11475
    INTERCEPT_ALL_POINTS364,12101
} retakeover_point_t;365,12126
#undef INTERCEPT_POINT366,12148
# undef CONTEXT_XSTATE 397,13394
#define CONTEXT_XSTATE 409,13960
#define CONTEXT_XMM_FLAG 410,13998
#define CONTEXT_YMM_FLAG 411,14087
#define CONTEXT_PRESERVE_XMM 412,14127
#define CONTEXT_PRESERVE_YMM 413,14212
#define CONTEXT_DR_STATE_NO_YMM 414,14257
#define CONTEXT_DR_STATE 416,14411
#define CONTEXT_DR_STATE_ALLPROC 421,14699
#define XSTATE_HEADER_SIZE 424,14859
#define YMMH_AREA(425,14907
#define MAX_CONTEXT_64_SIZE 426,14967
# define MAX_CONTEXT_SIZE 428,15043
# define MAX_CONTEXT_SIZE 430,15101
      EXCEPTION_INFORMATION_READ_EXECUTE_FAULT 434,15181
      EXCEPTION_INFORMATION_WRITE_FAULT 437,15328
      EXCEPTION_INFORMATION_EXECUTE_FAULT 438,15380
typedef struct DECLSPEC_ALIGN(451,15906
typedef struct _XMM_SAVE_AREA32 456,16006
    WORD   ControlWord;457,16040
    WORD   StatusWord;458,16064
    BYTE  TagWord;459,16087
    BYTE  Reserved1;460,16106
    WORD   ErrorOpcode;461,16127
    DWORD ErrorOffset;462,16151
    WORD   ErrorSelector;463,16174
    WORD   Reserved2;464,16200
    DWORD DataOffset;465,16222
    WORD   DataSelector;466,16244
    WORD   Reserved3;467,16269
    DWORD MxCsr;468,16291
    DWORD MxCsr_Mask;469,16308
    M128A FloatRegisters[FloatRegisters470,16330
    M128A XmmRegisters[XmmRegisters471,16359
    BYTE  Reserved4[Reserved4472,16387
} XMM_SAVE_AREA32, *PXMM_SAVE_AREA32;PXMM_SAVE_AREA32473,16412
typedef XSAVE_FORMAT XMM_SAVE_AREA32,475,16457
typedef XSAVE_FORMAT XMM_SAVE_AREA32, *PXMM_SAVE_AREA32;PXMM_SAVE_AREA32475,16457
typedef struct DECLSPEC_ALIGN(478,16523
            M128A Header[Header558,17760
            M128A Legacy[Legacy559,17789
            M128A Xmm0;560,17818
            M128A Xmm1;561,17842
            M128A Xmm2;562,17866
            M128A Xmm3;563,17890
            M128A Xmm4;564,17914
            M128A Xmm5;565,17938
            M128A Xmm6;566,17962
            M128A Xmm7;567,17986
            M128A Xmm8;568,18010
            M128A Xmm9;569,18034
            M128A Xmm10;570,18058
            M128A Xmm11;571,18083
            M128A Xmm12;572,18108
            M128A Xmm13;573,18133
            M128A Xmm14;574,18158
            M128A Xmm15;575,18183
    } DUMMYUNIONNAME;577,18235
    M128A VectorRegister[VectorRegister583,18298
    DWORD64 VectorControl;584,18328
    DWORD64 DebugControl;590,18411
    DWORD64 LastBranchToRip;591,18437
    DWORD64 LastBranchFromRip;592,18466
    DWORD64 LastExceptionToRip;593,18497
    DWORD64 LastExceptionFromRip;594,18529
} CONTEXT_64,595,18563
} CONTEXT_64, *PCONTEXT_64;PCONTEXT_64595,18563
#define __IMAGE_UNWIND_INFO666,20486
typedef enum _unwind_opcode_t 681,21369
    UWOP_PUSH_NONVOL 682,21401
    UWOP_ALLOC_LARGE,683,21457
    UWOP_ALLOC_SMALL,684,21525
    UWOP_SET_FPREG,685,21592
    UWOP_SAVE_NONVOL,686,21671
    UWOP_SAVE_NONVOL_FAR,687,21748
    UWOP_SAVE_XMM128,688,21828
    UWOP_SAVE_XMM128_FAR,689,21904
    UWOP_PUSH_MACHFRAME 690,21983
} unwind_opcode_t;691,22055
typedef union _unwind_code_t 693,22075
        byte CodeOffset;695,22119
        byte UnwindOp 696,22144
        byte OpInfo 697,22170
    USHORT FrameOffset;699,22203
} unwind_code_t;700,22227
# define UNW_FLAG_EHANDLER 703,22271
# define UNW_FLAG_UHANDLER 704,22304
# define UNW_FLAG_CHAININFO 705,22337
typedef struct _unwind_info_t 708,22378
    byte Version 709,22410
    byte Flags 710,22436
    byte SizeOfProlog;711,22462
    byte CountOfCodes;712,22485
    byte FrameRegister:FrameRegister713,22508
    byte FrameOffset 714,22534
    unwind_code_t UnwindCode[UnwindCode715,22560
    unwind_code_t MoreUnwindCode[MoreUnwindCode719,22786
        OPTIONAL ULONG ExceptionHandler;721,22868
        OPTIONAL ULONG FunctionEntry;722,22909
    OPTIONAL ULONG ExceptionData[ExceptionData724,22954
} unwind_info_t;726,22997
#define UNWIND_INFO_PTR_ADDR(729,23072
#define UNWIND_INFO_PTR_RVA(733,23249
#define UNWIND_INFO_DATA_ADDR(736,23384
#define UNWIND_INFO_DATA_RVA(737,23460
typedef struct _scope_table_t 742,23667
    ULONG Count;743,23699
        ULONG BeginAddress;745,23729
        ULONG EndAddress;746,23757
        ULONG HandlerAddress;747,23783
        ULONG JumpTarget;748,23813
    } ScopeRecord[ScopeRecord749,23839
} scope_table_t;750,23861
#define RVA_TO_VA(756,23951
enum {SYMBOLS_LOGLEVEL SYMBOLS_LOGLEVEL795,24941
#define PAGE_PROTECTION_QUALIFIERS 872,27055
#define IPC_ALERT(880,27280

win32/pre_inject.c,763
#define WIN32_LEAN_AND_MEAN58,2532
# undef assert85,3307
#define assert 88,3370
#   define ASSERT(92,3503
#   define ASSERT(94,3589
# define ASSERT(97,3696
#define BUFFER_SIZE_BYTES(105,3901
#define BUFFER_SIZE_ELEMENTS(106,3949
#define BUFFER_LAST_ELEMENT(107,4027
#define NULL_TERMINATE_BUFFER(108,4098
#define VERBOSE 113,4380
# define VERBOSE_MESSAGE(118,4523
# define VERBOSE_MESSAGE(120,4596
display_error_helper(124,4646
internal_error(135,4976
# define FILENAME_LENGTH 138,5043
# define FILENAME_LENGTH 141,5123
display_error(154,5472
typedef int (*int_func_t)int_func_t163,5667
typedef void (*void_func_t)void_func_t164,5697
load_dynamorio_lib(171,5852
parameters_present(343,12842
process_attach(372,13705
__declspec(446,16469

win32/syscall.c,5254
int *syscalls syscalls49,2103
int *wow64_index wow64_index51,2210
app_pc int_syscall_address 59,2611
app_pc sysenter_ret_address 65,3029
#define SNAPSHOT_THRESHOLD 74,3487
const char * const syscall_names[syscall_names78,3589
#define SYSCALL(79,3628
#undef SYSCALL84,3920
const int windows_8_x64_syscalls[windows_8_x64_syscalls86,3938
#define SYSCALL(87,3977
#undef SYSCALL92,4265
const int windows_8_wow64_syscalls[windows_8_wow64_syscalls94,4283
#define SYSCALL(95,4324
#undef SYSCALL100,4612
const int windows_8_x86_syscalls[windows_8_x86_syscalls102,4630
#define SYSCALL(103,4669
#undef SYSCALL108,4957
const int windows_7_x64_syscalls[windows_7_x64_syscalls110,4975
#define SYSCALL(111,5014
#undef SYSCALL116,5302
const int windows_7_syscalls[windows_7_syscalls118,5320
#define SYSCALL(119,5355
#undef SYSCALL124,5643
const int windows_vista_sp1_x64_syscalls[windows_vista_sp1_x64_syscalls126,5661
#define SYSCALL(127,5708
#undef SYSCALL132,6001
const int windows_vista_sp1_syscalls[windows_vista_sp1_syscalls134,6019
#define SYSCALL(135,6062
#undef SYSCALL140,6351
const int windows_vista_sp0_x64_syscalls[windows_vista_sp0_x64_syscalls142,6369
#define SYSCALL(143,6416
#undef SYSCALL148,6709
const int windows_vista_sp0_syscalls[windows_vista_sp0_syscalls150,6727
#define SYSCALL(151,6770
#undef SYSCALL156,7059
const int windows_2003_syscalls[windows_2003_syscalls158,7077
#define SYSCALL(159,7115
#undef SYSCALL164,7402
const int windows_XP_x64_syscalls[windows_XP_x64_syscalls166,7420
#define SYSCALL(167,7460
#undef SYSCALL172,7747
const int windows_XP_wow64_index[windows_XP_wow64_index175,7810
#define SYSCALL(176,7849
#undef SYSCALL181,8137
const int windows_XP_syscalls[windows_XP_syscalls183,8155
#define SYSCALL(184,8191
#undef SYSCALL189,8476
const int windows_2000_syscalls[windows_2000_syscalls191,8494
#define SYSCALL(192,8532
#undef SYSCALL197,8818
const int windows_NT_sp4_syscalls[windows_NT_sp4_syscalls199,8836
#define SYSCALL(200,8876
#undef SYSCALL205,9164
const int windows_NT_sp3_syscalls[windows_NT_sp3_syscalls208,9244
#define SYSCALL(209,9284
#undef SYSCALL214,9572
const int windows_NT_sp0_syscalls[windows_NT_sp0_syscalls217,9652
#define SYSCALL(218,9692
#undef SYSCALL223,9980
const uint syscall_argsz[syscall_argsz227,10035
# define SYSCALL(229,10077
# define SYSCALL(234,10352
#undef SYSCALL240,10650
static const int syscall_requires_action[syscall_requires_action246,10828
#define SYSCALL(247,10875
#undef SYSCALL252,11161
static byte *syscall_trampoline_pc[syscall_trampoline_pc256,11226
static app_pc syscall_trampoline_skip_pc[syscall_trampoline_skip_pc257,11271
static app_pc syscall_trampoline_hook_pc[syscall_trampoline_hook_pc258,11322
static app_pc syscall_trampoline_copy_pc[syscall_trampoline_copy_pc259,11373
static byte syscall_trampoline_gbop_fpo_offset[syscall_trampoline_gbop_fpo_offset268,11746
#define MAX_NTOSKRNL_SYSCALL_NUM 320,14167
ignorable_system_call(323,14214
optimizable_system_call(345,15169
syscall_while_native(367,15788
intercept_syscall_for_thin_client(542,25256
intercept_native_syscall(558,25824
init_syscall_trampolines(594,27385
exit_syscall_trampolines(637,29676
check_syscall_array_sizes(655,30252
check_syscall_numbers(672,31124
align_page_boundary(705,32377
is_newly_created_process(721,33012
syscall_uses_wow64_index(799,36546
syscall_uses_edx_param_base(806,36692
#define SYSCALL_PC(820,37393
#define SET_RETURN_VAL(830,37827
pre_system_call_param_base(842,38193
presys_CreateProcess(859,38649
presys_CreateUserProcess(904,40639
presys_CreateThread(983,44492
presys_CreateThreadEx(1030,46824
presys_CreateWorkerFactory(1073,48629
static const char * const env_to_propagate[env_to_propagate1102,49594
static const wchar_t * const wenv_to_propagate[wenv_to_propagate1109,49786
#define NUM_ENV_TO_PROPAGATE 1116,49992
add_dr_env_vars(1120,50141
not_first_thread_in_new_process(1299,57446
presys_ResumeThread(1310,57801
presys_TerminateProcess(1382,61293
presys_TerminateThread(1469,65596
presys_SetContextThread(1546,69150
is_cb_return_syscall(1677,75644
presys_CallbackReturn(1690,76032
check_for_stack_free(1727,77960
presys_AllocateVirtualMemory(1759,79519
presys_FreeVirtualMemory(1851,84180
presys_ProtectVirtualMemory(1979,89681
presys_MapViewOfSection(2132,97047
presys_UnmapViewOfSection(2175,98950
presys_FlushInstructionCache(2250,102119
presys_CreateSection(2292,103675
presys_Close(2325,105101
presys_OpenFile(2339,105506
pre_system_call(2371,106860
postsys_CreateUserProcess(2599,116977
postsys_GetContextThread(2709,122479
postsys_SuspendThread(2856,129362
postsys_AllocateVirtualMemory(3002,136895
postsys_QueryVirtualMemory(3149,144072
postsys_create_or_open_section(3246,149216
postsys_CreateSection(3332,153515
postsys_OpenSection(3372,155328
postsys_MapViewOfSection(3457,159206
postsys_UnmapViewOfSection(3609,166174
postsys_DuplicateObject(3643,167617
void post_system_call(3671,169009
dr_syscall_get_param(3903,180494
dr_syscall_set_param(3919,181130
dr_syscall_get_result(3936,181768
dr_syscall_set_result(3946,182064
dr_syscall_set_sysnum(3957,182426
dr_syscall_invoke_another(3969,182824

win32/syscallx.h,2561
#define NONE 90,3911
#define ACTION_LOG 92,4028
SYSCALL(Continue,96,4518
SYSCALL(CallbackReturn,97,4691
SYSCALL(SetContextThread,98,4864
SYSCALL(GetContextThread,99,5037
SYSCALL(CreateProcess,100,5210
SYSCALL(CreateProcessEx,101,5383
SYSCALL(CreateUserProcess,102,5556
SYSCALL(TerminateProcess,103,5729
SYSCALL(CreateThread,104,5902
SYSCALL(CreateThreadEx,105,6075
SYSCALL(CreateWorkerFactory,106,6248
SYSCALL(TerminateThread,107,6421
SYSCALL(SuspendThread,108,6594
SYSCALL(ResumeThread,109,6767
SYSCALL(AllocateVirtualMemory,110,6940
SYSCALL(FreeVirtualMemory,reeVirtualMemory111,7113
SYSCALL(ProtectVirtualMemory,112,7286
SYSCALL(QueryVirtualMemory,113,7459
SYSCALL(WriteVirtualMemory,114,7632
SYSCALL(MapViewOfSection,115,7805
SYSCALL(UnmapViewOfSection,116,7978
SYSCALL(UnmapViewOfSectionEx,117,8151
SYSCALL(FlushInstructionCache,lushInstructionCache118,8324
SYSCALL(FreeUserPhysicalPages,reeUserPhysicalPages119,8497
SYSCALL(MapUserPhysicalPages,120,8670
SYSCALL(SetInformationVirtualMemory,121,8843
SYSCALL(Wow64AllocateVirtualMemory64,122,9016
SYSCALL(OpenSection,125,9279
SYSCALL(CreateSection,126,9452
SYSCALL(Close,127,9625
SYSCALL(DuplicateObject,128,9798
SYSCALL(AlertResumeThread,134,10123
SYSCALL(OpenFile,136,10303
SYSCALL(TestAlert,138,10523
SYSCALL(RaiseException,139,10696
SYSCALL(CreateFile,140,10869
SYSCALL(CreateKey,141,11042
SYSCALL(OpenKey,142,11215
SYSCALL(OpenKeyEx,143,11388
SYSCALL(OpenProcess,144,11561
SYSCALL(OpenProcessToken,145,11734
SYSCALL(OpenProcessTokenEx,146,11907
SYSCALL(OpenThread,147,12080
SYSCALL(OpenThreadToken,148,12253
SYSCALL(OpenThreadTokenEx,149,12426
SYSCALL(QueryAttributesFile,150,12599
SYSCALL(QueryFullAttributesFile,151,12772
SYSCALL(SetInformationFile,152,12945
SYSCALL(SetInformationThread,153,13118
SYSCALL(SetValueKey,154,13291
#undef NONE156,13465
#undef ACTION_LOG157,13477
SYSCALL(AlertThread,193,15569
SYSCALL(DelayExecution,194,15705
SYSCALL(ReplyWaitReceivePort,195,15841
SYSCALL(ReplyWaitReceivePortEx,196,15977
SYSCALL(ReplyWaitReplyPort,197,16113
SYSCALL(ReplyWaitSendChannel,198,16249
SYSCALL(RequestWaitReplyPort,199,16385
SYSCALL(SendWaitReplyChannel,200,16521
SYSCALL(SetHighWaitLowEventPair,201,16657
SYSCALL(SetLowWaitHighEventPair,202,16793
SYSCALL(SignalAndWaitForSingleObject,203,16929
SYSCALL(WaitForDebugEvent,204,17065
SYSCALL(WaitForKeyedEvent,205,17201
SYSCALL(WaitForMultipleObjects,206,17337
SYSCALL(WaitForSingleObject,207,17473
SYSCALL(WaitHighEventPair,208,17609
SYSCALL(WaitLowEventPair,209,17745

x86/arch.c,5816
generated_code_t *shared_code shared_code69,2638
generated_code_t *shared_code_x86 shared_code_x8675,2898
generated_code_t *shared_code_x86_to_x64 shared_code_x86_to_x6479,3069
static int syscall_method 82,3126
byte *app_sysenter_instr_addr app_sysenter_instr_addr83,3184
static bool sysenter_hook_failed 85,3234
reg_spill_tls_offs(102,3787
dump_emitted_routines(117,4223
dump_emitted_routines_to_file(207,7800
code_align_forward(226,8435
move_to_start_of_cache_line(236,8641
#define GENCODE_RESERVE_SIZE 246,9032
#define GENCODE_COMMIT_SIZE 248,9076
check_size_and_cache_line(252,9200
release_final_page(267,9773
shared_gencode_init(288,10695
far_ibl_set_targets(514,20147
arch_init(538,21152
arch_extract_profile(640,25569
arch_profile_exit(728,29574
arch_exit(739,29852
emit_ibl_routine_and_template(762,30615
emit_ibl_routines(802,32290
emit_syscall_routines(862,35353
arch_thread_init(966,40492
arch_thread_profile_exit(1165,48904
arch_thread_exit(1172,49035
arch_patch_syscall_common(1205,50133
arch_patch_syscall(1217,50744
update_generated_hashtable_access(1228,51128
protect_generated_code(1234,51239
get_source_fragment_type(1260,52196
is_shared_syscall_routine(1274,52675
is_indirect_branch_lookup_routine(1296,53674
get_trace_ibl_routine(1309,54115
get_private_ibl_routine(1334,54971
get_shared_ibl_routine(1352,55561
get_alternate_ibl_routine(1369,56105
get_unlinked_type(1392,57004
get_linked_type(1405,57288
get_linked_entry(1418,57553
get_trace_cmp_entry(1443,58569
get_unlinked_entry(1456,59050
in_generated_shared_routine(1474,59775
in_generated_routine(1491,60456
in_context_switch_code(1502,60787
in_indirect_branch_lookup_code(1512,61170
fcache_enter_routine(1533,61963
get_fcache_enter_private_routine(1541,62195
get_reset_exit_stub(1547,62307
get_do_syscall_entry(1554,62463
get_fcache_enter_indirect_routine(1562,62641
get_do_callback_return_entry(1568,62853
get_do_int_syscall_entry(1576,63104
get_do_clone_syscall_entry(1583,63264
get_do_vmkuw_syscall_entry(1590,63448
fcache_return_routine(1599,63627
fcache_return_routine_ex(1606,63783
fcache_return_coarse_routine(1613,63996
trace_head_return_coarse_routine(1624,64306
get_clean_call_save(1635,64624
get_clean_call_restore(1647,65003
get_client_ibl_xfer_entry(1660,65412
get_ibl_routine_type_ex(1678,65995
get_ibl_routine_type(1811,71299
get_ibl_routine_template_type(1821,71679
get_branch_type_name(1861,73031
get_ibl_branch_type(1869,73256
get_ibl_routine_name(1888,73723
get_ibl_routine_code_internal(1983,79127
get_ibl_routine_ex(2026,80776
get_ibl_routine(2066,82119
get_ibl_routine_template(2075,82468
table_flags_to_frag_flags(2093,83229
get_target_delete_entry_pc(2121,84545
get_ibl_routine_code_ex(2148,85726
get_ibl_routine_code(2162,86224
shared_syscall_routine_ex(2183,87188
shared_syscall_routine(2195,87569
unlinked_shared_syscall_routine_ex(2201,87707
unlinked_shared_syscall_routine(2213,88106
after_shared_syscall_code(2219,88262
after_shared_syscall_code_ex(2225,88407
after_shared_syscall_addr(2233,88687
after_do_syscall_code(2247,89134
after_do_syscall_code_ex(2253,89271
after_do_syscall_addr(2261,89533
after_do_shared_syscall_addr(2272,89879
is_after_main_do_syscall_addr(2284,90383
is_after_do_syscall_addr(2293,90710
is_after_syscall_address(2306,91261
is_after_syscall_that_rets(2326,91876
get_new_thread_start(2346,92685
trace_head_incr_routine(2361,93098
get_pextrw_entry(2370,93296
get_pinsrw_entry(2377,93440
get_fcache_enter_shared_routine(2386,93630
fcache_enter_shared_routine(2392,93759
fcache_return_shared_routine(2430,95415
trace_head_incr_shared_routine(2442,95729
get_fcache_target(2455,96083
set_fcache_target(2466,96403
typedef struct _translate_walk_t 2492,97549
    priv_mcontext_t *mc;mc2494,97624
    byte *start_cache;start_cache2496,97706
    byte *end_cache;end_cache2497,97729
    bool reg_spilled[reg_spilled2501,97876
    bool reg_tls[reg_tls2502,97913
    int xsp_adjust;2507,98149
    bool unsupported_mangle;2509,98241
    bool in_mangle_region;2511,98316
    app_pc translation;2513,98413
} translate_walk_t;2514,98437
translate_walk_init(2517,98470
instr_check_xsp_mangling(2527,98740
instr_is_trace_cmp(2599,102333
instr_is_inline_syscall_jmp(2627,103202
instr_is_seg_ref_load(2639,103599
translate_walk_track(2662,104455
translate_walk_good_state(2818,112038
translate_walk_restore(2827,112366
translate_restore_clean_call(2883,114600
recreate_app_state_from_info(2907,115598
recreate_app_state_from_ilist(3042,121462
recreate_selfmod_ilist(3262,132008
recreate_app_state_internal(3308,134222
recreate_app_pc(3610,148847
recreate_app_state(3687,152355
translation_info_alloc_size(3730,153694
translation_info_alloc(3737,153933
translation_info_free(3749,154284
set_translation(3756,154496
translation_info_print(3781,155511
record_translation_info(3808,156698
#   define NUM_INITIAL_TRANSLATIONS 3849,158380
stress_test_recreate_state(3995,164932
get_global_do_syscall_entry(4100,169482
get_cleanup_and_terminate_global_do_syscall_entry(4150,170900
#define VSYS_DISPLACED_LEN 4215,173814
hook_vsyscall(4218,173856
#define CHECK(4243,174643
#undef CHECK4315,177633
unhook_vsyscall(4319,177654
check_syscall_method(4347,178548
get_syscall_method(4499,186279
does_syscall_ret_to_callsite(4506,186415
set_syscall_method(4514,186634
should_syscall_method_be_sysenter(4526,187000
get_app_sysenter_addr(4535,187244
copy_mcontext(4543,187473
dr_mcontext_to_priv_mcontext(4550,187592
priv_mcontext_to_dr_mcontext(4579,188559
dr_mcontext_as_priv_mcontext(4608,189539
dr_mcontext_init(4619,189908
dump_mcontext(4627,190043
__inline__ uint64 get_time(4696,192777
uint64 get_time(4703,192912
is_ibl_routine_type(4713,193035

x86/arch.h,10377
#define X86_ARCH_H45,2079
#define CS32_SELECTOR 55,2406
#define CS64_SELECTOR 56,2433
mixed_mode_enabled(60,2491
#define PROT_OFFS 88,3457
#define MC_OFFS 89,3515
#define XAX_OFFSET 91,3586
#define XBX_OFFSET 92,3659
#define XCX_OFFSET 93,3732
#define XDX_OFFSET 94,3805
#define XSI_OFFSET 95,3878
#define XDI_OFFSET 96,3951
#define XBP_OFFSET 97,4024
#define XSP_OFFSET 98,4097
#define XFLAGS_OFFSET 99,4170
#define PC_OFFSET 100,4246
# define R8_OFFSET 102,4329
# define R9_OFFSET 103,4401
# define R10_OFFSET 104,4473
# define R11_OFFSET 105,4546
# define R12_OFFSET 106,4619
# define R13_OFFSET 107,4692
# define R14_OFFSET 108,4765
# define R15_OFFSET 109,4838
#define XMM_OFFSET 111,4918
#define ERRNO_OFFSET 113,4992
#define AT_SYSCALL_OFFSET 114,5059
#define EXIT_REASON_OFFSET 115,5131
#define NEXT_TAG_OFFSET 117,5206
#define LAST_EXIT_OFFSET 118,5282
#define DSTACK_OFFSET 119,5359
#define FRAGMENT_FIELD_OFFSET 121,5434
#define PRIVATE_CODE_OFFSET 122,5516
#  define APP_ERRNO_OFFSET 126,5637
#  define APP_FLS_OFFSET 127,5715
#  define PRIV_FLS_OFFSET 128,5796
#  define APP_RPC_OFFSET 129,5878
#  define PRIV_RPC_OFFSET 130,5957
#  define APP_NLS_CACHE_OFFSET 131,6037
#  define PRIV_NLS_CACHE_OFFSET 132,6119
#  define APP_STACK_LIMIT_OFFSET 133,6202
# define NONSWAPPED_SCRATCH_OFFSET 135,6295
# define TRACE_HEAD_PC_OFFSET 139,6424
# define SYSENTER_STORAGE_OFFSET 143,6528
# define IGNORE_ENTEREXIT_OFFSET 144,6614
# define CLIENT_DATA_OFFSET 148,6732
#define COARSE_IB_SRC_OFFSET 151,6819
#define COARSE_DIR_EXIT_OFFSET 152,6906
#define OPSZ_SAVED_XMM 157,7034
#define REG_SAVED_XMM0 158,7093
preserve_xmm_caller_saved(163,7305
    IBL_UNLINKED,177,7901
    IBL_DELETE,178,7919
    IBL_FAR,180,7975
    IBL_FAR_UNLINKED,181,7988
    IBL_TRACE_CMP,184,8099
    IBL_TRACE_CMP_UNLINKED,185,8118
    IBL_LINKED,187,8153
    IBL_TEMPLATE,189,8174
    IBL_LINK_STATE_END190,8241
} ibl_entry_point_type_t;191,8264
    IBL_BB_SHARED,197,8526
    IBL_SOURCE_TYPE_START 198,8546
    IBL_SOURCE_TYPE_START = IBL_BB_SHARED,198,8546
    IBL_TRACE_SHARED,199,8589
    IBL_BB_PRIVATE,200,8611
    IBL_TRACE_PRIVATE,201,8631
    IBL_COARSE_SHARED,202,8654
    IBL_SOURCE_TYPE_END203,8710
} ibl_source_fragment_type_t;204,8734
#define DEFAULT_IBL_BB(206,8765
#define DEFAULT_IBL_TRACE(208,8857
#define IS_IBL_BB(210,8961
#define IS_IBL_TRACE(212,9054
#define IS_IBL_LINKED(214,9156
#define IS_IBL_UNLINKED(217,9288
#define IBL_FRAG_FLAGS(221,9443
get_ibl_entry_type(225,9589
    ibl_entry_point_type_t link_state;240,9907
    ibl_source_fragment_type_t source_fragment_type;241,9946
    ibl_branch_type_t branch_type;242,9999
} ibl_type_t;243,10034
    GENCODE_X64 251,10311
    GENCODE_X86,252,10332
    GENCODE_X86_TO_X64,253,10349
    GENCODE_FROM_DCONTEXT,254,10373
} gencode_mode_t;255,10400
# define FRAGMENT_GENCODE_MODE(256,10418
# define SHARED_GENCODE(259,10595
# define SHARED_GENCODE_MATCH_THREAD(260,10683
# define THREAD_GENCODE(261,10770
# define GENCODE_IS_X64(262,10851
# define GENCODE_IS_X86(263,10921
# define GENCODE_IS_X86_TO_X64(264,10991
# define SHARED_GENCODE(266,11081
# define THREAD_GENCODE(267,11144
# define SHARED_GENCODE_MATCH_THREAD(268,11202
#define NUM_XMM_REGS 271,11274
#define NUM_GP_REGS 272,11310
typedef struct _clean_call_info_t 275,11457
    void *callee;callee276,11493
    uint num_args;277,11511
    bool save_fpstate;278,11530
    bool opt_inline;279,11553
    bool should_align;280,11574
    bool save_all_regs;281,11597
    bool skip_save_aflags;282,11621
    bool skip_clear_eflags;283,11648
    uint num_xmms_skip;284,11676
    bool xmm_skip[xmm_skip285,11700
    uint num_regs_skip;286,11733
    bool reg_skip[reg_skip287,11757
    bool preserve_mcontext;288,11789
    void *callee_info;callee_info289,11870
    instrlist_t *ilist;ilist290,11919
} clean_call_info_t;291,11990
#define GET_IBL_TARGET_TABLE(321,13777
    FCACHE_ENTER_TARGET_SLOT 434,18681
    FCACHE_ENTER_TARGET_SLOT    = TLS_XAX_SLOT,434,18681
    MANGLE_NEXT_TAG_SLOT 442,19008
    MANGLE_NEXT_TAG_SLOT        = TLS_XAX_SLOT,442,19008
    DIRECT_STUB_SPILL_SLOT 443,19056
    DIRECT_STUB_SPILL_SLOT      = TLS_XAX_SLOT,443,19056
    MANGLE_RIPREL_SPILL_SLOT 444,19104
    MANGLE_RIPREL_SPILL_SLOT    = TLS_XAX_SLOT,444,19104
    INDIRECT_STUB_SPILL_SLOT 446,19233
    INDIRECT_STUB_SPILL_SLOT    = TLS_XBX_SLOT,446,19233
    MANGLE_FAR_SPILL_SLOT 447,19281
    MANGLE_FAR_SPILL_SLOT       = TLS_XBX_SLOT,447,19281
    FLOAT_PC_STATE_SLOT 451,19484
    FLOAT_PC_STATE_SLOT         = TLS_XBX_SLOT,451,19484
    MANGLE_XCX_SPILL_SLOT 452,19532
    MANGLE_XCX_SPILL_SLOT       = TLS_XCX_SLOT,452,19532
    DCONTEXT_BASE_SPILL_SLOT 457,19756
    DCONTEXT_BASE_SPILL_SLOT    = TLS_XDX_SLOT,457,19756
    PREFIX_XAX_SPILL_SLOT 458,19804
    PREFIX_XAX_SPILL_SLOT       = TLS_XAX_SLOT,458,19804
    HTABLE_STATS_SPILL_SLOT 460,19880
    HTABLE_STATS_SPILL_SLOT     = TLS_HTABLE_STATS_SLOT,460,19880
typedef struct patch_entry_t 471,20248
        instr_t *instr;instr473,20291
        size_t   offset;474,20364
    } where;475,20429
    ptr_uint_t value_location_offset;476,20442
    ushort patch_flags;479,20656
    short  instr_offset;480,20738
} patch_entry_t;482,20878
    MAX_PATCH_ENTRIES 485,20903
    PATCH_TAKE_ADDRESS 492,21188
    PATCH_TAKE_ADDRESS      = 0x01,x01492,21188
    PATCH_PER_THREAD 493,21286
    PATCH_PER_THREAD        = 0x02,x02493,21286
    PATCH_UNPROT_STAT 494,21387
    PATCH_UNPROT_STAT       = 0x04,x04494,21387
    PATCH_MARKER 496,21574
    PATCH_MARKER            = 0x08,x08496,21574
    PATCH_ASSEMBLE_ABSOLUTE 497,21651
    PATCH_ASSEMBLE_ABSOLUTE = 0x10,x10497,21651
    PATCH_OFFSET_VALID 499,21821
    PATCH_OFFSET_VALID      = 0x20,x20499,21821
    PATCH_UINT_SIZED 501,21972
    PATCH_UINT_SIZED        = 0x40,x40501,21972
    PATCH_TYPE_ABSOLUTE 505,22080
    PATCH_TYPE_ABSOLUTE     = 0x0,x0505,22080
    PATCH_TYPE_INDIRECT_XDI 506,22169
    PATCH_TYPE_INDIRECT_XDI = 0x1,x1506,22169
    PATCH_TYPE_INDIRECT_FS 507,22258
    PATCH_TYPE_INDIRECT_FS  = 0x2,x2507,22258
} patch_list_type_t;508,22346
typedef struct patch_list_t 510,22368
    ushort num_relocations;511,22398
    ushort /* patch_list_type_t */ type;512,22426
    patch_entry_t entry[entry513,22467
} patch_list_t;514,22511
typedef struct _far_ref_t 529,22985
    uint pc;531,23084
    ushort selector;532,23097
} far_ref_t;533,23118
typedef struct ibl_code_t 537,23222
    bool initialized:initialized538,23250
    bool thread_shared_routine:thread_shared_routine539,23317
    bool ibl_head_is_inlined:ibl_head_is_inlined540,23351
    byte *indirect_branch_lookup_routine;indirect_branch_lookup_routine541,23383
    byte *far_ibl;far_ibl543,23456
    byte *far_ibl_unlinked;far_ibl_unlinked544,23475
    byte *trace_cmp_entry;trace_cmp_entry547,23577
    byte *trace_cmp_unlinked;trace_cmp_unlinked548,23604
    bool x86_mode;549,23634
    bool x86_to_x64_mode;550,23695
    far_ref_t far_jmp_opnd;552,23862
    far_ref_t far_jmp_unlinked_opnd;553,23890
    byte *unlinked_ibl_entry;unlinked_ibl_entry555,23934
    byte *target_delete_entry;target_delete_entry556,23964
    uint ibl_routine_length;557,23995
    patch_list_t ibl_patch;559,24059
    ibl_branch_type_t branch_type;560,24087
    ibl_source_fragment_type_t source_fragment_type;561,24122
    byte *inline_ibl_stub_template;inline_ibl_stub_template564,24245
    patch_list_t ibl_stub_patch;565,24281
    uint inline_stub_length;566,24314
    uint inline_linkstub_first_offs;569,24445
    uint inline_linkstub_second_offs;570,24482
    uint inline_unlink_offs;571,24520
    uint inline_linkedjmp_offs;572,24549
    uint inline_unlinkedjmp_offs;573,24581
    uint unprot_stats_offset;577,24716
    uint hashtable_stats_offset;578,24747
    uint entry_stats_to_lookup_table_offset;581,24975
} ibl_code_t;583,25074
typedef struct _generated_code_t 593,25434
    byte *fcache_enter;fcache_enter594,25469
    byte *fcache_return;fcache_return595,25493
    byte *fcache_enter_return_end;fcache_enter_return_end597,25543
    ibl_code_t trace_ibl[trace_ibl600,25586
    ibl_code_t bb_ibl[bb_ibl601,25633
    ibl_code_t coarse_ibl[coarse_ibl602,25677
    byte *ibl_routines_end;ibl_routines_end604,25750
    ibl_code_t shared_syscall_code;609,25842
    byte *shared_syscall;shared_syscall610,25878
    byte *unlinked_shared_syscall;unlinked_shared_syscall611,25904
    byte *end_shared_syscall;end_shared_syscall612,25939
    uint sys_syscall_offs;617,26169
    uint sys_unlink_offs;619,26258
    byte *do_syscall;do_syscall621,26291
    uint do_syscall_offs;622,26313
    byte *fcache_enter_indirect;fcache_enter_indirect624,26398
    byte *do_callback_return;do_callback_return625,26431
    byte *do_int_syscall;do_int_syscall631,26684
    uint do_int_syscall_offs;632,26710
    byte *do_clone_syscall;do_clone_syscall633,26784
    uint do_clone_syscall_offs;634,26812
    byte *do_vmkuw_syscall;do_vmkuw_syscall636,26909
    uint do_vmkuw_syscall_offs;637,26937
    byte *new_thread_dynamo_start;new_thread_dynamo_start642,27115
    byte *trace_head_incr;trace_head_incr645,27186
    byte *pextrw;pextrw648,27246
    byte *pinsrw;pinsrw649,27264
    profile_t *profile;profile652,27314
    byte *reset_exit_stub;reset_exit_stub658,27538
    byte *fcache_return_coarse;fcache_return_coarse665,27865
    byte *trace_head_return_coarse;trace_head_return_coarse666,27897
    byte *client_ibl_xfer;client_ibl_xfer669,28004
    uint client_ibl_unlink_offs;670,28031
    byte *clean_call_save;clean_call_save673,28126
    byte *clean_call_restore;clean_call_restore674,28153
    bool thread_shared;676,28184
    bool writable;677,28208
    gencode_mode_t gencode_mode;679,28238
    byte *gen_start_pc;gen_start_pc687,28589
    byte *gen_end_pc;gen_end_pc688,28643
    byte *commit_end_pc;commit_end_pc689,28693
} generated_code_t;691,28817
is_shared_gencode(728,30436
get_shared_gencode(741,30774
#define USE_SHARED_GENCODE_ALWAYS(769,31811
#define USE_SHARED_GENCODE(773,32009
#define USE_SHARED_BB_IBL(777,32237
#define USE_SHARED_TRACE_IBL(780,32331
get_emitted_routines_code(786,32580

x86/arch_exports.h,11998
#define _ARCH_EXPORTS_H_ 45,2094
#define XSP_SZ 48,2145
#define XMM_REG_SIZE 57,2517
#define YMM_REG_SIZE 58,2542
#define XMM_SAVED_REG_SIZE 59,2567
#define XMM_SLOTS_SIZE 60,2651
#define XMM_SAVED_SIZE 61,2710
#define YMM_ENABLED(63,2850
#define YMMH_REG_SIZE 64,2941
#define YMMH_SAVED_SIZE 65,2997
#define CLEANCALL_NUM_INLINE_SLOTS 68,3111
    IBL_NONE 71,3164
    IBL_RETURN 73,3266
    IBL_BRANCH_TYPE_START 74,3341
    IBL_BRANCH_TYPE_START = IBL_RETURN,74,3341
    IBL_INDCALL,75,3381
    IBL_INDJMP,76,3398
    IBL_GENERIC 77,3414
    IBL_GENERIC           = IBL_INDJMP,77,3414
    IBL_SHARED_SYSCALL 80,3599
    IBL_SHARED_SYSCALL    = IBL_GENERIC,80,3599
    IBL_BRANCH_TYPE_END81,3640
} ibl_branch_type_t;82,3664
#define IBL_HASH_FUNC_OFFSET_MAX 84,3686
typedef struct _lookup_table_access_t 100,4405
    ptr_uint_t hash_mask;101,4445
    struct _fragment_entry_t *lookuptable;lookuptable102,4471
} lookup_table_access_t;103,4514
typedef struct _table_stat_state_t 105,4540
    lookup_table_access_t table[table116,5091
    uint stats;121,5329
} table_stat_state_t;123,5352
typedef struct _spill_state_t 129,5551
    reg_t xax,131,5656
    reg_t xax, xbx,131,5656
    reg_t xax, xbx, xcx,131,5656
    reg_t xax, xbx, xcx, xdx;131,5656
    dcontext_t *dcontext;dcontext133,5791
} spill_state_t;134,5817
typedef struct _local_state_t 136,5835
    spill_state_t spill_space;137,5867
} local_state_t;138,5898
typedef struct _local_state_extended_t 140,5916
    spill_state_t spill_space;141,5957
    table_stat_state_t table_space;142,5988
} local_state_extended_t;143,6024
#define TLS_XAX_SLOT 149,6277
#define TLS_XBX_SLOT 150,6349
#define TLS_XCX_SLOT 151,6421
#define TLS_XDX_SLOT 152,6493
#define TLS_DCONTEXT_SLOT 153,6565
#define TABLE_OFFSET 155,6643
#define TLS_MASK_SLOT(156,6724
#define TLS_TABLE_SLOT(159,6969
# define TLS_HTABLE_STATS_SLOT 164,7247
#define TLS_NUM_SLOTS 169,7493
# define DETACH_CALLBACK_CODE_SIZE 175,7724
# define DETACH_CALLBACK_FINAL_JMP_SIZE 176,7763
typedef struct _detach_callback_stack_t 180,7981
    thread_id_t tid;181,8023
    ptr_uint_t count;182,8061
    app_pc *callback_addrs;callback_addrs183,8137
    reg_t xax_save;184,8217
    reg_t xbx_save;185,8276
    reg_t xcx_save;186,8335
    app_pc target;187,8394
    byte code_buf[code_buf189,8509
} detach_callback_stack_t;190,8560
#define PAD_JMPS_ALIGNMENT 231,10826
# define CHECK_JMP_TARGET_ALIGNMENT(235,10997
# define CHECK_JMP_TARGET_ALIGNMENT(242,11407
# define ATOMIC_4BYTE_WRITE(248,11663
#  define ATOMIC_8BYTE_WRITE(255,12039
# define ATOMIC_INC_int(271,12920
#  define ATOMIC_INC_int64(273,13050
# define ATOMIC_INC(275,13142
# define ATOMIC_DEC_int(276,13196
#  define ATOMIC_DEC_int64(278,13326
# define ATOMIC_DEC(280,13418
# define ATOMIC_ADD_int(282,13539
#  define ATOMIC_ADD_int64(285,13691
# define ATOMIC_COMPARE_EXCHANGE_int(288,13805
# define ATOMIC_COMPARE_EXCHANGE_int64(290,13944
# define ATOMIC_COMPARE_EXCHANGE 292,14090
# define ATOMIC_ADD(293,14151
#  define ATOMIC_ADD_PTR(295,14227
#  define ATOMIC_COMPARE_EXCHANGE_PTR 296,14295
#  define ATOMIC_ADD_PTR(298,14370
#  define ATOMIC_COMPARE_EXCHANGE_PTR 299,14436
# define SPINLOCK_PAUSE(301,14510
# define RDTSC_LL(302,14583
# define SERIALIZE_INSTRUCTIONS(303,14624
# define GET_FRAME_PTR(310,14893
# define GET_STACK_PTR(311,14945
static inline bool atomic_inc_and_test(314,15041
static inline bool atomic_dec_and_test(318,15191
static inline bool atomic_dec_becomes_zero(322,15340
static inline bool atomic_compare_exchange_int(326,15496
static inline bool atomic_compare_exchange_int64(330,15718
static inline int atomic_add_exchange_int(336,16051
static inline int64 atomic_add_exchange_int64(340,16236
# define atomic_add_exchange 344,16385
# define ATOMIC_4BYTE_WRITE(347,16456
#  define ATOMIC_8BYTE_WRITE(354,16853
# define ATOMIC_INC_suffix(363,17382
# define ATOMIC_INC_int(365,17500
# define ATOMIC_INC_int64(366,17557
# define ATOMIC_INC(367,17616
# define ATOMIC_DEC_suffix(368,17670
# define ATOMIC_DEC_int(370,17788
# define ATOMIC_DEC_int64(371,17845
# define ATOMIC_DEC(372,17904
# define ATOMIC_ADD_suffix(377,18099
# define ATOMIC_ADD_int(380,18293
# define ATOMIC_ADD_int64(381,18360
# define ATOMIC_ADD(382,18429
#  define ATOMIC_ADD_PTR(384,18505
#  define ATOMIC_ADD_PTR(386,18580
# define ATOMIC_ADD_EXCHANGE_suffix(389,18732
# define ATOMIC_ADD_EXCHANGE_int(392,18943
# define ATOMIC_ADD_EXCHANGE_int64(394,19044
# define ATOMIC_COMPARE_EXCHANGE_suffix(396,19147
# define ATOMIC_COMPARE_EXCHANGE_int(401,19456
# define ATOMIC_COMPARE_EXCHANGE_int64(403,19583
# define ATOMIC_COMPARE_EXCHANGE 405,19712
#  define ATOMIC_COMPARE_EXCHANGE_PTR 407,19785
#  define ATOMIC_COMPARE_EXCHANGE_PTR 409,19860
# define ATOMIC_EXCHANGE(411,19930
# define SPINLOCK_PAUSE(416,20136
# define RDTSC_LL(417,20194
# define SERIALIZE_INSTRUCTIONS(420,20323
# define GET_FRAME_PTR(423,20537
# define GET_STACK_PTR(424,20621
# define SET_FLAG(426,20706
# define SET_IF_NOT_ZERO(427,20786
# define SET_IF_NOT_LESS(428,20836
static inline bool atomic_inc_and_test(433,20999
static inline bool atomic_dec_and_test(448,21481
static inline bool atomic_dec_becomes_zero(463,21969
static inline bool atomic_compare_exchange_int(479,22457
atomic_exchange_int(494,23047
static inline bool atomic_compare_exchange_int64(505,23300
static inline int atomic_add_exchange_int(521,23956
static inline int64 atomic_add_exchange_int64(527,24120
# define atomic_add_exchange 533,24296
# undef ATOMIC_ADD_EXCHANGE_suffix534,24349
# undef ATOMIC_ADD_EXCHANGE_int535,24384
# undef ATOMIC_ADD_EXCHANGE_int64536,24416
#define atomic_compare_exchange 541,24471
# define atomic_compare_exchange_ptr(543,24542
# define ATOMIC_ADDR_WRITE 545,24672
# define atomic_compare_exchange_ptr(547,24724
# define ATOMIC_ADDR_WRITE 549,24846
#define ATOMIC_MAX_int(552,24900
# define ATOMIC_MAX_int64(567,25774
#define ATOMIC_MAX(582,26608
#define DEBUGGER_INTERRUPT_BYTE 584,26690
    TRANSLATE_IDENTICAL 633,28382
    TRANSLATE_IDENTICAL      = 0x0001,x0001633,28382
    TRANSLATE_OUR_MANGLING 634,28448
    TRANSLATE_OUR_MANGLING   = 0x0002,x0002634,28448
typedef struct _translation_entry_t 641,28775
    ushort cache_offs;643,28853
    ushort flags;645,28903
    app_pc app;646,28921
} translation_entry_t;647,28937
typedef struct _translation_info_t 657,29427
    uint num_entries;658,29464
    translation_entry_t translation[translation660,29529
} translation_info_t;661,29590
#define IS_SHARED_SYSCALL_THREAD_SHARED 664,29673
    RECREATE_FAILURE,670,29887
    RECREATE_SUCCESS_PC,671,29909
    RECREATE_SUCCESS_STATE,672,29934
} recreate_success_t;673,29962
typedef linkstub_t * (* fcache_enter_func_t)710,31754
    SYSCALL_METHOD_UNINITIALIZED,772,34638
    SYSCALL_METHOD_INT,773,34672
    SYSCALL_METHOD_SYSENTER,774,34696
    SYSCALL_METHOD_SYSCALL,775,34725
    SYSCALL_METHOD_WOW64,777,34768
enum { SYSCALL_METHOD_LONGEST_INSTR 781,34816
enum { BACK_FROM_NATIVE_RETSTUB_SIZE 848,37671
#define DYNAMO_START_XSP_ADJUST 869,38360
    CALLSTACK_USE_XML 893,39081
    CALLSTACK_USE_XML         = 0x00000001,x00000001893,39081
    CALLSTACK_ADD_HEADER 894,39125
    CALLSTACK_ADD_HEADER      = 0x00000002,x00000002894,39125
    CALLSTACK_MODULE_INFO 895,39169
    CALLSTACK_MODULE_INFO     = 0x00000004,x00000004895,39169
    CALLSTACK_MODULE_PATH 896,39213
    CALLSTACK_MODULE_PATH     = 0x00000008,x00000008896,39213
    CALLSTACK_FRAME_PTR 897,39257
    CALLSTACK_FRAME_PTR       = 0x00000010,x00000010897,39257
use_addr_prefix_on_short_disp(921,40057
#define SIZE64_MOV_XAX_TO_TLS 963,41794
#define SIZE64_MOV_XBX_TO_TLS 964,41834
#define SIZE64_MOV_PTR_IMM_TO_XAX 965,41874
#define SIZE64_MOV_PTR_IMM_TO_TLS 966,41914
#define SIZE64_MOV_R8_TO_XAX 967,41995
#define SIZE64_MOV_R9_TO_XCX 968,42035
#define SIZE32_MOV_XAX_TO_TLS 969,42075
#define SIZE32_MOV_XBX_TO_TLS 970,42115
#define SIZE32_MOV_XAX_TO_TLS_DISP32 971,42155
#define SIZE32_MOV_XBX_TO_TLS_DISP32 972,42195
#define SIZE32_MOV_XAX_TO_ABS 973,42235
#define SIZE32_MOV_XBX_TO_ABS 974,42275
#define SIZE32_MOV_PTR_IMM_TO_XAX 975,42315
#define SIZE32_MOV_PTR_IMM_TO_TLS 976,42355
# define FRAG_IS_32(979,42407
# define FRAG_IS_X86_TO_X64(980,42463
# define FRAG_IS_32(982,42537
# define FRAG_IS_X86_TO_X64(983,42569
#define SIZE_MOV_XAX_TO_TLS(986,42618
#define SIZE_MOV_XBX_TO_TLS(991,42855
#define SIZE_MOV_PTR_IMM_TO_XAX(996,43092
#define XCX_IN_TLS(1000,43247
#define FRAGMENT_BASE_PREFIX_SIZE(1001,43338
#define DIRECT_EXIT_STUB_SIZE32 1013,43866
#define DIRECT_EXIT_STUB_SIZE64 1015,43974
#define DIRECT_EXIT_STUB_SIZE(1017,44082
#define STUB_COARSE_DIRECT_SIZE32 1030,44723
#define STUB_COARSE_DIRECT_SIZE64 1031,44804
#define STUB_COARSE_DIRECT_SIZE(1032,44885
#define SET_TO_NOPS(1036,45048
#define SET_TO_DEBUG(1038,45153
#define IS_SET_TO_NOP(1040,45247
#define IS_SET_TO_DEBUG(1042,45362
#define CTI_PATCH_OFFSET 1045,45501
#define CTI_PATCH_SIZE 1047,45561
#define EXIT_STUB_PATCH_OFFSET 1050,45647
#define EXIT_STUB_PATCH_SIZE 1052,45714
#define MAX_PAD_SIZE 1055,45822
#define WITHIN_PAD_REGION(1058,45915
#define STATS_PAD_JMPS_ADD(1061,46002
    NOT_HOT_PATCHABLE=1133,48635
    NOT_HOT_PATCHABLE=false,1133,48635
    HOT_PATCHABLE=1134,48664
    HOT_PATCHABLE=true1134,48664
    MAX_INSTR_LENGTH 1213,51191
    CBR_LONG_LENGTH 1217,51309
    JMP_LONG_LENGTH 1218,51335
    JMP_SHORT_LENGTH 1219,51361
    CBR_SHORT_REWRITE_LENGTH 1220,51387
    RET_0_LENGTH 1221,51455
    PUSH_IMM32_LENGTH 1222,51481
    CTI_IND1_LENGTH 1225,51574
    CTI_IND2_LENGTH 1226,51656
    CTI_IND3_LENGTH 1227,51738
    CTI_DIRECT_LENGTH 1228,51820
    CTI_IAT_LENGTH 1229,51902
    CTI_FAR_ABS_LENGTH 1230,51984
    INT_LENGTH 1233,52149
    SYSCALL_LENGTH 1234,52169
    SYSENTER_LENGTH 1235,52193
#define REL32_REACHABLE_OFFS(1238,52222
#define REL32_REACHABLE(1240,52365
#define TRACE_CTI_MANGLE_SIZE_UPPER_BOUND 1293,54751
    app_pc region_start;1334,56462
    app_pc region_end;1335,56487
    app_pc start_pc;1336,56510
    app_pc min_pc;1337,56531
    app_pc max_pc;1338,56550
    app_pc bb_end;1339,56569
    bool contiguous;1340,56588
    bool overlap;1341,56609
} overlap_info_t;1342,56627
extract_branchtype(1539,64543
ibltype_to_linktype(1553,64940
convert_data_to_function(1577,65674
typedef struct dr_jmp_buf_t 1600,66493
    reg_t xbx;1601,66523
    reg_t xcx;1602,66538
    reg_t xdi;1603,66553
    reg_t xsi;1604,66568
    reg_t xbp;1605,66583
    reg_t xsp;1606,66598
    reg_t xip;1607,66613
    reg_t r8,1610,66727
    reg_t r8, r9,1610,66727
    reg_t r8, r9, r10,1610,66727
    reg_t r8, r9, r10, r11,1610,66727
    reg_t r8, r9, r10, r11, r12,1610,66727
    reg_t r8, r9, r10, r11, r12, r13,1610,66727
    reg_t r8, r9, r10, r11, r12, r13, r14,1610,66727
    reg_t r8, r9, r10, r11, r12, r13, r14, r15;1610,66727
    kernel_sigset_t sigmask;1617,67006
} dr_jmp_buf_t;1619,67042
#define DR_SETJMP(1643,67733
#define DR_LONGJMP(1645,67774
#  define APP_PARAM_0(1662,68368
#  define APP_PARAM_1(1663,68404
#  define APP_PARAM_2(1664,68440
#  define APP_PARAM_3(1665,68475
#  define APP_PARAM_4(1666,68510
#  define APP_PARAM_5(1667,68568
#  define APP_PARAM_6(1668,68626
#  define APP_PARAM_7(1669,68684
#  define APP_PARAM_8(1670,68742
#  define APP_PARAM_9(1671,68800
#  define APP_PARAM_10(1672,68859
#  define APP_PARAM_0(1674,68926
#  define APP_PARAM_1(1675,68962
#  define APP_PARAM_2(1676,68998
#  define APP_PARAM_3(1677,69034
#  define APP_PARAM_4(1678,69070
#  define APP_PARAM_5(1679,69105
#  define APP_PARAM_6(1680,69140
#  define APP_PARAM_7(1681,69198
#  define APP_PARAM_8(1682,69256
#  define APP_PARAM_9(1683,69314
#  define APP_PARAM_10(1684,69372
# define APP_PARAM(1687,69473
# define APP_PARAM(1690,69563

x86/decode.c,1586
# undef ASSERT_TRUNCATE73,3290
# undef ASSERT_BITFIELD_TRUNCATE74,3314
# undef ASSERT_NOT_REACHED75,3347
# define ASSERT_TRUNCATE 76,3374
# define ASSERT_BITFIELD_TRUNCATE 77,3443
# define ASSERT_NOT_REACHED 78,3521
#define xx 82,3629
static const instr_info_t escape_instr 83,3660
static const instr_info_t escape_38_instr 85,3764
static const instr_info_t escape_3a_instr 87,3880
#undef xx89,3996
static bool initexit_x86_mode 95,4138
set_x86_mode(105,4562
get_x86_mode(129,5398
is_variable_size(150,6229
resolve_var_reg_size(183,6919
resolve_variable_size(197,7344
resolve_variable_size_dc(262,10610
resolve_addr_size(271,10869
optype_is_indir_reg(280,11090
indir_var_reg_size(300,11592
indir_var_reg_offs_factor(336,12606
read_immed(354,13028
read_operand(390,14149
read_modrm(513,18797
read_vex(585,21262
read_instruction(689,24788
reg8_alternative(1081,41214
    DECODE_REG_REG,1095,41714
    DECODE_REG_BASE,1096,41734
    DECODE_REG_INDEX,1097,41755
    DECODE_REG_RM,1098,41777
} decode_reg_t;1099,41796
decode_reg(1105,41963
decode_modrm(1191,45104
get_immed(1354,52228
resolve_var_reg(1373,52868
ds_seg(1417,54379
decode_operand(1433,54873
decode_eflags_usage(1722,68813
decode_opcode(1748,69790
check_is_variable_size(1792,71587
decode_common(1814,72474
decode(1970,79030
decode_from_copy(1976,79148
get_next_instr_info(1982,79320
decode_first_opcode_byte(1988,79425
decode_opcode_name(1996,79592
unit_check_decode_ff_opcode(2011,80032
#define CHECK_ENCODE_OPCODE(2047,81255
unit_check_sse3(2058,81788
int main(2092,83629

x86/decode.h,7600
#define DECODE_H41,1961
#define PREFIX_LOCK 61,2645
#define PREFIX_JCC_NOT_TAKEN 62,2735
#define PREFIX_JCC_TAKEN 63,2819
#define PREFIX_DATA 72,3155
#define PREFIX_ADDR 73,3192
#define PREFIX_REX_W 74,3229
#define PREFIX_REX_R 75,3266
#define PREFIX_REX_X 76,3303
#define PREFIX_REX_B 77,3340
#define PREFIX_REX_GENERAL 78,3377
#define PREFIX_REX_ALL 79,3463
#define PREFIX_SIZE_SPECIFIERS 81,3599
#define PREFIX_REP 84,3749
#define PREFIX_REPNE 85,3786
#define PREFIX_SEG_FS 92,4050
#define PREFIX_SEG_GS 93,4087
#define PREFIX_VEX_2B 98,4245
#define PREFIX_VEX_3B 99,4282
#define PREFIX_VEX_L 100,4319
#define PREFIX_SIGNIFICANT 105,4511
#define SEG_JCC_NOT_TAKEN 108,4635
#define SEG_JCC_TAKEN 109,4672
    OPCODE_TWOBYTES 122,5194
    OPCODE_TWOBYTES = 0x00000010,x00000010122,5194
    OPCODE_REG 123,5228
    OPCODE_REG      = 0x00000020,x00000020123,5228
    OPCODE_MODRM 124,5262
    OPCODE_MODRM    = 0x00000040,x00000040124,5262
    OPCODE_SUFFIX 125,5296
    OPCODE_SUFFIX   = 0x00000080,x00000080125,5296
    OPCODE_THREEBYTES=126,5330
    OPCODE_THREEBYTES=0x00000008,x00000008126,5330
typedef struct instr_info_t 166,7046
    int type;167,7076
    uint opcode;192,8726
    const char *name;name193,8743
    byte dst1_type;197,8852
    byte dst1_type;  opnd_size_t dst1_size;197,8852
    byte dst2_type;198,8896
    byte dst2_type;  opnd_size_t dst2_size;198,8896
    byte src1_type;199,8940
    byte src1_type;  opnd_size_t src1_size;199,8940
    byte src2_type;200,8984
    byte src2_type;  opnd_size_t src2_size;200,8984
    byte src3_type;201,9028
    byte src3_type;  opnd_size_t src3_size;201,9028
    byte flags;202,9072
    uint eflags;203,9124
    ptr_int_t code;204,9194
} instr_info_t;209,9508
    INVALID 217,9684
    INVALID = OP_LAST 217,9684
    PREFIX,219,9733
    ESCAPE,221,9783
    FLOAT_EXT,223,9844
    EXTENSION,225,9909
    PREFIX_EXT,227,10003
    REP_EXT,229,10077
    REPNE_EXT,231,10150
    MOD_EXT,233,10226
    RM_EXT,235,10299
    SUFFIX_EXT,237,10384
    X64_EXT,239,10472
    ESCAPE_3BYTE_38,241,10547
    ESCAPE_3BYTE_3a,243,10620
    REX_B_EXT,245,10703
    REX_W_EXT,247,10780
    VEX_PREFIX_EXT,249,10866
    VEX_EXT,251,10948
    VEX_L_EXT,253,11033
    VEX_W_EXT,255,11096
#define HAS_MODRM 260,11212
#define HAS_EXTRA_OPERANDS 261,11270
#define EXTRAS_IN_CODE_FIELD 263,11369
#define X86_INVALID 267,11603
#define X64_INVALID 268,11638
#define REQUIRES_PREFIX 270,11747
#define REQUIRES_VEX 274,11905
#define REQUIRES_REX 279,12110
typedef struct decode_info_t 286,12360
    uint prefixes;293,12704
    byte seg_override;294,12723
    byte modrm;296,12807
    byte mod;297,12823
    byte reg;298,12837
    byte rm;299,12851
    bool has_sib;300,12864
    byte scale;301,12882
    byte index;302,12898
    byte base;303,12914
    bool has_disp;304,12929
    int disp;305,12948
    opnd_size_t size_immed;307,12983
    opnd_size_t size_immed2;308,13011
    bool immed_pc_relativize:immed_pc_relativize309,13040
    bool immed_subtract_length:immed_subtract_length310,13072
    bool immed_pc_rel_offs:immed_pc_rel_offs311,13106
    ushort immed_shift;312,13136
    ptr_int_t immed;313,13160
    ptr_int_t immed2;314,13181
    byte *start_pc;start_pc316,13338
    byte *final_pc;final_pc317,13358
    uint len;318,13378
    byte *disp_abs;disp_abs322,13526
    bool x86_mode;329,13830
    byte *orig_pc;orig_pc332,13919
    bool data_prefix;334,13987
    bool rep_prefix;335,14009
    bool repne_prefix;336,14030
    byte vex_vvvv;337,14053
    bool vex_encoded;338,14106
    ptr_int_t cur_note;340,14167
    bool has_instr_opnds;341,14191
} decode_info_t;342,14217
    TYPE_NONE,352,14421
    TYPE_A,353,14436
    TYPE_C,354,14489
    TYPE_D,355,14540
    TYPE_E,356,14589
    TYPE_G,358,14704
    TYPE_H,359,14752
    TYPE_I,360,14810
    TYPE_J,361,14838
    TYPE_L,362,14897
    TYPE_M,363,14965
    TYPE_O,364,15005
    TYPE_P,365,15055
    TYPE_Q,366,15098
    TYPE_R,367,15146
    TYPE_S,368,15187
    TYPE_V,369,15243
    TYPE_W,370,15286
    TYPE_X,371,15334
    TYPE_Y,372,15365
    TYPE_P_MODRM,373,15397
    TYPE_V_MODRM,374,15454
    TYPE_1,375,15511
    TYPE_FLOATCONST,376,15523
    TYPE_XLAT,377,15544
    TYPE_MASKMOVQ,378,15585
    TYPE_FLOATMEM,379,15623
    TYPE_REG,380,15642
    TYPE_VAR_REG,381,15685
    TYPE_VARZ_REG,384,15884
    TYPE_VAR_XREG,387,16066
    TYPE_VAR_ADDR_XREG,390,16273
    TYPE_REG_EX,397,16752
    TYPE_VAR_REG_EX,398,16839
    TYPE_VAR_XREG_EX,400,16984
    TYPE_VAR_REGX_EX,402,17113
    TYPE_INDIR_E,405,17301
    TYPE_INDIR_REG,406,17319
    TYPE_INDIR_VAR_XREG,407,17339
    TYPE_INDIR_VAR_REG,410,17560
    TYPE_INDIR_VAR_XIREG,413,17766
    TYPE_INDIR_VAR_XREG_OFFS_1,416,18009
    TYPE_INDIR_VAR_XREG_OFFS_8,418,18134
    TYPE_INDIR_VAR_XREG_OFFS_N,420,18287
    TYPE_INDIR_VAR_XIREG_OFFS_1,423,18508
    TYPE_INDIR_VAR_REG_OFFS_2,425,18636
    TYPE_INDIR_VAR_XREG_SIZEx8,431,19015
    TYPE_INDIR_VAR_REG_SIZEx2,433,19146
    TYPE_INDIR_VAR_REG_SIZEx3x5,435,19276
    OPSZ_NA 477,21573
    OPSZ_NA = DR_REG_INVALID+DR_REG_INVALID477,21573
    OPSZ_FIRST 478,21659
    OPSZ_FIRST = OPSZ_NA,478,21659
    OPSZ_0,479,21685
    OPSZ_1,481,21832
    OPSZ_2,482,21871
    OPSZ_4,483,21911
    OPSZ_6,484,21956
    OPSZ_8,485,22000
    OPSZ_10,486,22045
    OPSZ_16,488,22184
    OPSZ_14,489,22246
    OPSZ_28,490,22332
    OPSZ_94,491,22419
    OPSZ_108,492,22489
    OPSZ_512,493,22560
    OPSZ_2_short1,506,23412
    OPSZ_4_short2,509,23660
    OPSZ_4_rex8_short2,510,23708
    OPSZ_4_rex8,511,23763
    OPSZ_6_irex10_short4,512,23832
    OPSZ_8_short2,515,24094
    OPSZ_8_short4,516,24151
    OPSZ_28_short14,517,24214
    OPSZ_108_short94,518,24298
    OPSZ_4x8,520,24437
    OPSZ_6x10,522,24571
    OPSZ_4x8_short2,527,24797
    OPSZ_4x8_short2xi8,534,25234
    OPSZ_4_short2xi4,536,25380
    OPSZ_1_reg4,542,25631
    OPSZ_2_reg4,543,25706
    OPSZ_4_reg16,544,25781
    OPSZ_xsave,547,25943
    OPSZ_12,549,26087
    OPSZ_32,550,26133
    OPSZ_40,552,26248
    OPSZ_32_short16,553,26294
    OPSZ_8_rex16,554,26350
    OPSZ_8_rex16_short4,555,26405
    OPSZ_12_rex40_short6,556,26468
    OPSZ_16_vex32,557,26518
    OPSZ_LAST,559,26654
# define OPSZ_PTR 563,26684
# define OPSZ_STACK 564,26756
# define OPSZ_PTR 566,26848
# define OPSZ_STACK 567,26920
#define OPSZ_VARSTACK 569,27013
#define OPSZ_REXVARSTACK 571,27162
#define OPSZ_ret 574,27331
#define OPSZ_call 575,27409
#define OPSZ_lea 578,27539
#define OPSZ_invlpg 579,27623
#define OPSZ_xlat 580,27710
#define OPSZ_clflush 581,27795
#define OPSZ_prefetch 582,27883
#define OPSZ_lgdt 583,27973
#define OPSZ_sgdt 584,28058
#define OPSZ_lidt 585,28143
#define OPSZ_sidt 586,28228
#define OPSZ_bound 587,28313
#define OPSZ_maskmovq 588,28399
#define OPSZ_maskmovdqu 589,28488
#define OPSZ_fldenv 590,28579
#define OPSZ_fnstenv 591,28666
#define OPSZ_fnsave 592,28754
#define OPSZ_frstor 593,28841
#define OPSZ_fxsave 594,28928
#define OPSZ_fxrstor 595,29015
    OPSZ_4_of_8 602,29236
    OPSZ_4_of_8 = OPSZ_LAST,602,29236
    OPSZ_4_of_16,603,29313
    OPSZ_8_of_16,604,29378
    OPSZ_8_of_16_vex32,605,29443
    OPSZ_16_of_32,608,29609
    OPSZ_LAST_ENUM,609,29656
# define OPSZ_STATS 613,29724
# define OPSZ_STATS 615,29757
#define MODRM_BYTE(618,29792
#define DEFAULT_X86_MODE 647,31159
#define X64_MODE(649,31233
#define X64_MODE_DC(651,31311
#define X64_CACHE_MODE_DC(655,31528

x86/decode_fast.c,2814
# undef ASSERT_TRUNCATE51,2206
# undef ASSERT_BITFIELD_TRUNCATE52,2230
# undef ASSERT_NOT_REACHED53,2263
# define ASSERT_TRUNCATE 54,2290
# define ASSERT_BITFIELD_TRUNCATE 55,2359
# define ASSERT_NOT_REACHED 56,2437
static const byte fixed_length[fixed_length75,3291
static const signed char immed_adjustment[immed_adjustment105,4730
static const signed char immed_adjustment_intel64[immed_adjustment_intel64129,6102
static const signed char disp_adjustment[disp_adjustment157,7634
static const char x64_adjustment[x64_adjustment185,9196
    VARLEN_NONE,222,11223
    VARLEN_MODRM,223,11240
    VARLEN_FP_OP,224,11258
    VARLEN_ESCAPE,225,11276
    VARLEN_3BYTE_38_ESCAPE,226,11316
    VARLEN_3BYTE_3A_ESCAPE,227,11371
#define m 231,11489
#define f 232,11512
#define e 233,11535
static const byte variable_length[variable_length238,11717
#undef m261,12741
#undef f262,12750
#undef e263,12759
static const byte escape_fixed_length[escape_fixed_length272,13019
#define m 303,14375
#define e1 304,14398
#define e2 305,14432
static const byte escape_variable_length[escape_variable_length310,14632
#undef m336,15566
#undef e337,15575
static const byte threebyte_38_fixed_length[threebyte_38_fixed_length346,15928
static const byte threebyte_3a_fixed_length[threebyte_3a_fixed_length367,16926
static const byte threebyte_38_vex_extra[threebyte_38_vex_extra388,17823
decode_sizeof(415,19036
sizeof_3byte_38(607,26733
sizeof_3byte_3a(622,27249
sizeof_escape(638,27935
sizeof_modrm(678,29287
sizeof_fp_op(739,31149
static const byte interesting[interesting757,31830
#define x 787,33096
#define RC 788,33112
#define RP 789,33140
#define RZ 790,33168
#define RS 791,33196
#define RO 792,33224
#define R6 793,33252
#define RB 794,33279
#define RL 795,33324
#define RE 796,33369
#define R5O 797,33429
#define WC 798,33478
#define WZ 799,33507
#define W6 800,33536
#define W5 801,33564
#define W5O 802,33615
#define BC 803,33666
#define BA 804,33711
#define BD 805,33756
#define B6 806,33816
#define EFLAGS_6_ESCAPE 807,33860
#define EFLAGS_6_SPECIAL 808,33888
#define E 809,33916
#define S 810,33942
static const int eflags_6[eflags_6812,33970
static const int escape_eflags_6[escape_eflags_6836,35112
#undef x857,36184
#undef RC858,36193
#undef RP859,36203
#undef RZ860,36213
#undef RS861,36223
#undef RO862,36233
#undef R6863,36243
#undef RB864,36253
#undef RL865,36263
#undef RE866,36273
#undef R5O867,36283
#undef WC868,36294
#undef WZ869,36304
#undef W6870,36314
#undef W5871,36324
#undef W5O872,36334
#undef BC873,36345
#undef BA874,36355
#undef BD875,36365
#undef B6876,36375
#undef E877,36385
#undef S878,36394
convert_8bit_offset(887,36735
decode_cti(912,37895
decode_next_pc(1324,54426
decode_raw(1344,55162

x86/decode_fast.h,30
#define DECODE_FAST_H40,1904

x86/decode_table.c,8761
const instr_info_t * const op_instr[op_instr68,3181
#undef Jb1104,53953
#define xx 1106,53964
#define Ap 1109,54060
#define Cr 1110,54148
#define Dr 1111,54177
#define Eb 1112,54206
#define Ew 1113,54233
#define Ev 1114,54260
#define Esv 1115,54299
#define Ed 1116,54377
#define Ep 1117,54404
#define Ed_q 1118,54445
#define Rd_Mb 1119,54478
#define Rd_Mw 1120,54512
#define Gb 1121,54546
#define Gw 1122,54573
#define Gv 1123,54600
#define Gz 1124,54639
#define Gd 1125,54673
#define Gd_q 1126,54700
#define Gr 1127,54733
#define Ib 1128,54762
#define Iw 1129,54789
#define Iv 1130,54816
#define Iz 1131,54855
#define Jb 1132,54889
#define Jz 1133,54916
#define Ma 1134,54953
#define Mp 1135,54987
#define Ms 1136,55028
#define Ob 1137,55058
#define Ov 1138,55085
#define Pd 1139,55124
#define Pq 1140,55151
#define Pd_q 1141,55178
#define Ppi 1142,55211
#define Nq 1143,55238
#define Qd 1144,55271
#define Qq 1145,55298
#define Qpi 1146,55325
#define Rr 1147,55352
#define Sw 1148,55381
#define Vq 1149,55408
#define Vdq 1150,55435
#define Vd_dq 1151,55463
#define Vq_dq 1152,55498
#define Vps 1153,55533
#define Vpd 1154,55561
#define Vss 1155,55589
#define Vsd 1156,55622
#define Ups 1157,55655
#define Upd 1158,55689
#define Udq 1159,55723
#define Uq_dq 1160,55757
#define Wq 1161,55798
#define Wdq 1162,55825
#define Wq_dq 1163,55853
#define Wps 1164,55888
#define Wpd 1165,55916
#define Wss 1166,55944
#define Wsd 1167,55977
#define Udq_Md 1168,56010
#define Xb 1169,56046
#define Xv 1170,56073
#define Xz 1171,56112
#define Yb 1172,56146
#define Yv 1173,56173
#define Yz 1174,56212
#define Vvs 1177,56267
#define Vvd 1178,56301
#define Vvdq 1179,56335
#define Vqq 1180,56370
#define Vdq_qq 1181,56398
#define Wvs 1182,56435
#define Wvd 1183,56469
#define Wvdq 1184,56503
#define Uvs 1185,56538
#define Uvd 1186,56578
#define Uss 1187,56618
#define Usd 1188,56657
#define Hvs 1189,56696
#define Hvd 1190,56730
#define Hss 1191,56764
#define Hsd 1192,56797
#define Hq_dq 1193,56830
#define Hdq 1194,56865
#define Hvdq 1195,56893
#define Wvq_dq 1196,56928
#define Mvs 1197,56970
#define Mvd 1198,57004
#define Mvdq 1199,57038
#define Ldq 1200,57073
#define Lvdq 1201,57138
#define Mb 1207,57350
#define Md 1208,57377
#define Md_q 1209,57404
#define Mw 1210,57438
#define Mm 1211,57465
#define Me 1212,57494
#define Mxsave 1213,57523
#define Mps 1214,57557
#define Mpd 1215,57586
#define Mss 1216,57615
#define Msd 1217,57643
#define Mq 1218,57671
#define Mdq 1219,57698
#define Mq_dq 1220,57727
#define Mv 1221,57762
#define Zb 1222,57801
#define Bq 1223,57831
#define Bdq 1224,57865
#define Kw 1225,57901
#define Kd 1226,57935
#define Kq 1227,57969
#define Kx 1228,58003
#define Ky 1229,58038
#define Kz 1230,58102
#define i_dx 1231,58167
#define i_Ev 1232,58204
#define i_Exi 1233,58251
#define i_Ep 1234,58299
#define i_xSP 1235,58348
#define i_iSP 1236,58391
#define i_xBP 1237,58435
#define i_iSPo1 1239,58523
#define i_vSPo2 1240,58576
#define i_xSPo1 1241,58627
#define i_xSPo8 1242,58679
#define i_xSPs8 1243,58731
#define i_vSPs2 1244,58783
#define i_vSPs3 1245,58834
#define i_xSPoN 1247,58914
#define c1 1248,58966
#define cF 1249,58993
#define Av 1252,59050
#define eAX 1256,59144
#define eCX 1257,59178
#define eDX 1258,59212
#define eBX 1259,59246
#define eSP 1260,59280
#define eBP 1261,59314
#define eSI 1262,59348
#define eDI 1263,59382
#define zAX 1266,59479
#define zCX 1267,59514
#define zDX 1268,59549
#define zBX 1269,59584
#define zSP 1270,59619
#define zBP 1271,59654
#define zSI 1272,59689
#define zDI 1273,59724
#define xAX 1278,59898
#define xCX 1279,59933
#define xDX 1280,59968
#define xBX 1281,60003
#define xSP 1282,60038
#define xBP 1283,60073
#define xSI 1284,60108
#define xDI 1285,60143
#define axSP 1290,60318
#define axBP 1291,60359
#define axCX 1293,60433
#define axSI 1295,60502
#define axDI 1296,60543
#define axAX 1297,60584
#define al_x 1300,60704
#define cl_x 1301,60737
#define dl_x 1302,60770
#define bl_x 1303,60803
#define ah_x 1304,60836
#define ch_x 1305,60869
#define dh_x 1306,60902
#define bh_x 1307,60935
#define eAX_x 1310,61055
#define eCX_x 1311,61094
#define eDX_x 1312,61133
#define eBX_x 1313,61172
#define eSP_x 1314,61211
#define eBP_x 1315,61250
#define eSI_x 1316,61289
#define eDI_x 1317,61328
#define xAX_x 1320,61451
#define xCX_x 1321,61491
#define xDX_x 1322,61531
#define xBX_x 1323,61571
#define xSP_x 1324,61611
#define xBP_x 1325,61651
#define xSI_x 1326,61691
#define xDI_x 1327,61731
#define uAX_x 1330,61851
#define uCX_x 1331,61891
#define uDX_x 1332,61931
#define uBX_x 1333,61971
#define uSP_x 1334,62011
#define uBP_x 1335,62051
#define uSI_x 1336,62091
#define uDI_x 1337,62131
#define ax 1339,62172
#define cx 1340,62200
#define dx 1341,62228
#define bx 1342,62256
#define sp 1343,62284
#define bp 1344,62312
#define si 1345,62340
#define di 1346,62368
#define al 1348,62397
#define cl 1349,62425
#define dl 1350,62453
#define bl 1351,62481
#define ah 1352,62509
#define ch 1353,62537
#define dh 1354,62565
#define bh 1355,62593
#define eax 1357,62622
#define ecx 1358,62652
#define edx 1359,62682
#define ebx 1360,62712
#define esp 1361,62742
#define ebp 1362,62772
#define esi 1363,62802
#define edi 1364,62832
#define xsp 1366,62863
#define xcx 1367,62893
#define cs 1369,62924
#define ss 1370,62953
#define ds 1371,62982
#define es 1372,63011
#define fs 1373,63040
#define gs 1374,63069
#define st0 1376,63099
#define st1 1377,63129
#define st2 1378,63159
#define st3 1379,63189
#define st4 1380,63219
#define st5 1381,63249
#define st6 1382,63279
#define st7 1383,63309
#define xmm0 1385,63340
#define no 1388,63385
#define mrm 1389,63404
#define xop 1390,63431
#define mrm_xop 1391,63490
#define xop_next 1392,63559
#define i64 1393,63597
#define o64 1394,63626
#define reqp 1395,63655
#define vex 1396,63688
#define rex 1397,63718
#define x 1400,63762
#define fRC 1401,63778
#define fRP 1402,63807
#define fRA 1403,63836
#define fRZ 1404,63865
#define fRS 1405,63894
#define fRT 1406,63923
#define fRI 1407,63952
#define fRD 1408,63981
#define fRO 1409,64010
#define fRN 1410,64039
#define fRR 1411,64068
#define fRX 1412,64097
#define fR6 1413,64127
#define fWC 1414,64155
#define fWP 1415,64185
#define fWA 1416,64215
#define fWZ 1417,64245
#define fWS 1418,64275
#define fWT 1419,64305
#define fWI 1420,64335
#define fWD 1421,64365
#define fWO 1422,64395
#define fWN 1423,64425
#define fWR 1424,64455
#define fWX 1425,64485
#define fW6 1426,64516
#define fINT 1430,64619
#define NA 1433,64709
#define END_LIST 1434,64722
#define tfb 1435,64742
#define tsb 1436,64777
#define tex 1437,64813
#define t38 1438,64848
#define t3a 1439,64886
#define tpe 1440,64924
#define tvex 1441,64966
#define modx 1442,65006
#define tre 1443,65046
#define tne 1444,65085
#define tfl 1445,65126
#define tfh 1446,65166
#define exop 1447,65207
#define t64e 1448,65247
#define trexb 1449,65287
#define trexw 1450,65330
#define tvex 1451,65373
const instr_info_t invalid_instr 1456,65532
const instr_info_t first_byte[first_byte1463,65772
const instr_info_t second_byte[second_byte1766,86572
const instr_info_t extensions[extensions2082,107428
const instr_info_t prefix_extensions[prefix_extensions2412,127189
const instr_info_t vex_extensions[vex_extensions3991,223762
const instr_info_t mod_extensions[mod_extensions4240,240258
const instr_info_t rm_extensions[rm_extensions4293,242806
const instr_info_t x64_extensions[x64_extensions4349,246014
const instr_info_t vex_prefix_extensions[vex_prefix_extensions4408,249616
const instr_info_t vex_L_extensions[vex_L_extensions4422,250252
const instr_info_t rex_b_extensions[rex_b_extensions4452,251674
const instr_info_t rex_w_extensions[rex_w_extensions4471,252628
const byte third_byte_38_index[third_byte_38_index4514,254647
const instr_info_t third_byte_38[third_byte_384533,255788
const byte third_byte_3a_index[third_byte_3a_index4647,264166
const instr_info_t third_byte_3a[third_byte_3a4666,265307
const instr_info_t vex_W_extensions[vex_W_extensions4713,268359
const instr_info_t rep_extensions[rep_extensions4818,275293
const instr_info_t repne_extensions[repne_extensions4884,279209
const instr_info_t float_low_modrm[float_low_modrm4928,282190
const instr_info_t float_high_modrm[float_high_modrm5007,287562
const byte suffix_index[suffix_index5571,332824
const instr_info_t suffix_extensions[suffix_extensions5590,333958
const instr_info_t extra_operands[extra_operands5630,336879

x86/decodelib.c,664
options_t dynamo_options;48,2084
file_t our_stdout 52,2202
file_t our_stderr 53,2237
file_t our_stdin 54,2272
dr_get_stdout_file(59,2343
dr_get_stderr_file(65,2431
dr_get_stdin_file(71,2518
static uint vendor 77,2597
proc_get_vendor(80,2652
proc_set_vendor(87,2709
heap_alloc(99,2948
heap_free(105,3058
get_thread_private_dcontext(111,3172
external_error(117,3244
proc_save_fpstate(124,3391
proc_restore_fpstate(130,3444
dr_mcontext_as_priv_mcontext(136,3533
instrlist_meta_postinsert(144,3783
double_print(156,4173
print_to_buffer(178,4852
#undef vsnprintf181,4956
print_file(204,5641
#define MAX_PRINT_FILE_LEN 211,5886
os_write(233,6438

x86/disassemble.c,1741
# undef ASSERT_TRUNCATE76,3202
# undef ASSERT_BITFIELD_TRUNCATE77,3226
# undef ASSERT_NOT_REACHED78,3259
# define ASSERT_TRUNCATE 79,3286
# define ASSERT_BITFIELD_TRUNCATE 80,3355
# define ASSERT_NOT_REACHED 81,3433
disassemble_set_syntax(90,3636
#define BYTES_PER_LINE 103,4016
immed_prefix(110,4221
postop_suffix(116,4325
reg_disassemble(122,4446
opnd_mem_disassemble_prefix(131,4760
opnd_base_disp_disassemble(153,5560
internal_opnd_disassemble(218,8100
opnd_disassemble(489,21795
opnd_disassemble_to_buffer(500,22224
print_bytes_to_buffer(510,22489
print_extra_bytes_to_buffer(533,23169
print_bytes_to_file(547,23671
print_extra_bytes_to_file(559,24098
internal_disassemble(575,24758
internal_disassemble_to_file(630,26543
disassemble(654,27552
disassemble_with_bytes(668,28093
disassemble_with_info(688,28838
disassemble_from_copy(705,29535
disassemble_to_buffer(713,29833
instr_implicit_reg(726,30278
opnd_disassemble_noimplicit(743,30786
instr_disassemble_opnds_noimplicit(825,33305
instr_opcode_name(888,35978
instr_opcode_name_suffix(910,36620
internal_instr_disassemble(981,39130
instr_disassemble(1125,44868
instr_disassemble_to_buffer(1149,45912
exit_stub_type_desc(1159,46198
common_disassemble_fragment(1189,47247
disassemble_fragment(1363,54347
disassemble_fragment_header(1375,54686
disassemble_fragment_body(1381,54845
disassemble_app_bb(1387,55002
instrlist_disassemble(1399,55365
int instrlist_disassembled_instr_cnt(1508,59654
callstack_dump_module_info(1521,59916
internal_dump_callstack_to_buffer(1539,60585
internal_dump_callstack(1601,63120
dump_callstack(1615,63662
dump_callstack_to_buffer(1621,63814
dump_mcontext_callstack(1630,64074
dump_dr_callstack(1640,64381

x86/disassemble.h,469
#define DISASSEMBLE_H41,1966
#define MAX_OPND_DIS_SZ 46,2089
#define MAX_INSTR_DIS_SZ 50,2229
#define MAX_PC_DIS_SZ 54,2447
    DR_DISASM_DR 67,2779
    DR_DISASM_DR             =  0x0,x067,2779
    DR_DISASM_INTEL 73,3016
    DR_DISASM_INTEL          =  0x1,x173,3016
    DR_DISASM_ATT 79,3250
    DR_DISASM_ATT            =  0x2,x279,3250
    DR_DISASM_STRICT_INVALID 88,3709
    DR_DISASM_STRICT_INVALID =  0x4,x488,3709
} dr_disasm_flags_t;89,3746

x86/emit_utils.c,6991
#define FRAGMENT_TAG_OFFS 69,2611
#define FRAGMENT_START_PC_OFFS 71,2747
#define FRAGMENT_COUNTER_OFFS 72,2813
#define FRAGMENT_PREFIX_SIZE_OFFS 73,2882
#define HASHLOOKUP_TAG_OFFS 75,2953
#define HASHLOOKUP_START_PC_OFFS 76,3030
#  define HASHLOOKUP_STAT_OFFS(79,3146
#  define LINKSTUB_TARGET_FRAG_OFFS 84,3294
#  define LINKSTUB_COUNT_OFFS 88,3411
#define UNPROT_OFFS(94,3603
#define POST 110,4200
#define PRE 111,4239
#define APP 112,4277
#  define FRAG_DB_SHARED(122,4598
#  define FRAG_DB_SHARED(124,4641
#define STUB_DIRECT_SIZE(194,6919
#define STUB_INDIRECT_SIZE32 200,7123
#define STUB_INDIRECT_SIZE64 202,7228
#define STUB_INDIRECT_SIZE(204,7333
#define STUB_COARSE_INDIRECT_SIZE(208,7491
#  define LINKCOUNT_INCSIZE 211,7587
#  define LINKCOUNT_INCSIZE 213,7625
#define LINKCOUNT_EFLAGS_SAVE 215,7666
#define LINKCOUNT_EFLAGS_RESTORE 216,7702
#define LINKCOUNT_FLAGSIZE 217,7741
#define LINKCOUNT_DIRECT_EXTRA(219,7820
#define LINKCOUNT_UNLINKED_ENTRY(221,7931
#define LINKCOUNT_NEVER_LINKED_SENTINEL 229,8310
exit_stub_size(235,8461
insert_relative_target(316,11781
insert_relative_jump(328,12137
insert_spill_or_restore(347,12701
insert_jmp_to_ibl(424,15874
insert_linkcount_inc(494,18687
insert_linkcount_saveflags(523,19524
insert_linkcount_restoreflags(538,19940
is_patchable_exit_stub_helper(552,20347
is_patchable_exit_stub(581,21150
is_exit_cti_stub_patchable(588,21381
bytes_for_exitstub_alignment(607,22056
extend_trace_pad_bytes(632,23062
pad_for_exitstub_alignment(659,24668
remove_nops_from_ilist(684,25742
nop_pad_ilist(714,26941
insert_inlined_ibl(828,32989
get_direct_exit_target(882,35429
insert_save_xax(898,36023
insert_restore_xax(908,36420
insert_exit_stub_other_flags(924,37102
insert_exit_stub(1085,43997
exit_cti_disp_pc(1092,44198
patch_branch(1142,45995
change_linkcount_target(1150,46221
optimize_linkcount_stub(1170,47050
patchable_exit_cti_align_offs(1256,50919
is_exit_cti_patchable(1273,51855
link_direct_exit(1324,53472
unlink_direct_exit(1418,57479
link_indirect_exit(1487,60193
linkstub_unlink_entry_offset(1568,63155
indirect_linkstub_stub_pc(1586,63704
indirect_linkstub_target(1624,65191
linkstub_cbr_disambiguate(1659,66769
cbr_fallthrough_exit_cti(1679,67354
unlink_indirect_exit(1695,68002
entrance_stub_jmp(1794,71723
coarse_is_entrance_stub(1811,72287
coarse_is_trace_head(1835,73097
entrance_stub_jmp_target(1849,73525
entrance_stub_target_tag(1860,73760
coarse_is_indirect_stub(1901,75391
coarse_cti_is_intra_fragment(1911,75667
coarse_indirect_stub_jmp_target(1943,77017
coarse_indirect_stub_size(1967,77774
entrance_stub_linked(1977,78097
patch_coarse_branch(1993,78785
link_entrance_stub(2032,80387
unlink_entrance_stub(2047,81054
entrance_stub_from_cti(2065,81715
init_patch_list(2076,81994
add_patch_entry_internal(2087,82421
add_patch_entry(2120,83768
add_patch_marker(2133,84297
remove_assembled_patch_markers(2142,84700
relocate_patch_list(2170,85511
encode_with_patch_list(2229,88161
print_patch_list(2318,91836
disassemble_with_annotations(2337,92462
patch_emitted_code(2364,93307
#define GET_IB_FTABLE(2441,96810
update_indirect_exit_stub(2450,97147
#define IBL_EFLAGS_IN_TLS(2510,99414
#define RESTORE_XAX_PREFIX(2512,99484
#define PREFIX_BASE(2515,99666
enum {PREFIX_SIZE_RESTORE_OF PREFIX_SIZE_RESTORE_OF2518,99763
      PREFIX_SIZE_FIVE_EFLAGS 2519,99819
use_ibt_prefix(2524,99932
ibl_use_target_prefix(2546,101003
fragment_prefix_size(2565,101874
insert_restore_xcx(2610,103771
insert_restore_register(2623,104339
insert_fragment_prefix(2650,105377
static uint profile_call_length 2741,109276
static int profile_call_fragment_offset 2742,109313
static int profile_call_call_offset 2743,109358
static byte profile_call_buf[profile_call_buf2744,109399
static dcontext_t *buffer_dcontext;buffer_dcontext2745,109434
profile_call_size(2749,109521
finalize_profile_call(2761,109815
insert_profile_call(2819,112250
build_profile_call_buffer(2835,112796
#define RESTORE_FROM_DC_VIA_REG(2952,117253
#define SAVE_TO_DC_VIA_REG(2957,117646
preinsert_swap_peb(3004,119998
#define RESTORE_FROM_DC(3145,127085
#define SAVE_TO_DC(3148,127270
#define OPND_TLS_FIELD(3151,127365
#define OPND_TLS_FIELD_SZ(3153,127437
#define SAVE_TO_TLS(3156,127532
#define RESTORE_FROM_TLS(3158,127613
#define SAVE_TO_REG(3161,127705
#define RESTORE_FROM_REG(3163,127788
#define OPND_DC_FIELD(3166,127882
#  define OPND_ARG1 3174,128257
#  define OPND_ARG1 3176,128310
# define OPND_ARG1 3179,128370
emit_fcache_enter_common(3293,132367
emit_fcache_enter(3521,142664
insert_shared_get_dcontext(3547,143707
insert_shared_restore_dcontext_reg(3577,145091
append_fcache_return_common(3724,150158
emit_fcache_return(3960,161005
emit_fcache_enter_shared(3978,161686
emit_fcache_return_shared(3985,161910
emit_fcache_return_coarse(4002,162552
emit_trace_head_return_coarse(4020,163275
coarse_exit_prefix_size(4051,164888
emit_coarse_exit_prefix(4070,165635
patch_coarse_exit_prefix(4219,172461
insert_save_eflags(4234,172920
insert_restore_eflags(4282,175170
append_increment_counter(4317,176854
append_empty_loop(4400,180890
instrlist_convert_to_x86(4422,181635
append_ibl_found(4436,182070
append_linkcount_incr(4591,188711
append_ibl_head(4672,193103
#define HEAD_START_PC_OFFS 4941,206128
#undef HEAD_START_PC_OFFS4948,206516
emit_inline_ibl_stub(4991,208006
#  define INSTR_CREATE_jmp_smart 5158,216060
#  define INSTR_CREATE_jmp_smart 5160,216116
emit_indirect_branch_lookup(5186,217208
update_ibl_routine(5932,253487
update_indirect_branch_lookup(5968,255218
emit_far_ibl(6052,258580
create_int_syscall_instr(6187,264708
create_syscall_instr(6208,265459
emit_shared_syscall(6400,272979
emit_dispatch_template(6937,297828
emit_shared_syscall_dispatch(6968,298819
emit_unlinked_shared_syscall_dispatch(6975,299019
link_shared_syscall_common(6990,299653
link_shared_syscall(7006,300120
unlink_shared_syscall_common(7027,300903
unlink_shared_syscall(7043,301371
emit_detach_callback_code(7143,305221
emit_detach_callback_final_jmp(7241,309808
emit_patch_syscall(7268,310666
emit_do_syscall_common(7323,313272
emit_fcache_enter_indirect(7422,316855
emit_do_callback_return(7433,317282
emit_do_clone_syscall(7465,318415
emit_do_vmkuw_syscall(7474,318797
emit_do_syscall(7487,319309
update_syscall(7499,319779
update_syscalls(7549,321523
decode_syscall_num(7567,321974
is_jmp_rel32(7617,324021
is_jmp_rel8(7632,324455
emit_new_thread_dynamo_start(7656,325129
emit_trace_head_incr(7732,328181
emit_trace_head_incr_shared(7819,332710
client_xfer_ibl_tgt(7830,332952
client_ibl_xfer_is_thread_private(7850,333947
emit_client_ibl_xfer(7861,334186
relink_client_ibl_xfer(7945,337299
link_client_ibl_xfer(7972,338311
unlink_client_ibl_xfer(7978,338414
client_clean_call_is_thread_private(7988,338671
emit_clean_call_save(7998,338829
emit_clean_call_restore(8041,340596

x86/encode.c,1555
# undef ASSERT_TRUNCATE52,2229
# undef ASSERT_BITFIELD_TRUNCATE53,2253
# undef ASSERT_NOT_REACHED54,2286
# define ASSERT_TRUNCATE 55,2313
# define ASSERT_BITFIELD_TRUNCATE 56,2382
# define ASSERT_NOT_REACHED 57,2460
#define ENC_LEVEL 61,2613
const char * const type_names[type_names63,2634
const char * const reg_names[reg_names116,4523
const char * const size_names[size_names142,5969
template_optype_is_reg(264,11041
type_instr_uses_reg_bits(299,11947
type_uses_modrm_bits(315,12186
size_ok_varsz(338,12764
resolve_var_x64_size(480,19139
size_ok(511,20675
immed_size_ok(746,30100
reg_set_ext_prefixes(772,30834
reg_size_ok(787,31351
reg_rm_selectable(831,33194
mem_size_ok(839,33442
opnd_type_ok(861,34424
instr_info_extra_opnds(1176,51278
#define TEST_OPND(1188,51655
encoding_possible_pass(1213,53086
encoding_possible(1263,55472
instr_is_encoding_possible(1304,57249
get_encoding_info(1314,57519
instr_info_opnd_type(1332,58018
encode_immed(1376,59328
encode_reg_ext_prefixes(1503,63834
encode_rel_addr(1512,63999
encode_base_disp(1543,65302
set_immed(1714,72609
get_mem_instr_addr(1728,72985
encode_operand(1736,73244
encode_vex_final_prefix_byte(2047,87015
encode_vex_prefixes(2072,87817
encode_cti(2139,90388
copy_and_re_relativize_raw_instr(2226,93635
instr_encode_common(2315,97756
instr_encode_ignore_reachability(2705,113749
instr_encode_check_reachability(2712,114002
instr_encode_to_copy(2720,114293
instr_encode(2727,114522
instrlist_encode_to_copy(2737,114843
instrlist_encode(2764,115840

x86/instr.c,12840
#define INSTR_INLINE 53,2567
# undef ASSERT_TRUNCATE76,3061
# undef ASSERT_BITFIELD_TRUNCATE77,3085
# undef ASSERT_NOT_REACHED78,3118
# define ASSERT_TRUNCATE 79,3145
# define ASSERT_BITFIELD_TRUNCATE 80,3214
# define ASSERT_NOT_REACHED 81,3292
#undef opnd_is_null96,3552
#undef opnd_is_immed_int97,3572
#undef opnd_is_immed_float98,3597
#undef opnd_is_near_pc99,3624
#undef opnd_is_near_instr100,3647
#undef opnd_is_reg101,3673
#undef opnd_is_base_disp102,3692
#undef opnd_is_far_pc103,3717
#undef opnd_is_far_instr104,3739
#undef opnd_is_mem_instr105,3764
#undef opnd_is_valid106,3789
bool opnd_is_null 107,3810
bool opnd_is_immed_int 108,3875
bool opnd_is_immed_float(109,3945
bool opnd_is_near_pc 110,4017
bool opnd_is_near_instr 111,4085
bool opnd_is_reg 112,4156
bool opnd_is_base_disp 113,4220
bool opnd_is_far_pc 114,4290
bool opnd_is_far_instr 115,4357
bool opnd_is_mem_instr 116,4427
bool opnd_is_valid 117,4497
#define opnd_is_null 118,4563
#define opnd_is_immed_int 119,4608
#define opnd_is_immed_float 120,4658
#define opnd_is_near_pc 121,4710
#define opnd_is_near_instr 122,4758
#define opnd_is_reg 123,4809
#define opnd_is_base_disp 124,4853
#define opnd_is_far_pc 125,4903
#define opnd_is_far_instr 126,4950
#define opnd_is_mem_instr 127,5000
#define opnd_is_valid 128,5050
# undef opnd_is_rel_addr131,5108
bool opnd_is_rel_addr(132,5133
# define opnd_is_rel_addr 133,5199
opnd_is_abs_base_disp(138,5346
bool opnd_is_abs_addr(142,5506
bool opnd_is_near_abs_addr(145,5623
bool opnd_is_far_abs_addr(148,5735
opnd_is_reg_32bit(153,5852
reg_is_32bit(161,5987
opnd_is_reg_64bit(167,6080
reg_is_64bit(175,6215
opnd_is_reg_pointer_sized(181,6308
reg_is_pointer_sized(189,6459
#undef opnd_get_reg198,6635
opnd_get_reg(200,6664
#define opnd_get_reg 204,6725
opnd_get_size(207,6772
opnd_set_size(236,7403
opnd_create_immed_int(257,7814
opnd_create_immed_float(282,8734
opnd_create_immed_float_zero(297,9165
opnd_get_immed_int(309,9493
opnd_get_immed_float(317,9729
opnd_create_far_pc(332,10150
opnd_create_instr_ex(342,10349
opnd_create_instr(353,10572
opnd_create_far_instr(359,10671
opnd_create_mem_instr(370,10894
opnd_get_pc(381,11128
opnd_get_segment_selector(393,11382
opnd_get_instr(404,11710
opnd_get_shift(413,11909
opnd_get_mem_instr_disp(420,12064
opnd_create_base_disp_ex(430,12299
opnd_create_base_disp(440,12754
opnd_create_far_base_disp_ex(448,13040
opnd_create_far_base_disp(479,14596
#undef opnd_get_base486,14892
#undef opnd_get_disp487,14913
#undef opnd_get_index488,14934
#undef opnd_get_scale489,14956
#undef opnd_get_segment490,14978
reg_id_t opnd_get_base 491,15002
int      opnd_get_disp 492,15073
reg_id_t opnd_get_index 493,15144
int      opnd_get_scale 494,15216
reg_id_t opnd_get_segment(495,15288
#define opnd_get_base 496,15362
#define opnd_get_disp 497,15399
#define opnd_get_index 498,15436
#define opnd_get_scale 499,15474
#define opnd_get_segment 500,15512
opnd_is_disp_encode_zero(503,15560
opnd_is_disp_force_full(512,15795
opnd_is_disp_short_addr(521,16027
opnd_set_disp(530,16259
opnd_set_disp_ex(539,16468
opnd_create_abs_addr(552,16993
opnd_create_far_abs_addr(558,17126
opnd_create_rel_addr(596,18641
opnd_create_far_rel_addr(608,19083
opnd_get_addr(624,19584
opnd_is_memory_reference(638,19984
opnd_is_far_memory_reference(646,20181
opnd_is_near_memory_reference(653,20355
opnd_num_regs_used(661,20571
opnd_get_reg_used(694,21353
const reg_id_t regparms[regparms757,23270
const reg_id_t dr_reg_fixer[dr_reg_fixer768,23489
reg_check_reg_fixer(795,25197
opnd_uses_reg(811,25764
opnd_replace_reg(847,26700
bool opnd_same_address(917,29113
opnd_same_sizes_ok(952,30188
bool opnd_same(970,30880
bool opnd_share_reg(1037,33700
range_overlap(1067,34510
bool opnd_defines_use(1087,35018
opnd_size_in_bytes(1148,37117
opnd_size_from_bytes(1232,39378
opnd_shrink_to_16_bits(1256,39980
opnd_shrink_to_32_bits(1276,40628
reg_get_value_helper(1294,41100
reg_get_value_priv(1308,41498
reg_get_value(1346,42812
reg_set_value_priv(1355,43142
reg_set_value(1368,43463
opnd_compute_address_priv(1381,43985
opnd_compute_address(1427,45524
get_register_name(1438,45912
reg_to_pointer_sized(1444,45985
reg_32_to_16(1450,46064
reg_32_to_8(1458,46272
reg_32_to_64(1476,46680
reg_64_to_32(1484,46888
reg_is_extended(1492,47092
reg_32_to_opsz(1508,47779
reg_resize_to_opsz(1528,48298
reg_parameter_num(1536,48539
opnd_get_reg_dcontext_offs(1547,48706
opnd_get_reg_mcontext_offs(1574,49488
reg_overlap(1580,49593
enum {REG_INVALID_BITS REG_INVALID_BITS1597,50125
enum {REG_INVALID_BITS = 0x0}x01597,50125
reg_get_bits(1599,50205
reg_get_size(1633,51659
instr_create(1674,52991
instr_destroy(1686,53432
instr_clone(1696,53740
instr_init(1746,55971
instr_free(1756,56314
instr_mem_usage(1789,57587
instr_reset(1822,58602
instr_reuse(1837,59128
instr_build(1884,60559
instr_build_bits(1893,60834
private_instr_encode(1907,61329
#define inlined_instr_get_opcode(1979,64535
instr_get_opcode(1985,64803
#define instr_get_opcode 1990,64957
instr_being_modified(1993,65027
instr_set_opcode(2004,65383
instr_valid(2025,66330
instr_get_app_pc(2033,66490
instr_opcode_valid(2044,66830
instr_get_instr_info(2051,66968
get_instr_info(2057,67078
#undef instr_get_src2062,67139
instr_get_src(2064,67167
#define instr_get_src 2068,67249
uint instr_get_src_kind(2073,67346
#undef instr_get_dst2079,67466
instr_get_dst(2081,67494
#define instr_get_dst 2085,67576
uint instr_get_dst_kind(2090,67673
instr_set_num_opnds(2100,67938
instr_set_src(2131,69395
instr_set_dst(2147,69959
#undef instr_get_target2157,70351
instr_get_target(2159,70382
#define instr_get_target 2163,70455
instr_set_target(2169,70594
instr_set_prefix_flag(2182,71032
instr_get_prefix_flag(2190,71202
instr_set_prefixes(2196,71309
instr_get_prefixes(2203,71461
instr_set_x86_mode(2214,71695
instr_get_x86_mode(2227,72007
instr_branch_targets_prefix(2246,72654
instr_branch_set_prefix_target(2265,73428
instr_branch_special_exit(2276,73720
instr_branch_set_special_exit(2285,73937
instr_exit_branch_type(2296,74194
instr_exit_branch_set_type(2304,74325
instr_set_ok_to_mangle(2313,74514
instr_is_meta_may_fault(2322,74686
instr_set_meta_may_fault(2329,74864
instr_set_meta_no_translation(2339,75163
instr_set_ok_to_emit(2346,75301
instr_set_exit_stub_code(2366,76051
instr_exit_stub_code(2394,77181
instr_get_eflags(2407,77494
instr_get_opcode_eflags(2445,78996
instr_get_arith_flags(2453,79197
instr_eflags_valid(2463,79416
instr_set_eflags_valid(2469,79516
instr_arith_flags_valid(2484,79939
instr_set_arith_flags_valid(2492,80156
instr_set_operands_valid(2503,80392
instr_set_raw_bits(2513,80632
instr_shift_raw_bits(2538,81553
instr_set_raw_bits_valid(2551,81884
instr_free_raw_bits(2569,82398
instr_allocate_raw_bits(2583,82842
instr_set_translation(2614,84075
instr_get_translation(2624,84307
instr_make_persistent(2637,84799
instr_get_raw_bits(2646,85054
instr_get_raw_byte(2653,85160
instr_get_raw_word(2662,85446
instr_set_raw_byte(2675,85892
instr_set_raw_bytes(2692,86508
instr_set_raw_word(2709,87139
instr_length(2722,87612
instr_expand(2778,89894
instr_is_level_0(2881,94200
instr_get_next_expanded(2912,95503
instr_get_prev_expanded(2923,95917
instrlist_first_expanded(2934,96333
instrlist_last_expanded(2946,96735
instr_decode_cti(2965,97556
instr_decode_opcode(2995,98904
instr_decode(3027,100244
instr_decode_with_current_dcontext(3062,101667
instrlist_decode_cti(3081,102437
loginst(3160,105704
logopnd(3170,105974
logtrace(3181,106242
instr_shrink_to_16_bits(3200,106858
instr_shrink_to_32_bits(3234,108008
instr_uses_reg(3255,108688
bool instr_reg_in_dst(3260,108809
instr_reg_in_src(3270,109026
instr_reads_from_reg(3283,109363
bool instr_writes_to_reg(3300,109735
bool instr_writes_to_exact_reg(3314,110126
bool instr_replace_src_opnd(3327,110412
bool instr_same(3344,110808
bool instr_reads_memory(3381,111827
bool instr_writes_memory(3403,112374
instr_rip_rel_valid(3430,113455
instr_set_rip_rel_valid(3436,113584
instr_get_rip_rel_pos(3445,113761
instr_set_rip_rel_pos(3451,113840
instr_get_rel_addr_target(3460,114109
instr_has_rel_addr_reference(3497,115194
instr_get_rel_addr_dst_idx(3503,115299
instr_get_rel_addr_src_idx(3519,115633
instr_is_our_mangling(3536,115985
instr_set_our_mangling(3542,116084
instr_compute_address_ex_priv(3554,116381
instr_compute_address_ex(3599,117726
instr_compute_address_ex_pos(3610,118147
instr_compute_address_priv(3625,118832
instr_compute_address(3635,119043
instr_memory_reference_size(3645,119379
decode_memory_reference_size(3670,120132
instr_get_label_data_area(3686,120618
instr_branch_type(3697,120865
instr_get_branch_target_pc(3746,122866
instr_set_branch_target_pc(3756,123160
instr_is_exit_cti(3770,123654
instr_is_mov(3786,124130
opcode_is_call(3797,124378
instr_is_call(3806,124548
instr_is_call_direct(3813,124660
instr_is_near_call_direct(3820,124798
instr_is_call_indirect(3827,124919
instr_is_return(3834,125066
opcode_is_cbr(3843,125285
instr_is_cbr(3851,125478
opcode_is_mbr(3858,125624
instr_is_mbr(3870,125890
instr_is_far_cti(3877,126027
instr_is_far_abs_cti(3889,126359
opcode_is_ubr(3896,126506
instr_is_ubr(3904,126635
instr_is_near_ubr(3911,126776
instr_is_cti(3919,126955
instr_is_cti_short(3931,127391
instr_is_cti_loop(3955,128349
instr_is_cti_short_rewrite(3972,129086
instr_is_interrupt(4021,131088
instr_get_interrupt_number(4028,131235
instr_is_syscall(4049,132019
instr_is_wow64_syscall(4079,132762
instr_is_mov_constant(4108,133726
bool instr_is_prefetch(4128,134289
instr_is_floating_ex(4144,134625
instr_is_floating(4385,144384
instr_saves_float_pc(4391,144474
opcode_is_mmx(4400,144761
opcode_is_sse_or_sse2(4416,145467
type_is_sse(4441,146750
instr_is_mmx(4447,146854
instr_is_sse_or_sse2(4466,147464
instr_is_mov_imm_to_tos(4478,147674
instr_is_label(4492,148214
instr_is_undefined(4499,148398
instr_invert_cbr(4511,148715
instr_convert_short_meta_jmp_to_long(4603,153007
instr_cbr_taken(4619,153708
opc_jcc_taken(4645,154653
instr_jcc_taken(4690,156364
instr_cmovcc_to_jcc(4703,156751
instr_cmovcc_triggered(4732,157753
instr_uses_fp_reg(4740,157942
reg_is_gpr(4771,158852
reg_is_segment(4777,158934
reg_is_ymm(4783,159018
reg_is_xmm(4789,159107
reg_is_mmx(4796,159223
reg_is_fp(4802,159312
instr_create_0dst_0src(4828,160184
instr_create_0dst_1src(4835,160327
instr_create_0dst_2src(4843,160513
instr_create_0dst_3src(4853,160769
instr_create_1dst_0src(4864,161070
instr_create_1dst_1src(4872,161256
instr_create_1dst_2src(4882,161508
instr_create_1dst_3src(4893,161807
instr_create_1dst_5src(4905,162151
instr_create_2dst_0src(4920,162608
instr_create_2dst_1src(4930,162864
instr_create_2dst_2src(4941,163163
instr_create_2dst_3src(4953,163509
instr_create_2dst_4src(4966,163900
instr_create_3dst_0src(4981,164359
instr_create_3dst_3src(4992,164660
instr_create_3dst_4src(5007,165119
instr_create_3dst_5src(5023,165623
instr_create_4dst_1src(5041,166195
instr_create_4dst_4src(5055,166607
instr_create_popa(5072,167155
instr_create_pusha(5089,167840
instr_create_raw_1byte(5112,168742
instr_create_raw_2bytes(5120,168930
instr_create_raw_3bytes(5130,169193
instr_create_raw_4bytes(5141,169506
instr_create_raw_5bytes(5154,169893
instr_create_raw_6bytes(5168,170330
instr_create_raw_7bytes(5184,170841
instr_create_raw_8bytes(5201,171402
instr_create_nbyte_nop(5220,172037
instr_is_nop(5256,173475
dcontext_opnd_common(5291,175169
opnd_create_dcontext_field_sz(5318,176424
opnd_create_dcontext_field(5324,176583
opnd_create_dcontext_field_via_reg_sz(5331,176800
opnd_create_dcontext_field_via_reg(5339,177094
opnd_create_dcontext_field_byte(5345,177266
instr_create_restore_from_dcontext(5351,177418
instr_create_save_to_dcontext(5362,177815
instr_create_restore_from_dc_via_reg(5378,178467
instr_create_save_to_dc_via_reg(5396,179232
instr_create_save_immed_to_dcontext(5411,179844
instr_create_jump_via_dcontext(5420,180196
instr_create_restore_dynamo_stack(5431,180559
update_dcontext_address(5437,180708
opnd_create_tls_slot(5468,182004
opnd_create_sized_tls_slot(5474,182102
instr_raw_is_tls_spill(5485,182504
instr_check_tls_spill_restore(5520,184056
instr_is_tls_spill(5560,185443
instr_is_tls_restore(5573,185890
instr_is_tls_xcx_spill(5587,186373
instr_check_mcontext_spill_restore(5599,186772
instr_is_reg_spill_or_restore(5643,188195
instr_create_save_to_tls(5676,189378
instr_create_restore_from_tls(5683,189606
instr_create_save_to_reg(5691,189915
instr_create_restore_from_reg(5697,190095
instr_raw_is_rip_rel_lea(5708,190437
move_mm_reg_opcode(5728,191126

x86/instr.h,66717
#define _INSTR_H_ 41,2011
#define DR_REG_ENUM_COMPATIBILITY 52,2343
#define DR_FAST_IR 55,2443
# undef DR_FAST_IR62,2696
#  define INSTR_INLINE 106,4141
#  define INSTR_INLINE108,4178
    DR_REG_NULL,131,5106
    DR_REG_RAX,133,5222
    DR_REG_RAX,  DR_REG_RCX,133,5222
    DR_REG_RAX,  DR_REG_RCX,  DR_REG_RDX,133,5222
    DR_REG_RAX,  DR_REG_RCX,  DR_REG_RDX,  DR_REG_RBX,133,5222
    DR_REG_RSP,134,5277
    DR_REG_RSP,  DR_REG_RBP,134,5277
    DR_REG_RSP,  DR_REG_RBP,  DR_REG_RSI,134,5277
    DR_REG_RSP,  DR_REG_RBP,  DR_REG_RSI,  DR_REG_RDI,134,5277
    DR_REG_R8,135,5332
    DR_REG_R8,   DR_REG_R9,135,5332
    DR_REG_R8,   DR_REG_R9,   DR_REG_R10,135,5332
    DR_REG_R8,   DR_REG_R9,   DR_REG_R10,  DR_REG_R11,135,5332
    DR_REG_R12,136,5387
    DR_REG_R12,  DR_REG_R13,136,5387
    DR_REG_R12,  DR_REG_R13,  DR_REG_R14,136,5387
    DR_REG_R12,  DR_REG_R13,  DR_REG_R14,  DR_REG_R15,136,5387
    DR_REG_EAX,138,5475
    DR_REG_EAX,  DR_REG_ECX,138,5475
    DR_REG_EAX,  DR_REG_ECX,  DR_REG_EDX,138,5475
    DR_REG_EAX,  DR_REG_ECX,  DR_REG_EDX,  DR_REG_EBX,138,5475
    DR_REG_ESP,139,5530
    DR_REG_ESP,  DR_REG_EBP,139,5530
    DR_REG_ESP,  DR_REG_EBP,  DR_REG_ESI,139,5530
    DR_REG_ESP,  DR_REG_EBP,  DR_REG_ESI,  DR_REG_EDI,139,5530
    DR_REG_R8D,140,5585
    DR_REG_R8D,  DR_REG_R9D,140,5585
    DR_REG_R8D,  DR_REG_R9D,  DR_REG_R10D,140,5585
    DR_REG_R8D,  DR_REG_R9D,  DR_REG_R10D, DR_REG_R11D,140,5585
    DR_REG_R12D,141,5641
    DR_REG_R12D, DR_REG_R13D,141,5641
    DR_REG_R12D, DR_REG_R13D, DR_REG_R14D,141,5641
    DR_REG_R12D, DR_REG_R13D, DR_REG_R14D, DR_REG_R15D,141,5641
    DR_REG_AX,143,5730
    DR_REG_AX,   DR_REG_CX,143,5730
    DR_REG_AX,   DR_REG_CX,   DR_REG_DX,143,5730
    DR_REG_AX,   DR_REG_CX,   DR_REG_DX,   DR_REG_BX,143,5730
    DR_REG_SP,144,5784
    DR_REG_SP,   DR_REG_BP,144,5784
    DR_REG_SP,   DR_REG_BP,   DR_REG_SI,144,5784
    DR_REG_SP,   DR_REG_BP,   DR_REG_SI,   DR_REG_DI,144,5784
    DR_REG_R8W,145,5838
    DR_REG_R8W,  DR_REG_R9W,145,5838
    DR_REG_R8W,  DR_REG_R9W,  DR_REG_R10W,145,5838
    DR_REG_R8W,  DR_REG_R9W,  DR_REG_R10W, DR_REG_R11W,145,5838
    DR_REG_R12W,146,5894
    DR_REG_R12W, DR_REG_R13W,146,5894
    DR_REG_R12W, DR_REG_R13W, DR_REG_R14W,146,5894
    DR_REG_R12W, DR_REG_R13W, DR_REG_R14W, DR_REG_R15W,146,5894
    DR_REG_AL,148,5982
    DR_REG_AL,   DR_REG_CL,148,5982
    DR_REG_AL,   DR_REG_CL,   DR_REG_DL,148,5982
    DR_REG_AL,   DR_REG_CL,   DR_REG_DL,   DR_REG_BL,148,5982
    DR_REG_AH,149,6036
    DR_REG_AH,   DR_REG_CH,149,6036
    DR_REG_AH,   DR_REG_CH,   DR_REG_DH,149,6036
    DR_REG_AH,   DR_REG_CH,   DR_REG_DH,   DR_REG_BH,149,6036
    DR_REG_R8L,150,6090
    DR_REG_R8L,  DR_REG_R9L,150,6090
    DR_REG_R8L,  DR_REG_R9L,  DR_REG_R10L,150,6090
    DR_REG_R8L,  DR_REG_R9L,  DR_REG_R10L, DR_REG_R11L,150,6090
    DR_REG_R12L,151,6146
    DR_REG_R12L, DR_REG_R13L,151,6146
    DR_REG_R12L, DR_REG_R13L, DR_REG_R14L,151,6146
    DR_REG_R12L, DR_REG_R13L, DR_REG_R14L, DR_REG_R15L,151,6146
    DR_REG_SPL,152,6202
    DR_REG_SPL,  DR_REG_BPL,152,6202
    DR_REG_SPL,  DR_REG_BPL,  DR_REG_SIL,152,6202
    DR_REG_SPL,  DR_REG_BPL,  DR_REG_SIL,  DR_REG_DIL,152,6202
    DR_REG_MM0,154,6278
    DR_REG_MM0,  DR_REG_MM1,154,6278
    DR_REG_MM0,  DR_REG_MM1,  DR_REG_MM2,154,6278
    DR_REG_MM0,  DR_REG_MM1,  DR_REG_MM2,  DR_REG_MM3,154,6278
    DR_REG_MM4,155,6333
    DR_REG_MM4,  DR_REG_MM5,155,6333
    DR_REG_MM4,  DR_REG_MM5,  DR_REG_MM6,155,6333
    DR_REG_MM4,  DR_REG_MM5,  DR_REG_MM6,  DR_REG_MM7,155,6333
    DR_REG_XMM0,157,6410
    DR_REG_XMM0, DR_REG_XMM1,157,6410
    DR_REG_XMM0, DR_REG_XMM1, DR_REG_XMM2,157,6410
    DR_REG_XMM0, DR_REG_XMM1, DR_REG_XMM2, DR_REG_XMM3,157,6410
    DR_REG_XMM4,158,6466
    DR_REG_XMM4, DR_REG_XMM5,158,6466
    DR_REG_XMM4, DR_REG_XMM5, DR_REG_XMM6,158,6466
    DR_REG_XMM4, DR_REG_XMM5, DR_REG_XMM6, DR_REG_XMM7,158,6466
    DR_REG_XMM8,159,6522
    DR_REG_XMM8, DR_REG_XMM9,159,6522
    DR_REG_XMM8, DR_REG_XMM9, DR_REG_XMM10,159,6522
    DR_REG_XMM8, DR_REG_XMM9, DR_REG_XMM10,DR_REG_XMM11,159,6522
    DR_REG_XMM12,160,6579
    DR_REG_XMM12,DR_REG_XMM13,160,6579
    DR_REG_XMM12,DR_REG_XMM13,DR_REG_XMM14,160,6579
    DR_REG_XMM12,DR_REG_XMM13,DR_REG_XMM14,DR_REG_XMM15,160,6579
    DR_REG_ST0,162,6671
    DR_REG_ST0,  DR_REG_ST1,162,6671
    DR_REG_ST0,  DR_REG_ST1,  DR_REG_ST2,162,6671
    DR_REG_ST0,  DR_REG_ST1,  DR_REG_ST2,  DR_REG_ST3,162,6671
    DR_REG_ST4,163,6726
    DR_REG_ST4,  DR_REG_ST5,163,6726
    DR_REG_ST4,  DR_REG_ST5,  DR_REG_ST6,163,6726
    DR_REG_ST4,  DR_REG_ST5,  DR_REG_ST6,  DR_REG_ST7,163,6726
    DR_SEG_ES,165,6848
    DR_SEG_ES,   DR_SEG_CS,165,6848
    DR_SEG_ES,   DR_SEG_CS,   DR_SEG_SS,165,6848
    DR_SEG_ES,   DR_SEG_CS,   DR_SEG_SS,   DR_SEG_DS,165,6848
    DR_SEG_ES,   DR_SEG_CS,   DR_SEG_SS,   DR_SEG_DS,   DR_SEG_FS,165,6848
    DR_SEG_ES,   DR_SEG_CS,   DR_SEG_SS,   DR_SEG_DS,   DR_SEG_FS,   DR_SEG_GS,165,6848
    DR_REG_DR0,167,7017
    DR_REG_DR0,  DR_REG_DR1,167,7017
    DR_REG_DR0,  DR_REG_DR1,  DR_REG_DR2,167,7017
    DR_REG_DR0,  DR_REG_DR1,  DR_REG_DR2,  DR_REG_DR3,167,7017
    DR_REG_DR4,168,7072
    DR_REG_DR4,  DR_REG_DR5,168,7072
    DR_REG_DR4,  DR_REG_DR5,  DR_REG_DR6,168,7072
    DR_REG_DR4,  DR_REG_DR5,  DR_REG_DR6,  DR_REG_DR7,168,7072
    DR_REG_DR8,169,7127
    DR_REG_DR8,  DR_REG_DR9,169,7127
    DR_REG_DR8,  DR_REG_DR9,  DR_REG_DR10,169,7127
    DR_REG_DR8,  DR_REG_DR9,  DR_REG_DR10, DR_REG_DR11,169,7127
    DR_REG_DR12,170,7183
    DR_REG_DR12, DR_REG_DR13,170,7183
    DR_REG_DR12, DR_REG_DR13, DR_REG_DR14,170,7183
    DR_REG_DR12, DR_REG_DR13, DR_REG_DR14, DR_REG_DR15,170,7183
    DR_REG_CR0,172,7300
    DR_REG_CR0,  DR_REG_CR1,172,7300
    DR_REG_CR0,  DR_REG_CR1,  DR_REG_CR2,172,7300
    DR_REG_CR0,  DR_REG_CR1,  DR_REG_CR2,  DR_REG_CR3,172,7300
    DR_REG_CR4,173,7355
    DR_REG_CR4,  DR_REG_CR5,173,7355
    DR_REG_CR4,  DR_REG_CR5,  DR_REG_CR6,173,7355
    DR_REG_CR4,  DR_REG_CR5,  DR_REG_CR6,  DR_REG_CR7,173,7355
    DR_REG_CR8,174,7411
    DR_REG_CR8,  DR_REG_CR9,174,7411
    DR_REG_CR8,  DR_REG_CR9,  DR_REG_CR10,174,7411
    DR_REG_CR8,  DR_REG_CR9,  DR_REG_CR10, DR_REG_CR11,174,7411
    DR_REG_CR12,175,7467
    DR_REG_CR12, DR_REG_CR13,175,7467
    DR_REG_CR12, DR_REG_CR13, DR_REG_CR14,175,7467
    DR_REG_CR12, DR_REG_CR13, DR_REG_CR14, DR_REG_CR15,175,7467
    DR_REG_INVALID,176,7523
    DR_REG_YMM0,185,7841
    DR_REG_YMM0, DR_REG_YMM1,185,7841
    DR_REG_YMM0, DR_REG_YMM1, DR_REG_YMM2,185,7841
    DR_REG_YMM0, DR_REG_YMM1, DR_REG_YMM2, DR_REG_YMM3,185,7841
    DR_REG_YMM4,186,7897
    DR_REG_YMM4, DR_REG_YMM5,186,7897
    DR_REG_YMM4, DR_REG_YMM5, DR_REG_YMM6,186,7897
    DR_REG_YMM4, DR_REG_YMM5, DR_REG_YMM6, DR_REG_YMM7,186,7897
    DR_REG_YMM8,187,7953
    DR_REG_YMM8, DR_REG_YMM9,187,7953
    DR_REG_YMM8, DR_REG_YMM9, DR_REG_YMM10,187,7953
    DR_REG_YMM8, DR_REG_YMM9, DR_REG_YMM10,DR_REG_YMM11,187,7953
    DR_REG_YMM12,188,8010
    DR_REG_YMM12,DR_REG_YMM13,188,8010
    DR_REG_YMM12,DR_REG_YMM13,DR_REG_YMM14,188,8010
    DR_REG_YMM12,DR_REG_YMM13,DR_REG_YMM14,DR_REG_YMM15,188,8010
typedef byte reg_id_t;192,8149
typedef byte opnd_size_t;193,8208
# define DR_REG_XAX 197,8343
# define DR_REG_XCX 198,8429
# define DR_REG_XDX 199,8515
# define DR_REG_XBX 200,8601
# define DR_REG_XSP 201,8687
# define DR_REG_XBP 202,8773
# define DR_REG_XSI 203,8859
# define DR_REG_XDI 204,8945
# define DR_REG_XAX 206,9037
# define DR_REG_XCX 207,9123
# define DR_REG_XDX 208,9209
# define DR_REG_XBX 209,9295
# define DR_REG_XSP 210,9381
# define DR_REG_XBP 211,9467
# define DR_REG_XSI 212,9553
# define DR_REG_XDI 213,9639
#define DR_REG_START_GPR 222,9883
# define DR_REG_STOP_GPR 224,9976
# define DR_REG_STOP_GPR 226,10062
#define DR_NUM_GPR_REGS 229,10185
#define DR_REG_START_64 230,10246
#define DR_REG_STOP_64 231,10338
#define DR_REG_START_32 232,10430
#define DR_REG_STOP_32 233,10522
#define DR_REG_START_16 234,10614
#define DR_REG_STOP_16 235,10706
#define DR_REG_START_8 236,10798
#define DR_REG_STOP_8 237,10889
#define DR_REG_START_8HL 238,10980
#define DR_REG_STOP_8HL 239,11072
#define DR_REG_START_x86_8 240,11164
#define DR_REG_STOP_x86_8 241,11256
#define DR_REG_START_x64_8 242,11347
#define DR_REG_STOP_x64_8 243,11439
#define DR_REG_START_MMX 244,11530
#define DR_REG_STOP_MMX 245,11611
#define DR_REG_START_XMM 246,11692
#define DR_REG_STOP_XMM 247,11773
#define DR_REG_START_YMM 248,11854
#define DR_REG_STOP_YMM 249,11935
#define DR_REG_START_FLOAT 250,12016
#define DR_REG_STOP_FLOAT 251,12108
#define DR_REG_START_SEGMENT 252,12200
#define DR_REG_STOP_SEGMENT 253,12285
#define DR_REG_START_DR 254,12370
#define DR_REG_STOP_DR 255,12453
#define DR_REG_START_CR 256,12536
#define DR_REG_STOP_CR 257,12621
#define DR_REG_LAST_VALID_ENUM 262,12807
#define DR_REG_LAST_ENUM 263,12851
#define REG_START_SPILL 265,12952
#define REG_STOP_SPILL 266,12989
#define REG_SPILL_NUM 267,13026
# define REG_NULL 276,13408
# define REG_RAX 277,13449
# define REG_RCX 278,13489
# define REG_RDX 279,13529
# define REG_RBX 280,13569
# define REG_RSP 281,13609
# define REG_RBP 282,13649
# define REG_RSI 283,13689
# define REG_RDI 284,13729
# define REG_R8 285,13769
# define REG_R9 286,13808
# define REG_R10 287,13847
# define REG_R11 288,13887
# define REG_R12 289,13927
# define REG_R13 290,13967
# define REG_R14 291,14007
# define REG_R15 292,14047
# define REG_EAX 293,14087
# define REG_ECX 294,14127
# define REG_EDX 295,14167
# define REG_EBX 296,14207
# define REG_ESP 297,14247
# define REG_EBP 298,14287
# define REG_ESI 299,14327
# define REG_EDI 300,14367
# define REG_R8D 301,14407
# define REG_R9D 302,14447
# define REG_R10D 303,14487
# define REG_R11D 304,14528
# define REG_R12D 305,14569
# define REG_R13D 306,14610
# define REG_R14D 307,14651
# define REG_R15D 308,14692
# define REG_AX 309,14733
# define REG_CX 310,14772
# define REG_DX 311,14811
# define REG_BX 312,14850
# define REG_SP 313,14889
# define REG_BP 314,14928
# define REG_SI 315,14967
# define REG_DI 316,15006
# define REG_R8W 317,15045
# define REG_R9W 318,15085
# define REG_R10W 319,15125
# define REG_R11W 320,15166
# define REG_R12W 321,15207
# define REG_R13W 322,15248
# define REG_R14W 323,15289
# define REG_R15W 324,15330
# define REG_AL 325,15371
# define REG_CL 326,15410
# define REG_DL 327,15449
# define REG_BL 328,15488
# define REG_AH 329,15527
# define REG_CH 330,15566
# define REG_DH 331,15605
# define REG_BH 332,15644
# define REG_R8L 333,15683
# define REG_R9L 334,15723
# define REG_R10L 335,15763
# define REG_R11L 336,15804
# define REG_R12L 337,15845
# define REG_R13L 338,15886
# define REG_R14L 339,15927
# define REG_R15L 340,15968
# define REG_SPL 341,16009
# define REG_BPL 342,16049
# define REG_SIL 343,16089
# define REG_DIL 344,16129
# define REG_MM0 345,16169
# define REG_MM1 346,16209
# define REG_MM2 347,16249
# define REG_MM3 348,16289
# define REG_MM4 349,16329
# define REG_MM5 350,16369
# define REG_MM6 351,16409
# define REG_MM7 352,16449
# define REG_XMM0 353,16489
# define REG_XMM1 354,16530
# define REG_XMM2 355,16571
# define REG_XMM3 356,16612
# define REG_XMM4 357,16653
# define REG_XMM5 358,16694
# define REG_XMM6 359,16735
# define REG_XMM7 360,16776
# define REG_XMM8 361,16817
# define REG_XMM9 362,16858
# define REG_XMM10 363,16899
# define REG_XMM11 364,16941
# define REG_XMM12 365,16983
# define REG_XMM13 366,17025
# define REG_XMM14 367,17067
# define REG_XMM15 368,17109
# define REG_ST0 369,17151
# define REG_ST1 370,17191
# define REG_ST2 371,17231
# define REG_ST3 372,17271
# define REG_ST4 373,17311
# define REG_ST5 374,17351
# define REG_ST6 375,17391
# define REG_ST7 376,17431
# define SEG_ES 377,17471
# define SEG_CS 378,17510
# define SEG_SS 379,17549
# define SEG_DS 380,17588
# define SEG_FS 381,17627
# define SEG_GS 382,17666
# define REG_DR0 383,17705
# define REG_DR1 384,17745
# define REG_DR2 385,17785
# define REG_DR3 386,17825
# define REG_DR4 387,17865
# define REG_DR5 388,17905
# define REG_DR6 389,17945
# define REG_DR7 390,17985
# define REG_DR8 391,18025
# define REG_DR9 392,18065
# define REG_DR10 393,18105
# define REG_DR11 394,18146
# define REG_DR12 395,18187
# define REG_DR13 396,18228
# define REG_DR14 397,18269
# define REG_DR15 398,18310
# define REG_CR0 399,18351
# define REG_CR1 400,18391
# define REG_CR2 401,18431
# define REG_CR3 402,18471
# define REG_CR4 403,18511
# define REG_CR5 404,18551
# define REG_CR6 405,18591
# define REG_CR7 406,18631
# define REG_CR8 407,18671
# define REG_CR9 408,18711
# define REG_CR10 409,18751
# define REG_CR11 410,18792
# define REG_CR12 411,18833
# define REG_CR13 412,18874
# define REG_CR14 413,18915
# define REG_CR15 414,18956
# define REG_INVALID 415,18997
# define REG_XAX 416,19041
# define REG_XCX 417,19081
# define REG_XDX 418,19121
# define REG_XBX 419,19161
# define REG_XSP 420,19201
# define REG_XBP 421,19241
# define REG_XSI 422,19281
# define REG_XDI 423,19321
# define REG_START_64 424,19361
# define REG_STOP_64 425,19406
# define REG_START_32 426,19450
# define REG_STOP_32 427,19495
# define REG_START_16 428,19539
# define REG_STOP_16 429,19584
# define REG_START_8 430,19628
# define REG_STOP_8 431,19672
# define REG_START_8HL 432,19715
# define REG_STOP_8HL 433,19761
# define REG_START_x86_8 434,19806
# define REG_STOP_x86_8 435,19854
# define REG_START_x64_8 436,19901
# define REG_STOP_x64_8 437,19949
# define REG_START_MMX 438,19996
# define REG_STOP_MMX 439,20042
# define REG_START_YMM 440,20087
# define REG_STOP_YMM 441,20133
# define REG_START_XMM 442,20178
# define REG_STOP_XMM 443,20224
# define REG_START_FLOAT 444,20269
# define REG_STOP_FLOAT 445,20317
# define REG_START_SEGMENT 446,20364
# define REG_STOP_SEGMENT 447,20414
# define REG_START_DR 448,20463
# define REG_STOP_DR 449,20508
# define REG_START_CR 450,20552
# define REG_STOP_CR 451,20597
# define REG_LAST_VALID_ENUM 452,20641
# define REG_LAST_ENUM 453,20693
# define REG_YMM0 454,20739
# define REG_YMM1 455,20780
# define REG_YMM2 456,20821
# define REG_YMM3 457,20862
# define REG_YMM4 458,20903
# define REG_YMM5 459,20944
# define REG_YMM6 460,20985
# define REG_YMM7 461,21026
# define REG_YMM8 462,21067
# define REG_YMM9 463,21108
# define REG_YMM10 464,21149
# define REG_YMM11 465,21191
# define REG_YMM12 466,21233
# define REG_YMM13 467,21275
# define REG_YMM14 468,21317
# define REG_YMM15 469,21359
# define INT8_MIN 474,21482
# define INT8_MAX 475,21512
# define INT16_MIN 476,21542
# define INT16_MAX 477,21571
# define INT32_MIN 478,21600
# define INT32_MAX 479,21628
# define REG_SPECIFIER_BITS 490,21840
# define SCALE_SPECIFIER_BITS 491,21870
struct _opnd_t 501,22344
    byte kind;502,22361
    opnd_size_t size;509,22664
        ushort far_pc_seg_selector;514,22851
        reg_id_t segment : REG_SPECIFIER_BITS;516,23003
        ushort disp;518,23155
        ushort shift;519,23207
    } seg;520,23255
        ptr_int_t immed_int;524,23353
        float immed_float;525,23409
        app_pc pc;530,23673
        instr_t *instr;instr535,23941
        reg_id_t reg;536,24026
            int disp;538,24090
            reg_id_t base_reg : REG_SPECIFIER_BITS;539,24112
            reg_id_t index_reg : REG_SPECIFIER_BITS;540,24164
            byte scale : SCALE_SPECIFIER_BITS;544,24430
            byte/*bool*/ encode_zero_disp 545,24477
            byte/*bool*/ force_full_disp 546,24524
            byte/*bool*/ disp_short_addr 547,24612
        } base_disp;548,24700
        void *addr;addr549,24753
    } value;550,24823
struct _opnd_t 555,24906
    uint black_box_uint;557,24935
    uint64 black_box_uint64;558,24960
    uint black_box_uint[black_box_uint560,24996
#define EXPECTED_SIZEOF_OPND 573,25520
    NULL_kind,580,25756
    IMMED_INTEGER_kind,581,25771
    IMMED_FLOAT_kind,582,25795
    PC_kind,583,25817
    INSTR_kind,584,25830
    REG_kind,585,25846
    BASE_DISP_kind,586,25860
    FAR_PC_kind,587,25944
    FAR_INSTR_kind,588,26013
    REL_ADDR_kind,590,26093
    ABS_ADDR_kind,591,26149
    MEM_INSTR_kind,593,26216
    LAST_kind,594,26236
    INSTR_DIRECT_EXIT 1691,58002
    INSTR_DIRECT_EXIT           = LINK_DIRECT,1691,58002
    INSTR_INDIRECT_EXIT 1692,58049
    INSTR_INDIRECT_EXIT         = LINK_INDIRECT,1692,58049
    INSTR_RETURN_EXIT 1693,58098
    INSTR_RETURN_EXIT           = LINK_RETURN,1693,58098
    INSTR_CALL_EXIT 1697,58296
    INSTR_CALL_EXIT             = LINK_CALL,1697,58296
    INSTR_JMP_EXIT 1698,58341
    INSTR_JMP_EXIT              = LINK_JMP,1698,58341
    INSTR_IND_JMP_PLT_EXIT 1699,58385
    INSTR_IND_JMP_PLT_EXIT      = (INSTR_JMP_EXIT 1699,58385
    INSTR_IND_JMP_PLT_EXIT      = (INSTR_JMP_EXIT | INSTR_CALL_EXIT)1699,58385
    INSTR_FAR_EXIT 1700,58455
    INSTR_FAR_EXIT              = LINK_FAR,1700,58455
    INSTR_BRANCH_SPECIAL_EXIT 1701,58499
    INSTR_BRANCH_SPECIAL_EXIT   = LINK_SPECIAL_EXIT,1701,58499
    INSTR_BRANCH_TARGETS_PREFIX 1703,58575
    INSTR_BRANCH_TARGETS_PREFIX = LINK_TARGET_PREFIX,1703,58575
    INSTR_TRACE_CMP_EXIT 1709,58814
    INSTR_TRACE_CMP_EXIT        = LINK_TRACE_CMP,1709,58814
    INSTR_CALLBACK_RETURN 1712,58886
    INSTR_CALLBACK_RETURN       = LINK_CALLBACK_RETURN,1712,58886
    INSTR_NI_SYSCALL_INT 1714,58948
    INSTR_NI_SYSCALL_INT        = LINK_NI_SYSCALL_INT,1714,58948
    INSTR_NI_SYSCALL 1716,59010
    INSTR_NI_SYSCALL            = LINK_NI_SYSCALL,1716,59010
    INSTR_NI_SYSCALL_ALL 1717,59061
    INSTR_NI_SYSCALL_ALL        = LINK_NI_SYSCALL_ALL,1717,59061
    EXIT_CTI_TYPES 1719,59136
    EXIT_CTI_TYPES              = (INSTR_DIRECT_EXIT 1719,59136
    EXIT_CTI_TYPES              = (INSTR_DIRECT_EXIT | INSTR_INDIRECT_EXIT 1719,59136
                                   INSTR_RETURN_EXIT 1720,59213
                                   INSTR_RETURN_EXIT | INSTR_CALL_EXIT 1720,59213
                                   INSTR_JMP_EXIT 1721,59291
                                   INSTR_FAR_EXIT 1722,59343
                                   INSTR_BRANCH_SPECIAL_EXIT 1723,59395
                                   INSTR_BRANCH_TARGETS_PREFIX 1725,59481
                                   INSTR_TRACE_CMP_EXIT 1728,59564
                                   INSTR_CALLBACK_RETURN 1731,59644
                                   INSTR_NI_SYSCALL_INT 1733,59709
                                   INSTR_NI_SYSCALL)1735,59774
    INSTR_OPERANDS_VALID 1738,59886
    INSTR_OPERANDS_VALID        = 0x00010000,x000100001738,59886
    INSTR_FIRST_NON_LINK_SHARED_FLAG 1740,59952
    INSTR_FIRST_NON_LINK_SHARED_FLAG = INSTR_OPERANDS_VALID,1740,59952
    INSTR_EFLAGS_VALID 1741,60013
    INSTR_EFLAGS_VALID          = 0x00020000,x000200001741,60013
    INSTR_EFLAGS_6_VALID 1742,60059
    INSTR_EFLAGS_6_VALID        = 0x00040000,x000400001742,60059
    INSTR_RAW_BITS_VALID 1743,60105
    INSTR_RAW_BITS_VALID        = 0x00080000,x000800001743,60105
    INSTR_RAW_BITS_ALLOCATED 1744,60151
    INSTR_RAW_BITS_ALLOCATED    = 0x00100000,x001000001744,60151
    INSTR_DO_NOT_MANGLE 1746,60223
    INSTR_DO_NOT_MANGLE         = 0x00200000,x002000001746,60223
    INSTR_HAS_CUSTOM_STUB 1748,60293
    INSTR_HAS_CUSTOM_STUB       = 0x00400000,x004000001748,60293
    INSTR_IND_CALL_DIRECT 1750,60420
    INSTR_IND_CALL_DIRECT       = 0x00800000,x008000001750,60420
    INSTR_SHARED_SYSCALL 1753,60561
    INSTR_SHARED_SYSCALL        = 0x01000000,x010000001753,60561
    INSTR_CLOBBER_RETADDR 1757,60639
    INSTR_CLOBBER_RETADDR       = 0x02000000,x020000001757,60639
    INSTR_HOT_PATCHABLE 1764,60979
    INSTR_HOT_PATCHABLE         = 0x04000000,x040000001764,60979
    INSTR_IGNORE_INVALID 1767,61111
    INSTR_IGNORE_INVALID        = 0x08000000,x080000001767,61111
    INSTR_DO_NOT_EMIT 1772,61368
    INSTR_DO_NOT_EMIT           = 0x10000000,x100000001772,61368
    INSTR_RIP_REL_VALID 1774,61491
    INSTR_RIP_REL_VALID         = 0x20000000,x200000001774,61491
    INSTR_X86_MODE 1777,61608
    INSTR_X86_MODE              = 0x40000000,x400000001777,61608
    INSTR_OUR_MANGLING 1780,61736
    INSTR_OUR_MANGLING          = 0x80000000,x800000001780,61736
typedef struct _dr_instr_label_data_t 1790,62001
    ptr_uint_t data[data1791,62041
} dr_instr_label_data_t;1792,62121
struct _instr_t 1809,62812
    uint    flags;1811,62883
    byte    *bytes;bytes1814,62973
    uint    length;1815,62993
    app_pc  translation;1818,63058
    uint    opcode;1820,63084
    byte    rip_rel_pos;1824,63203
    byte    num_dsts;1831,63443
    byte    num_srcs;1832,63465
            opnd_t    src0;1840,63771
            opnd_t    *srcs;srcs1841,63799
            opnd_t    *dsts;dsts1842,63868
        dr_instr_label_data_t label_data;1844,63908
    uint    prefixes;1847,63958
    uint    eflags;1848,64028
    void *note;note1855,64348
    instr_t   *prev;prev1858,64431
    instr_t   *next;next1859,64452
    DR_FP_STATE,3233,104512
    DR_FP_MOVE,3234,104595
    DR_FP_CONVERT,3235,104680
    DR_FP_MATH,3236,104750
} dr_fp_type_t;3237,104824
#define EFLAGS_READ_CF 3732,121887
#define EFLAGS_READ_PF 3733,121967
#define EFLAGS_READ_AF 3734,122047
#define EFLAGS_READ_ZF 3735,122127
#define EFLAGS_READ_SF 3736,122207
#define EFLAGS_READ_TF 3737,122287
#define EFLAGS_READ_IF 3738,122367
#define EFLAGS_READ_DF 3739,122447
#define EFLAGS_READ_OF 3740,122527
#define EFLAGS_READ_NT 3741,122607
#define EFLAGS_READ_RF 3742,122687
#define EFLAGS_WRITE_CF 3743,122767
#define EFLAGS_WRITE_PF 3744,122848
#define EFLAGS_WRITE_AF 3745,122929
#define EFLAGS_WRITE_ZF 3746,123010
#define EFLAGS_WRITE_SF 3747,123091
#define EFLAGS_WRITE_TF 3748,123172
#define EFLAGS_WRITE_IF 3749,123253
#define EFLAGS_WRITE_DF 3750,123334
#define EFLAGS_WRITE_OF 3751,123415
#define EFLAGS_WRITE_NT 3752,123496
#define EFLAGS_WRITE_RF 3753,123577
#define EFLAGS_READ_ALL 3755,123659
#define EFLAGS_WRITE_ALL 3756,123724
#define EFLAGS_READ_6 3759,123923
#define EFLAGS_WRITE_6 3761,124023
#define EFLAGS_WRITE_TO_READ(3764,124142
#define EFLAGS_READ_TO_WRITE(3766,124268
    EFLAGS_CF 3774,124487
    EFLAGS_CF = 0x00000001,x000000013774,124487
    EFLAGS_PF 3775,124574
    EFLAGS_PF = 0x00000004,x000000043775,124574
    EFLAGS_AF 3776,124662
    EFLAGS_AF = 0x00000010,x000000103776,124662
    EFLAGS_ZF 3777,124753
    EFLAGS_ZF = 0x00000040,x000000403777,124753
    EFLAGS_SF 3778,124839
    EFLAGS_SF = 0x00000080,x000000803778,124839
    EFLAGS_DF 3779,124925
    EFLAGS_DF = 0x00000400,x000004003779,124925
    EFLAGS_OF 3780,125016
    EFLAGS_OF = 0x00000800,x000008003780,125016
#define PC_RELATIVE_TARGET(3786,125223
    RAW_OPCODE_nop 3789,125298
    RAW_OPCODE_nop             = 0x90,x903789,125298
    RAW_OPCODE_jmp_short 3790,125337
    RAW_OPCODE_jmp_short       = 0xeb,xeb3790,125337
    RAW_OPCODE_call 3791,125376
    RAW_OPCODE_call            = 0xe8,xe83791,125376
    RAW_OPCODE_ret 3792,125415
    RAW_OPCODE_ret             = 0xc3,xc33792,125415
    RAW_OPCODE_jmp 3793,125454
    RAW_OPCODE_jmp             = 0xe9,xe93793,125454
    RAW_OPCODE_push_imm32 3794,125493
    RAW_OPCODE_push_imm32      = 0x68,x683794,125493
    RAW_OPCODE_jcc_short_start 3795,125532
    RAW_OPCODE_jcc_short_start = 0x70,x703795,125532
    RAW_OPCODE_jcc_short_end 3796,125571
    RAW_OPCODE_jcc_short_end   = 0x7f,x7f3796,125571
    RAW_OPCODE_jcc_byte1 3797,125610
    RAW_OPCODE_jcc_byte1       = 0x0f,x0f3797,125610
    RAW_OPCODE_jcc_byte2_start 3798,125649
    RAW_OPCODE_jcc_byte2_start = 0x80,x803798,125649
    RAW_OPCODE_jcc_byte2_end 3799,125688
    RAW_OPCODE_jcc_byte2_end   = 0x8f,x8f3799,125688
    RAW_OPCODE_loop_start 3800,125727
    RAW_OPCODE_loop_start      = 0xe0,xe03800,125727
    RAW_OPCODE_loop_end 3801,125766
    RAW_OPCODE_loop_end        = 0xe3,xe33801,125766
    RAW_OPCODE_lea 3802,125805
    RAW_OPCODE_lea             = 0x8d,x8d3802,125805
    RAW_PREFIX_jcc_not_taken 3803,125844
    RAW_PREFIX_jcc_not_taken   = 0x2e,x2e3803,125844
    RAW_PREFIX_jcc_taken 3804,125883
    RAW_PREFIX_jcc_taken       = 0x3e,x3e3804,125883
    RAW_PREFIX_lock 3805,125922
    RAW_PREFIX_lock            = 0xf0,xf03805,125922
    FS_SEG_OPCODE 3809,126006
    FS_SEG_OPCODE        = 0x64,x643809,126006
    GS_SEG_OPCODE 3810,126039
    GS_SEG_OPCODE        = 0x65,x653810,126039
    TLS_SEG_OPCODE 3818,126359
    TLS_SEG_OPCODE       = GS_SEG_OPCODE,3818,126359
    TLS_SEG_OPCODE 3820,126407
    TLS_SEG_OPCODE       = FS_SEG_OPCODE,3820,126407
    DATA_PREFIX_OPCODE 3823,126457
    DATA_PREFIX_OPCODE   = 0x66,x663823,126457
    ADDR_PREFIX_OPCODE 3824,126490
    ADDR_PREFIX_OPCODE   = 0x67,x673824,126490
    REPNE_PREFIX_OPCODE 3825,126523
    REPNE_PREFIX_OPCODE  = 0xf2,xf23825,126523
    REP_PREFIX_OPCODE 3826,126556
    REP_PREFIX_OPCODE    = 0xf3,xf33826,126556
    REX_PREFIX_BASE_OPCODE 3827,126589
    REX_PREFIX_BASE_OPCODE = 0x40,x403827,126589
    REX_PREFIX_W_OPFLAG 3828,126624
    REX_PREFIX_W_OPFLAG    = 0x8,x83828,126624
    REX_PREFIX_R_OPFLAG 3829,126658
    REX_PREFIX_R_OPFLAG    = 0x4,x43829,126658
    REX_PREFIX_X_OPFLAG 3830,126692
    REX_PREFIX_X_OPFLAG    = 0x2,x23830,126692
    REX_PREFIX_B_OPFLAG 3831,126726
    REX_PREFIX_B_OPFLAG    = 0x1,x13831,126726
    REX_PREFIX_ALL_OPFLAGS 3832,126760
    REX_PREFIX_ALL_OPFLAGS = 0xf,xf3832,126760
    MOV_REG2MEM_OPCODE 3833,126794
    MOV_REG2MEM_OPCODE   = 0x89,x893833,126794
    MOV_MEM2REG_OPCODE 3834,126827
    MOV_MEM2REG_OPCODE   = 0x8b,x8b3834,126827
    MOV_XAX2MEM_OPCODE 3835,126860
    MOV_XAX2MEM_OPCODE   = 0xa3,xa33835,126860
    MOV_MEM2XAX_OPCODE 3836,126908
    MOV_MEM2XAX_OPCODE   = 0xa1,xa13836,126908
    MOV_IMM2XAX_OPCODE 3837,126956
    MOV_IMM2XAX_OPCODE   = 0xb8,xb83837,126956
    MOV_IMM2XBX_OPCODE 3838,127004
    MOV_IMM2XBX_OPCODE   = 0xbb,xbb3838,127004
    MOV_IMM2MEM_OPCODE 3839,127052
    MOV_IMM2MEM_OPCODE   = 0xc7,xc73839,127052
    JECXZ_OPCODE 3840,127101
    JECXZ_OPCODE         = 0xe3,xe33840,127101
    JMP_SHORT_OPCODE 3841,127134
    JMP_SHORT_OPCODE     = 0xeb,xeb3841,127134
    JMP_OPCODE 3842,127167
    JMP_OPCODE           = 0xe9,xe93842,127167
    JNE_OPCODE_1 3843,127200
    JNE_OPCODE_1         = 0x0f,x0f3843,127200
    SAHF_OPCODE 3844,127233
    SAHF_OPCODE          = 0x9e,x9e3844,127233
    LAHF_OPCODE 3845,127266
    LAHF_OPCODE          = 0x9f,x9f3845,127266
    SETO_OPCODE_1 3846,127299
    SETO_OPCODE_1        = 0x0f,x0f3846,127299
    SETO_OPCODE_2 3847,127332
    SETO_OPCODE_2        = 0x90,x903847,127332
    ADD_AL_OPCODE 3848,127365
    ADD_AL_OPCODE        = 0x04,x043848,127365
    INC_MEM32_OPCODE_1 3849,127398
    INC_MEM32_OPCODE_1   = 0xff,xff3849,127398
    MODRM16_DISP16 3850,127452
    MODRM16_DISP16       = 0x06,x063850,127452
    SIB_DISP32 3851,127522
    SIB_DISP32           = 0x25,x253851,127522
#define CTI_SHORT_REWRITE_LENGTH 3855,127676
    NUM_REGPARM 3862,127845
    REGPARM_0 3863,127875
    REGPARM_0            = REG_RDI,3863,127875
    REGPARM_1 3864,127911
    REGPARM_1            = REG_RSI,3864,127911
    REGPARM_2 3865,127947
    REGPARM_2            = REG_RDX,3865,127947
    REGPARM_3 3866,127983
    REGPARM_3            = REG_RCX,3866,127983
    REGPARM_4 3867,128019
    REGPARM_4            = REG_R8,3867,128019
    REGPARM_5 3868,128054
    REGPARM_5            = REG_R9,3868,128054
    REGPARM_MINSTACK 3869,128089
    REDZONE_SIZE 3870,128119
    NUM_REGPARM 3873,128203
    REGPARM_0 3874,128233
    REGPARM_0            = REG_RCX,3874,128233
    REGPARM_1 3875,128269
    REGPARM_1            = REG_RDX,3875,128269
    REGPARM_2 3876,128305
    REGPARM_2            = REG_R8,3876,128305
    REGPARM_3 3877,128340
    REGPARM_3            = REG_R9,3877,128340
    REGPARM_MINSTACK 3878,128375
    REGPARM_MINSTACK     = 4*sizeof(sizeof3878,128375
    REGPARM_MINSTACK     = 4*sizeof(XSP_SZ)3878,128375
    REDZONE_SIZE 3879,128420
    REGPARM_END_ALIGN 3886,128726
    NUM_REGPARM 3888,128763
    REGPARM_MINSTACK 3889,128793
    REDZONE_SIZE 3890,128823
    REGPARM_END_ALIGN 3891,128853
    REGPARM_END_ALIGN    = sizeof(3891,128853
    REGPARM_END_ALIGN    = sizeof(XSP_SZ)3891,128853
/*   0 */     OP_INVALID,3924,129902
/*   1 */     OP_UNDECODED,3925,129964
/*   2 */     OP_CONTD,3926,130030
/*   3 */     OP_LABEL,3927,130090
/*   4 */     OP_add,3929,130151
/*   5 */     OP_or,3930,130222
/*   6 */     OP_adc,3931,130292
/*   7 */     OP_sbb,3932,130363
/*   8 */     OP_and,3933,130434
/*   9 */     OP_daa,3934,130505
/*  10 */     OP_sub,3935,130576
/*  11 */     OP_das,3936,130647
/*  12 */     OP_xor,3937,130718
/*  13 */     OP_aaa,3938,130789
/*  14 */     OP_cmp,3939,130860
/*  15 */     OP_aas,3940,130931
/*  16 */     OP_inc,3941,131002
/*  17 */     OP_dec,3942,131077
/*  18 */     OP_push,3943,131152
/*  19 */     OP_push_imm,3944,131224
/*  20 */     OP_pop,3945,131300
/*  21 */     OP_pusha,3946,131371
/*  22 */     OP_popa,3947,131444
/*  23 */     OP_bound,3948,131516
/*  24 */     OP_arpl,3949,131589
/*  25 */     OP_imul,3950,131666
/*  26 */     OP_jo_short,3952,131740
/*  27 */     OP_jno_short,3953,131820
/*  28 */     OP_jb_short,3954,131901
/*  29 */     OP_jnb_short,3955,131981
/*  30 */     OP_jz_short,3956,132062
/*  31 */     OP_jnz_short,3957,132142
/*  32 */     OP_jbe_short,3958,132223
/*  33 */     OP_jnbe_short,3959,132304
/*  34 */     OP_js_short,3960,132386
/*  35 */     OP_jns_short,3961,132466
/*  36 */     OP_jp_short,3962,132547
/*  37 */     OP_jnp_short,3963,132627
/*  38 */     OP_jl_short,3964,132708
/*  39 */     OP_jnl_short,3965,132788
/*  40 */     OP_jle_short,3966,132869
/*  41 */     OP_jnle_short,3967,132950
/*  42 */     OP_call,3969,133033
/*  43 */     OP_call_ind,3970,133111
/*  44 */     OP_call_far,3971,133194
/*  45 */     OP_call_far_ind,3972,133276
/*  46 */     OP_jmp,3973,133363
/*  47 */     OP_jmp_short,3974,133440
/*  48 */     OP_jmp_ind,3975,133523
/*  49 */     OP_jmp_far,3976,133605
/*  50 */     OP_jmp_far_ind,3977,133686
/*  51 */     OP_loopne,3979,133773
/*  52 */     OP_loope,3980,133847
/*  53 */     OP_loop,3981,133920
/*  54 */     OP_jecxz,3982,133992
/*  55 */     OP_mov_ld,3986,134204
/*  56 */     OP_mov_st,3987,134281
/*  57 */     OP_mov_imm,3990,134517
/*  58 */     OP_mov_seg,3991,134595
/*  59 */     OP_mov_priv,3992,134673
/*  60 */     OP_test,3994,134754
/*  61 */     OP_lea,3995,134826
/*  62 */     OP_xchg,3996,134897
/*  63 */     OP_cwde,3997,134969
/*  64 */     OP_cdq,3998,135041
/*  65 */     OP_fwait,3999,135112
/*  66 */     OP_pushf,4000,135185
/*  67 */     OP_popf,4001,135258
/*  68 */     OP_sahf,4002,135330
/*  69 */     OP_lahf,4003,135402
/*  70 */     OP_ret,4005,135475
/*  71 */     OP_ret_far,4006,135547
/*  72 */     OP_les,4008,135624
/*  73 */     OP_lds,4009,135706
/*  74 */     OP_enter,4010,135788
/*  75 */     OP_leave,4011,135861
/*  76 */     OP_int3,4012,135934
/*  77 */     OP_int,4013,136006
/*  78 */     OP_into,4014,136077
/*  79 */     OP_iret,4015,136149
/*  80 */     OP_aam,4016,136221
/*  81 */     OP_aad,4017,136292
/*  82 */     OP_xlat,4018,136363
/*  83 */     OP_in,4019,136435
/*  84 */     OP_out,4020,136505
/*  85 */     OP_hlt,4021,136576
/*  86 */     OP_cmc,4022,136647
/*  87 */     OP_clc,4023,136718
/*  88 */     OP_stc,4024,136789
/*  89 */     OP_cli,4025,136860
/*  90 */     OP_sti,4026,136931
/*  91 */     OP_cld,4027,137002
/*  92 */     OP_std,4028,137073
/*  93 */     OP_lar,4031,137146
/*  94 */     OP_lsl,4032,137222
/*  95 */     OP_syscall,4033,137298
/*  96 */     OP_clts,4034,137378
/*  97 */     OP_sysret,4035,137455
/*  98 */     OP_invd,4036,137534
/*  99 */     OP_wbinvd,4037,137611
/* 100 */     OP_ud2a,4038,137690
/* 101 */     OP_nop_modrm,4039,137767
/* 102 */     OP_movntps,4040,137849
/* 103 */     OP_movntpd,4041,137936
/* 104 */     OP_wrmsr,4042,138023
/* 105 */     OP_rdtsc,4043,138101
/* 106 */     OP_rdmsr,4044,138179
/* 107 */     OP_rdpmc,4045,138257
/* 108 */     OP_sysenter,4046,138335
/* 109 */     OP_sysexit,4047,138416
/* 110 */     OP_cmovo,4049,138497
/* 111 */     OP_cmovno,4050,138575
/* 112 */     OP_cmovb,4051,138654
/* 113 */     OP_cmovnb,4052,138732
/* 114 */     OP_cmovz,4053,138811
/* 115 */     OP_cmovnz,4054,138889
/* 116 */     OP_cmovbe,4055,138968
/* 117 */     OP_cmovnbe,4056,139047
/* 118 */     OP_cmovs,4057,139127
/* 119 */     OP_cmovns,4058,139205
/* 120 */     OP_cmovp,4059,139284
/* 121 */     OP_cmovnp,4060,139362
/* 122 */     OP_cmovl,4061,139441
/* 123 */     OP_cmovnl,4062,139519
/* 124 */     OP_cmovle,4063,139598
/* 125 */     OP_cmovnle,4064,139677
/* 126 */     OP_punpcklbw,4066,139758
/* 127 */     OP_punpcklwd,4067,139847
/* 128 */     OP_punpckldq,4068,139936
/* 129 */     OP_packsswb,4069,140025
/* 130 */     OP_pcmpgtb,4070,140113
/* 131 */     OP_pcmpgtw,4071,140200
/* 132 */     OP_pcmpgtd,4072,140287
/* 133 */     OP_packuswb,4073,140374
/* 134 */     OP_punpckhbw,4074,140462
/* 135 */     OP_punpckhwd,4075,140551
/* 136 */     OP_punpckhdq,4076,140640
/* 137 */     OP_packssdw,4077,140729
/* 138 */     OP_punpcklqdq,4078,140817
/* 139 */     OP_punpckhqdq,4079,140907
/* 140 */     OP_movd,4080,140997
/* 141 */     OP_movq,4081,141081
/* 142 */     OP_movdqu,4082,141166
/* 143 */     OP_movdqa,4083,141254
/* 144 */     OP_pshufw,4084,141341
/* 145 */     OP_pshufd,4085,141427
/* 146 */     OP_pshufhw,4086,141513
/* 147 */     OP_pshuflw,4087,141600
/* 148 */     OP_pcmpeqb,4088,141687
/* 149 */     OP_pcmpeqw,4089,141774
/* 150 */     OP_pcmpeqd,4090,141861
/* 151 */     OP_emms,4091,141948
/* 152 */     OP_jo,4093,142031
/* 153 */     OP_jno,4094,142102
/* 154 */     OP_jb,4095,142174
/* 155 */     OP_jnb,4096,142245
/* 156 */     OP_jz,4097,142317
/* 157 */     OP_jnz,4098,142388
/* 158 */     OP_jbe,4099,142460
/* 159 */     OP_jnbe,4100,142532
/* 160 */     OP_js,4101,142605
/* 161 */     OP_jns,4102,142676
/* 162 */     OP_jp,4103,142748
/* 163 */     OP_jnp,4104,142819
/* 164 */     OP_jl,4105,142891
/* 165 */     OP_jnl,4106,142962
/* 166 */     OP_jle,4107,143034
/* 167 */     OP_jnle,4108,143106
/* 168 */     OP_seto,4110,143180
/* 169 */     OP_setno,4111,143257
/* 170 */     OP_setb,4112,143335
/* 171 */     OP_setnb,4113,143412
/* 172 */     OP_setz,4114,143490
/* 173 */     OP_setnz,4115,143567
/* 174 */     OP_setbe,4116,143645
/* 175 */     OP_setnbe,4117,143723
/* 176 */     OP_sets,4118,143804
/* 177 */     OP_setns,4119,143881
/* 178 */     OP_setp,4120,143959
/* 179 */     OP_setnp,4121,144036
/* 180 */     OP_setl,4122,144114
/* 181 */     OP_setnl,4123,144191
/* 182 */     OP_setle,4124,144269
/* 183 */     OP_setnle,4125,144347
/* 184 */     OP_cpuid,4127,144429
/* 185 */     OP_bt,4128,144507
/* 186 */     OP_shld,4129,144582
/* 187 */     OP_rsm,4130,144659
/* 188 */     OP_bts,4131,144735
/* 189 */     OP_shrd,4132,144811
/* 190 */     OP_cmpxchg,4133,144888
/* 191 */     OP_lss,4134,144968
/* 192 */     OP_btr,4135,145044
/* 193 */     OP_lfs,4136,145120
/* 194 */     OP_lgs,4137,145196
/* 195 */     OP_movzx,4138,145272
/* 196 */     OP_ud2b,4139,145350
/* 197 */     OP_btc,4140,145427
/* 198 */     OP_bsf,4141,145503
/* 199 */     OP_bsr,4142,145579
/* 200 */     OP_movsx,4143,145663
/* 201 */     OP_xadd,4144,145741
/* 202 */     OP_movnti,4145,145818
/* 203 */     OP_pinsrw,4146,145897
/* 204 */     OP_pextrw,4147,145983
/* 205 */     OP_bswap,4148,146069
/* 206 */     OP_psrlw,4149,146147
/* 207 */     OP_psrld,4150,146232
/* 208 */     OP_psrlq,4151,146317
/* 209 */     OP_paddq,4152,146402
/* 210 */     OP_pmullw,4153,146487
/* 211 */     OP_pmovmskb,4154,146573
/* 212 */     OP_psubusb,4155,146661
/* 213 */     OP_psubusw,4156,146748
/* 214 */     OP_pminub,4157,146835
/* 215 */     OP_pand,4158,146921
/* 216 */     OP_paddusb,4159,147005
/* 217 */     OP_paddusw,4160,147092
/* 218 */     OP_pmaxub,4161,147179
/* 219 */     OP_pandn,4162,147265
/* 220 */     OP_pavgb,4163,147350
/* 221 */     OP_psraw,4164,147435
/* 222 */     OP_psrad,4165,147520
/* 223 */     OP_pavgw,4166,147605
/* 224 */     OP_pmulhuw,4167,147690
/* 225 */     OP_pmulhw,4168,147777
/* 226 */     OP_movntq,4169,147863
/* 227 */     OP_movntdq,4170,147949
/* 228 */     OP_psubsb,4171,148036
/* 229 */     OP_psubsw,4172,148122
/* 230 */     OP_pminsw,4173,148208
/* 231 */     OP_por,4174,148294
/* 232 */     OP_paddsb,4175,148377
/* 233 */     OP_paddsw,4176,148463
/* 234 */     OP_pmaxsw,4177,148549
/* 235 */     OP_pxor,4178,148635
/* 236 */     OP_psllw,4179,148719
/* 237 */     OP_pslld,4180,148804
/* 238 */     OP_psllq,4181,148889
/* 239 */     OP_pmuludq,4182,148974
/* 240 */     OP_pmaddwd,4183,149061
/* 241 */     OP_psadbw,4184,149148
/* 242 */     OP_maskmovq,4185,149234
/* 243 */     OP_maskmovdqu,4186,149322
/* 244 */     OP_psubb,4187,149412
/* 245 */     OP_psubw,4188,149497
/* 246 */     OP_psubd,4189,149582
/* 247 */     OP_psubq,4190,149667
/* 248 */     OP_paddb,4191,149752
/* 249 */     OP_paddw,4192,149837
/* 250 */     OP_paddd,4193,149922
/* 251 */     OP_psrldq,4194,150008
/* 252 */     OP_pslldq,4195,150095
/* 253 */     OP_rol,4198,150184
/* 254 */     OP_ror,4199,150261
/* 255 */     OP_rcl,4200,150338
/* 256 */     OP_rcr,4201,150415
/* 257 */     OP_shl,4202,150492
/* 258 */     OP_shr,4203,150569
/* 259 */     OP_sar,4204,150646
/* 260 */     OP_not,4205,150723
/* 261 */     OP_neg,4206,150800
/* 262 */     OP_mul,4207,150877
/* 263 */     OP_div,4208,150954
/* 264 */     OP_idiv,4209,151031
/* 265 */     OP_sldt,4210,151109
/* 266 */     OP_str,4211,151187
/* 267 */     OP_lldt,4212,151264
/* 268 */     OP_ltr,4213,151342
/* 269 */     OP_verr,4214,151419
/* 270 */     OP_verw,4215,151497
/* 271 */     OP_sgdt,4216,151575
/* 272 */     OP_sidt,4217,151656
/* 273 */     OP_lgdt,4218,151737
/* 274 */     OP_lidt,4219,151818
/* 275 */     OP_smsw,4220,151899
/* 276 */     OP_lmsw,4221,151977
/* 277 */     OP_invlpg,4222,152055
/* 278 */     OP_cmpxchg8b,4223,152138
/* 279 */     OP_fxsave32,4224,152221
/* 280 */     OP_fxrstor32,4225,152306
/* 281 */     OP_ldmxcsr,4226,152392
/* 282 */     OP_stmxcsr,4227,152477
/* 283 */     OP_lfence,4228,152562
/* 284 */     OP_mfence,4229,152645
/* 285 */     OP_clflush,4230,152728
/* 286 */     OP_sfence,4231,152812
/* 287 */     OP_prefetchnta,4232,152895
/* 288 */     OP_prefetcht0,4233,152980
/* 289 */     OP_prefetcht1,4234,153064
/* 290 */     OP_prefetcht2,4235,153148
/* 291 */     OP_prefetch,4236,153232
/* 292 */     OP_prefetchw,4237,153314
/* 293 */     OP_movups,4240,153399
/* 294 */     OP_movss,4241,153484
/* 295 */     OP_movupd,4242,153568
/* 296 */     OP_movsd,4243,153653
/* 297 */     OP_movlps,4244,153737
/* 298 */     OP_movlpd,4245,153822
/* 299 */     OP_unpcklps,4246,153907
/* 300 */     OP_unpcklpd,4247,153994
/* 301 */     OP_unpckhps,4248,154081
/* 302 */     OP_unpckhpd,4249,154168
/* 303 */     OP_movhps,4250,154255
/* 304 */     OP_movhpd,4251,154340
/* 305 */     OP_movaps,4252,154425
/* 306 */     OP_movapd,4253,154510
/* 307 */     OP_cvtpi2ps,4254,154595
/* 308 */     OP_cvtsi2ss,4255,154682
/* 309 */     OP_cvtpi2pd,4256,154769
/* 310 */     OP_cvtsi2sd,4257,154856
/* 311 */     OP_cvttps2pi,4258,154943
/* 312 */     OP_cvttss2si,4259,155031
/* 313 */     OP_cvttpd2pi,4260,155119
/* 314 */     OP_cvttsd2si,4261,155207
/* 315 */     OP_cvtps2pi,4262,155295
/* 316 */     OP_cvtss2si,4263,155382
/* 317 */     OP_cvtpd2pi,4264,155469
/* 318 */     OP_cvtsd2si,4265,155556
/* 319 */     OP_ucomiss,4266,155643
/* 320 */     OP_ucomisd,4267,155729
/* 321 */     OP_comiss,4268,155815
/* 322 */     OP_comisd,4269,155900
/* 323 */     OP_movmskps,4270,155985
/* 324 */     OP_movmskpd,4271,156072
/* 325 */     OP_sqrtps,4272,156159
/* 326 */     OP_sqrtss,4273,156244
/* 327 */     OP_sqrtpd,4274,156329
/* 328 */     OP_sqrtsd,4275,156414
/* 329 */     OP_rsqrtps,4276,156499
/* 330 */     OP_rsqrtss,4277,156585
/* 331 */     OP_rcpps,4278,156671
/* 332 */     OP_rcpss,4279,156755
/* 333 */     OP_andps,4280,156839
/* 334 */     OP_andpd,4281,156923
/* 335 */     OP_andnps,4282,157007
/* 336 */     OP_andnpd,4283,157092
/* 337 */     OP_orps,4284,157177
/* 338 */     OP_orpd,4285,157260
/* 339 */     OP_xorps,4286,157343
/* 340 */     OP_xorpd,4287,157427
/* 341 */     OP_addps,4288,157511
/* 342 */     OP_addss,4289,157595
/* 343 */     OP_addpd,4290,157679
/* 344 */     OP_addsd,4291,157763
/* 345 */     OP_mulps,4292,157847
/* 346 */     OP_mulss,4293,157931
/* 347 */     OP_mulpd,4294,158015
/* 348 */     OP_mulsd,4295,158099
/* 349 */     OP_cvtps2pd,4296,158183
/* 350 */     OP_cvtss2sd,4297,158270
/* 351 */     OP_cvtpd2ps,4298,158357
/* 352 */     OP_cvtsd2ss,4299,158444
/* 353 */     OP_cvtdq2ps,4300,158531
/* 354 */     OP_cvttps2dq,4301,158618
/* 355 */     OP_cvtps2dq,4302,158706
/* 356 */     OP_subps,4303,158793
/* 357 */     OP_subss,4304,158877
/* 358 */     OP_subpd,4305,158961
/* 359 */     OP_subsd,4306,159045
/* 360 */     OP_minps,4307,159129
/* 361 */     OP_minss,4308,159213
/* 362 */     OP_minpd,4309,159297
/* 363 */     OP_minsd,4310,159381
/* 364 */     OP_divps,4311,159465
/* 365 */     OP_divss,4312,159549
/* 366 */     OP_divpd,4313,159633
/* 367 */     OP_divsd,4314,159717
/* 368 */     OP_maxps,4315,159801
/* 369 */     OP_maxss,4316,159885
/* 370 */     OP_maxpd,4317,159969
/* 371 */     OP_maxsd,4318,160053
/* 372 */     OP_cmpps,4319,160137
/* 373 */     OP_cmpss,4320,160221
/* 374 */     OP_cmppd,4321,160305
/* 375 */     OP_cmpsd,4322,160389
/* 376 */     OP_shufps,4323,160473
/* 377 */     OP_shufpd,4324,160558
/* 378 */     OP_cvtdq2pd,4325,160643
/* 379 */     OP_cvttpd2dq,4326,160730
/* 380 */     OP_cvtpd2dq,4327,160818
/* 381 */     OP_nop,4328,160905
/* 382 */     OP_pause,4329,160985
/* 383 */     OP_ins,4331,161071
/* 384 */     OP_rep_ins,4332,161150
/* 385 */     OP_outs,4333,161233
/* 386 */     OP_rep_outs,4334,161313
/* 387 */     OP_movs,4335,161397
/* 388 */     OP_rep_movs,4336,161477
/* 389 */     OP_stos,4337,161561
/* 390 */     OP_rep_stos,4338,161641
/* 391 */     OP_lods,4339,161725
/* 392 */     OP_rep_lods,4340,161805
/* 393 */     OP_cmps,4341,161889
/* 394 */     OP_rep_cmps,4342,161971
/* 395 */     OP_repne_cmps,4343,162057
/* 396 */     OP_scas,4344,162145
/* 397 */     OP_rep_scas,4345,162227
/* 398 */     OP_repne_scas,4346,162313
/* 399 */     OP_fadd,4349,162403
/* 400 */     OP_fmul,4350,162481
/* 401 */     OP_fcom,4351,162559
/* 402 */     OP_fcomp,4352,162637
/* 403 */     OP_fsub,4353,162716
/* 404 */     OP_fsubr,4354,162794
/* 405 */     OP_fdiv,4355,162873
/* 406 */     OP_fdivr,4356,162951
/* 407 */     OP_fld,4357,163030
/* 408 */     OP_fst,4358,163107
/* 409 */     OP_fstp,4359,163184
/* 410 */     OP_fldenv,4360,163262
/* 411 */     OP_fldcw,4361,163342
/* 412 */     OP_fnstenv,4362,163421
/* 413 */     OP_fnstcw,4363,163502
/* 414 */     OP_fiadd,4364,163582
/* 415 */     OP_fimul,4365,163661
/* 416 */     OP_ficom,4366,163740
/* 417 */     OP_ficomp,4367,163819
/* 418 */     OP_fisub,4368,163899
/* 419 */     OP_fisubr,4369,163978
/* 420 */     OP_fidiv,4370,164058
/* 421 */     OP_fidivr,4371,164137
/* 422 */     OP_fild,4372,164217
/* 423 */     OP_fist,4373,164295
/* 424 */     OP_fistp,4374,164373
/* 425 */     OP_frstor,4375,164452
/* 426 */     OP_fnsave,4376,164532
/* 427 */     OP_fnstsw,4377,164612
/* 428 */     OP_fbld,4379,164693
/* 429 */     OP_fbstp,4380,164771
/* 430 */     OP_fxch,4383,164852
/* 431 */     OP_fnop,4384,164935
/* 432 */     OP_fchs,4385,165018
/* 433 */     OP_fabs,4386,165101
/* 434 */     OP_ftst,4387,165184
/* 435 */     OP_fxam,4388,165267
/* 436 */     OP_fld1,4389,165350
/* 437 */     OP_fldl2t,4390,165433
/* 438 */     OP_fldl2e,4391,165518
/* 439 */     OP_fldpi,4392,165603
/* 440 */     OP_fldlg2,4393,165687
/* 441 */     OP_fldln2,4394,165772
/* 442 */     OP_fldz,4395,165857
/* 443 */     OP_f2xm1,4396,165940
/* 444 */     OP_fyl2x,4397,166024
/* 445 */     OP_fptan,4398,166108
/* 446 */     OP_fpatan,4399,166192
/* 447 */     OP_fxtract,4400,166277
/* 448 */     OP_fprem1,4401,166363
/* 449 */     OP_fdecstp,4402,166448
/* 450 */     OP_fincstp,4403,166534
/* 451 */     OP_fprem,4404,166620
/* 452 */     OP_fyl2xp1,4405,166704
/* 453 */     OP_fsqrt,4406,166790
/* 454 */     OP_fsincos,4407,166874
/* 455 */     OP_frndint,4408,166960
/* 456 */     OP_fscale,4409,167046
/* 457 */     OP_fsin,4410,167131
/* 458 */     OP_fcos,4411,167214
/* 459 */     OP_fcmovb,4412,167297
/* 460 */     OP_fcmove,4413,167382
/* 461 */     OP_fcmovbe,4414,167467
/* 462 */     OP_fcmovu,4415,167553
/* 463 */     OP_fucompp,4416,167638
/* 464 */     OP_fcmovnb,4417,167724
/* 465 */     OP_fcmovne,4418,167810
/* 466 */     OP_fcmovnbe,4419,167896
/* 467 */     OP_fcmovnu,4420,167983
/* 468 */     OP_fnclex,4421,168069
/* 469 */     OP_fninit,4422,168154
/* 470 */     OP_fucomi,4423,168239
/* 471 */     OP_fcomi,4424,168324
/* 472 */     OP_ffree,4425,168408
/* 473 */     OP_fucom,4426,168492
/* 474 */     OP_fucomp,4427,168576
/* 475 */     OP_faddp,4428,168661
/* 476 */     OP_fmulp,4429,168745
/* 477 */     OP_fcompp,4430,168829
/* 478 */     OP_fsubrp,4431,168914
/* 479 */     OP_fsubp,4432,168999
/* 480 */     OP_fdivrp,4433,169083
/* 481 */     OP_fdivp,4434,169168
/* 482 */     OP_fucomip,4435,169252
/* 483 */     OP_fcomip,4436,169338
/* 484 */     OP_fisttp,4439,169452
/* 485 */     OP_haddpd,4440,169535
/* 486 */     OP_haddps,4441,169622
/* 487 */     OP_hsubpd,4442,169709
/* 488 */     OP_hsubps,4443,169796
/* 489 */     OP_addsubpd,4444,169883
/* 490 */     OP_addsubps,4445,169972
/* 491 */     OP_lddqu,4446,170061
/* 492 */     OP_monitor,4447,170147
/* 493 */     OP_mwait,4448,170229
/* 494 */     OP_movsldup,4449,170309
/* 495 */     OP_movshdup,4450,170397
/* 496 */     OP_movddup,4451,170485
/* 497 */     OP_femms,4454,170604
/* 498 */     OP_unknown_3dnow,4455,170684
/* 499 */     OP_pavgusb,4456,170775
/* 500 */     OP_pfadd,4457,170860
/* 501 */     OP_pfacc,4458,170943
/* 502 */     OP_pfcmpge,4459,171026
/* 503 */     OP_pfcmpgt,4460,171111
/* 504 */     OP_pfcmpeq,4461,171196
/* 505 */     OP_pfmin,4462,171281
/* 506 */     OP_pfmax,4463,171364
/* 507 */     OP_pfmul,4464,171447
/* 508 */     OP_pfrcp,4465,171530
/* 509 */     OP_pfrcpit1,4466,171614
/* 510 */     OP_pfrcpit2,4467,171701
/* 511 */     OP_pfrsqrt,4468,171788
/* 512 */     OP_pfrsqit1,4469,171874
/* 513 */     OP_pmulhrw,4470,171961
/* 514 */     OP_pfsub,4471,172047
/* 515 */     OP_pfsubr,4472,172131
/* 516 */     OP_pi2fd,4473,172216
/* 517 */     OP_pf2id,4474,172300
/* 518 */     OP_pi2fw,4475,172384
/* 519 */     OP_pf2iw,4476,172468
/* 520 */     OP_pfnacc,4477,172552
/* 521 */     OP_pfpnacc,4478,172637
/* 522 */     OP_pswapd,4479,172723
/* 523 */     OP_pshufb,4482,172825
/* 524 */     OP_phaddw,4483,172914
/* 525 */     OP_phaddd,4484,173003
/* 526 */     OP_phaddsw,4485,173092
/* 527 */     OP_pmaddubsw,4486,173182
/* 528 */     OP_phsubw,4487,173274
/* 529 */     OP_phsubd,4488,173363
/* 530 */     OP_phsubsw,4489,173452
/* 531 */     OP_psignb,4490,173542
/* 532 */     OP_psignw,4491,173631
/* 533 */     OP_psignd,4492,173720
/* 534 */     OP_pmulhrsw,4493,173809
/* 535 */     OP_pabsb,4494,173900
/* 536 */     OP_pabsw,4495,173988
/* 537 */     OP_pabsd,4496,174076
/* 538 */     OP_palignr,4497,174164
/* 539 */     OP_popcnt,4500,174335
/* 540 */     OP_movntss,4501,174424
/* 541 */     OP_movntsd,4502,174513
/* 542 */     OP_extrq,4503,174602
/* 543 */     OP_insertq,4504,174690
/* 544 */     OP_lzcnt,4505,174780
/* 545 */     OP_pblendvb,4506,174868
/* 546 */     OP_blendvps,4507,174951
/* 547 */     OP_blendvpd,4508,175034
/* 548 */     OP_ptest,4509,175117
/* 549 */     OP_pmovsxbw,4510,175200
/* 550 */     OP_pmovsxbd,4511,175286
/* 551 */     OP_pmovsxbq,4512,175372
/* 552 */     OP_pmovsxdw,4513,175458
/* 553 */     OP_pmovsxwq,4514,175544
/* 554 */     OP_pmovsxdq,4515,175630
/* 555 */     OP_pmuldq,4516,175716
/* 556 */     OP_pcmpeqq,4517,175801
/* 557 */     OP_movntdqa,4518,175887
/* 558 */     OP_packusdw,4519,175974
/* 559 */     OP_pmovzxbw,4520,176061
/* 560 */     OP_pmovzxbd,4521,176148
/* 561 */     OP_pmovzxbq,4522,176235
/* 562 */     OP_pmovzxdw,4523,176322
/* 563 */     OP_pmovzxwq,4524,176409
/* 564 */     OP_pmovzxdq,4525,176496
/* 565 */     OP_pcmpgtq,4526,176583
/* 566 */     OP_pminsb,4527,176669
/* 567 */     OP_pminsd,4528,176754
/* 568 */     OP_pminuw,4529,176839
/* 569 */     OP_pminud,4530,176924
/* 570 */     OP_pmaxsb,4531,177009
/* 571 */     OP_pmaxsd,4532,177094
/* 572 */     OP_pmaxuw,4533,177179
/* 573 */     OP_pmaxud,4534,177264
/* 574 */     OP_pmulld,4535,177349
/* 575 */     OP_phminposuw,4536,177434
/* 576 */     OP_crc32,4537,177523
/* 577 */     OP_pextrb,4538,177611
/* 578 */     OP_pextrd,4539,177696
/* 579 */     OP_extractps,4540,177781
/* 580 */     OP_roundps,4541,177869
/* 581 */     OP_roundpd,4542,177955
/* 582 */     OP_roundss,4543,178041
/* 583 */     OP_roundsd,4544,178127
/* 584 */     OP_blendps,4545,178213
/* 585 */     OP_blendpd,4546,178299
/* 586 */     OP_pblendw,4547,178385
/* 587 */     OP_pinsrb,4548,178471
/* 588 */     OP_insertps,4549,178556
/* 589 */     OP_pinsrd,4550,178643
/* 590 */     OP_dpps,4551,178728
/* 591 */     OP_dppd,4552,178811
/* 592 */     OP_mpsadbw,4553,178894
/* 593 */     OP_pcmpestrm,4554,178980
/* 594 */     OP_pcmpestri,4555,179068
/* 595 */     OP_pcmpistrm,4556,179156
/* 596 */     OP_pcmpistri,4557,179244
/* 597 */     OP_movsxd,4560,179347
/* 598 */     OP_swapgs,4561,179432
/* 599 */     OP_vmcall,4564,179530
/* 600 */     OP_vmlaunch,4565,179613
/* 601 */     OP_vmresume,4566,179698
/* 602 */     OP_vmxoff,4567,179783
/* 603 */     OP_vmptrst,4568,179866
/* 604 */     OP_vmptrld,4569,179948
/* 605 */     OP_vmxon,4570,180038
/* 606 */     OP_vmclear,4571,180126
/* 607 */     OP_vmread,4572,180216
/* 608 */     OP_vmwrite,4573,180305
/* 609 */     OP_int1,4576,180419
/* 610 */     OP_salc,4577,180497
/* 611 */     OP_ffreep,4578,180575
/* 612 */     OP_vmrun,4581,180683
/* 613 */     OP_vmmcall,4582,180765
/* 614 */     OP_vmload,4583,180849
/* 615 */     OP_vmsave,4584,180932
/* 616 */     OP_stgi,4585,181015
/* 617 */     OP_clgi,4586,181096
/* 618 */     OP_skinit,4587,181177
/* 619 */     OP_invlpga,4588,181260
/* 620 */     OP_rdtscp,4590,181381
/* 621 */     OP_invept,4593,181495
/* 622 */     OP_invvpid,4594,181576
/* 623 */     OP_pclmulqdq,4597,181693
/* 624 */     OP_aesimc,4598,181781
/* 625 */     OP_aesenc,4599,181866
/* 626 */     OP_aesenclast,4600,181951
/* 627 */     OP_aesdec,4601,182040
/* 628 */     OP_aesdeclast,4602,182125
/* 629 */     OP_aeskeygenassist,4603,182214
/* 630 */     OP_movbe,4606,182340
/* 631 */     OP_xgetbv,4609,182467
/* 632 */     OP_xsetbv,4610,182550
/* 633 */     OP_xsave32,4611,182633
/* 634 */     OP_xrstor32,4612,182718
/* 635 */     OP_xsaveopt32,4613,182804
/* 636 */     OP_vmovss,4616,182907
/* 637 */     OP_vmovsd,4617,182992
/* 638 */     OP_vmovups,4618,183077
/* 639 */     OP_vmovupd,4619,183166
/* 640 */     OP_vmovlps,4620,183255
/* 641 */     OP_vmovsldup,4621,183344
/* 642 */     OP_vmovlpd,4622,183435
/* 643 */     OP_vmovddup,4623,183524
/* 644 */     OP_vunpcklps,4624,183614
/* 645 */     OP_vunpcklpd,4625,183705
/* 646 */     OP_vunpckhps,4626,183796
/* 647 */     OP_vunpckhpd,4627,183887
/* 648 */     OP_vmovhps,4628,183978
/* 649 */     OP_vmovshdup,4629,184067
/* 650 */     OP_vmovhpd,4630,184158
/* 651 */     OP_vmovaps,4631,184247
/* 652 */     OP_vmovapd,4632,184336
/* 653 */     OP_vcvtsi2ss,4633,184425
/* 654 */     OP_vcvtsi2sd,4634,184516
/* 655 */     OP_vmovntps,4635,184607
/* 656 */     OP_vmovntpd,4636,184697
/* 657 */     OP_vcvttss2si,4637,184787
/* 658 */     OP_vcvttsd2si,4638,184879
/* 659 */     OP_vcvtss2si,4639,184971
/* 660 */     OP_vcvtsd2si,4640,185062
/* 661 */     OP_vucomiss,4641,185153
/* 662 */     OP_vucomisd,4642,185243
/* 663 */     OP_vcomiss,4643,185333
/* 664 */     OP_vcomisd,4644,185422
/* 665 */     OP_vmovmskps,4645,185511
/* 666 */     OP_vmovmskpd,4646,185602
/* 667 */     OP_vsqrtps,4647,185693
/* 668 */     OP_vsqrtss,4648,185782
/* 669 */     OP_vsqrtpd,4649,185871
/* 670 */     OP_vsqrtsd,4650,185960
/* 671 */     OP_vrsqrtps,4651,186049
/* 672 */     OP_vrsqrtss,4652,186139
/* 673 */     OP_vrcpps,4653,186229
/* 674 */     OP_vrcpss,4654,186317
/* 675 */     OP_vandps,4655,186405
/* 676 */     OP_vandpd,4656,186493
/* 677 */     OP_vandnps,4657,186581
/* 678 */     OP_vandnpd,4658,186670
/* 679 */     OP_vorps,4659,186759
/* 680 */     OP_vorpd,4660,186846
/* 681 */     OP_vxorps,4661,186933
/* 682 */     OP_vxorpd,4662,187021
/* 683 */     OP_vaddps,4663,187109
/* 684 */     OP_vaddss,4664,187197
/* 685 */     OP_vaddpd,4665,187285
/* 686 */     OP_vaddsd,4666,187373
/* 687 */     OP_vmulps,4667,187461
/* 688 */     OP_vmulss,4668,187549
/* 689 */     OP_vmulpd,4669,187637
/* 690 */     OP_vmulsd,4670,187725
/* 691 */     OP_vcvtps2pd,4671,187813
/* 692 */     OP_vcvtss2sd,4672,187904
/* 693 */     OP_vcvtpd2ps,4673,187995
/* 694 */     OP_vcvtsd2ss,4674,188086
/* 695 */     OP_vcvtdq2ps,4675,188177
/* 696 */     OP_vcvttps2dq,4676,188268
/* 697 */     OP_vcvtps2dq,4677,188360
/* 698 */     OP_vsubps,4678,188451
/* 699 */     OP_vsubss,4679,188539
/* 700 */     OP_vsubpd,4680,188627
/* 701 */     OP_vsubsd,4681,188715
/* 702 */     OP_vminps,4682,188803
/* 703 */     OP_vminss,4683,188891
/* 704 */     OP_vminpd,4684,188979
/* 705 */     OP_vminsd,4685,189067
/* 706 */     OP_vdivps,4686,189155
/* 707 */     OP_vdivss,4687,189243
/* 708 */     OP_vdivpd,4688,189331
/* 709 */     OP_vdivsd,4689,189419
/* 710 */     OP_vmaxps,4690,189507
/* 711 */     OP_vmaxss,4691,189595
/* 712 */     OP_vmaxpd,4692,189683
/* 713 */     OP_vmaxsd,4693,189771
/* 714 */     OP_vpunpcklbw,4694,189859
/* 715 */     OP_vpunpcklwd,4695,189951
/* 716 */     OP_vpunpckldq,4696,190043
/* 717 */     OP_vpacksswb,4697,190135
/* 718 */     OP_vpcmpgtb,4698,190226
/* 719 */     OP_vpcmpgtw,4699,190316
/* 720 */     OP_vpcmpgtd,4700,190406
/* 721 */     OP_vpackuswb,4701,190496
/* 722 */     OP_vpunpckhbw,4702,190587
/* 723 */     OP_vpunpckhwd,4703,190679
/* 724 */     OP_vpunpckhdq,4704,190771
/* 725 */     OP_vpackssdw,4705,190863
/* 726 */     OP_vpunpcklqdq,4706,190954
/* 727 */     OP_vpunpckhqdq,4707,191047
/* 728 */     OP_vmovd,4708,191140
/* 729 */     OP_vpshufhw,4709,191227
/* 730 */     OP_vpshufd,4710,191317
/* 731 */     OP_vpshuflw,4711,191406
/* 732 */     OP_vpcmpeqb,4712,191496
/* 733 */     OP_vpcmpeqw,4713,191586
/* 734 */     OP_vpcmpeqd,4714,191676
/* 735 */     OP_vmovq,4715,191766
/* 736 */     OP_vcmpps,4716,191853
/* 737 */     OP_vcmpss,4717,191941
/* 738 */     OP_vcmppd,4718,192029
/* 739 */     OP_vcmpsd,4719,192117
/* 740 */     OP_vpinsrw,4720,192205
/* 741 */     OP_vpextrw,4721,192294
/* 742 */     OP_vshufps,4722,192383
/* 743 */     OP_vshufpd,4723,192472
/* 744 */     OP_vpsrlw,4724,192561
/* 745 */     OP_vpsrld,4725,192649
/* 746 */     OP_vpsrlq,4726,192737
/* 747 */     OP_vpaddq,4727,192825
/* 748 */     OP_vpmullw,4728,192913
/* 749 */     OP_vpmovmskb,4729,193002
/* 750 */     OP_vpsubusb,4730,193093
/* 751 */     OP_vpsubusw,4731,193183
/* 752 */     OP_vpminub,4732,193273
/* 753 */     OP_vpand,4733,193362
/* 754 */     OP_vpaddusb,4734,193449
/* 755 */     OP_vpaddusw,4735,193539
/* 756 */     OP_vpmaxub,4736,193629
/* 757 */     OP_vpandn,4737,193718
/* 758 */     OP_vpavgb,4738,193806
/* 759 */     OP_vpsraw,4739,193894
/* 760 */     OP_vpsrad,4740,193982
/* 761 */     OP_vpavgw,4741,194070
/* 762 */     OP_vpmulhuw,4742,194158
/* 763 */     OP_vpmulhw,4743,194248
/* 764 */     OP_vcvtdq2pd,4744,194337
/* 765 */     OP_vcvttpd2dq,4745,194428
/* 766 */     OP_vcvtpd2dq,4746,194520
/* 767 */     OP_vmovntdq,4747,194611
/* 768 */     OP_vpsubsb,4748,194701
/* 769 */     OP_vpsubsw,4749,194790
/* 770 */     OP_vpminsw,4750,194879
/* 771 */     OP_vpor,4751,194968
/* 772 */     OP_vpaddsb,4752,195054
/* 773 */     OP_vpaddsw,4753,195143
/* 774 */     OP_vpmaxsw,4754,195232
/* 775 */     OP_vpxor,4755,195321
/* 776 */     OP_vpsllw,4756,195408
/* 777 */     OP_vpslld,4757,195496
/* 778 */     OP_vpsllq,4758,195584
/* 779 */     OP_vpmuludq,4759,195672
/* 780 */     OP_vpmaddwd,4760,195762
/* 781 */     OP_vpsadbw,4761,195852
/* 782 */     OP_vmaskmovdqu,4762,195941
/* 783 */     OP_vpsubb,4763,196034
/* 784 */     OP_vpsubw,4764,196122
/* 785 */     OP_vpsubd,4765,196210
/* 786 */     OP_vpsubq,4766,196298
/* 787 */     OP_vpaddb,4767,196386
/* 788 */     OP_vpaddw,4768,196474
/* 789 */     OP_vpaddd,4769,196562
/* 790 */     OP_vpsrldq,4770,196651
/* 791 */     OP_vpslldq,4771,196741
/* 792 */     OP_vmovdqu,4772,196831
/* 793 */     OP_vmovdqa,4773,196921
/* 794 */     OP_vhaddpd,4774,197011
/* 795 */     OP_vhaddps,4775,197101
/* 796 */     OP_vhsubpd,4776,197191
/* 797 */     OP_vhsubps,4777,197281
/* 798 */     OP_vaddsubpd,4778,197371
/* 799 */     OP_vaddsubps,4779,197463
/* 800 */     OP_vlddqu,4780,197555
/* 801 */     OP_vpshufb,4781,197644
/* 802 */     OP_vphaddw,4782,197734
/* 803 */     OP_vphaddd,4783,197824
/* 804 */     OP_vphaddsw,4784,197914
/* 805 */     OP_vpmaddubsw,4785,198005
/* 806 */     OP_vphsubw,4786,198098
/* 807 */     OP_vphsubd,4787,198188
/* 808 */     OP_vphsubsw,4788,198278
/* 809 */     OP_vpsignb,4789,198369
/* 810 */     OP_vpsignw,4790,198459
/* 811 */     OP_vpsignd,4791,198549
/* 812 */     OP_vpmulhrsw,4792,198639
/* 813 */     OP_vpabsb,4793,198731
/* 814 */     OP_vpabsw,4794,198820
/* 815 */     OP_vpabsd,4795,198909
/* 816 */     OP_vpalignr,4796,198998
/* 817 */     OP_vpblendvb,4797,199089
/* 818 */     OP_vblendvps,4798,199177
/* 819 */     OP_vblendvpd,4799,199265
/* 820 */     OP_vptest,4800,199353
/* 821 */     OP_vpmovsxbw,4801,199438
/* 822 */     OP_vpmovsxbd,4802,199526
/* 823 */     OP_vpmovsxbq,4803,199614
/* 824 */     OP_vpmovsxdw,4804,199702
/* 825 */     OP_vpmovsxwq,4805,199790
/* 826 */     OP_vpmovsxdq,4806,199878
/* 827 */     OP_vpmuldq,4807,199966
/* 828 */     OP_vpcmpeqq,4808,200052
/* 829 */     OP_vmovntdqa,4809,200139
/* 830 */     OP_vpackusdw,4810,200227
/* 831 */     OP_vpmovzxbw,4811,200315
/* 832 */     OP_vpmovzxbd,4812,200403
/* 833 */     OP_vpmovzxbq,4813,200491
/* 834 */     OP_vpmovzxdw,4814,200579
/* 835 */     OP_vpmovzxwq,4815,200667
/* 836 */     OP_vpmovzxdq,4816,200755
/* 837 */     OP_vpcmpgtq,4817,200843
/* 838 */     OP_vpminsb,4818,200930
/* 839 */     OP_vpminsd,4819,201016
/* 840 */     OP_vpminuw,4820,201102
/* 841 */     OP_vpminud,4821,201188
/* 842 */     OP_vpmaxsb,4822,201274
/* 843 */     OP_vpmaxsd,4823,201360
/* 844 */     OP_vpmaxuw,4824,201446
/* 845 */     OP_vpmaxud,4825,201532
/* 846 */     OP_vpmulld,4826,201618
/* 847 */     OP_vphminposuw,4827,201704
/* 848 */     OP_vaesimc,4828,201794
/* 849 */     OP_vaesenc,4829,201880
/* 850 */     OP_vaesenclast,4830,201966
/* 851 */     OP_vaesdec,4831,202056
/* 852 */     OP_vaesdeclast,4832,202142
/* 853 */     OP_vpextrb,4833,202232
/* 854 */     OP_vpextrd,4834,202318
/* 855 */     OP_vextractps,4835,202404
/* 856 */     OP_vroundps,4836,202493
/* 857 */     OP_vroundpd,4837,202580
/* 858 */     OP_vroundss,4838,202667
/* 859 */     OP_vroundsd,4839,202754
/* 860 */     OP_vblendps,4840,202841
/* 861 */     OP_vblendpd,4841,202928
/* 862 */     OP_vpblendw,4842,203015
/* 863 */     OP_vpinsrb,4843,203102
/* 864 */     OP_vinsertps,4844,203188
/* 865 */     OP_vpinsrd,4845,203276
/* 866 */     OP_vdpps,4846,203362
/* 867 */     OP_vdppd,4847,203446
/* 868 */     OP_vmpsadbw,4848,203530
/* 869 */     OP_vpcmpestrm,4849,203617
/* 870 */     OP_vpcmpestri,4850,203706
/* 871 */     OP_vpcmpistrm,4851,203795
/* 872 */     OP_vpcmpistri,4852,203884
/* 873 */     OP_vpclmulqdq,4853,203973
/* 874 */     OP_vaeskeygenassist,4854,204062
/* 875 */     OP_vtestps,4855,204159
/* 876 */     OP_vtestpd,4856,204245
/* 877 */     OP_vzeroupper,4857,204331
/* 878 */     OP_vzeroall,4858,204421
/* 879 */     OP_vldmxcsr,4859,204509
/* 880 */     OP_vstmxcsr,4860,204596
/* 881 */     OP_vbroadcastss,4861,204683
/* 882 */     OP_vbroadcastsd,4862,204774
/* 883 */     OP_vbroadcastf128,4863,204866
/* 884 */     OP_vmaskmovps,4864,204960
/* 885 */     OP_vmaskmovpd,4865,205049
/* 886 */     OP_vpermilps,4866,205138
/* 887 */     OP_vpermilpd,4867,205226
/* 888 */     OP_vperm2f128,4868,205314
/* 889 */     OP_vinsertf128,4869,205403
/* 890 */     OP_vextractf128,4870,205493
/* 891 */     OP_vcvtph2ps,4871,205585
/* 892 */     OP_vcvtps2ph,4872,205673
/* 893 */     OP_vfmadd132ps,4875,205776
/* 894 */     OP_vfmadd132pd,4876,205868
/* 895 */     OP_vfmadd213ps,4877,205960
/* 896 */     OP_vfmadd213pd,4878,206052
/* 897 */     OP_vfmadd231ps,4879,206144
/* 898 */     OP_vfmadd231pd,4880,206236
/* 899 */     OP_vfmadd132ss,4881,206328
/* 900 */     OP_vfmadd132sd,4882,206420
/* 901 */     OP_vfmadd213ss,4883,206512
/* 902 */     OP_vfmadd213sd,4884,206604
/* 903 */     OP_vfmadd231ss,4885,206696
/* 904 */     OP_vfmadd231sd,4886,206788
/* 905 */     OP_vfmaddsub132ps,4887,206880
/* 906 */     OP_vfmaddsub132pd,4888,206975
/* 907 */     OP_vfmaddsub213ps,4889,207070
/* 908 */     OP_vfmaddsub213pd,4890,207165
/* 909 */     OP_vfmaddsub231ps,4891,207260
/* 910 */     OP_vfmaddsub231pd,4892,207355
/* 911 */     OP_vfmsubadd132ps,4893,207450
/* 912 */     OP_vfmsubadd132pd,4894,207545
/* 913 */     OP_vfmsubadd213ps,4895,207640
/* 914 */     OP_vfmsubadd213pd,4896,207735
/* 915 */     OP_vfmsubadd231ps,4897,207830
/* 916 */     OP_vfmsubadd231pd,4898,207925
/* 917 */     OP_vfmsub132ps,4899,208020
/* 918 */     OP_vfmsub132pd,4900,208112
/* 919 */     OP_vfmsub213ps,4901,208204
/* 920 */     OP_vfmsub213pd,4902,208296
/* 921 */     OP_vfmsub231ps,4903,208388
/* 922 */     OP_vfmsub231pd,4904,208480
/* 923 */     OP_vfmsub132ss,4905,208572
/* 924 */     OP_vfmsub132sd,4906,208664
/* 925 */     OP_vfmsub213ss,4907,208756
/* 926 */     OP_vfmsub213sd,4908,208848
/* 927 */     OP_vfmsub231ss,4909,208940
/* 928 */     OP_vfmsub231sd,4910,209032
/* 929 */     OP_vfnmadd132ps,4911,209124
/* 930 */     OP_vfnmadd132pd,4912,209217
/* 931 */     OP_vfnmadd213ps,4913,209310
/* 932 */     OP_vfnmadd213pd,4914,209403
/* 933 */     OP_vfnmadd231ps,4915,209496
/* 934 */     OP_vfnmadd231pd,4916,209589
/* 935 */     OP_vfnmadd132ss,4917,209682
/* 936 */     OP_vfnmadd132sd,4918,209775
/* 937 */     OP_vfnmadd213ss,4919,209868
/* 938 */     OP_vfnmadd213sd,4920,209961
/* 939 */     OP_vfnmadd231ss,4921,210054
/* 940 */     OP_vfnmadd231sd,4922,210147
/* 941 */     OP_vfnmsub132ps,4923,210240
/* 942 */     OP_vfnmsub132pd,4924,210333
/* 943 */     OP_vfnmsub213ps,4925,210426
/* 944 */     OP_vfnmsub213pd,4926,210519
/* 945 */     OP_vfnmsub231ps,4927,210612
/* 946 */     OP_vfnmsub231pd,4928,210705
/* 947 */     OP_vfnmsub132ss,4929,210798
/* 948 */     OP_vfnmsub132sd,4930,210891
/* 949 */     OP_vfnmsub213ss,4931,210984
/* 950 */     OP_vfnmsub213sd,4932,211077
/* 951 */     OP_vfnmsub231ss,4933,211170
/* 952 */     OP_vfnmsub231sd,4934,211263
/* 953 */     OP_movq2dq,4936,211357
/* 954 */     OP_movdq2q,4937,211446
/* 955 */     OP_fxsave64,4939,211536
/* 956 */     OP_fxrstor64,4940,211624
/* 957 */     OP_xsave64,4941,211713
/* 958 */     OP_xrstor64,4942,211800
/* 959 */     OP_xsaveopt64,4943,211888
/* 960 */     OP_jmpe,4947,212080
/* 961 */     OP_jmpe_abs,4948,212155
    OP_AFTER_LAST,4951,212242
    OP_FIRST 4952,212261
    OP_FIRST = OP_add,4952,212261
    OP_LAST 4953,212322
    OP_LAST  = OP_AFTER_LAST 4953,212322
#define OP_LAST 4958,212471
#define OP_cbw 4967,212734
#define OP_cwd 4968,212816
#define OP_jcxz 4969,212897
#define OP_jrcxz 4971,213028
#define OP_cmpxchg16b 4972,213115
#define OP_pextrq 4973,213202
#define OP_pinsrq 4974,213289
#define OP_movhlps 4976,213417
#define OP_movlhps 4977,213502
#define OP_jae_short 4979,213609
#define OP_jnae_short 4980,213678
#define OP_ja_short 4981,213747
#define OP_jna_short 4982,213816
#define OP_je_short 4983,213885
#define OP_jne_short 4984,213954
#define OP_jge_short 4985,214023
#define OP_jg_short 4986,214092
#define OP_jae 4987,214161
#define OP_jnae 4988,214224
#define OP_ja 4989,214287
#define OP_jna 4990,214350
#define OP_je 4991,214413
#define OP_jne 4992,214476
#define OP_jge 4993,214539
#define OP_jg 4994,214602
#define OP_setae 4995,214665
#define OP_setnae 4996,214728
#define OP_seta 4997,214791
#define OP_setna 4998,214854
#define OP_sete 4999,214917
#define OP_setne 5000,214980
#define OP_setge 5001,215043
#define OP_setg 5002,215106
#define OP_cmovae 5003,215169
#define OP_cmovnae 5004,215232
#define OP_cmova 5005,215295
#define OP_cmovna 5006,215358
#define OP_cmove 5007,215421
#define OP_cmovne 5008,215484
#define OP_cmovge 5009,215547
#define OP_cmovg 5010,215610
# define OP_fxsave 5012,215685
# define OP_fxrstor 5013,215753
# define OP_xsave 5014,215821
# define OP_xrstor 5015,215889
# define OP_xsaveopt 5016,215957
#define OP_icebp 5019,216059
#define OP_setalc 5020,216084

x86/instr_create.h,40259
#define _INSTR_CREATE_H_ 38,1892
#define LOCK(71,2995
#define INSTR_XL8(76,3211
#define OPND_CREATE_MEM64(80,3392
#define OPND_CREATE_MEM32(83,3542
#define OPND_CREATE_MEM16(86,3692
#define OPND_CREATE_MEM8(89,3842
# define OPND_CREATE_MEMPTR 93,4009
# define OPND_CREATE_ABSMEM(98,4199
# define OPND_CREATE_MEMPTR 102,4331
# define OPND_CREATE_ABSMEM(104,4420
#define OPND_CREATE_INT64(110,4568
# define OPND_CREATE_INTPTR 112,4704
# define OPND_CREATE_INTPTR 115,4813
#define OPND_CREATE_INT32(118,4916
#define OPND_CREATE_INT16(120,5045
#define OPND_CREATE_INT8(122,5174
#define OPND_CREATE_INT_32OR8(127,5374
#define OPND_CREATE_INT_16OR8(133,5638
#define OPND_CREATE_MEM_lea(139,5926
#define OPND_CREATE_MEM_invlpg(142,6120
#define OPND_CREATE_MEM_clflush(145,6321
#define OPND_CREATE_MEM_prefetch(148,6526
#define OPND_CREATE_MEM_lgdt(151,6728
#define OPND_CREATE_MEM_sgdt(154,6922
#define OPND_CREATE_MEM_lidt(157,7116
#define OPND_CREATE_MEM_sidt(160,7310
#define OPND_CREATE_MEM_bound(163,7505
#define OPND_CREATE_MEM_fldenv(166,7703
#define OPND_CREATE_MEM_fnstenv(169,7904
#define OPND_CREATE_MEM_fnsave(172,8106
#define OPND_CREATE_MEM_frstor(175,8306
#define OPND_CREATE_MEM_fxsave(178,8520
#define OPND_CREATE_MEM_fxrstor(181,8735
#define OPND_CREATE_MEM_xsave(187,9016
#define INSTR_CREATE_fwait(213,10181
#define INSTR_CREATE_hlt(214,10254
#define INSTR_CREATE_cmc(215,10325
#define INSTR_CREATE_clc(216,10396
#define INSTR_CREATE_stc(217,10467
#define INSTR_CREATE_cli(218,10538
#define INSTR_CREATE_sti(219,10609
#define INSTR_CREATE_cld(220,10680
#define INSTR_CREATE_std(221,10751
#define INSTR_CREATE_clts(222,10822
#define INSTR_CREATE_invd(223,10894
#define INSTR_CREATE_wbinvd(224,10966
#define INSTR_CREATE_ud2a(225,11040
#define INSTR_CREATE_emms(226,11112
#define INSTR_CREATE_rsm(227,11184
#define INSTR_CREATE_ud2b(228,11255
#define INSTR_CREATE_lfence(229,11327
#define INSTR_CREATE_mfence(230,11401
#define INSTR_CREATE_sfence(231,11475
#define INSTR_CREATE_nop(232,11549
#define INSTR_CREATE_pause(233,11620
#define INSTR_CREATE_fnop(234,11693
#define INSTR_CREATE_fdecstp(235,11765
#define INSTR_CREATE_fincstp(236,11840
#define INSTR_CREATE_fnclex(237,11915
#define INSTR_CREATE_fninit(238,11989
#define INSTR_CREATE_sysret(239,12063
#define INSTR_CREATE_femms(240,12137
#define INSTR_CREATE_swapgs(241,12210
#define INSTR_CREATE_vmcall(242,12284
#define INSTR_CREATE_vmlaunch(243,12358
#define INSTR_CREATE_vmresume(244,12434
#define INSTR_CREATE_vmxoff(245,12510
#define INSTR_CREATE_vmmcall(246,12584
#define INSTR_CREATE_stgi(247,12659
#define INSTR_CREATE_clgi(248,12731
#define INSTR_CREATE_int3(249,12803
#define INSTR_CREATE_into(250,12871
#define INSTR_CREATE_int1(251,12939
#define INSTR_CREATE_vzeroupper(252,13007
#define INSTR_CREATE_vzeroall(253,13087
#define INSTR_CREATE_label(261,13469
#define INSTR_CREATE_jcc_short(276,14235
#define INSTR_CREATE_jcc(287,14759
#define INSTR_CREATE_jmp(298,15342
#define INSTR_CREATE_jmp_short(300,15420
#define INSTR_CREATE_jmp_ind(310,15912
#define INSTR_CREATE_jmp_far(319,16362
#define INSTR_CREATE_jmp_far_ind(328,16825
#define INSTR_CREATE_lldt(338,17341
#define INSTR_CREATE_ltr(340,17421
#define INSTR_CREATE_verr(342,17499
#define INSTR_CREATE_verw(344,17579
#define INSTR_CREATE_vmptrld(346,17659
#define INSTR_CREATE_vmxon(348,17745
#define INSTR_CREATE_lgdt(357,18218
#define INSTR_CREATE_lidt(366,18689
#define INSTR_CREATE_lmsw(368,18769
#define INSTR_CREATE_invlpg(377,19242
#define INSTR_CREATE_fxrstor32(386,19720
#define INSTR_CREATE_fxrstor64(395,20204
#define INSTR_CREATE_ldmxcsr(397,20294
#define INSTR_CREATE_vldmxcsr(399,20380
#define INSTR_CREATE_nop_modrm(401,20468
#define INSTR_CREATE_prefetchnta(413,21095
#define INSTR_CREATE_prefetcht0(415,21189
#define INSTR_CREATE_prefetcht1(417,21281
#define INSTR_CREATE_prefetcht2(419,21373
#define INSTR_CREATE_prefetch(421,21465
#define INSTR_CREATE_prefetchw(423,21553
#define INSTR_CREATE_clflush(433,22070
#define INSTR_CREATE_int(442,22530
#define INSTR_CREATE_jmpe(448,22656
#define INSTR_CREATE_jmpe_abs(450,22736
#define INSTR_CREATE_fldenv(462,23251
#define INSTR_CREATE_fldcw(471,23736
#define INSTR_CREATE_frstor(480,24216
#define INSTR_CREATE_fxam(491,24663
#define INSTR_CREATE_sahf(493,24764
#define INSTR_CREATE_vmrun(495,24864
#define INSTR_CREATE_vmload(497,24967
#define INSTR_CREATE_vmsave(499,25072
#define INSTR_CREATE_skinit(501,25177
#define INSTR_CREATE_cmp(515,25859
#define INSTR_CREATE_test(517,25949
#define INSTR_CREATE_ptest(519,26041
#define INSTR_CREATE_vucomiss(522,26145
#define INSTR_CREATE_vucomisd(524,26245
#define INSTR_CREATE_vcomiss(526,26345
#define INSTR_CREATE_vcomisd(528,26443
#define INSTR_CREATE_vptest(530,26541
#define INSTR_CREATE_vtestps(532,26637
#define INSTR_CREATE_vtestpd(534,26735
#define INSTR_CREATE_bound(544,27290
#define INSTR_CREATE_bt(554,27809
#define INSTR_CREATE_ucomiss(556,27895
#define INSTR_CREATE_ucomisd(558,27993
#define INSTR_CREATE_comiss(560,28091
#define INSTR_CREATE_comisd(562,28187
#define INSTR_CREATE_invept(564,28283
#define INSTR_CREATE_invvpid(566,28379
#define INSTR_CREATE_jecxz(578,28932
#define INSTR_CREATE_jcxz(587,29381
#define INSTR_CREATE_out_1(598,29863
#define INSTR_CREATE_out_4(601,29997
#define INSTR_CREATE_out_1_imm(614,30668
#define INSTR_CREATE_out_4_imm(616,30780
#define INSTR_CREATE_mwait(628,31305
#define INSTR_CREATE_invlpga(631,31445
#define INSTR_CREATE_wrmsr(635,31630
#define INSTR_CREATE_monitor(638,31797
#define INSTR_CREATE_xsetbv(641,31970
#define INSTR_CREATE_xrstor32(655,32671
#define INSTR_CREATE_xrstor64(665,33183
#define INSTR_CREATE_fcom(683,34074
#define INSTR_CREATE_fcomp(685,34183
#define INSTR_CREATE_fcomi(698,34887
#define INSTR_CREATE_fcomip(700,34998
#define INSTR_CREATE_fucomi(702,35111
#define INSTR_CREATE_fucomip(704,35224
#define INSTR_CREATE_fucom(706,35339
#define INSTR_CREATE_fucomp(708,35450
#define INSTR_CREATE_fucompp(718,35938
#define INSTR_CREATE_fcompp(721,36080
#define INSTR_CREATE_setcc(735,36643
#define INSTR_CREATE_sldt(745,37167
#define INSTR_CREATE_str(747,37247
#define INSTR_CREATE_vmptrst(749,37325
#define INSTR_CREATE_vmclear(751,37411
#define INSTR_CREATE_sgdt(760,37893
#define INSTR_CREATE_sidt(769,38369
#define INSTR_CREATE_smsw(771,38449
#define INSTR_CREATE_fxsave32(780,38927
#define INSTR_CREATE_fxsave64(789,39413
#define INSTR_CREATE_stmxcsr(791,39501
#define INSTR_CREATE_vstmxcsr(793,39587
#define INSTR_CREATE_fnstenv(814,40669
#define INSTR_CREATE_fnstcw(816,40755
#define INSTR_CREATE_fnsave(825,41237
#define INSTR_CREATE_fnstsw(827,41321
#define INSTR_CREATE_ffree(838,41810
#define INSTR_CREATE_ffreep(840,41892
#define INSTR_CREATE_lahf(851,42355
#define INSTR_CREATE_sysenter(853,42455
#define INSTR_CREATE_sysexit(855,42564
#define INSTR_CREATE_syscall(857,42671
#define INSTR_CREATE_salc(859,42778
#define INSTR_CREATE_arpl(873,43441
#define INSTR_CREATE_lea(883,43992
#define INSTR_CREATE_mov_ld(885,44078
#define INSTR_CREATE_mov_st(887,44170
#define INSTR_CREATE_mov_imm(889,44262
#define INSTR_CREATE_mov_seg(891,44356
#define INSTR_CREATE_mov_priv(893,44450
#define INSTR_CREATE_lar(895,44546
#define INSTR_CREATE_lsl(897,44632
#define INSTR_CREATE_movntps(899,44718
#define INSTR_CREATE_movntpd(901,44812
#define INSTR_CREATE_movd(903,44906
#define INSTR_CREATE_movq(905,44994
#define INSTR_CREATE_movdqu(907,45082
#define INSTR_CREATE_movdqa(909,45174
#define INSTR_CREATE_movzx(911,45266
#define INSTR_CREATE_movsx(913,45356
#define INSTR_CREATE_bsf(915,45446
#define INSTR_CREATE_bsr(917,45532
#define INSTR_CREATE_pmovmskb(919,45618
#define INSTR_CREATE_movups(921,45714
#define INSTR_CREATE_movss(923,45806
#define INSTR_CREATE_movupd(925,45896
#define INSTR_CREATE_movsd(927,45988
#define INSTR_CREATE_movlps(929,46078
#define INSTR_CREATE_movlpd(931,46170
#define INSTR_CREATE_movhps(933,46262
#define INSTR_CREATE_movhpd(935,46354
#define INSTR_CREATE_movaps(937,46446
#define INSTR_CREATE_movapd(939,46538
#define INSTR_CREATE_cvtpi2ps(941,46630
#define INSTR_CREATE_cvtsi2ss(943,46726
#define INSTR_CREATE_cvtpi2pd(945,46822
#define INSTR_CREATE_cvtsi2sd(947,46918
#define INSTR_CREATE_cvttps2pi(949,47014
#define INSTR_CREATE_cvttss2si(951,47112
#define INSTR_CREATE_cvttpd2pi(953,47210
#define INSTR_CREATE_cvttsd2si(955,47308
#define INSTR_CREATE_cvtps2pi(957,47406
#define INSTR_CREATE_cvtss2si(959,47502
#define INSTR_CREATE_cvtpd2pi(961,47598
#define INSTR_CREATE_cvtsd2si(963,47694
#define INSTR_CREATE_cvtps2pd(965,47790
#define INSTR_CREATE_cvtss2sd(967,47886
#define INSTR_CREATE_cvtpd2ps(969,47982
#define INSTR_CREATE_cvtsd2ss(971,48078
#define INSTR_CREATE_cvtdq2ps(973,48174
#define INSTR_CREATE_cvttps2dq(975,48270
#define INSTR_CREATE_cvtps2dq(977,48368
#define INSTR_CREATE_cvtdq2pd(979,48464
#define INSTR_CREATE_cvttpd2dq(981,48560
#define INSTR_CREATE_cvtpd2dq(983,48658
#define INSTR_CREATE_movmskps(985,48754
#define INSTR_CREATE_movmskpd(987,48850
#define INSTR_CREATE_sqrtps(989,48946
#define INSTR_CREATE_sqrtss(991,49038
#define INSTR_CREATE_sqrtpd(993,49130
#define INSTR_CREATE_sqrtsd(995,49222
#define INSTR_CREATE_rsqrtps(997,49314
#define INSTR_CREATE_rsqrtss(999,49408
#define INSTR_CREATE_rcpps(1001,49502
#define INSTR_CREATE_rcpss(1003,49592
#define INSTR_CREATE_lddqu(1005,49682
#define INSTR_CREATE_movsldup(1007,49772
#define INSTR_CREATE_movshdup(1009,49868
#define INSTR_CREATE_movddup(1011,49964
#define INSTR_CREATE_pshufb(1013,50058
#define INSTR_CREATE_popcnt(1015,50150
#define INSTR_CREATE_movntss(1017,50242
#define INSTR_CREATE_movntsd(1019,50336
#define INSTR_CREATE_movntq(1021,50430
#define INSTR_CREATE_movntdq(1023,50522
#define INSTR_CREATE_movnti(1025,50616
#define INSTR_CREATE_lzcnt(1027,50708
#define INSTR_CREATE_pmovsxbw(1029,50798
#define INSTR_CREATE_pmovsxbd(1031,50894
#define INSTR_CREATE_pmovsxbq(1033,50990
#define INSTR_CREATE_pmovsxdw(1035,51086
#define INSTR_CREATE_pmovsxwq(1037,51182
#define INSTR_CREATE_pmovsxdq(1039,51278
#define INSTR_CREATE_movntdqa(1041,51374
#define INSTR_CREATE_pmovzxbw(1043,51470
#define INSTR_CREATE_pmovzxbd(1045,51566
#define INSTR_CREATE_pmovzxbq(1047,51662
#define INSTR_CREATE_pmovzxdw(1049,51758
#define INSTR_CREATE_pmovzxwq(1051,51854
#define INSTR_CREATE_pmovzxdq(1053,51950
#define INSTR_CREATE_phminposuw(1055,52046
#define INSTR_CREATE_vmread(1057,52146
#define INSTR_CREATE_vmwrite(1059,52238
#define INSTR_CREATE_movsxd(1061,52332
#define INSTR_CREATE_movbe(1063,52424
#define INSTR_CREATE_aesimc(1065,52514
#define INSTR_CREATE_vmovups(1068,52616
#define INSTR_CREATE_vmovupd(1070,52710
#define INSTR_CREATE_vmovsldup(1072,52804
#define INSTR_CREATE_vmovddup(1074,52902
#define INSTR_CREATE_vmovlps(1076,52998
#define INSTR_CREATE_vmovlpd(1078,53092
#define INSTR_CREATE_vmovshdup(1080,53186
#define INSTR_CREATE_vmovhps(1082,53284
#define INSTR_CREATE_vmovhpd(1084,53378
#define INSTR_CREATE_vmovaps(1086,53472
#define INSTR_CREATE_vmovapd(1088,53566
#define INSTR_CREATE_vmovntps(1090,53660
#define INSTR_CREATE_vmovntpd(1092,53756
#define INSTR_CREATE_vcvttss2si(1094,53852
#define INSTR_CREATE_vcvttsd2si(1096,53952
#define INSTR_CREATE_vcvtss2si(1098,54052
#define INSTR_CREATE_vcvtsd2si(1100,54150
#define INSTR_CREATE_vmovmskps(1102,54248
#define INSTR_CREATE_vmovmskpd(1104,54346
#define INSTR_CREATE_vsqrtps(1106,54444
#define INSTR_CREATE_vsqrtpd(1108,54538
#define INSTR_CREATE_vrsqrtps(1110,54632
#define INSTR_CREATE_vrcpps(1112,54728
#define INSTR_CREATE_vcvtps2pd(1114,54820
#define INSTR_CREATE_vcvtpd2ps(1116,54918
#define INSTR_CREATE_vcvtdq2ps(1118,55016
#define INSTR_CREATE_vcvttps2dq(1120,55114
#define INSTR_CREATE_vcvtps2dq(1122,55214
#define INSTR_CREATE_vmovd(1124,55312
#define INSTR_CREATE_vmovq(1126,55402
#define INSTR_CREATE_vpmovmskb(1128,55492
#define INSTR_CREATE_vcvtdq2pd(1130,55590
#define INSTR_CREATE_vcvttpd2dq(1132,55688
#define INSTR_CREATE_vcvtpd2dq(1134,55788
#define INSTR_CREATE_vmovntdq(1136,55886
#define INSTR_CREATE_vmovdqu(1138,55982
#define INSTR_CREATE_vmovdqa(1140,56076
#define INSTR_CREATE_vlddqu(1142,56170
#define INSTR_CREATE_vpshufb(1144,56262
#define INSTR_CREATE_vpmovsxbw(1146,56356
#define INSTR_CREATE_vpmovsxbd(1148,56454
#define INSTR_CREATE_vpmovsxbq(1150,56552
#define INSTR_CREATE_vpmovsxdw(1152,56650
#define INSTR_CREATE_vpmovsxwq(1154,56748
#define INSTR_CREATE_vpmovsxdq(1156,56846
#define INSTR_CREATE_vmovntdqa(1158,56944
#define INSTR_CREATE_vpmovzxbw(1160,57042
#define INSTR_CREATE_vpmovzxbd(1162,57140
#define INSTR_CREATE_vpmovzxbq(1164,57238
#define INSTR_CREATE_vpmovzxdw(1166,57336
#define INSTR_CREATE_vpmovzxwq(1168,57434
#define INSTR_CREATE_vpmovzxdq(1170,57532
#define INSTR_CREATE_vphminposuw(1172,57630
#define INSTR_CREATE_vaesimc(1174,57732
#define INSTR_CREATE_vmovss(1176,57826
#define INSTR_CREATE_vmovsd(1178,57918
#define INSTR_CREATE_vcvtph2ps(1180,58010
#define INSTR_CREATE_vbroadcastss(1182,58108
#define INSTR_CREATE_vbroadcastsd(1184,58212
#define INSTR_CREATE_vbroadcastf128(1186,58316
#define INSTR_CREATE_movq2dq(1188,58424
#define INSTR_CREATE_movdq2q(1190,58518
#define INSTR_CREATE_inc(1203,59125
#define INSTR_CREATE_dec(1205,59208
#define INSTR_CREATE_bswap(1208,59334
#define INSTR_CREATE_not(1210,59421
#define INSTR_CREATE_neg(1212,59504
#define INSTR_CREATE_cdq(1224,60013
#define INSTR_CREATE_daa(1227,60147
#define INSTR_CREATE_das(1230,60279
#define INSTR_CREATE_aaa(1233,60411
#define INSTR_CREATE_aas(1236,60543
#define INSTR_CREATE_cwde(1239,60675
#define INSTR_CREATE_xlat(1242,60810
#define INSTR_CREATE_in_1(1254,61367
#define INSTR_CREATE_in_4(1257,61499
#define INSTR_CREATE_in_1_imm(1270,62151
#define INSTR_CREATE_in_4_imm(1272,62261
#define INSTR_CREATE_fcmovcc(1286,62878
#define INSTR_CREATE_fst(1299,63635
#define INSTR_CREATE_fstp(1301,63742
#define INSTR_CREATE_fld(1313,64361
#define INSTR_CREATE_fist(1324,65038
#define INSTR_CREATE_fistp(1326,65147
#define INSTR_CREATE_fisttp(1328,65258
#define INSTR_CREATE_fbstp(1330,65371
#define INSTR_CREATE_fild(1342,66055
#define INSTR_CREATE_fbld(1344,66164
#define INSTR_CREATE_fchs(1354,66664
#define INSTR_CREATE_fabs(1357,66800
#define INSTR_CREATE_ftst(1360,66936
#define INSTR_CREATE_fld1(1363,67074
#define INSTR_CREATE_fldl2t(1367,67299
#define INSTR_CREATE_fldl2e(1370,67461
#define INSTR_CREATE_fldpi(1373,67614
#define INSTR_CREATE_fldlg2(1376,67759
#define INSTR_CREATE_fldln2(1379,67921
#define INSTR_CREATE_fldz(1382,68069
#define INSTR_CREATE_f2xm1(1385,68207
#define INSTR_CREATE_fptan(1388,68345
#define INSTR_CREATE_fxtract(1391,68483
#define INSTR_CREATE_fsqrt(1394,68625
#define INSTR_CREATE_fsincos(1397,68763
#define INSTR_CREATE_frndint(1400,68905
#define INSTR_CREATE_fsin(1403,69047
#define INSTR_CREATE_fcos(1406,69183
#define INSTR_CREATE_fscale(1410,69320
#define INSTR_CREATE_fyl2x(1414,69495
#define INSTR_CREATE_fyl2xp1(1418,69697
#define INSTR_CREATE_fpatan(1422,69903
#define INSTR_CREATE_fprem(1426,70107
#define INSTR_CREATE_fprem1(1430,70309
#define INSTR_CREATE_pshufw(1448,71218
#define INSTR_CREATE_pshufd(1450,71318
#define INSTR_CREATE_pshufhw(1452,71418
#define INSTR_CREATE_pshuflw(1454,71520
#define INSTR_CREATE_pinsrw(1456,71622
#define INSTR_CREATE_pextrw(1458,71722
#define INSTR_CREATE_pextrb(1461,71833
#define INSTR_CREATE_pextrd(1463,71933
#define INSTR_CREATE_extractps(1465,72033
#define INSTR_CREATE_roundps(1467,72139
#define INSTR_CREATE_roundpd(1469,72241
#define INSTR_CREATE_roundss(1471,72343
#define INSTR_CREATE_roundsd(1473,72445
#define INSTR_CREATE_pinsrb(1475,72547
#define INSTR_CREATE_insertps(1477,72647
#define INSTR_CREATE_pinsrd(1479,72751
#define INSTR_CREATE_aeskeygenassist(1481,72851
#define INSTR_CREATE_vmovlps_NDS(1497,73709
#define INSTR_CREATE_vmovlpd_NDS(1499,73819
#define INSTR_CREATE_vunpcklps(1501,73929
#define INSTR_CREATE_vunpcklpd(1503,74039
#define INSTR_CREATE_vunpckhps(1505,74149
#define INSTR_CREATE_vunpckhpd(1507,74259
#define INSTR_CREATE_vmovhps_NDS(1509,74369
#define INSTR_CREATE_vmovhpd_NDS(1511,74479
#define INSTR_CREATE_vcvtsi2ss(1513,74589
#define INSTR_CREATE_vcvtsi2sd(1515,74699
#define INSTR_CREATE_vsqrtss(1517,74809
#define INSTR_CREATE_vsqrtsd(1519,74915
#define INSTR_CREATE_vrsqrtss(1521,75021
#define INSTR_CREATE_vrcpss(1523,75129
#define INSTR_CREATE_vandps(1525,75233
#define INSTR_CREATE_vandpd(1527,75337
#define INSTR_CREATE_vandnps(1529,75441
#define INSTR_CREATE_vandnpd(1531,75547
#define INSTR_CREATE_vorps(1533,75653
#define INSTR_CREATE_vorpd(1535,75755
#define INSTR_CREATE_vxorps(1537,75857
#define INSTR_CREATE_vxorpd(1539,75961
#define INSTR_CREATE_vaddps(1541,76065
#define INSTR_CREATE_vaddss(1543,76169
#define INSTR_CREATE_vaddpd(1545,76273
#define INSTR_CREATE_vaddsd(1547,76377
#define INSTR_CREATE_vmulps(1549,76481
#define INSTR_CREATE_vmulss(1551,76585
#define INSTR_CREATE_vmulpd(1553,76689
#define INSTR_CREATE_vmulsd(1555,76793
#define INSTR_CREATE_vcvtss2sd(1557,76897
#define INSTR_CREATE_vcvtsd2ss(1559,77007
#define INSTR_CREATE_vsubps(1561,77117
#define INSTR_CREATE_vsubss(1563,77221
#define INSTR_CREATE_vsubpd(1565,77325
#define INSTR_CREATE_vsubsd(1567,77429
#define INSTR_CREATE_vminps(1569,77533
#define INSTR_CREATE_vminss(1571,77637
#define INSTR_CREATE_vminpd(1573,77741
#define INSTR_CREATE_vminsd(1575,77845
#define INSTR_CREATE_vdivps(1577,77949
#define INSTR_CREATE_vdivss(1579,78053
#define INSTR_CREATE_vdivpd(1581,78157
#define INSTR_CREATE_vdivsd(1583,78261
#define INSTR_CREATE_vmaxps(1585,78365
#define INSTR_CREATE_vmaxss(1587,78469
#define INSTR_CREATE_vmaxpd(1589,78573
#define INSTR_CREATE_vmaxsd(1591,78677
#define INSTR_CREATE_vpunpcklbw(1593,78781
#define INSTR_CREATE_vpunpcklwd(1595,78893
#define INSTR_CREATE_vpunpckldq(1597,79005
#define INSTR_CREATE_vpacksswb(1599,79117
#define INSTR_CREATE_vpcmpgtb(1601,79227
#define INSTR_CREATE_vpcmpgtw(1603,79335
#define INSTR_CREATE_vpcmpgtd(1605,79443
#define INSTR_CREATE_vpackuswb(1607,79551
#define INSTR_CREATE_vpunpckhbw(1609,79661
#define INSTR_CREATE_vpunpckhwd(1611,79773
#define INSTR_CREATE_vpunpckhdq(1613,79885
#define INSTR_CREATE_vpackssdw(1615,79997
#define INSTR_CREATE_vpunpcklqdq(1617,80107
#define INSTR_CREATE_vpunpckhqdq(1619,80221
#define INSTR_CREATE_vpshufhw(1621,80335
#define INSTR_CREATE_vpshufd(1623,80443
#define INSTR_CREATE_vpshuflw(1625,80549
#define INSTR_CREATE_vpcmpeqb(1627,80657
#define INSTR_CREATE_vpcmpeqw(1629,80765
#define INSTR_CREATE_vpcmpeqd(1631,80873
#define INSTR_CREATE_vpextrw(1633,80981
#define INSTR_CREATE_vpsrlw(1635,81087
#define INSTR_CREATE_vpsrld(1637,81191
#define INSTR_CREATE_vpsrlq(1639,81295
#define INSTR_CREATE_vpaddq(1641,81399
#define INSTR_CREATE_vpmullw(1643,81503
#define INSTR_CREATE_vpsubusb(1645,81609
#define INSTR_CREATE_vpsubusw(1647,81717
#define INSTR_CREATE_vpminub(1649,81825
#define INSTR_CREATE_vpand(1651,81931
#define INSTR_CREATE_vpaddusb(1653,82033
#define INSTR_CREATE_vpaddusw(1655,82141
#define INSTR_CREATE_vpmaxub(1657,82249
#define INSTR_CREATE_vpandn(1659,82355
#define INSTR_CREATE_vpavgb(1661,82459
#define INSTR_CREATE_vpsraw(1663,82563
#define INSTR_CREATE_vpsrad(1665,82667
#define INSTR_CREATE_vpavgw(1667,82771
#define INSTR_CREATE_vpmulhuw(1669,82875
#define INSTR_CREATE_vpmulhw(1671,82983
#define INSTR_CREATE_vpsubsb(1673,83089
#define INSTR_CREATE_vpsubsw(1675,83195
#define INSTR_CREATE_vpminsw(1677,83301
#define INSTR_CREATE_vpor(1679,83407
#define INSTR_CREATE_vpaddsb(1681,83507
#define INSTR_CREATE_vpaddsw(1683,83613
#define INSTR_CREATE_vpmaxsw(1685,83719
#define INSTR_CREATE_vpxor(1687,83825
#define INSTR_CREATE_vpsllw(1689,83927
#define INSTR_CREATE_vpslld(1691,84031
#define INSTR_CREATE_vpsllq(1693,84135
#define INSTR_CREATE_vpmuludq(1695,84239
#define INSTR_CREATE_vpmaddwd(1697,84347
#define INSTR_CREATE_vpsadbw(1699,84455
#define INSTR_CREATE_vpsubb(1701,84561
#define INSTR_CREATE_vpsubw(1703,84665
#define INSTR_CREATE_vpsubd(1705,84769
#define INSTR_CREATE_vpsubq(1707,84873
#define INSTR_CREATE_vpaddb(1709,84977
#define INSTR_CREATE_vpaddw(1711,85081
#define INSTR_CREATE_vpaddd(1713,85185
#define INSTR_CREATE_vpsrldq(1715,85289
#define INSTR_CREATE_vpslldq(1717,85395
#define INSTR_CREATE_vhaddpd(1719,85501
#define INSTR_CREATE_vhaddps(1721,85607
#define INSTR_CREATE_vhsubpd(1723,85713
#define INSTR_CREATE_vhsubps(1725,85819
#define INSTR_CREATE_vaddsubpd(1727,85925
#define INSTR_CREATE_vaddsubps(1729,86035
#define INSTR_CREATE_vphaddw(1731,86145
#define INSTR_CREATE_vphaddd(1733,86251
#define INSTR_CREATE_vphaddsw(1735,86357
#define INSTR_CREATE_vpmaddubsw(1737,86465
#define INSTR_CREATE_vphsubw(1739,86577
#define INSTR_CREATE_vphsubd(1741,86683
#define INSTR_CREATE_vphsubsw(1743,86789
#define INSTR_CREATE_vpsignb(1745,86897
#define INSTR_CREATE_vpsignw(1747,87003
#define INSTR_CREATE_vpsignd(1749,87109
#define INSTR_CREATE_vpmulhrsw(1751,87215
#define INSTR_CREATE_vpabsb(1753,87325
#define INSTR_CREATE_vpabsw(1755,87429
#define INSTR_CREATE_vpabsd(1757,87533
#define INSTR_CREATE_vpmuldq(1759,87637
#define INSTR_CREATE_vpcmpeqq(1761,87743
#define INSTR_CREATE_vpackusdw(1763,87851
#define INSTR_CREATE_vpcmpgtq(1765,87961
#define INSTR_CREATE_vpminsb(1767,88069
#define INSTR_CREATE_vpminsd(1769,88175
#define INSTR_CREATE_vpminuw(1771,88281
#define INSTR_CREATE_vpminud(1773,88387
#define INSTR_CREATE_vpmaxsb(1775,88493
#define INSTR_CREATE_vpmaxsd(1777,88599
#define INSTR_CREATE_vpmaxuw(1779,88705
#define INSTR_CREATE_vpmaxud(1781,88811
#define INSTR_CREATE_vpmulld(1783,88917
#define INSTR_CREATE_vaesenc(1785,89023
#define INSTR_CREATE_vaesenclast(1787,89129
#define INSTR_CREATE_vaesdec(1789,89243
#define INSTR_CREATE_vaesdeclast(1791,89349
#define INSTR_CREATE_vpextrb(1793,89463
#define INSTR_CREATE_vpextrd(1795,89569
#define INSTR_CREATE_vextractps(1797,89675
#define INSTR_CREATE_vroundps(1799,89787
#define INSTR_CREATE_vroundpd(1801,89895
#define INSTR_CREATE_vaeskeygenassist(1803,90003
#define INSTR_CREATE_vmovss_NDS(1805,90127
#define INSTR_CREATE_vmovsd_NDS(1807,90235
#define INSTR_CREATE_vcvtps2ph(1809,90343
#define INSTR_CREATE_vmaskmovps(1811,90453
#define INSTR_CREATE_vmaskmovpd(1813,90565
#define INSTR_CREATE_vpermilps(1815,90677
#define INSTR_CREATE_vpermilpd(1817,90787
#define INSTR_CREATE_vextractf128(1819,90897
#define INSTR_CREATE_add(1833,91626
#define INSTR_CREATE_or(1835,91717
#define INSTR_CREATE_adc(1837,91807
#define INSTR_CREATE_sbb(1839,91898
#define INSTR_CREATE_and(1841,91989
#define INSTR_CREATE_sub(1843,92080
#define INSTR_CREATE_xor(1845,92171
#define INSTR_CREATE_punpcklbw(1847,92262
#define INSTR_CREATE_punpcklwd(1849,92365
#define INSTR_CREATE_punpckldq(1851,92468
#define INSTR_CREATE_packsswb(1853,92571
#define INSTR_CREATE_pcmpgtb(1855,92672
#define INSTR_CREATE_pcmpgtw(1857,92771
#define INSTR_CREATE_pcmpgtd(1859,92870
#define INSTR_CREATE_packuswb(1861,92969
#define INSTR_CREATE_punpckhbw(1863,93070
#define INSTR_CREATE_punpckhwd(1865,93173
#define INSTR_CREATE_punpckhdq(1867,93276
#define INSTR_CREATE_packssdw(1869,93379
#define INSTR_CREATE_punpcklqdq(1871,93480
#define INSTR_CREATE_punpckhqdq(1873,93585
#define INSTR_CREATE_pcmpeqb(1875,93690
#define INSTR_CREATE_pcmpeqw(1877,93789
#define INSTR_CREATE_pcmpeqd(1879,93888
#define INSTR_CREATE_psrlw(1881,93987
#define INSTR_CREATE_psrld(1883,94082
#define INSTR_CREATE_psrlq(1885,94177
#define INSTR_CREATE_paddq(1887,94272
#define INSTR_CREATE_pmullw(1889,94367
#define INSTR_CREATE_psubusb(1891,94464
#define INSTR_CREATE_psubusw(1893,94563
#define INSTR_CREATE_pminub(1895,94662
#define INSTR_CREATE_pand(1897,94759
#define INSTR_CREATE_paddusb(1899,94852
#define INSTR_CREATE_paddusw(1901,94951
#define INSTR_CREATE_pmaxub(1903,95050
#define INSTR_CREATE_pandn(1905,95147
#define INSTR_CREATE_pavgb(1907,95242
#define INSTR_CREATE_psraw(1909,95337
#define INSTR_CREATE_psrad(1911,95432
#define INSTR_CREATE_pavgw(1913,95527
#define INSTR_CREATE_pmulhuw(1915,95622
#define INSTR_CREATE_pmulhw(1917,95721
#define INSTR_CREATE_psubsb(1919,95818
#define INSTR_CREATE_psubsw(1921,95915
#define INSTR_CREATE_pminsw(1923,96012
#define INSTR_CREATE_por(1925,96109
#define INSTR_CREATE_paddsb(1927,96200
#define INSTR_CREATE_paddsw(1929,96297
#define INSTR_CREATE_pmaxsw(1931,96394
#define INSTR_CREATE_pxor(1933,96491
#define INSTR_CREATE_psllw(1935,96584
#define INSTR_CREATE_pslld(1937,96679
#define INSTR_CREATE_psllq(1939,96774
#define INSTR_CREATE_pmuludq(1941,96869
#define INSTR_CREATE_pmaddwd(1943,96968
#define INSTR_CREATE_psadbw(1945,97067
#define INSTR_CREATE_psubb(1947,97164
#define INSTR_CREATE_psubw(1949,97259
#define INSTR_CREATE_psubd(1951,97354
#define INSTR_CREATE_psubq(1953,97449
#define INSTR_CREATE_paddb(1955,97544
#define INSTR_CREATE_paddw(1957,97639
#define INSTR_CREATE_paddd(1959,97734
#define INSTR_CREATE_psrldq(1961,97829
#define INSTR_CREATE_pslldq(1963,97926
#define INSTR_CREATE_unpcklps(1965,98023
#define INSTR_CREATE_unpcklpd(1967,98124
#define INSTR_CREATE_unpckhps(1969,98225
#define INSTR_CREATE_unpckhpd(1971,98326
#define INSTR_CREATE_andps(1973,98427
#define INSTR_CREATE_andpd(1975,98522
#define INSTR_CREATE_andnps(1977,98617
#define INSTR_CREATE_andnpd(1979,98714
#define INSTR_CREATE_orps(1981,98811
#define INSTR_CREATE_orpd(1983,98904
#define INSTR_CREATE_xorps(1985,98997
#define INSTR_CREATE_xorpd(1987,99092
#define INSTR_CREATE_addps(1989,99187
#define INSTR_CREATE_addss(1991,99282
#define INSTR_CREATE_addpd(1993,99377
#define INSTR_CREATE_addsd(1995,99472
#define INSTR_CREATE_mulps(1997,99567
#define INSTR_CREATE_mulss(1999,99662
#define INSTR_CREATE_mulpd(2001,99757
#define INSTR_CREATE_mulsd(2003,99852
#define INSTR_CREATE_subps(2005,99947
#define INSTR_CREATE_subss(2007,100042
#define INSTR_CREATE_subpd(2009,100137
#define INSTR_CREATE_subsd(2011,100232
#define INSTR_CREATE_minps(2013,100327
#define INSTR_CREATE_minss(2015,100422
#define INSTR_CREATE_minpd(2017,100517
#define INSTR_CREATE_minsd(2019,100612
#define INSTR_CREATE_divps(2021,100707
#define INSTR_CREATE_divss(2023,100802
#define INSTR_CREATE_divpd(2025,100897
#define INSTR_CREATE_divsd(2027,100992
#define INSTR_CREATE_maxps(2029,101087
#define INSTR_CREATE_maxss(2031,101182
#define INSTR_CREATE_maxpd(2033,101277
#define INSTR_CREATE_maxsd(2035,101372
#define INSTR_CREATE_haddpd(2038,101478
#define INSTR_CREATE_haddps(2040,101575
#define INSTR_CREATE_hsubpd(2042,101672
#define INSTR_CREATE_hsubps(2044,101769
#define INSTR_CREATE_addsubpd(2046,101866
#define INSTR_CREATE_addsubps(2048,101967
#define INSTR_CREATE_pavgusb(2051,102081
#define INSTR_CREATE_pfadd(2053,102180
#define INSTR_CREATE_pfacc(2055,102275
#define INSTR_CREATE_pfcmpge(2057,102370
#define INSTR_CREATE_pfcmpgt(2059,102469
#define INSTR_CREATE_pfcmpeq(2061,102568
#define INSTR_CREATE_pfmin(2063,102667
#define INSTR_CREATE_pfmax(2065,102762
#define INSTR_CREATE_pfmul(2067,102857
#define INSTR_CREATE_pfrcp(2069,102952
#define INSTR_CREATE_pfrcpit1(2071,103047
#define INSTR_CREATE_pfrcpit2(2073,103148
#define INSTR_CREATE_pfrsqrt(2075,103249
#define INSTR_CREATE_pfrsqit1(2077,103348
#define INSTR_CREATE_pmulhrw(2079,103449
#define INSTR_CREATE_pfsub(2081,103548
#define INSTR_CREATE_pfsubr(2083,103643
#define INSTR_CREATE_pi2fd(2085,103740
#define INSTR_CREATE_pf2id(2087,103835
#define INSTR_CREATE_pi2fw(2089,103930
#define INSTR_CREATE_pf2iw(2091,104025
#define INSTR_CREATE_pfnacc(2093,104120
#define INSTR_CREATE_pfpnacc(2095,104217
#define INSTR_CREATE_pswapd(2097,104316
#define INSTR_CREATE_phaddw(2100,104425
#define INSTR_CREATE_phaddd(2102,104522
#define INSTR_CREATE_phaddsw(2104,104619
#define INSTR_CREATE_pmaddubsw(2106,104718
#define INSTR_CREATE_phsubw(2108,104821
#define INSTR_CREATE_phsubd(2110,104918
#define INSTR_CREATE_phsubsw(2112,105015
#define INSTR_CREATE_psignb(2114,105114
#define INSTR_CREATE_psignw(2116,105211
#define INSTR_CREATE_psignd(2118,105308
#define INSTR_CREATE_pmulhrsw(2120,105405
#define INSTR_CREATE_pabsb(2122,105506
#define INSTR_CREATE_pabsw(2124,105601
#define INSTR_CREATE_pabsd(2126,105696
#define INSTR_CREATE_crc32(2129,105802
#define INSTR_CREATE_packusdw(2131,105897
#define INSTR_CREATE_pcmpeqq(2133,105998
#define INSTR_CREATE_pcmpgtq(2135,106097
#define INSTR_CREATE_pminsb(2137,106196
#define INSTR_CREATE_pminsd(2139,106293
#define INSTR_CREATE_pminuw(2141,106390
#define INSTR_CREATE_pminud(2143,106487
#define INSTR_CREATE_pmaxsb(2145,106584
#define INSTR_CREATE_pmaxsd(2147,106681
#define INSTR_CREATE_pmaxuw(2149,106778
#define INSTR_CREATE_pmaxud(2151,106875
#define INSTR_CREATE_pmuldq(2153,106972
#define INSTR_CREATE_pmulld(2155,107069
#define INSTR_CREATE_aesenc(2157,107166
#define INSTR_CREATE_aesenclast(2159,107263
#define INSTR_CREATE_aesdec(2161,107368
#define INSTR_CREATE_aesdeclast(2163,107465
#define INSTR_CREATE_bts(2177,108233
#define INSTR_CREATE_btr(2179,108326
#define INSTR_CREATE_btc(2181,108419
#define INSTR_CREATE_cmovcc(2194,108983
#define INSTR_CREATE_imul_imm(2208,109720
#define INSTR_CREATE_imul(2217,110195
#define INSTR_CREATE_imul_1(2229,110900
#define INSTR_CREATE_imul_4(2232,111044
#define INSTR_CREATE_mul_1(2235,111219
#define INSTR_CREATE_mul_4(2238,111361
#define INSTR_CREATE_div_1(2241,111534
#define INSTR_CREATE_div_4(2244,111704
#define INSTR_CREATE_idiv_1(2248,111912
#define INSTR_CREATE_idiv_4(2251,112084
#define INSTR_CREATE_rol(2272,113252
#define INSTR_CREATE_ror(2274,113345
#define INSTR_CREATE_rcl(2276,113438
#define INSTR_CREATE_rcr(2278,113531
#define INSTR_CREATE_shl(2280,113624
#define INSTR_CREATE_shr(2282,113717
#define INSTR_CREATE_sar(2284,113810
#define INSTR_CREATE_maskmovq(2297,114447
#define INSTR_CREATE_maskmovdqu(2301,114642
#define INSTR_CREATE_vmaskmovdqu(2305,114844
#define INSTR_CREATE_fadd(2326,115979
#define INSTR_CREATE_fmul(2328,116072
#define INSTR_CREATE_fdiv(2330,116165
#define INSTR_CREATE_fdivr(2332,116258
#define INSTR_CREATE_fsub(2334,116353
#define INSTR_CREATE_fsubr(2336,116446
#define INSTR_CREATE_faddp(2349,117127
#define INSTR_CREATE_fmulp(2351,117243
#define INSTR_CREATE_fdivp(2353,117359
#define INSTR_CREATE_fdivrp(2355,117475
#define INSTR_CREATE_fsubp(2357,117593
#define INSTR_CREATE_fsubrp(2359,117709
#define INSTR_CREATE_fiadd(2371,118430
#define INSTR_CREATE_fimul(2374,118576
#define INSTR_CREATE_fidiv(2377,118722
#define INSTR_CREATE_fidivr(2380,118868
#define INSTR_CREATE_fisub(2383,119016
#define INSTR_CREATE_fisubr(2386,119162
#define INSTR_CREATE_ficom(2389,119310
#define INSTR_CREATE_ficomp(2392,119456
#define INSTR_CREATE_extrq(2405,120067
#define INSTR_CREATE_extrq_imm(2419,120868
#define INSTR_CREATE_insertq(2429,121403
#define INSTR_CREATE_insertq_imm(2445,122336
#define INSTR_CREATE_xsave32(2458,123026
#define INSTR_CREATE_xsave64(2461,123176
#define INSTR_CREATE_xsaveopt32(2464,123326
#define INSTR_CREATE_xsaveopt64(2467,123482
#define INSTR_CREATE_aam(2482,124261
#define INSTR_CREATE_aad(2485,124401
#define INSTR_CREATE_loopne(2498,125069
#define INSTR_CREATE_loope(2501,125217
#define INSTR_CREATE_loop(2504,125363
#define INSTR_CREATE_popf(2517,125935
#define INSTR_CREATE_ret(2521,126143
#define INSTR_CREATE_ret_far(2527,126443
#define INSTR_CREATE_iret(2533,126771
#define INSTR_CREATE_vpblendvb(2552,127743
#define INSTR_CREATE_vblendvps(2554,127863
#define INSTR_CREATE_vblendvpd(2556,127983
#define INSTR_CREATE_vcmpps(2573,128893
#define INSTR_CREATE_vcmpss(2575,129005
#define INSTR_CREATE_vcmppd(2577,129117
#define INSTR_CREATE_vcmpsd(2579,129229
#define INSTR_CREATE_vpinsrw(2581,129341
#define INSTR_CREATE_vshufps(2583,129455
#define INSTR_CREATE_vshufpd(2585,129569
#define INSTR_CREATE_vpalignr(2587,129683
#define INSTR_CREATE_vblendps(2589,129799
#define INSTR_CREATE_vblendpd(2591,129915
#define INSTR_CREATE_vpblendw(2593,130031
#define INSTR_CREATE_vpinsrb(2595,130147
#define INSTR_CREATE_vinsertps(2597,130261
#define INSTR_CREATE_vpinsrd(2599,130379
#define INSTR_CREATE_vdpps(2601,130493
#define INSTR_CREATE_vdppd(2603,130603
#define INSTR_CREATE_vmpsadbw(2605,130713
#define INSTR_CREATE_vpclmulqdq(2607,130829
#define INSTR_CREATE_vroundss(2609,130949
#define INSTR_CREATE_vroundsd(2611,131065
#define INSTR_CREATE_vperm2f128(2613,131181
#define INSTR_CREATE_vinsertf128(2615,131301
#define INSTR_CREATE_shld(2633,132244
#define INSTR_CREATE_shrd(2635,132347
#define INSTR_CREATE_pclmulqdq(2649,133144
#define INSTR_CREATE_blendps(2651,133255
#define INSTR_CREATE_blendpd(2653,133362
#define INSTR_CREATE_pblendw(2655,133469
#define INSTR_CREATE_shufps(2669,134286
#define INSTR_CREATE_shufpd(2671,134392
#define INSTR_CREATE_cmpps(2673,134497
#define INSTR_CREATE_cmpss(2675,134600
#define INSTR_CREATE_cmppd(2677,134703
#define INSTR_CREATE_cmpsd(2679,134806
#define INSTR_CREATE_palignr(2681,134909
#define INSTR_CREATE_dpps(2683,135016
#define INSTR_CREATE_dppd(2685,135117
#define INSTR_CREATE_mpsadbw(2687,135218
#define INSTR_CREATE_vfmadd132ps(2702,135995
#define INSTR_CREATE_vfmadd132pd(2704,136114
#define INSTR_CREATE_vfmadd213ps(2706,136233
#define INSTR_CREATE_vfmadd213pd(2708,136352
#define INSTR_CREATE_vfmadd231ps(2710,136471
#define INSTR_CREATE_vfmadd231pd(2712,136590
#define INSTR_CREATE_vfmadd132ss(2714,136709
#define INSTR_CREATE_vfmadd132sd(2716,136828
#define INSTR_CREATE_vfmadd213ss(2718,136947
#define INSTR_CREATE_vfmadd213sd(2720,137066
#define INSTR_CREATE_vfmadd231ss(2722,137185
#define INSTR_CREATE_vfmadd231sd(2724,137304
#define INSTR_CREATE_vfmaddsub132ps(2726,137423
#define INSTR_CREATE_vfmaddsub132pd(2728,137548
#define INSTR_CREATE_vfmaddsub213ps(2730,137673
#define INSTR_CREATE_vfmaddsub213pd(2732,137798
#define INSTR_CREATE_vfmaddsub231ps(2734,137923
#define INSTR_CREATE_vfmaddsub231pd(2736,138048
#define INSTR_CREATE_vfmsubadd132ps(2738,138173
#define INSTR_CREATE_vfmsubadd132pd(2740,138298
#define INSTR_CREATE_vfmsubadd213ps(2742,138423
#define INSTR_CREATE_vfmsubadd213pd(2744,138548
#define INSTR_CREATE_vfmsubadd231ps(2746,138673
#define INSTR_CREATE_vfmsubadd231pd(2748,138798
#define INSTR_CREATE_vfmsub132ps(2750,138923
#define INSTR_CREATE_vfmsub132pd(2752,139042
#define INSTR_CREATE_vfmsub213ps(2754,139161
#define INSTR_CREATE_vfmsub213pd(2756,139280
#define INSTR_CREATE_vfmsub231ps(2758,139399
#define INSTR_CREATE_vfmsub231pd(2760,139518
#define INSTR_CREATE_vfmsub132ss(2762,139637
#define INSTR_CREATE_vfmsub132sd(2764,139756
#define INSTR_CREATE_vfmsub213ss(2766,139875
#define INSTR_CREATE_vfmsub213sd(2768,139994
#define INSTR_CREATE_vfmsub231ss(2770,140113
#define INSTR_CREATE_vfmsub231sd(2772,140232
#define INSTR_CREATE_vfnmadd132ps(2774,140351
#define INSTR_CREATE_vfnmadd132pd(2776,140472
#define INSTR_CREATE_vfnmadd213ps(2778,140593
#define INSTR_CREATE_vfnmadd213pd(2780,140714
#define INSTR_CREATE_vfnmadd231ps(2782,140835
#define INSTR_CREATE_vfnmadd231pd(2784,140956
#define INSTR_CREATE_vfnmadd132ss(2786,141077
#define INSTR_CREATE_vfnmadd132sd(2788,141198
#define INSTR_CREATE_vfnmadd213ss(2790,141319
#define INSTR_CREATE_vfnmadd213sd(2792,141440
#define INSTR_CREATE_vfnmadd231ss(2794,141561
#define INSTR_CREATE_vfnmadd231sd(2796,141682
#define INSTR_CREATE_vfnmsub132ps(2798,141803
#define INSTR_CREATE_vfnmsub132pd(2800,141924
#define INSTR_CREATE_vfnmsub213ps(2802,142045
#define INSTR_CREATE_vfnmsub213pd(2804,142166
#define INSTR_CREATE_vfnmsub231ps(2806,142287
#define INSTR_CREATE_vfnmsub231pd(2808,142408
#define INSTR_CREATE_vfnmsub132ss(2810,142529
#define INSTR_CREATE_vfnmsub132sd(2812,142650
#define INSTR_CREATE_vfnmsub213ss(2814,142771
#define INSTR_CREATE_vfnmsub213sd(2816,142892
#define INSTR_CREATE_vfnmsub231ss(2818,143013
#define INSTR_CREATE_vfnmsub231sd(2820,143134
#define INSTR_CREATE_pblendvb(2834,143822
#define INSTR_CREATE_blendvps(2836,143953
#define INSTR_CREATE_blendvpd(2838,144084
#define INSTR_CREATE_pcmpistrm(2854,144947
#define INSTR_CREATE_pcmpistri(2856,145087
#define INSTR_CREATE_vpcmpistrm(2858,145226
#define INSTR_CREATE_vpcmpistri(2861,145374
#define INSTR_CREATE_ret_imm(2878,146253
#define INSTR_CREATE_ret_far_imm(2884,146565
#define INSTR_CREATE_pcmpestrm(2902,147564
#define INSTR_CREATE_pcmpestri(2905,147768
#define INSTR_CREATE_vpcmpestrm(2909,147981
#define INSTR_CREATE_vpcmpestri(2912,148187
#define INSTR_CREATE_rdtsc(2923,148670
#define INSTR_CREATE_lds(2937,149364
#define INSTR_CREATE_lss(2939,149478
#define INSTR_CREATE_les(2941,149592
#define INSTR_CREATE_lfs(2943,149706
#define INSTR_CREATE_lgs(2945,149820
#define INSTR_CREATE_pushf(2957,150362
#define INSTR_CREATE_rdmsr(2961,150589
#define INSTR_CREATE_rdpmc(2964,150756
#define INSTR_CREATE_xgetbv(2967,150923
#define INSTR_CREATE_pop(2979,151477
#define INSTR_CREATE_xchg(2994,152276
#define INSTR_CREATE_xadd(2996,152374
#define INSTR_CREATE_ins_1(3010,153001
#define INSTR_CREATE_ins_4(3014,153248
#define INSTR_CREATE_stos_1(3019,153515
#define INSTR_CREATE_stos_4(3023,153764
#define INSTR_CREATE_lods_1(3028,154034
#define INSTR_CREATE_lods_4(3033,154289
#define INSTR_CREATE_movs_1(3039,154566
#define INSTR_CREATE_movs_4(3045,154934
#define INSTR_CREATE_rep_ins_1(3053,155342
#define INSTR_CREATE_rep_ins_4(3058,155661
#define INSTR_CREATE_rep_stos_1(3064,156000
#define INSTR_CREATE_rep_stos_4(3069,156321
#define INSTR_CREATE_rep_lods_1(3075,156663
#define INSTR_CREATE_rep_lods_4(3081,156990
#define INSTR_CREATE_rep_movs_1(3088,157338
#define INSTR_CREATE_rep_movs_4(3095,157778
#define INSTR_CREATE_outs_1(3104,158258
#define INSTR_CREATE_outs_4(3108,158507
#define INSTR_CREATE_cmps_1(3113,158776
#define INSTR_CREATE_cmps_4(3119,159144
#define INSTR_CREATE_scas_1(3127,159552
#define INSTR_CREATE_scas_4(3131,159801
#define INSTR_CREATE_rep_outs_1(3136,160071
#define INSTR_CREATE_rep_outs_4(3141,160392
#define INSTR_CREATE_rep_cmps_1(3147,160733
#define INSTR_CREATE_rep_cmps_4(3154,161173
#define INSTR_CREATE_repne_cmps_1(3163,161653
#define INSTR_CREATE_repne_cmps_4(3170,162097
#define INSTR_CREATE_rep_scas_1(3179,162581
#define INSTR_CREATE_rep_scas_4(3184,162902
#define INSTR_CREATE_repne_scas_1(3190,163244
#define INSTR_CREATE_repne_scas_4(3195,163569
#define INSTR_CREATE_fxch(3211,164344
#define INSTR_CREATE_call(3223,164915
#define INSTR_CREATE_call_ind(3234,165517
#define INSTR_CREATE_call_far(3246,166207
#define INSTR_CREATE_call_far_ind(3258,166890
#define INSTR_CREATE_push(3268,167421
#define INSTR_CREATE_push_imm(3279,168031
#define INSTR_CREATE_cmpxchg_1(3296,169006
#define INSTR_CREATE_cmpxchg_4(3299,169169
#define INSTR_CREATE_leave(3305,169418
#define INSTR_CREATE_pusha(3319,170083
#define INSTR_CREATE_rdtscp(3322,170183
#define INSTR_CREATE_cpuid(3327,170393
#define INSTR_CREATE_cmpxchg8b(3340,171018
#define INSTR_CREATE_enter(3357,171947
#define INSTR_CREATE_popa(3369,172513
#define INSTR_CREATE_nop1byte(3384,173235
#define INSTR_CREATE_nop2byte(3385,173290
#define INSTR_CREATE_nop3byte(3386,173366
INSTR_CREATE_nop2byte_reg(3401,174162
INSTR_CREATE_nop3byte_reg(3433,175419
#define INSTR_CREATE_nopNbyte(3462,176500
#define INSTR_CREATE_RAW_pushf(3465,176634
#define INSTR_CREATE_RAW_popf(3466,176702
#define INSTR_CREATE_RAW_pusha(3467,176770
#define INSTR_CREATE_RAW_popa(3468,176838
#define INSTR_CREATE_RAW_nop(3469,176906
#define INSTR_CREATE_RAW_nop1byte(3470,176974
# define INSTR_CREATE_RAW_nop2byte(3472,177048
# define INSTR_CREATE_RAW_nop3byte(3473,177127
# define INSTR_CREATE_RAW_nop2byte(3475,177218
# define INSTR_CREATE_RAW_nop3byte(3476,177297
#define INSTR_CREATE_RAW_nopNbyte(3478,177389

x86/instr_inline.h,2309
#define _INSTR_INLINE_H_ 34,1706
# define MAKE_OPNDS_VALID(42,1845
#define CLIENT_ASSERT_(48,2089
#define MAKE_OPNDS_VALID(56,2428
#define CLIENT_ASSERT(60,2608
#define IF_DEBUG(61,2641
#define IF_DEBUG_(62,2664
#define OPND_IS_NULL(73,2982
#define OPND_IS_IMMED_INT(74,3039
#define OPND_IS_IMMED_FLOAT(75,3105
#define OPND_IS_NEAR_PC(76,3169
#define OPND_IS_NEAR_INSTR(77,3224
#define OPND_IS_REG(78,3282
#define OPND_IS_BASE_DISP(79,3338
#define OPND_IS_FAR_PC(80,3400
#define OPND_IS_FAR_INSTR(81,3459
#define OPND_IS_MEM_INSTR(82,3521
#define OPND_IS_VALID(83,3583
#define opnd_is_null 85,3640
#define opnd_is_immed_int 86,3685
#define opnd_is_immed_float 87,3735
#define opnd_is_near_pc 88,3787
#define opnd_is_near_instr 89,3835
#define opnd_is_reg 90,3886
#define opnd_is_base_disp 91,3930
#define opnd_is_far_pc 92,3980
#define opnd_is_far_instr 93,4027
#define opnd_is_mem_instr 94,4077
#define opnd_is_valid 95,4127
opnd_is_immed(100,4218
opnd_is_pc(107,4339
opnd_is_instr(113,4441
opnd_is_near_base_disp(120,4552
opnd_is_far_base_disp(127,4680
# define OPND_IS_REL_ADDR(134,4801
# define opnd_is_rel_addr 135,4862
opnd_is_near_rel_addr(139,4930
opnd_is_far_rel_addr(146,5062
opnd_create_null(160,5439
opnd_create_reg(169,5548
opnd_create_pc(181,5864
#define OPND_GET_REG(191,6002
#define opnd_get_reg 194,6134
#define GET_BASE_DISP(196,6169
#define OPND_GET_BASE(201,6343
#define OPND_GET_DISP(202,6403
#define OPND_GET_INDEX(203,6459
#define OPND_GET_SCALE(204,6520
#define opnd_get_base 206,6578
#define opnd_get_disp 207,6614
#define opnd_get_index 208,6650
#define opnd_get_scale 209,6688
#define OPND_GET_SEGMENT(211,6727
#define opnd_get_segment 217,7013
instr_ok_to_mangle(223,7099
instr_operands_valid(233,7374
instr_raw_bits_valid(240,7487
instr_has_allocated_bits(247,7600
instr_needs_encoding(254,7721
instr_ok_to_emit(261,7835
instr_num_srcs(270,8018
instr_num_dsts(278,8128
#define INSTR_GET_SRC(286,8293
#define INSTR_GET_DST(292,8636
#define INSTR_GET_TARGET(301,9033
#define instr_get_src 309,9498
#define instr_get_dst 310,9534
#define instr_get_target 311,9570
instr_set_note(315,9631
instr_get_note(322,9725
instr_get_next(329,9807
instr_get_prev(336,9889
instr_set_next(343,9967
instr_set_prev(350,10060

x86/instrument.c,14978
# undef ASSERT_TRUNCATE73,2957
# undef ASSERT_BITFIELD_TRUNCATE74,2981
# undef ASSERT_NOT_REACHED75,3014
# define ASSERT_TRUNCATE 76,3041
# define ASSERT_BITFIELD_TRUNCATE 77,3110
# define ASSERT_NOT_REACHED 78,3188
#define INSTRUMENT_INIT_NAME 85,3434
#define USES_DR_VERSION_NAME 92,3618
#define NEWEST_COMPATIBLE_VERSION 103,4136
DR_API const char *unique_build_number unique_build_number110,4447
typedef void (*callback_t)callback_t120,4904
typedef struct _callback_list_t 121,4938
    callback_t *callbacks;callbacks122,4972
    size_t num;123,5038
    size_t size;124,5107
} callback_list_t;125,5186
#define FAST_COPY_SIZE 145,6105
#define call_all_ret(146,6130
#define call_all(183,8834
static callback_list_t exit_callbacks 195,9411
static callback_list_t thread_init_callbacks 196,9457
static callback_list_t thread_exit_callbacks 197,9510
static callback_list_t fork_init_callbacks 199,9575
static callback_list_t bb_callbacks 201,9633
static callback_list_t trace_callbacks 202,9677
static callback_list_t end_trace_callbacks 204,9745
static callback_list_t fragdel_callbacks 206,9803
static callback_list_t restore_state_callbacks 207,9852
static callback_list_t restore_state_ex_callbacks 208,9907
static callback_list_t module_load_callbacks 209,9965
static callback_list_t module_unload_callbacks 210,10018
static callback_list_t filter_syscall_callbacks 211,10073
static callback_list_t pre_syscall_callbacks 212,10129
static callback_list_t post_syscall_callbacks 213,10182
static callback_list_t exception_callbacks 215,10251
static callback_list_t signal_callbacks 217,10308
static callback_list_t security_violation_callbacks 220,10390
static callback_list_t persist_ro_size_callbacks 222,10457
static callback_list_t persist_ro_callbacks 223,10514
static callback_list_t resurrect_ro_callbacks 224,10566
static callback_list_t persist_rx_size_callbacks 225,10620
static callback_list_t persist_rx_callbacks 226,10677
static callback_list_t resurrect_rx_callbacks 227,10729
static callback_list_t persist_rw_size_callbacks 228,10783
static callback_list_t persist_rw_callbacks 229,10840
static callback_list_t resurrect_rw_callbacks 230,10892
static callback_list_t persist_patch_callbacks 231,10946
typedef struct _client_lib_t 237,11163
    client_id_t id;238,11194
    char path[path239,11214
    shlib_handle_t lib;241,11306
    app_pc start;242,11330
    app_pc end;243,11348
    char options[options244,11364
    callback_list_t nudge_callbacks;249,11573
} client_lib_t;250,11610
static client_lib_t client_libs[client_libs255,11770
static size_t num_client_libs 256,11829
static void *persist_user_data[persist_user_data258,11865
static bool print_to_console;262,11983
static shlib_handle_t priv_kernel32;263,12013
typedef BOOL (WINAPI *kernel32_WriteFile_t)kernel32_WriteFile_t264,12050
static kernel32_WriteFile_t kernel32_WriteFile;266,12147
static bool block_client_nudge_threads 271,12247
static bool client_requested_exit;272,12295
static vm_area_vector_t *client_aux_libs;client_aux_libs285,12793
add_callback(296,13097
remove_callback(349,14767
add_client_lib(394,15930
instrument_load_client_libs(493,19693
init_client_aux_libs(536,20860
instrument_init(545,21065
free_callback_list(609,23700
void free_all_callback_lists(620,23984
instrument_exit(663,25494
is_in_client_lib(698,26577
get_client_bounds(718,27129
get_client_path_from_addr(731,27477
is_valid_client_id(745,27749
dr_register_exit_event(757,27946
dr_unregister_exit_event(763,28062
dr_register_bb_event(769,28190
dr_unregister_bb_event(782,28570
dr_register_trace_event(790,28826
dr_unregister_trace_event(803,29208
dr_register_end_trace_event(812,29484
dr_unregister_end_trace_event(824,29844
dr_register_delete_event(832,30077
dr_unregister_delete_event(843,30364
dr_register_restore_state_event(849,30519
dr_unregister_restore_state_event(862,30964
dr_register_restore_state_ex_event(870,31274
dr_unregister_restore_state_ex_event(882,31678
dr_register_thread_init_event(889,31946
dr_unregister_thread_init_event(895,32087
dr_register_thread_exit_event(901,32240
dr_unregister_thread_exit_event(907,32381
dr_register_fork_init_event(914,32546
dr_unregister_fork_init_event(920,32683
dr_register_module_load_event(927,32843
dr_unregister_module_load_event(934,33067
dr_register_module_unload_event(941,33305
dr_unregister_module_unload_event(948,33522
dr_register_exception_event(956,33768
dr_unregister_exception_event(962,33928
dr_register_signal_event(968,34105
dr_unregister_signal_event(975,34299
dr_register_filter_syscall_event(983,34528
dr_unregister_filter_syscall_event(989,34687
dr_register_pre_syscall_event(995,34858
dr_unregister_pre_syscall_event(1001,35011
dr_register_post_syscall_event(1007,35176
dr_unregister_post_syscall_event(1013,35331
dr_register_security_event(1020,35525
dr_unregister_security_event(1030,36000
dr_register_nudge_event(1041,36502
dr_unregister_nudge_event(1059,37121
dr_nudge_client_ex(1077,37806
dr_nudge_client(1103,38685
dr_is_nudge_thread(1111,38860
instrument_client_thread_init(1120,39090
instrument_thread_init(1146,40084
instrument_fork_init(1189,41576
instrument_thread_exit_event(1199,41817
instrument_thread_exit(1219,42526
dr_bb_hook_exists(1260,43766
dr_trace_hook_exists(1266,43835
dr_fragment_deleted_hook_exists(1272,43910
dr_end_trace_hook_exists(1278,43998
dr_thread_exit_hook_exists(1284,44081
dr_exit_hook_exists(1290,44168
dr_xl8_hook_exists(1296,44241
hide_tag_from_client(1303,44372
check_ilist_translations(1345,46345
instrument_basic_block(1388,48389
instrument_trace(1450,50619
instrument_fragment_deleted(1518,52978
instrument_restore_state(1543,53672
instrument_end_trace(1578,55196
create_and_initialize_module_data(1597,55712
copy_module_area_to_module_data(1650,57849
dr_copy_module_data(1680,59186
dr_free_module_data(1703,60079
instrument_module_load_trigger(1729,60969
instrument_module_load(1754,61850
instrument_module_unload(1777,62652
instrument_filter_syscall(1796,63155
instrument_pre_syscall(1810,63633
instrument_post_syscall(1831,64437
instrument_invoke_another_syscall(1842,64764
instrument_exception(1850,64973
instrument_signal(1865,65556
dr_signal_hook_exists(1880,66182
instrument_security_violation(1889,66363
instrument_nudge(2012,71059
get_num_client_threads(2088,74038
wait_for_outstanding_nudges(2100,74276
dr_standalone_init(2146,75883
dr_abort(2155,76038
dr_exit_process(2164,76210
dr_using_all_private_caches(2197,77465
dr_request_synchronized_exit(2204,77556
dr_set_process_exit_behavior(2212,77763
dr_get_options(2235,78630
dr_get_client_path(2251,78993
dr_get_client_base(2266,79284
dr_get_application_name(2280,79581
dr_get_process_id(2290,79755
dr_get_parent_id(2298,79861
dr_convert_handle_to_pid(2307,79959
dr_get_os_version(2319,80228
dr_is_wow64(2348,81497
dr_get_app_PEB(2355,81583
dr_get_time(2364,81687
dr_get_milliseconds(2371,81790
dr_get_random_value(2378,81865
dr_set_random_seed(2385,81954
dr_get_random_seed(2392,82028
dr_thread_alloc(2411,82541
dr_thread_free(2422,82842
dr_global_alloc(2435,83272
dr_global_free(2445,83484
dr_nonheap_alloc(2453,83657
dr_nonheap_free(2460,83784
raw_mem_alloc(2466,83899
raw_mem_free(2527,86289
dr_raw_mem_alloc(2563,87550
dr_raw_mem_free(2570,87681
custom_memory_shared(2576,87795
dr_custom_alloc(2672,92387
dr_custom_free(2680,92594
__wrap_malloc(2695,93077
__wrap_realloc(2707,93427
__wrap_calloc(2719,93793
__wrap_free(2730,94099
dr_memory_protect(2738,94170
dr_memory_is_readable(2775,95809
dr_query_memory(2783,96015
dr_query_memory_ex(2813,97054
dr_safe_read(2834,97728
dr_safe_write(2842,97971
dr_try_setup(2849,98131
dr_try_stop(2878,99327
dr_memory_is_dr_internal(2891,99840
dr_memory_is_in_client(2898,99940
instrument_client_lib_loaded(2904,100030
instrument_client_lib_unloaded(2919,100639
dr_load_aux_library(2932,100940
dr_lookup_aux_library_routine(2961,102010
dr_unload_aux_library(2970,102187
dr_load_aux_x64_library(3011,103553
dr_lookup_aux_x64_library_routine(3037,104490
dr_unload_aux_x64_library(3045,104717
dr_mutex_create(3063,105108
dr_mutex_destroy(3075,105390
dr_mutex_lock(3086,105658
dr_mutex_unlock(3107,106345
dr_mutex_trylock(3125,106919
dr_mutex_self_owns(3149,107726
dr_mutex_mark_as_app(3156,107836
dr_rwlock_create(3165,107974
dr_rwlock_destroy(3175,108270
dr_rwlock_read_lock(3184,108509
dr_rwlock_read_unlock(3191,108604
dr_rwlock_write_lock(3198,108703
dr_rwlock_write_unlock(3205,108800
dr_rwlock_write_trylock(3212,108901
dr_rwlock_self_owns_write_lock(3219,109011
dr_rwlock_mark_as_app(3226,109135
dr_recurlock_create(3235,109303
dr_recurlock_destroy(3245,109604
dr_recurlock_lock(3254,109846
dr_recurlock_unlock(3261,109953
dr_recurlock_trylock(3268,110062
dr_recurlock_self_owns(3275,110175
dr_recurlock_mark_as_app(3282,110296
dr_mark_safe_to_suspend(3291,110465
dr_atomic_add32_return_sum(3307,110910
dr_lookup_module(3320,111270
dr_get_main_module(3333,111560
dr_lookup_module_by_name(3342,111824
typedef struct _client_mod_iterator_list_t 3363,112679
    module_data_t *info;info3364,112724
    struct _client_mod_iterator_list_t *next;next3365,112749
} client_mod_iterator_list_t;3366,112795
    client_mod_iterator_list_t *current;current3369,112843
    client_mod_iterator_list_t *full_list;full_list3370,112884
} client_mod_iterator_t;3371,112927
dr_module_iterator_start(3376,113030
dr_module_iterator_hasnext(3409,114332
dr_module_iterator_next(3418,114628
dr_module_iterator_stop(3435,115166
dr_module_preferred_name(3459,115996
dr_lookup_module_section(3474,116363
dr_module_set_should_instrument(3489,116993
dr_module_should_instrument(3517,117999
dr_get_proc_address(3541,118766
dr_get_proc_address_ex(3552,118966
dr_create_dir(3572,119598
dr_directory_exists(3580,119744
dr_file_exists(3588,119882
dr_open_file(3598,120074
dr_close_file(3631,121075
dr_rename_file(3640,121226
dr_delete_file(3648,121374
dr_flush_file(3660,121609
dr_write_file(3670,121750
dr_read_file(3680,121945
dr_file_seek(3689,122165
dr_file_tell(3699,122495
dr_dup_file_handle(3706,122560
dr_file_size(3724,122967
dr_map_file(3731,123077
dr_unmap_file(3744,123578
dr_log(3766,124236
dr_get_logfile(3791,124856
dr_is_notify_on(3809,125252
dr_get_stdout_file(3816,125355
dr_get_stderr_file(3822,125431
dr_get_stdin_file(3828,125507
dr_write_forensics_report(3837,125614
dr_messagebox(3894,127521
dr_write_to_console(3915,128258
dr_using_console(3944,129267
dr_enable_console_printing(3957,129653
dr_printf(3998,131274
dr_fprintf(4012,131530
dr_snprintf(4026,131819
dr_vsnprintf(4042,132282
dr_snwprintf(4048,132408
dr_vsnwprintf(4059,132621
dr_sscanf(4065,132759
dr_get_token(4076,132954
dr_print_instr(4091,133449
dr_print_opnd(4103,133941
dr_get_current_drcontext(4121,134542
dr_get_thread_id(4129,134765
dr_get_dr_thread_handle(4141,135144
dr_get_tls_field(4152,135501
dr_set_tls_field(4162,135845
dr_get_dr_segment_base(4172,136204
dr_raw_tls_calloc(4179,136295
dr_raw_tls_cfree(4194,136777
dr_thread_yield(4202,136932
dr_sleep(4216,137392
dr_client_thread_set_suspendable(4230,137828
dr_suspend_all_other_threads_ex(4244,138219
dr_suspend_all_other_threads(4342,143218
dr_resume_all_other_threads(4351,143525
dr_is_thread_native(4381,144704
dr_retakeover_suspended_native_thread(4390,144930
dr_set_itimer(4407,145442
dr_get_itimer(4419,145887
instrlist_meta_preinsert(4432,146247
instrlist_meta_postinsert(4441,146503
instrlist_meta_append(4450,146758
instrlist_meta_fault_preinsert(4458,146909
instrlist_meta_fault_postinsert(4466,147095
instrlist_meta_fault_append(4474,147283
convert_va_list_to_opnd(4481,147440
dr_insert_call(4495,147917
dr_insert_call_ex(4519,148843
prepare_for_call_ex(4550,150077
cleanup_after_call_ex(4571,150769
dr_insert_clean_call_ex_varg(4610,152335
dr_insert_clean_call_ex(4751,158456
dr_insert_clean_call(4764,158851
dr_prepare_for_call(4783,159685
dr_cleanup_after_call(4792,160051
dr_swap_to_clean_stack(4804,160535
dr_restore_app_stack(4838,162207
#define SPILL_SLOT_TLS_MAX 4856,163002
#define NUM_TLS_SPILL_SLOTS 4857,163031
#define NUM_SPILL_SLOTS 4858,163084
static const ushort SPILL_SLOT_TLS_OFFS[SPILL_SLOT_TLS_OFFS4863,163472
static const reg_id_t SPILL_SLOT_MC_REG[SPILL_SLOT_MC_REG4867,163715
dr_save_reg(4874,163965
dr_restore_reg(4919,165842
dr_max_opnd_accessible_spill_slot(4957,167469
reg_spill_slot_opnd(4968,167726
dr_reg_spill_slot_opnd(4983,168242
dr_read_saved_reg(4998,168907
dr_write_saved_reg(5026,170189
dr_insert_read_tls_field(5058,171633
dr_insert_write_tls_field(5091,173041
dr_save_arith_flags(5123,174538
dr_restore_arith_flags(5138,175117
dr_save_arith_flags_to_xax(5153,175719
dr_restore_arith_flags_from_xax(5171,176325
dr_insert_call_instrumentation(5199,177379
dr_insert_mbr_instrumentation(5247,179741
dr_insert_cbr_instrumentation(5347,184396
dr_insert_ubr_instrumentation(5543,193750
dr_clobber_retaddr_after_read(5556,194167
dr_mcontext_xmm_fields_valid(5582,195178
dr_get_mcontext_priv(5592,195413
dr_get_mcontext(5697,199753
dr_set_mcontext(5705,199953
dr_redirect_execution(5747,201555
dr_redirect_native_target(5777,202679
dr_delete_fragment(5817,204143
dr_replace_fragment(5879,206778
void dr_flush_fragments(5938,209289
dr_flush_region(5986,211067
dr_unlink_flush_region(6026,213097
dr_delay_flush_region(6073,215675
dr_fragment_exists_at(6107,216797
dr_bb_exists_at(6123,217161
dr_fragment_size(6140,217600
dr_fragment_app_pc(6168,218510
dr_app_pc_for_decoding(6192,219299
dr_app_pc_from_cache_pc(6204,219485
dr_using_app_state(6225,220196
dr_switch_to_app_state(6233,220343
dr_switch_to_app_state_ex(6240,220456
dr_switch_to_dr_state(6248,220647
dr_switch_to_dr_state_ex(6255,220758
dr_mark_trace_head(6293,222373
dr_trace_head_at(6374,225557
dr_trace_exists_at(6402,226320
dr_add_prefixes_to_basic_blocks(6432,227250
dr_insert_get_seg_base(6454,228006
instrument_persist_ro_size(6514,230527
instrument_persist_ro(6559,232410
instrument_resurrect_ro(6586,233262
instrument_persist_rx_size(6619,234187
instrument_persist_rx(6637,234839
instrument_resurrect_rx(6651,235299
instrument_persist_rw_size(6665,235701
instrument_persist_rw(6683,236353
instrument_resurrect_rw(6697,236813
instrument_persist_patch(6710,237180
dr_register_persist_ro(6725,237647
dr_unregister_persist_ro(6742,238468
dr_register_persist_rx(6770,239527
dr_unregister_persist_rx(6787,240348
dr_register_persist_rw(6815,241407
dr_unregister_persist_rw(6832,242228
dr_register_persist_patch(6860,243287
dr_unregister_persist_patch(6872,243666
instrlist_insert_mov_immed_ptrsz(6885,244180
instrlist_insert_push_immed_ptrsz(6900,244799
instrlist_insert_mov_instr_addr(6910,245145
instrlist_insert_push_instr_addr(6928,245888

x86/instrument.h,9239
#define _INSTRUMENT_H_ 43,1995
#define CURRENT_API_VERSION 56,2373
    DR_EMIT_DEFAULT 109,3923
    DR_EMIT_STORE_TRANSLATIONS 121,4462
    DR_EMIT_STORE_TRANSLATIONS   = 0x01,x01121,4462
    DR_EMIT_PERSISTABLE 131,4937
    DR_EMIT_PERSISTABLE          = 0x02,x02131,4937
    DR_EMIT_MUST_END_TRACE 141,5479
    DR_EMIT_MUST_END_TRACE       = 0x04,x04141,5479
    DR_EMIT_GO_NATIVE 153,6138
    DR_EMIT_GO_NATIVE           = 0x08,x08153,6138
} dr_emit_flags_t;154,6178
    CUSTOM_TRACE_DR_DECIDES,498,24030
    CUSTOM_TRACE_END_NOW,499,24059
    CUSTOM_TRACE_CONTINUE500,24085
} dr_custom_trace_action_t;501,24111
typedef struct _dr_fault_fragment_info_t 635,30057
    void *tag;tag641,30289
    byte *cache_start_pc;cache_start_pc649,30647
    bool is_trace;651,30743
    bool app_code_consistent;659,31128
} dr_fault_fragment_info_t;660,31162
typedef struct _dr_restore_state_info_t 668,31403
    dr_mcontext_t *mcontext;mcontext675,31710
    bool raw_mcontext_valid;677,31781
    dr_mcontext_t *raw_mcontext;raw_mcontext685,32144
    dr_fault_fragment_info_t fragment_info;690,32304
} dr_restore_state_info_t;691,32348
    DR_EXIT_MULTI_THREAD 807,37156
    DR_EXIT_MULTI_THREAD           = 0x01,x01807,37156
    DR_EXIT_SKIP_THREAD_EXIT 816,37634
    DR_EXIT_SKIP_THREAD_EXIT        = 0x02,x02816,37634
} dr_exit_flags_t;817,37678
typedef struct _dr_exception_t 914,41140
    dr_mcontext_t *mcontext;mcontext919,41316
    EXCEPTION_RECORD *record;record920,41345
    dr_mcontext_t *raw_mcontext;raw_mcontext929,41770
    dr_fault_fragment_info_t fault_fragment_info;934,41929
} dr_exception_t;935,41979
typedef struct _dr_siginfo_t 1124,49935
    int sig;1126,49996
    void *drcontext;drcontext1128,50068
    dr_mcontext_t *mcontext;mcontext1134,50266
    dr_mcontext_t *raw_mcontext;raw_mcontext1143,50680
    bool raw_mcontext_valid;1145,50755
    byte *access_address;access_address1150,50917
    bool blocked;1157,51224
    dr_fault_fragment_info_t fault_fragment_info;1162,51371
} dr_siginfo_t;1163,51421
    DR_SIGNAL_DELIVER,1171,51618
    DR_SIGNAL_SUPPRESS,1173,51697
    DR_SIGNAL_BYPASS,1178,51858
    DR_SIGNAL_REDIRECT,1183,52025
} dr_signal_action_t;1184,52049
    DR_RCO_STACK_VIOLATION,1304,57713
    DR_RCO_HEAP_VIOLATION,1305,57741
    DR_RCT_RETURN_VIOLATION,1306,57768
    DR_RCT_INDIRECT_CALL_VIOLATION,1307,57797
    DR_RCT_INDIRECT_JUMP_VIOLATION,1308,57833
    DR_UNKNOWN_VIOLATION,1309,57869
} dr_security_violation_type_t;1310,57895
    DR_VIOLATION_ACTION_CONTINUE,1341,59903
    DR_VIOLATION_ACTION_CONTINUE_CHANGED_CONTEXT,1342,59937
    DR_VIOLATION_ACTION_KILL_PROCESS,1343,59987
    DR_VIOLATION_ACTION_KILL_THREAD,1344,60025
    DR_VIOLATION_ACTION_THROW_EXCEPTION,1345,60062
} dr_security_violation_action_t;1346,60103
#define GLOBAL_DCONTEXT 1575,69691
# define DR_ASSERT_MSG(1587,69968
# define DR_ASSERT_MSG(1592,70149
#define DR_ASSERT(1603,70466
    DR_WINDOWS_VERSION_8 1693,73044
    DR_WINDOWS_VERSION_7 1694,73079
    DR_WINDOWS_VERSION_VISTA 1695,73114
    DR_WINDOWS_VERSION_2003 1696,73149
    DR_WINDOWS_VERSION_XP 1697,73226
    DR_WINDOWS_VERSION_2000 1698,73261
    DR_WINDOWS_VERSION_NT 1699,73296
} dr_os_version_t;1700,73331
typedef struct _dr_os_version_info_t 1703,73403
    size_t size;1705,73524
    dr_os_version_t version;1707,73581
    uint service_pack_major;1709,73651
    uint service_pack_minor;1711,73721
} dr_os_version_info_t;1712,73750
    DR_ALLOC_NON_HEAP 1830,76881
    DR_ALLOC_NON_HEAP             = 0x0001,x00011830,76881
    DR_ALLOC_THREAD_PRIVATE 1839,77301
    DR_ALLOC_THREAD_PRIVATE       = 0x0002,x00021839,77301
    DR_ALLOC_CACHE_REACHABLE 1851,77912
    DR_ALLOC_CACHE_REACHABLE      = 0x0004,x00041851,77912
    DR_ALLOC_FIXED_LOCATION 1860,78341
    DR_ALLOC_FIXED_LOCATION       = 0x0008,x00081860,78341
    DR_ALLOC_LOW_2GB 1869,78769
    DR_ALLOC_LOW_2GB              = 0x0010,x00101869,78769
    DR_ALLOC_NON_DR 1879,79267
    DR_ALLOC_NON_DR               = 0x0020,x00201879,79267
    DR_ALLOC_RESERVE_ONLY 1888,79677
    DR_ALLOC_RESERVE_ONLY         = 0x0040,x00401888,79677
    DR_ALLOC_COMMIT_ONLY 1901,80412
    DR_ALLOC_COMMIT_ONLY          = 0x0080,x00801901,80412
} dr_alloc_flags_t;1903,80463
#define DR_TRY_EXCEPT(2229,91378
typedef void * dr_module_iterator_t;2606,102920
typedef struct _module_segment_data_t 2617,103379
    app_pc start;2618,103419
    app_pc end;2619,103498
    uint prot;2620,103574
} module_segment_data_t;2621,103637
struct _module_data_t 2633,104222
        app_pc start;2635,104258
        module_handle_t handle;2636,104320
    app_pc end;2643,104726
    app_pc entry_point;2645,104743
    uint flags;2647,104832
    module_names_t names;2649,104876
    char *full_path;full_path2653,105085
    version_number_t file_version;2656,105172
    version_number_t product_version;2657,105254
    uint checksum;2658,105342
    uint timestamp;2659,105405
    size_t module_internal_size;2660,105470
    bool contiguous;2662,105568
    uint num_segments;2663,105642
    module_segment_data_t *segments;segments2668,105829
typedef struct _dr_module_import_iterator_t dr_module_import_iterator_t;2782,109483
typedef struct _dr_module_import_desc_t dr_module_import_desc_t;2788,109673
typedef struct _dr_module_import_t 2800,110159
    const char *modname;modname2804,110269
    dr_module_import_desc_t *module_import_desc;module_import_desc2810,110441
} dr_module_import_t;2811,110490
typedef struct _dr_symbol_import_iterator_t dr_symbol_import_iterator_t;2860,111868
typedef struct _dr_symbol_import_t 2869,112223
    const char *name;name2870,112260
    const char *modname;modname2871,112335
    bool delay_load;2872,112412
    bool by_ordinal;2873,112492
    ptr_uint_t ordinal;2874,112575
} dr_symbol_import_t;2880,112830
typedef struct _dr_export_info_t 2991,116515
    generic_func_t address;2997,116744
    bool is_indirect_code;3006,117148
} dr_export_info_t;3007,117175
#define DR_FILE_READ 3138,121315
#define DR_FILE_WRITE_REQUIRE_NEW 3140,121429
#define DR_FILE_WRITE_APPEND 3145,121581
#define DR_FILE_WRITE_OVERWRITE 3150,121721
#define DR_FILE_ALLOW_LARGE 3155,121918
#define DR_FILE_CLOSE_ON_FORK 3157,122026
#define DR_SEEK_SET 3241,124702
#define DR_SEEK_CUR 3242,124747
#define DR_SEEK_END 3243,124800
    DR_MAP_PRIVATE 3292,126040
    DR_MAP_PRIVATE             = 0x0001,x00013292,126040
    DR_MAP_FIXED 3300,126388
    DR_MAP_FIXED               = 0x0002,x00023300,126388
    DR_MAP_IMAGE 3307,126601
    DR_MAP_IMAGE               = 0x0004,x00043307,126601
    DR_MAP_CACHE_REACHABLE 3314,126897
    DR_MAP_CACHE_REACHABLE     = 0x0008,x00083314,126897
#define LOG_NONE 3385,129260
#define LOG_STATS 3386,129350
#define LOG_TOP 3387,129440
#define LOG_THREADS 3388,129530
#define LOG_SYSCALLS 3389,129620
#define LOG_ASYNCH 3390,129710
#define LOG_INTERP 3391,129800
#define LOG_EMIT 3392,129890
#define LOG_LINKS 3393,129980
#define LOG_CACHE 3394,130070
#define LOG_FRAGMENT 3395,130160
#define LOG_DISPATCH 3396,130250
#define LOG_MONITOR 3397,130340
#define LOG_HEAP 3398,130430
#define LOG_VMAREAS 3399,130521
#define LOG_SYNCH 3400,130611
#define LOG_MEMSTATS 3401,130701
#define LOG_OPTS 3402,130791
#define LOG_SIDELINE 3403,130881
#define LOG_SYMBOLS 3404,130967
#define LOG_RCT 3405,131048
#define LOG_NT 3406,131136
#define LOG_HOT_PATCHING 3407,131224
#define LOG_HTABLE 3408,131306
#define LOG_MODULEDB 3409,131387
#define LOG_ALL 3410,131476
    DR_SUSPEND_NATIVE 3916,150911
    DR_SUSPEND_NATIVE = 0x0001,x00013916,150911
} dr_suspend_flags_t;3917,150943
    SPILL_SLOT_1 4101,158761
    SPILL_SLOT_2 4102,158839
    SPILL_SLOT_3 4103,158917
    SPILL_SLOT_4 4104,158995
    SPILL_SLOT_5 4105,159073
    SPILL_SLOT_6 4106,159151
    SPILL_SLOT_7 4107,159229
    SPILL_SLOT_8 4108,159307
    SPILL_SLOT_9 4109,159385
    SPILL_SLOT_10 4111,159474
    SPILL_SLOT_11 4113,159595
    SPILL_SLOT_12 4115,159716
    SPILL_SLOT_13 4117,159837
    SPILL_SLOT_14 4119,159958
    SPILL_SLOT_15 4121,160079
    SPILL_SLOT_16 4123,160200
    SPILL_SLOT_17 4125,160321
    SPILL_SLOT_MAX 4127,160442
    SPILL_SLOT_MAX = SPILL_SLOT_17 4127,160442
    SPILL_SLOT_MAX 4130,160586
    SPILL_SLOT_MAX = SPILL_SLOT_9 4130,160586
} dr_spill_slot_t;4133,160729
#define MINSERT 4296,166905
    DR_CLEANCALL_SAVE_FLOAT 4426,172124
    DR_CLEANCALL_SAVE_FLOAT             = 0x0001,x00014426,172124
    DR_CLEANCALL_NOSAVE_FLAGS 4433,172453
    DR_CLEANCALL_NOSAVE_FLAGS           = 0x0002,x00024433,172453
    DR_CLEANCALL_NOSAVE_XMM 4435,172552
    DR_CLEANCALL_NOSAVE_XMM             = 0x0004,x00044435,172552
    DR_CLEANCALL_NOSAVE_XMM_NONPARAM 4437,172685
    DR_CLEANCALL_NOSAVE_XMM_NONPARAM    = 0x0008,x00084437,172685
    DR_CLEANCALL_NOSAVE_XMM_NONRET 4439,172821
    DR_CLEANCALL_NOSAVE_XMM_NONRET      = 0x0010,x00104439,172821
    DR_CLEANCALL_INDIRECT 4444,173038
    DR_CLEANCALL_INDIRECT               = 0x0020,x00204444,173038
} dr_cleancall_save_t;4445,173088
#define SPILL_SLOT_REDIRECT_NATIVE_TGT 4823,189116

x86/interp.c,5045
int app_jump=89,3042
instr_t *instr,instr91,3129
instr_t *instr,*stn_last_instr,stn_last_instr91,3129
instr_t *instr,*stn_last_instr,*stn_instr,stn_instr91,3129
instr_t *instr,*stn_last_instr,*stn_instr,*stn_ilast_instr;stn_ilast_instr91,3129
int sn_bb_skip_list[sn_bb_skip_list92,3207
int sn_list_length=93,3386
unsigned long long int sn_call_instr_pc,94,3409
unsigned long long int sn_call_instr_pc,sn_call_instr_bytes=94,3409
enum { DIRECT_XFER_LENGTH 120,4127
#define BRANCH_LIMIT 140,5160
volatile bool bb_lock_start;159,6071
file_t bbdump_file 162,6117
void surya_foo(168,6188
interp_init(179,6268
static int num_rets_removed;192,6537
interp_exit(198,6601
    app_pc start_pc;228,7408
    bool app_interp;229,7429
    bool for_cache;231,7597
    bool record_vmlist;232,7661
    bool mangle_ilist;233,7723
    bool record_translation;234,7786
    bool has_bb_building_lock;235,7862
    file_t outf;236,7950
    bool pass_to_client;239,8127
    bool post_client;243,8392
    bool for_trace;244,8468
    overlap_info_t *overlap_info;overlap_info248,8578
    instrlist_t *ilist;ilist252,8768
    uint flags;253,8792
    void *vmlist;vmlist254,8808
    app_pc end_pc;255,8826
    bool native_exec;256,8845
    bool native_call;257,8925
    instrlist_t **unmangled_ilist;unmangled_ilist259,9006
    bool full_decode;263,9121
    bool follow_direct;264,9206
    bool check_vm_area;265,9271
    uint num_elide_jmp;266,9345
    uint num_elide_call;267,9369
    app_pc last_page;268,9394
    app_pc cur_pc;269,9416
    app_pc instr_start;270,9435
    app_pc checked_end;271,9459
    cache_pc exit_target;272,9525
    uint exit_type;273,9596
    bool invalid_instr_hack;275,9666
    instr_t *instr;instr277,9702
    int eflags;278,9758
    app_pc pretend_pc;279,9774
} build_bb_t;281,9887
build_bb_t t_bb;283,9902
init_build_bb(290,10172
reset_overlap_info(311,10893
update_overlap_info(321,11184
# define BBPRINT(343,12092
#  define BBPRINT(350,12368
#  define BBPRINT(355,12574
static bool reached_image_entry 387,13298
check_for_image_entry(390,13366
set_reached_image_entry(401,13644
reached_image_entry_yet(409,13808
must_not_be_inlined(424,14184
must_not_be_elided(457,15358
must_escape_from(485,16357
bb_add_native_direct_xfer(537,18439
check_for_stopping_point(598,21314
eflags_analysis(644,23331
check_new_page_start(717,26542
check_new_page_contig(741,27608
check_new_page_jmp(775,29114
bb_process_invalid_instr(828,31570
follow_direct_jump(907,35455
bb_process_ubr(935,36579
follow_direct_call(1025,40888
bb_stop_prior_to_instr(1055,42013
bb_process_call_direct(1066,42362
instr_is_call_sysenter_pattern(1129,44918
bb_verify_sysenter_pattern(1181,47049
bb_process_SEH_push(1216,48472
        typedef struct _borland_seh_frame_t 1305,53706
            EXCEPTION_REGISTRATION reg;1306,53752
            reg_t xbp;1307,53792
        } borland_seh_frame_t;1308,53836
bb_process_fs_ref_opnd(1456,62156
bb_process_fs_ref(1500,64343
bb_process_mov_seg(1608,69150
bb_process_ignorable_syscall(1665,71377
bb_process_shared_syscall(1738,74411
bb_process_non_ignorable_syscall(1775,75834
bb_process_syscall(1801,76869
bb_process_indcall_syscall(1876,79608
bb_process_interrupt(1892,80095
bb_process_convertible_indcall(1932,81711
read_from_IAT(2151,91056
is_targeting_convertible_IAT(2164,91437
bb_process_IAT_convertible_indjmp(2252,94887
bb_process_IAT_convertible_indcall(2391,100509
bb_process_float_pc(2491,104462
instr_will_be_exit_cti(2506,105079
client_check_syscall(2520,105587
client_process_bb(2565,107590
build_bb_ilist(2911,124176
bb_build_abort(4687,207567
expand_should_set_translation(4725,209241
mangle_bb_ilist(4742,209825
build_app_bb_ilist(4811,212910
decode_as_bb(4829,213650
decode_trace(4863,215044
find_app_bb_end(4897,216209
app_bb_overlaps(4909,216619
report_native_module(4929,217297
build_native_exec_bb(4950,218123
at_native_exec_gateway(5079,223692
init_interp_build_bb(5258,232339
exit_interp_build_bb(5325,235615
build_basic_block_fragment(5340,236158
recreate_bb_ilist(5484,241784
recreate_fragment_ilist(5570,245652
process_nops_for_trace(5798,255633
regenerate_custom_exit_stub(5822,256769
tracelist_add(5896,259849
tracelist_add_after(5915,260473
insert_increment_stat_counter(5935,261088
insert_restore_spilled_xcx(5969,262780
insert_transparent_comparison(6003,264194
mangle_x64_ib_in_trace(6047,265917
mangle_indirect_branch_in_trace(6129,269721
fixup_last_cti(6351,278845
append_trace_speculate_last_ibl(6566,287426
append_ib_trace_last_ibl_exit_stat(6722,294127
extend_trace(6806,298007
create_exit_jmp(6909,302358
mangle_trace(6941,303458
instr_eflags_to_fragment_eflags(7215,315858
forward_eflags_analysis(7239,316711
#define DF_LOGLEVEL(7282,318781
decode_fragment(7286,318893
#undef DF_LOGLEVEL7972,353774
decode_fragment_exact(7978,353903
copy_fragment(7999,354697
shift_ctis_in_fragment(8111,359235
add_profile_call(8228,364639
emulate(8255,365542

x86/loadtoconst.c,1756
fragment_t *frags_waiting_LTC[frags_waiting_LTC60,2286
int num_frags_waiting_LTC;61,2345
int safe_taken,66,2480
int safe_taken,opt_taken,66,2480
int safe_taken,opt_taken,addrs_analyzed,66,2480
int safe_taken,opt_taken,addrs_analyzed,addrs_made_const,66,2480
int safe_taken,opt_taken,addrs_analyzed,addrs_made_const,traces_analyzed,66,2480
int safe_taken,opt_taken,addrs_analyzed,addrs_made_const,traces_analyzed,addrs_seen;66,2480
#define NUM_TMP_OPNDS 69,2573
static opnd_t tmpOpnds[tmpOpnds70,2599
analyze_memrefs(73,2644
check_mem_refs(273,10114
LTC_online_optimize_and_replace(388,14390
get_mem_address(442,16545
get_mem_val(479,17448
LTC_examine_traces(508,18282
LTC_fragment_delete(548,19558
remove_mem_ref_check(573,20258
pop_instr_off_list(625,22386
ltc_trace(634,22625
do_single_LTC(779,28192
*fix_cmp_containing_constant(fix_cmp_containing_constant842,30925
safe_to_transpose_cmp(947,35112
safe_to_delete_cmp(952,35245
instr_flag_write_necessary(959,35418
safe_to_modify_cmp(994,36592
pc_reads_flags_before_writes(1092,40668
becomes_ubr_from_cmp(1116,41353
change_cbr_due_to_reversed_cmp(1140,41997
should_replace_load(1168,42778
value_to_replace(1189,43387
should_replace_load(1198,43651
value_to_replace(1239,45111
save_eflags_list(1273,46102
restore_eflags_list(1302,47156
constant_propagate(1332,48139
instr_replace_reg_with_const_in_src(1478,54895
instr_replace_reg_with_const_in_dst(1536,57277
opnd_replace_reg_with_val(1562,58127
replace_self_loop_with_opnd(1639,60424
instr_arithmatic_simplify(1680,61794
instr_replace_inplace(1871,69364
instrlist_remove_nops(1887,69749
instrlist_depends_on_reg(1920,70701
instr_add_to_exitexec_list(1943,71181
instrlist_setup_pseudo_exitstubs(1955,71547

x86/loadtoconst.h,547
#define __LOADTOCONST_H_38,1851
#define NUM_VALUES_FOR_SPECULATION 40,1877
#define SAMPLE_PERCENT 41,1915
#define MAX_TRACES_WAITING_FOR_LTC 44,1947
struct ltc_mem_ref_data{ltc_mem_ref_data47,2005
    opnd_t opnd;48,2030
    int vals[vals49,2047
    int addresses[addresses50,2089
struct ltc_data{ltc_data52,2139
    struct ltc_mem_ref_data *mem_refs;mem_refs53,2156
    int num_mem_addresses;54,2195
    int num_mem_samples;55,2222
    bool ltc_already_optimized;56,2247
#define TRANSPOSE 95,4140
#define NO_TRANSPOSE 96,4163

x86/mangle.c,5714
#define POST 72,2768
#define PRE 73,2807
    SLOT_NONE 82,3054
    SLOT_REG,83,3073
    SLOT_LOCAL,84,3087
    SLOT_FLAGS,85,3103
typedef byte slot_kind_t;87,3122
typedef struct _slot_t 94,3312
    slot_kind_t kind;95,3337
    byte value;96,3359
} slot_t;97,3375
typedef struct _callee_info_t 100,3441
    bool bailout;101,3473
    uint num_args;102,3545
    int num_instrs;103,3616
    app_pc start;104,3695
    app_pc bwd_tgt;105,3758
    app_pc fwd_tgt;106,3826
    int num_xmms_used;107,3889
    bool xmm_used[xmm_used108,3955
    bool reg_used[reg_used109,4019
    int num_callee_save_regs;110,4091
    bool callee_save_regs[callee_save_regs111,4155
    bool has_locals;112,4223
    bool xbp_is_fp;113,4288
    bool opt_inline;114,4356
    bool write_aflags;115,4414
    bool read_aflags;116,4481
    bool tls_used;117,4558
    reg_id_t spill_reg;118,4633
    uint slots_used;119,4699
    slot_t scratch_slots[scratch_slots120,4771
    instrlist_t *ilist;ilist121,4856
} callee_info_t;122,4933
static callee_info_t     default_callee_info;123,4950
static clean_call_info_t default_clean_call_info;124,4996
static generic_table_t  *callee_info_table;callee_info_table128,5120
static bool callee_info_table_exit 130,5241
#define INIT_HTABLE_SIZE_CALLEE 131,5285
callee_info_init(134,5358
callee_info_free(158,6112
callee_info_create(170,6446
callee_info_reserve_slot(183,6756
callee_info_slot_opnd(200,7385
callee_info_table_init(220,8168
callee_info_table_destroy(232,8598
callee_info_table_lookup(239,8755
callee_info_table_add(254,9244
clean_call_info_init(279,10139
convert_to_near_rel_common(301,10931
convert_to_near_rel_meta(440,16943
convert_to_near_rel(446,17099
remangle_short_rewrite(464,17854
get_clean_call_switch_stack_size(497,19116
get_clean_call_temp_stack_size(506,19287
insert_out_of_line_context_switch(512,19401
insert_clear_eflags(539,20508
insert_push_all_registers(571,21788
insert_pop_all_registers(684,27160
insert_get_mcontext_base(797,32157
clean_call_beyond_mcontext(814,32807
#define NUM_EXTRA_SLOTS 849,34275
prepare_for_clean_call(851,34323
cleanup_after_clean_call(960,38927
parameters_stack_padded(1026,41385
shrink_reg_for_param(1032,41501
insert_parameter_preparation(1075,43338
insert_meta_call_vargs(1392,59775
insert_clean_call_with_arg_jmp_if_ret_true(1431,61378
insert_reachable_cti(1479,63458
insert_mov_immed_common(1552,66479
insert_mov_immed_ptrsz(1621,69440
insert_mov_instr_addr(1630,69757
insert_push_immed_common(1646,70338
insert_push_immed_ptrsz(1695,72256
insert_push_instr_addr(1704,72561
stack_entry_size(1714,72965
insert_push_retaddr(1752,73953
insert_mov_ptr_uint_beyond_TOS(1789,75589
insert_push_cs(1833,77420
get_call_return_address(1859,78308
#define SAVE_TO_DC_OR_TLS(1916,80831
#define SAVE_TO_DC_OR_TLS_OR_REG(1922,81228
mangle_far_direct_helper(1928,81546
mangle_direct_call(1977,83917
mangle_seg_ref_opnd(2068,87621
mangle_far_indirect_helper(2123,89654
mangle_indirect_call(2198,92965
mangle_far_return_save_selector(2307,97488
mangle_return(2329,98413
mangle_indirect_jump(2530,107832
mangle_far_direct_jump(2595,110591
cti_is_normal_elision(2611,111106
find_syscall_num(2638,111893
mangle_insert_clone_code(2712,114878
mangle_syscall(2787,117902
mangle_clone_code(3012,128260
mangle_syscall_code(3069,130269
mangle_interrupt(3151,133353
#define FNSAVE_PC_OFFS 3177,134183
#define FXSAVE_PC_OFFS 3178,134210
#define FXSAVE_SIZE 3179,134237
float_pc_update(3182,134270
mangle_float_pc(3230,136279
#define CPUID_0_EAX 3374,142820
#define CPUID_0_EBX 3375,142852
#define CPUID_0_ECX 3376,142883
#define CPUID_0_EDX 3377,142914
#define CPUID_1_EAX 3380,143085
#define CPUID_1_EBX 3381,143116
#define CPUID_1_ECX 3382,143147
#define CPUID_1_EDX 3383,143178
mangle_cpuid(3386,143222
mangle_exit_cti_prefixes(3467,146038
mangle_rel_addr(3503,147414
instr_get_seg_ref_dst_idx(3645,154213
instr_get_seg_ref_src_idx(3663,154655
static ushort tls_slots[tls_slots3680,155086
mangle_mov_seg(3687,155296
mangle_seg_ref(3786,158882
mangle(3894,162938
#undef SAVE_TO_DC_OR_TLS4117,171868
# define SAVE_TO_DC_OR_TLS(4120,171985
# define RESTORE_FROM_DC_OR_TLS(4122,172096
# define SAVE_TO_DC_OR_TLS(4125,172223
# define RESTORE_FROM_DC_OR_TLS(4127,172338
sandbox_rep_instr(4132,172483
sandbox_write(4306,180021
sandbox_top_of_bb_check_s2ro(4506,188959
sandbox_top_of_bb(4516,189366
insert_selfmod_sandbox(4799,201040
static bool selfmod_s2ro[selfmod_s2ro4918,206728
static uint selfmod_eflags[selfmod_eflags4919,206774
#define SELFMOD_NUM_S2RO 4920,206857
#define SELFMOD_NUM_EFLAGS 4921,206931
static app_pc selfmod_gt4G[selfmod_gt4G4923,207065
# define SELFMOD_NUM_GT4G 4924,207151
set_selfmod_sandbox_offsets(4932,207435
finalize_selfmod_sandbox(4993,210005
#define MAX_NUM_FUNC_INSTRS 5017,211013
#define MAX_NUM_INLINE_INSTRS 5019,211115
mangle_init(5022,211154
mangle_exit(5037,211571
decode_callee_instr(5048,211772
check_callee_instr(5082,212844
check_callee_ilist(5214,218273
decode_callee_ilist(5259,219858
analyze_callee_regs_usage(5277,220355
analyze_callee_save_reg(5394,224879
analyze_callee_tls(5531,230789
analyze_callee_pick_spill_reg(5570,232196
analyze_callee_inline(5598,233208
analyze_callee_ilist(5830,242923
analyze_clean_call_aflags(5849,243562
analyze_clean_call_regs(5883,245030
analyze_clean_call_args(5955,248056
analyze_clean_call_inline(5981,248965
analyze_clean_call(6058,251642
insert_inline_reg_save(6105,253366
insert_inline_reg_restore(6153,255271
insert_inline_arg_setup(6192,256649
insert_inline_clean_call(6286,260340
analyze_clean_call(6340,262363

x86/optimize.c,5563
optimize_trace(131,5733
    uint loads_removed_from_loads;219,8105
    uint loads_removed_from_stores;220,8140
    uint ctis_in_load_removal;221,8176
    int reg_overwritten;222,8207
    int val_saved_in_dead_reg;223,8232
    uint loads_examined;224,8263
    int incs_examined;226,8307
    int incs_replaced;227,8330
    int loops_unrolled;229,8373
    int vals_spilled_to_xmm;231,8414
    int loads_replaced_by_xmm;232,8443
    int xmm_saves_to_mem;233,8474
    int stores_replaced_by_xmm;234,8500
    int xmm_restored_from_memory;235,8532
    int xmm_mov_to_dead_reg;236,8566
    int loadstore_combos_replaced_by_xmm;237,8595
    int xmm_traces;238,8637
    int mmx_traces;239,8657
    int num_instrs_simplified;241,8708
    int num_fail_simplified;242,8739
    int num_opnds_simplified;243,8768
    int num_const_add_const_mem;244,8798
    int num_jmps_simplified;245,8831
    int num_jecxz_instrs_removed;246,8860
    int dead_loads_removed;248,8922
    int xors_removed;250,8990
    int num_stack_adjust_removed;252,9049
    int pre_num_instrs_seen;254,9106
    int pre_num_jmps_seen;255,9135
    int post_num_instrs_seen;256,9162
    int post_num_jmps_seen;257,9192
    int num_returns_removed;259,9251
    int num_return_instrs_removed;260,9280
    bool i64_test;262,9335
    int ia64_num_entries;263,9354
} opt_stats_t;265,9387
print_optimization_stats(271,9562
generate_antialias_check(363,14121
#define MAX_INDUCTION_VARS 388,15186
#define MAX_LCDS 389,15215
#define MAX_INVARIANTS 390,15235
identify_for_loop(393,15274
unroll_loops(824,32491
static bool have_done 1074,41765
static bool checked 1075,41796
static int test1;1076,41825
static int test2;1077,41843
static int test3;1078,41861
test_i64(1081,41893
instr_counts(1219,47613
#define PS_VALID_VAL 1248,48565
#define PS_LVALID_VAL 1249,48597
#define PS_HVALID_VAL 1250,48674
#define PS_KEEP 1251,48706
#define NUM_CONSTANT_ADDRESS 1253,48739
#define NUM_STACK_SLOTS 1254,48772
static int cp_global_aggr;1257,48803
static int cp_local_aggr;1258,48830
typedef struct _prop_state_t 1261,48906
    dcontext_t *dcontext;dcontext1262,48937
    instrlist_t *trace;trace1263,48963
    instr_t *hint;hint1264,48987
    byte reg_state[reg_state1265,49006
    int reg_vals[reg_vals1266,49029
    int addresses[addresses1268,49077
    int address_vals[address_vals1269,49118
    byte address_state[address_state1270,49162
    int cur_scope;1273,49225
    int stack_offsets_ebp[stack_offsets_ebp1275,49245
    int stack_vals[stack_vals1276,49289
    int stack_scope[stack_scope1278,49327
    byte stack_address_state[stack_address_state1279,49365
    bool lost_scope_count;1281,49454
} prop_state_t;1282,49481
set_stack_val(1286,49513
update_stack_val(1316,50511
check_stack_val(1340,51253
clear_stack_val(1359,51767
set_address_val(1378,52377
update_address_val(1407,53367
clear_address_val(1430,54052
get_immutable_value(1450,54608
opnd_is_stack_address(1497,56011
const_address_const_mem(1507,56314
propagate_address(1542,57530
propagate_opnd(1606,59400
check_flag_val(1723,63806
compare_flag_vals(1737,64271
removable_jmp(1754,64814
do_forward_check_eflags(1835,67852
forward_check_eflags(1967,74233
make_imm_store(1973,74433
make_to_imm_store(1980,74677
make_to_nop(2018,76438
calculate_zf_pf_sf(2037,77065
prop_simplify(2060,77720
get_trace_constant(2470,96102
update_prop_state(2483,96824
typedef struct _two_entry_list_element_t 2628,104273
    int disp;2629,104316
    int scope;2630,104330
    struct _two_entry_list_element_t * next;2631,104345
} two_entry_list_element_t;2632,104390
typedef struct _start_list_element_t 2634,104419
    int endscope;2635,104458
    two_entry_list_element_t * next;2636,104476
} start_list_element_t;2637,104513
handle_stack(2645,104754
constant_propagation(2715,107856
remove_unnecessary_zeroing(2864,112981
#define NUM_ADD_CACHE 2922,115125
#define ADD_KEEP 2923,115151
#define ADD_DEAD 2924,115173
static int dc_global_aggr;2926,115196
static int dc_local_aggr;2927,115223
add_address(2930,115262
address_is_dead(2951,115851
address_set_dead(2961,116100
add_init(2980,116565
add_stack_address(2993,117295
stack_address_is_dead(3017,117984
stack_address_set_dead(3029,118306
remove_dead_code(3044,118715
is_stack_adjustment(3285,129770
get_stack_adjustment(3304,130545
set_stack_adjustment(3318,130931
stack_adjust_combiner(3337,131446
check_eflags_cr(3478,138342
remove_return_no_save_eflags(3497,138902
remove_return(3585,141842
is_return(3704,146183
check_return(3751,147774
#define CALL_RETURN_STACK_SIZE 3778,148686
call_return_matching(3783,148838
peephole_optimize(3848,151450
replace_inc_with_add(3894,153309
#define MAX_DIST 3981,156793
remove_redundant_loads(3983,156820
find_dead_register_across_instrs(4235,167924
find_dead_register_across_instrs_H(4255,168386
#define MIN_PREFETCH_DISTANCE 4302,169553
prefetch_optimize_trace(4305,169598
is_store_to_ecxoff(4404,173318
is_load_from_ecxoff(4413,173667
opnd_is_constant_address(4423,174080
is_zeroing_instr(4430,174285
is_dead_register(4440,174557
find_dead_register(4462,175160
is_dead_reg(4477,175565
replace_inst(4500,176204
remove_inst(4509,176440
instruction_affects_mem_access(4517,176669
safe_write(4533,177126
instr_get_src_mem_access(4550,177532
find_next_self_loop(4567,177861
replace_self_loop_with_instr(4586,178249
get_decision_instr(4618,179458
propagate_down(4637,179883
check_down(4654,180311
is_nop(4667,180865

x86/proc.c,1673
# undef ASSERT_TRUNCATE52,2373
# undef ASSERT_BITFIELD_TRUNCATE53,2397
# undef ASSERT_NOT_REACHED54,2430
# define ASSERT_TRUNCATE 55,2457
# define ASSERT_BITFIELD_TRUNCATE 56,2526
# define ASSERT_NOT_REACHED 57,2604
#define INTEL_EBX 61,2740
#define INTEL_EDX 62,2780
#define INTEL_ECX 63,2820
#define AMD_EBX 66,2915
#define AMD_EDX 67,2953
#define AMD_ECX 68,2991
size_t cache_line_size 75,3221
static ptr_uint_t mask;76,3250
static uint L1_icache_size 78,3328
static uint L1_dcache_size 79,3377
static uint L2_cache_size 80,3426
static uint vendor 82,3476
static uint family 83,3515
static uint type 84,3541
static uint model 85,3567
static uint stepping 86,3593
static features_t features 92,3755
static uint brand_string[brand_string98,3990
set_cache_size(101,4060
get_cache_sizes_amd(119,4743
get_cache_sizes_intel(144,5447
get_processor_specific_info(218,8509
proc_init(375,13724
proc_get_vendor(429,16117
proc_set_vendor(436,16174
proc_get_family(452,16571
uint proc_get_type(457,16617
uint proc_get_model(463,16710
uint proc_get_stepping(468,16759
proc_has_feature(474,16819
proc_get_all_feature_bits(497,17423
proc_get_brand_string(503,17489
proc_get_L1_icache_size(509,17568
proc_get_L1_dcache_size(515,17643
proc_get_L2_cache_size(521,17718
proc_get_cache_size_str(527,17791
proc_get_cache_line_size(546,18175
proc_is_cache_aligned(553,18288
proc_bump_to_end_of_cache_line(561,18498
proc_get_containing_page(571,18768
machine_cache_sync(579,18995
proc_fpstate_save_size(589,19192
proc_save_fpstate(615,20243
proc_restore_fpstate(649,21212
dr_insert_save_fpstate(679,22029
dr_insert_restore_fpstate(705,23285

x86/proc.h,3786
#define _PROC_H_ 43,2003
#define PAGE_SIZE 56,2371
#define PAGE_START(59,2502
    VENDOR_INTEL,63,2619
    VENDOR_AMD,64,2697
    VENDOR_UNKNOWN,65,2773
#define FAMILY_IA64 90,3952
#define FAMILY_LLANO 94,4086
#define FAMILY_ITANIUM_2_DC 95,4171
#define FAMILY_K8_MOBILE 96,4259
#define FAMILY_ITANIUM_2 97,4348
#define FAMILY_K8L 98,4433
#define FAMILY_K8 99,4516
#define FAMILY_PENTIUM_4 100,4598
#define FAMILY_P4 101,4683
#define FAMILY_ITANIUM 102,4768
#define FAMILY_P6 104,4928
#define FAMILY_IVYBRIDGE 105,5013
#define FAMILY_SANDYBRIDGE 106,5098
#define FAMILY_NEHALEM 107,5185
#define FAMILY_CORE_I7 108,5268
#define FAMILY_CORE_2 109,5351
#define FAMILY_CORE 110,5433
#define FAMILY_PENTIUM_M 111,5513
#define FAMILY_PENTIUM_3 112,5598
#define FAMILY_PENTIUM_2 113,5683
#define FAMILY_PENTIUM_PRO 114,5768
#define FAMILY_ATHLON 115,5855
#define FAMILY_K7 116,5937
#define FAMILY_P5 118,6039
#define FAMILY_PENTIUM 119,6124
#define FAMILY_K6 120,6207
#define FAMILY_K5 121,6285
#define FAMILY_486 123,6373
#define MODEL_IVYBRIDGE 128,6573
#define MODEL_I7_WESTMERE_EX 129,6642
#define MODEL_SANDYBRIDGE_E 130,6721
#define MODEL_I7_WESTMERE 131,6804
#define MODEL_SANDYBRIDGE 132,6872
#define MODEL_I7_CLARKDALE 133,6943
#define MODEL_I7_HAVENDALE 134,7031
#define MODEL_I7_CLARKSFIELD 135,7119
#define MODEL_ATOM_CEDARVIEW 136,7208
#define MODEL_ATOM_LINCROFT 137,7282
#define MODEL_ATOM 138,7355
#define MODEL_I7_GAINESTOWN 139,7419
#define MODEL_CORE_PENRYN 140,7497
#define MODEL_CORE_2 141,7570
#define MODEL_CORE 142,7649
#define MODEL_PENTIUM_M 143,7719
#define MODEL_PENTIUM_M_1MB 144,7795
    uint flags_edx;151,8002
    uint flags_ecx;152,8070
    uint ext_flags_edx;153,8138
    uint ext_flags_ecx;154,8215
} features_t;155,8292
    FEATURE_FPU 163,8514
    FEATURE_VME 164,8590
    FEATURE_DE 165,8661
    FEATURE_PSE 166,8729
    FEATURE_TSC 167,8797
    FEATURE_MSR 168,8864
    FEATURE_PAE 169,8937
    FEATURE_MCE 170,9012
    FEATURE_CX8 171,9084
    FEATURE_APIC 172,9163
    FEATURE_SEP 173,9243
    FEATURE_MTRR 174,9308
    FEATURE_PGE 175,9384
    FEATURE_MCA 176,9451
    FEATURE_CMOV 177,9526
    FEATURE_PAT 178,9603
    FEATURE_PSE_36 179,9672
    FEATURE_PSN 180,9747
    FEATURE_CLFSH 181,9832
    FEATURE_DS 182,9910
    FEATURE_ACPI 183,9970
    FEATURE_MMX 184,10050
    FEATURE_FXSR 185,10123
    FEATURE_SSE 186,10196
    FEATURE_SSE2 187,10269
    FEATURE_SS 188,10343
    FEATURE_HTT 189,10402
    FEATURE_TM 190,10477
    FEATURE_IA64 191,10551
    FEATURE_PBE 192,10617
    FEATURE_SSE3 194,10721
    FEATURE_PCLMULQDQ 195,10795
    FEATURE_MONITOR 196,10866
    FEATURE_DS_CPL 197,10951
    FEATURE_VMX 198,11025
    FEATURE_EST 199,11100
    FEATURE_TM2 200,11178
    FEATURE_SSSE3 201,11244
    FEATURE_CID 202,11319
    FEATURE_FMA 203,11379
    FEATURE_CX16 204,11454
    FEATURE_xPTR 205,11535
    FEATURE_SSE41 206,11611
    FEATURE_SSE42 207,11687
    FEATURE_MOVBE 208,11763
    FEATURE_POPCNT 209,11830
    FEATURE_AES 210,11898
    FEATURE_XSAVE 211,11973
    FEATURE_OSXSAVE 212,12041
    FEATURE_AVX 213,12122
    FEATURE_SYSCALL 215,12241
    FEATURE_XD_Bit 216,12327
    FEATURE_EM64T 217,12397
    FEATURE_LAHF 219,12519
} feature_bit_t;220,12602
    CACHE_SIZE_8_KB,231,12903
    CACHE_SIZE_16_KB,232,12964
    CACHE_SIZE_32_KB,233,13026
    CACHE_SIZE_64_KB,234,13088
    CACHE_SIZE_128_KB,235,13150
    CACHE_SIZE_256_KB,236,13213
    CACHE_SIZE_512_KB,237,13276
    CACHE_SIZE_1_MB,238,13339
    CACHE_SIZE_2_MB,239,13400
    CACHE_SIZE_UNKNOWN 240,13461
} cache_size_t;241,13522
#define CACHE_LINE_SIZE(248,13632
#define XCR0_AVX 251,13713
#define XCR0_SSE 252,13732
#define XCR0_FP 253,13751

x86/retcheck.c,2601
#define SSE2_USE_STACK_POINTER 80,3119
#define USE_LOCAL_MPROT_STACK 83,3206
#define POST 91,3419
#define PRE 92,3453
emit_pextrw(107,3852
check_return_handle_call(148,5295
check_return_handle_return(226,8692
finalize_return_check(326,13238
typedef struct _call_stack_32 392,15822
    byte retaddr[retaddr393,15854
    struct _call_stack_32 *next;next394,15879
} call_stack_32_t;395,15912
check_return_too_deep(402,16065
check_return_too_shallow(496,19013
check_return_ra_mangled(569,21616
check_return_handle_call(609,23020
check_debug_regs(699,27143
check_debug(713,27727
check_return_handle_return(754,29197
finalize_return_check(894,35337
typedef struct _call_stack_32 898,35401
    byte retaddr[retaddr899,35433
    struct _call_stack_32 *next;next900,35458
} call_stack_32_t;901,35491
check_return_too_deep(908,35644
check_return_too_shallow(1004,38670
check_return_ra_mangled(1082,41342
add_call_site(1151,43727
find_call_site(1159,43951
is_observed_call_site(1169,44199
start_enforcing(1175,44340
add_return_target(1213,45634
unsigned first_ret_from[first_ret_from1251,47402
    RETURN_FROM_EXPECTED_CALLEE 1254,47484
    RETURN_FOR_FIRST_TIME 1255,47536
    RETURN_UNKNOWN_CALLEE 1260,47850
reverse_check_ret_source(1265,47912
at_iret_exception(1284,48627
at_pushregret_exception(1316,49925
at_vbjmp_exception(1349,51248
at_vbpop_exception(1384,52720
at_mso_rct_exception(1424,54624
    enum {MSO_PATTERN_SIZE MSO_PATTERN_SIZE1499,57993
          MSO_PATTERN_ADD_ESP 1500,58040
          MSO_PATTERN_ADD_ESP            = 0xc483,xc4831500,58040
          MSO_PATTERN_LEA_EBX_OFFSET 1501,58091
          MSO_PATTERN_LEA_EBX 1502,58137
          MSO_PATTERN_LEA_EBX            = 0x1d8d,x1d8d1502,58137
          MSO_PATTERN_LEA_EBX_DISP_OFFSET=1503,58188
          MSO_PATTERN_LEA_EBX_DISP_OFFSET= 2 + MSO_PATTERN_LEA_EBX_OFFSET,1503,58188
          MSO_PATTERN_POPAD_POPFD_OFFSET 1504,58263
          MSO_PATTERN_POPAD_POPFD 1505,58310
          MSO_PATTERN_POPAD_POPFD        = 0x9d61,x9d611505,58310
          MSO_PATTERN_MAX_AC_OFFSET 1506,58361
licdll_pattern_match(1609,62225
    enum {LICDLL_PATTERN_SIZE LICDLL_PATTERN_SIZE1611,62289
          LICDLL_PATTERN_MOV_EDX_ESP_24 1612,62339
          LICDLL_PATTERN_MOV_EDX_ESP_24     = 0x2424548b,x2424548b1612,62339
          LICDLL_PATTERN_24_POPFD_OFFSET 1613,62397
          LICDLL_PATTERN_24_POPFD_POPAD_RET 1614,62447
          LICDLL_PATTERN_24_POPFD_POPAD_RET = 0xc3619d24xc3619d241614,62447
at_licdll_rct_exception(1642,63195
ret_after_call_check(1685,65048

x86/sideline.c,2677
#    define RUN_SIG 52,2211
#    define RUN_SIG60,2519
     typedef pid_t thread_t;61,2539
#    define THREAD_STACK_SIZE 62,2568
#define OPTVERB_3 81,2995
#define VERB_3 83,3034
#define VERB_2 84,3051
#define SAMPLE_COUNT_THRESHOLD 87,3129
#define SAMPLE_TO_OPTIMIZE_RATIO 89,3236
volatile fragment_t * sideline_trace;95,3425
int num_processors;98,3508
thread_id_t pause_for_sideline;101,3593
event_t paused_for_sideline_event;102,3625
event_t resume_from_sideline_event;103,3660
file_t logfile;108,3802
typedef struct _sample_entry_t 123,4412
    ptr_uint_t    tag;124,4445
    int     counter;125,4468
    struct  _sample_entry_t * next;126,4489
} sample_entry_t;127,4555
typedef struct _sample_table_t 129,4574
    uint  hash_bits;130,4607
    uint  hash_mask;131,4628
    hash_function_t  hash_func;132,4649
    uint           hash_mask_offset;133,4681
    uint  capacity;134,4757
    uint  entries;135,4777
    mutex_t         lock;136,4796
    sample_entry_t **table;table137,4868
} sample_table_t;138,4938
#define INITIAL_HASH_BITS 140,4957
static sample_table_t table;142,4987
static fragment_t * fragment_now_optimizing;144,5103
typedef struct _remember_entry_t 151,5322
    fragment_t  *f;f152,5357
    fragment_t  *replacement;replacement154,5405
    struct _remember_entry_t * next;156,5442
} remember_entry_t;157,5479
typedef struct _remember_list_t 159,5500
    dcontext_t *dcontext;dcontext160,5534
    remember_entry_t *list;list161,5560
    struct _remember_list_t * next;162,5588
} remember_list_t;163,5624
static remember_list_t *remember;remember165,5644
static int num_samples;168,5763
static int num_optimized;171,5801
static int num_opt_with_no_synch;172,5827
static thread_id_t child_tid;178,5978
static HANDLE child_handle;180,6023
static thread_t child;182,6068
static void *stack;stack183,6091
static event_t wake_event;186,6119
static event_t asleep_event;187,6146
static event_t exited_event;188,6175
static volatile bool child_sleep;191,6265
static volatile bool child_exit;192,6299
sideline_init(218,7156
sideline_exit(298,9652
add_sideline_prefix(386,12151
finalize_sideline_prefix(396,12531
remove_sideline_profiling(409,12930
sideline_start(422,13374
sideline_stop(432,13573
sideline_run(446,13952
optimize_trace_wrapper(484,15022
sideline_sample(490,15171
sideline_examine_traces(525,16418
sideline_optimize(579,18326
sideline_cleanup_replacement(771,25649
find_hottest_entry(834,27785
update_sample_entry(854,28220
sideline_fragment_delete(887,28998
remove_sample_entry(904,29569
add_remember_entry(925,30136
create_thread(973,31715
delete_thread(1002,32589

x86/sideline.h,30
#define _SIDELINE_H_ 41,1873

x86/steal_reg.c,155
restore_state(92,3542
expand_pusha(135,4957
expand_popa(168,6063
use_edi(213,8030
use_different_reg(270,10462
use_ebx(409,16122
steal_reg(444,17269

x86/steal_reg.h,136
#define X86_STEAL_REG_H40,1913
#define EDI_VAL_IN_MEM 58,2888
#define EDI_VAL_IN_EBX 59,2913
#define EDI_VAL_IN_EBX_AND_MEM 60,2938

x86/x86_code.c,264
get_xmm_vals(52,2281
thread_starting(67,2690
dynamo_start(79,3011
auto_setup(121,4579
native_get_retstack_idx(209,7532
new_thread_setup(229,8271
nt_continue_setup(286,10219
safe_read_fast(335,11944
is_safe_read_pc(347,12246
safe_read_resume_pc(355,12426

x86/x86_to_x64.c,582
static const reg_id_t pushad_registers[pushad_registers49,2182
pre(54,2418
replace(62,2672
opnd_change_base_reg_to_64(71,2929
instr_is_string_operation(111,4436
instr_change_base_reg_to_64(130,5016
translate_indirect_jump(158,6090
translate_indirect_call(178,6817
translate_push(201,7742
translate_push_imm(275,11101
translate_pop(322,12855
translate_pusha(384,15525
translate_popa(425,17326
translate_into(466,19252
translate_load_far_pointer(480,19732
translate_leave(512,21113
translate_pushf(534,22008
translate_popf(562,23239
translate_x86_to_x64(582,24041

buildmark.c,190
const char dynamorio_buildmark[dynamorio_buildmark38,1802
const char dynamorio_buildmark[dynamorio_buildmark40,1866
const char dynamorio_version_string[dynamorio_version_string43,1920

config.c,2840
# define GLOBAL_CONFIG_DIR 52,2066
# define LOCAL_CONFIG_ENV 53,2110
# define LOCAL_CONFIG_SUBDIR 54,2143
# define GLOBAL_CONFIG_SUBDIR 55,2185
# define LOCAL_CONFIG_ENV 57,2224
# define LOCAL_CONFIG_SUBDIR 58,2264
# define GLOBAL_CONFIG_SUBDIR 59,2305
#define CFG_SFX_64 65,2461
#define CFG_SFX_32 66,2491
# define CFG_SFX 68,2532
# define CFG_SFX 70,2566
# define VERBOSE 75,2673
# define VERBOSE 77,2698
# undef ASSERT82,2877
# undef ASSERT_NOT_IMPLEMENTED83,2892
# undef ASSERT_NOT_TESTED84,2923
# undef ASSERT_NOT_REACHED85,2949
# undef FATAL_USAGE_ERROR86,2976
# undef USAGE_ERROR87,3002
# define ASSERT(88,3022
# define ASSERT_NOT_IMPLEMENTED(89,3055
# define ASSERT_NOT_TESTED(90,3104
# define ASSERT_NOT_REACHED(91,3148
# define FATAL_USAGE_ERROR(92,3192
# define USAGE_ERROR(93,3241
#   define print_file(97,3370
#   define print_file(99,3445
#  define print_file(102,3502
# undef STDERR104,3557
# define STDERR 105,3572
# undef our_snprintf106,3595
#  define our_snprintf 108,3632
#  define our_snprintf 110,3672
# undef DECLARE_NEVERPROT_VAR112,3712
# define DECLARE_NEVERPROT_VAR(113,3742
# define INFO(118,3870
# define INFO(122,4013
static const char *const config_var[config_var126,4112
static const wchar_t *const w_config_var[w_config_var140,4484
#define NUM_CONFIG_VAR 154,4875
typedef struct _config_val_t 159,5029
    char val[val160,5060
    bool has_value;162,5139
    bool app_specific;164,5223
    bool from_env;165,5246
} config_val_t;166,5265
typedef struct _config_vals_t 168,5282
    config_val_t vals[vals169,5314
} config_vals_t;170,5353
typedef struct _config_info_t 172,5371
    char fname_app[fname_app173,5403
    char fname_default[fname_default174,5437
    const char *query;query181,5831
            config_val_t answer;184,5883
            bool have_answer;185,5916
        } q;186,5946
        config_vals_t *v;v187,5959
    } u;188,5985
    bool has_1config;189,5994
} config_info_t;190,6016
static config_vals_t myvals;192,6034
static config_info_t config;193,6063
static bool config_initialized;194,6092
static config_info_t *config_reread_info;config_reread_info201,6424
static config_vals_t *config_reread_vals;config_reread_vals202,6466
my_getenv(206,6585
get_config_val_ex(223,6992
get_config_val(246,7727
set_config_from_env(252,7823
process_config_line(275,8721
read_config_file(331,11268
#   define BUFSIZE 340,11756
config_read(403,14070
config_reread(513,18838
get_config_val_other(584,21512
get_config_val_other_app(612,22578
get_config_val_other_arch(630,23261
config_init(638,23587
config_heap_init(650,23870
config_heap_exit(661,24231
config_exit(678,24674
get_parameter_ex(699,25339
get_parameter(720,25992
get_unqualified_parameter(726,26115
config_init(735,26355
config_exit(740,26383

config.h,84
#define _CONFIG_H_ 39,1824
# define PARAM_STR(79,2705
# define PARAM_STR(90,2995

dispatch.h,288
#define _DISPATCH_H_ 40,1905
#define NO_HOOK 86,3761
#define HOOK_ENABLED_HELPER 88,3802
#define HOOK_ENABLED 90,3858
#define ENTER_DR_HOOK 92,3942
#define EXIT_DR_HOOK 93,4010
#define ENTERING_DR(95,4078
#define EXITING_DR(100,4189
#define BACK_TO_NATIVE_AFTER_SYSCALL 107,4375

dispatch_no_threading_bkp.c,2074
# define CPU_SETSIZE 58,2226
# define CPU_SET(59,2261
# define CPU_CLR(60,2340
# define CPU_ISSET(61,2419
# define CPU_ZERO(63,2509
# define CPU_COUNT(64,2580
# define DISPLAY_STRING(73,2928
# define DISPLAY_STRING(75,2982
#define NULL_TERMINATE(78,3043
static struct timeval itr1_start_time,81,3148
static struct timeval itr1_start_time,itr1_end_time,81,3148
static struct timeval itr1_start_time,itr1_end_time,total_itr1_time;81,3148
static struct timeval itr1_start_time,84,3225
static struct timeval itr1_start_time,itr1_end_time,84,3225
static struct timeval itr1_start_time,itr1_end_time,total_itr1_time;84,3225
static unsigned long long sn_tr_cnt=86,3357
long total_sec_sn=116,3774
long total_usec_sn=117,3813
static int sn_fragment_instr_cnt1[sn_fragment_instr_cnt1118,3854
found_client_sysenter(166,5162
void pk_dummy_func(175,5460
void __attribute__ ((noinline)) pk_phase_change_dummy(186,5592
void __attribute__ ((noinline)) pk_set_affinity(195,5770
dispatch(244,7168
is_stopping_point(972,38178
dispatch_enter_fcache_stats(1000,39042
dispatch_enter_fcache(1080,42756
enter_fcache(1226,49564
handle_special_tag(1269,50921
dispatch_at_stopping_point(1288,51603
dispatch_enter_native(1326,52948
dispatch_enter_dynamorio(1379,55456
dispatch_exit_fcache(1618,67076
dispatch_exit_fcache_stats(1846,77593
adjust_syscall_continuation(2361,99432
handle_system_call(2395,100957
handle_post_system_call(2651,112640
handle_callback_return(2709,114611
issue_last_system_call_from_app(2759,116801
transfer_to_dispatch(2781,117612
long get_total_comp_time(2811,118790
int get_dispatch_call_cnt(2815,118847
int* get_frag_instr_cnt_arr(2819,118910
void __attribute__ ((noinline)) sn_fcache_exit_syscalls_subcat1(2824,119039
void __attribute__ ((noinline)) sn_fcache_exit_ind_br_subcat2(2830,119309
void __attribute__ ((noinline)) sn_fcache_exit_dir_br_subcat3(2836,119628
void __attribute__ ((noinline)) sn_fcache_exit_no_dir_link_subcat4(2842,119967
void __attribute__ ((noinline)) sn_fcache_exit_dir_syscall_subcat5(2848,120255

emit.c,337
#define STATS_FCACHE_ADD(61,2409
get_last_fragment_body_instr_pc(78,3192
stress_test_recreate(95,3720
final_exit_shares_prev_stub(143,5734
set_linkstub_fields(187,7791
emit_fragment_common(404,17299
emit_invisible_fragment(1005,42850
emit_fragment(1019,43424
emit_fragment_ex(1033,43944
emit_fragment_as_replacement(1045,44431

emit.h,26
#define _EMIT_H_ 42,1932

fcache.c,9507
#define FCACHE_OPTION(69,2920
#define MAX_SINGLE_MULTIPLE 87,3832
#define MIN_EMPTY_HOLE(117,5192
#define MIN_UNIT_END_HOLE(127,5632
#define START_PC_ALIGNMENT 130,5744
#define SLOT_ALIGNMENT(138,6129
typedef struct _live_header_t 148,6643
    fragment_t *f;f150,6739
} live_header_t;151,6758
#define HEADER_SIZE(156,6926
#define HEADER_SIZE_FROM_CACHE(158,7021
typedef struct _empty_slot_t 186,8282
    cache_pc  start_pc;187,8313
    uint      flags;191,8515
    fragment_t  *next_fcache;next_fcache192,8536
    fragment_t  *prev_fcache;prev_fcache193,8614
    uint      fcache_size;194,8692
} empty_slot_t;197,8926
#define FRAG_EMPTY(201,9018
#define FRAG_START(203,9080
#define FRAG_START_ASSIGN(210,9437
#define FRAG_START_PADDING(219,9795
#define FRAG_HDR_START(226,10257
#define FRAG_SIZE(228,10341
#define FRAG_SIZE_ASSIGN(236,10754
#define FIFO_NEXT(248,11677
#define FIFO_NEXT_ASSIGN(252,11874
#define FIFO_PREV(261,12160
#define FIFO_PREV_ASSIGN(265,12357
#define FRAG_TAG(274,12643
# define FRAG_ID(278,12769
#define FIFO_UNIT(281,12853
#define USE_FIFO(288,13140
#define USE_FREE_LIST(289,13193
#define USE_FIFO_FOR_CACHE(291,13318
#define USE_FREE_LIST_FOR_CACHE(292,13366
static const uint FREE_LIST_SIZES[FREE_LIST_SIZES298,13631
#define FREE_LIST_SIZES_NUM 315,14407
typedef struct _free_list_header_t 336,15383
    struct _free_list_header_t *next;next337,15420
    ushort flags;350,16242
    ushort size;351,16260
    struct _free_list_header_t *prev;prev352,16277
} free_list_header_t;353,16315
typedef struct _free_list_footer_t 359,16538
    ushort size;360,16575
} free_list_footer_t;361,16592
#define MAX_FREE_ENTRY_SIZE 363,16615
#define FRAG_IS_FREE_LIST(369,16859
#define FRAG_NEXT_SLOT(374,17079
#define FRAG_NEXT_FREE(377,17207
#define MIN_FCACHE_SLOT_SIZE(384,17550
#define UNIT_RESERVED_SIZE(392,17782
typedef struct _fcache_unit_t 394,17862
    cache_pc start_pc;395,17894
    cache_pc end_pc;396,17963
    cache_pc cur_pc;397,18045
    cache_pc reserved_end_pc;398,18120
    size_t size;399,18193
    bool full;400,18273
    struct _fcache *cache;cache401,18349
    dcontext_t *dcontext;dcontext403,18465
    bool writable;405,18498
    bool was_trace;410,18717
    bool was_shared;411,18737
    profile_t *profile;profile412,18758
    bool pending_free;414,18789
    bool pending_flush;416,18884
    uint flushtime;418,18980
    struct _fcache_unit_t *next_global;next_global420,19139
    struct _fcache_unit_t *prev_global;prev_global421,19208
    struct _fcache_unit_t *next_local;next_local422,19277
} fcache_unit_t;423,19356
    HISTOGRAM_GRANULARITY 428,19431
    HISTOGRAM_MAX_SIZE 429,19462
typedef struct _fcache 437,19668
    bool is_trace:is_trace439,19766
    bool is_shared:is_shared440,19833
    bool is_local:is_local447,20097
    bool is_coarse:is_coarse450,20242
    fragment_t *fifo;fifo451,20264
    fcache_unit_t *units;units454,20488
    size_t size;457,20688
    mutex_t lock;462,20877
    const char *name;name465,20909
    bool consistent;466,20931
    coarse_info_t *coarse_info;coarse_info470,21094
    uint max_size;478,21446
    uint max_unit_size;479,21504
    uint max_quadrupled_unit_size;480,21528
    uint free_upgrade_size;481,21563
    uint init_unit_size;482,21591
    bool finite_cache;483,21616
    uint regen_param;484,21639
    uint replace_param;485,21661
    uint      num_regenerated;488,21722
    uint      num_replaced;489,21753
    int      wset_check;493,21973
    bool     record_wset;497,22120
    free_list_header_t *free_list[free_list499,22147
    uint free_stats_freed[free_stats_freed501,22216
    uint free_stats_reused[free_stats_reused502,22282
    uint free_stats_coalesced[free_stats_coalesced503,22349
    uint free_stats_split[free_stats_split504,22419
    uint free_stats_charge[free_stats_charge505,22498
} fcache_t;510,22769
typedef struct _fcache_thread_units_t 515,22862
    fcache_t *bb;bb516,22902
    fcache_t *trace;trace517,22948
    cache_pc pending_unmap_pc;519,23048
    size_t pending_unmap_size;520,23079
    bool pending_flush;522,23174
} fcache_thread_units_t;523,23198
#define ALLOC_DC(525,23224
#define PROTECT_CACHE(531,23477
#define CACHE_PROTECTED(537,23747
typedef struct _fcache_list_t 544,23994
    fcache_unit_t *units;units546,24080
    fcache_unit_t *dead;dead547,24152
    uint num_dead;551,24389
    fcache_unit_t *units_to_flush;units_to_flush559,24719
    fcache_unit_t *units_to_free;units_to_free563,24897
    fcache_unit_t *units_to_free_tail;units_to_free_tail564,24931
} fcache_list_t;565,24970
static fcache_list_t *allunits;allunits568,25037
static fcache_t *shared_cache_bb;shared_cache_bb574,25284
static fcache_t *shared_cache_trace;shared_cache_trace575,25318
vm_area_vector_t *fcache_unit_areas;fcache_unit_areas584,25703
    CACHE_BB 602,26506
    CACHE_TRACE,603,26524
    CACHE_NUM_TYPES,604,26541
#define STATS_FCACHE_ADD(609,26707
#define STATS_FCACHE_SUB(623,27406
#define STATS_FCACHE_MAX(626,27507
#define CHECK_PARAMS(666,28971
#define CHECK_WSET_PARAM(711,32318
fcache_check_option_compatibility(740,34437
fcache_reset_init(812,37781
fcache_init(875,40492
fcache_unit_profile_stop(907,41578
remove_unit_from_cache(941,42594
fcache_really_free_unit(961,43280
fcache_stats_exit(997,44515
fcache_reset_free(1030,45694
fcache_exit(1092,47713
fcache_profile_exit(1127,48690
fcache_lookup_unit(1143,49051
fcache_fragment_pclookup(1152,49353
fcache_pc_in_live_unit(1214,51617
fcache_is_writable(1232,52099
fcache_change_fragment_protection(1243,52349
in_fcache(1284,53847
fcache_create_unit(1295,54127
fcache_free_unit(1428,58922
#define FCACHE_GUARDED(1500,61801
#define SET_CACHE_PARAMS(1506,62100
fcache_cache_init(1523,63168
fcache_cache_free(1595,66129
fcache_free_list_consistency(1638,67538
fcache_cache_stats(1714,70797
get_histogram_bucket(1784,73861
fcache_shift_fragments(1795,74159
cache_extend_commitment(1877,77538
fcache_increase_size(1901,78508
fcache_thread_reset_init(2101,87240
fcache_thread_init(2107,87315
fragment_lookup_deleted(2129,88114
fragment_lookup_cache_deleted(2144,88665
fcache_thread_exit_stats(2167,89492
fcache_thread_reset_free(2180,89846
fcache_thread_exit(2204,90709
print_fifo(2217,91145
verify_fifo(2231,91550
fifo_append(2258,92444
fifo_remove(2279,93134
fifo_prepend_empty(2308,94152
check_regen_replace_ratio(2369,96771
extend_unit_end(2461,101124
try_for_more_space(2505,102853
place_fragment(2767,115350
removed_fragment_stats(2815,117519
force_fragment_from_cache(2858,119229
replace_fragments(2877,119943
replace_fifo(3048,127045
find_free_list_bucket(3076,128143
free_list_footer_from_header(3087,128470
free_list_header_from_footer(3093,128652
remove_from_free_list(3099,128818
add_to_free_list(3128,129876
find_free_list_slot(3286,137278
add_fragment_common(3490,145954
fcache_shift_start_pc(3754,158859
fcache_return_extra_space(3801,160321
get_cache_for_new_fragment(3945,166880
fcache_add_fragment(4085,172704
fcache_remove_fragment(4208,177689
get_dcontext_for_fragment(4252,179282
fcache_is_flush_pending(4273,180074
append_units_to_free_list(4283,180357
chain_fragments_for_flush(4322,181726
fcache_flush_pending_units(4432,186654
fcache_free_pending_units(4540,190879
fcache_mark_units_for_free(4573,192157
fcache_flush_all_caches(4604,193298
fcache_reset_all_caches_proactively(4652,195523
schedule_reset(4889,206361
fcache_reset_cache(4902,206700
fcache_low_on_memory(4992,210211
get_fcache_coarse_info(5099,214969
fcache_coarse_cache_delete(5110,215318
coarse_frozen_cache_size(5131,216157
fcache_coarse_init_frozen(5152,216852
fcache_coarse_set_info(5173,217785
cache_pc get_initial_shared_coarse_cache_start_pc(5185,218041
cache_pc get_initial_shared_coarse_cache_end_pc(5190,218148
cache_pc get_initial_shared_coarse_cache_cur_pc(5194,218250
cache_pc get_initial_shared_cache_start_pc(5198,218352
cache_pc get_initial_shared_cache_end_pc(5202,218444
cache_pc get_initial_shared_cache_cur_pc(5206,218532
cache_pc get_initial_private_cache_start_pc(5210,218620
cache_pc get_initial_private_cache_end_pc(5214,218714
cache_pc get_initial_private_cache_cur_pc(5218,218804
const char* get_cache_name(5228,218981
cache_pc get_last_trace_cache_start_pc(5232,219038
cache_pc get_last_trace_cache_end_pc(5236,219111
cache_pc get_last_trace_cache_cur_pc(5240,219180
int is_last_trace_cache_resized(5244,219249
cache_pc get_shared_coarse_cache_prev_end_pc(5256,219447
cache_pc get_shared_cache_prev_end_pc(5260,219543
cache_pc get_private_cache_prev_end_pc(5264,219625
void set_cache_variables_to_defaults(5268,219709
cache_pc get_initial_bb_shared_coarse_cache_start_pc(5303,220702
cache_pc get_initial_bb_shared_coarse_cache_end_pc(5307,220814
cache_pc get_initial_bb_shared_coarse_cache_cur_pc(5311,220922
cache_pc get_initial_bb_shared_cache_start_pc(5315,221030
cache_pc get_initial_bb_shared_cache_end_pc(5319,221128
cache_pc get_initial_bb_shared_cache_cur_pc(5323,221222
cache_pc get_initial_bb_private_cache_start_pc(5327,221316
cache_pc get_initial_bb_private_cache_end_pc(5331,221416
cache_pc get_initial_bb_private_cache_cur_pc(5335,221512
const char* get_bb_cache_name(5339,221608
cache_pc get_last_bb_cache_start_pc(5343,221671
cache_pc get_last_bb_cache_end_pc(5347,221744
cache_pc get_last_bb_cache_cur_pc(5351,221813

fcache.h,483
#define _FCACHE_H_ 42,1915
#define IN_TRACE_CACHE(49,2129
#define PAD_FRAGMENT_JMPS(54,2339
#define PAD_JMPS_SHIFT_START(57,2448
    RESET_ALL 65,2752
    RESET_ALL              = 0x001,x00165,2752
    RESET_BASIC_BLOCKS 67,2837
    RESET_BASIC_BLOCKS     = 0x002,x00267,2837
    RESET_TRACES 69,2925
    RESET_TRACES           = 0x004,x00469,2925
    RESET_PENDING_DELETION 74,3163
    RESET_PENDING_DELETION = 0x008,x00874,3163
#define SELF_PROTECT_CACHE(123,4757

hashtable.c,1867
hashtable_bits_given_entries(44,2002
#define NAME_KEY 64,2742
#define ENTRY_TYPE 65,2767
#define ENTRY_TAG(67,2849
#define ENTRY_EMPTY 68,2894
#define ENTRY_SENTINEL 70,3009
#define ENTRY_IS_EMPTY(71,3077
#define ENTRY_IS_SENTINEL(72,3125
#define ENTRY_IS_INVALID(73,3183
#define ENTRIES_ARE_EQUAL(74,3250
#define HASHTABLE_WHICH_HEAP(76,3382
#define HTLOCK_RANK 77,3431
#define HASHTABLE_SUPPORT_PERSISTENCE 78,3478
#define GENERIC_ENTRY_IS_REAL(82,3597
hashtable_generic_init_internal_custom(87,3748
hashtable_generic_resized_custom(92,3865
hashtable_generic_study_custom(101,4216
hashtable_generic_free_entry(108,4420
generic_hash_create(119,4823
generic_hash_clear(134,5511
generic_hash_destroy(140,5634
generic_hash_lookup(159,6271
generic_hash_add(168,6501
generic_hash_remove(179,6815
generic_hash_iterate_next(194,7333
generic_hash_iterate_remove(220,8057
#define NAME_KEY 247,9046
#define ENTRY_TYPE 248,9071
#define ENTRY_TAG(250,9153
#define ENTRY_EMPTY 251,9210
#define STRHASH_SENTINEL 253,9325
#define ENTRY_SENTINEL 254,9393
#define ENTRY_IS_EMPTY(255,9444
#define ENTRY_IS_SENTINEL(256,9492
#define ENTRY_IS_INVALID(257,9552
#define TAGS_ARE_EQUAL(258,9619
#define ENTRIES_ARE_EQUAL(260,9775
#define HASHTABLE_WHICH_HEAP(262,9924
#define HTLOCK_RANK 263,9973
#define HASHTABLE_SUPPORT_PERSISTENCE 264,10020
#define STRHASH_CASE_INSENSITIVE 267,10093
strhash_key_cmp(270,10176
#define STRHASH_ENTRY_IS_REAL(280,10478
hashtable_strhash_init_internal_custom(285,10614
hashtable_strhash_resized_custom(290,10731
hashtable_strhash_study_custom(299,11084
hashtable_strhash_free_entry(306,11287
strhash_hash_create(317,11690
strhash_hash_clear(333,12467
strhash_hash_destroy(339,12590
strhash_hash_lookup(358,13227
strhash_hash_add(367,13470
strhash_hash_remove(378,13785
print_hashtable_stats(398,14422

hashtable.h,2101
#define _HASHTABLE_H_ 44,1899
#define HASHTABLE_SHARED 51,2044
#define HASHTABLE_ENTRY_SHARED 56,2240
#define HASHTABLE_LOCKLESS_ACCESS 58,2358
#define HASHTABLE_NOT_PRIMARY_STORAGE 60,2470
#define HASHTABLE_PERSISTENT 62,2572
#define HASHTABLE_USE_ENTRY_STATS 64,2673
#define HASHTABLE_RELAX_CLUSTER_CHECKS 66,2796
#define HASHTABLE_READ_ONLY 70,2971
#define HASHTABLE_ALIGN_TABLE 72,3067
#define HASHTABLE_CUSTOM_FLAGS_START 77,3250
#define HASHTABLE_COPY_IGNORE_FLAGS 80,3341
#define TABLE_NEEDS_LOCK(86,3556
#define ASSERT_TABLE_SYNCHRONIZED(91,3797
#define TABLE_RWLOCK(96,4120
#define TABLE_MEMOP(101,4271
#define TABLE_TYPE_MEMOP(105,4404
#define HASH_INDEX_WRAPAROUND(113,4738
# define INIT_HASHTABLE_STATS(118,4936
# define HTABLE_STAT_INC(122,5149
# define HTABLE_STAT_INC(124,5232
typedef struct _hashtable_statistics_t 129,5318
    uint hit_stat;130,5359
    uint collision_hit_stat;131,5419
    uint collision_stat;132,5491
    uint miss_stat;133,5565
    uint overwrap_stat;134,5642
    uint race_condition_stat;135,5728
    uint unlinked_count_stat;136,5817
    uint ib_stay_on_trace_stat;143,6141
    uint ib_stay_on_trace_stat_last;149,6489
    uint ib_stay_on_trace_stat_ovfl;150,6543
    uint ib_trace_last_ibl_exit;152,6632
    uint ib_trace_last_ibl_speculate_success;158,6891
} hashtable_statistics_t;160,7037
typedef struct _fragment_stat_entry_t 163,7140
    uint    hits;165,7234
    uint    age;167,7318
} fragment_stat_entry_t;168,7396
typedef struct _generic_entry_t 188,8106
    ptr_uint_t key;189,8140
    void *payload;payload190,8195
} generic_entry_t;191,8214
#define NAME_KEY 194,8307
#define ENTRY_TYPE 195,8332
#define CUSTOM_FIELDS 197,8414
#define HASHTABLEX_HEADER 199,8476
#undef HASHTABLEX_HEADER201,8528
typedef struct _strhash_entry_t 240,9856
    const char *key;key244,10011
    void *payload;payload245,10032
} strhash_entry_t;246,10051
#define NAME_KEY 248,10071
#define ENTRY_TYPE 249,10096
#define CUSTOM_FIELDS 251,10178
#define HASHTABLEX_HEADER 253,10240
#undef HASHTABLEX_HEADER255,10292

heap.c,10059
# define CHKLVL_MEMFILL 62,2473
static const uint BLOCK_SIZES[BLOCK_SIZES101,4441
#define BLOCK_TYPES 137,6292
#define HEADER_SIZE 155,7164
#define VARIABLE_SIZE(157,7236
#define MEMSET_HEADER(158,7292
#define GET_VARIABLE_ALLOCATION_SIZE(159,7367
#define HEAP_UNIT_MIN_SIZE 187,8908
#define HEAP_UNIT_MAX_SIZE 188,8975
#define GLOBAL_UNIT_MIN_SIZE 189,9038
#define GUARD_PAGE_ADJUSTMENT 191,9115
#define UNITROOM(194,9231
#define UNIT_RESERVED_ROOM(195,9288
#define UNIT_COMMIT_SIZE(199,9507
#define UNIT_RESERVED_SIZE(200,9571
#define UNIT_ALLOC_START(201,9647
#define UNIT_GET_START_PC(202,9711
#define UNIT_COMMIT_END(203,9787
#define UNIT_RESERVED_END(204,9826
#define UNITALLOC(207,9949
#define UNITOVERHEAD 211,10131
#define MAXROOM 214,10261
#define MAX_VALID_HEAP_ALLOCATION 217,10391
typedef struct _heap_unit_t 222,10542
    heap_pc start_pc;223,10572
    heap_pc end_pc;224,10638
    heap_pc cur_pc;225,10713
    heap_pc reserved_end_pc;226,10793
    bool in_vmarea_list;227,10883
    int      id;229,10975
    struct _heap_unit_t *next_local;next_local231,11033
    struct _heap_unit_t *next_global;next_global232,11105
    struct _heap_unit_t *prev_global;prev_global233,11172
} heap_unit_t;234,11239
typedef struct _heap_acct_t 237,11278
    size_t alloc_reuse[alloc_reuse238,11308
    size_t alloc_new[alloc_new239,11343
    size_t cur_usage[cur_usage240,11376
    size_t max_usage[max_usage241,11409
    size_t max_single[max_single242,11442
    uint num_alloc[num_alloc243,11476
} heap_acct_t;244,11507
typedef struct _thread_units_t 252,11748
    heap_unit_t *top_unit;top_unit253,11781
    heap_unit_t *cur_unit;cur_unit254,11849
    heap_pc free_list[free_list255,11908
    int num_units;257,11957
    dcontext_t *dcontext;dcontext259,12013
    bool writable;260,12068
    heap_acct_t acct;262,12156
} thread_units_t;264,12185
typedef struct _thread_heap_t 267,12232
    thread_units_t *local_heap;local_heap268,12264
    thread_units_t *nonpersistent_heap;nonpersistent_heap269,12296
} thread_heap_t;270,12336
typedef struct _heap_t 275,12473
    heap_unit_t *units;units276,12498
    heap_unit_t *dead;dead277,12560
    uint num_dead;281,12792
} heap_t;282,12811
static bool heap_exiting 285,12868
vm_area_vector_t *landing_pad_areas;landing_pad_areas317,14363
static app_pc lpad_temp_writable_start;320,14487
static size_t lpad_temp_writable_size;321,14527
safe_to_allocate_or_free_heap_units(329,14739
const char * whichheap_name[whichheap_name342,15133
# define ACCOUNT_FOR_ALLOC_HELPER(387,16368
# define ACCOUNT_FOR_ALLOC(397,16968
# define ACCOUNT_FOR_FREE(404,17326
# define ACCOUNT_FOR_ALLOC(411,17556
# define ACCOUNT_FOR_FREE(412,17618
typedef byte *vm_addr_t;vm_addr_t415,17669
static byte *heap_allowable_region_start heap_allowable_region_start419,17787
static byte *heap_allowable_region_end heap_allowable_region_end420,17850
request_region_be_heap_reachable(436,18632
vmcode_get_reachable_region(509,22274
    OOM_INIT 537,23539
    OOM_INIT    = 0x1,x1537,23539
    OOM_RESERVE 541,23671
    OOM_RESERVE = 0x2,x2541,23671
    OOM_COMMIT 550,24096
    OOM_COMMIT  = 0x4,x4550,24096
    OOM_EXTEND 559,24514
    OOM_EXTEND  = 0x8,x8559,24514
} oom_source_t;560,24537
enum {VMM_BLOCK_SIZE VMM_BLOCK_SIZE566,24706
enum {VMM_BLOCK_SIZE = IF_WINDOWS_ELSE(566,24706
    MAX_VMM_HEAP_UNIT_SIZE 582,25348
    MIN_VMM_HEAP_UNIT_SIZE 587,25590
    MIN_VMM_HEAP_UNIT_SIZE = VMM_BLOCK_SIZE 587,25590
    vm_addr_t start_addr;591,25656
    vm_addr_t end_addr;592,25717
    vm_addr_t alloc_start;593,25803
    size_t    alloc_size;594,25875
    uint    num_blocks;598,26061
    mutex_t   lock;600,26145
    uint    num_free_blocks;604,26458
} vm_heap_t;612,26943
typedef struct _heap_management_t 618,27131
    vm_heap_t vmheap;622,27332
    heap_t heap;623,27354
    thread_units_t global_units;625,27402
    thread_units_t global_nonpersistent_units;626,27435
    bool global_heap_writable;627,27482
    thread_units_t global_unprotected_units;628,27513
} heap_management_t;629,27558
static heap_management_t temp_heapmgt;634,27718
static heap_management_t *heapmgt heapmgt635,27757
static bool vmm_heap_exited 637,27843
vmm_addr_to_block(643,28082
vmm_block_to_addr(651,28296
vmm_in_same_block(658,28473
vmm_dump_map(666,28679
#define VMM_DUMP_MAP_LOG(683,29289
print_vmm_heap_data(702,30030
vmm_heap_initialize_unusable(713,30362
vmm_heap_unit_init(721,30516
vmm_heap_unit_exit(835,35397
vmm_is_reserved_unit(873,36811
is_vmm_reserved_address(890,37452
get_vmm_heap_bounds(905,37992
vmcode_get_start(917,38368
vmcode_get_end(925,38483
vmcode_unreachable_pc(933,38594
rel32_reachable_from_vmcode(944,38813
vmm_heap_reserve_blocks(965,39594
vmm_heap_free_blocks(1015,41175
at_reset_at_vmm_limit(1047,42209
vmm_heap_reserve(1060,42708
vmm_heap_commit(1171,47862
END_DATA_SECTION(1265,52920
vmm_heap_decommit(1305,54604
vmm_heap_alloc(1318,55106
vmm_heap_init_constraints(1331,55541
vmm_heap_init(1367,57170
vmm_heap_exit(1376,57373
heap_check_option_compatibility(1441,60354
heap_reset_init(1479,62103
heap_init(1489,62325
really_free_unit(1551,64985
heap_reset_free(1564,65518
heap_exit(1605,66860
heap_low_on_memory(1674,69172
get_oom_source_name(1720,71009
silent_oom_for_process(1739,71480
report_low_on_memory(1764,72345
account_for_memory(1804,74307
update_dynamo_areas_on_release(1834,75500
lockwise_safe_to_allocate_memory(1858,76452
get_real_memory(1872,76935
release_memory_and_update_areas(1914,78632
release_real_memory(1935,79553
extend_commitment(1950,80010
get_guarded_real_memory(1977,81179
release_guarded_real_memory(2033,83475
heap_mmap_ex(2060,84323
heap_mmap_reserve(2089,85563
heap_mmap_extend_commitment(2100,85942
heap_mmap_retract_commitment(2113,86355
heap_mmap_reserve_post_stack(2126,86827
heap_munmap_post_stack(2253,92680
heap_mmap(2289,94283
heap_munmap_ex(2296,94391
heap_munmap(2317,95089
# define STACK_GUARD_PAGES 2323,95198
stack_alloc(2331,95410
stack_free(2369,96643
is_stack_overflow(2386,97153
map_file(2405,97822
unmap_file(2422,98417
heap_vmareas_synch_units(2459,100058
common_global_heap_alloc(2583,106325
common_global_heap_free(2605,107084
global_heap_alloc(2631,107937
global_heap_free(2640,108207
global_heap_realloc(2653,108681
heap_create_unit(2668,109258
heap_free_unit(2758,112643
find_heap_unit(2851,116896
threadunits_init(2872,117881
#define MAX_5_DIGIT 2891,118396
print_tu_heap_statistics(2893,118434
print_heap_statistics(2923,119705
add_heapacct_to_global_stats(2958,121225
threadunits_exit(2982,122270
heap_thread_reset_init(3079,126264
heap_thread_init(3089,126556
heap_thread_reset_free(3106,127246
heap_thread_exit(3121,127740
print_free_list(3137,128355
common_heap_extend_commitment(3160,129023
heap_unit_extend_commitment(3200,130860
common_heap_alloc(3211,131217
heap_alloc(3519,145641
common_heap_free(3535,146139
heap_free(3694,152994
bool local_heap_protected(3707,153397
protect_local_units_helper(3715,153658
protect_threadunits(3728,154045
protect_local_heap(3738,154308
protect_global_heap(3750,154719
global_unprotected_heap_alloc(3793,156103
global_unprotected_heap_free(3803,156448
nonpersistent_heap_alloc(3811,156746
nonpersistent_heap_free(3832,157495
typedef struct _special_heap_unit_t 3865,158746
    heap_pc alloc_pc;3866,158784
    heap_pc start_pc;3867,158847
    heap_pc end_pc;3868,158924
    heap_pc cur_pc;3869,158995
    heap_pc reserved_end_pc;3870,159071
    profile_t *profile;profile3872,159182
    int      id;3875,159226
    struct _special_heap_unit_t *next;next3877,159284
} special_heap_unit_t;3878,159323
#define SPECIAL_UNIT_COMMIT_SIZE(3880,159347
#define SPECIAL_UNIT_RESERVED_SIZE(3881,159413
#define SPECIAL_UNIT_HEADER_INLINE(3882,159490
typedef struct _cfree_header 3885,159613
    struct _cfree_header *next_cfree;next_cfree3886,159644
    uint count;3887,159682
} cfree_header_t;3888,159698
typedef struct _special_units_t 3890,159717
    special_heap_unit_t *top_unit;top_unit3891,159751
    special_heap_unit_t *cur_unit;cur_unit3892,159827
    uint block_size;3893,159894
    heap_pc free_list;3894,159949
    cfree_header_t *cfree_list;cfree_list3895,159972
    int num_units;3897,160017
    bool writable:writable3899,160076
    bool executable:executable3900,160142
    bool use_lock:use_lock3904,160303
    bool in_iterator:in_iterator3905,160324
    bool persistent:persistent3906,160348
    mutex_t lock;3907,160371
    vm_area_vector_t *heap_areas;heap_areas3912,160526
    void *lookup_retval;lookup_retval3913,160560
    struct _special_units_t *next;next3916,160611
    heap_acct_t acct;3920,160760
} special_units_t;3922,160789
get_special_heap_header_size(3938,161479
static inline bool special_heap_profile_enabled(3945,161587
get_prot(3954,161812
special_unit_extend_commitment(3962,161983
special_heap_create_unit(3976,162571
special_heap_init_internal(4065,166117
special_heap_init(4134,168986
special_heap_pclookup_init(4143,169387
special_heap_set_vector_data(4154,169933
special_heap_set_unit_end(4174,170669
special_heap_profile_stop(4188,171067
special_heap_profile_exit(4207,171626
special_heap_exit(4229,172296
special_heap_calloc(4305,175173
special_heap_alloc(4410,179434
special_heap_cfree(4416,179522
special_heap_free(4447,180522
special_heap_iterator_start(4465,181349
special_heap_iterator_hasnext(4477,181653
special_heap_iterator_next(4494,182158
special_heap_iterator_stop(4516,182854
special_heap_delete_lock(4537,183557
    byte *start;start4587,185775
    byte *end;end4588,185830
    byte *commit_end;commit_end4589,185883
    byte *cur_ptr;cur_ptr4590,185960
    bool allocated;4591,186037
} landing_pad_area_t;4592,186105
alloc_landing_pad(4604,186597
trim_landing_pad(4805,196678
landing_pads_to_executable_areas(4827,197498
release_landing_pad_mem(4878,199441

heap.h,2821
#define _HEAP_H_ 43,1966
    ACCT_FRAGMENT=47,2024
    ACCT_COARSE_LINK,48,2045
    ACCT_FRAG_FUTURE,49,2067
    ACCT_FRAG_TABLE,50,2089
    ACCT_IBLTABLE,51,2110
    ACCT_TRACE,52,2129
    ACCT_FCACHE_EMPTY,53,2145
    ACCT_VMAREA_MULTI,54,2168
    ACCT_IR,55,2191
    ACCT_AFTER_CALL,56,2204
    ACCT_VMAREAS,57,2225
    ACCT_SYMBOLS,58,2243
    ACCT_SIDELINE,60,2278
    ACCT_THCOUNTER,62,2305
    ACCT_TOMBSTONE,63,2325
    ACCT_HOT_PATCHING,66,2441
    ACCT_THREAD_MGT,67,2464
    ACCT_MEM_MGT,68,2485
    ACCT_STATS,69,2503
    ACCT_SPECIAL,70,2519
    ACCT_CLIENT,72,2562
    ACCT_LIBDUP,74,2587
    ACCT_CLEANCALL,75,2652
    ACCT_OTHER,77,2746
    ACCT_LAST78,2762
} which_heap_t;79,2776
# define HEAPACCT(81,2793
# define IF_HEAPACCT_ELSE(82,2818
# define HEAPACCT(84,2858
# define IF_HEAPACCT_ELSE(85,2879
    MAP_FILE_COPY_ON_WRITE 89,2936
    MAP_FILE_COPY_ON_WRITE   = 0x0001,x000189,2936
    MAP_FILE_IMAGE 90,2975
    MAP_FILE_IMAGE           = 0x0002,x000290,2975
    MAP_FILE_FIXED 91,3033
    MAP_FILE_FIXED           = 0x0004,x000491,3033
    MAP_FILE_REACHABLE 92,3089
    MAP_FILE_REACHABLE       = 0x0008,x000892,3089
} map_flags_t;93,3172
typedef byte * heap_pc;95,3188
#define HEAP_ALIGNMENT 96,3212
#define UNPROTECTED_LOCAL_ALLOC(213,7559
#define UNPROTECTED_LOCAL_FREE(214,7643
#define UNPROTECTED_GLOBAL_ALLOC 215,7725
#define UNPROTECTED_GLOBAL_FREE 216,7788
#define FRAGMENT_ALLOC_DC(219,7927
#define FRAGMENT_TABLE_ALLOC_DC(220,8018
#define PROTECTED 226,8265
#define UNPROTECTED 227,8288
#define HEAP_ARRAY_ALLOC(228,8314
#define HEAP_TYPE_ALLOC(232,8549
#define HEAP_ARRAY_ALLOC_MEMSET(234,8655
#define HEAP_ARRAY_FREE(238,8836
#define HEAP_TYPE_FREE(242,9073
#define NONPERSISTENT_HEAP_ARRAY_ALLOC(246,9236
#define NONPERSISTENT_HEAP_TYPE_ALLOC(248,9377
#define NONPERSISTENT_HEAP_ARRAY_FREE(250,9489
#define NONPERSISTENT_HEAP_TYPE_FREE(252,9632
typedef struct _special_heap_iterator 268,10308
    void *heap;heap270,10412
    void *next_unit;next_unit271,10428
} special_heap_iterator_t;272,10449
# define HEAP_TO_BYTE_EX(315,12107
# define HEAP_TO_BYTE(316,12145
# define HEAP_TO_UINT_EX(317,12193
# define HEAP_TO_UINT(318,12246
#  define HEAP_TO_PTR_UINT_EX(320,12306
#  define HEAP_TO_PTR_UINT_EX(322,12391
# define HEAP_TO_PTR_UINT(324,12457
# define HEAP_UNALLOCATED 326,12514
# define HEAP_UNALLOCATED_BYTE 327,12543
# define HEAP_UNALLOCATED_UINT 328,12605
# define HEAP_UNALLOCATED_PTR_UINT 329,12667
# define HEAP_ALLOCATED 331,12738
# define HEAP_ALLOCATED_BYTE 332,12765
# define HEAP_ALLOCATED_UINT 333,12823
# define HEAP_ALLOCATED_PTR_UINT 334,12881
# define HEAP_PAD 336,12948
# define HEAP_PAD_BYTE 337,12969
# define HEAP_PAD_UINT 338,13015
# define HEAP_PAD_PTR_UINT 339,13061

hotpatch.c,11551
#define HOTP_ONLY_GBOP_PRECEDENCE 78,2994
    MIN_HOTP_INTERFACE_VERSION 82,3113
    MIN_HOTP_INTERFACE_VERSION = HOTP_INTERFACE_VERSION,82,3113
    MAX_HOTP_INTERFACE_VERSION 83,3170
    MAX_HOTP_INTERFACE_VERSION = HOTP_INTERFACE_VERSION,83,3170
    MIN_NUM_VULNERABILITIES 84,3227
    MAX_NUM_VULNERABILITIES 85,3260
    MIN_VULNERABILITY_ID_LENGTH 86,3297
    MAX_VULNERABILITY_ID_LENGTH 87,3334
    MIN_POLICY_ID_LENGTH 88,3372
    MIN_POLICY_ID_LENGTH = HOTP_POLICY_ID_LENGTH,88,3372
    MAX_POLICY_ID_LENGTH 89,3422
    MAX_POLICY_ID_LENGTH = HOTP_POLICY_ID_LENGTH,89,3422
    MIN_POLICY_VERSION 90,3472
    MAX_POLICY_VERSION 91,3500
    MIN_NUM_SETS 92,3532
    MAX_NUM_SETS 93,3554
    MIN_NUM_MODULES 94,3580
    MAX_NUM_MODULES 95,3605
    MAX_MODULE_SIZE 98,3700
    MIN_PE_TIMESTAMP 106,4124
    MAX_PE_TIMESTAMP 107,4150
    MAX_PE_TIMESTAMP = UINT_MAX,107,4150
    PE_TIMESTAMP_IGNORE 108,4183
    PE_TIMESTAMP_IGNORE = UINT_MAX,108,4183
    PE_TIMESTAMP_UNAVAILABLE 109,4219
    PE_TIMESTAMP_UNAVAILABLE = PE_TIMESTAMP_IGNORE 109,4219
    MIN_PE_CHECKSUM 111,4276
    MAX_PE_CHECKSUM 112,4301
    MAX_PE_CHECKSUM = UINT_MAX,112,4301
    PE_CHECKSUM_IGNORE 113,4333
    PE_CHECKSUM_IGNORE = UINT_MAX,113,4333
    PE_CHECKSUM_UNAVAILABLE 114,4368
    PE_CHECKSUM_UNAVAILABLE = PE_CHECKSUM_IGNORE 114,4368
    MIN_PE_IMAGE_SIZE 116,4423
    MAX_PE_IMAGE_SIZE 117,4450
    MAX_PE_IMAGE_SIZE = UINT_MAX,117,4450
    PE_IMAGE_SIZE_IGNORE 118,4484
    PE_IMAGE_SIZE_IGNORE = UINT_MAX,118,4484
    PE_IMAGE_SIZE_UNAVAILABLE 119,4521
    PE_IMAGE_SIZE_UNAVAILABLE = PE_IMAGE_SIZE_IGNORE 119,4521
    MIN_PE_CODE_SIZE 121,4580
    MAX_PE_CODE_SIZE 122,4648
    MAX_PE_CODE_SIZE = UINT_MAX,122,4648
    PE_CODE_SIZE_IGNORE 123,4681
    PE_CODE_SIZE_IGNORE = UINT_MAX,123,4681
    PE_CODE_SIZE_UNAVAILABLE 124,4717
    PE_CODE_SIZE_UNAVAILABLE = PE_CODE_SIZE_IGNORE 124,4717
    MIN_PE_FILE_VERSION 126,4774
    MAX_PE_FILE_VERSION 127,4803
    MAX_PE_FILE_VERSION = ULLONG_MAX,127,4803
    PE_FILE_VERSION_IGNORE 128,4841
    PE_FILE_VERSION_IGNORE = IF_WINDOWS_ELSE(128,4841
    PE_FILE_VERSION_IGNORE = IF_WINDOWS_ELSE(MODULE_FILE_VERSION_INVALID,128,4841
    PE_FILE_VERSION_IGNORE = IF_WINDOWS_ELSE(MODULE_FILE_VERSION_INVALID, ULLONG_MAX)128,4841
    PE_FILE_VERSION_UNAVAILABLE 129,4928
    PE_FILE_VERSION_UNAVAILABLE = PE_FILE_VERSION_IGNORE 129,4928
    MIN_NUM_PATCH_POINT_HASHES 131,4991
    MAX_NUM_PATCH_POINT_HASHES 132,5027
    MIN_HASH_START_OFFSET 133,5067
    MAX_HASH_START_OFFSET 134,5098
    MAX_HASH_START_OFFSET = MAX_MODULE_SIZE,134,5098
    MIN_HASH_LENGTH 135,5178
    MAX_HASH_LENGTH 136,5203
    MAX_HASH_LENGTH = MAX_MODULE_SIZE,136,5203
    MIN_HASH_VALUE 137,5283
    MAX_HASH_VALUE 138,5307
    MAX_HASH_VALUE = UINT_MAX,138,5307
    MIN_NUM_PATCH_POINTS 140,5339
    MIN_NUM_PATCH_POINTS = MIN_NUM_PATCH_POINT_HASHES,140,5339
    MAX_NUM_PATCH_POINTS 141,5394
    MAX_NUM_PATCH_POINTS = MAX_NUM_PATCH_POINT_HASHES,141,5394
    MIN_PATCH_OFFSET 142,5449
    MAX_PATCH_OFFSET 143,5475
    MAX_PATCH_OFFSET = MAX_MODULE_SIZE,143,5475
    MIN_PATCH_PRECEDENCE 144,5555
    MAX_PATCH_PRECEDENCE 145,5585
    MIN_DETECTOR_OFFSET 146,5619
    MAX_DETECTOR_OFFSET 152,5950
    MIN_PROTECTOR_OFFSET 154,6070
    MAX_PROTECTOR_OFFSET 155,6100
    MAX_PROTECTOR_OFFSET = MAX_DETECTOR_OFFSET,155,6100
    MIN_RETURN_ADDR 159,6276
    MAX_RETURN_ADDR 164,6512
    MAX_RETURN_ADDR = MAX_PATCH_OFFSET,164,6512
    MIN_MODE 165,6552
    MIN_MODE = HOTP_MODE_OFF,165,6552
    MAX_MODE 166,6582
    MAX_MODE = HOTP_MODE_PROTECT,166,6582
    MAX_POLICY_FILE_SIZE 172,6905
#define PE_NAME_IGNORE 175,6947
#define PE_NAME_UNAVAILABLE 176,7021
    const char *pe_name;pe_name184,7314
    uint pe_checksum;189,7494
    uint pe_timestamp;190,7516
    size_t pe_image_size;191,7539
    size_t pe_code_size;210,8671
    uint64 pe_file_version;215,8834
} hotp_module_sig_t;216,8862
    app_rva_t offset;235,9801
    app_rva_t detector_fn;242,10133
    app_rva_t protector_fn;244,10267
    app_rva_t return_addr;245,10295
    uint precedence;251,10525
    byte *trampoline;trampoline264,11093
    byte *app_code_copy;app_code_copy270,11353
    byte *tramp_exit_tgt;tramp_exit_tgt277,11686
} hotp_patch_point_t;278,11712
#define HOTP_ONLY_TRAMPOLINE_SIZE 283,11882
#define HOTP_ONLY_NUM_THREADS_AT_INIT 284,11920
#define HOTP_ONLY_PATCH_REGION_SIZE 300,12699
#define HOTP_CACHE_PATCH_REGION_SIZE 301,12743
#define HOTP_BAD_PATCH_REGION_SIZE 302,12787
#define HOTP_PATCH_REGION_SIZE 303,12832
    app_rva_t start;319,13586
    uint len;320,13607
    uint hash_value;321,13685
} hotp_patch_point_hash_t;322,13706
    hotp_module_sig_t sig;325,13751
    uint num_patch_points;326,13778
    hotp_patch_point_t *patch_points;patch_points327,13805
    uint num_patch_point_hashes;328,13843
    hotp_patch_point_hash_t *hashes;hashes329,13876
    bool matched;332,13985
    app_pc base_address;333,14063
} hotp_module_t;334,14088
    uint num_modules;337,14123
    hotp_module_t *modules;modules338,14145
} hotp_set_t;339,14173
    hotp_exec_status_t exec_status;346,14411
    hotp_inject_status_t *inject_status;inject_status349,14522
    uint64 num_detected;355,14737
    uint64 num_not_detected;356,14762
    uint64 num_detector_error;357,14791
    uint64 num_protected;358,14822
    uint64 num_not_protected;359,14848
    uint64 num_kill_thread;360,14878
    uint64 num_kill_process;361,14906
    uint64 num_raise_exception;362,14935
    uint64 num_change_control_flow;363,14967
    uint64 num_protector_error;364,15003
    uint64 num_aborted;365,15035
} hotp_vul_info_t;366,15059
    HOTP_TYPE_HOT_PATCH 378,15544
    HOTP_TYPE_HOT_PATCH = 0x1,x1378,15544
    HOTP_TYPE_GBOP_HOOK 390,16200
    HOTP_TYPE_GBOP_HOOK = 0x2,x2390,16200
    HOTP_TYPE_PROBE 395,16346
    HOTP_TYPE_PROBE = 0x4x4395,16346
} hotp_type_t;396,16372
    const char *vul_id;vul_id405,16737
    const char *policy_id;policy_id413,17062
    uint policy_version;414,17089
    const char *hotp_dll;hotp_dll415,17114
    const char *hotp_dll_hash;hotp_dll_hash416,17140
    hotp_policy_mode_t mode;417,17171
    uint num_sets;419,17201
    hotp_set_t *sets;sets420,17220
    hotp_vul_info_t *info;info423,17314
    app_pc  hotp_dll_base;424,17341
    hotp_type_t type;440,18182
    unsigned int id;446,18426
} hotp_vul_t;447,18447
typedef struct hotp_vul_tab_t 458,19069
    hotp_vul_t *vul_tab;vul_tab459,19101
    uint num_vuls;460,19126
    struct hotp_vul_tab_t *next;next461,19145
} hotp_vul_tab_t;462,19178
typedef struct hotp_globals_t 470,19468
    bool ldr_safe_hook_removal;476,19797
    bool ldr_safe_hook_injection;477,19868
} hotp_globals_t;478,19939
#define VUL(493,20654
#define SET(494,20708
#define MODULE(495,20775
#define SIG(496,20848
#define PPOINT(497,20920
#define PPOINT_HASH(498,21004
#define NUM_GLOBAL_VULS 501,21094
#define GLOBAL_VUL_TABLE 502,21150
#define GLOBAL_VUL(503,21207
#define GLOBAL_SET(504,21272
#define GLOBAL_MODULE(505,21340
#define GLOBAL_SIG(506,21413
#define GLOBAL_PPOINT(507,21484
#define GLOBAL_HASH(508,21561
#define VUL_STAT_INC(517,22081
#define SET_NUM(519,22119
#define SET_STR_DUP(540,23613
#define SET_STR_PTR(549,24129
#define SET_STR(558,24643
#define HOTP_IS_IN_REGION(560,24704
#define HOTP_ONLY_IS_IN_TRAMPOLINE(564,24875
#define HOTP_ONLY_IS_IN_PATCH_REGION(569,25121
#define GENERATE_PROBE_ID(580,25738
hotp_policy_status_table_t *hotp_policy_status_table;hotp_policy_status_table627,28380
static hotp_vul_t *hotp_vul_table;hotp_vul_table630,28500
static uint hotp_num_vuls;631,28536
static hotp_vul_tab_t *hotp_old_vul_tabs;hotp_old_vul_tabs632,28564
static void *hotp_only_tramp_heap;hotp_only_tramp_heap636,28749
static void *hotp_only_tramp_heap_cache;hotp_only_tramp_heap_cache644,29157
static vm_area_vector_t *hotp_only_tramp_areas;hotp_only_tramp_areas651,29447
static vm_area_vector_t *hotp_patch_point_areas;hotp_patch_point_areas670,30537
static hotp_globals_t *hotp_globals;hotp_globals673,30600
static unsigned int probe_id_counter;681,30834
hotp_get_lock(688,31077
hotp_ppoint_addr(695,31197
hotp_ppoint_areas_add(710,31681
hotp_ppoint_areas_remove(745,32980
hotp_ppoint_areas_release(781,34178
hotp_get_next_str(806,35087
    POLICY_FILE 835,35758
    MODES_FILE836,35779
hotp_read_data_file(840,35812
hotp_read_policy_defs(920,38931
hotp_load_hotp_dlls(1147,49237
hotp_read_policy_modes(1283,55542
hotp_set_policy_status(1392,59653
hotp_init_policy_status_table(1444,62187
static void hotp_free_one_vul(1544,66875
hotp_free_vul_table(1627,70343
hotp_remove_patches_from_module(1658,71445
hotp_remove_hot_patches(1783,77889
hotp_module_match(1800,78683
hotp_compute_hash(1913,84115
hotp_process_image(2068,91872
hotp_ppoint_on_list(2079,92353
hotp_perscache_overlap(2106,93162
hotp_process_image_helper(2159,95542
hotp_patch_point_persist_helper(2604,118582
hotp_num_matched_patch_points(2658,120851
hotp_get_matched_patch_points(2669,121281
hotp_point_not_on_list(2681,121764
hotp_walk_loader_list(2759,125268
hotp_init(2819,127885
hotp_reset_init(2890,130745
hotp_reset_free(2899,130926
hotp_exit(2923,131742
nudge_action_read_policies(2993,134482
hotp_nudge_handler(3208,145034
hotp_only_lookup_patch_addr(3345,151561
hotp_lookup_patch_addr(3396,153861
hotp_does_region_need_patch(3483,157583
hotp_inject_gateway_call(3614,162715
#define HOTP_CONTEXT_OFFSET_ON_DSTACK 3625,163256
#define GET_FROM_DC_OFFS_TO_REG(3630,163477
hotp_inject(3715,167647
hotp_only_patch_region_valid(3815,172827
patch_cti_tgt(3967,180652
hotp_only_inject_patch(3994,181830
hotp_only_remove_patch(4293,195833
hotp_only_in_tramp(4386,200127
hotp_only_detach_helper(4408,201049
hotp_only_mem_prot_change(4449,202989
hotp_only_gateway(4557,207592
hotp_gateway(4617,210455
hotp_execute_patch(4981,227730
hotp_event_notify(5103,233469
hotp_spill_before_notify(5224,238610
hotp_restore_after_notify(5281,241073
hotp_dump_reg_state(5300,241685
hotp_update_vul_stats(5316,242536
#define CLEAN_CALL_XFLAGS_OFFSET 5411,246472
#define CLEAN_CALL_ERRNO_OFFSET 5412,246510
hotp_change_control_flow(5414,246560
hotp_print_diagnostics(5440,247503
hotp_only_contains_leaked_trampoline(5595,254962
hotp_only_gbop_detector(5644,257002
hotp_only_gbop_protector(5658,257515
hotp_only_read_gbop_policy_defs(5675,258107
    DR_PROBE_ADDR_VIRTUAL,5810,263549
    DR_PROBE_ADDR_LIB_OFFS,5820,263981
    DR_PROBE_ADDR_EXP_FUNC,5830,264506
} dr_probe_addr_t;5831,264534
    char *library;library5841,264974
    app_rva_t offset;5846,265197
} dr_probe_lib_offs_t;5847,265219
    char *library;library5857,265674
    char *func;func5861,265843
} dr_probe_exp_func_t;5862,265859
    dr_probe_addr_t type;5871,266185
        app_pc vaddr;5875,266286
        dr_probe_lib_offs_t lib_offs;5878,266366
        dr_probe_exp_func_t exp_func;5881,266465
} dr_probe_location_t;5883,266510
    DR_PROBE_RETURN_NORMAL 5897,266958
} dr_probe_return_t;5898,266990
    char *name;name5910,267356
    dr_probe_location_t insert_loc;5920,267857
    dr_probe_location_t callback_func;5937,268608
    unsigned int id;5940,268726
    dr_probe_status_t status;5943,268808
} dr_probe_desc_t;5944,268838
dr_register_probes(6074,275497
#define HOTP_PROBE_PRECEDENCE 6246,283398
dr_get_probe_status(6357,288415
hotp_read_policies(6395,289586

hotpatch.h,260
#define _HOTPATCH_H_ 40,1831
    int vul_index;53,2284
    int set_index;56,2380
    int module_index;57,2399
    int ppoint_index;58,2471
} hotp_offset_match_t;59,2551
    CXT_TYPE_HOT_PATCH,69,3006
    CXT_TYPE_CORE_HOOK70,3030
} cxt_type_t;71,3053

instrlist.c,1118
# undef ASSERT 47,2118
# undef ASSERT_TRUNCATE48,2189
# undef ASSERT_BITFIELD_TRUNCATE49,2213
# undef ASSERT_NOT_REACHED50,2246
# define ASSERT 51,2273
# define ASSERT_TRUNCATE 52,2333
# define ASSERT_BITFIELD_TRUNCATE 53,2402
# define ASSERT_NOT_REACHED 54,2480
instrlist_create(59,2615
instrlist_init(70,2969
instrlist_destroy(83,3305
instrlist_clear(92,3607
instrlist_clear_and_destroy(103,3912
instrlist_set_fall_through_target(116,4330
instrlist_get_fall_through_target(123,4453
instrlist_set_return_target(134,4753
instrlist_get_return_target(141,4870
instrlist_set_translation_target(151,5122
instrlist_get_translation_target(157,5234
instrlist_set_our_mangling(163,5335
instrlist_get_our_mangling(172,5515
instrlist_first(179,5668
pk_test_func(186,5777
instrlist_last(192,5846
check_translation(198,5929
instrlist_append(209,6297
instrlist_prepend(235,6965
instrlist_preinsert(262,7644
instrlist_postinsert(297,8640
instrlist_replace(334,9696
instrlist_remove(353,10282
instrlist_clone(370,10721
instrlist_prepend_instrlist(431,12945
void instrlist_append_instrlist(442,13260

instrlist.h,225
#define _INSTRLIST_H_ 40,1907
struct _instr_list_t 42,1932
    instr_t *first;first43,1955
    instr_t *last;last44,1975
    int flags;45,1994
    app_pc translation_target;46,2009
    app_pc fall_through_bb;56,2566

io.c,1431
#  define _EXTERNALIZE_CTYPE_INLINES_TOP_50,2199
# undef CLIENT_ASSERT59,2421
# define CLIENT_ASSERT(60,2443
#define VA_ARG_CHAR2INT63,2517
#define BUF_SIZE 64,2541
const static double pos_inf 67,2574
const static double neg_inf 68,2613
const static double zerof 74,2860
# define pos_inf 75,2893
# define neg_inf 76,2922
double2int_trunc(81,2997
double2int(94,3260
utf8_to_utf16(131,4590
utf16_to_utf8(221,8256
utf16_to_utf8_size(303,10918
#undef IOX_WIDE_CHAR314,11240
#define IOX_WIDE_CHAR317,11279
typedef enum _specifier_t 324,11441
    SPEC_INT,325,11469
    SPEC_CHAR,326,11483
    SPEC_STRING327,11498
} specifer_t;328,11514
typedef enum _int_sz_t 330,11529
    SZ_SHORT,331,11554
    SZ_INT,332,11568
    SZ_LONG,333,11580
    SZ_LONGLONG,334,11593
    SZ_PTR 336,11647
    SZ_PTR = SZ_LONGLONG336,11647
    SZ_PTR 338,11678
    SZ_PTR = SZ_LONG338,11678
} int_sz_t;340,11706
our_isspace(347,11956
parse_int(354,12093
our_vsscanf(436,14240
our_sscanf(632,21008
# define MAPS_LINE_FORMAT4 652,21556
# define MAPS_LINE_FORMAT8 653,21619
test_sscanf_maps_x86(656,21704
test_sscanf_maps_x64(685,22597
test_sscanf_all_specs(714,23524
#  define RTLD_NEXT 794,26218
typedef void (*memcpy_t)memcpy_t796,26258
test_memcpy_offset_size(799,26335
test_our_memcpy(821,27079
test_memset_offset_size(844,27700
test_our_memset(861,28189
our_memcpy_vs_libc(880,28605
unit_test_io(923,30201

iox.h,407
# define TCHAR 44,1987
# define _T(45,2010
# define TNAME(46,2030
# define IF_WIDE_ELSE(47,2057
# define TCHAR 49,2092
# define _T(50,2112
# define TNAME(51,2129
# define IF_WIDE_ELSE(52,2149
TNAME(66,2607
TNAME(90,3206
TNAME(116,3932
TNAME(162,5239
TNAME(197,6184
TNAME(267,8385
TNAME(704,24357
#undef TCHAR715,24575
#undef _T716,24588
#undef TNAME717,24598
#undef IF_WIDE_ELSE718,24611

lib/dr_api.h,120
#define _DR_API_H_ 34,1709
DR_EXPORT LINK_ONCE int _USES_DR_VERSION_ 97,3442
LINK_ONCE int _USES_DR_VERSION_ 99,3519

lib/dr_app.h,155
#define _DR_APP_H_ 40,1829
#    define DR_APP_API 44,1890
#    define DR_APP_API 46,1943
#    define DR_APP_API 50,2082
#    define DR_APP_API52,2154

lib/dr_config.h,979
#define _DR_CONFIG_H_ 35,1774
#define DR_MAX_OPTIONS_LENGTH 57,2638
    DR_MODE_NONE 66,2839
    DR_MODE_CODE_MANIPULATION 72,3011
    DR_MODE_PROBE 76,3147
    DR_MODE_MEMORY_FIREWALL 82,3256
    DR_MODE_DO_NOT_RUN 91,3459
} dr_operation_mode_t;93,3488
    DR_SUCCESS,98,3640
    DR_PROC_REG_EXISTS,101,3729
    DR_PROC_REG_INVALID,104,3830
    DR_PRIORITY_INVALID,107,3928
    DR_ID_CONFLICTING,110,4017
    DR_ID_INVALID,113,4105
    DR_FAILURE,116,4216
    DR_NUDGE_PID_NOT_INJECTED,119,4317
    DR_NUDGE_TIMEOUT,122,4440
    DR_CONFIG_STRING_TOO_LONG,125,4538
    DR_CONFIG_FILE_WRITE_FAILED,128,4617
    DR_NUDGE_PID_NOT_FOUND,131,4734
} dr_config_status_t;133,4763
    DR_PLATFORM_DEFAULT,137,4876
    DR_PLATFORM_32BIT,138,4949
    DR_PLATFORM_64BIT,139,5022
} dr_platform_t;140,5102
typedef struct _dr_registered_process_iterator_t dr_registered_process_iterator_t;398,17827
typedef struct _dr_client_iterator_t dr_client_iterator_t;709,33815

lib/dr_inject.h,142
#define _DR_INJECT_H_ 35,1764
# define ERROR_IMAGE_MACHINE_TYPE_MISMATCH_EXE 55,2379
# define WARN_IMAGE_MACHINE_TYPE_MISMATCH_EXE 60,2537

lib/dr_stats.h,1059
#define _DR_STATS_H_ 36,1759
# define DR_SHMEM_KEY 46,2071
# define DYNAMORIO_MAGIC_STRING 48,2136
# define DYNAMORIO_MAGIC_STRING_LEN 49,2193
#define STAT_NAME_MAX_LEN 52,2264
typedef struct _single_stat_t 53,2293
    char name[name58,2525
    stats_int_t value;62,2739
} single_stat_t;63,2762
#define NUM_EVENTS 69,2975
typedef struct _dr_statistics_t 70,2997
    char magicstring[magicstring72,3043
    process_id_t process_id;74,3100
    char process_name[process_name75,3149
    uint logmask;76,3205
    uint loglevel;77,3255
    char logdir[logdir78,3316
    uint64 perfctr_vals[perfctr_vals79,3386
    uint num_stats;80,3423
    single_stat_t stats[stats83,3533
#  define STATS_DEF(86,3581
#  define RSTATS_DEF(88,3647
# undef STATS_DEF91,3737
# undef RSTATS_DEF92,3755
} dr_statistics_t;94,3781
    thread_id_t thread_id;99,3875
    mutex_t thread_stats_lock;100,3902
# define STATS_DEF(116,4901
# define RSTATS_DEF(118,4967
} thread_local_statistics_t;121,5056
#undef STATS_DEF122,5085
#undef RSTATS_DEF123,5102

lib/fortran.c,93
void drsetup_(47,2070
void drcleanup_(52,2111
void drstart_(57,2156
void drstop_(62,2197

lib/globals_shared.h,22486
#define _GLOBALS_SHARED_H_44,1915
#    define WINDOWS49,2011
# define X6478,2822
# define UNIX82,2880
#  define WIN32_LEAN_AND_MEAN87,2940
#  define DR_EXPORT 113,3580
#  define LINK_ONCE 114,3622
#  define ALIGN_VAR(115,3664
#   define inline 117,3730
#  define INLINE_FORCED 119,3766
#    define DR_EXPORT 126,4030
#    define DR_EXPORT128,4101
#  define LINK_ONCE 130,4132
#  define ALIGN_VAR(131,4175
#   define inline 133,4250
#  define INLINE_FORCED 135,4288
#define MAXIMUM_PATH 149,4692
#  define NULL 154,4790
typedef _Bool bool;161,4964
typedef char bool;164,5038
#    define true 168,5092
#    define false 171,5139
#define CAST_TO_bool(178,5277
typedef unsigned int uint;181,5340
typedef unsigned short ushort;184,5406
typedef unsigned char byte;187,5474
typedef signed char sbyte;190,5540
typedef byte * app_pc;192,5574
typedef void (*generic_func_t)generic_func_t194,5598
typedef unsigned __int64 uint64;198,5683
typedef __int64 int64;201,5758
typedef __int64 ssize_t;204,5803
typedef int ssize_t;206,5836
#  define INT64_FORMAT 208,5866
typedef unsigned long int uint64;212,5962
typedef long int int64;215,6042
#    define INT64_FORMAT 217,6077
typedef unsigned long long int uint64;220,6150
typedef long long int int64;223,6235
#    define INT64_FORMAT 225,6275
typedef uint64 reg_t;233,6451
typedef uint reg_t;235,6479
typedef reg_t ptr_uint_t;238,6574
typedef int64 ptr_int_t;240,6611
typedef int ptr_int_t;242,6642
typedef size_t app_rva_t;250,6838
#define PTR_UINT_0 252,6865
#define PTR_UINT_1 253,6907
#define PTR_UINT_MINUS_1 254,6949
typedef ptr_uint_t thread_id_t;257,7007
typedef ptr_uint_t process_id_t;258,7039
typedef pid_t thread_id_t;260,7090
typedef pid_t process_id_t;261,7117
#define INVALID_PROCESS_ID 264,7153
typedef HANDLE file_t;272,7395
#  define INVALID_FILE 274,7467
#  define STDOUT 280,7719
#  define STDERR 282,7803
#  define STDIN 284,7887
typedef int file_t;289,7953
#  define INVALID_FILE 291,8022
#  define STDOUT 299,8349
#  define STDERR 301,8421
#  define STDIN 303,8493
typedef uint client_id_t;318,8983
    uint black_box_uint;328,9209
    uint64 black_box_uint64;329,9234
    uint black_box_uint[black_box_uint331,9270
} opnd_t;333,9306
    uint black_box_uint[black_box_uint342,9528
    uint black_box_uint[black_box_uint344,9564
} instr_t;346,9601
typedef struct _opnd_t opnd_t;349,9634
typedef struct _instr_t instr_t;351,9682
# define IN 356,9781
# define OUT 359,9836
# define INOUT 362,9895
# define POINTER_MAX 368,9985
#  define SSIZE_T_MAX 370,10038
# define POINTER_MAX_32BIT 372,10078
# define POINTER_MAX 374,10135
#  define SSIZE_T_MAX 376,10186
#define MAX_CLIENT_LIBS 380,10232
# define MAX(387,10483
# define MIN(388,10526
#define PTR_UINT_ABS(390,10576
#define TESTALL(393,10671
#define TESTANY(395,10772
#define TEST 397,10865
#define BOOLS_MATCH(399,10887
# define IF_DEBUG(403,11003
# define _IF_DEBUG(404,11026
# define IF_DEBUG_(405,11052
# define IF_DEBUG_ELSE(406,11078
# define IF_DEBUG_ELSE_0(407,11109
# define IF_DEBUG_ELSE_NULL(408,11141
# define IF_DEBUG(410,11182
# define _IF_DEBUG(411,11203
# define IF_DEBUG_(412,11225
# define IF_DEBUG_ELSE(413,11247
# define IF_DEBUG_ELSE_0(414,11278
# define IF_DEBUG_ELSE_NULL(415,11308
# define IF_INTERNAL(419,11370
# define IF_INTERNAL_ELSE(420,11396
# define IF_INTERNAL(422,11435
# define IF_INTERNAL_ELSE(423,11459
# define IF_WINDOWS(427,11515
# define IF_WINDOWS_(428,11540
# define _IF_WINDOWS(429,11568
# define IF_WINDOWS_ELSE_0(430,11596
# define IF_WINDOWS_ELSE(431,11630
# define IF_WINDOWS_ELSE_NP(432,11664
# define IF_UNIX(433,11699
# define IF_UNIX_ELSE(434,11719
# define IF_UNIX_(435,11748
# define _IF_UNIX(436,11769
# define IF_WINDOWS(438,11796
# define IF_WINDOWS_(439,11819
# define _IF_WINDOWS(440,11843
# define IF_WINDOWS_ELSE_0(441,11867
# define IF_WINDOWS_ELSE(442,11901
# define IF_WINDOWS_ELSE_NP(443,11935
# define IF_UNIX(444,11970
# define IF_UNIX_ELSE(445,11992
# define IF_UNIX_(446,12021
# define _IF_UNIX(447,12045
# define IF_LINUX(451,12091
# define IF_LINUX_ELSE(452,12114
# define IF_LINUX_(453,12144
# define IF_LINUX(455,12175
# define IF_LINUX_ELSE(456,12196
# define IF_LINUX_(457,12226
# define IF_VMX86(461,12276
# define IF_VMX86_ELSE(462,12299
# define _IF_VMX86(463,12329
# define IF_NOT_VMX86(464,12355
# define IF_VMX86(466,12387
# define IF_VMX86_ELSE(467,12408
# define _IF_VMX86(468,12438
# define IF_NOT_VMX86(469,12460
#  define IF_HAVE_TLS_ELSE(474,12524
#  define IF_NOT_HAVE_TLS(475,12559
#  define IF_HAVE_TLS_ELSE(477,12595
#  define IF_NOT_HAVE_TLS(478,12630
# define IF_HAVE_TLS_ELSE(482,12751
# define IF_NOT_HAVE_TLS(483,12785
# define IF_WINDOWS_AND_CORE(487,12874
# define IF_WINDOWS_AND_CORE(489,12914
# define IF_PROG_SHEP(493,12981
# define IF_PROG_SHEP(495,13014
# define IF_RCT_IND_BRANCH(499,13107
# define IF_RCT_IND_BRANCH(501,13145
# define IF_RETURN_AFTER_CALL(505,13246
# define IF_RETURN_AFTER_CALL_ELSE(506,13281
# define IF_RETURN_AFTER_CALL(508,13330
# define IF_RETURN_AFTER_CALL_ELSE(509,13363
# define IF_HOTP(513,13444
# define IF_HOTP(515,13472
# define IF_CLIENT_INTERFACE(519,13524
# define IF_CLIENT_INTERFACE_ELSE(520,13558
# define _IF_CLIENT_INTERFACE(521,13600
# define _IF_NOT_CLIENT_INTERFACE(522,13637
# define _IF_CLIENT(524,13713
# define IF_CLIENT_INTERFACE(526,13746
# define IF_CLIENT_INTERFACE_ELSE(527,13778
# define _IF_CLIENT_INTERFACE(528,13820
# define _IF_NOT_CLIENT_INTERFACE(529,13853
# define _IF_CLIENT(530,13894
# define IF_CUSTOM_TRACES(534,13946
# define IF_CUSTOM_TRACES(536,13983
# define IF_APP_EXPORTS(540,14042
# define IF_APP_EXPORTS(542,14077
# define IF_GBOP(546,14124
# define IF_GBOP(548,14152
# define IF_PROC_CTL(552,14203
# define IF_PROC_CTL(554,14235
# define IF_KSTATS(558,14281
# define IF_KSTATS(560,14311
# define IF_UNIT_TEST_ELSE(564,14369
# define IF_UNIT_TEST_ELSE(566,14409
# define IF_X64(572,14528
# define IF_X64_ELSE(573,14549
# define IF_X64_(574,14578
# define _IF_X64(575,14601
# define IF_NOT_X64(576,14625
# define _IF_NOT_X64(577,14648
# define IF_X64(579,14678
# define IF_X64_ELSE(580,14697
# define IF_X64_(581,14726
# define _IF_X64(582,14746
# define IF_NOT_X64(583,14766
# define _IF_NOT_X64(584,14791
    SYSLOG_INFORMATION 589,14866
    SYSLOG_INFORMATION = 0x1,x1589,14866
    SYSLOG_WARNING 590,14896
    SYSLOG_WARNING     = 0x2,x2590,14896
    SYSLOG_ERROR 591,14926
    SYSLOG_ERROR       = 0x4,x4591,14926
    SYSLOG_CRITICAL 592,14956
    SYSLOG_CRITICAL    = 0x8,x8592,14956
    SYSLOG_NONE 593,14986
    SYSLOG_NONE        = 0x0,x0593,14986
    SYSLOG_ALL 594,15016
    SYSLOG_ALL         = SYSLOG_INFORMATION 594,15016
    SYSLOG_ALL         = SYSLOG_INFORMATION | SYSLOG_WARNING 594,15016
    SYSLOG_ALL         = SYSLOG_INFORMATION | SYSLOG_WARNING | SYSLOG_ERROR 594,15016
    SYSLOG_ALL         = SYSLOG_INFORMATION | SYSLOG_WARNING | SYSLOG_ERROR | SYSLOG_CRITICAL594,15016
} syslog_event_type_t;595,15110
#define DYNAMO_OPTION(597,15134
#define DYNAMO_OPTION_NOT_STRING(601,15445
#define EXPOSE_INTERNAL_OPTIONS 604,15556
# define INTERNAL_OPTION(611,15890
# define INTERNAL_OPTION(624,16798
 typedef unsigned int uint32;629,16945
typedef uint64 timestamp_t;633,17107
#  define NAKED634,17135
#  define ZHEX32_FORMAT_STRING 635,17151
#  define HEX32_FORMAT_STRING 636,17189
#  define MAX_PATH 645,17610
 typedef unsigned int uint;647,17684
 typedef unsigned int uint32;650,17751
typedef unsigned __int64 uint64;653,17844
typedef __int64 int64;654,17877
typedef int64 ssize_t;656,17913
typedef int ssize_t;658,17944
#    define ZHEX32_FORMAT_STRING 662,18057
#    define HEX32_FORMAT_STRING 663,18100
#    define ZHEX32_FORMAT_STRING 665,18148
#    define HEX32_FORMAT_STRING 666,18188
#    define ULLONG_MAX 670,18330
typedef uint64 timestamp_t;672,18373
#  define NAKED 673,18401
#define FIXED_TIMESTAMP_FORMAT 676,18445
#define UINT64_FORMAT_CODE 680,18565
#define INT64_FORMAT_CODE 681,18609
#define UINT64_FORMAT_STRING 682,18652
#define INT64_FORMAT_STRING 683,18704
#define HEX64_FORMAT_STRING 684,18754
#define ZHEX64_FORMAT_STRING 685,18803
#define ZHEX32_FORMAT_STRING 687,18879
#define HEX32_FORMAT_STRING 688,18915
# define PFMT 691,19013
# define PIFMT 692,19048
# define SZFMT 693,19083
# define PFMT 695,19124
# define PIFMT 696,19159
# define SZFMT 697,19194
#define PFX 705,19410
#define PIFX 706,19432
typedef int64 stats_int_t;715,19674
typedef int stats_int_t;717,19707
#define L_UINT64_FORMAT_STRING 736,20483
#  define PFMT 738,20564
#  define PIFMT 739,20600
#  define SZFMT 740,20636
#  define SSZFMT 741,20673
#  define SZFC 742,20710
#  define SSZFC 743,20744
#  define PFMT 745,20784
#  define PIFMT 746,20820
#  define SZFMT 747,20856
#  define SSZFMT 748,20877
#  define SZFC 749,20899
#  define SSZFC 750,20918
#define L_PFMT 752,20945
#define PFX 753,21000
#define PIFX 754,21021
# define IDFMT 758,21104
# define IDFMT 760,21131
#define MAX_REGISTRY_PARAMETER 765,21282
# define MAX_OPTIONS_STRING 768,21433
# define MAX_CONFIG_VALUE 769,21469
# define MAX_OPTIONS_STRING 778,21938
# define MAX_CONFIG_VALUE 779,21974
#define MAX_LIST_OPTION_LENGTH 782,22091
#define MAX_PATH_OPTION_LENGTH 784,22200
#define MAX_OPTION_LENGTH 786,22291
#define MAX_PARAMNAME_LENGTH 788,22342
#define MAX_MODNAME_INTERNAL 791,22433
#define MAX_DWORD_STRING_LENGTH 796,22585
typedef char pathstring_t[pathstring_t798,22621
typedef char liststring_t[liststring_t802,22809
#define BUFFER_SIZE_BYTES(805,22922
#define BUFFER_SIZE_ELEMENTS(806,22970
#define BUFFER_LAST_ELEMENT(807,23048
#define NULL_TERMINATE_BUFFER(808,23119
#define BUFFER_ROOM_LEFT_W(810,23185
#define BUFFER_ROOM_LEFT(811,23266
#define CAT_AND_TERMINATE(816,23499
#define EXPANDSTR(824,23692
#define STRINGIFY(825,23716
#  define PRODUCT_NAME 829,23832
#  define PRODUCT_NAME 831,23892
#define COMPANY_NAME 841,24327
#define COMPANY_NAME_EVENTLOG 842,24383
#define COMPANY_LONG_NAME 844,24502
#  define BUILD_NUMBER_STRING 847,24572
#  define BUILD_NUMBER_STRING 849,24640
#  define BUILD_NUMBER 850,24685
#  define VERSION_NUMBER_STRING 854,24742
#  define VERSION_NUMBER_STRING 856,24816
#  define VERSION_NUMBER 857,24867
#  define HOT_PATCHING_DLL_CACHE_PATH 861,24936
#  define HOTP_MODES_FILENAME 862,24990
#  define HOTP_POLICIES_FILENAME 863,25035
#define DYNAMORIO_VAR_CONFIGDIR_ID 867,25163
#define DYNAMORIO_VAR_HOME_ID 868,25219
#define DYNAMORIO_VAR_LOGDIR_ID 869,25270
#define DYNAMORIO_VAR_OPTIONS_ID 870,25323
#define DYNAMORIO_VAR_AUTOINJECT_ID 871,25377
#define DYNAMORIO_VAR_UNSUPPORTED_ID 872,25434
#define DYNAMORIO_VAR_RUNUNDER_ID 873,25494
#define DYNAMORIO_VAR_CMDLINE_ID 874,25549
#define DYNAMORIO_VAR_ONCRASH_ID 875,25603
#define DYNAMORIO_VAR_SAFEMARKER_ID 876,25657
#define DYNAMORIO_VAR_CACHE_ROOT_ID 879,25793
#define DYNAMORIO_VAR_CACHE_SHARED_ID 885,26138
#define DYNAMORIO_VAR_PERSCACHE_ROOT_ID 892,26489
#define DYNAMORIO_VAR_PERSCACHE_SHARED_ID 894,26596
#define PERSCACHE_FILE_SUFFIX 898,26769
# define DYNAMORIO_VAR_HOT_PATCH_POLICES_ID 901,26836
# define DYNAMORIO_VAR_HOT_PATCH_MODES_ID 902,26910
# define DYNAMORIO_VAR_APP_PROCESS_WHITELIST_ID 905,27009
# define DYNAMORIO_VAR_ANON_PROCESS_WHITELIST_ID 906,27090
# define DYNAMORIO_VAR_APP_PROCESS_BLACKLIST_ID 908,27174
# define DYNAMORIO_VAR_ANON_PROCESS_BLACKLIST_ID 909,27255
#define DYNAMORIO_VAR_CONFIGDIR 912,27346
#define DYNAMORIO_VAR_HOME 913,27417
#define DYNAMORIO_VAR_LOGDIR 914,27483
#define DYNAMORIO_VAR_OPTIONS 915,27551
#define DYNAMORIO_VAR_AUTOINJECT 916,27620
#define DYNAMORIO_VAR_UNSUPPORTED 917,27692
#define DYNAMORIO_VAR_RUNUNDER 918,27767
#define DYNAMORIO_VAR_CMDLINE 919,27837
#define DYNAMORIO_VAR_ONCRASH 920,27906
#define DYNAMORIO_VAR_SAFEMARKER 921,27975
#define DYNAMORIO_VAR_CACHE_ROOT 922,28047
#define DYNAMORIO_VAR_CACHE_SHARED 923,28120
#define DYNAMORIO_VAR_PERSCACHE_ROOT 924,28197
#define DYNAMORIO_VAR_PERSCACHE_SHARED 925,28278
# define DYNAMORIO_VAR_HOT_PATCH_POLICIES 927,28393
# define DYNAMORIO_VAR_HOT_PATCH_MODES 928,28482
# define DYNAMORIO_VAR_APP_PROCESS_WHITELIST 931,28596
# define DYNAMORIO_VAR_ANON_PROCESS_WHITELIST 933,28697
# define DYNAMORIO_VAR_APP_PROCESS_BLACKLIST 936,28801
# define DYNAMORIO_VAR_ANON_PROCESS_BLACKLIST 938,28902
#  define DYNAMORIO_VAR_EXE_PATH 944,29026
#  define DYNAMORIO_VAR_EXECVE 945,29087
#  define DYNAMORIO_VAR_EXECVE_LOGDIR 946,29151
#  define L_IF_WIN(947,29217
#  define EXPAND_LEVEL(951,29263
#  define L_EXPAND_LEVEL(952,29331
#  define L(953,29368
#  define LCONCAT(954,29394
#  define L_IF_WIN(955,29454
#  define L_DYNAMORIO_VAR_CONFIGDIR 958,29533
#  define L_DYNAMORIO_VAR_HOME 959,29611
#  define L_DYNAMORIO_VAR_LOGDIR 960,29684
#  define L_DYNAMORIO_VAR_OPTIONS 961,29759
#  define L_DYNAMORIO_VAR_AUTOINJECT 962,29835
#  define L_DYNAMORIO_VAR_UNSUPPORTED 963,29914
#  define L_DYNAMORIO_VAR_RUNUNDER 964,29994
#  define L_DYNAMORIO_VAR_CMDLINE 965,30071
#  define L_DYNAMORIO_VAR_ONCRASH 966,30147
#  define L_DYNAMORIO_VAR_SAFEMARKER 967,30223
#  define L_DYNAMORIO_VAR_CACHE_ROOT 968,30302
#  define L_DYNAMORIO_VAR_CACHE_SHARED 969,30381
#  define L_DYNAMORIO_VAR_HOT_PATCH_POLICIES 971,30494
#  define L_DYNAMORIO_VAR_HOT_PATCH_MODES 972,30589
#  define L_DYNAMORIO_VAR_APP_PROCESS_WHITELIST 975,30710
#  define L_DYNAMORIO_VAR_ANON_PROCESS_WHITELIST 977,30816
#  define L_DYNAMORIO_VAR_APP_PROCESS_BLACKLIST 980,30925
#  define L_DYNAMORIO_VAR_ANON_PROCESS_BLACKLIST 982,31031
#  define L_PRODUCT_NAME 986,31148
#  define L_COMPANY_NAME 987,31215
#  define L_COMPANY_LONG_NAME 988,31282
#  define EVENTLOG_HIVE 991,31385
#  define EVENTLOG_NAME 992,31428
#  define EVENTSOURCE_NAME 993,31474
#  define EVENTLOG_REGISTRY_SUBKEY 995,31559
#  define L_EVENTLOG_REGISTRY_SUBKEY 996,31642
#  define L_EVENTLOG_REGISTRY_KEY 997,31720
#  define L_EVENT_LOG_KEY 998,31819
#  define L_EVENT_LOG_SUBKEY 999,31892
#  define L_EVENT_LOG_NAME 1000,31971
#  define L_EVENT_SOURCE_NAME 1001,32034
#  define L_EVENT_SOURCE_KEY 1002,32097
#  define L_EVENT_SOURCE_SUBKEY 1003,32169
#  define EVENT_LOG_KEY 1005,32248
#  define EVENT_SOURCE_KEY 1006,32336
#  define L_EVENT_FILE_VALUE_NAME 1012,32740
#  define L_EVENT_FILE_NAME_PRE_VISTA 1013,32782
#  define L_EVENT_FILE_NAME_VISTA 1015,32901
#  define L_EVENT_MAX_SIZE_NAME 1017,33022
#  define EVENT_MAX_SIZE 1018,33065
#  define L_EVENT_RETENTION_NAME 1019,33099
#  define EVENT_RETENTION 1020,33145
#  define L_EVENT_TYPES_SUPPORTED_NAME 1022,33194
#  define EVENT_TYPES_SUPPORTED 1023,33251
#  define L_EVENT_CATEGORY_COUNT_NAME 1024,33316
#  define EVENT_CATEGORY_COUNT 1025,33371
#  define L_EVENT_CATEGORY_FILE_NAME 1026,33404
#  define L_EVENT_MESSAGE_FILE 1027,33464
#  define BASE_NAMED_OBJECTS 1030,33551
#  define DYNAMORIO_SHARED_OBJECT_BASE 1032,33682
#  define DYNAMORIO_SHARED_OBJECT_DIRECTORY 1034,33808
#  define DYNAMORIO_REGISTRY_BASE_SUBKEY 1037,33921
#  define DYNAMORIO_REGISTRY_BASE 1038,34003
#  define DYNAMORIO_REGISTRY_HIVE 1039,34135
#  define DYNAMORIO_REGISTRY_KEY 1040,34188
#  define L_DYNAMORIO_REGISTRY_KEY 1041,34255
#  define INJECT_ALL_HIVE 1043,34366
#  define INJECT_ALL_KEY 1044,34414
#  define INJECT_ALL_SUBKEY 1045,34502
#  define INJECT_ALL_LOAD_SUBKEY 1047,34572
#  define INJECT_ALL_SIGN_SUBKEY 1049,34669
#  define INJECT_ALL_HIVE_L 1051,34738
#  define INJECT_ALL_KEY_L 1052,34794
#  define INJECT_ALL_SUBKEY_L 1053,34856
#  define INJECT_ALL_LOAD_SUBKEY_L 1054,34921
#  define INJECT_ALL_SIGN_SUBKEY_L 1055,35000
#  define INJECT_DLL_NAME 1057,35080
#  define INJECT_DLL_8_3_NAME 1058,35129
#  define INJECT_HELPER_DLL1_NAME 1060,35176
#  define INJECT_HELPER_DLL2_NAME 1061,35234
#  define DEBUGGER_INJECTION_HIVE 1063,35293
#  define DEBUGGER_INJECTION_KEY 1064,35352
#  define DEBUGGER_INJECTION_VALUE_NAME 1065,35472
#  define DEBUGGER_INJECTION_HIVE_L 1067,35524
#  define DEBUGGER_INJECTION_KEY_L 1068,35591
#  define DEBUGGER_INJECTION_VALUE_NAME_L 1069,35672
#  define DRINJECT_NAME 1071,35761
#  define SVCHOST_NAME 1074,35881
#  define EXE_SUFFIX 1075,35922
#  define L_EXE_SUFFIX 1076,35960
#  define SVCHOST_EXE_NAME 1077,36018
#  define L_SVCHOST_EXE_NAME 1078,36073
#  define DYNAMORIO_LIBRARY_NAME 1081,36188
#  define DLLPATH_RELEASE 1082,36237
#  define DLLPATH_DEBUG 1083,36307
#  define DLLPATH_PROFILE 1084,36375
#  define L_DYNAMORIO_LIBRARY_NAME 1086,36446
#  define L_DLLPATH_RELEASE 1087,36520
#  define L_DLLPATH_DEBUG 1088,36595
#  define L_DLLPATH_PROFILE 1089,36668
#  define INJECT_ALL_DLL_SUBPATH 1091,36744
#  define L_INJECT_ALL_DLL_SUBPATH 1092,36808
enum DLL_TYPE 1094,36892
        DLL_NONE,1095,36908
        DLL_UNKNOWN,1096,36926
        DLL_RELEASE,1097,36947
        DLL_DEBUG,1098,36968
        DLL_PROFILE,1099,36987
        DLL_CUSTOM,1100,37008
        DLL_PATHHAS1101,37028
# define UNIT_TEST_EXE_NAME 1106,37101
    RUNUNDER_OFF 1158,39462
    RUNUNDER_OFF                  = 0x00,x001158,39462
    RUNUNDER_ON 1159,39514
    RUNUNDER_ON                   = 0x01,x011159,39514
    RUNUNDER_ALL 1160,39566
    RUNUNDER_ALL                  = 0x02,x021160,39566
    RUNUNDER_FORMERLY_EXPLICIT 1165,39831
    RUNUNDER_FORMERLY_EXPLICIT    = 0x04,x041165,39831
    RUNUNDER_COMMANDLINE_MATCH 1167,39884
    RUNUNDER_COMMANDLINE_MATCH    = 0x08,x081167,39884
    RUNUNDER_COMMANDLINE_DISPATCH 1168,39936
    RUNUNDER_COMMANDLINE_DISPATCH = 0x10,x101168,39936
    RUNUNDER_COMMANDLINE_NO_STRIP 1169,39988
    RUNUNDER_COMMANDLINE_NO_STRIP = 0x20,x201169,39988
    RUNUNDER_ONCE 1170,40040
    RUNUNDER_ONCE                 = 0x40,x401170,40040
    RUNUNDER_EXPLICIT 1172,40093
    RUNUNDER_EXPLICIT             = 0x80,x801172,40093
#define NUDGE_DEFINITIONS(1191,41007
#define NUDGE_DEF(1225,43506
    NUDGE_DEFINITIONS(1226,43557
#undef NUDGE_DEF1227,43581
    NUDGE_DR_PARAMETRIZED_END1228,43598
} nudge_generic_type_t;1229,43628
#define NUDGE_GENERIC(1232,43694
#define NUDGE_ARG_VERSION_1 1235,43784
#define NUDGE_ARG_CURRENT_VERSION 1236,43814
    NUDGE_IS_INTERNAL 1242,43936
    NUDGE_IS_INTERNAL       = 0x01,x011242,43936
    NUDGE_NUDGER_FREE_STACK 1244,44023
    NUDGE_NUDGER_FREE_STACK = 0x02,x021244,44023
    NUDGE_FREE_ARG 1246,44183
    NUDGE_FREE_ARG          = 0x04,x041246,44183
    int ignored1;1257,44589
    uint nudge_action_mask:nudge_action_mask1262,44866
    uint version:version1263,44897
    uint flags:flags1264,44917
    int ignored2;1265,44935
    uint version;1267,45024
    uint nudge_action_mask;1268,45083
    uint flags;1269,45145
    client_id_t client_id;1271,45202
    uint64 client_arg;1272,45264
} nudge_arg_t;1278,45452
# define NUDGESIG_SIGNUM 1286,45688
#define AVOID_API_EXPORT 1296,46137
#define HOTP_POLICY_ID_LENGTH 1308,46555
    DR_PROBE_STATUS_ERROR 1322,47018
    DR_PROBE_STATUS_INVALID_ID 1325,47134
    DR_PROBE_STATUS_INVALID_VADDR 1335,47521
    DR_PROBE_STATUS_INVALID_LIB 1341,47771
    DR_PROBE_STATUS_INVALID_LIB_OFFS 1346,47969
    DR_PROBE_STATUS_INVALID_FUNC 1352,48212
    DR_PROBE_STATUS_VADDR_NOT_EXEC 1364,48782
    DR_PROBE_STATUS_LIB_NOT_SEEN 1367,48902
    DR_PROBE_STATUS_WAITING_FOR_EXEC 1373,49155
    DR_PROBE_STATUS_LIB_UNLOADED 1378,49359
    DR_PROBE_STATUS_INJECTED 1383,49482
    DR_PROBE_STATUS_UNSUPPORTED 1386,49590
    HOTP_INJECT_ERROR 1416,50955
    HOTP_INJECT_ERROR = DR_PROBE_STATUS_ERROR,1416,50955
    HOTP_INJECT_PROTECT 1419,51050
    HOTP_INJECT_PROTECT = DR_PROBE_STATUS_INJECTED,1419,51050
    HOTP_INJECT_DETECT 1425,51305
    HOTP_INJECT_IN_PROGRESS 1430,51498
    HOTP_INJECT_PENDING 1435,51648
    HOTP_INJECT_PENDING = DR_PROBE_STATUS_WAITING_FOR_EXEC,1435,51648
    HOTP_INJECT_NO_MATCH 1441,51936
    HOTP_INJECT_NO_MATCH = DR_PROBE_STATUS_LIB_NOT_SEEN,1441,51936
    HOTP_INJECT_OFF 1450,52209
} dr_probe_status_t;1452,52319
typedef dr_probe_status_t hotp_inject_status_t;1455,52365
    HOTP_MODE_OFF 1462,52563
    HOTP_MODE_DETECT 1463,52586
    HOTP_MODE_PROTECT 1464,52613
} hotp_policy_mode_t;1465,52639
    char policy_id[policy_id1481,53457
    hotp_inject_status_t inject_status;1482,53504
    hotp_policy_mode_t mode;1491,53985
} hotp_policy_status_t;1492,54014
    uint crc;1507,54702
    uint size;1508,54716
    uint num_policies;1509,54773
    hotp_policy_status_t *policy_status_array;policy_status_array1510,54796
} hotp_policy_status_table_t;1511,54843
    GET_PARAMETER_BUF_TOO_SMALL 1527,55531
    GET_PARAMETER_FAILURE 1528,55569
    GET_PARAMETER_SUCCESS 1529,55600
    GET_PARAMETER_NOAPPSPECIFIC 1530,55631
    SET_PARAMETER_FAILURE 1531,55668
    SET_PARAMETER_FAILURE = GET_PARAMETER_FAILURE,1531,55668
    SET_PARAMETER_SUCCESS 1532,55719
    SET_PARAMETER_SUCCESS = GET_PARAMETER_SUCCESS1532,55719
#define IS_GET_PARAMETER_FAILURE(1534,55772
#define IS_GET_PARAMETER_SUCCESS(1535,55820
typedef union _dr_xmm_t 1570,57437
    uint64 u64[u641572,57474
    uint   u32[u321574,57545
    byte   u8[u81575,57609
    reg_t  reg[reg1576,57673
} dr_xmm_t;1577,57751
typedef union _dr_ymm_t 1580,57793
    uint64 u64[u641596,58544
    uint   u32[u321599,58622
    byte   u8[u81600,58686
    reg_t  reg[reg1601,58750
} dr_ymm_t;1602,58828
#  define NUM_XMM_SLOTS 1615,59303
#  define NUM_XMM_SLOTS 1617,59399
# define PRE_XMM_PADDING 1619,59498
# define NUM_XMM_SLOTS 1621,59592
# define PRE_XMM_PADDING 1622,59680
    DR_MC_INTEGER 1631,60014
    DR_MC_INTEGER    = 0x01,x011631,60014
    DR_MC_CONTROL 1638,60247
    DR_MC_CONTROL    = 0x02,x021638,60247
    DR_MC_MULTIMEDIA 1645,60565
    DR_MC_MULTIMEDIA = 0x04,x041645,60565
    DR_MC_ALL 1647,60624
    DR_MC_ALL        = (DR_MC_INTEGER 1647,60624
    DR_MC_ALL        = (DR_MC_INTEGER | DR_MC_CONTROL 1647,60624
    DR_MC_ALL        = (DR_MC_INTEGER | DR_MC_CONTROL | DR_MC_MULTIMEDIA)1647,60624
} dr_mcontext_flags_t;1648,60699
typedef struct _dr_mcontext_t 1653,60761
    size_t size;1658,60940
    dr_mcontext_flags_t flags;1667,61402
} dr_mcontext_t;1669,61452
typedef struct _priv_mcontext_t 1673,61535
} priv_mcontext_t;1675,61588
#define NUM_XMM_SAVED 1698,62733

lib/hotpatch_interface.h,2216
#define _HOTPATCH_INTERFACE_H_ 36,1768
#define HOTP_INTERFACE_VERSION 48,2171
    HOTP_EXEC_EXPLOIT_DETECTED 61,2726
    HOTP_EXEC_EXPLOIT_DETECTED          = 0x00000001,x0000000161,2726
    HOTP_EXEC_EXPLOIT_NOT_DETECTED 62,2780
    HOTP_EXEC_EXPLOIT_NOT_DETECTED      = 0x00000002,x0000000262,2780
    HOTP_EXEC_DETECTOR_ERROR 63,2834
    HOTP_EXEC_DETECTOR_ERROR            = 0x00000004,x0000000463,2834
    HOTP_EXEC_EXPLOIT_PROTECTED 66,2952
    HOTP_EXEC_EXPLOIT_PROTECTED         = 0x00000008,x0000000866,2952
    HOTP_EXEC_EXPLOIT_NOT_PROTECTED 67,3006
    HOTP_EXEC_EXPLOIT_NOT_PROTECTED     = 0x00000010,x0000001067,3006
    HOTP_EXEC_PROTECTOR_ERROR 68,3060
    HOTP_EXEC_PROTECTOR_ERROR           = 0x00000020,x0000002068,3060
    HOTP_EXEC_EXPLOIT_KILL_THREAD 71,3193
    HOTP_EXEC_EXPLOIT_KILL_THREAD       = 0x00000040,x0000004071,3193
    HOTP_EXEC_EXPLOIT_KILL_PROCESS 72,3247
    HOTP_EXEC_EXPLOIT_KILL_PROCESS      = 0x00000080,x0000008072,3247
    HOTP_EXEC_EXPLOIT_RAISE_EXCEPTION 73,3301
    HOTP_EXEC_EXPLOIT_RAISE_EXCEPTION   = 0x00000100,x0000010073,3301
    HOTP_EXEC_CHANGE_CONTROL_FLOW 74,3355
    HOTP_EXEC_CHANGE_CONTROL_FLOW       = 0x00000200,x0000020074,3355
    HOTP_EXEC_LOG_EVENT 79,3567
    HOTP_EXEC_LOG_EVENT                 = 0x00000400,x0000040079,3567
    HOTP_EXEC_ABORTED 84,3787
    HOTP_EXEC_ABORTED                   = 0x00000800x0000080084,3787
} hotp_exec_status_t;85,3840
typedef priv_mcontext_t hotp_context_t;87,3863
typedef hotp_exec_status_t (*hotp_func_t)hotp_func_t92,4067
#define APP_XDI(94,4140
#define APP_XSI(95,4189
#define APP_XBP(96,4238
#define APP_XSP(97,4287
#define APP_XBX(98,4336
#define APP_XDX(99,4385
#define APP_XCX(100,4434
#define APP_XAX(101,4483
#define APP_R8(102,4532
#define APP_R9(103,4580
#define APP_R10(104,4628
#define APP_R11(105,4677
#define APP_R12(106,4726
#define APP_R13(107,4775
#define APP_R14(108,4824
#define APP_R15(109,4873
#define APP_XFLAGS(110,4922
#define APP_EDI 113,5011
#define APP_ESI 114,5035
#define APP_EBP 115,5059
#define APP_ESP 116,5083
#define APP_EBX 117,5107
#define APP_EDX 118,5131
#define APP_ECX 119,5155
#define APP_EAX 120,5179

lib/kstatsx.h,19
KSTAT_DEF(55,2208

lib/mcxtx.h,920
        reg_t xdi;57,2593
        reg_t IF_X64_ELSE(58,2672
        reg_t xsi;61,2847
        reg_t IF_X64_ELSE(62,2926
        reg_t xbp;65,3101
        reg_t IF_X64_ELSE(66,3180
        reg_t xsp;69,3355
        reg_t IF_X64_ELSE(70,3434
        reg_t xbx;73,3609
        reg_t IF_X64_ELSE(74,3688
        reg_t xdx;77,3863
        reg_t IF_X64_ELSE(78,3942
        reg_t xcx;81,4117
        reg_t IF_X64_ELSE(82,4196
        reg_t xax;85,4371
        reg_t IF_X64_ELSE(86,4450
    reg_t r8;89,4624
    reg_t r9;90,4693
    reg_t r10;91,4762
    reg_t r11;92,4832
    reg_t r12;93,4902
    reg_t r13;94,4972
    reg_t r14;95,5042
    reg_t r15;96,5112
        reg_t xflags;99,5201
        reg_t IF_X64_ELSE(100,5289
        byte *xip;xip109,5722
        byte *pc;pc110,5801
        byte *IF_X64_ELSE(IF_X64_ELSE111,5883
    byte padding[padding113,5980
    dr_ymm_t ymm[ymm140,7430

lib/statsx.h,80
# define RSTATS_DEF 69,2780
# define STATS_DEF(71,2816
    STATS_DEF(74,2869

link.h,4173
#define _CORE_LINK_H_ 43,2030
    LINK_DIRECT 68,3105
    LINK_DIRECT          = 0x0001,x000168,3105
    LINK_INDIRECT 69,3140
    LINK_INDIRECT        = 0x0002,x000269,3140
    LINK_RETURN 76,3492
    LINK_RETURN          = 0x0004,x000476,3492
    LINK_CALL 78,3618
    LINK_CALL            = 0x0008,x000878,3618
    LINK_JMP 79,3653
    LINK_JMP             = 0x0010,x001079,3653
    LINK_FAR 82,3751
    LINK_FAR             = 0x0020,x002082,3751
    LINK_TARGET_PREFIX 85,3810
    LINK_TARGET_PREFIX   = 0x0040,x004085,3810
    LINK_TRACE_CMP 91,4030
    LINK_TRACE_CMP       = 0x0080,x008091,4030
    LINK_SPECIAL_EXIT 97,4243
    LINK_SPECIAL_EXIT    = 0x0100,x010097,4243
    LINK_CALLBACK_RETURN 99,4293
    LINK_CALLBACK_RETURN = 0x0200,x020099,4293
    LINK_NI_SYSCALL_INT 102,4421
    LINK_NI_SYSCALL_INT  = 0x0200,x0200102,4421
    LINK_NI_SYSCALL 105,4530
    LINK_NI_SYSCALL      = 0x0400,x0400105,4530
    LINK_FINAL_INSTR_SHARED_FLAG 106,4565
    LINK_FINAL_INSTR_SHARED_FLAG = LINK_NI_SYSCALL,106,4565
    LINK_FRAG_OFFS_AT_END=110,4715
    LINK_FRAG_OFFS_AT_END= 0x0800,x0800110,4715
    LINK_END_OF_LIST 112,4751
    LINK_END_OF_LIST     = 0x1000,x1000112,4751
    LINK_FAKE 114,4787
    LINK_FAKE            = 0x2000,x2000114,4787
    LINK_LINKED 116,4823
    LINK_LINKED          = 0x4000,x4000116,4823
    LINK_SEPARATE_STUB 118,4859
    LINK_SEPARATE_STUB   = 0x8000,x8000118,4859
# define LINK_NI_SYSCALL_ALL 124,4978
# define LINK_NI_SYSCALL_ALL 126,5053
#  define LINKCOUNT_FORMAT_STRING 131,5156
#  define LINKCOUNT_FORMAT_STRING 133,5202
struct _linkstub_t 167,6207
    ushort         flags;168,6228
    ushort         cti_offset;174,6493
    ushort         fixed_stub_offset;177,6602
    linkcount_type_t count;182,6817
typedef struct _common_direct_linkstub_t 188,6912
    linkstub_t       l;189,6955
    linkstub_t       *next_incoming;next_incoming200,7438
    fragment_t       *target_fragment;target_fragment207,7711
} common_direct_linkstub_t;209,7757
typedef struct _direct_linkstub_t 213,7836
    common_direct_linkstub_t cdl;214,7872
    app_pc         target_tag;220,8092
    cache_pc       stub_pc;226,8318
} direct_linkstub_t;227,8346
typedef struct _cbr_fallthrough_linkstub_t 239,8887
    common_direct_linkstub_t cdl;251,9481
} cbr_fallthrough_linkstub_t;252,9515
typedef struct _indirect_linkstub_t 256,9619
    linkstub_t       l;257,9657
} indirect_linkstub_t;258,9681
typedef struct _post_linkstub_t 265,9879
    ushort         fragment_offset;273,10318
    ushort         padding;279,10646
} post_linkstub_t;280,10674
typedef struct _coarse_incoming_t 287,10987
        cache_pc stub_pc;289,11035
        linkstub_t *fine_l;fine_l290,11061
    } in;291,11089
    bool coarse;292,11099
    struct _coarse_incoming_t *next;next293,11116
} coarse_incoming_t;294,11153
#define LINKSTUB_FAKE(297,11251
#define LINKSTUB_DIRECT(299,11362
#define LINKSTUB_NORMAL_DIRECT(300,11422
#define LINKSTUB_INDIRECT(302,11528
#define LINKSTUB_CBR_FALLTHROUGH(304,11629
#define EXIT_IS_CALL(308,11788
#define EXIT_IS_JMP(309,11867
#define EXIT_IS_IND_JMP_PLT(310,11945
#define LINKSTUB_FINAL(312,12020
#define LINKSTUB_COARSE_PROXY(315,12157
#define LINKSTUB_SIZE(319,12308
#define LINKSTUB_NEXT_EXIT(325,12592
#define LINKSTUB_NEXT_INCOMING(332,12820
#define CBR_FALLTHROUGH_STUB_OFFS(340,13220
#define EXIT_CTI_PC_HELPER(343,13339
#define EXIT_CTI_PC(347,13466
#define EXIT_STUB_PC_HELPER(352,13664
#define EXIT_STUB_PC(356,13800
#define EXIT_TARGET_TAG(363,14130
# define EXIT_FIXED_STUB_PC(370,14418
# define EXIT_TARGETS_SHARED_SYSCALL(374,14529
# define EXIT_TARGETS_SHARED_SYSCALL(378,14682
#define EXIT_HAS_STUB(382,14819
#define EXIT_HAS_LOCAL_STUB(389,15284
# define IS_COARSE_LINKSTUB(512,19200
# define IS_SHARED_SYSCALLS_UNLINKED_LINKSTUB(517,19401
# define IS_SHARED_SYSCALLS_LINKSTUB(522,19631
# define IS_SHARED_SYSCALLS_TRACE_LINKSTUB(526,19854
# define IS_SHARED_SYSCALLS_UNLINKED_LINKSTUB(529,19968
# define IS_SHARED_SYSCALLS_LINKSTUB(530,20023
# define IS_SHARED_SYSCALLS_TRACE_LINKSTUB(531,20069

loader_shared.c,1051
static privmod_t *modlist;modlist54,2429
static privmod_t privmod_static[privmod_static71,2918
uint privmod_static_idx;73,3012
char search_paths[search_paths79,3257
uint search_paths_idx;81,3347
vm_area_vector_t *modlist_areas;modlist_areas84,3407
loader_init(99,3697
loader_exit(147,5699
loader_thread_init(164,6234
loader_thread_exit(216,8273
locate_and_load_private_library(248,9756
load_private_library(256,10006
unload_private_library(282,10688
in_private_library(295,10984
privload_lookup(303,11134
privload_lookup_by_base(327,11788
privload_insert(351,12424
privload_search_path_exists(414,14599
privload_read_drpath_file(430,15095
privload_load(484,17384
privload_unload(551,20062
# define LIB_SUBDIR 590,21602
# define LIB_SUBDIR 592,21636
#define EXT_SUBDIR 594,21671
privload_add_drext_path(596,21701
privload_load_finalize(633,23174
privload_has_thread_entry(666,24092
privload_modlist_initialized(672,24179
privload_next_module(678,24267
privload_first_module(685,24396
privload_print_modules(693,24542

module_list.c,1387
vm_area_vector_t *loaded_module_areas;loaded_module_areas49,2274
os_get_module_info_lock(66,2959
os_get_module_info_unlock(74,3142
os_get_module_info_write_lock(83,3324
os_get_module_info_write_unlock(91,3514
os_get_module_info_locked(99,3708
os_get_module_info_write_locked(107,3860
module_area_create(118,4097
module_area_delete(132,4575
modules_init(143,4873
is_module_list_initialized(154,5217
modules_reset_list(160,5300
modules_exit(191,6369
module_list_add_mapping(211,6903
module_list_remove_mapping(231,7747
module_list_add(241,8156
module_list_remove(282,9905
os_module_set_flag_value(341,11977
os_module_set_flag(362,12479
os_module_clear_flag(368,12601
os_module_get_flag(374,12726
module_pc_lookup(394,13301
module_overlaps(403,13550
os_get_module_name_internal(414,13891
os_get_module_name(446,14988
os_get_module_name_strdup(461,15295
os_get_module_name_buf(472,15691
os_get_module_name_buf_strdup(486,16195
os_module_get_view_size(494,16481
struct _module_iterator_t 510,16833
    vmvector_iterator_t vmvi;511,16861
module_iterator_start(516,16954
module_iterator_hasnext(529,17406
module_iterator_next(547,17939
module_iterator_stop(560,18335
region_intersection_MD5update(573,18780
module_calculate_digest_helper(594,19583
ensure_section_readable(633,21479
restore_unreadable_section(679,23301
module_calculate_digest(730,25290

module_shared.h,2890
#define MODULE_LIST_H35,1774
typedef struct _module_handle_t * module_handle_t;57,2430
#define MODULE_FILE_VERSION_INVALID 61,2498
typedef union _version_number_t 67,2684
    uint64 version;68,2718
        uint ms;70,2796
        uint ls;71,2825
    } version_uint;72,2854
        ushort p2;74,2933
        ushort p1;75,2962
        ushort p4;76,2991
        ushort p3;77,3020
    } version_parts;78,3049
} version_number_t;79,3115
typedef struct _module_names_t 98,3673
    const char *module_name;module_name99,3706
    const char *file_name;file_name103,4054
    const char *exe_name;exe_name106,4222
    const char *rsrc_name;rsrc_name109,4458
    uint64 inode;113,4721
} module_names_t;115,4794
#define GET_MODULE_NAME(130,5333
#define GET_MODULE_NAME(140,5942
typedef struct _module_area_t 148,6386
    app_pc start;162,7326
    app_pc end;163,7344
    app_pc entry_point;165,7361
    uint flags;167,7386
    module_names_t names;169,7403
    char *full_path;full_path170,7429
    os_module_data_t os_data;172,7451
} module_area_t;173,7520
    MODULE_HAS_PRIMARY_COARSE 178,7671
    MODULE_HAS_PRIMARY_COARSE = 0x00000001,x00000001178,7671
    MODULE_RCT_LOADED 181,7847
    MODULE_RCT_LOADED      = 0x00000002,x00000002181,7847
    MODULE_HAS_BORLAND_SEH 184,7980
    MODULE_HAS_BORLAND_SEH = 0x00000004,x00000004184,7980
    MODULE_BEING_UNLOADED 187,8109
    MODULE_BEING_UNLOADED  = 0x00000008,x00000008187,8109
    MODULE_WAS_EXEMPTED 189,8220
    MODULE_WAS_EXEMPTED    = 0x00000010,x00000010189,8220
    MODULE_RCT_SCANNED 192,8397
    MODULE_RCT_SCANNED     = 0x00000020,x00000020192,8397
    MODULE_DO_NOT_PERSIST 196,8521
    MODULE_DO_NOT_PERSIST  = 0x00000040,x00000040196,8521
    MODULE_NULL_INSTRUMENT 199,8593
    MODULE_NULL_INSTRUMENT = 0x00000080,x00000080199,8593
typedef struct _module_iterator_t module_iterator_t;260,10997
typedef void *module_base_t;module_base_t300,13043
module_info_exists(359,15447
    byte full_MD5[full_MD5383,16248
    byte short_MD5[short_MD5392,16702
} module_digest_t;398,16952
typedef struct _privmod_t 429,18206
    app_pc base;430,18234
    size_t size;431,18251
    const char *name;name432,18268
    char path[path433,18290
    uint ref_count;434,18319
    bool externally_loaded;435,18339
    bool is_client;437,18391
    struct _privmod_t *next;next439,18437
    struct _privmod_t *prev;prev440,18466
    void *os_privmod_data;os_privmod_data441,18495
} privmod_t;442,18522
# define DLL_PROCESS_INIT 447,18583
# define DLL_PROCESS_EXIT 448,18628
# define DLL_THREAD_INIT 449,18673
# define DLL_THREAD_EXIT 450,18717
# define DLL_PROCESS_INIT 452,18767
# define DLL_PROCESS_EXIT 453,18795
# define DLL_THREAD_INIT 454,18823
# define DLL_THREAD_EXIT 455,18851
#define PRIVMOD_STATIC_NUM 459,18942
#define SEARCH_PATHS_NUM 464,19163

moduledb.c,1011
static char **exemption_lists exemption_lists46,2172
#define GET_EXEMPT_LIST(47,2210
moduledb_add_to_exempt_list(55,2505
moduledb_remove_from_exempt_list(79,3334
moduledb_update_exempt_list(89,3745
moduledb_process_relaxation_flags(105,4366
START_DATA_SECTION(146,6247
#define MAX_COMPANY_NAME 166,6998
moduledb_process_image(169,7033
END_DATA_SECTION(240,10488
moduledb_init(246,10631
moduledb_exit(262,11103
moduledb_exempt_list_empty(283,11740
moduledb_check_exempt_list(291,11936
print_moduledb_exempt_lists(308,12498
    PROCESS_CONTROL_NO_HASHLIST,340,13711
    PROCESS_CONTROL_HASHLIST_EMPTY,341,13744
    PROCESS_CONTROL_LONG_LIST,347,13987
    PROCESS_CONTROL_NOT_MATCHED,349,14019
    PROCESS_CONTROL_MATCHED350,14052
# define IS_PROCESS_CONTROL_MATCHED(358,14388
process_control_report_long_list(366,14724
process_control_match(386,15445
process_control_whitelist(463,18925
process_control_blacklist(564,22997
process_control(625,25787
void process_control_init(662,27185

moduledb.h,1308
#define _MODULEDB_H_36,1758
    SECTION_NO_CHG 42,1943
    SECTION_IF_RX 43,1967
    SECTION_IF_X 44,1991
    SECTION_ALLOW 45,2015
    MODULEDB_ALL_SECTIONS_BITS 51,2164
    MODULEDB_ALL_SECTIONS_BITS   = 0x00000003,x0000000351,2164
    MODULEDB_ALL_SECTIONS_SHIFT 52,2247
    MODULEDB_RCT_EXEMPT_TO 53,2330
    MODULEDB_RCT_EXEMPT_TO       = 0x00000004,x0000000453,2330
    MODULEDB_REPORT_ON_LOAD 54,2377
    MODULEDB_REPORT_ON_LOAD      = 0x00000008,x0000000854,2377
    MODULEDB_DLL2HEAP 55,2424
    MODULEDB_DLL2HEAP            = 0x00000010,x0000001055,2424
    MODULEDB_DLL2STACK 56,2471
    MODULEDB_DLL2STACK           = 0x00000020,x0000002056,2471
    MODULEDB_EXEMPT_RCT 61,2608
    MODULEDB_EXEMPT_IMAGE 62,2646
    MODULEDB_EXEMPT_DLL2HEAP 63,2684
    MODULEDB_EXEMPT_DLL2STACK 64,2722
    MODULEDB_EXEMPT_NUM_LISTS 65,2760
} moduledb_exempt_list_t;66,2798
# define PROCESS_CONTROL_MODE_OFF 94,3455
# define PROCESS_CONTROL_MODE_WHITELIST 95,3511
# define PROCESS_CONTROL_MODE_BLACKLIST 96,3567
# define PROCESS_CONTROL_MODE_WHITELIST_INTEGRITY 101,3806
# define IS_PROCESS_CONTROL_MODE_WHITELIST(103,3863
# define IS_PROCESS_CONTROL_MODE_BLACKLIST(105,3986
# define IS_PROCESS_CONTROL_MODE_WHITELIST_INTEGRITY(107,4109
# define IS_PROCESS_CONTROL_ON(109,4252

monitor.c,1804
# define MAX_TRACE_BUFFER_SIZE 69,2824
# define MAX_TRACE_BUFFER_SIZE 71,2880
# define INITIAL_TRACE_BUFFER_SIZE 77,3056
# define INITIAL_TRACE_BUFFER_SIZE 79,3119
#define INITIAL_NUM_BLKS 82,3182
#define INIT_COUNTER_TABLE_SIZE 84,3210
#define COUNTER_TABLE_LOAD 85,3244
#define COUNTER_ALLOC(90,3420
#define COUNTER_FREE(94,3621
#define TH_COUNTER_CREATED_TRACE_VALUE(107,4178
delete_private_copy(110,4272
create_private_copy(149,6062
extend_unmangled_ilist(228,9961
mangle_trace_at_end(285,12472
monitor_init(301,12901
monitor_thread_reset_init(312,13197
monitor_thread_reset_free(318,13293
trace_abort_and_delete(324,13389
monitor_exit(335,13704
monitor_thread_init(343,13878
monitor_thread_exit(383,15642
thcounter_lookup(426,17396
thcounter_add(439,17786
thcounter_remove(460,18531
thcounter_range_remove(480,19215
is_building_trace(506,20174
cur_trace_tag(513,20331
cur_trace_vmlist(520,20474
reset_trace_state(527,20628
monitor_delete_would_abort_trace(620,24956
monitor_remove_fragment(634,25393
unlink_ibt_trace_head(688,27587
mark_trace_head(738,29833
should_be_trace_head_internal_unsafe(884,37198
should_be_trace_head_internal(953,39985
should_be_trace_head(995,42019
check_for_trace_head(1005,42416
monitor_is_linkable(1030,43599
make_room_in_trace_buffer(1072,45232
trace_exit_stub_size_diff(1149,48311
enum { MAX_TRACE_FRACTION_OF_CACHE 1179,49688
get_and_check_add_size(1191,50238
trace_flags_from_component_flags(1229,52214
trace_flags_from_trace_head_flags(1235,52368
end_and_emit_trace(1255,53039
internal_extend_trace(1712,72855
internal_restore_last(1858,78777
monitor_cache_exit(1904,80933
check_fine_to_coarse_trace_head(1945,82849
monitor_cache_enter(1982,84610
trace_abort(2507,107610
get_trace_exit_component_tag(2565,109756

monitor.h,1971
#define _MONITOR_H_ 42,1961
    TRACE_HEAD_YES 69,2998
    TRACE_HEAD_YES           = 0x01,x0169,2998
    TRACE_HEAD_OBTAINED_LOCK 70,3035
    TRACE_HEAD_OBTAINED_LOCK = 0x02,x0270,3035
typedef struct _trace_head_counter_t 117,5147
    app_pc tag;118,5186
    uint   counter;119,5202
    struct _trace_head_counter_t *next;next123,5314
} trace_head_counter_t;124,5354
typedef struct _trace_head_table_t 126,5379
    trace_head_counter_t **counter_table;counter_table127,5416
    uint  hash_bits;128,5458
    ptr_uint_t  hash_mask;129,5479
    uint  hash_mask_offset;130,5506
    hash_function_t hash_func;131,5534
    uint  capacity;132,5565
    uint  entries;133,5610
    uint  load_factor_percent;134,5629
    uint  resize_threshold;135,5699
} trace_head_table_t;136,5762
typedef struct _trace_bb_build_t 138,5785
    trace_bb_info_t info;139,5820
    void *vmlist;vmlist143,5960
    instr_t *end_instr;end_instr144,5978
    bool final_cti;149,6188
} trace_bb_build_t;150,6208
typedef struct _monitor_data_t 152,6229
    app_pc         trace_tag;157,6442
    uint           trace_flags;158,6502
    instrlist_t      trace;159,6570
    byte           *trace_buf;trace_buf160,6651
    uint           trace_buf_size;161,6732
    uint           trace_buf_top;162,6803
    void *         trace_vmlist;163,6886
    uint           num_blks;164,6958
    trace_bb_build_t *blk_info;blk_info165,7039
    uint           blk_info_length;166,7123
    uint           emitted_size;167,7190
    fragment_t *     last_copy;168,7273
    fragment_t *     last_fragment;171,7492
    uint           last_fragment_flags;172,7577
    trace_head_table_t thead_table;178,7842
    instrlist_t    unmangled_ilist;182,7967
    instrlist_t    *unmangled_bb_ilist;unmangled_bb_ilist183,8003
    bool           pass_to_client;185,8138
    uint           final_exit_flags;190,8291
    fragment_t     wrapper;193,8350
} monitor_data_t;195,8429

native_exec.c,639
vm_area_vector_t *native_exec_areas;native_exec_areas55,2374
static const app_pc retstub_start 57,2412
static const app_pc retstub_end 59,2497
native_exec_init(63,2584
native_exec_exit(75,2956
is_native_pc(85,3160
on_native_exec_list(91,3259
check_and_mark_native_exec(121,4321
native_exec_module_load(149,5309
native_exec_module_unload(157,5541
entering_native(169,5965
call_to_native(202,7356
return_to_native(242,8955
back_from_native_common(256,9312
pop_retaddr_for_index(289,10557
return_from_native(312,11514
native_module_callout(335,12301
interpret_back_from_native(353,12951
put_back_native_retaddrs(368,13596

native_exec.h,74
#define _NATIVE_EXEC_H_ 34,1705
native_exec_is_back_from_native(96,3222

nudge.c,251
nudge_terminate_on_dstack(65,2572
generic_nudge_target(81,3183
nudge_thread_cleanup(103,3925
generic_nudge_handler(196,8697
handle_nudge(282,11894
#define VALID_THIN_CLIENT_NUDGES 311,12921
nudge_add_pending(444,18727
nudge_internal(471,19566

nudge.h,26
#define _NUDGE_H_35,1765

options.c,4467
#  define inline 56,2235
#  define snprintf 57,2261
#  define WIN32_LEAN_AND_MEAN58,2290
typedef unsigned int uint;64,2426
# define print_file(66,2454
typedef char bool;69,2496
#  define true 72,2537
#  define false 73,2557
#  define NULL 76,2599
 struct stats_type 79,2628
     int logmask;80,2649
     int loglevel;81,2667
 } thestats;82,2686
 struct stats_type *stats stats84,2700
# define ASSERT(89,2921
# define OPTION_PARSE_ERROR(93,3055
static void ignore_varargs_function(95,3103
# define FATAL_USAGE_ERROR(97,3219
# define USAGE_ERROR 99,3312
# define DOLOG(100,3371
#  define OPTION_COMMAND_INTERNAL(109,3556
#  define OPTION_COMMAND(110,3692
const internal_options_t default_internal_options 115,3951
#undef OPTION_COMMAND_INTERNAL118,4032
#undef OPTION_COMMAND119,4063
#  define OPTION_COMMAND_INTERNAL 124,4125
#  define OPTION_COMMAND_INTERNAL(136,4778
#define OPTION_COMMAND(141,4950
const options_t default_options 146,5197
# define SELF_PROTECT_OPTIONS(152,5333
# define SELF_UNPROTECT_OPTIONS(153,5407
# define OPTIONS_PROTECTED(157,5608
char option_string[option_string162,5783
# define ASSERT_OWN_OPTIONS_LOCK(163,5830
# define CORE_STATIC 164,5897
options_t dynamo_options 166,5948
options_t temp_options 176,6413
# define ASSERT_OWN_OPTIONS_LOCK(187,6821
# define CORE_STATIC188,6860
#undef OPTION_COMMAND191,6954
set_dynamo_options_defaults(198,7072
#undef OPTION_COMMAND_INTERNAL203,7252
#  define OPTION_COMMAND_INTERNAL 207,7425
#  define OPTION_COMMAND_INTERNAL(209,7481
getword_common(219,7933
getword(281,9676
parse_word(288,9869
#define ISBOOL_bool 293,10034
#define ISBOOL_uint 294,10056
#define ISBOOL_uint_size 295,10078
#define ISBOOL_uint_time 296,10105
#define ISBOOL_uint_addr 297,10132
#define ISBOOL_pathstring_t 298,10159
#define ISBOOL_liststring_t 299,10189
parse_bool(302,10232
parse_uint(308,10311
parse_uint_size(325,10818
parse_uint_time(354,11717
parse_uint_addr(379,12519
parse_pathstring_t(395,13004
parse_liststring_t(407,13518
#define OPTION_COMMAND(439,14915
set_dynamo_options_common(464,16565
#undef OPTION_COMMAND520,18756
set_dynamo_options(523,18795
set_dynamo_options_other_process(530,18984
check_param_bounds(542,19332
PRINT_STRING_bool(579,20671
PRINT_STRING_uint(585,20852
#define PRINT_STRING_uint_size(592,21131
#define PRINT_STRING_uint_time(596,21367
#define PRINT_STRING_uint_addr(598,21497
#define PRINT_STRING_pathstring_t(600,21631
#define PRINT_STRING_liststring_t(601,21761
#define DIFF_bool(604,21893
#define DIFF_uint(605,21947
#define DIFF_uint_size(606,22001
#define DIFF_uint_time(607,22060
#define DIFF_uint_addr(608,22119
#define DIFF_pathstring_t(609,22178
#define DIFF_liststring_t(610,22243
#define COPY_bool(612,22309
#define COPY_uint(613,22362
#define COPY_uint_size(614,22415
#define COPY_uint_time(615,22473
#define COPY_uint_addr(616,22531
#define COPY_pathstring_t(617,22589
#define COPY_liststring_t(618,22670
get_dynamo_options_string(622,22815
#define OPTION_COMMAND(627,22958
#undef OPTION_COMMAND640,23803
get_pcache_dynamo_options_string(652,24071
#define OPTION_COMMAND(658,24267
#undef OPTION_COMMAND671,25115
has_pcache_dynamo_options(680,25319
#define OPTION_COMMAND(682,25394
#undef OPTION_COMMAND692,26020
enum {OPTION_TYPE_STATIC,OPTION_TYPE_STATIC696,26063
enum {OPTION_TYPE_STATIC, OPTION_TYPE_DYNAMIC}OPTION_TYPE_DYNAMIC696,26063
static char optionbuff[optionbuff701,26279
static char new_optionbuff[new_optionbuff702,26322
update_dynamic_options(708,26509
#define OPTION_COMMAND(715,26731
#undef OPTION_COMMAND742,28620
check_list_default_and_append(753,28966
#define SECURITY_OPTION_CONSISTENT(789,30395
check_option_compatibility_helper(800,31031
# define MAX_NUM_LIB_TLS_PAGES 1872,78965
check_option_compatibility(1903,80132
check_dynamic_option_compatibility(1912,80353
options_init(1922,80628
options_exit(1942,81284
options_make_writable(1949,81403
options_restore_readonly(1960,81660
synchronize_dynamic_options(1969,81867
get_process_options(2058,85276
dr_get_string_option(2103,87106
#define OPTION_COMMAND(2108,87289
#undef OPTION_COMMAND2116,87785
dr_get_integer_option(2125,87917
#define OPTION_COMMAND(2136,88397
#undef OPTION_COMMAND2144,88893
show_dynamo_options(2155,89042
show_dynamo_option_descriptions(2170,89536
#define OPTION_COMMAND(2172,89572
#undef OPTION_COMMAND2179,89982
unit_test_options(2183,90012

options.h,3755
#define _OPTIONS_H_44,1923
    OPTION_ENABLED 57,2243
    OPTION_ENABLED     = 0x1,x157,2243
    OPTION_DISABLED 58,2314
    OPTION_DISABLED    = 0x0,x058,2314
    OPTION_BLOCK 75,3256
    OPTION_BLOCK       = 0x2,x275,3256
    OPTION_NO_BLOCK 76,3286
    OPTION_NO_BLOCK    = 0x0,x076,3286
    OPTION_HANDLING 79,3403
    OPTION_HANDLING    = 0x4,x479,3403
    OPTION_NO_HANDLING 80,3483
    OPTION_NO_HANDLING = 0x0,x080,3483
    OPTION_REPORT 83,3600
    OPTION_REPORT      = 0x8,x883,3600
    OPTION_NO_REPORT 84,3675
    OPTION_NO_REPORT   = 0x0,x084,3675
    OPTION_BLOCK_IGNORE_DETECT 87,3811
    OPTION_BLOCK_IGNORE_DETECT  = 0x20,x2087,3811
    OPTION_CUSTOM 90,3938
    OPTION_CUSTOM      = 0x100,x10090,3938
    OPTION_NO_CUSTOM 91,4027
    OPTION_NO_CUSTOM   = 0x0,x091,4027
} security_option_t;92,4116
    HOOKED_TRAMPOLINE_DIE 97,4231
    HOOKED_TRAMPOLINE_SQUASH 98,4302
    HOOKED_TRAMPOLINE_CHAIN 99,4387
    HOOKED_TRAMPOLINE_HOOK_DEEPER 100,4471
    HOOKED_TRAMPOLINE_MAX 101,4555
    APPFAULT_FAULT 109,4786
    APPFAULT_FAULT    = 0x0001,x0001109,4786
    APPFAULT_CRASH 110,4867
    APPFAULT_CRASH    = 0x0002,x0002110,4867
#define uint_size 118,5189
#define uint_time 119,5212
#define uint_addr 121,5306
#define ISSTRING_bool 127,5509
#define ISSTRING_uint 128,5533
#define ISSTRING_uint_size 129,5557
#define ISSTRING_uint_time 130,5586
#define ISSTRING_ptr_uint_t 131,5615
#define ISSTRING_pathstring_t 132,5645
#define ISSTRING_liststring_t 133,5677
    OP_PCACHE_NOP 137,5783
    OP_PCACHE_LOCAL 138,5836
    OP_PCACHE_GLOBAL 142,6081
} op_pcache_t;143,6158
#define OPTION_STRING(155,6762
#define EMPTY_STRING 156,6813
#define OPTION_COMMAND(157,6864
#define OPTION_COMMAND_INTERNAL(163,7229
enum option_is_internal 169,7589
#undef OPTION_COMMAND172,7643
#undef OPTION_COMMAND_INTERNAL173,7665
#undef OPTION_STRING174,7696
#undef EMPTY_STRING175,7717
#define OPTION_STRING(178,7770
#define EMPTY_STRING 179,7797
#  define OPTION_COMMAND_INTERNAL(183,7945
#  define OPTION_COMMAND_INTERNAL(187,8135
#define OPTION_COMMAND(191,8313
typedef struct _options_t 194,8496
} options_t;196,8549
#undef OPTION_COMMAND198,8563
#undef OPTION_COMMAND_INTERNAL199,8585
#  define OPTION_COMMAND(203,8705
#  define OPTION_COMMAND_INTERNAL(205,8857
typedef struct _internal_options_t 208,9046
} internal_options_t;210,9108
#  undef OPTION_COMMAND211,9130
#  undef OPTION_COMMAND_INTERNAL212,9154
#undef uint_size215,9195
#undef uint_time216,9212
#undef uint_addr217,9229
#define IS_OPTION_INTERNAL(232,9749
#define IS_OPTION_STRING(233,9810
#define DEFAULT_OPTION_VALUE(236,9995
#  define DEFAULT_INTERNAL_OPTION_VALUE 239,10182
#  define DEFAULT_INTERNAL_OPTION_VALUE(241,10249
#define SET_DEFAULT_VALUE(248,10593
#define SYNCHRONIZE_DYNAMIC_OPTION(277,11264
#define SHARED_FRAGMENTS_ENABLED(313,12496
#define SCRATCH_ALWAYS_TLS(322,12908
#define PRIVATE_TRACES_ENABLED(326,13087
#define SHARED_BB_IB_TARGETS(330,13227
#define SHARED_BB_ONLY_IB_TARGETS(340,13646
#define SHARED_IB_TARGETS(344,13791
#define SHARED_IBT_TABLES_ENABLED(348,13930
#define TRACEDUMP_ENABLED(351,14054
#define RUNNING_WITHOUT_CODE_CACHE(357,14283
# define CLIENT_OR_STANDALONE(361,14469
# define CLIENT_OR_STANDALONE(364,14582
#define IS_STRING_OPTION_EMPTY(375,14950
#define IS_LISTSTRING_OPTION_FORALL(380,15143
#  define IS_INTERNAL_STRING_OPTION_EMPTY(383,15247
#  define IS_INTERNAL_STRING_OPTION_EMPTY(385,15326
#define COARSE_FILL_IBL_MASK(389,15467
string_option_read_lock(393,15597
string_option_read_unlock(397,15678
    LIST_NO_MATCH 402,15760
    LIST_ON_DEFAULT 403,15814
    LIST_ON_APPEND 404,15839
} list_default_or_append_t;405,15864

optionsx.h,1884
#define OPTION_DEFAULT(71,3068
#define OPTION_NAME_DEFAULT(75,3259
#define OPTION_NAME(79,3446
#define OPTION(82,3590
#define PC_OPTION_DEFAULT(85,3712
#define PC_OPTION(89,3905
#define PCL_OPTION_DEFAULT(92,4031
#define PCL_OPTION(96,4223
#define DYNAMIC_OPTION_DEFAULT(101,4470
#define DYNAMIC_OPTION(104,4631
#define DYNAMIC_PCL_OPTION_DEFAULT(107,4761
#define DYNAMIC_PCL_OPTION(110,4924
#define OPTION_ALIAS(115,5237
#define OPTION_DEFAULT_INTERNAL(125,5967
#define OPTION_NAME_INTERNAL(128,6163
#define OPTION_INTERNAL(131,6362
#define PC_OPTION_DEFAULT_INTERNAL(134,6473
#define PC_OPTION_INTERNAL(137,6675
#define DISABLE_RESET(141,6820
#define REENABLE_RESET(158,7751
#define DISABLE_TRACES(181,9263
#define REENABLE_TRACES(189,9671
#define ENABLE_SECURITY(198,10080
    DYNAMIC_OPTION_DEFAULT(218,11383
    PC_OPTION_INTERNAL(227,11756
    OPTION_DEFAULT(272,14363
#   define DISABLE_PROBE_API(447,23071
    PC_OPTION_INTERNAL(485,24802
    OPTION_DEFAULT_INTERNAL(714,37735
    OPTION_DEFAULT_INTERNAL(781,41699
    OPTION_DEFAULT(847,45015
    OPTION_DEFAULT(918,48789
    OPTION_DEFAULT(1235,66866
    OPTION_DEFAULT_INTERNAL(1245,67241
    DYNAMIC_PCL_OPTION(1534,84322
    DYNAMIC_OPTION(1540,84760
    DYNAMIC_OPTION(1549,85369
    DYNAMIC_OPTION_DEFAULT(1554,85737
    OPTION_DEFAULT(1802,101505
#   define ENABLE_COARSE_UNITS(1883,107295
    OPTION_ALIAS(1899,108246
    OPTION_DEFAULT(2085,118905
    OPTION_DEFAULT(2185,125579
    OPTION_DEFAULT(2481,141138
    OPTION_DEFAULT_INTERNAL(2580,146877
    OPTION_DEFAULT_INTERNAL(2614,148819
#define OPTIMIZE_OPTION(2644,150198
# undef OPTIMIZE_OPTION2683,151808
    DYNAMIC_OPTION_DEFAULT(2743,154828
#undef OPTION2826,159033
#undef OPTION_NAME2827,159047
#undef OPTION_DEFAULT2828,159066
#undef DYNAMIC_OPTION2830,159089
#undef DYNAMIC_OPTION_DEFAULT2831,159111

os_shared.h,11012
#define OS_SHARED_H41,1899
enum {VM_ALLOCATION_BOUNDARY VM_ALLOCATION_BOUNDARY43,1920
    HEAP_ERROR_SUCCESS 85,3468
    HEAP_ERROR_CANT_RESERVE_IN_REGION 87,3587
    HEAP_ERROR_NOT_AT_PREFERRED 89,3721
typedef uint heap_error_code_t;91,3761
    RAW_ALLOC_RESERVE_ONLY 97,3891
    RAW_ALLOC_RESERVE_ONLY = 0x0001,x000197,3891
    RAW_ALLOC_COMMIT_ONLY 98,3928
    RAW_ALLOC_COMMIT_ONLY  = 0x0002,x000298,3928
    RAW_ALLOC_32BIT 101,3984
    RAW_ALLOC_32BIT        = 0x0004,x0004101,3984
    DR_STATE_PEB 211,8133
    DR_STATE_PEB              = 0x0001,x0001211,8133
    DR_STATE_TEB_MISC 212,8205
    DR_STATE_TEB_MISC         = 0x0002,x0002212,8205
    DR_STATE_STACK_BOUNDS 213,8286
    DR_STATE_STACK_BOUNDS     = 0x0004,x0004213,8286
    DR_STATE_ALL 215,8377
    DR_STATE_ALL              =     ~0,215,8377
} dr_state_flags_t;216,8443
    TERMINATE_PROCESS 247,9129
    TERMINATE_PROCESS = 0x1,x1247,9129
    TERMINATE_THREAD 248,9158
    TERMINATE_THREAD  = 0x2,x2248,9158
    TERMINATE_CLEANUP 260,9893
    TERMINATE_CLEANUP = 0x4 x4260,9893
} terminate_flags_t;261,9977
    ILLEGAL_INSTRUCTION_EXCEPTION,267,10172
    UNREADABLE_MEMORY_EXECUTION_EXCEPTION,268,10207
    IN_PAGE_ERROR_EXCEPTION,269,10250
} exception_type_t;270,10279
    DUMPCORE_INTERNAL_EXCEPTION 278,10533
    DUMPCORE_INTERNAL_EXCEPTION = 0x0001,x0001278,10533
    DUMPCORE_SECURITY_VIOLATION 279,10575
    DUMPCORE_SECURITY_VIOLATION = 0x0002,x0002279,10575
    DUMPCORE_DEADLOCK 280,10617
    DUMPCORE_DEADLOCK           = 0x0004,x0004280,10617
    DUMPCORE_ASSERTION 281,10659
    DUMPCORE_ASSERTION          = 0x0008,x0008281,10659
    DUMPCORE_FATAL_USAGE_ERROR 282,10701
    DUMPCORE_FATAL_USAGE_ERROR  = 0x0010,x0010282,10701
    DUMPCORE_CLIENT_EXCEPTION 284,10767
    DUMPCORE_CLIENT_EXCEPTION   = 0x0020,x0020284,10767
    DUMPCORE_TIMEOUT 286,10816
    DUMPCORE_TIMEOUT            = 0x0040,x0040286,10816
    DUMPCORE_CURIOSITY 287,10858
    DUMPCORE_CURIOSITY          = 0x0080,x0080287,10858
    DUMPCORE_HOTP_FAILURE 290,11052
    DUMPCORE_HOTP_FAILURE       = 0x0100,x0100290,11052
    DUMPCORE_OUT_OF_MEM 292,11101
    DUMPCORE_OUT_OF_MEM         = 0x0200,x0200292,11101
    DUMPCORE_OUT_OF_MEM_SILENT 293,11143
    DUMPCORE_OUT_OF_MEM_SILENT  = 0x0400,x0400293,11143
    DUMPCORE_INCLUDE_STACKDUMP 295,11230
    DUMPCORE_INCLUDE_STACKDUMP  = 0x0800,x0800295,11230
    DUMPCORE_WAIT_FOR_DEBUGGER 296,11272
    DUMPCORE_WAIT_FOR_DEBUGGER  = 0x1000,x1000296,11272
    DUMPCORE_HOTP_DETECTION 299,11418
    DUMPCORE_HOTP_DETECTION     = 0x2000,x2000299,11418
    DUMPCORE_HOTP_PROTECTION 300,11493
    DUMPCORE_HOTP_PROTECTION    = 0x4000,x4000300,11493
    DUMPCORE_DR_ABORT 303,11599
    DUMPCORE_DR_ABORT           = 0x8000,x8000303,11599
    DUMPCORE_FORGE_ILLEGAL_INST 307,11793
    DUMPCORE_FORGE_ILLEGAL_INST = 0x10000,x10000307,11793
    DUMPCORE_FORGE_UNREAD_EXEC 308,11836
    DUMPCORE_FORGE_UNREAD_EXEC  = 0x20000,x20000308,11836
    DUMPCORE_APP_EXCEPTION 314,12244
    DUMPCORE_APP_EXCEPTION      = 0x40000,x40000314,12244
    DUMPCORE_TRY_EXCEPT 315,12287
    DUMPCORE_TRY_EXCEPT         = 0x80000,x80000315,12287
    DUMPCORE_UNSUPPORTED_APP 316,12367
    DUMPCORE_UNSUPPORTED_APP    = 0x100000,x100000316,12367
    DUMPCORE_OPTION_PAUSE 319,12424
    DUMPCORE_OPTION_PAUSE       = DUMPCORE_WAIT_FOR_DEBUGGER 319,12424
                                  DUMPCORE_INTERNAL_EXCEPTION 320,12488
                                  DUMPCORE_SECURITY_VIOLATION 321,12552
                                  DUMPCORE_DEADLOCK 322,12616
                                  DUMPCORE_ASSERTION 323,12680
                                  DUMPCORE_FATAL_USAGE_ERROR 324,12744
                                  DUMPCORE_CLIENT_EXCEPTION 326,12833
                                  DUMPCORE_UNSUPPORTED_APP 328,12905
                                  DUMPCORE_TIMEOUT 329,12969
                                  DUMPCORE_CURIOSITY 330,13033
                                  DUMPCORE_DR_ABORT 332,13122
                                  DUMPCORE_OUT_OF_MEM 334,13194
                                  DUMPCORE_OUT_OF_MEM_SILENT,335,13258
typedef void * dr_auxlib_handle_t;356,13898
typedef void (*dr_auxlib_routine_ptr_t)dr_auxlib_routine_ptr_t358,13998
typedef uint64 dr_auxlib64_handle_t;364,14235
typedef uint64 dr_auxlib64_routine_ptr_t;366,14344
typedef void * shlib_handle_t;375,14638
typedef void (*shlib_routine_ptr_t)shlib_routine_ptr_t376,14669
typedef uint64 dr_auxlib64_handle_t;381,14863
typedef uint64 dr_auxlib64_routine_ptr_t;382,14900
#define DR_MEMPROT_NONE 405,15658
#define DR_MEMPROT_READ 406,15735
#define DR_MEMPROT_WRITE 407,15790
#define DR_MEMPROT_EXEC 408,15846
# define DR_MEMPROT_GUARD 410,15919
#define DR_MEMPROT_PRETEND_WRITE 420,16411
    DR_MEMTYPE_FREE,426,16530
    DR_MEMTYPE_IMAGE,427,16588
    DR_MEMTYPE_DATA,428,16652
    DR_MEMTYPE_RESERVED,429,16716
} dr_mem_type_t;430,16798
typedef struct _dr_mem_info_t 435,16885
    byte          *base_pc;base_pc437,16962
    size_t        size;439,17016
    uint          prot;441,17093
    dr_mem_type_t type;443,17143
} dr_mem_info_t;444,17167
#define MEMPROT_NONE 448,17210
#define MEMPROT_READ 449,17248
#define MEMPROT_WRITE 450,17286
#define MEMPROT_EXEC 451,17325
# define MEMPROT_GUARD 453,17378
#define SAFE_READ_VAL(469,18099
    SELFPROT_DATA_RARE 527,20826
    SELFPROT_DATA_RARE   = 0x001,x001527,20826
    SELFPROT_DATA_FREQ 531,21018
    SELFPROT_DATA_FREQ   = 0x002,x002531,21018
    SELFPROT_DATA_CXTSW 535,21173
    SELFPROT_DATA_CXTSW  = 0x004,x004535,21173
    SELFPROT_GLOBAL 543,21481
    SELFPROT_GLOBAL      = 0x008,x008543,21481
    SELFPROT_DCONTEXT 544,21515
    SELFPROT_DCONTEXT    = 0x010,x010544,21515
    SELFPROT_LOCAL 546,21681
    SELFPROT_LOCAL       = 0x020,x020546,21681
    SELFPROT_CACHE 547,21715
    SELFPROT_CACHE       = 0x040,x040547,21715
    SELFPROT_STACK 548,21799
    SELFPROT_STACK       = 0x080,x080548,21799
    SELFPROT_GENCODE 551,22047
    SELFPROT_GENCODE     = 0x100,x100551,22047
    SELFPROT_ON_CXT_SWITCH 562,22513
    SELFPROT_ON_CXT_SWITCH = (SELFPROT_DATA_CXTSW 562,22513
    SELFPROT_ON_CXT_SWITCH = (SELFPROT_DATA_CXTSW | SELFPROT_GLOBAL562,22513
                              | SELFPROT_DATA_FREQ)565,22736
    SELFPROT_ANY_DATA_SECTION 566,22789
    SELFPROT_ANY_DATA_SECTION = (SELFPROT_DATA_RARE 566,22789
    SELFPROT_ANY_DATA_SECTION = (SELFPROT_DATA_RARE | SELFPROT_DATA_FREQ 566,22789
                                 SELFPROT_DATA_CXTSW)567,22864
    DATASEC_NEVER_PROT 574,23019
    DATASEC_RARELY_PROT,575,23047
    DATASEC_FREQ_PROT,576,23072
    DATASEC_CXTSW_PROT,577,23095
    DATASEC_NUM,578,23119
#define DATASEC_WRITABLE(591,23484
#define NEVER_PROTECTED_SECTION 598,23838
#define RARELY_PROTECTED_SECTION 599,23882
#define FREQ_PROTECTED_SECTION 600,23923
#define CXTSW_PROTECTED_SECTION 601,23967
#define DATASEC_PROTECTED(607,24184
#define DECLARE_FREQPROT_VAR(613,24449
#define DECLARE_CXTSWPROT_VAR(618,24666
#define DECLARE_NEVERPROT_VAR(623,24886
#define SELF_PROTECT_ON_CXT_SWITCH 628,25106
#define SELF_PROTECT_LOCAL(633,25330
#define SELF_PROTECT_GLOBAL(638,25507
#define ASSERT_LOCAL_HEAP_PROTECTED(643,25683
#define ASSERT_LOCAL_HEAP_UNPROTECTED(646,25841
#define SELF_PROTECT_DATASEC(650,26003
#define SELF_UNPROTECT_DATASEC(654,26181
#define OS_OPEN_READ 681,27082
#define OS_OPEN_WRITE 682,27115
#define OS_OPEN_APPEND 683,27148
#define OS_OPEN_REQUIRE_NEW 684,27221
#define OS_EXECUTE 685,27254
#define OS_SHARE_DELETE 686,27323
#define OS_OPEN_FORCE_OWNER 687,27392
#define OS_OPEN_ALLOW_LARGE 688,27461
#define OS_OPEN_CLOSE_ON_FORK 689,27532
#define OS_OPEN_RESERVED 690,27593
    CREATE_DIR_ALLOW_EXISTING 705,28322
    CREATE_DIR_ALLOW_EXISTING = 0x0,x0705,28322
    CREATE_DIR_REQUIRE_NEW 711,28603
    CREATE_DIR_REQUIRE_NEW    = 0x1,x1711,28603
    CREATE_DIR_FORCE_OWNER 712,28640
    CREATE_DIR_FORCE_OWNER    = 0x2,x2712,28640
} create_directory_flags_t;713,28677
#define OS_SEEK_SET 726,29270
#define OS_SEEK_CUR 727,29313
#define OS_SEEK_END 728,29364
    STACK_EXECUTION_VIOLATION 785,31858
    HEAP_EXECUTION_VIOLATION 786,31900
    RETURN_TARGET_VIOLATION 787,31942
    RETURN_DIRECT_RCT_VIOLATION 788,31985
    INDIRECT_CALL_RCT_VIOLATION 789,32055
    INDIRECT_JUMP_RCT_VIOLATION 790,32097
    HOT_PATCH_DETECTOR_VIOLATION 792,32170
    HOT_PATCH_PROTECTOR_VIOLATION 793,32212
    HOT_PATCH_FAILURE 795,32335
    ATTACK_SIMULATION_VIOLATION 798,32404
    ATTACK_SIM_NUDGE_VIOLATION 799,32447
    ASLR_TARGET_VIOLATION 802,32538
    GBOP_SOURCE_VIOLATION 804,32593
    PROCESS_CONTROL_VIOLATION 807,32677
    APC_THREAD_SHELLCODE_VIOLATION 809,32748
    INVALID_VIOLATION 811,32917
    ALLOWING_OK 816,33162
    ALLOWING_BAD 817,33204
    NO_VIOLATION_BAD_INTERNAL_STATE 819,33257
    NO_VIOLATION_OK_INTERNAL_STATE 820,33299
} security_violation_t;821,33340
    INITIAL_STACK_EMPTY 833,33770
    INITIAL_STACK_BOTTOM_REACHED 834,33812
    INITIAL_STACK_BOTTOM_NOT_REACHED 835,33854
} initial_call_stack_status_t;836,33895
typedef HANDLE event_t;855,34594
typedef struct linux_event_t *event_t;event_t857,34624
# define POST_SYSCALL_PC(911,36402
# define POST_SYSCALL_PC(918,36867
    AFTER_INTERCEPT_LET_GO,925,37052
    AFTER_INTERCEPT_LET_GO_ALT_DYN,926,37080
    AFTER_INTERCEPT_TAKE_OVER,930,37339
    AFTER_INTERCEPT_DYNAMIC_DECISION,931,37370
    AFTER_INTERCEPT_TAKE_OVER_SINGLE_SHOT,934,37513
} after_intercept_action_t;935,37598
    void *callee_arg;callee_arg945,37979
    app_pc start_pc;946,38053
    priv_mcontext_t mc;947,38118
} app_state_at_intercept_t;948,38171
typedef after_intercept_action_t intercept_function_t(952,38324
    JMP_REL32_OPCODE 958,38567
    JMP_REL32_OPCODE  = 0xe9,xe9958,38567
    JMP_REL32_SIZE 959,38597
    CALL_REL32_OPCODE 960,38667
    CALL_REL32_OPCODE = 0xe8,xe8960,38667
    JMP_ABS_IND64_OPCODE 962,38709
    JMP_ABS_IND64_OPCODE    = 0xff,xff962,38709
    JMP_ABS_IND64_SIZE 963,38745
    JMP_ABS_MEM_IND64_MODRM 964,38825
    JMP_ABS_MEM_IND64_MODRM = 0x25,x25964,38825
#define INJECT_LOCATION_IS_LDR(988,39977
#define INJECT_LOCATION_IS_LDR_NON_DEFAULT(989,40049
    INJECT_LOCATION_Invalid 991,40139
    INJECT_LOCATION_LdrpLoadDll 992,40207
    INJECT_LOCATION_LdrpLoadImportModule 993,40272
    INJECT_LOCATION_LdrCustom 994,40336
    INJECT_LOCATION_LdrLoadDll 995,40407
    INJECT_LOCATION_LdrDefault 996,40468
    INJECT_LOCATION_KiUserApc 1004,40973
    INJECT_LOCATION_KiUserException 1005,41015
    INJECT_LOCATION_MAX 1006,41088
    INJECT_LOCATION_MAX = INJECT_LOCATION_KiUserException,1006,41088
#define LANDING_PAD_AREA_SIZE 1038,42115
#define MAX_HOOK_DISPLACED_LENGTH 1039,42155
# define LANDING_PAD_SIZE 1044,42403
# define LANDING_PAD_SIZE 1049,42617

perfctr.c,265
int perfctr_eventset;48,2017
struct {int num;49,2039
struct {int num;char *name;name49,2039
struct {int num;char *name;} papi_events[papi_events49,2039
void hardware_perfctr_init(82,3555
void hardware_perfctr_exit(132,4943
void perfctr_update_gui(154,5525

perfctr.h,40
#define GUI_ALARM_UPDATE_RATIO 39,1842

perscache.c,2357
#define MAX_PCACHE_OPTIONS_STRING 61,2293
#define OPTION_STRING_ALIGNMENT 64,2473
#define CLIENT_ALIGNMENT 66,2599
typedef struct _jmp_tgt_list_t 69,2667
    app_pc tag;70,2701
    cache_pc jmp_end_pc;71,2717
    struct _jmp_tgt_list_t *next;next72,2742
} jmp_tgt_list_t;73,2776
coarse_unit_mark_primary(110,4019
coarse_unit_unmark_primary(134,4881
coarse_unit_mark_in_use(149,5329
coarse_unit_create(156,5456
coarse_unit_free(221,8530
coarse_unit_init(245,9316
coarse_unit_reset_free_internal(260,9835
coarse_unit_reset_free(371,14327
static file_t perscache_user_directory 382,14757
perscache_init(385,14818
perscache_fast_exit(434,17055
perscache_slow_exit(449,17465
coarse_units_freeze_translate(460,17727
coarse_units_freeze_all(489,18871
coarse_replace_unit(611,24818
coarse_unit_freeze(668,27080
transfer_coarse_stub(882,36766
transfer_coarse_stub_fix_trace_head(936,39284
push_pending_freeze(959,40361
redirect_to_tgt_ibl_prefix(1021,43193
transfer_coarse_fragment(1041,44021
coarse_unit_shift_jmps_internal(1196,50728
coarse_unit_shift_jmps(1283,55112
coarse_merge_process_stub(1315,56648
coarse_merge_update_jmps(1421,62318
coarse_merge_without_dups(1548,68827
coarse_unit_merge(1840,84947
perscache_dirname(2139,98686
get_persist_dir(2178,100281
coarse_unit_check_persist_space(2205,101205
persist_get_options_level(2235,102318
persist_get_relevant_options(2255,103193
get_persist_filename(2275,104098
print_module_digest(2398,109246
persist_calculate_self_digest(2409,109622
persist_calculate_module_digest(2430,110491
persist_modinfo_cmp(2472,112583
persist_record_base_mismatch(2503,114386
get_unique_name(2525,115334
coarse_unit_merge_with_disk(2558,116782
coarse_unit_calculate_persist_info(2666,122175
coarse_unit_merge_persist_info(2788,127695
write_persist_file(2900,132548
pad_persist_file(2913,133020
coarse_unit_set_persist_data(2935,133815
coarse_unit_persist_rename(3125,141448
instrument_persist_section(3175,143726
dr_persist_start(3204,144874
dr_persist_size(3213,145072
dr_fragment_persistable(3222,145282
coarse_unit_persist(3251,146275
persist_check_option_compat(3603,161393
pcache_dir_check_permissions(3680,164691
persist_get_name_and_open(3719,166387
coarse_unit_load(3792,169448
exists_coarse_ibl_pending_table(4372,195071
mark_module_exempted(4396,196098

perscache.h,6395
#define _PERSCACHE_H_ 41,1871
struct _coarse_info_t 70,3262
    bool frozen:frozen71,3286
    bool persisted:persisted72,3305
    bool in_use:in_use73,3327
    bool has_persist_info:has_persist_info77,3508
    bool primary_for_module:primary_for_module82,3734
    bool stubs_readonly:stubs_readonly84,3820
    bool is_local:is_local89,4011
    void *cache;cache92,4103
    void *htable;htable98,4352
    void *th_htable;th_htable99,4431
    void *pclookup_last_htable;pclookup_last_htable102,4579
    void *stubs;stubs104,4667
    cache_pc fcache_return_prefix;106,4711
    cache_pc trace_head_return_prefix;107,4746
    cache_pc ibl_ret_prefix;108,4785
    cache_pc ibl_call_prefix;109,4814
    cache_pc ibl_jmp_prefix;110,4844
    coarse_incoming_t *incoming;incoming112,4874
    cache_pc cache_start_pc;117,5053
    cache_pc cache_end_pc;118,5082
    cache_pc stubs_start_pc;119,5149
    cache_pc stubs_end_pc;120,5206
    size_t mmap_size;125,5502
    void *pclookup_htable;pclookup_htable127,5606
    uint flags;131,5760
    cache_pc mmap_pc;132,5834
    size_t mmap_ro_size;137,6079
    file_t fd;139,6183
    size_t persisted_source_mmap_size;144,6335
    app_pc_table_t *rct_table;rct_table147,6433
    app_pc_table_t *rac_table;rac_table148,6464
    uint ibl_pending_used;152,6630
    app_rva_t *hotp_ppoint_vec;hotp_ppoint_vec163,7156
    uint hotp_ppoint_vec_num;164,7188
    uint stubs_write_count;168,7332
    struct _coarse_info_t *non_frozen;non_frozen174,7562
    mutex_t lock;187,7985
    mutex_t incoming_lock;190,8145
    app_pc base_pc;195,8280
    app_pc end_pc;196,8339
    const char *module;module198,8410
    module_digest_t module_md5;203,8599
    app_pc persist_base;205,8656
    ssize_t mod_shift;207,8721
# define COARSE_32_FLAG(214,8902
# define COARSE_32_FLAG(216,8996
typedef struct _pending_freeze_t 243,9742
    bool entrance_stub;244,9777
    bool trace_head;245,9801
    app_pc tag;246,9822
    cache_pc cur_pc;247,9838
    cache_pc link_cti_opnd;248,9859
    bool elide_ubr;249,9930
    struct _pending_freeze_t *next;next250,10003
} pending_freeze_t;251,10039
struct _coarse_freeze_info_t 253,10060
    coarse_info_t *src_info;src_info254,10091
    coarse_info_t *dst_info;dst_info255,10120
    cache_pc cache_start_pc;256,10149
    cache_pc cache_cur_pc;257,10178
    cache_pc stubs_start_pc;258,10205
    cache_pc stubs_cur_pc;259,10234
    bool unlink;260,10261
    pending_freeze_t *pending;pending261,10278
    size_t app_code_size;264,10391
    uint num_cbr;265,10417
    uint num_jmp;266,10435
    uint num_call;267,10453
    uint num_indbr;268,10472
    uint num_elisions;270,10516
    uint added_fallthrough;272,10589
    uint added_indbr_mangle;273,10617
    uint added_indbr_stub;274,10701
    uint added_jecxz_mangle;275,10760
    PERSISTENT_CACHE_MAGIC 319,11928
    PERSISTENT_CACHE_MAGIC = 0x244f4952,x244f4952319,11928
    PERSISTENT_CACHE_VERSION 320,11980
    PERSCACHE_X86_32 326,12139
    PERSCACHE_X86_32             = 0x00000001,x00000001326,12139
    PERSCACHE_X86_64 327,12186
    PERSCACHE_X86_64             = 0x00000002,x00000002327,12186
    PERSCACHE_SEEN_BORLAND_SEH 335,12539
    PERSCACHE_SEEN_BORLAND_SEH   = 0x00000004,x00000004335,12539
    PERSCACHE_ELIDED_UBR 338,12629
    PERSCACHE_ELIDED_UBR         = 0x00000008,x00000008338,12629
    PERSCACHE_SUPPORT_RAC 341,12740
    PERSCACHE_SUPPORT_RAC        = 0x00000010,x00000010341,12740
    PERSCACHE_SUPPORT_RCT 342,12787
    PERSCACHE_SUPPORT_RCT        = 0x00000020,x00000020342,12787
    PERSCACHE_ENTIRE_MODULE_RCT 345,12897
    PERSCACHE_ENTIRE_MODULE_RCT  = 0x00000040,x00000040345,12897
    PERSCACHE_SUPPORT_TRACES 348,12990
    PERSCACHE_SUPPORT_TRACES     = 0x00000080,x00000080348,12990
    PERSCACHE_MAP_RW_SEPARATE 351,13108
    PERSCACHE_MAP_RW_SEPARATE    = 0x00000100,x00000100351,13108
    PERSCACHE_EXEMPTION_OPTIONS 354,13227
    PERSCACHE_EXEMPTION_OPTIONS  = 0x00000200,x00000200354,13227
    PERSCACHE_CODE_INVALID 362,13620
    PERSCACHE_CODE_INVALID       = 0x00000400,x00000400362,13620
    PERSCACHE_MODULE_MD5_SHORT 368,13761
    PERSCACHE_MODULE_MD5_SHORT       = 0x00000001,x00000001368,13761
    PERSCACHE_MODULE_MD5_COMPLETE 369,13834
    PERSCACHE_MODULE_MD5_COMPLETE    = 0x00000002,x00000002369,13834
    PERSCACHE_GENFILE_MD5_SHORT 371,13953
    PERSCACHE_GENFILE_MD5_SHORT      = 0x00000004,x00000004371,13953
    PERSCACHE_GENFILE_MD5_COMPLETE 372,14017
    PERSCACHE_GENFILE_MD5_COMPLETE   = 0x00000008,x00000008372,14017
    PERSCACHE_MODULE_MD5_AT_LOAD 376,14221
    PERSCACHE_MODULE_MD5_AT_LOAD     = 0x00000010,x00000010376,14221
typedef struct _persisted_module_info_t 384,14508
    app_pc base;385,14550
    uint checksum;386,14604
    uint timestamp;387,14623
    uint64 image_size;391,14778
    uint64 code_size;392,14801
    uint64 file_version;393,14875
    module_digest_t module_md5;402,15240
} persisted_module_info_t;403,15272
typedef struct _persisted_footer_t 409,15469
    module_digest_t self_md5;414,15715
    uint magic;415,15791
} persisted_footer_t;416,15807
typedef struct _coarse_persisted_info_t 438,17026
    uint magic;442,17153
    uint version;443,17169
    size_t header_len;449,17367
    size_t data_len;450,17390
    uint flags;455,17527
    uint build_number;458,17570
    persisted_module_info_t modinfo;461,17635
    size_t start_offs;464,17749
    size_t end_offs;465,17772
    uint tls_offs_base;468,17870
    size_t instrument_rw_len;474,18051
    size_t stubs_len;477,18111
    size_t ibl_jmp_prefix_len;478,18133
    size_t ibl_call_prefix_len;479,18164
    size_t ibl_ret_prefix_len;480,18196
    size_t trace_head_return_prefix_len;481,18227
    size_t fcache_return_prefix_len;482,18268
    size_t cache_len;485,18334
    size_t post_cache_pad_len;486,18356
    size_t pad_len;488,18504
    size_t instrument_rx_len;489,18563
    size_t view_pad_len;490,18593
    size_t stub_htable_len;493,18695
    size_t cache_htable_len;494,18723
    size_t rct_htable_len;495,18752
    size_t rac_htable_len;496,18779
    size_t reloc_len;497,18806
    size_t hotp_patch_list_len;499,18858
    size_t instrument_ro_len;501,18945
    size_t option_string_len;504,19054
} coarse_persisted_info_t;587,22089

rct.c,229
find_address_references(90,3521
rct_check_ref_and_add(175,6886
is_address_taken(243,9376
is_address_after_call(249,9521
rct_ind_branch_check(262,9954
rct_known_targets_init(537,21998
rct_init(556,22571
rct_exit(569,23034

rct.h,157
#define RCT_H40,1789
enum {RCT_CACHE_EXEMPT_NONE RCT_CACHE_EXEMPT_NONE42,1804
      RCT_CACHE_EXEMPT_MODULES 43,1837
      RCT_CACHE_EXEMPT_ALL 44,1873

sample_file_creator.c,15
int main(4,40

stats.c,1092
kstat_variables_t tkv;69,2965
kstat_stack_t ks;70,2988
kstat_init_variable(80,3149
kstats_evaluate_expressions(90,3398
#define KSTAT_SUM(95,3605
#define KSTAT_DEF(99,3832
#undef KSTAT_SUM101,3909
#undef KSTAT_DEF102,3926
#define KSTAT_SUM(106,4001
kstat_init_variables(109,4078
#define KSTAT_DEF(111,4124
#undef KSTAT_DEF113,4207
enum {KSTAT_OUTLIER_THRESHOLD_MS KSTAT_OUTLIER_THRESHOLD_MS123,4625
timestamp_t kstat_ignore_context_switch;124,4683
kstat_frequency_per_msec;127,4745
kstat_print_individual(131,4850
kstat_report(160,5945
#define KSTAT_DEF(165,6149
#undef KSTAT_DEF169,6374
kstats_main_logfile_name(179,6705
kstats_thread_logfile_name(185,6790
kstat_init(192,6861
kstat_exit(220,7653
kstat_calibrate(239,8076
kstat_thread_init(262,8695
kstat_merge_var(295,9912
kstat_merge(309,10453
#define KSTAT_DEF(311,10534
#undef KSTAT_DEF313,10649
dump_thread_kstats(317,10674
kstat_var_name(335,11430
#define KSTAT_DEF(338,11561
#undef KSTAT_DEF342,11668
kstats_dump_stack(348,11741
kstat_thread_exit(362,12164
kstat_test(392,13229
int main(454,14445

stats.h,1775
#define STATS_H40,1821
    uint num_self;63,2199
    timestamp_t total_self;82,3050
    timestamp_t total_sub;83,3118
    timestamp_t min_cum;86,3253
    timestamp_t max_cum;87,3332
    timestamp_t total_outliers;88,3410
} kstat_variable_t;90,3570
#define KSTAT_DEF(96,3748
#define KSTAT_SUM(97,3801
#undef KSTAT_SUM99,3894
#undef KSTAT_DEF100,3911
} kstat_variables_t;101,3928
    kstat_variable_t *var;var105,4014
    timestamp_t      self_time;106,4041
    timestamp_t      subpath_time;107,4073
    timestamp_t      outlier_time;108,4108
} kstat_node_t;109,4143
enum {KSTAT_MAX_DEPTH KSTAT_MAX_DEPTH111,4160
    volatile uint depth;115,4256
    timestamp_t last_start_time;116,4316
    timestamp_t last_end_time;117,4349
    kstat_node_t node[node118,4380
} kstat_stack_t;119,4420
    thread_id_t       thread_id;123,4501
    kstat_variables_t vars_kstats;124,4534
    kstat_stack_t     stack_kstats;125,4569
    file_t           outfile_kstats;126,4605
} thread_kstats_t;127,4642
#define KSTAT_THREAD_NO_PV_START(132,4712
#define KSTAT_THREAD_NO_PV_END(137,5032
#define KSTAT_THREAD(143,5227
#define KSTAT_OTHER_THREAD(151,5660
# define KSTAT_TOS_MATCHING(160,6136
#define KSTAT_SERIALIZE_INSTRUCTIONS(166,6461
#  define CORRECT_OUTLIER(174,6810
#  define CORRECT_OUTLIER(179,7015
#define UPDATE_CURRENT_COUNTER(184,7138
#define KSTAT_INTERNAL_DEBUG(200,8087
#define KSTAT_DUMP_STACK(210,8727
#define kstat_start_var(229,9621
#define kstat_switch_var(246,10490
#define kstat_stop_not_matching_var(249,10636
#define kstat_stop_matching_var(256,11021
#define kstat_tos_matching_var(264,11413
#define kstat_stop_not_propagated_var(266,11495
#define kstat_stop_rewind_var(291,13304
#define kstat_stop_longjmp_var(299,13728

string.c,380
strlen(62,2642
wcslen(73,2797
strchr(87,3111
strrchr(104,3524
strncpy(121,3856
memmove(137,4271
void *__memmove_chk(__memmove_chk157,4927
void *__strncpy_chk(__strncpy_chk168,5250
strncat(183,5611
strcmp(195,5870
strncmp(209,6149
memcmp(223,6449
strstr(240,6814
tolower(255,7128
strcasecmp(264,7256
strtoul(286,7923
identity(303,8435
unit_test_string(309,8487

synch.c,1503
typedef struct _thread_synch_data_t 53,2185
    spin_mutex_t *synch_lock;synch_lock58,2483
    int pending_synch_count;61,2661
    thread_synch_permission_t synch_perm;64,2821
    bool synch_with_success;68,3038
    priv_mcontext_t *set_mcontext;set_mcontext73,3281
    void *set_context;set_context74,3316
    size_t set_context_size;75,3339
    byte *set_context_alloc;set_context_alloc78,3429
} thread_synch_data_t;80,3465
free_setcontext(92,3866
synch_thread_free_setcontext(104,4240
synch_init(113,4497
synch_exit(118,4524
synch_thread_init(124,4592
synch_thread_exit(142,5317
thread_synch_state_no_xfer(165,6270
thread_synch_successful(178,6825
is_at_do_syscall(189,7159
is_native_thread_state_valid(244,9451
translate_mcontext(309,12705
waiting_at_safe_spot(406,17258
should_suspend_client_thread(431,18198
at_safe_spot(451,19091
should_wait_at_safe_spot(542,23676
set_synch_state(550,23937
check_wait_at_safe_spot(566,24511
adjust_wait_at_safe_spot(666,28938
set_synched_thread_context(685,29789
#define SYNCH_ALL_THREADS_MAXIMUM_LOOPS 761,33290
#define SYNCH_MAXIMUM_LOOPS 762,33375
#define SYNCH_WITH_WAIT_MS 767,33676
synch_thread_yield(771,33821
synch_with_thread(810,35796
synch_with_all_threads(1051,47374
        SYNCH_WITH_ALL_NEW 1070,48312
        SYNCH_WITH_ALL_NOTIFIED 1071,48349
        SYNCH_WITH_ALL_SYNCHED 1072,48386
resume_all_threads(1450,66866
end_synch_with_all_threads(1490,68121
translate_from_synchall_to_dispatch(1517,69192

synch.h,1308
#define SYNCH_H39,1808
    THREAD_SYNCH_NONE=46,2007
    THREAD_SYNCH_NO_LOCKS=50,2138
    THREAD_SYNCH_NO_LOCKS_NO_XFER=58,2466
    THREAD_SYNCH_VALID_MCONTEXT_NO_XFER=65,2742
    THREAD_SYNCH_VALID_MCONTEXT=69,2933
} thread_synch_permission_t;70,2967
    THREAD_SYNCH_SUSPENDED=77,3246
    THREAD_SYNCH_SUSPENDED_AND_CLEANED=78,3276
    THREAD_SYNCH_TERMINATED_AND_CLEANED=80,3403
    THREAD_SYNCH_SUSPENDED_VALID_MCONTEXT_OR_NO_XFER=85,3555
    THREAD_SYNCH_SUSPENDED_VALID_MCONTEXT=87,3612
} thread_synch_state_t;88,3656
    THREAD_SYNCH_RESULT_SUCCESS 91,3696
    THREAD_SYNCH_RESULT_SUSPEND_FAILURE 92,3741
    THREAD_SYNCH_RESULT_NOT_SAFE 93,3786
} thread_synch_result_t;94,3831
    THREAD_SYNCH_SUSPEND_FAILURE_ABORT 105,4273
    THREAD_SYNCH_SUSPEND_FAILURE_ABORT  = 0x00000001,x00000001105,4273
    THREAD_SYNCH_SUSPEND_FAILURE_IGNORE 106,4327
    THREAD_SYNCH_SUSPEND_FAILURE_IGNORE = 0x00000002,x00000002106,4327
    THREAD_SYNCH_SUSPEND_FAILURE_RETRY 111,4599
    THREAD_SYNCH_SUSPEND_FAILURE_RETRY  = 0x00000004,x00000004111,4599
    THREAD_SYNCH_SMALL_LOOP_MAX 114,4698
    THREAD_SYNCH_SMALL_LOOP_MAX         = 0x00000008,x00000008114,4698
#define THREAD_SYNCH_IS_CLEANED(118,4781
#define THREAD_SYNCH_IS_TERMINATED(122,5007
#define THREAD_SYNCH_SAFE(127,5255

unit-rct.c,494
typedef int (*fconvert_t)fconvert_t51,2102
typedef int (*fmult_t)fmult_t52,2136
int foo(54,2166
int f2(65,2375
int f3(70,2410
int f7(75,2445
bar(81,2485
fmult_t farr[farr92,2714
test_indcalls(95,2756
test_switch_helper(109,3009
test_switch(121,3178
test_small_array(136,3525
test_lookup_delete(285,8326
test_self_direct(305,9005
test_rct_ind_branch_check(381,11867
test_loaddll(439,13750
void func2(455,14137
void func3(459,14196
void func4(463,14269
unit_main(470,14358

unit_tests.c,14
main(51,2012

unix/diagnost.c,118
report_diagnostics(41,1901
append_diagnostics(49,2105
diagnost_exit(55,2254
check_for_unsupported_modules(60,2280

unix/include/sigcontext.h,4028
#define _SIGCONTEXT_H_14,662
#define _BITS_SIGCONTEXT_H 17,734
#define _ASM_X86_SIGCONTEXT_H 21,895
#define _ASMi386_SIGCONTEXT_H 22,927
#define _ASM_X86_64_SIGCONTEXT_H 23,959
#define _ASM_X86_SIGCONTEXT32_H 24,994
#define FP_XSTATE_MAGIC1	28,1055
#define FP_XSTATE_MAGIC2	29,1092
#define FP_XSTATE_MAGIC2_SIZE	30,1129
struct _fpx_sw_bytes 44,1790
	__u32 magic1;45,1813
	__u32 extended_size;46,1852
	__u64 xstate_bv;49,1964
	__u32 xstate_size;54,2100
	__u32 padding[padding59,2272
struct _fpreg 77,2855
	unsigned short significand[significand78,2871
	unsigned short exponent;79,2903
struct _fpxreg 82,2933
	unsigned short significand[significand83,2950
	unsigned short exponent;84,2982
	unsigned short padding[padding85,3008
struct _xmmreg 88,3040
	unsigned long element[element89,3057
struct _fpstate 92,3088
	unsigned long	cw;94,3137
	unsigned long	sw;95,3156
	unsigned long	tag;96,3175
	unsigned long	ipoff;97,3195
	unsigned long	cssel;98,3217
	unsigned long	dataoff;99,3239
	unsigned long	datasel;100,3263
	struct _fpreg	_st[_st101,3287
	unsigned short	status;102,3310
	unsigned short	magic;103,3334
	unsigned long	_fxsr_env[_fxsr_env106,3424
	unsigned long	mxcsr;107,3483
	unsigned long	reserved;108,3505
	struct _fpxreg	_fxsr_st[_fxsr_st109,3530
	struct _xmmreg	_xmm[_xmm110,3594
	unsigned long	padding1[padding1111,3619
		unsigned long	padding2[padding2114,3658
		struct _fpx_sw_bytes sw_reserved;115,3688
#define X86_FXSR_MAGIC	120,3784
struct sigcontext 125,3877
	unsigned short gs,126,3897
	unsigned short gs, __gsh;126,3897
	unsigned short fs,127,3924
	unsigned short fs, __fsh;127,3924
	unsigned short es,128,3951
	unsigned short es, __esh;128,3951
	unsigned short ds,129,3978
	unsigned short ds, __dsh;129,3978
	unsigned long edi;130,4005
	unsigned long esi;131,4025
	unsigned long ebp;132,4045
	unsigned long esp;133,4065
	unsigned long ebx;134,4085
	unsigned long edx;135,4105
	unsigned long ecx;136,4125
	unsigned long eax;137,4145
	unsigned long trapno;138,4165
	unsigned long err;139,4188
	unsigned long eip;140,4208
	unsigned short cs,141,4228
	unsigned short cs, __csh;141,4228
	unsigned long eflags;142,4255
	unsigned long esp_at_signal;143,4278
	unsigned short ss,144,4308
	unsigned short ss, __ssh;144,4308
	struct _fpstate *fpstate;fpstate145,4335
	unsigned long oldmask;146,4362
	unsigned long cr2;147,4386
struct _fpstate 155,4569
	__u16	cwd;156,4587
	__u16	swd;157,4599
	__u16	twd;158,4611
	__u16	fop;160,4690
	__u64	rip;161,4702
	__u64	rdp;162,4714
	__u32	mxcsr;163,4726
	__u32	mxcsr_mask;164,4740
	__u32	st_space[st_space165,4759
	__u32	xmm_space[xmm_space166,4813
	__u32	reserved2[reserved2167,4871
		__u32	reserved3[reserved3169,4902
		struct _fpx_sw_bytes sw_reserved;170,4925
struct sigcontext 178,5089
	unsigned long r8;179,5109
	unsigned long r9;180,5128
	unsigned long r10;181,5147
	unsigned long r11;182,5167
	unsigned long r12;183,5187
	unsigned long r13;184,5207
	unsigned long r14;185,5227
	unsigned long r15;186,5247
	unsigned long rdi;187,5267
	unsigned long rsi;188,5287
	unsigned long rbp;189,5307
	unsigned long rbx;190,5327
	unsigned long rdx;191,5347
	unsigned long rax;192,5367
	unsigned long rcx;193,5387
	unsigned long rsp;194,5407
	unsigned long rip;195,5427
	unsigned long eflags;196,5447
	unsigned short cs;197,5484
	unsigned short gs;198,5504
	unsigned short fs;199,5524
	unsigned short __pad0;200,5544
	unsigned long err;201,5568
	unsigned long trapno;202,5588
	unsigned long oldmask;203,5611
	unsigned long cr2;204,5635
	struct _fpstate *fpstate;fpstate205,5655
	unsigned long reserved1[reserved1206,5713
struct _xsave_hdr 211,5770
	__u64 xstate_bv;212,5790
	__u64 reserved1[reserved1213,5808
	__u64 reserved2[reserved2214,5829
struct _ymmh_state 217,5854
	__u32 ymmh_space[ymmh_space219,5914
struct _xstate 228,6185
	struct _fpstate fpstate;229,6202
	struct _xsave_hdr xstate_hdr;230,6228
	struct _ymmh_state ymmh;231,6259

unix/include/signalfd.h,565
#define _SIGNALFD_H14,659
#define SFD_CLOEXEC 19,731
#define SFD_NONBLOCK 20,761
struct signalfd_siginfo 22,794
	__u32 ssi_signo;23,820
	__s32 ssi_errno;24,838
	__s32 ssi_code;25,856
	__u32 ssi_pid;26,873
	__u32 ssi_uid;27,889
	__s32 ssi_fd;28,905
	__u32 ssi_tid;29,920
	__u32 ssi_band;30,936
	__u32 ssi_overrun;31,953
	__u32 ssi_trapno;32,973
	__s32 ssi_status;33,992
	__s32 ssi_int;34,1011
	__u64 ssi_ptr;35,1027
	__u64 ssi_utime;36,1043
	__u64 ssi_stime;37,1061
	__u64 ssi_addr;38,1079
	__u16 ssi_addr_lsb;39,1096
	__u8 __pad[__pad50,1498

unix/include/syscall.h,46281
#define _SYSCALL_H_ 14,659
# define __NR_read 19,760
# define __NR_write 20,810
# define __NR_open 21,860
# define __NR_close 22,910
# define __NR_stat 23,960
# define __NR_fstat 24,1010
# define __NR_lstat 25,1060
# define __NR_poll 26,1110
# define __NR_lseek 27,1160
# define __NR_mmap 28,1210
# define __NR_mprotect 29,1260
# define __NR_munmap 30,1311
# define __NR_brk 31,1362
# define __NR_rt_sigaction 32,1413
# define __NR_rt_sigprocmask 33,1464
# define __NR_rt_sigreturn 34,1515
# define __NR_ioctl 35,1566
# define __NR_pread64 36,1617
# define __NR_pwrite64 37,1668
# define __NR_readv 38,1719
# define __NR_writev 39,1770
# define __NR_access 40,1821
# define __NR_pipe 41,1872
# define __NR_select 42,1923
# define __NR_sched_yield 43,1974
# define __NR_mremap 44,2025
# define __NR_msync 45,2076
# define __NR_mincore 46,2127
# define __NR_madvise 47,2178
# define __NR_shmget 48,2229
# define __NR_shmat 49,2280
# define __NR_shmctl 50,2331
# define __NR_dup 51,2382
# define __NR_dup2 52,2433
# define __NR_pause 53,2484
# define __NR_nanosleep 54,2535
# define __NR_getitimer 55,2586
# define __NR_alarm 56,2637
# define __NR_setitimer 57,2688
# define __NR_getpid 58,2739
# define __NR_sendfile 59,2790
# define __NR_socket 60,2841
# define __NR_connect 61,2892
# define __NR_accept 62,2943
# define __NR_sendto 63,2994
# define __NR_recvfrom 64,3045
# define __NR_sendmsg 65,3096
# define __NR_recvmsg 66,3147
# define __NR_shutdown 67,3198
# define __NR_bind 68,3249
# define __NR_listen 69,3300
# define __NR_getsockname 70,3351
# define __NR_getpeername 71,3402
# define __NR_socketpair 72,3453
# define __NR_setsockopt 73,3504
# define __NR_getsockopt 74,3555
# define __NR_clone 75,3606
# define __NR_fork 76,3657
# define __NR_vfork 77,3708
# define __NR_execve 78,3759
# define __NR_exit 79,3810
# define __NR_wait4 80,3861
# define __NR_kill 81,3912
# define __NR_uname 82,3963
# define __NR_semget 83,4014
# define __NR_semop 84,4065
# define __NR_semctl 85,4116
# define __NR_shmdt 86,4167
# define __NR_msgget 87,4218
# define __NR_msgsnd 88,4269
# define __NR_msgrcv 89,4320
# define __NR_msgctl 90,4371
# define __NR_fcntl 91,4422
# define __NR_flock 92,4473
# define __NR_fsync 93,4524
# define __NR_fdatasync 94,4575
# define __NR_truncate 95,4626
# define __NR_ftruncate 96,4677
# define __NR_getdents 97,4728
# define __NR_getcwd 98,4779
# define __NR_chdir 99,4830
# define __NR_fchdir 100,4881
# define __NR_rename 101,4932
# define __NR_mkdir 102,4983
# define __NR_rmdir 103,5034
# define __NR_creat 104,5085
# define __NR_link 105,5136
# define __NR_unlink 106,5187
# define __NR_symlink 107,5238
# define __NR_readlink 108,5289
# define __NR_chmod 109,5340
# define __NR_fchmod 110,5391
# define __NR_chown 111,5442
# define __NR_fchown 112,5493
# define __NR_lchown 113,5544
# define __NR_umask 114,5595
# define __NR_gettimeofday 115,5646
# define __NR_getrlimit 116,5697
# define __NR_getrusage 117,5748
# define __NR_sysinfo 118,5799
# define __NR_times 119,5850
# define __NR_ptrace 120,5902
# define __NR_getuid 121,5954
# define __NR_syslog 122,6006
# define __NR_getgid 124,6128
# define __NR_setuid 125,6180
# define __NR_setgid 126,6232
# define __NR_geteuid 127,6284
# define __NR_getegid 128,6336
# define __NR_setpgid 129,6388
# define __NR_getppid 130,6440
# define __NR_getpgrp 131,6492
# define __NR_setsid 132,6544
# define __NR_setreuid 133,6596
# define __NR_setregid 134,6648
# define __NR_getgroups 135,6700
# define __NR_setgroups 136,6752
# define __NR_setresuid 137,6804
# define __NR_getresuid 138,6856
# define __NR_setresgid 139,6908
# define __NR_getresgid 140,6960
# define __NR_getpgid 141,7012
# define __NR_setfsuid 142,7064
# define __NR_setfsgid 143,7116
# define __NR_getsid 144,7168
# define __NR_capget 145,7220
# define __NR_capset 146,7272
# define __NR_rt_sigpending 147,7324
# define __NR_rt_sigtimedwait 148,7376
# define __NR_rt_sigqueueinfo 149,7428
# define __NR_rt_sigsuspend 150,7480
# define __NR_sigaltstack 151,7532
# define __NR_utime 152,7584
# define __NR_mknod 153,7636
# define __NR_uselib 155,7716
# define __NR_personality 156,7768
# define __NR_ustat 157,7820
# define __NR_statfs 158,7872
# define __NR_fstatfs 159,7924
# define __NR_sysfs 160,7976
# define __NR_getpriority 161,8028
# define __NR_setpriority 162,8080
# define __NR_sched_setparam 163,8132
# define __NR_sched_getparam 164,8184
# define __NR_sched_setscheduler 165,8236
# define __NR_sched_getscheduler 166,8288
# define __NR_sched_get_priority_max 167,8340
# define __NR_sched_get_priority_min 168,8392
# define __NR_sched_rr_get_interval 169,8444
# define __NR_mlock 170,8496
# define __NR_munlock 171,8548
# define __NR_mlockall 172,8600
# define __NR_munlockall 173,8652
# define __NR_vhangup 174,8704
# define __NR_modify_ldt 175,8756
# define __NR_pivot_root 176,8808
# define __NR__sysctl 177,8860
# define __NR_prctl 178,8912
# define __NR_arch_prctl 179,8964
# define __NR_adjtimex 180,9016
# define __NR_setrlimit 181,9068
# define __NR_chroot 182,9120
# define __NR_sync 183,9172
# define __NR_acct 184,9224
# define __NR_settimeofday 185,9276
# define __NR_mount 186,9328
# define __NR_umount2 187,9380
# define __NR_swapon 188,9432
# define __NR_swapoff 189,9484
# define __NR_reboot 190,9536
# define __NR_sethostname 191,9588
# define __NR_setdomainname 192,9640
# define __NR_iopl 193,9692
# define __NR_ioperm 194,9744
# define __NR_create_module 195,9796
# define __NR_init_module 196,9848
# define __NR_delete_module 197,9900
# define __NR_get_kernel_syms 198,9952
# define __NR_query_module 199,10004
# define __NR_quotactl 200,10056
# define __NR_nfsservctl 201,10108
# define __NR_getpmsg 203,10191
# define __NR_putpmsg 204,10243
# define __NR_afs_syscall 206,10318
# define __NR_tuxcall 208,10393
# define __NR_security 209,10445
# define __NR_gettid 210,10497
# define __NR_readahead 211,10549
# define __NR_setxattr 212,10601
# define __NR_lsetxattr 213,10653
# define __NR_fsetxattr 214,10705
# define __NR_getxattr 215,10757
# define __NR_lgetxattr 216,10809
# define __NR_fgetxattr 217,10861
# define __NR_listxattr 218,10913
# define __NR_llistxattr 219,10965
# define __NR_flistxattr 220,11017
# define __NR_removexattr 221,11069
# define __NR_lremovexattr 222,11121
# define __NR_fremovexattr 223,11173
# define __NR_tkill 224,11225
# define __NR_time 225,11277
# define __NR_futex 226,11329
# define __NR_sched_setaffinity 227,11381
# define __NR_sched_getaffinity 228,11433
# define __NR_set_thread_area 229,11485
# define __NR_io_setup 230,11537
# define __NR_io_destroy 231,11589
# define __NR_io_getevents 232,11641
# define __NR_io_submit 233,11693
# define __NR_io_cancel 234,11745
# define __NR_get_thread_area 235,11797
# define __NR_lookup_dcookie 236,11849
# define __NR_epoll_create 237,11901
# define __NR_epoll_ctl_old 238,11953
# define __NR_epoll_wait_old 239,12005
# define __NR_remap_file_pages 240,12057
# define __NR_getdents64 241,12109
# define __NR_set_tid_address 242,12161
# define __NR_restart_syscall 243,12213
# define __NR_semtimedop 244,12265
# define __NR_fadvise64 245,12317
# define __NR_timer_create 246,12369
# define __NR_timer_settime 247,12421
# define __NR_timer_gettime 248,12473
# define __NR_timer_getoverrun 249,12525
# define __NR_timer_delete 250,12577
# define __NR_clock_settime 251,12629
# define __NR_clock_gettime 252,12681
# define __NR_clock_getres 253,12733
# define __NR_clock_nanosleep 254,12785
# define __NR_exit_group 255,12837
# define __NR_epoll_wait 256,12889
# define __NR_epoll_ctl 257,12941
# define __NR_tgkill 258,12993
# define __NR_utimes 259,13045
# define __NR_vserver 260,13097
# define __NR_mbind 261,13149
# define __NR_set_mempolicy 262,13201
# define __NR_get_mempolicy 263,13253
# define __NR_mq_open 264,13305
# define __NR_mq_unlink 265,13357
# define __NR_mq_timedsend 266,13409
# define __NR_mq_timedreceive 267,13461
# define __NR_mq_notify 268,13513
# define __NR_mq_getsetattr 269,13565
# define __NR_kexec_load 270,13617
# define __NR_waitid 271,13669
# define __NR_add_key 272,13721
# define __NR_request_key 273,13773
# define __NR_keyctl 274,13825
# define __NR_ioprio_set 275,13877
# define __NR_ioprio_get 276,13929
# define __NR_inotify_init 277,13981
# define __NR_inotify_add_watch 278,14033
# define __NR_inotify_rm_watch 279,14085
# define __NR_migrate_pages 280,14137
# define __NR_openat 281,14189
# define __NR_mkdirat 282,14241
# define __NR_mknodat 283,14293
# define __NR_fchownat 284,14345
# define __NR_futimesat 285,14397
# define __NR_newfstatat 286,14449
# define __NR_unlinkat 287,14501
# define __NR_renameat 288,14553
# define __NR_linkat 289,14605
# define __NR_symlinkat 290,14657
# define __NR_readlinkat 291,14709
# define __NR_fchmodat 292,14761
# define __NR_faccessat 293,14813
# define __NR_pselect6 294,14865
# define __NR_ppoll 295,14917
# define __NR_unshare 296,14969
# define __NR_set_robust_list 297,15021
# define __NR_get_robust_list 298,15073
# define __NR_splice 299,15125
# define __NR_tee 300,15177
# define __NR_sync_file_range 301,15229
# define __NR_vmsplice 302,15281
# define __NR_move_pages 303,15333
# define __NR_utimensat 304,15385
# define __IGNORE_getcpu 305,15437
# define __NR_epoll_pwait 306,15509
# define __NR_signalfd 307,15561
# define __NR_timerfd 308,15613
# define __NR_eventfd 309,15665
# define __NR_fallocate 310,15717
# define __NR_timerfd_settime 311,15769
# define __NR_timerfd_gettime 312,15821
# define __NR_accept4 313,15873
# define __NR_signalfd4 314,15925
# define __NR_eventfd2 315,15977
# define __NR_epoll_create1 316,16029
# define __NR_dup3 317,16081
# define __NR_pipe2 318,16133
# define __NR_inotify_init1 319,16185
# define __NR_preadv 320,16237
# define __NR_pwritev 321,16289
# define __NR_rt_tgsigqueueinfo 322,16341
# define __NR_perf_event_open 323,16393
# define __NR_recvmmsg 324,16445
# define __NR_fanotify_init 325,16497
# define __NR_fanotify_mark 326,16549
# define __NR_prlimit64 327,16601
# define __NR_name_to_handle_at 328,16653
# define __NR_open_by_handle_at 329,16705
# define __NR_clock_adjtime 330,16757
# define __NR_syncfs 331,16809
# define __NR_sendmmsg 332,16861
# define __NR_setns 333,16913
# define __NR_getcpu 334,16965
# define __NR_process_vm_readv 335,17017
# define __NR_process_vm_writev 336,17069
# define __NR_kcmp 337,17121
# define __NR_finit_module 338,17173
#  define __ARCH_WANT_OLD_READDIR340,17245
#  define __ARCH_WANT_OLD_STAT341,17279
#  define __ARCH_WANT_SYS_ALARM342,17310
#  define __ARCH_WANT_SYS_GETHOSTNAME343,17342
#  define __ARCH_WANT_SYS_PAUSE344,17380
#  define __ARCH_WANT_SYS_SGETMASK345,17412
#  define __ARCH_WANT_SYS_SIGNAL346,17447
#  define __ARCH_WANT_SYS_UTIME347,17480
#  define __ARCH_WANT_SYS_WAITPID348,17512
#  define __ARCH_WANT_SYS_SOCKETCALL349,17546
#  define __ARCH_WANT_SYS_FADVISE64350,17583
#  define __ARCH_WANT_SYS_GETPGRP351,17619
#  define __ARCH_WANT_SYS_LLSEEK352,17653
#  define __ARCH_WANT_SYS_NICE353,17686
#  define __ARCH_WANT_SYS_OLD_GETRLIMIT354,17717
#  define __ARCH_WANT_SYS_OLDUMOUNT355,17757
#  define __ARCH_WANT_SYS_SIGPENDING356,17793
#  define __ARCH_WANT_SYS_SIGPROCMASK357,17830
#  define __ARCH_WANT_SYS_RT_SIGACTION358,17868
#  define __ARCH_WANT_SYS_RT_SIGSUSPEND359,17907
#  define __ARCH_WANT_SYS_TIME360,17947
#  define __ARCH_WANT_COMPAT_SYS_TIME361,17978
# define __NR_restart_syscall 367,18115
# define __NR_exit 368,18152
# define __NR_fork 369,18189
# define __NR_read 370,18226
# define __NR_write 371,18263
# define __NR_open 372,18300
# define __NR_close 373,18337
# define __NR_waitpid 374,18374
# define __NR_creat 375,18411
# define __NR_link 376,18448
# define __NR_unlink 377,18485
# define __NR_execve 378,18522
# define __NR_chdir 379,18559
# define __NR_time 380,18596
# define __NR_mknod 381,18633
# define __NR_chmod 382,18670
# define __NR_lchown 383,18707
# define __NR_break 384,18744
# define __NR_oldstat 385,18781
# define __NR_lseek 386,18818
# define __NR_getpid 387,18855
# define __NR_mount 388,18892
# define __NR_umount 389,18929
# define __NR_setuid 390,18966
# define __NR_getuid 391,19003
# define __NR_stime 392,19040
# define __NR_ptrace 393,19077
# define __NR_alarm 394,19114
# define __NR_oldfstat 395,19151
# define __NR_pause 396,19188
# define __NR_utime 397,19225
# define __NR_stty 398,19262
# define __NR_gtty 399,19299
# define __NR_access 400,19336
# define __NR_nice 401,19373
# define __NR_ftime 402,19410
# define __NR_sync 403,19447
# define __NR_kill 404,19484
# define __NR_rename 405,19521
# define __NR_mkdir 406,19558
# define __NR_rmdir 407,19595
# define __NR_dup 408,19632
# define __NR_pipe 409,19669
# define __NR_times 410,19706
# define __NR_prof 411,19743
# define __NR_brk 412,19780
# define __NR_setgid 413,19817
# define __NR_getgid 414,19854
# define __NR_signal 415,19891
# define __NR_geteuid 416,19928
# define __NR_getegid 417,19965
# define __NR_acct 418,20002
# define __NR_umount2 419,20039
# define __NR_lock 420,20076
# define __NR_ioctl 421,20113
# define __NR_fcntl 422,20150
# define __NR_mpx 423,20187
# define __NR_setpgid 424,20224
# define __NR_ulimit 425,20261
# define __NR_oldolduname 426,20298
# define __NR_umask 427,20335
# define __NR_chroot 428,20372
# define __NR_ustat 429,20409
# define __NR_dup2 430,20446
# define __NR_getppid 431,20483
# define __NR_getpgrp 432,20520
# define __NR_setsid 433,20557
# define __NR_sigaction 434,20594
# define __NR_sgetmask 435,20631
# define __NR_ssetmask 436,20668
# define __NR_setreuid 437,20705
# define __NR_setregid 438,20742
# define __NR_sigsuspend 439,20779
# define __NR_sigpending 440,20816
# define __NR_sethostname 441,20853
# define __NR_setrlimit 442,20890
# define __NR_getrlimit 443,20927
# define __NR_getrusage 444,21010
# define __NR_gettimeofday 445,21047
# define __NR_settimeofday 446,21084
# define __NR_getgroups 447,21121
# define __NR_setgroups 448,21158
# define __NR_select 449,21195
# define __NR_symlink 450,21232
# define __NR_oldlstat 451,21269
# define __NR_readlink 452,21306
# define __NR_uselib 453,21343
# define __NR_swapon 454,21380
# define __NR_reboot 455,21417
# define __NR_readdir 456,21454
# define __NR_mmap 457,21491
# define __NR_munmap 458,21528
# define __NR_truncate 459,21565
# define __NR_ftruncate 460,21602
# define __NR_fchmod 461,21639
# define __NR_fchown 462,21676
# define __NR_getpriority 463,21713
# define __NR_setpriority 464,21750
# define __NR_profil 465,21787
# define __NR_statfs 466,21824
# define __NR_fstatfs 467,21861
# define __NR_ioperm 468,21898
# define __NR_socketcall 469,21935
# define __NR_syslog 470,21972
# define __NR_setitimer 471,22009
# define __NR_getitimer 472,22046
# define __NR_stat 473,22083
# define __NR_lstat 474,22120
# define __NR_fstat 475,22157
# define __NR_olduname 476,22194
# define __NR_iopl 477,22231
# define __NR_vhangup 478,22268
# define __NR_idle 479,22305
# define __NR_vm86old 480,22342
# define __NR_wait4 481,22379
# define __NR_swapoff 482,22416
# define __NR_sysinfo 483,22453
# define __NR_ipc 484,22490
# define __NR_fsync 485,22527
# define __NR_sigreturn 486,22564
# define __NR_clone 487,22601
# define __NR_setdomainname 488,22638
# define __NR_uname 489,22675
# define __NR_modify_ldt 490,22712
# define __NR_adjtimex 491,22749
# define __NR_mprotect 492,22786
# define __NR_sigprocmask 493,22823
# define __NR_create_module 494,22860
# define __NR_init_module 495,22897
# define __NR_delete_module 496,22934
# define __NR_get_kernel_syms 497,22971
# define __NR_quotactl 498,23008
# define __NR_getpgid 499,23045
# define __NR_fchdir 500,23082
# define __NR_bdflush 501,23119
# define __NR_sysfs 502,23156
# define __NR_personality 503,23193
# define __NR_afs_syscall 504,23230
# define __NR_setfsuid 505,23304
# define __NR_setfsgid 506,23341
# define __NR__llseek 507,23378
# define __NR_getdents 508,23415
# define __NR__newselect 509,23452
# define __NR_flock 510,23489
# define __NR_msync 511,23526
# define __NR_readv 512,23563
# define __NR_writev 513,23600
# define __NR_getsid 514,23637
# define __NR_fdatasync 515,23674
# define __NR__sysctl 516,23711
# define __NR_mlock 517,23748
# define __NR_munlock 518,23785
# define __NR_mlockall 519,23822
# define __NR_munlockall 520,23859
# define __NR_sched_setparam 521,23896
# define __NR_sched_getparam 522,23941
# define __NR_sched_setscheduler 523,23986
# define __NR_sched_getscheduler 524,24031
# define __NR_sched_yield 525,24076
# define __NR_sched_get_priority_max 526,24121
# define __NR_sched_get_priority_min 527,24166
# define __NR_sched_rr_get_interval 528,24211
# define __NR_nanosleep 529,24256
# define __NR_mremap 530,24293
# define __NR_setresuid 531,24330
# define __NR_getresuid 532,24367
# define __NR_vm86 533,24404
# define __NR_query_module 534,24441
# define __NR_poll 535,24478
# define __NR_nfsservctl 536,24515
# define __NR_setresgid 537,24552
# define __NR_getresgid 538,24589
# define __NR_prctl 539,24626
# define __NR_rt_sigreturn 540,24663
# define __NR_rt_sigaction 541,24700
# define __NR_rt_sigprocmask 542,24737
# define __NR_rt_sigpending 543,24774
# define __NR_rt_sigtimedwait 544,24811
# define __NR_rt_sigqueueinfo 545,24848
# define __NR_rt_sigsuspend 546,24885
# define __NR_pread64 547,24922
# define __NR_pwrite64 548,24959
# define __NR_chown 549,24996
# define __NR_getcwd 550,25033
# define __NR_capget 551,25070
# define __NR_capset 552,25107
# define __NR_sigaltstack 553,25144
# define __NR_sendfile 554,25181
# define __NR_getpmsg 555,25218
# define __NR_putpmsg 556,25299
# define __NR_vfork 557,25380
# define __NR_ugetrlimit 558,25417
# define __NR_mmap2 559,25488
# define __NR_truncate64 560,25525
# define __NR_ftruncate64 561,25562
# define __NR_stat64 562,25599
# define __NR_lstat64 563,25636
# define __NR_fstat64 564,25673
# define __NR_lchown32 565,25710
# define __NR_getuid32 566,25747
# define __NR_getgid32 567,25784
# define __NR_geteuid32 568,25821
# define __NR_getegid32 569,25858
# define __NR_setreuid32 570,25895
# define __NR_setregid32 571,25932
# define __NR_getgroups32 572,25969
# define __NR_setgroups32 573,26006
# define __NR_fchown32 574,26043
# define __NR_setresuid32 575,26080
# define __NR_getresuid32 576,26117
# define __NR_setresgid32 577,26154
# define __NR_getresgid32 578,26191
# define __NR_chown32 579,26228
# define __NR_setuid32 580,26265
# define __NR_setgid32 581,26302
# define __NR_setfsuid32 582,26339
# define __NR_setfsgid32 583,26376
# define __NR_pivot_root 584,26413
# define __NR_mincore 585,26450
# define __NR_madvise 586,26487
# define __NR_madvise1 587,26524
# define __NR_getdents64 588,26605
# define __NR_fcntl64 589,26642
# define __NR_gettid 591,26699
# define __NR_readahead 592,26736
# define __NR_setxattr 593,26773
# define __NR_lsetxattr 594,26810
# define __NR_fsetxattr 595,26847
# define __NR_getxattr 596,26884
# define __NR_lgetxattr 597,26921
# define __NR_fgetxattr 598,26958
# define __NR_listxattr 599,26995
# define __NR_llistxattr 600,27032
# define __NR_flistxattr 601,27069
# define __NR_removexattr 602,27106
# define __NR_lremovexattr 603,27143
# define __NR_fremovexattr 604,27180
# define __NR_tkill 605,27217
# define __NR_sendfile64 606,27254
# define __NR_futex 607,27291
# define __NR_sched_setaffinity 608,27328
# define __NR_sched_getaffinity 609,27365
# define __NR_set_thread_area 610,27402
# define __NR_get_thread_area 611,27439
# define __NR_io_setup 612,27476
# define __NR_io_destroy 613,27513
# define __NR_io_getevents 614,27550
# define __NR_io_submit 615,27587
# define __NR_io_cancel 616,27624
# define __NR_fadvise64 617,27661
# define __NR_exit_group 619,27766
# define __NR_lookup_dcookie 620,27803
# define __NR_epoll_create 621,27840
# define __NR_epoll_ctl 622,27877
# define __NR_epoll_wait 623,27914
# define __NR_remap_file_pages 624,27951
# define __NR_set_tid_address 625,27988
# define __NR_timer_create 626,28025
# define __NR_timer_settime 627,28062
# define __NR_timer_gettime 628,28117
# define __NR_timer_getoverrun 629,28172
# define __NR_timer_delete 630,28227
# define __NR_clock_settime 631,28282
# define __NR_clock_gettime 632,28337
# define __NR_clock_getres 633,28392
# define __NR_clock_nanosleep 634,28447
# define __NR_statfs64 635,28502
# define __NR_fstatfs64 636,28539
# define __NR_tgkill 637,28576
# define __NR_utimes 638,28613
# define __NR_fadvise64_64 639,28650
# define __NR_vserver 640,28687
# define __NR_mbind 641,28724
# define __NR_get_mempolicy 642,28761
# define __NR_set_mempolicy 643,28798
# define __NR_mq_open 644,28835
# define __NR_mq_unlink 645,28872
# define __NR_mq_timedsend 646,28922
# define __NR_mq_timedreceive 647,28972
# define __NR_mq_notify 648,29022
# define __NR_mq_getsetattr 649,29072
# define __NR_kexec_load 650,29122
# define __NR_waitid 651,29159
# define __NR_add_key 653,29235
# define __NR_request_key 654,29272
# define __NR_keyctl 655,29309
# define __NR_ioprio_set 656,29346
# define __NR_ioprio_get 657,29383
# define __NR_inotify_init 658,29420
# define __NR_inotify_add_watch 659,29457
# define __NR_inotify_rm_watch 660,29494
# define __NR_migrate_pages 661,29531
# define __NR_openat 662,29568
# define __NR_mkdirat 663,29605
# define __NR_mknodat 664,29642
# define __NR_fchownat 665,29679
# define __NR_futimesat 666,29716
# define __NR_fstatat64 667,29753
# define __NR_unlinkat 668,29790
# define __NR_renameat 669,29827
# define __NR_linkat 670,29864
# define __NR_symlinkat 671,29901
# define __NR_readlinkat 672,29938
# define __NR_fchmodat 673,29975
# define __NR_faccessat 674,30012
# define __NR_pselect6 675,30049
# define __NR_ppoll 676,30086
# define __NR_unshare 677,30123
# define __NR_set_robust_list 678,30160
# define __NR_get_robust_list 679,30197
# define __NR_splice 680,30234
# define __NR_sync_file_range 681,30271
# define __NR_tee 682,30308
# define __NR_vmsplice 683,30345
# define __NR_move_pages 684,30382
# define __NR_getcpu 685,30419
# define __NR_epoll_pwait 686,30456
# define __NR_utimensat 687,30493
# define __NR_signalfd 688,30530
# define __NR_timerfd 689,30567
# define __NR_eventfd 690,30604
# define __NR_fallocate 691,30641
# define __NR_timerfd_settime 692,30678
# define __NR_timerfd_gettime 693,30715
# define __NR_signalfd4 694,30752
# define __NR_eventfd2 695,30789
# define __NR_epoll_create1 696,30826
# define __NR_dup3 697,30863
# define __NR_pipe2 698,30900
# define __NR_inotify_init1 699,30937
# define __NR_preadv 700,30974
# define __NR_pwritev 701,31011
# define __NR_rt_tgsigqueueinfo 702,31048
# define __NR_perf_event_open 703,31085
# define __NR_recvmmsg 704,31122
# define __NR_fanotify_init 705,31159
# define __NR_fanotify_mark 706,31196
# define __NR_prlimit64 707,31233
# define __NR_name_to_handle_at 708,31270
# define __NR_open_by_handle_at 709,31307
# define __NR_clock_adjtime 710,31344
# define __NR_syncfs 711,31381
# define __NR_sendmmsg 712,31418
# define __NR_setns 713,31455
# define __NR_process_vm_readv 714,31492
# define __NR_process_vm_writev 715,31529
# define __NR_kcmp 716,31566
# define __NR_finit_module 717,31603
# define SYS__sysctl 722,31706
# define SYS_accept 723,31740
# define SYS_accept4 724,31772
# define SYS_access 725,31806
# define SYS_acct 726,31838
# define SYS_add_key 727,31866
# define SYS_adjtimex 728,31900
# define SYS_afs_syscall 729,31936
# define SYS_alarm 730,31978
# define SYS_arch_prctl 731,32008
# define SYS_bind 732,32048
# define SYS_brk 733,32076
# define SYS_capget 734,32102
# define SYS_capset 735,32134
# define SYS_chdir 736,32166
# define SYS_chmod 737,32196
# define SYS_chown 738,32226
# define SYS_chroot 739,32256
# define SYS_clock_adjtime 740,32288
# define SYS_clock_getres 741,32334
# define SYS_clock_gettime 742,32378
# define SYS_clock_nanosleep 743,32424
# define SYS_clock_settime 744,32474
# define SYS_clone 745,32520
# define SYS_close 746,32550
# define SYS_connect 747,32580
# define SYS_creat 748,32614
# define SYS_create_module 749,32644
# define SYS_delete_module 750,32690
# define SYS_dup 751,32736
# define SYS_dup2 752,32762
# define SYS_dup3 753,32790
# define SYS_epoll_create 754,32818
# define SYS_epoll_create1 755,32862
# define SYS_epoll_ctl 756,32908
# define SYS_epoll_ctl_old 757,32946
# define SYS_epoll_pwait 758,32992
# define SYS_epoll_wait 759,33034
# define SYS_epoll_wait_old 760,33074
# define SYS_eventfd 761,33122
# define SYS_eventfd2 762,33156
# define SYS_execve 763,33192
# define SYS_exit 764,33224
# define SYS_exit_group 765,33252
# define SYS_faccessat 766,33292
# define SYS_fadvise64 767,33330
# define SYS_fallocate 768,33368
# define SYS_fanotify_init 769,33406
# define SYS_fanotify_mark 770,33452
# define SYS_fchdir 771,33498
# define SYS_fchmod 772,33530
# define SYS_fchmodat 773,33562
# define SYS_fchown 774,33598
# define SYS_fchownat 775,33630
# define SYS_fcntl 776,33666
# define SYS_fdatasync 777,33696
# define SYS_fgetxattr 778,33734
# define SYS_flistxattr 779,33772
# define SYS_flock 780,33812
# define SYS_fork 781,33842
# define SYS_fremovexattr 782,33870
# define SYS_fsetxattr 783,33914
# define SYS_fstat 784,33952
# define SYS_fstatfs 785,33982
# define SYS_fsync 786,34016
# define SYS_ftruncate 787,34046
# define SYS_futex 788,34084
# define SYS_futimesat 789,34114
# define SYS_get_kernel_syms 790,34152
# define SYS_get_mempolicy 791,34202
# define SYS_get_robust_list 792,34248
# define SYS_get_thread_area 793,34298
# define SYS_getcpu 794,34348
# define SYS_getcwd 795,34380
# define SYS_getdents 796,34412
# define SYS_getdents64 797,34448
# define SYS_getegid 798,34488
# define SYS_geteuid 799,34522
# define SYS_getgid 800,34556
# define SYS_getgroups 801,34588
# define SYS_getitimer 802,34626
# define SYS_getpeername 803,34664
# define SYS_getpgid 804,34706
# define SYS_getpgrp 805,34740
# define SYS_getpid 806,34774
# define SYS_getpmsg 807,34806
# define SYS_getppid 808,34840
# define SYS_getpriority 809,34874
# define SYS_getresgid 810,34916
# define SYS_getresuid 811,34954
# define SYS_getrlimit 812,34992
# define SYS_getrusage 813,35030
# define SYS_getsid 814,35068
# define SYS_getsockname 815,35100
# define SYS_getsockopt 816,35142
# define SYS_gettid 817,35182
# define SYS_gettimeofday 818,35214
# define SYS_getuid 819,35258
# define SYS_getxattr 820,35290
# define SYS_init_module 821,35326
# define SYS_inotify_add_watch 822,35368
# define SYS_inotify_init 823,35422
# define SYS_inotify_init1 824,35466
# define SYS_inotify_rm_watch 825,35512
# define SYS_io_cancel 826,35564
# define SYS_io_destroy 827,35602
# define SYS_io_getevents 828,35642
# define SYS_io_setup 829,35686
# define SYS_io_submit 830,35722
# define SYS_ioctl 831,35760
# define SYS_ioperm 832,35790
# define SYS_iopl 833,35822
# define SYS_ioprio_get 834,35850
# define SYS_ioprio_set 835,35890
# define SYS_kcmp 836,35930
# define SYS_kexec_load 837,35958
# define SYS_keyctl 838,35998
# define SYS_kill 839,36030
# define SYS_lchown 840,36058
# define SYS_lgetxattr 841,36090
# define SYS_link 842,36128
# define SYS_linkat 843,36156
# define SYS_listen 844,36188
# define SYS_listxattr 845,36220
# define SYS_llistxattr 846,36258
# define SYS_lookup_dcookie 847,36298
# define SYS_lremovexattr 848,36346
# define SYS_lseek 849,36390
# define SYS_lsetxattr 850,36420
# define SYS_lstat 851,36458
# define SYS_madvise 852,36488
# define SYS_mbind 853,36522
# define SYS_migrate_pages 854,36552
# define SYS_mincore 855,36598
# define SYS_mkdir 856,36632
# define SYS_mkdirat 857,36662
# define SYS_mknod 858,36696
# define SYS_mknodat 859,36726
# define SYS_mlock 860,36760
# define SYS_mlockall 861,36790
# define SYS_mmap 862,36826
# define SYS_modify_ldt 863,36854
# define SYS_mount 864,36894
# define SYS_move_pages 865,36924
# define SYS_mprotect 866,36964
# define SYS_mq_getsetattr 867,37000
# define SYS_mq_notify 868,37046
# define SYS_mq_open 869,37084
# define SYS_mq_timedreceive 870,37118
# define SYS_mq_timedsend 871,37168
# define SYS_mq_unlink 872,37212
# define SYS_mremap 873,37250
# define SYS_msgctl 874,37282
# define SYS_msgget 875,37314
# define SYS_msgrcv 876,37346
# define SYS_msgsnd 877,37378
# define SYS_msync 878,37410
# define SYS_munlock 879,37440
# define SYS_munlockall 880,37474
# define SYS_munmap 881,37514
# define SYS_name_to_handle_at 882,37546
# define SYS_nanosleep 883,37600
# define SYS_newfstatat 884,37638
# define SYS_nfsservctl 885,37678
# define SYS_open 886,37718
# define SYS_open_by_handle_at 887,37746
# define SYS_openat 888,37800
# define SYS_pause 889,37832
# define SYS_perf_event_open 890,37862
# define SYS_personality 891,37912
# define SYS_pipe 892,37954
# define SYS_pipe2 893,37982
# define SYS_pivot_root 894,38012
# define SYS_poll 895,38052
# define SYS_ppoll 896,38080
# define SYS_prctl 897,38110
# define SYS_pread64 898,38140
# define SYS_preadv 899,38174
# define SYS_prlimit64 900,38206
# define SYS_process_vm_readv 901,38244
# define SYS_process_vm_writev 902,38296
# define SYS_pselect6 903,38350
# define SYS_ptrace 904,38386
# define SYS_putpmsg 905,38418
# define SYS_pwrite64 906,38452
# define SYS_pwritev 907,38488
# define SYS_query_module 908,38522
# define SYS_quotactl 909,38566
# define SYS_read 910,38602
# define SYS_readahead 911,38630
# define SYS_readlink 912,38668
# define SYS_readlinkat 913,38704
# define SYS_readv 914,38744
# define SYS_reboot 915,38774
# define SYS_recvfrom 916,38806
# define SYS_recvmmsg 917,38842
# define SYS_recvmsg 918,38878
# define SYS_remap_file_pages 919,38912
# define SYS_removexattr 920,38964
# define SYS_rename 921,39006
# define SYS_renameat 922,39038
# define SYS_request_key 923,39074
# define SYS_restart_syscall 924,39116
# define SYS_rmdir 925,39166
# define SYS_rt_sigaction 926,39196
# define SYS_rt_sigpending 927,39240
# define SYS_rt_sigprocmask 928,39286
# define SYS_rt_sigqueueinfo 929,39334
# define SYS_rt_sigreturn 930,39384
# define SYS_rt_sigsuspend 931,39428
# define SYS_rt_sigtimedwait 932,39474
# define SYS_rt_tgsigqueueinfo 933,39524
# define SYS_sched_get_priority_max 934,39578
# define SYS_sched_get_priority_min 935,39642
# define SYS_sched_getaffinity 936,39706
# define SYS_sched_getparam 937,39760
# define SYS_sched_getscheduler 938,39808
# define SYS_sched_rr_get_interval 939,39864
# define SYS_sched_setaffinity 940,39926
# define SYS_sched_setparam 941,39980
# define SYS_sched_setscheduler 942,40028
# define SYS_sched_yield 943,40084
# define SYS_security 944,40126
# define SYS_select 945,40162
# define SYS_semctl 946,40194
# define SYS_semget 947,40226
# define SYS_semop 948,40258
# define SYS_semtimedop 949,40288
# define SYS_sendfile 950,40328
# define SYS_sendmmsg 951,40364
# define SYS_sendmsg 952,40400
# define SYS_sendto 953,40434
# define SYS_set_mempolicy 954,40466
# define SYS_set_robust_list 955,40512
# define SYS_set_thread_area 956,40562
# define SYS_set_tid_address 957,40612
# define SYS_setdomainname 958,40662
# define SYS_setfsgid 959,40708
# define SYS_setfsuid 960,40744
# define SYS_setgid 961,40780
# define SYS_setgroups 962,40812
# define SYS_sethostname 963,40850
# define SYS_setitimer 964,40892
# define SYS_setns 965,40930
# define SYS_setpgid 966,40960
# define SYS_setpriority 967,40994
# define SYS_setregid 968,41036
# define SYS_setresgid 969,41072
# define SYS_setresuid 970,41110
# define SYS_setreuid 971,41148
# define SYS_setrlimit 972,41184
# define SYS_setsid 973,41222
# define SYS_setsockopt 974,41254
# define SYS_settimeofday 975,41294
# define SYS_setuid 976,41338
# define SYS_setxattr 977,41370
# define SYS_shmat 978,41406
# define SYS_shmctl 979,41436
# define SYS_shmdt 980,41468
# define SYS_shmget 981,41498
# define SYS_shutdown 982,41530
# define SYS_sigaltstack 983,41566
# define SYS_signalfd 984,41608
# define SYS_signalfd4 985,41644
# define SYS_socket 986,41682
# define SYS_socketpair 987,41714
# define SYS_splice 988,41754
# define SYS_stat 989,41786
# define SYS_statfs 990,41814
# define SYS_swapoff 991,41846
# define SYS_swapon 992,41880
# define SYS_symlink 993,41912
# define SYS_symlinkat 994,41946
# define SYS_sync 995,41984
# define SYS_sync_file_range 996,42012
# define SYS_syncfs 997,42062
# define SYS_sysfs 998,42094
# define SYS_sysinfo 999,42124
# define SYS_syslog 1000,42158
# define SYS_tee 1001,42190
# define SYS_tgkill 1002,42216
# define SYS_time 1003,42248
# define SYS_timer_create 1004,42276
# define SYS_timer_delete 1005,42320
# define SYS_timer_getoverrun 1006,42364
# define SYS_timer_gettime 1007,42416
# define SYS_timer_settime 1008,42462
# define SYS_timerfd_create 1009,42508
# define SYS_timerfd_gettime 1010,42556
# define SYS_timerfd_settime 1011,42606
# define SYS_times 1012,42656
# define SYS_tkill 1013,42686
# define SYS_truncate 1014,42716
# define SYS_tuxcall 1015,42752
# define SYS_umask 1016,42786
# define SYS_umount2 1017,42816
# define SYS_uname 1018,42850
# define SYS_unlink 1019,42880
# define SYS_unlinkat 1020,42912
# define SYS_unshare 1021,42948
# define SYS_uselib 1022,42982
# define SYS_ustat 1023,43014
# define SYS_utime 1024,43044
# define SYS_utimensat 1025,43074
# define SYS_utimes 1026,43112
# define SYS_vfork 1027,43144
# define SYS_vhangup 1028,43174
# define SYS_vmsplice 1029,43208
# define SYS_vserver 1030,43244
# define SYS_wait4 1031,43278
# define SYS_waitid 1032,43308
# define SYS_write 1033,43340
# define SYS_writev 1034,43370
# define SYS__llseek 1037,43409
# define SYS__newselect 1038,43443
# define SYS__sysctl 1039,43483
# define SYS_access 1040,43517
# define SYS_acct 1041,43549
# define SYS_add_key 1042,43577
# define SYS_adjtimex 1043,43611
# define SYS_afs_syscall 1044,43647
# define SYS_alarm 1045,43689
# define SYS_bdflush 1046,43719
# define SYS_break 1047,43753
# define SYS_brk 1048,43783
# define SYS_capget 1049,43809
# define SYS_capset 1050,43841
# define SYS_chdir 1051,43873
# define SYS_chmod 1052,43903
# define SYS_chown 1053,43933
# define SYS_chown32 1054,43963
# define SYS_chroot 1055,43997
# define SYS_clock_adjtime 1056,44029
# define SYS_clock_getres 1057,44075
# define SYS_clock_gettime 1058,44119
# define SYS_clock_nanosleep 1059,44165
# define SYS_clock_settime 1060,44215
# define SYS_clone 1061,44261
# define SYS_close 1062,44291
# define SYS_creat 1063,44321
# define SYS_create_module 1064,44351
# define SYS_delete_module 1065,44397
# define SYS_dup 1066,44443
# define SYS_dup2 1067,44469
# define SYS_dup3 1068,44497
# define SYS_epoll_create 1069,44525
# define SYS_epoll_create1 1070,44569
# define SYS_epoll_ctl 1071,44615
# define SYS_epoll_pwait 1072,44653
# define SYS_epoll_wait 1073,44695
# define SYS_eventfd 1074,44735
# define SYS_eventfd2 1075,44769
# define SYS_execve 1076,44805
# define SYS_exit 1077,44837
# define SYS_exit_group 1078,44865
# define SYS_faccessat 1079,44905
# define SYS_fadvise64 1080,44943
# define SYS_fadvise64_64 1081,44981
# define SYS_fallocate 1082,45025
# define SYS_fanotify_init 1083,45063
# define SYS_fanotify_mark 1084,45109
# define SYS_fchdir 1085,45155
# define SYS_fchmod 1086,45187
# define SYS_fchmodat 1087,45219
# define SYS_fchown 1088,45255
# define SYS_fchown32 1089,45287
# define SYS_fchownat 1090,45323
# define SYS_fcntl 1091,45359
# define SYS_fcntl64 1092,45389
# define SYS_fdatasync 1093,45423
# define SYS_fgetxattr 1094,45461
# define SYS_flistxattr 1095,45499
# define SYS_flock 1096,45539
# define SYS_fork 1097,45569
# define SYS_fremovexattr 1098,45597
# define SYS_fsetxattr 1099,45641
# define SYS_fstat 1100,45679
# define SYS_fstat64 1101,45709
# define SYS_fstatat64 1102,45743
# define SYS_fstatfs 1103,45781
# define SYS_fstatfs64 1104,45815
# define SYS_fsync 1105,45853
# define SYS_ftime 1106,45883
# define SYS_ftruncate 1107,45913
# define SYS_ftruncate64 1108,45951
# define SYS_futex 1109,45993
# define SYS_futimesat 1110,46023
# define SYS_get_kernel_syms 1111,46061
# define SYS_get_mempolicy 1112,46111
# define SYS_get_robust_list 1113,46157
# define SYS_get_thread_area 1114,46207
# define SYS_getcpu 1115,46257
# define SYS_getcwd 1116,46289
# define SYS_getdents 1117,46321
# define SYS_getdents64 1118,46357
# define SYS_getegid 1119,46397
# define SYS_getegid32 1120,46431
# define SYS_geteuid 1121,46469
# define SYS_geteuid32 1122,46503
# define SYS_getgid 1123,46541
# define SYS_getgid32 1124,46573
# define SYS_getgroups 1125,46609
# define SYS_getgroups32 1126,46647
# define SYS_getitimer 1127,46689
# define SYS_getpgid 1128,46727
# define SYS_getpgrp 1129,46761
# define SYS_getpid 1130,46795
# define SYS_getpmsg 1131,46827
# define SYS_getppid 1132,46861
# define SYS_getpriority 1133,46895
# define SYS_getresgid 1134,46937
# define SYS_getresgid32 1135,46975
# define SYS_getresuid 1136,47017
# define SYS_getresuid32 1137,47055
# define SYS_getrlimit 1138,47097
# define SYS_getrusage 1139,47135
# define SYS_getsid 1140,47173
# define SYS_gettid 1141,47205
# define SYS_gettimeofday 1142,47237
# define SYS_getuid 1143,47281
# define SYS_getuid32 1144,47313
# define SYS_getxattr 1145,47349
# define SYS_gtty 1146,47385
# define SYS_idle 1147,47413
# define SYS_init_module 1148,47441
# define SYS_inotify_add_watch 1149,47483
# define SYS_inotify_init 1150,47537
# define SYS_inotify_init1 1151,47581
# define SYS_inotify_rm_watch 1152,47627
# define SYS_io_cancel 1153,47679
# define SYS_io_destroy 1154,47717
# define SYS_io_getevents 1155,47757
# define SYS_io_setup 1156,47801
# define SYS_io_submit 1157,47837
# define SYS_ioctl 1158,47875
# define SYS_ioperm 1159,47905
# define SYS_iopl 1160,47937
# define SYS_ioprio_get 1161,47965
# define SYS_ioprio_set 1162,48005
# define SYS_ipc 1163,48045
# define SYS_kcmp 1164,48071
# define SYS_kexec_load 1165,48099
# define SYS_keyctl 1166,48139
# define SYS_kill 1167,48171
# define SYS_lchown 1168,48199
# define SYS_lchown32 1169,48231
# define SYS_lgetxattr 1170,48267
# define SYS_link 1171,48305
# define SYS_linkat 1172,48333
# define SYS_listxattr 1173,48365
# define SYS_llistxattr 1174,48403
# define SYS_lock 1175,48443
# define SYS_lookup_dcookie 1176,48471
# define SYS_lremovexattr 1177,48519
# define SYS_lseek 1178,48563
# define SYS_lsetxattr 1179,48593
# define SYS_lstat 1180,48631
# define SYS_lstat64 1181,48661
# define SYS_madvise 1182,48695
# define SYS_mbind 1183,48729
# define SYS_migrate_pages 1184,48759
# define SYS_mincore 1185,48805
# define SYS_mkdir 1186,48839
# define SYS_mkdirat 1187,48869
# define SYS_mknod 1188,48903
# define SYS_mknodat 1189,48933
# define SYS_mlock 1190,48967
# define SYS_mlockall 1191,48997
# define SYS_mmap 1192,49033
# define SYS_mmap2 1193,49061
# define SYS_modify_ldt 1194,49091
# define SYS_mount 1195,49131
# define SYS_move_pages 1196,49161
# define SYS_mprotect 1197,49201
# define SYS_mpx 1198,49237
# define SYS_mq_getsetattr 1199,49263
# define SYS_mq_notify 1200,49309
# define SYS_mq_open 1201,49347
# define SYS_mq_timedreceive 1202,49381
# define SYS_mq_timedsend 1203,49431
# define SYS_mq_unlink 1204,49475
# define SYS_mremap 1205,49513
# define SYS_msync 1206,49545
# define SYS_munlock 1207,49575
# define SYS_munlockall 1208,49609
# define SYS_munmap 1209,49649
# define SYS_name_to_handle_at 1210,49681
# define SYS_nanosleep 1211,49735
# define SYS_nfsservctl 1212,49773
# define SYS_nice 1213,49813
# define SYS_oldfstat 1214,49841
# define SYS_oldlstat 1215,49877
# define SYS_oldolduname 1216,49913
# define SYS_oldstat 1217,49955
# define SYS_olduname 1218,49989
# define SYS_open 1219,50025
# define SYS_open_by_handle_at 1220,50053
# define SYS_openat 1221,50107
# define SYS_pause 1222,50139
# define SYS_perf_event_open 1223,50169
# define SYS_personality 1224,50219
# define SYS_pipe 1225,50261
# define SYS_pipe2 1226,50289
# define SYS_pivot_root 1227,50319
# define SYS_poll 1228,50359
# define SYS_ppoll 1229,50387
# define SYS_prctl 1230,50417
# define SYS_pread64 1231,50447
# define SYS_preadv 1232,50481
# define SYS_prlimit64 1233,50513
# define SYS_process_vm_readv 1234,50551
# define SYS_process_vm_writev 1235,50603
# define SYS_prof 1236,50657
# define SYS_profil 1237,50685
# define SYS_pselect6 1238,50717
# define SYS_ptrace 1239,50753
# define SYS_putpmsg 1240,50785
# define SYS_pwrite64 1241,50819
# define SYS_pwritev 1242,50855
# define SYS_query_module 1243,50889
# define SYS_quotactl 1244,50933
# define SYS_read 1245,50969
# define SYS_readahead 1246,50997
# define SYS_readdir 1247,51035
# define SYS_readlink 1248,51069
# define SYS_readlinkat 1249,51105
# define SYS_readv 1250,51145
# define SYS_reboot 1251,51175
# define SYS_recvmmsg 1252,51207
# define SYS_remap_file_pages 1253,51243
# define SYS_removexattr 1254,51295
# define SYS_rename 1255,51337
# define SYS_renameat 1256,51369
# define SYS_request_key 1257,51405
# define SYS_restart_syscall 1258,51447
# define SYS_rmdir 1259,51497
# define SYS_rt_sigaction 1260,51527
# define SYS_rt_sigpending 1261,51571
# define SYS_rt_sigprocmask 1262,51617
# define SYS_rt_sigqueueinfo 1263,51665
# define SYS_rt_sigreturn 1264,51715
# define SYS_rt_sigsuspend 1265,51759
# define SYS_rt_sigtimedwait 1266,51805
# define SYS_rt_tgsigqueueinfo 1267,51855
# define SYS_sched_get_priority_max 1268,51909
# define SYS_sched_get_priority_min 1269,51973
# define SYS_sched_getaffinity 1270,52037
# define SYS_sched_getparam 1271,52091
# define SYS_sched_getscheduler 1272,52139
# define SYS_sched_rr_get_interval 1273,52195
# define SYS_sched_setaffinity 1274,52257
# define SYS_sched_setparam 1275,52311
# define SYS_sched_setscheduler 1276,52359
# define SYS_sched_yield 1277,52415
# define SYS_select 1278,52457
# define SYS_sendfile 1279,52489
# define SYS_sendfile64 1280,52525
# define SYS_sendmmsg 1281,52565
# define SYS_set_mempolicy 1282,52601
# define SYS_set_robust_list 1283,52647
# define SYS_set_thread_area 1284,52697
# define SYS_set_tid_address 1285,52747
# define SYS_setdomainname 1286,52797
# define SYS_setfsgid 1287,52843
# define SYS_setfsgid32 1288,52879
# define SYS_setfsuid 1289,52919
# define SYS_setfsuid32 1290,52955
# define SYS_setgid 1291,52995
# define SYS_setgid32 1292,53027
# define SYS_setgroups 1293,53063
# define SYS_setgroups32 1294,53101
# define SYS_sethostname 1295,53143
# define SYS_setitimer 1296,53185
# define SYS_setns 1297,53223
# define SYS_setpgid 1298,53253
# define SYS_setpriority 1299,53287
# define SYS_setregid 1300,53329
# define SYS_setregid32 1301,53365
# define SYS_setresgid 1302,53405
# define SYS_setresgid32 1303,53443
# define SYS_setresuid 1304,53485
# define SYS_setresuid32 1305,53523
# define SYS_setreuid 1306,53565
# define SYS_setreuid32 1307,53601
# define SYS_setrlimit 1308,53641
# define SYS_setsid 1309,53679
# define SYS_settimeofday 1310,53711
# define SYS_setuid 1311,53755
# define SYS_setuid32 1312,53787
# define SYS_setxattr 1313,53823
# define SYS_sgetmask 1314,53859
# define SYS_sigaction 1315,53895
# define SYS_sigaltstack 1316,53933
# define SYS_signal 1317,53975
# define SYS_signalfd 1318,54007
# define SYS_signalfd4 1319,54043
# define SYS_sigpending 1320,54081
# define SYS_sigprocmask 1321,54121
# define SYS_sigreturn 1322,54163
# define SYS_sigsuspend 1323,54201
# define SYS_socketcall 1324,54241
# define SYS_splice 1325,54281
# define SYS_ssetmask 1326,54313
# define SYS_stat 1327,54349
# define SYS_stat64 1328,54377
# define SYS_statfs 1329,54409
# define SYS_statfs64 1330,54441
# define SYS_stime 1331,54477
# define SYS_stty 1332,54507
# define SYS_swapoff 1333,54535
# define SYS_swapon 1334,54569
# define SYS_symlink 1335,54601
# define SYS_symlinkat 1336,54635
# define SYS_sync 1337,54673
# define SYS_sync_file_range 1338,54701
# define SYS_syncfs 1339,54751
# define SYS_sysfs 1340,54783
# define SYS_sysinfo 1341,54813
# define SYS_syslog 1342,54847
# define SYS_tee 1343,54879
# define SYS_tgkill 1344,54905
# define SYS_time 1345,54937
# define SYS_timer_create 1346,54965
# define SYS_timer_delete 1347,55009
# define SYS_timer_getoverrun 1348,55053
# define SYS_timer_gettime 1349,55105
# define SYS_timer_settime 1350,55151
# define SYS_timerfd_create 1351,55197
# define SYS_timerfd_gettime 1352,55245
# define SYS_timerfd_settime 1353,55295
# define SYS_times 1354,55345
# define SYS_tkill 1355,55375
# define SYS_truncate 1356,55405
# define SYS_truncate64 1357,55441
# define SYS_ugetrlimit 1358,55481
# define SYS_ulimit 1359,55521
# define SYS_umask 1360,55553
# define SYS_umount 1361,55583
# define SYS_umount2 1362,55615
# define SYS_uname 1363,55649
# define SYS_unlink 1364,55679
# define SYS_unlinkat 1365,55711
# define SYS_unshare 1366,55747
# define SYS_uselib 1367,55781
# define SYS_ustat 1368,55813
# define SYS_utime 1369,55843
# define SYS_utimensat 1370,55873
# define SYS_utimes 1371,55911
# define SYS_vfork 1372,55943
# define SYS_vhangup 1373,55973
# define SYS_vm86 1374,56007
# define SYS_vm86old 1375,56035
# define SYS_vmsplice 1376,56069
# define SYS_vserver 1377,56105
# define SYS_wait4 1378,56139
# define SYS_waitid 1379,56169
# define SYS_waitpid 1380,56201
# define SYS_write 1381,56235
# define SYS_writev 1382,56265

unix/injector.c,2734
static bool verbose 67,2475
static volatile int timeout_expired;71,2539
typedef enum _inject_method_t 73,2577
    INJECT_EARLY,74,2609
    INJECT_LD_PRELOAD,75,2665
    INJECT_PTRACE 76,2721
} inject_method_t;77,2780
typedef struct _dr_inject_info_t 80,2844
    process_id_t pid;81,2879
    const char *exe;exe82,2901
    const char *image_name;image_name83,2963
    const char **argv;argv84,3017
    int pipe_fd;85,3074
    bool exec_self;87,3092
    inject_method_t method;88,3161
    bool killpg;90,3190
    bool exited;91,3207
    int exitcode;92,3224
} dr_inject_info_t;93,3242
get_application_short_name(107,3613
safe_read(115,3734
internal_error(126,4074
ignore_assert(134,4248
report_dynamorio_problem(140,4333
pre_execve_ld_preload(162,4932
pre_execve_early(211,7114
fork_suspended_child(217,7233
write_pipe_cmd(267,9007
inject_early(283,9392
inject_ld_preload(303,10058
create_inject_info(320,10620
get_elf_platform_path(334,11007
exe_is_right_bitwidth(346,11284
dr_inject_process_create(371,12059
dr_inject_prepare_to_exec(407,13046
dr_inject_prepare_to_ptrace(429,13648
dr_inject_prepare_new_process_group(442,13906
dr_inject_get_process_id(460,14314
dr_inject_get_image_name(468,14451
option_present(478,14739
dr_inject_process_inject(489,15019
alarm_handler(545,16855
dr_inject_process_run(552,16926
dr_inject_wait_for_child(574,17580
dr_inject_process_exit(609,18625
enum { MAX_SHELL_CODE 653,20210
# define REG_PC_FIELD 656,20254
# define REG_SP_FIELD 657,20298
# define REG_RETVAL_FIELD 658,20342
enum { REG_PC_OFFSET 663,20467
enum { REG_PC_OFFSET = offsetof(663,20467
enum { REG_PC_OFFSET = offsetof(struct user_regs_struct,663,20467
enum { REG_PC_OFFSET = offsetof(struct user_regs_struct, REG_PC_FIELD)663,20467
#define APP 665,20542
static bool op_exec_gdb 667,20573
static dr_inject_info_t *injector_info;injector_info670,20665
static file_t injector_dr_fd;671,20705
static file_t injectee_dr_fd;672,20735
typedef struct _enum_name_pair_t 674,20766
    const int enum_val;675,20801
    const char * const enum_name;676,20825
} enum_name_pair_t;677,20859
static const enum_name_pair_t pt_req_map[pt_req_map682,20970
our_ptrace(715,22395
#define ptrace 736,23136
ptrace_read_memory(741,23251
ptrace_write_memory(761,23881
gen_push_string(784,24611
gen_syscall(796,25053
gen_print(824,26010
unexpected_trace_event(836,26366
wait_until_signal(848,26752
continue_until_break(866,27208
injectee_run_get_retval(879,27640
injectee_open(951,30082
injectee_mmap(967,30661
injectee_map_file(991,31734
injectee_unmap(1023,32728
injectee_prot(1045,33399
user_regs_to_mc(1070,34215
detach_and_exec_gdb(1113,35304
inject_ptrace(1151,36735

unix/loader.c,3234
#define SYSTEM_LIBRARY_PATH_VAR 60,2634
char *ld_library_path ld_library_path61,2684
static const char *system_lib_paths[system_lib_paths62,2714
#define NUM_SYSTEM_LIB_PATHS 83,3292
#define RPATH_ORIGIN 86,3383
static os_privmod_data_t *libdr_opd;libdr_opd88,3415
static bool privmod_initialized 89,3452
static size_t max_client_tls_size 90,3493
static bool printed_gdb_commands 93,3596
static char gdb_priv_cmds[gdb_priv_cmds95,3683
static size_t gdb_priv_cmds_sofar;96,3716
struct _IO_FILE  **privmod_stdout;privmod_stdout102,3881
struct _IO_FILE  **privmod_stderr;privmod_stderr103,3916
struct _IO_FILE  **privmod_stdin;privmod_stdin104,3951
#define LIBC_STDOUT_NAME 105,3985
#define LIBC_STDERR_NAME 106,4019
#define LIBC_STDIN_NAME 107,4053
os_loader_init_prologue(142,4878
os_loader_init_epilogue(167,5653
privload_add_gdb_cmd(189,6571
os_loader_exit(199,6885
os_loader_thread_init_prologue(213,7314
os_loader_thread_init_epilogue(245,8656
os_loader_thread_exit(251,8740
privload_add_areas(257,8815
privload_remove_areas(281,9674
privload_unmap_file(304,10549
privload_unload_imports(326,11295
dr_gdb_add_symbol_file(338,11690
privload_map_and_relocate(350,12139
privload_process_imports(421,14775
privload_call_entry(458,16051
privload_redirect_setup(510,17929
privload_os_finalize(516,18045
privload_init_search_paths(522,18123
privload_locate_and_load(529,18266
privload_load_private_library(538,18541
privload_load_finalized(555,18981
privload_search_rpath(561,19070
privload_locate(622,21680
get_private_library_address(711,24828
privload_call_modules_entry(760,26696
privload_call_lib_func(790,27769
get_private_library_bounds(806,28227
privload_relocate_mod(824,28680
privload_create_os_privmod_data(874,30911
privload_delete_os_privmod_data(893,31595
#define MAX_NUM_TLS_MOD 943,33957
typedef struct _tls_info_t 944,33984
    uint num_mods;945,34013
    int  offset;946,34032
    int  max_align;947,34049
    int  offs[offs948,34069
    privmod_t *mods[mods949,34101
} tls_info_t;950,34139
static tls_info_t tls_info;951,34153
static size_t tcb_size 977,35724
typedef struct _tcb_head_t 982,35881
    void *tcb;tcb983,35910
    void *dtv;dtv984,35925
    void *self;self985,35940
    int multithread;986,35956
    int gscope_flag;988,35988
    ptr_uint_t sysinfo;990,36016
    ptr_uint_t stack_guard;993,36085
    ptr_uint_t pointer_guard;994,36113
} tcb_head_t;995,36143
#define APP_LIBC_TLS_SIZE 1003,36546
privload_mod_tls_init(1007,36651
privload_tls_init(1050,38355
privload_tls_exit(1113,40967
typedef struct _tls_index_t 1126,41437
  unsigned long int ti_module;1127,41467
  unsigned long int ti_offset;1128,41498
} tls_index_t;1129,41529
redirect___tls_get_addr(1132,41559
redirect____tls_get_addr(1142,41892
typedef struct _redirect_import_t 1156,42385
    const char *name;name1157,42421
    app_pc func;1158,42443
} redirect_import_t;1159,42460
static const redirect_import_t redirect_imports[redirect_imports1161,42482
#define REDIRECT_IMPORTS_NUM 1173,43008
privload_redirect_sym(1176,43098
privload_setup_auxv(1198,43815
takeover_ptrace(1246,45498
reserve_brk(1293,47728
privload_early_inject(1307,48184

unix/module.c,3303
typedef union _elf_generic_header_t 44,2100
    Elf64_Ehdr elf64;45,2138
    Elf32_Ehdr elf32;46,2160
} elf_generic_header_t;47,2182
# undef LOG50,2240
# define LOG(51,2252
typedef struct _elf_import_iterator_t 55,2348
    dr_symbol_import_t symbol_import;56,2388
    ELF_SYM_TYPE *dynsym;dynsym61,2605
    size_t symentry_size;62,2676
    const char *dynstr;dynstr63,2746
    size_t dynstr_size;64,2817
    ELF_SYM_TYPE *cur_sym;cur_sym66,2880
    ELF_SYM_TYPE safe_cur_sym;67,2960
    ELF_SYM_TYPE *import_end;import_end68,3034
    bool error_occurred;69,3106
} elf_import_iterator_t;70,3175
# define DT_GNU_HASH 75,3330
# define STT_GNU_IFUNC 79,3392
is_elf_so_header_common(108,4700
is_elf_so_header(172,7103
os_modules_init(178,7210
os_modules_exit(184,7260
elf_dt_abs_addr(193,7421
module_segment_prot_to_osprot(233,9203
module_add_segment_data(249,9670
module_fill_os_data(305,12144
module_walk_program_headers(415,17128
module_num_program_headers(481,20179
module_vaddr_from_prog_header(495,20578
module_read_program_header(525,21696
module_hashtab_init(559,23134
os_module_area_init(590,24451
free_module_names(693,28806
print_modules(704,29118
os_module_area_reset(735,30237
elf_hash(765,31527
elf_gnu_hash(780,31787
elf_sym_matches(789,31971
gnu_hash_lookup(811,32790
elf_hash_lookup(856,34285
get_proc_address_from_os_data(894,35454
get_proc_address_ex(928,36911
get_proc_address(967,38485
get_named_section_bounds(974,38664
rct_is_exported_function(987,38989
get_module_short_name(996,39179
get_module_company_name(1004,39377
get_module_base(1011,39519
is_range_in_code_section(1025,39844
is_in_code_section(1034,40148
is_in_dot_data_section(1043,40421
is_in_any_section(1052,40702
is_mapped_as_image(1060,40890
os_get_module_info(1083,41830
os_get_module_info_all_names(1134,43502
os_module_get_rct_htable(1147,43940
module_get_nth_segment(1158,44270
module_get_header_size(1187,45247
get_elf_platform(1201,45656
file_is_elf64(1220,46263
module_has_text_relocs(1237,46793
module_has_text_relocs_ex(1282,48362
module_get_section_with_name(1294,48686
module_read_os_data(1322,49775
get_shared_lib_name(1351,50828
module_get_os_privmod_data(1365,51188
module_find_phdr(1501,56077
module_get_relro(1516,56467
module_lookup_symbol(1534,57056
module_undef_symbols(1596,59168
dr_module_import_iterator_start(1606,59407
dr_module_import_iterator_hasnext(1614,59601
dr_module_import_iterator_next(1620,59714
dr_module_import_iterator_stop(1626,59807
dynsym_next(1631,59890
dynsym_next_import(1638,60071
dr_symbol_import_iterator_start(1663,60933
dr_symbol_import_iterator_hasnext(1730,63562
dr_symbol_import_iterator_next(1738,63829
dr_symbol_import_iterator_stop(1752,64280
module_relocate_symbol(1762,64568
module_relocate_rel(1899,68984
module_relocate_rela(1911,69265
module_get_text_section(1928,69745
redirect_malloc(1958,70867
redirect_realloc(1977,71431
redirect_calloc(1996,71954
redirect_free(2011,72303
os_read_until(2025,72650
elf_loader_init(2039,72931
elf_loader_destroy(2048,73145
elf_loader_read_ehdr(2060,73401
elf_loader_map_file(2079,73996
elf_loader_read_phdrs(2100,74781
elf_loader_read_headers(2125,75724
elf_loader_map_phdrs(2137,76012
elf_loader_find_pt_interp(2255,81423

unix/module.h,5107
#define MODULE_H35,1769
# define ELF_HEADER_TYPE 42,1991
# define ELF_PROGRAM_HEADER_TYPE 43,2027
# define ELF_SECTION_HEADER_TYPE 44,2071
# define ELF_DYNAMIC_ENTRY_TYPE 45,2115
# define ELF_ADDR 46,2157
# define ELF_WORD 47,2186
# define ELF_HALF 48,2216
# define ELF_SYM_TYPE 49,2245
# define ELF_ST_TYPE 50,2277
# define ELF_WORD_SIZE 51,2312
# define ELF_ST_BIND 52,2363
# define ELF_ST_VISIBILITY 53,2398
# define ELF_REL_TYPE 54,2445
# define ELF_RELA_TYPE 55,2477
# define ELF_AUXV_TYPE 56,2511
# define ELF_HEADER_TYPE 58,2553
# define ELF_PROGRAM_HEADER_TYPE 59,2589
# define ELF_SECTION_HEADER_TYPE 60,2633
# define ELF_DYNAMIC_ENTRY_TYPE 61,2677
# define ELF_ADDR 62,2719
# define ELF_WORD 63,2748
# define ELF_HALF 64,2777
# define ELF_SYM_TYPE 65,2806
# define ELF_ST_TYPE 66,2838
# define ELF_WORD_SIZE 67,2873
# define ELF_ST_BIND 68,2924
# define ELF_ST_VISIBILITY 69,2959
# define ELF_REL_TYPE 70,3006
# define ELF_RELA_TYPE 71,3038
# define ELF_AUXV_TYPE 72,3072
# define ELF_R_TYPE 77,3159
# define ELF_R_SYM 78,3194
# define ELF_R_INFO 79,3228
# define ELF_R_NONE 81,3285
# define ELF_R_DIRECT 82,3346
# define ELF_R_PC32 83,3412
# define ELF_R_COPY 84,3490
# define ELF_R_GLOB_DAT 85,3565
# define ELF_R_JUMP_SLOT 86,3627
# define ELF_R_RELATIVE 87,3689
#  define R_X86_64_IRELATIVE 89,3793
# define ELF_R_IRELATIVE 91,3833
# define ELF_R_TLS_DTPMOD 93,3938
# define ELF_R_TLS_TPOFF 94,4000
# define ELF_R_TLS_DTPOFF 95,4081
#  define R_X86_64_TLSDESC 97,4187
# define ELF_R_TLS_DESC 99,4227
# define ELF_R_TYPE 105,4593
# define ELF_R_SYM 106,4628
# define ELF_R_INFO 107,4662
# define ELF_R_NONE 109,4719
# define ELF_R_DIRECT 110,4775
# define ELF_R_PC32 111,4836
# define ELF_R_COPY 112,4903
# define ELF_R_GLOB_DAT 113,4973
# define ELF_R_JUMP_SLOT 114,5030
# define ELF_R_RELATIVE 115,5087
#  define R_386_IRELATIVE 117,5183
# define ELF_R_IRELATIVE 119,5220
# define ELF_R_TLS_DTPMOD 121,5319
# define ELF_R_TLS_TPOFF 122,5381
# define ELF_R_TLS_DTPOFF 123,5469
#  define R_386_TLS_DESC 125,5565
# define ELF_R_TLS_DESC 127,5603
#define OS_IMAGE_READ 135,6036
#define OS_IMAGE_WRITE 136,6076
#define OS_IMAGE_EXECUTE 137,6117
typedef struct _module_segment_t 142,6315
    app_pc start;144,6420
    app_pc end;145,6438
    uint prot;146,6454
} module_segment_t;147,6469
typedef struct _os_module_data_t 149,6490
    app_pc base_address;157,6976
    size_t alignment;158,7002
    size_t checksum;161,7103
    size_t timestamp;162,7124
    bool   hash_is_gnu;167,7284
    app_pc hashtab;168,7335
    size_t num_buckets;169,7403
    app_pc buckets;170,7460
    size_t num_chain;171,7527
    app_pc chain;172,7583
    app_pc dynsym;173,7649
    app_pc dynstr;174,7706
    size_t dynstr_size;175,7763
    size_t symentry_size;176,7811
    app_pc gnu_bitmask;178,7891
    ptr_uint_t gnu_shift;179,7915
    ptr_uint_t gnu_bitidx;180,7941
    size_t gnu_symbias;181,7968
    bool contiguous;184,8098
    uint num_segments;185,8119
    uint alloc_segments;186,8192
    module_segment_t *segments;segments187,8250
} os_module_data_t;188,8282
typedef void (*fp_t)fp_t190,8303
typedef struct _os_privmod_data_t 194,8458
    os_module_data_t os_data;195,8494
    ELF_DYNAMIC_ENTRY_TYPE *dyn;dyn196,8524
    ptr_int_t      load_delta;197,8557
    char          *soname;soname198,8621
    ELF_ADDR       pltgot;199,8648
    size_t         pltrelsz;200,8675
    ELF_WORD       pltrel;201,8704
    bool           textrel;202,8731
    app_pc         jmprel;203,8759
    ELF_REL_TYPE  *rel;rel204,8786
    size_t         relsz;205,8810
    size_t         relent;206,8836
    ELF_RELA_TYPE *rela;rela207,8863
    size_t         relasz;208,8888
    size_t         relaent;209,8915
    app_pc         verneed;210,8943
    int            verneednum;211,8971
    int            relcount;212,9002
    ELF_HALF      *versym;versym213,9031
    fp_t           init;215,9105
    fp_t           fini;216,9130
    fp_t          *init_array;init_array217,9155
    fp_t          *fini_array;fini_array218,9220
    size_t         init_arraysz;219,9285
    size_t         fini_arraysz;220,9318
    uint           tls_block_size;222,9370
    uint           tls_align;223,9440
    uint           tls_modid;224,9510
    uint           tls_offset;225,9585
    uint           tls_image_size;226,9652
    uint           tls_first_byte;227,9724
    app_pc         tls_image;228,9804
} os_privmod_data_t;229,9873
typedef struct elf_loader_t 307,11864
    const char *filename;filename308,11894
    file_t fd;309,11920
    ELF_HEADER_TYPE *ehdr;ehdr310,11935
    ELF_PROGRAM_HEADER_TYPE *phdrs;phdrs311,11998
    app_pc load_base;312,12073
    ptr_int_t load_delta;313,12130
    size_t image_size;314,12203
    void *file_map;file_map315,12275
    size_t file_size;316,12348
    byte buf[buf324,12783
} elf_loader_t;325,12861
typedef byte *(*map_fn_t)map_fn_t327,12878
typedef bool (*unmap_fn_t)unmap_fn_t329,13033
typedef bool (*prot_fn_t)prot_fn_t330,13085

unix/native_elf.c,923
enum { DL_RUNTIME_RESOLVE_IDX 73,2938
typedef void *(*fixup_fn_t)fixup_fn_t76,3034
app_pc app_dl_runtime_resolve;79,3170
fixup_fn_t app_dl_fixup;80,3201
enum { MAX_STUB_SIZE 82,3227
static byte plt_stub_template[plt_stub_template84,3257
static uint plt_stub_immed_offset;85,3303
static uint plt_stub_jmp_tgt_offset;86,3338
static size_t plt_stub_size;87,3375
static app_pc stub_heap;88,3404
static app_pc reachability_stub;90,3440
module_contains_pc(94,3493
find_dl_fixup(104,3821
initialize_plt_stub_template(137,4853
replace_module_resolver(184,6887
create_plt_stub(243,8975
destroy_plt_stub(266,9695
plt_reloc_entry_size(276,9929
is_special_stub(290,10191
update_plt_relocations(312,10797
module_change_hooks(347,12116
native_module_hook(393,13713
native_module_unhook(400,13875
find_plt_reloc(407,14057
dynamorio_dl_fixup(443,14931
native_module_init(470,15841
native_module_exit(488,16437

unix/nudgesig.c,64
create_nudge_signal_payload(51,2042
send_nudge_signal(77,2729

unix/os_exports.h,1980
#define _OS_EXPORTS_H_ 43,2007
# define _XOPEN_SOURCE 48,2092
# define getpid 53,2244
#define DYNAMORIO_LIBRARY_NAME 56,2304
#define DYNAMORIO_PRELOAD_NAME 57,2353
#define OS_ALLOC_GRANULARITY 60,2450
#define MAP_FILE_VIEW_ALIGNMENT 61,2492
# define SEG_TLS 72,2890
# define ASM_SEG 73,2914
# define LIB_SEG_TLS 74,2937
# define LIB_ASM_SEG 75,2987
# define SEG_TLS 77,3020
# define ASM_SEG 78,3044
# define LIB_SEG_TLS 79,3067
# define LIB_ASM_SEG 80,3117
#define unsetenv 128,4850
# define DECLARE_DATA_SECTION(141,5336
# define DECLARE_DATA_SECTION(145,5454
# define END_DATA_SECTION_DECLARATIONS(157,5989
# define END_DATA_SECTION_DECLARATIONS(162,6119
#define START_DATA_SECTION(169,6306
#define END_DATA_SECTION(170,6357
# define VAR_IN_SECTION(177,6637
# define VAR_IN_SECTION(179,6715
#define VSYSCALL_PAGE_MAPS_NAME 188,7052
#define NUM_NONRT 209,7618
#define OFFS_RT 210,7658
#define NUM_RT 211,7681
#define MAX_SIGNUM 213,7801
#define SIGARRAY_SIZE 216,7926
# define _NSIG_BPW 220,7996
# define _NSIG_BPW 222,8024
#define _NSIG_WORDS 225,8054
typedef struct _kernel_sigset_t 230,8213
    unsigned long sig[sig231,8247
} kernel_sigset_t;232,8283
#  define SIGCXT_TYPE 240,8490
#  define SIGCXT_TYPE 242,8538
# define SIGCXT_TYPE 245,8591
#define CONTEXT_HEAP_SIZE(247,8637
#define CONTEXT_HEAP_SIZE_OPAQUE 248,8680
# define SC_FIELD(253,8884
# define SC_FIELD(255,8928
# define SC_XIP 258,8975
# define SC_XAX 259,9005
# define SC_XCX 260,9035
# define SC_XDX 261,9065
# define SC_XBX 262,9095
# define SC_XSP 263,9125
# define SC_XBP 264,9155
# define SC_XSI 265,9185
# define SC_XDI 266,9215
#  define SC_XFLAGS 268,9259
#  define SC_XFLAGS 270,9303
# define SC_XIP 273,9354
# define SC_XAX 274,9384
# define SC_XCX 275,9414
# define SC_XDX 276,9444
# define SC_XBX 277,9474
# define SC_XSP 278,9504
# define SC_XBP 279,9534
# define SC_XSI 280,9564
# define SC_XDI 281,9594
# define SC_XFLAGS 282,9624

unix/os_private.h,1397
#define _OS_PRIVATE_H_ 40,1890
# define ASM_XAX 50,2164
# define ASM_XDX 51,2187
# define ASM_XBP 52,2210
# define ASM_XSP 53,2233
# define ASM_XAX 55,2262
# define ASM_XDX 56,2285
# define ASM_XBP 57,2308
# define ASM_XSP 58,2331
#define SUSPEND_SIGNAL 62,2416
#define PTHREAD_CLONE_FLAGS 66,2530
enum { MAX_SYSCALL_ARGS 71,2803
typedef struct _os_thread_data_t 74,2893
    app_pc stack_base;78,3098
    app_pc stack_top;79,3121
    app_pc stack_bottom_pc;82,3169
    mutex_t suspend_lock;92,3632
    int suspend_count;93,3658
    thread_record_t **fork_threads;fork_threads96,3740
    int fork_num_threads;97,3776
    volatile int suspended;107,4153
    volatile int wakeup;108,4181
    volatile int resumed;109,4206
    struct sigcontext *suspended_sigcxt;suspended_sigcxt110,4232
    bool terminate;113,4318
    volatile int terminated;119,4583
    volatile bool retakeover;121,4613
    int processing_signal;124,4716
    void *dr_fs_base;dr_fs_base130,4976
    void *dr_gs_base;dr_gs_base131,4998
    void *app_thread_areas;app_thread_areas132,5020
} os_thread_data_t;133,5096
enum { ARGC_PTRACE_SENTINEL 135,5117
typedef struct ptrace_stack_args_t 138,5223
    ptr_int_t argc;139,5260
    priv_mcontext_t mc;140,5327
    char home_dir[home_dir141,5391
} ptrace_stack_args_t;142,5474
typedef struct _kernel_sigaction_t kernel_sigaction_t;173,5964

unix/pcprofile.c,1173
#define USE_SYMTAB 58,2504
static bool valid_symtab;61,2560
typedef struct _pc_profile_entry_t 74,3083
    void *                  pc;75,3120
    app_pc                 tag;76,3170
    int                     id;78,3246
    ushort              offset;80,3315
    where_am_i_t    whereami:whereami81,3395
    bool               trace:trace82,3453
    bool             retired:retired83,3527
    int                counter;84,3598
    struct _pc_profile_entry_t *next;next85,3659
} pc_profile_entry_t;86,3725
#define HASH_BITS 88,3748
typedef struct _thread_pc_info_t 91,3814
    bool thread_shared;92,3849
    pc_profile_entry_t **htable;htable93,3873
    void *special_heap;special_heap94,3958
    file_t file;95,3982
    int where[where96,3999
} thread_pc_info_t;97,4026
#define ALARM_FREQUENCY 99,4047
pcprofile_thread_init(110,4530
pcprofile_thread_exit(155,6376
pcprofile_fork_init(184,7339
pcprof_dump_callstack(198,7816
pcprofile_alarm(230,8898
pcprofile_add_entry(297,11484
pcprofile_lookup(327,12252
pcprofile_fragment_deleted(344,12716
pcprofile_destroy_entry(369,13394
pcprofile_reset(392,14012
pcprofile_results(417,14878

unix/preload.c,272
#define START_DYNAMO 44,2080
#define VERBOSE_INIT_FINI 45,2142
#define VERBOSE 46,2214
#define INIT_BEFORE_LIBC 47,2232
#define pf(62,2505
#define pf(64,2559
#define MAX_COMMAND_LENGTH 82,3183
int nothing 85,3257
take_over(96,3733
_init(152,5381
_fini 211,6782

unix/signal.c,10773
#undef errno44,2007
typedef void (*handler_t)handler_t105,3786
    DEFAULT_TERMINATE,109,3869
    DEFAULT_TERMINATE_CORE,110,3892
    DEFAULT_IGNORE,111,3920
    DEFAULT_STOP,112,3940
    DEFAULT_CONTINUE,113,3958
int default_action[default_action116,3984
bool can_always_delay[can_always_delay192,6914
sig_is_alarm_signal(263,9683
#define SIGSTACK_SIZE 273,10048
#define SA_RESTORER 276,10135
void kernel_sigemptyset(284,10397
void kernel_sigfillset(290,10508
void kernel_sigaddset(296,10619
void kernel_sigdelset(306,10851
bool kernel_sigismember(316,11089
void copy_kernel_sigset_to_sigset(327,11417
void copy_sigset_to_kernel_sigset(346,11876
struct _kernel_sigaction_t 369,12761
    handler_t handler;370,12790
    unsigned long flags;371,12813
    void (*restorer)restorer372,12838
    kernel_sigset_t mask;373,12866
    unsigned long     uc_flags;380,13045
    struct ucontext  *uc_link;uc_link381,13077
    stack_t           uc_stack;382,13108
    struct sigcontext uc_mcontext;383,13140
    kernel_sigset_t   uc_sigmask;384,13175
} kernel_ucontext_t;385,13243
#define RETCODE_SIZE 391,13428
typedef struct sigframe 393,13452
    char *pretcode;pretcode394,13478
    int sig;395,13498
    struct sigcontext sc;396,13511
    struct _fpstate fpstate;400,13676
    unsigned long extramask[extramask401,13705
    char retcode[retcode402,13749
    int sig_noclobber;413,14354
} sigframe_plain_t;415,14424
typedef struct rt_sigframe 418,14495
    char *pretcode;pretcode419,14524
    siginfo_t info;422,14576
    kernel_ucontext_t uc;423,14596
    kernel_ucontext_t uc;425,14629
    siginfo_t info;426,14655
    int sig;429,14689
    siginfo_t *pinfo;pinfo430,14702
    void *puc;puc431,14724
    siginfo_t info;432,14739
    kernel_ucontext_t uc;433,14759
    char retcode[retcode441,15205
} sigframe_rt_t;444,15291
#define IS_RT_FOR_APP(448,15371
#define APP_HAS_SIGSTACK(458,15870
#define AVX_ALIGNMENT 464,16120
#define FPSTATE_ALIGNMENT 465,16145
#define XSTATE_ALIGNMENT 466,16174
typedef struct _sigpending_t 474,16489
    sigframe_rt_t rt_frame;475,16520
    struct _xstate __attribute__ ((aligned (AVX_ALIGNMENT))) xstate;480,16759
    byte *access_address;access_address483,16936
    bool use_sigcontext;486,17054
    struct _sigpending_t *next;next487,17079
} sigpending_t;488,17111
#define AVX_FRAME_EXTRA 496,17447
#define FPSTATE_FRAME_EXTRA 497,17520
#define XSTATE_FRAME_EXTRA 498,17598
#define AVX_DATA_SIZE 500,17682
#define FPSTATE_DATA_SIZE 501,17733
#define XSTATE_DATA_SIZE 502,17785
typedef struct _itimer_info_t 505,17941
    uint64 interval;507,18053
    uint64 value;508,18074
} itimer_info_t;509,18092
typedef struct _thread_itimer_info_t 511,18110
    itimer_info_t app;512,18149
    itimer_info_t app_saved;513,18172
    itimer_info_t dr;514,18201
    itimer_info_t actual;515,18223
    void (*cb)cb516,18249
    void (*cb_api)cb_api518,18328
} thread_itimer_info_t;519,18379
#define NUM_ITIMERS 524,18526
#define SKIP_ALARM_XL8_MAX 527,18623
typedef struct _sigfd_pipe_t sigfd_pipe_t;530,18675
#define EMULATE_SIGMASK(537,18967
typedef struct _thread_sig_info_t 540,19079
    kernel_sigaction_t **app_sigaction;app_sigaction545,19313
    bool fully_initialized;550,19500
    bool shared_app_sigaction;553,19593
    mutex_t *shared_lock;shared_lock554,19624
    int *shared_refcount;shared_refcount555,19650
    bool *we_intercept;we_intercept557,19729
    bool shared_itimer;564,20030
    recursive_lock_t *shared_itimer_lock;shared_itimer_lock568,20208
    int *shared_itimer_refcount;shared_itimer_refcount572,20374
    int *shared_itimer_underDR;shared_itimer_underDR573,20407
    thread_itimer_info_t (*itimer)itimer574,20485
    int restorer_valid[restorer_valid577,20611
    stack_t app_sigstack;580,20679
    sigpending_t *sigpending[sigpending581,20705
    bool accessing_sigpending;583,20831
    kernel_sigset_t app_sigblocked;584,20862
    kernel_sigset_t pre_syscall_app_sigblocked;586,20952
    kernel_sigset_t pre_syscall_app_sigprocmask;588,21054
    uint skip_alarm_xl8;592,21258
    sigfd_pipe_t *signalfd[signalfd594,21329
    bool in_sigsuspend;597,21432
    kernel_sigset_t app_sigblocked_save;598,21456
    volatile int num_unstarted_children;601,21571
    mutex_t child_lock;602,21612
    stack_t sigstack;605,21666
    void *sigheap;sigheap606,21688
    fragment_t *interrupted;interrupted607,21726
    cache_pc interrupted_pc;608,21798
    app_pc signal_restorer_retaddr;611,21906
} thread_sig_info_t;613,22001
typedef struct _clone_record_t 617,22143
    byte *dstack;dstack618,22176
    reg_t app_thread_xsp;619,22260
    app_pc continuation_pc;620,22333
    thread_id_t caller_id;621,22361
    int clone_sysnum;622,22388
    uint clone_flags;623,22410
    thread_sig_info_t info;624,22432
    thread_sig_info_t *parent_info;parent_info625,22460
    void *pcprofile_info;pcprofile_info626,22496
    reg_t for_dynamorio_clone[for_dynamorio_clone630,22619
} clone_record_t;631,22653
static thread_sig_info_t init_info;634,22740
static kernel_sigset_t init_sigmask;635,22776
static bool removed_sig_handler;638,22827
sigaction_syscall(713,24945
sigaltstack_syscall(727,25428
getitimer_syscall(733,25585
setitimer_syscall(739,25720
sigprocmask_syscall(745,25883
unblock_all_signals(752,26094
set_default_signal_action(761,26296
handler_free(779,26827
handler_alloc(785,26955
struct i387_fsave_struct 799,27352
    long        cwd;800,27379
    long        swd;801,27400
    long        twd;802,27421
    long        fip;803,27442
    long        fcs;804,27463
    long        foo;805,27484
    long        fos;806,27505
    long        st_space[st_space807,27526
    long        status;808,27602
struct i387_fxsave_struct 814,27765
    unsigned short      cwd;815,27793
    unsigned short      swd;816,27822
    unsigned short      twd;817,27851
    unsigned short      fop;818,27880
    long        rip;820,27920
    long        rdp;821,27941
    int         mxcsr;822,27962
    int         mxcsr_mask;823,27985
    int         st_space[st_space824,28013
    int         xmm_space[xmm_space825,28090
    int         padding[padding826,28169
    long        fip;828,28204
    long        fcs;829,28225
    long        foo;830,28246
    long        fos;831,28267
    long        mxcsr;832,28288
    long        reserved;833,28311
    long        st_space[st_space834,28337
    long        xmm_space[xmm_space835,28414
    long        padding[padding836,28492
union i387_union 840,28563
    struct i387_fsave_struct    fsave;841,28582
    struct i387_fxsave_struct   fxsave;842,28621
twd_fxsr_to_i387(850,28839
convert_fxsave_to_fpstate(893,30053
save_xmm(919,30810
save_fpstate(963,32404
os_itimers_thread_shared(1027,35147
signal_init(1062,36363
signal_exit(1085,37196
signal_thread_init(1097,37465
create_clone_record(1157,39991
set_clone_record_fields(1198,41848
get_clone_record(1219,42759
get_clone_record_app_xsp(1247,43926
get_clone_record_dstack(1254,44061
signal_info_init_sigaction(1262,44272
signal_info_exit_sigaction(1274,44894
signal_thread_inherit(1317,46761
share_siginfo_after_take_over(1553,57635
signal_fork_init(1578,58696
sigsegv_handler_is_ours(1637,61153
signal_thread_exit(1647,61383
set_our_handler_sigact(1768,66342
intercept_signal(1811,68114
handle_clone(1875,70488
handle_sigaction(1939,73233
handle_post_sigaction(2027,76711
handle_sigaltstack(2069,78504
set_blocked(2095,79406
check_signals_pending(2121,80364
handle_sigprocmask(2143,80980
handle_post_sigprocmask(2228,84871
handle_sigsuspend(2257,86010
static generic_table_t *sigfd_table;sigfd_table2304,87882
struct _sigfd_pipe_t 2306,87920
    file_t write_fd;2307,87943
    file_t read_fd;2308,87964
    uint refcount;2309,87984
    dcontext_t *dcontext;dcontext2310,88003
sigfd_pipe_free(2314,88045
signalfd_init(2340,88936
#   define SIGNALFD_HTABLE_INIT_SIZE 2342,88958
signalfd_exit(2358,89749
signalfd_thread_exit(2364,89842
handle_pre_signalfd(2379,90300
notify_signalfd(2473,94110
signal_handle_dup(2517,95941
signal_handle_close(2535,96555
dump_fpstate(2556,97257
dump_sigcontext(2640,100856
dump_sigset(2687,103133
safe_is_in_fcache(2707,103923
safe_is_in_coarse_stubs(2719,104284
is_on_alt_stack(2731,104657
sigcontext_to_mcontext(2744,105049
mcontext_to_sigcontext(2797,106923
translate_sigcontext(2846,108561
thread_set_self_context(2894,110450
thread_set_self_mcontext(2934,112270
sig_has_restorer(2943,112464
get_app_frame_size(2993,114594
get_sigcontext_from_rt_frame(3002,114801
get_sigcontext_from_app_frame(3008,114943
get_sigcontext_from_pending(3021,115315
get_sigstack_frame_ptr(3034,115839
convert_frame_to_nonrt(3112,119032
convert_frame_to_nonrt_partial(3137,120173
fixup_rtframe_pointers(3154,120860
copy_frame_to_stack(3241,124382
copy_frame_to_pending(3368,129684
send_signal_to_client(3408,131418
handle_client_action_from_cache(3484,135125
abort_on_fault(3544,137794
abort_on_DR_fault(3575,139037
unlink_fragment_for_signal(3587,139428
interrupted_inlined_syscall(3640,141907
sysnum_is_not_restartable(3687,143938
adjust_syscall_for_restart(3719,145396
record_pending_signal(3827,149895
is_sys_kill(4211,168295
compute_memory_target(4229,168930
check_for_modified_code(4350,173506
struct clone_and_swap_args 4429,176969
    byte *stack;stack4430,176998
    byte *tos;tos4431,177015
sig_should_swap_stack(4436,177092
sig_take_over(4464,178098
is_safe_read_ucxt(4473,178269
master_signal_handler_C(4486,178603
execute_handler_from_cache(4888,196607
execute_handler_from_dispatch(4999,201762
terminate_via_kill(5184,209574
execute_default_action(5203,210278
execute_default_from_cache(5400,220183
execute_default_from_dispatch(5407,220408
receive_pending_signal(5413,220563
handle_sigreturn(5478,223325
is_signal_restorer_code(5630,229865
#   define reverse(5644,230399
os_forge_exception(5674,231465
os_request_fatal_coredump(5759,235410
os_request_live_coredump(5775,236004
os_dump_core(5789,236310
at_known_exception(5836,237991
timeval_to_usec(5928,242216
usec_to_timeval(5934,242333
init_itimer(5941,242480
set_actual_itimer(5976,243959
itimer_new_settings(6000,244942
set_itimer_callback(6056,247578
get_itimer_frequency(6084,248669
handle_alarm(6102,249246
start_itimer(6198,253349
stop_itimer(6236,254788
handle_pre_setitimer(6273,256190
handle_post_setitimer(6300,257386
handle_post_getitimer(6325,258406
handle_pre_alarm(6362,259961
handle_post_alarm(6373,260241
handle_suspend_signal(6384,260542
dr_setjmp_sigmask(6486,264809
handle_nudge_signal(6502,265344

unix/stackdump.c,408
#define DEBUGGER 56,2238
#define QUIET_MODE 58,2307
#define TEMPORARY_FILENAME 59,2331
#define CORE_NAME 60,2385
#define VERBOSE 62,2411
#define BATCH_MODE 69,2650
#define DEBUGGER_COMMAND 71,2686
#define DEBUGGER_COMMAND 77,2901
wait_syscall(81,2961
execve_syscall(87,3074
fork_syscall(93,3209
#   define CLONE_CHILD_CLEARTID 117,4417
#   define CLONE_CHILD_SETTID 119,4563
stackdump(148,5787

unix/symtab.c,360
static uint bfd_symcount,51,2242
static uint bfd_symcount, nonnull_symcount;51,2242
static asymbol **bfd_syms bfd_syms52,2286
static bfd *infile infile53,2320
compare_symbols 56,2367
sort_symtab(78,3009
lookup_symbol_address(102,3709
prepare_symtab(138,4758
get_symtab(157,5273
symtab_init(191,6217
symtab_exit(229,7180
symtab_lookup_pc(235,7235

unix/symtab.h,28
#define _SYMTAB_H_ 43,1964

unix/os.c,18832
#define _LARGEFILE64_SOURCE50,2488
# define MAP_32BIT 56,2646
# define F_DUPFD_CLOEXEC 90,3490
# define SYSNUM_STAT 95,3597
# define SYSNUM_FSTAT 96,3627
# define SYSNUM_STAT 98,3665
# define SYSNUM_FSTAT 99,3697
typedef int (*init_fn_t)init_fn_t103,3789
char **our_environ;our_environ110,4127
#undef errno113,4233
# define _GNU_SOURCE 125,4567
# define __USE_GNU 127,4659
# undef ASSERT153,5306
# undef ASSERT_NOT_IMPLEMENTED154,5321
# undef ASSERT_NOT_TESTED155,5352
# undef ASSERT_CURIOSITY156,5378
# define ASSERT(157,5403
# define ASSERT_NOT_IMPLEMENTED(158,5436
# define ASSERT_NOT_TESTED(159,5485
# define ASSERT_CURIOSITY(160,5529
# undef LOG161,5572
# undef DOSTATS162,5584
# define LOG(163,5600
# define DOSTATS(164,5632
typedef struct _our_modify_ldt_t 172,5988
    unsigned int  entry_number;173,6023
    unsigned int  base_addr;174,6055
    unsigned int  limit;175,6084
    unsigned int  seg_32bit:seg_32bit176,6109
    unsigned int  contents:contents177,6140
    unsigned int  read_exec_only:read_exec_only178,6170
    unsigned int  limit_in_pages:limit_in_pages179,6206
    unsigned int  seg_not_present:seg_not_present180,6242
    unsigned int  useable:useable181,6279
} our_modify_ldt_t;182,6308
# define FS_TLS 195,6671
# define GS_TLS 196,6723
#define GDT_NUM_TLS_SLOTS 205,6988
#define GDT_ENTRY_TLS_MIN_32 206,7016
#define GDT_ENTRY_TLS_MIN_64 207,7047
static uint gdt_entry_tls_min 212,7251
static bool return_stolen_lib_tls_gdt;221,7657
#define MAX_THREADS 231,8058
typedef struct _tls_slot_t 232,8082
    thread_id_t tid;233,8111
    dcontext_t *dcontext;dcontext234,8132
} tls_slot_t;235,8158
static tls_slot_t *tls_table;tls_table237,8207
#define MAX_NUM_CLIENT_TLS 242,8376
static bool client_tls_allocated[client_tls_allocated247,8531
static char dynamorio_library_path[dynamorio_library_path265,9332
static char dynamorio_alt_arch_path[dynamorio_alt_arch_path267,9425
#define DR_LIBDIR_X86 269,9525
#define DR_LIBDIR_X64 270,9569
static app_pc dynamo_dll_start 273,9658
static app_pc dynamo_dll_end 274,9697
static app_pc executable_start 276,9752
static app_pc executable_end 277,9791
static char executable_path[executable_path280,9867
static char *executable_basename;executable_basename281,9910
static bool kernel_thread_groups;284,10033
bool kernel_futex_support 289,10168
static bool kernel_64bit;291,10204
pid_t pid_cached;293,10231
static bool fault_handling_initialized;295,10250
uint kilo_hertz;298,10312
static mutex_t memory_info_buf_lock 302,10436
static mutex_t maps_iter_buf_lock 304,10572
DR_API file_t our_stdout 307,10721
DR_API file_t our_stderr 308,10763
DR_API file_t our_stdin 309,10805
static struct rlimit app_rlimit_nofile;312,10878
static generic_table_t *fd_table;fd_table318,11116
#define INIT_HTABLE_SIZE_FD 319,11150
IF_DEBUG_ELSE(328,11546
typedef struct _allmem_info_t 330,11606
    uint prot;331,11638
    dr_mem_type_t type;332,11653
    bool shareable;333,11677
} allmem_info_t;334,11697
typedef struct _maps_iter_t 363,12716
    app_pc vm_start;364,12746
    app_pc vm_end;365,12767
    uint prot;366,12786
    size_t offset;367,12801
    uint64 inode;368,12860
    const char *comment;comment373,13296
    bool may_alloc;379,13616
    file_t maps;380,13636
    char *newline;newline381,13653
    int bufread;382,13672
    int bufwant;383,13689
    char *buf;buf384,13706
    char *comment_buffer;comment_buffer385,13721
} maps_iter_t;386,13747
typedef struct _dir_iterator_t 395,14084
    file_t fd;396,14117
    int off;397,14132
    int end;398,14145
    const char *name;name399,14158
    char buf[buf400,14224
} dir_iterator_t;401,14299
app_pc vsyscall_page_start 417,14993
app_pc vsyscall_syscall_end_pc 419,15076
app_pc vsyscall_sysenter_return_pc 421,15177
#define VSYSCALL_PAGE_START_HARDCODED 422,15220
# define VSYSCALL_REGION_MAPS_NAME 428,15467
static int init_errno;445,16316
__errno_location(448,16385
static int libc_errno_tls_offs;479,17658
our_libc_errno_loc(481,17703
typedef int *(*errno_loc_t)errno_loc_t505,18553
get_libc_errno_location(508,18608
get_libc_errno(566,21025
our_unsetenv(600,22160
getenv(641,23101
dynamorio_set_envp(670,24111
our_init(677,24202
init_array[init_array717,25563
_init(724,25670
kernel_is_64bit(731,25768
get_uname(737,25832
os_init(757,26595
os_file_init(823,28989
get_application_pid_helper(864,31048
get_application_pid(877,31348
set_executable_path(886,31541
get_application_name_helper(894,31771
get_application_name(929,33128
get_application_short_name(941,33628
#define PROC_CPUINFO 947,33784
#define CPUMHZ_LINE_LENGTH 948,33821
#define CPUMHZ_LINE_FORMAT 949,33852
get_timer_frequency_cpuinfo(954,34129
get_timer_frequency(993,35373
#define UTC_TO_EPOCH_SECONDS 1006,35704
query_time_seconds(1010,35776
query_time_millis(1017,35922
find_stack_bottom(1037,36609
os_slow_exit(1062,37370
os_fast_exit(1081,37799
os_terminate_with_code(1087,37846
os_terminate(1104,38512
os_timeout(1110,38631
# define ARCH_SET_GS 1126,39115
# define ARCH_SET_FS 1127,39143
# define ARCH_GET_FS 1128,39171
# define ARCH_GET_GS 1129,39199
    TLS_TYPE_NONE,1134,39329
    TLS_TYPE_LDT,1135,39348
    TLS_TYPE_GDT,1136,39366
    TLS_TYPE_ARCH_PRCTL,1138,39395
} tls_type_t;1140,39427
static tls_type_t tls_type;1142,39442
static bool tls_using_msr;1144,39481
static int tls_gdt_index 1151,39623
static int lib_tls_gdt_index 1153,39701
# define GDT_NO_SIZE_LIMIT 1154,39736
#  define GDT_32BIT 1156,39786
#  define GDT_64BIT 1157,39831
modify_ldt_syscall(1161,39897
    unsigned int limit1500:limit15001168,40134
    unsigned int base1500:base15001169,40165
    unsigned int base2316:base23161170,40195
    unsigned int type:type1171,40224
    unsigned int not_system:not_system1172,40249
    unsigned int privilege_level:privilege_level1173,40280
    unsigned int seg_present:seg_present1174,40316
    unsigned int limit1916:limit19161175,40348
    unsigned int custom:custom1176,40378
    unsigned int zero:zero1177,40405
    unsigned int seg_32bit:seg_32bit1178,40430
    unsigned int limit_in_pages:limit_in_pages1179,40460
    unsigned int base3124:base31241180,40495
} raw_ldt_entry_t;1181,40524
    LDT_TYPE_CODE 1184,40551
    LDT_TYPE_CODE      = 0x8,x81184,40551
    LDT_TYPE_DOWN 1185,40581
    LDT_TYPE_DOWN      = 0x4,x41185,40581
    LDT_TYPE_WRITE 1186,40611
    LDT_TYPE_WRITE     = 0x2,x21186,40611
    LDT_TYPE_ACCESSED 1187,40641
    LDT_TYPE_ACCESSED  = 0x1,x11187,40641
#define LDT_BASE(1190,40675
print_raw_ldt(1201,41025
print_all_ldt(1230,42128
#define LDT_ENTRIES_TO_CHECK 1255,43194
find_unused_ldt_index(1259,43282
initialize_ldt_struct(1287,44196
clear_ldt_struct(1305,44872
create_ldt_entry(1315,45131
clear_ldt_entry(1325,45383
#define USER_PRIVILEGE 1339,45736
#define LDT_NOT_GDT 1340,45762
#define GDT_NOT_LDT 1341,45788
#define SELECTOR_IS_LDT 1342,45814
#define LDT_SELECTOR(1343,45843
#define GDT_SELECTOR(1344,45924
#define SELECTOR_INDEX(1345,46005
#define WRITE_DR_SEG(1347,46047
#define WRITE_LIB_SEG(1352,46261
read_selector(1358,46496
typedef struct _os_seg_info_t 1379,47130
    int   tls_type;1380,47162
    void *dr_fs_base;dr_fs_base1381,47182
    void *dr_gs_base;dr_gs_base1382,47204
    our_modify_ldt_t app_thread_areas[app_thread_areas1383,47226
} os_seg_info_t;1384,47284
typedef struct _os_local_state_t 1387,47326
    local_state_extended_t state;1390,47485
    struct _os_local_state_t *self;self1392,47556
    tls_type_t tls_type;1394,47661
    int ldt_index;1397,47799
    thread_id_t tid;1399,47878
    ushort app_gs;1401,47961
    ushort app_fs;1402,48021
    void  *app_gs_base;app_gs_base1403,48081
    void  *app_fs_base;app_fs_base1404,48145
        os_seg_info_t os_seg_info;1410,48437
        void *client_tls[client_tls1411,48472
} os_local_state_t;1413,48525
#define TLS_LOCAL_STATE_OFFSET 1415,48546
#define TLS_OS_LOCAL_STATE 1418,48644
#define TLS_SELF_OFFSET 1420,48681
#define TLS_THREAD_ID_OFFSET 1421,48768
#define TLS_DCONTEXT_OFFSET 1422,48854
#define TLS_APP_GS_BASE_OFFSET 1425,49016
#define TLS_APP_FS_BASE_OFFSET 1426,49089
#define TLS_APP_GS_OFFSET 1427,49162
#define TLS_APP_FS_OFFSET 1428,49225
#define WRITE_TLS_SLOT_IMM(1440,49888
#define READ_TLS_SLOT_IMM(1445,50172
#define WRITE_TLS_SLOT(1451,50482
#define READ_TLS_SLOT(1459,50951
is_segment_register_initialized(1468,51440
os_tls_offset(1498,52576
os_get_dr_seg_base(1510,52920
get_os_tls(1529,53411
get_os_tls_from_dc(1541,53719
os_get_app_seg_base(1552,54005
os_get_app_seg_base_offset(1576,54760
os_get_app_seg_offset(1589,55067
get_tls(1602,55358
set_tls(1610,55458
get_segment_base(1623,55748
get_app_segment_base(1689,58299
get_local_state_extended(1701,58635
get_local_state(1710,58837
os_handle_mov_seg(1724,59181
choose_gdt_slots(1785,61295
os_tls_app_seg_init(1891,65288
os_tls_init(1951,67510
os_tls_exit(2161,77352
os_tls_get_gdt_index(2213,79233
os_tls_pre_init(2224,79520
os_tls_calloc(2245,80219
os_tls_cfree(2279,81182
os_thread_init(2296,81600
os_thread_exit(2341,83310
os_fork_pre(2374,84402
os_fork_post(2420,86610
os_fork_init(2439,87383
os_should_swap_state(2486,89069
os_using_app_state(2494,89312
os_swap_context(2514,90016
os_thread_under_dynamo(2521,90198
os_thread_not_under_dynamo(2528,90342
get_process_group_id(2535,90497
get_process_id(2542,90665
get_parent_id(2549,90825
get_sys_thread_id(2555,90909
get_thread_id(2565,91100
get_tls_thread_id(2591,92166
get_thread_private_dcontext(2607,92808
set_thread_private_dcontext(2730,98298
replace_thread_id(2776,99584
permstr_to_memprot(2805,100443
memprot_to_osprot(2821,100843
osprot_to_memprot(2835,101211
osprot_replace_memprot(2850,101616
mprotect_syscall(2861,101939
mmap_syscall_succeeded(2867,102061
mmap_syscall(2889,102869
munmap_syscall(2896,103127
os_raw_mem_free(2904,103316
os_raw_mem_alloc(2923,103795
dr_raw_mremap(2962,105124
dr_raw_brk(2987,106068
os_heap_free(3007,106728
os_heap_reserve(3028,107422
find_free_memory_in_region(3095,110292
os_heap_reserve_in_region(3124,111241
os_heap_commit(3166,112809
os_heap_decommit(3191,113607
os_heap_systemwide_overcommit(3212,114301
os_heap_get_commit_limit(3219,114434
futex_wait(3231,114836
futex_wake(3274,116712
futex_wake_all(3290,117140
thread_yield(3308,117556
thread_signal(3314,117631
thread_sleep(3329,118198
thread_suspend(3361,119543
thread_resume(3479,125665
thread_terminate(3522,127139
is_thread_terminated(3535,127560
os_wait_thread_terminated(3543,127745
thread_get_mcontext(3560,128269
thread_set_mcontext(3576,128763
is_thread_currently_native(3592,129260
client_thread_run(3599,129428
dr_create_client_thread(3637,130996
get_num_processors(3702,134053
load_shared_library(3743,135589
lookup_library_routine(3765,136382
unload_shared_library(3776,136703
shared_library_error(3789,137014
shared_library_bounds(3809,137626
llseek_syscall(3844,138943
os_file_exists(3856,139317
os_files_same(3871,139797
os_get_file_size(3888,140306
os_get_file_size_by_handle(3903,140733
os_create_dir(3921,141267
open_syscall(3931,141667
close_syscall(3938,141816
dup_syscall(3944,141895
read_syscall(3950,141974
write_syscall(3956,142094
fcntl_syscall(3963,142259
#    define O_LARGEFILE 3973,142497
#    define O_LARGEFILE 3975,142534
os_open(3985,142834
os_open_directory(4015,144051
os_close(4022,144189
fd_priv_dup(4032,144342
fd_mark_close_on_exec(4058,145452
fd_table_add(4069,145751
fd_is_dr_owned(4097,146836
fd_is_in_private_range(4108,147127
os_open_protected(4116,147310
os_close_protected(4143,148064
os_write(4157,148483
os_read(4164,148628
os_flush(4170,148721
os_seek(4177,148900
os_tell(4189,149123
os_delete_file(4203,149301
os_rename_file(4209,149402
os_delete_mapped_file(4232,150244
os_map_file(4238,150337
#   define MAX_MMAP_LOOP_ITERS 4246,150582
os_unmap_file(4318,153351
os_get_disk_free_space(4328,153584
exit_process_syscall(4354,154693
exit_thread_syscall(4370,155329
os_syslog(4380,155563
all_memory_areas_initialized(4398,156215
print_all_memory_areas(4407,156472
safe_read_via_query(4431,157304
safe_read_ex(4454,158067
safe_read(4471,158756
safe_write_ex(4477,158874
is_readable_without_exception_internal(4532,160869
is_readable_without_exception(4552,161547
is_readable_without_exception_query_os(4565,162055
is_user_address(4571,162194
os_set_protection(4584,162512
set_protection(4626,164113
change_protection(4647,165012
make_writable(4655,165233
bool make_copy_on_writable(4708,167513
make_unwritable(4716,167696
ignorable_system_call(4779,170418
        unsigned long addr;4857,172113
        unsigned long len;4858,172141
        unsigned long prot;4859,172168
        unsigned long flags;4860,172196
        unsigned long fd;4861,172225
        unsigned long offset;4862,172251
} mmap_arg_struct_t;4863,172281
const reg_id_t syscall_regparms[syscall_regparms4867,172385
sys_param_addr(4888,172767
sys_param(4932,174522
#define SET_RETURN_VAL(4938,174682
dr_syscall_get_param(4943,174784
dr_syscall_set_param(4953,175094
dr_syscall_get_result(4964,175491
dr_syscall_set_result(4974,175786
dr_syscall_set_sysnum(4985,176148
dr_syscall_invoke_another(4997,176546
is_clone_thread_syscall_helper(5014,177250
is_clone_thread_syscall(5022,177425
was_clone_thread_syscall(5029,177607
is_sigreturn_syscall_helper(5037,177868
is_sigreturn_syscall(5043,177998
was_sigreturn_syscall(5050,178150
handle_self_signal(5057,178334
    ENV_PROP_RUNUNDER,5091,179786
    ENV_PROP_OPTIONS,5092,179809
static const char * const env_to_propagate[env_to_propagate5094,179834
#define NUM_ENV_TO_PROPAGATE 5101,180032
handle_execve(5104,180129
handle_execve_post(5390,192535
cleanup_after_vfork_execve(5430,194182
handle_close_pre(5453,194917
#define SYSCALL_PC(5528,198244
handle_exit(5536,198549
os_set_app_thread_area(5623,202618
os_get_app_thread_area(5680,205061
os_switch_lib_tls(5705,206232
os_switch_seg_to_context(5711,206370
pre_system_call(5811,210260
allmem_info_free(6575,241553
allmem_info_dup(6581,241684
allmem_should_merge(6592,241944
allmem_info_merge(6606,242406
sync_all_memory_areas(6620,242787
add_all_memory_area(6634,243190
update_all_memory_areas(6651,243826
remove_from_all_memory_areas(6740,247948
mmap_check_for_module_overlap(6754,248443
process_mmap(6815,252046
os_set_dr_seg(6987,260833
handle_post_arch_prctl(7001,261232
handle_app_mremap(7063,263646
handle_app_brk(7112,265775
post_system_call(7155,267514
#define PROC_SELF_MAPS 7654,287794
#define MAPS_LINE_LENGTH 7657,287894
#define MAPS_LINE_FORMAT4 7659,287974
#define MAPS_LINE_MAX4 7660,288065
#define MAPS_LINE_FORMAT8 7662,288176
#define MAPS_LINE_MAX8 7663,288270
#define MAPS_LINE_MAX 7665,288342
#define BUFSIZE 7674,288716
static char buf_scratch[buf_scratch7675,288753
static char comment_buf_scratch[comment_buf_scratch7676,288787
static char buf_iter[buf_iter7683,289183
static char comment_buf_iter[comment_buf_iter7684,289214
maps_iterator_start(7688,289294
maps_iterator_stop(7728,290597
maps_iterator_next(7742,290984
typedef struct _dl_iterate_data_t 7862,296123
    app_pc target_addr;7863,296159
    const char *target_path;target_path7864,296183
    char *path_out;path_out7865,296212
    size_t path_size;7866,296232
    app_pc mod_start;7867,296254
    app_pc mod_end;7868,296276
} dl_iterate_data_t;7869,296296
dl_iterate_get_path_cb(7872,296329
get_library_bounds(7948,300317
get_dynamo_library_bounds(8117,307805
get_dynamorio_library_path(8184,310544
read_proc_self_exe(8198,310925
get_application_base(8226,311933
get_application_end(8252,312729
get_image_entry(8260,312858
mem_stats_snapshot(8281,313468
is_in_dynamo_dll(8288,313527
get_dynamorio_dll_start(8303,313919
get_dynamorio_dll_end(8312,314095
get_dynamorio_dll_preferred_base(8321,314263
# define VSYSCALL_PAGE_SO_NAME 8333,314617
# define USER_MAX 8338,314857
dl_iterate_get_areas_cb(8342,314976
probe_address(8418,318260
probe_add_region(8478,320240
find_vm_areas_via_probe(8501,321064
find_executable_vm_areas(8599,324937
find_dynamo_library_vm_areas(8792,334246
get_stack_bounds(8813,334990
at_initial_stack_bottom(8850,336615
query_memory_ex(8875,337574
get_memory_info(8986,342531
query_memory_ex_from_os(9012,343352
get_memory_info_from_os(9138,348375
all_memory_areas_lock(9157,348989
all_memory_areas_unlock(9178,349738
mutex_wait_contended_lock(9199,350406
mutex_notify_released_lock(9291,354748
rwlock_wait_contended_writer(9309,355399
rwlock_notify_writer(9315,355485
rwlock_wait_contended_reader(9321,355572
rwlock_notify_readers(9327,355658
typedef struct linux_event_t 9335,355880
    volatile int signaled;9341,356158
    mutex_t lock;9342,356185
} linux_event_t;9343,356203
create_event(9350,356406
destroy_event(9359,356655
signal_event(9366,356785
reset_event(9376,357016
wait_for_event(9387,357336
struct linux_dirent 9431,358902
    long           d_ino;9432,358924
    off_t          d_off;9433,358976
    unsigned short d_reclen;9434,359043
    char           d_name[d_name9435,359110
    char           d_pad;9437,359244
    char           d_type;9438,359295
#define CURRENT_DIRENT(9442,359374
os_dir_iterator_start(9446,359475
os_dir_iterator_next(9454,359604
typedef struct _takeover_record_t 9489,360898
    thread_id_t tid;9490,360934
    event_t event;9491,360955
} takeover_record_t;9492,360974
static takeover_record_t *thread_takeover_records;thread_takeover_records9502,361401
static uint num_thread_takeover_records;9503,361452
static dcontext_t *takeover_dcontext;takeover_dcontext9509,361682
os_list_threads(9516,361931
os_take_over_all_unknown_threads(9575,364271
os_thread_take_over(9659,367374
os_thread_take_over_suspended_native(9706,368926
os_random_seed(9726,369548
rct_analyze_module_at_violation(9744,370053
rct_add_rip_rel_addr(9792,371665
get_drmarker_hotp_policy_status_table(9802,371879
set_drmarker_hotp_policy_status_table(9809,371981
hook_text(9815,372083
unhook_text(9826,372441
insert_jmp_at_tramp_entry(9832,372538
aslr_is_possible_attack(9839,372678
aslr_possible_preferred_address(9846,372785
take_over_primary_thread(9853,372902
os_current_user_directory(9859,372968
os_validate_user_owned(9886,374045
os_check_option_compatibility(9894,374231
os_file_has_elf_so_header(9901,374347
uint64_divmod(9922,374900
        uint64 v64;9926,375029
            uint32 lo;9928,375066
            uint32 hi;9929,375089
__udivdi3(9967,376276
__umoddi3(9975,376442
test_uint64_divmod(9988,376733
unit_test_os(10028,377961

vmareas.c,13382
    VM_WRITABLE 76,2697
    VM_WRITABLE     = 0x0001,x000176,2697
    VM_UNMOD_IMAGE 80,2936
    VM_UNMOD_IMAGE  = 0x0002,x000280,2936
    VM_DELETE_ME 81,2966
    VM_DELETE_ME    = 0x0004,x000481,2966
    VM_WAS_FUTURE 85,3262
    VM_WAS_FUTURE   = 0x0008,x000885,3262
    VM_DR_HEAP 86,3337
    VM_DR_HEAP      = 0x0010,x001086,3337
    VM_ONCE_ONLY 87,3389
    VM_ONCE_ONLY    = 0x0020,x002087,3389
    VM_MADE_READONLY 93,3724
    VM_MADE_READONLY = VM_WRITABLE/VM_WRITABLE93,3724
    VM_DELAY_READONLY 97,4019
    VM_DELAY_READONLY = 0x0080,x008097,4019
    VM_PATTERN_REVERIFY 108,4690
    VM_PATTERN_REVERIFY = 0x0100,x0100108,4690
    VM_DRIVER_ADDRESS 111,4734
    VM_DRIVER_ADDRESS   = 0x0200,x0200111,4734
    VM_PERSISTED_CACHE 124,5347
    VM_PERSISTED_CACHE     = 0x0400,x0400124,5347
    VM_EXECUTED_FROM 127,5456
    VM_EXECUTED_FROM       = 0x0800,x0800127,5456
    VM_ADD_TO_SHARED_DATA 133,5684
    VM_ADD_TO_SHARED_DATA  = 0x1000,x1000133,5684
#define SANDBOX_FLAG(137,5764
typedef struct _ro_vs_sandbox_data_t 140,5895
    uint written_count;145,6128
    uint selfmod_execs;154,6614
    uint ro2s_xfers;156,6651
    uint s2ro_xfers;157,6672
} ro_vs_sandbox_data_t;159,6700
typedef struct vm_area_t 170,7259
    app_pc start;171,7286
    app_pc end;172,7304
    uint vm_flags;178,7604
    uint frag_flags;182,7728
    char *comment;comment184,7762
        fragment_t *frags;frags199,8414
        void *client;client201,8503
    } custom;202,8525
} vm_area_t;203,8539
typedef struct thread_data_t 208,8691
    vm_area_vector_t areas;209,8722
    vm_area_t *last_area;last_area211,8810
    app_pc last_decode_area_page_pc;220,9357
    bool   last_decode_area_valid;221,9394
    uint thrown_exceptions;223,9487
} thread_data_t;225,9572
#define SHOULD_LOCK_VECTOR(227,9590
#define LOCK_VECTOR(232,9820
#define UNLOCK_VECTOR(241,10268
static vm_area_vector_t *executable_areas;executable_areas256,11028
static vm_area_vector_t *dynamo_areas;dynamo_areas257,11071
static coarse_info_t **coarse_to_delete;coarse_to_delete264,11348
static vm_area_vector_t *pretend_writable_areas;pretend_writable_areas270,11556
vm_area_vector_t *patch_proof_areas;patch_proof_areas273,11668
vm_area_vector_t *emulate_write_areas;emulate_write_areas278,11849
vm_area_vector_t *IAT_areas;IAT_areas285,12154
static vm_area_vector_t *written_areas;written_areas290,12302
static vm_area_vector_t *futureexec_areas;futureexec_areas298,12581
static vm_area_vector_t *app_flushed_areas;app_flushed_areas303,12776
static app_pc tamper_resistant_region_start,311,12987
static app_pc tamper_resistant_region_start, tamper_resistant_region_end;311,12987
static thread_data_t *shared_data;shared_data324,13603
typedef struct _pending_delete_t 326,13674
    app_pc start;329,13793
    app_pc end;330,13811
    fragment_t *frags;frags333,13902
    uint ref_count;335,14002
    uint flushtime_deleted;336,14022
    struct _pending_delete_t *next;next338,14099
} pending_delete_t;339,14135
typedef struct _deletion_lists_t 342,14228
    pending_delete_t *shared_delete;shared_delete349,14642
    pending_delete_t *shared_delete_tail;shared_delete_tail351,14749
    uint shared_delete_count;353,14832
    fragment_t *lazy_delete_list;lazy_delete_list359,15066
    fragment_t *lazy_delete_tail;lazy_delete_tail361,15152
    uint lazy_delete_count;363,15231
    bool move_pending;365,15331
} deletion_lists_t;366,15354
static deletion_lists_t *todelete;todelete368,15375
typedef struct _last_deallocated_t 370,15411
    bool unload_in_progress;388,16429
    app_pc last_unload_base;389,16458
    size_t last_unload_size;390,16487
} last_deallocated_t;398,16919
static last_deallocated_t *last_deallocated;last_deallocated399,16941
#define MULTI_ALLOC_DC(412,17604
#define GET_DATA(413,17667
#define GET_VECTOR(416,17821
#define SHARED_VECTOR_RWLOCK(420,18121
#define ASSERT_VMAREA_DATA_PROTECTED(426,18383
# define ASSERT_VMAREA_VECTOR_PROTECTED(435,18804
# define ASSERT_VMAREA_VECTOR_PROTECTED(443,19261
#define MAXIMUM_VIOLATION_NAME_LENGTH 447,19392
#define VMVECTOR_INITIALIZE_VECTOR(449,19434
bool vm_areas_exited 523,21815
typedef struct _multi_entry_t 546,23067
    fragment_t *f;f547,23099
    uint      flags;552,23355
    fragment_t *next_vmarea;next_vmarea554,23462
    fragment_t *prev_vmarea;prev_vmarea555,23491
    fragment_t *also_vmarea;also_vmarea556,23520
    app_pc pc;559,23699
} multi_entry_t;560,23714
#define FRAG_MULTI(563,23807
#define FRAG_MULTI_INIT(565,23871
#define FRAG_NEXT(567,23971
#define FRAG_NEXT_ASSIGN(570,24099
#define FRAG_PREV(577,24304
#define FRAG_PREV_ASSIGN(580,24432
#define FRAG_ALSO(588,24713
#define FRAG_ALSO_DEL_OK(592,24967
#define FRAG_ALSO_ASSIGN(595,25107
#define FRAG_PC(605,25462
#define FRAG_PC_ASSIGN(608,25571
#define FRAG_FRAG(615,25761
#define FRAG_FRAG_ASSIGN(618,25870
#define FRAG_ID(625,26064
vm_make_writable(632,26305
vm_make_unwritable(643,26635
revert_memory_regions(671,27797
print_vm_flags(695,28689
print_vm_area(711,29313
print_vm_areas(769,31606
print_contig_vm_areas(780,31866
print_pending_list(797,32316
writelock_if_not_already(813,32857
vm_area_vector_check_size(823,33087
vm_area_merge_fraglists(848,34055
add_vm_area(895,36243
adjust_coarse_unit_bounds(1230,53123
remove_vm_area(1275,55066
binary_search(1452,63742
lookup_addr(1513,66074
vm_area_overlap(1523,66400
vm_areas_reset_init(1533,66721
dynamo_vm_areas_init(1541,66946
vm_areas_init(1552,67274
vm_areas_statistics(1627,70313
vm_areas_reset_free(1650,71146
vm_areas_exit(1665,71684
vm_areas_thread_reset_init(1772,75431
vm_areas_thread_init(1783,75878
vm_areas_thread_reset_free(1791,76101
vm_areas_thread_exit(1804,76540
vmvector_set_callbacks(1822,77138
vmvector_print(1839,77760
vmvector_add(1848,78001
vmvector_add_replace(1858,78358
vmvector_remove(1878,79014
vmvector_remove_containing_area(1894,79540
vmvector_overlap(1920,80342
vmvector_lookup(1938,80931
vmvector_lookup_data(1950,81289
vmvector_lookup_prev_next(1980,82301
vmvector_modify_data(2013,83346
vmvector_init_vector(2030,83943
vmvector_create_vector(2038,84160
vmvector_reset_vector(2048,84441
vmvector_free_vector(2089,86190
vmvector_delete_vector(2097,86401
vmvector_iterator_start(2116,87028
vmvector_iterator_hasnext(2127,87263
vmvector_iterator_startover(2134,87440
vmvector_iterator_peek(2150,87864
vmvector_iterator_next(2172,88636
vmvector_iterator_stop(2181,88893
print_executable_areas(2197,89329
print_dynamo_areas(2203,89419
print_futureexec_areas(2212,89601
print_written_areas(2220,89745
free_written_area(2227,89843
add_written_area(2239,90298
add_executable_vm_area_check_IAT(2316,93689
add_executable_vm_area_helper(2490,102891
vm_area_load_coarse_unit(2552,105680
add_executable_vm_area(2626,109551
add_executable_region(2730,113869
remove_executable_vm_area(2742,114363
remove_executable_region(2760,114994
vm_area_delay_load_coarse_units(2770,115303
free_nonexec_coarse_and_unlock(2812,117090
add_futureexec_vm_area(2859,118889
remove_futureexec_vm_area(2884,119897
futureexec_vm_area_overlap(2897,120330
is_executable_address(2909,120669
get_executable_area_vm_flags(2923,121030
get_executable_area_flags(2943,121578
get_coarse_info_internal(2963,122208
get_executable_area_coarse_info(3042,125919
mark_executable_area_coarse_frozen(3051,126181
executable_areas_match_flags(3088,127781
is_executable_area_writable(3130,129663
is_executable_area_writable_overlap(3152,130551
is_pretend_or_executable_writable(3165,130977
executable_vm_area_coarse_overlap(3178,131385
executable_vm_area_persisted_overlap(3192,131826
executable_vm_area_executed_from(3204,132247
executable_area_overlap_bounds(3232,133629
vm_area_coarse_iter_start(3282,135878
vm_area_coarse_iter_find_next(3297,136420
vm_area_coarse_iter_hasnext(3320,137331
vm_area_coarse_iter_next(3326,137573
vm_area_coarse_iter_stop(3333,137764
is_executable_area_on_all_selfmod_pages(3344,138074
was_executable_area_writable(3365,138972
is_executable_area_selfmod(3397,140377
is_executable_area_dyngen(3409,140672
is_valid_address(3421,140916
update_dynamo_vm_areas(3434,141330
are_dynamo_vm_areas_stale(3459,142199
mark_dynamo_vm_areas_stale(3470,142493
dynamo_vm_areas_lock(3480,142858
dynamo_vm_areas_unlock(3501,143594
self_owns_dynamo_vm_area_lock(3518,144137
dynamo_vm_areas_start_reading(3531,144635
dynamo_vm_areas_done_reading(3554,145442
add_dynamo_vm_area(3564,145735
remove_dynamo_vm_area(3591,146958
add_dynamo_heap_vm_area(3614,147735
is_dynamo_area_buffer(3636,148696
remove_dynamo_heap_areas(3643,148860
is_dynamo_address(3670,150016
is_pretend_writable_address(3687,150588
pretend_writable_vm_area_overlap(3702,151167
get_address_comment(3715,151510
executable_vm_area_overlap(3740,152154
executable_areas_lock(3752,152477
executable_areas_unlock(3758,152552
dynamo_vm_area_overlap(3766,152756
is_on_stack(3782,153253
is_address_on_stack(3829,155137
is_driver_address(3837,155372
#define MESSAGE_EXEC_VIOLATION 3856,155920
#define MESSAGE_CONTACT_VENDOR 3857,156001
const char * const action_message[action_message3858,156090
const uint action_event_id[action_event_id3868,156572
fill_security_violation_target(3881,156873
get_security_violation_name(3890,157128
is_exempt_threat_name(4001,161440
security_violation_report(4030,162530
security_violation_internal_main(4138,167266
security_violation_action(4474,182945
security_violation_main(4533,185401
security_violation_internal(4549,186080
security_violation(4574,187219
END_DATA_SECTION(4584,187621
is_in_futureexec_area(4601,188241
is_dyngen_code(4611,188460
is_direct_jmp_to_image(4625,188797
check_trampoline_displaced_code(4649,189672
check_origins_bb_pattern(4721,192900
check_origins_trim_region_helper(4966,204087
check_origins_helper(4985,204973
check_origins(5482,230354
vm_area_fragment_self_write(5526,232146
    SIMULATE_INIT 5570,234183
    SIMULATE_GENERIC 5571,234212
    SIMULATE_AT_ADDR 5572,234241
    SIMULATE_AT_FRAGNUM 5573,234270
    SIMULATE_WIPE_STACK 5574,234299
    SIMULATE_OVER 5575,234328
    SIMULATE_OVER       = 0x1000,x10005575,234328
next_simulate_at_fragment(5592,234959
simulate_attack(5641,236667
print_entry(5702,238798
print_fraglist(5722,239518
print_fraglists(5758,241112
print_frag_arealist(5771,241501
area_contains_frag_pc(5787,241976
prepend_entry_to_fraglist(5803,242464
prepend_fraglist(5828,243478
dyngen_diagnostics(5853,244447
app_memory_pre_alloc(5915,246711
app_memory_allocation(5959,248713
app_memory_deallocation(6075,253961
flush_and_remove_executable_vm_area(6160,258259
tamper_resistant_region_add(6186,259338
tamper_resistant_region_overlap(6209,260226
app_memory_protection_change(6237,261586
app_memory_flush(6915,296664
was_address_flush_start(6976,299309
handle_delay_readonly(6995,299995
check_thread_vm_area_cleanup(7034,301839
check_thread_vm_area_abort(7077,303700
allow_xfer_for_frag_flags(7093,304327
check_thread_vm_area(7159,307405
set_thread_decode_page_start(8018,348966
check_in_last_thread_vm_area(8052,350247
remove_shared_vmlist(8103,352972
vm_area_add_fragment(8164,355593
acquire_vm_areas_lock(8280,360065
acquire_vm_areas_lock_if_not_already(8287,360237
release_vm_areas_lock(8294,360422
frag_also_list_areas_unique(8306,360827
exec_area_bounds_match(8342,362237
vm_area_add_to_list(8383,363973
vm_area_destroy_list(8503,369458
vm_list_overlaps(8510,369614
remove_fraglist_entry(8545,370849
vm_area_check_clean_fraglist(8604,373050
vm_area_clean_fraglist(8641,374545
vm_area_remove_fragment(8695,377076
add_to_pending_list(8740,378629
print_lazy_deletion_list(8791,380674
check_lazy_deletion_list_consistency(8806,381072
remove_from_lazy_deletion_list(8819,381348
move_lazy_list_to_pending_delete(8845,382242
add_to_lazy_deletion_list(8905,385201
check_lazy_deletion_list(8989,389159
unlink_fragments_for_deletion(9044,391455
vm_area_unlink_fragments(9086,393078
vm_area_unlink_incoming(9283,403338
vm_area_check_shared_pending(9322,404750
vm_area_flush_fragments(9539,414668
vm_area_flush_coarse_unit(9637,418937
vm_area_allsynch_flush_fragments(9712,422411
vm_area_coarse_units_reset_free(9887,431165
coarse_region_should_persist(9937,433580
vm_area_coarse_region_freeze(10007,436518
vm_area_coarse_units_freeze(10118,442078
remove_thread_vm_area(10161,443847
thread_vm_area_overlap(10178,444456
handle_modified_code(10199,445181
get_selfmod_exec_counter(10621,466897
vm_area_selfmod_check_clear_exec_count(10672,469018
mark_unload_start(10833,476921
mark_unload_future_added(10853,477647
mark_unload_end(10874,478452
is_in_last_unloaded_region(10959,482626
is_currently_unloaded_region(10980,483269
is_unreadable_or_currently_unloaded_region(10993,483543
print_last_deallocated(11018,484319
safe_apc_or_thread_target(11055,485529
apc_thread_policy_helper(11070,485933
    enum {PIC_SHELLCODE_MATCH PIC_SHELLCODE_MATCH11098,487079
    enum {PIC_SHELLCODE_MATCH = 0x0000e853}x0000e85311098,487079
aslr_report_violation(11252,493790
# define INT_TO_PC(11324,496905
print_vector_msg(11327,496966
check_vec(11334,497107
vmvector_tests(11346,497471
unit_test_vmareas(11389,499277

vmareas.h,2137
#define _VMAREAS_H_ 42,1931
#define EMPTY_REGION_BASE 47,2074
#define EMPTY_REGION_SIZE 48,2161
#define UNIVERSAL_REGION_BASE 49,2201
#define UNIVERSAL_REGION_SIZE 51,2297
#define UNIVERSAL_REGION_END 53,2397
    VECTOR_SHARED 60,2531
    VECTOR_SHARED        = 0x0001,x000160,2531
    VECTOR_FRAGMENT_LIST 61,2566
    VECTOR_FRAGMENT_LIST = 0x0002,x000261,2566
    VECTOR_NEVER_MERGE_ADJACENT 63,2669
    VECTOR_NEVER_MERGE_ADJACENT = 0x0004,x000463,2669
    VECTOR_NEVER_OVERLAP 65,2776
    VECTOR_NEVER_OVERLAP = 0x0008,x000865,2776
    VECTOR_NO_LOCK 69,2938
    VECTOR_NO_LOCK       = 0x0010,x001069,2938
#define VECTOR_NEVER_MERGE 72,2977
struct vm_area_vector_t 82,3462
    struct vm_area_t *buf;buf83,3488
    int size;84,3515
    int length;85,3544
    uint flags;86,3560
    read_write_lock_t lock;91,3780
    void (*free_payload_func)free_payload_func95,3875
    void *(*split_payload_func)split_payload_func99,4015
    bool (*should_merge_func)should_merge_func108,4498
    void *(*merge_payload_func)merge_payload_func113,4754
#define VMVECTOR_ALLOC_VECTOR(119,5011
typedef struct vmvector_iterator_t 125,5260
    vm_area_vector_t *vector;vector126,5297
    int index;127,5327
} vmvector_iterator_t;128,5342
vmvector_empty(170,6689
#define USING_PRETEND_WRITABLE(419,13816
    ACTION_TERMINATE_PROCESS,545,18338
    ACTION_CONTINUE,546,18368
    ACTION_TERMINATE_THREAD,547,18418
    ACTION_THROW_EXCEPTION,548,18447
} action_type_t;549,18475
#  define USING_FUTURE_EXEC_LIST 572,19340
#  define USING_FUTURE_EXEC_LIST 577,19641
    DO_APP_MEM_PROT_CHANGE,597,20292
    FAIL_APP_MEM_PROT_CHANGE,598,20365
    PRETEND_APP_MEM_PROT_CHANGE,600,20493
    SUBSET_APP_MEM_PROT_CHANGE,601,20572
    DR_MODIFY_HALT 612,21026
    DR_MODIFY_NOP 613,21105
    DR_MODIFY_FAIL 614,21187
    DR_MODIFY_ALLOW 615,21241
    DR_MODIFY_OFF 616,21325
#    define APC_API 777,27109
#    define APC_API779,27163
    APC_TARGET_NATIVE,790,27384
    APC_TARGET_WINDOWS,791,27408
    THREAD_TARGET_NATIVE,792,27433
    THREAD_TARGET_WINDOWS793,27460
} apc_thread_type_t;794,27486

win32/aslr.c,4855
enum {ASLR_MAP_GRANULARITY ASLR_MAP_GRANULARITY53,2183
    module_digest_t original_source;66,2774
    module_digest_t relocated_target;67,2811
    uint magic;79,3389
    uint version;84,3603
} aslr_persistent_digest_t;86,3700
enum {ASLR_PERSISTENT_CACHE_VERSION ASLR_PERSISTENT_CACHE_VERSION89,3769
enum {ASLR_PERSISTENT_CACHE_MAGIC ASLR_PERSISTENT_CACHE_MAGIC91,3836
enum {ASLR_PERSISTENT_CACHE_MAGIC = 0x45504441}x4550444191,3836
typedef struct _aslr_last_dll_bounds_t 97,4070
    app_pc end;98,4111
    app_pc start;101,4252
} aslr_last_dll_bounds_t;102,4270
static aslr_last_dll_bounds_t *aslr_last_dll_bounds;aslr_last_dll_bounds104,4297
vm_area_vector_t *aslr_wouldbe_areas;aslr_wouldbe_areas118,4897
vm_area_vector_t *aslr_heap_pad_areas;aslr_heap_pad_areas129,5422
HANDLE shared_object_directory 132,5516
HANDLE relocated_dlls_filecache_initial 137,5686
#define KNOWN_DLLS_OBJECT_DIRECTORY 139,5751
HANDLE known_dlls_object_directory 140,5802
#define KNOWN_DLL_PATH_SYMLINK 142,5862
wchar_t known_dll_path[known_dll_path143,5909
aslr_init(179,6975
aslr_exit(431,19074
aslr_thread_init(474,20680
aslr_thread_exit(479,20729
aslr_get_next_base(489,21021
aslr_get_fitting_base(534,23007
aslr_update_failed(613,26424
aslr_update_view_size(647,27698
aslr_track_randomized_dlls(686,29172
aslr_pre_process_mapview(796,34496
aslr_retry_map_syscall(1101,49868
aslr_get_module_mapping_size(1149,52280
#define SET_RETURN_VAL(1198,54206
aslr_post_process_mapview(1207,54485
void aslr_pre_process_unmapview(1897,87973
aslr_post_process_unmapview(1926,89172
aslr_doublecheck_wouldbe_areas(1943,89678
aslr_is_possible_attack(1964,90312
aslr_possible_preferred_address(1985,91189
aslr_reserve_remote_random_pad(2020,92746
aslr_maybe_pad_stack(2062,94573
#define LOADBLOCK_PAGE_PROTECT 2121,97163
aslr_force_dynamorio_rebase(2135,97729
aslr_free_dynamorio_loadblock(2180,99407
aslr_post_process_allocate_virtual_memory(2230,101432
aslr_pre_process_free_virtual_memory(2413,110905
aslr_reserve_initial_heap_pad(2475,113706
aslr_free_heap_pads(2543,117078
get_relocated_dlls_filecache_directory(2585,118622
open_relocated_dlls_filecache_directory(2610,119753
aslr_module_force_size(2725,125038
aslr_module_append_signature(2790,127262
aslr_module_read_signature(2844,129499
aslr_get_section_digest(2929,132629
aslr_create_private_module_section(2978,134469
aslr_get_file_digest(3011,135985
aslr_compare_in_place(3058,137611
aslr_module_verify_relocated_contents(3148,141119
aslr_verify_file_checksum(3337,149172
aslr_open_relocated_dll_file(3521,156357
aslr_check_low_disk_threshold(3650,162479
aslr_create_relocated_dll_file(3684,163958
is_aslr_exempted_file_name(3816,169767
get_file_short_name(3894,173204
calculate_publish_name(3922,174319
aslr_write_header(4042,179406
aslr_generate_relocated_section(4124,182896
aslr_experiment_with_section_handle(4385,194645
aslr_file_relocate_cow(4535,201556
aslr_module_get_times(4636,206611
aslr_produce_randomized_file(4732,210212
aslr_get_unique_wide_name(4949,219863
aslr_rename_temporary_file(4974,220918
aslr_publish_section_handle(5029,223292
aslr_set_randomized_handle(5315,236750
aslr_get_original_metadata(5386,239852
aslr_verify_section_backing(5454,242520
aslr_replace_section_handle(5475,243353
aslr_subscribe_section_handle(5559,246960
aslr_post_process_create_section_internal(5673,251555
aslr_publish_file(5792,256959
aslr_get_known_dll_path(5825,258097
aslr_is_handle_KnownDlls(5887,260322
aslr_recreate_known_dll_file(5940,262286
aslr_post_process_create_or_open_section(6035,266269
aslr_process_worklist(6088,268497
#define GBOP_DEFINE_HOOK(6144,270903
#define GBOP_DEFINE_HOOK_MODULE(6145,270963
static const gbop_hook_desc_t gbop_hooks[gbop_hooks6154,271455
#undef GBOP_DEFINE_HOOK6158,271525
#undef GBOP_DEFINE_HOOK_MODULE6159,271549
#define GBOP_HOOK_LIST_END_SENTINEL 6161,271581
#define GBOP_DEFINE_HOOK(6166,271802
#define GBOP_DEFINE_HOOK_MODULE(6167,271846
static const uint gbop_hooks_set_sizes[gbop_hooks_set_sizes6174,272163
#undef GBOP_DEFINE_HOOK6180,272321
#undef GBOP_DEFINE_HOOK_MODULE6181,272345
#define GBOP_DEFINE_HOOK_MODULE(6188,272630
static int gbop_hooks_set_enabled[gbop_hooks_set_enabled6190,272689
#undef GBOP_DEFINE_HOOK_MODULE6195,272841
static const uint gbop_num_hooks 6197,272873
bool gbop_vm_loaded 6206,273242
gbop_get_hook(6211,273416
gbop_get_num_hooks(6242,274528
gbop_exclude_filter(6290,276289
    CTI_MIN_LENGTH 6358,279118
    CTI_MIN_LENGTH = CTI_IND1_LENGTH,6358,279118
    CTI_MAX_LENGTH 6359,279156
    CTI_MAX_LENGTH = CTI_FAR_ABS_LENGTH,6359,279156
gbop_is_after_cti(6365,279305
check_exempt_gbop_addr(6510,285174
gbop_check_valid_caller(6558,287442
gbop_validate_and_act(6828,300350
gbop_init(6922,304619
gbop_exit(6956,305838

win32/aslr.h,8020
#define ASLR_H42,1878
    ASLR_DISABLED 48,1956
    ASLR_DISABLED          = 0x00,x0048,1956
    ASLR_DLL 51,2041
    ASLR_DLL               = 0x01,x0151,2041
    ASLR_STACK 52,2113
    ASLR_STACK             = 0x02,x0252,2113
    ASLR_HEAP 55,2264
    ASLR_HEAP              = 0x04,x0455,2264
    ASLR_MAPPED 56,2343
    ASLR_MAPPED            = 0x08,x0856,2343
    ASLR_EXECUTABLE 57,2416
    ASLR_EXECUTABLE        = 0x10,x1057,2416
    ASLR_PROCESS_PARAM 59,2492
    ASLR_PROCESS_PARAM     = 0x20,x2059,2492
    ASLR_HEAP_FILL 67,2863
    ASLR_HEAP_FILL         = 0x40,x4067,2863
    ASLR_TEB 68,2947
    ASLR_TEB               = 0x80,x8068,2947
    ASLR_RANGE_BOTTOM_UP 89,3987
    ASLR_RANGE_BOTTOM_UP   = 0x00100,x0010089,3987
    ASLR_RANGE_TOP_DOWN 90,4059
    ASLR_RANGE_TOP_DOWN    = 0x00200,x0020090,4059
    ASLR_RANGE_RANDOM 93,4256
    ASLR_RANGE_RANDOM      = 0x00400,x0040093,4256
    ASLR_SHARE_DR_DLL 99,4597
    ASLR_SHARE_DR_DLL      = 0x10000000,x1000000099,4597
    ASLR_CLIENT_DEFAULT 105,4903
    ASLR_CLIENT_DEFAULT = ASLR_DLL 105,4903
    ASLR_CLIENT_DEFAULT = ASLR_DLL | ASLR_STACK 105,4903
    ASLR_CLIENT_DEFAULT = ASLR_DLL | ASLR_STACK | ASLR_HEAP,105,4903
} aslr_option_t;106,4974
    ASLR_PROCESS_PRIVATE 116,5307
    ASLR_PROCESS_PRIVATE           = 0x1,x1116,5307
    ASLR_SHARED_PER_USER 118,5389
    ASLR_SHARED_PER_USER           = 0x2,x2118,5389
    ASLR_SHARED_INHERIT 128,5877
    ASLR_SHARED_INHERIT            = 0x4,x4128,5877
    ASLR_SHARED_IN_SESSION 146,6639
    ASLR_SHARED_IN_SESSION         = 0x8,x8146,6639
    ASLR_SHARED_CONTENTS 160,7414
    ASLR_SHARED_CONTENTS           = 0x10,x10160,7414
    ASLR_SHARED_PUBLISHER 167,7698
    ASLR_SHARED_PUBLISHER          = 0x20,x20167,7698
    ASLR_SHARED_SUBSCRIBER 173,7942
    ASLR_SHARED_SUBSCRIBER         = 0x40,x40173,7942
    ASLR_SHARED_ANONYMOUS_CONSUMER 180,8212
    ASLR_SHARED_ANONYMOUS_CONSUMER = 0x80,x80180,8212
    ASLR_SHARED_FILE_PRODUCER 193,8808
    ASLR_SHARED_FILE_PRODUCER      = 0x100,x100193,8808
    ASLR_SHARED_WORKLIST 203,9210
    ASLR_SHARED_WORKLIST           = 0x200,x200203,9210
    ASLR_SHARED_INITIALIZE 209,9430
    ASLR_SHARED_INITIALIZE         = 0x1000,x1000209,9430
    ASLR_SHARED_INITIALIZE_NONPERMANENT 221,10069
    ASLR_SHARED_INITIALIZE_NONPERMANENT = 0x2000,x2000221,10069
    ASLR_PERSISTENT 228,10395
    ASLR_PERSISTENT                = 0x100000,x100000228,10395
    ASLR_ALLOW_ORIGINAL_CLOBBER 235,10697
    ASLR_ALLOW_ORIGINAL_CLOBBER  = 0x1000000,x1000000235,10697
    ASLR_RANDOMIZE_EXECUTABLE 247,11331
    ASLR_RANDOMIZE_EXECUTABLE    = 0x2000000,x2000000247,11331
    ASLR_AVOID_NET20_NATIVE_IMAGES 260,11964
    ASLR_AVOID_NET20_NATIVE_IMAGES = 0x4000000,x4000000260,11964
    ASLR_CACHE_DEFAULT 263,12072
    ASLR_CACHE_DEFAULT = ASLR_SHARED_PER_USER 263,12072
                         ASLR_SHARED_CONTENTS 264,12131
               ASLR_SHARED_ANONYMOUS_CONSUMER 265,12190
                     ASLR_SHARED_FILE_PRODUCER 266,12249
} aslr_cache_t;267,12308
    ASLR_CACHE_LIST_DEFAULT,272,12453
    ASLR_CACHE_LIST_INCLUDE,273,12482
    ASLR_CACHE_LIST_EXCLUDE 274,12545
} aslr_cache_list_t;278,12722
    ASLR_PERSISTENT_LAX 290,13212
    ASLR_PERSISTENT_LAX           = 0x0,x0290,13212
    ASLR_PERSISTENT_PARANOID 296,13392
    ASLR_PERSISTENT_PARANOID      = 0x1,x1296,13392
    ASLR_PERSISTENT_SOURCE_DIGEST 302,13602
    ASLR_PERSISTENT_SOURCE_DIGEST = 0x2,x2302,13602
    ASLR_PERSISTENT_TARGET_DIGEST 307,13790
    ASLR_PERSISTENT_TARGET_DIGEST = 0x4,x4307,13790
    ASLR_PERSISTENT_MODIFIED_TIME 323,14620
    ASLR_PERSISTENT_MODIFIED_TIME = 0x8,x8323,14620
    ASLR_PERSISTENT_NOTOWNER_PARANOIA 336,15237
    ASLR_PERSISTENT_NOTOWNER_PARANOIA = 0x10,x10336,15237
    ASLR_PERSISTENT_SHORT_DIGESTS 344,15602
    ASLR_PERSISTENT_SHORT_DIGESTS     = 0x20,x20344,15602
    ASLR_PERSISTENT_PARANOID_TRANSFORM_EXPLICITLY 352,15951
    ASLR_PERSISTENT_PARANOID_TRANSFORM_EXPLICITLY = 0x10000,x10000352,15951
    ASLR_PERSISTENT_PARANOID_PREFIX 362,16468
    ASLR_PERSISTENT_PARANOID_PREFIX = 0x20000,x20000362,16468
} aslr_consistency_check_t;375,17079
    ASLR_NO_ACTION 380,17158
    ASLR_NO_ACTION      = 0x0,x0380,17158
    ASLR_TRACK_AREAS 383,17269
    ASLR_TRACK_AREAS    = 0x1,x1383,17269
    ASLR_AVOID_AREAS 384,17338
    ASLR_AVOID_AREAS    = 0x2,x2384,17338
    ASLR_RESERVE_AREAS 385,17408
    ASLR_RESERVE_AREAS  = 0x4,x4385,17408
    ASLR_DETECT_EXECUTE 394,17759
    ASLR_DETECT_EXECUTE = 0x10,x10394,17759
    ASLR_DETECT_READ 397,17926
    ASLR_DETECT_READ    = 0x20,x20397,17926
    ASLR_DETECT_WRITE 398,17968
    ASLR_DETECT_WRITE   = 0x40,x40398,17968
    ASLR_REPORT 401,18046
    ASLR_REPORT         = 0x100,x100401,18046
    ASLR_HANDLING 407,18270
    ASLR_HANDLING =     0x1000,x1000407,18270
    ASLR_NORMALIZE_ID 411,18466
    ASLR_NORMALIZE_ID = 0x10000,x10000411,18466
} aslr_action_t;414,18673
    ASLR_INTERNAL_DEFAULT 418,18762
    ASLR_INTERNAL_DEFAULT       = 0x0000,x0000418,18762
    ASLR_INTERNAL_SAME_STRESS 422,18968
    ASLR_INTERNAL_SAME_STRESS   = 0x1000,x1000422,18968
    ASLR_INTERNAL_RANGE_NONE 425,19086
    ASLR_INTERNAL_RANGE_NONE    = 0x2000,x2000425,19086
    ASLR_INTERNAL_SHARED_NONUNIQUE 427,19130
    ASLR_INTERNAL_SHARED_NONUNIQUE = 0x800000,x800000427,19130
    ASLR_INTERNAL_SHARED_APPFILE 430,19218
    ASLR_INTERNAL_SHARED_APPFILE = 0x1000000,x1000000430,19218
    ASLR_INTERNAL_SHARED_AND_PRIVATE 433,19328
    ASLR_INTERNAL_SHARED_AND_PRIVATE = 0x2000000,x2000000433,19328
} aslr_internal_option_t;439,19577
    bool           sys_aslr_clobbered;442,19621
    HANDLE randomized_section_handle;450,20010
    app_pc original_section_base;451,20079
    uint   original_section_timestamp;452,20141
    uint   original_section_checksum;453,20202
    HANDLE original_image_section_handle;454,20262
    HANDLE last_app_section_handle;460,20529
    process_id_t last_child_padded;470,21077
} aslr_syscall_context_t;471,21123
#define ASLR_INVALID_SECTION_BASE 473,21150
#define MAX_PUBLISHED_SECTION_NAME 476,21263
aslr_timestamp_transformation(522,22957
    GBOP_DISABLED 546,23807
    GBOP_DISABLED          = 0x0,x0546,23807
    GBOP_IS_EXECUTABLE 557,24262
    GBOP_IS_EXECUTABLE     = 0x1,x1557,24262
    GBOP_IS_X 558,24337
    GBOP_IS_X              = 0x2,x2558,24337
    GBOP_IS_IMAGE 559,24421
    GBOP_IS_IMAGE          = 0x4,x4559,24421
    GBOP_IS_NOT_STACK 566,24748
    GBOP_IS_NOT_STACK      = 0x8,x8566,24748
    GBOP_CHECK_INSTR_TYPE 578,25227
    GBOP_CHECK_INSTR_TYPE  = 0x10,x10578,25227
    GBOP_IS_CALL 579,25318
    GBOP_IS_CALL           = 0x20,x20579,25318
    GBOP_IS_JMP 580,25402
    GBOP_IS_JMP            = 0x40,x40580,25402
    GBOP_IS_HOTPATCH_JMP 581,25492
    GBOP_IS_HOTPATCH_JMP   = 0x80,x80581,25492
    GBOP_EMULATE_SOURCE 595,26163
    GBOP_EMULATE_SOURCE   = 0x100,x100595,26163
    GBOP_IS_RET_TO_ENTRY 611,26961
    GBOP_IS_RET_TO_ENTRY  = 0x00200,x00200611,26961
    GBOP_IS_DGC 631,27923
    GBOP_IS_DGC           = 0x02000,x02000631,27923
    GBOP_IS_FUTURE_EXEC 642,28585
    GBOP_IS_FUTURE_EXEC   = 0x04000,x04000642,28585
    GBOP_DIAGNOSE_SOURCE 647,28713
    GBOP_DIAGNOSE_SOURCE  = 0x10000,x10000647,28713
    GBOP_CLIENT_DEFAULT 659,29246
    GBOP_CLIENT_DEFAULT = GBOP_IS_DGC 659,29246
    GBOP_CLIENT_DEFAULT = GBOP_IS_DGC | GBOP_IS_FUTURE_EXEC 659,29246
                          GBOP_CHECK_INSTR_TYPE 660,29331
                          GBOP_CHECK_INSTR_TYPE | GBOP_IS_CALL 660,29331
                          GBOP_IS_EXECUTABLE 661,29415
                          GBOP_IS_EXECUTABLE | GBOP_IS_X 661,29415
                          GBOP_IS_EXECUTABLE | GBOP_IS_X | GBOP_IS_IMAGE 661,29415
    const char *mod_name;mod_name667,29549
    const char *func_name;func_name668,29575
} gbop_hook_desc_t;669,29602

win32/callback.c,6037
static LPTOP_LEVEL_EXCEPTION_FILTER app_top_handler;82,3121
ALIGN_VAR(92,3558
#define CURRENTLY_UNKNOWN 129,4852
#define INTERCEPT_POINT(132,4926
#undef INTERCEPT_POINT136,5052
typedef struct _intercept_map_elem_t 140,5158
    byte *interception_pc;interception_pc141,5197
    app_pc original_app_pc;142,5224
    size_t displace_length;143,5252
    size_t orig_length;144,5304
    struct _intercept_map_elem_t *next;next145,5328
} intercept_map_elem_t;146,5368
typedef struct _intercept_map_t 148,5393
    intercept_map_elem_t *head;head149,5427
    intercept_map_elem_t *tail;tail150,5459
} intercept_map_t;151,5491
static intercept_map_t *intercept_map;intercept_map153,5511
static byte *LdrInitializeThunk LdrInitializeThunk172,6273
static byte *RtlUserThreadStart RtlUserThreadStart179,6779
static byte *KiFastSystemCall KiFastSystemCall183,6911
get_setcontext_interceptor(187,6978
set_asynch_interception(194,7116
intercept_asynch_global(205,7448
intercept_asynch_common(212,7623
intercept_asynch_for_thread(244,8840
intercept_asynch_for_self(254,9163
#define APP 543,20103
insert_let_go_cleanup(547,20219
#define JMP_SIZE 702,27947
emit_landing_pad_code(704,28028
finalize_landing_pad_code(767,30183
copy_app_code(796,31698
emit_intercept_code(865,34883
# define STACK_ALIGNMENT 1174,49898
#undef APP1347,57624
map_intercept_pc_to_app_pc(1350,57648
unmap_intercept_pc(1377,58426
free_intercept_list(1413,59508
get_app_pc_from_intercept_pc(1440,60543
is_intercepted_app_pc(1462,61172
emit_resume_jmp(1499,62611
intercept_call(1568,65960
un_intercept_call(1773,74455
clean_syscall_wrapper(1829,76694
#define APP(1891,79182
#undef APP1963,82753
syscall_wrapper_ilist(2083,88664
#           define CHROME_HOOK_DISTANCE_JMP_TO_SKIP 2366,102714
intercept_syscall_wrapper(2453,106359
insert_trampoline(2593,112197
remove_trampoline(2627,113748
is_in_interception_buffer(2633,113843
is_part_of_interception(2640,113990
is_on_interception_initial_route(2647,114141
is_syscall_trampoline(2665,114681
make_writable_incr(2711,116186
make_inaccessible(2728,116634
wipe_out_ntdll(2745,117063
asynch_retakeover_if_native(2795,118650
asynch_take_over(2816,119510
possible_new_thread_wait_for_dr_init(2855,121117
intercept_new_thread(2878,122009
#define BASE_THREAD_START_THUNK_USHORT 3032,129414
#define LDR_INIT_CXT_XSP_OFFSET 3159,136428
intercept_ldr_init(3162,136538
#define APC_CONTEXT_XSP_OFFS 3291,142032
#define APC_TARGET_XSP_OFFS 3292,142082
intercept_apc(3298,142404
check_apc_context_offset(3504,153206
intercept_nt_continue(3570,156169
intercept_nt_setcontext(3673,161528
our_top_handler(3745,164665
transfer_to_fcache_return(3756,164978
    MOD_CODE_TAKEOVER 3785,166024
    MOD_CODE_TAKEOVER      = 0x01,x013785,166024
    MOD_CODE_EMULATE_WRITE 3786,166059
    MOD_CODE_EMULATE_WRITE = 0x02,x023786,166059
    MOD_CODE_APP_CXT 3787,166094
    MOD_CODE_APP_CXT       = 0x04,x043787,166094
found_modified_code(3799,166591
is_dstack_overflow(4025,177443
check_for_modified_code(4052,178633
get_exception_list(4177,184716
exception_frame_chain_depth(4197,185493
dump_context_info(4264,188478
#define DUMP(4266,188539
#define DUMPNM(4267,188606
#define NEWLINE 4268,188679
#undef DUMP4356,191111
#undef DUMPNM4357,191123
#undef NEWLINE4358,191137
exception_access_violation_type(4362,191175
dump_exception_info(4375,191521
dump_exception_frames(4394,192285
typedef struct scopetable_entry_t 4436,193809
    DWORD previousTryLevel;4437,193845
    PVOID lpfnFilter;4438,193873
    PVOID lpfnHandler;4439,193895
} scopetable_entry_t;4440,193918
typedef struct _vc_exception_registration_t4443,193996
    EXCEPTION_REGISTRATION   exception_base;4445,194042
    struct scopetable_entry_t *scopetable;scopetable4446,194087
    int                      trylevel;4447,194130
    int                      _ebp;4448,194169
} vc_exception_registration_t;4449,194204
void dump_vc_exception_frame(4456,194454
report_app_exception(4473,195062
report_internal_exception(4488,195782
internal_exception_info(4569,199615
internal_dynamo_exception(4578,199973
is_execution_exception(4610,201166
client_exception_event(4668,203320
check_internal_exception(4744,206833
intercept_exception(4927,216314
intercept_raise_exception(5573,249411
initialize_exception_record(5604,250545
os_forge_exception(5652,252528
intercept_callback_start(5808,260474
callback_setup(5992,269432
callback_start_return(6138,275386
get_prev_swapped_dcontext(6296,282559
get_pc_after_call(6319,283314
intercept_load_dll(6395,286515
intercept_unload_dll(6522,292843
#       define HACK_EXE_NAME 6550,294137
#       define L_PIN_DLL_NAME 6551,294194
retakeover_after_native(6635,298099
remove_image_entry_trampoline(6749,303478
take_over_primary_thread(6769,304400
intercept_image_entry(6840,307474
insert_image_entry_trampoline(7001,315384
callback_interception_init_start(7094,319908
callback_interception_init_finish(7260,327537
callback_interception_unintercept(7444,335879
callback_interception_exit(7482,337421
swap_dcontexts(7497,337925
at_initial_stack_bottom(7545,340225
at_xdata_rct_exception(7608,343091
at_driver_rct_exception(7626,343729
at_fiber_init_known_exception(7714,347817
            SUB_RSP_LENGTH 7736,348736
            FIBER_SEH_LENGTH 7737,348768
    MAX_SEH_TRYLEVEL 7805,351659
    INSTR_PUSH_IMMED32_LENGTH 7806,351685
    INSTR_PUSH_IMMED32_OPCODE 7807,351720
    INSTR_PUSH_IMMED32_OPCODE = 0x68,x687807,351720
at_SEH_rct_exception(7850,353246
bool seen_Borland_SEH 7904,355723
at_Borland_SEH_rct_exemption(7924,356947
at_rct_exempt_module(7976,359643
at_known_exception(8074,364630
callback_init(8133,366752
callback_exit(8138,366778
get_drmarker(8149,366997
hook_text(8159,367229
unhook_text(8199,368974
insert_jmp_at_tramp_entry(8206,369169
get_segment_base(8223,369680
get_app_segment_base(8237,370020
thread_attach_takeover_callee(8244,370170
emit_takeover_code(8255,370461

win32/diagnost.c,1178
static const char * const separator 63,2939
static const wchar_t * const HKLM_entries[HKLM_entries71,3321
static const wchar_t * const HKCU_entries[HKCU_entries101,5548
diagnostics_log_data(120,6559
open_diagnostics_file(175,9025
#define PRINT_MEM_BUF_BYTE 182,9243
#define PRINT_MEM_BUF_START 184,9321
#define PRINT_MEM_BUF_NO_ALIGN 187,9453
#define PRINT_MEM_BUF_ASCII 190,9559
print_memory_buffer(196,9855
report_addr_info(237,11445
report_src_info(274,13012
report_target_info(333,15397
report_preferred_target_info(347,15939
report_vm_counters(364,16497
report_dcontext_info(390,17473
report_internal_data_structures(448,19917
report_ntdll_info(547,24051
report_thread(598,26241
report_current_process(615,26927
get_system_processes(833,36831
report_processes(865,38101
report_registry_settings(936,40942
report_registry_settings_helper(955,41743
report_autostart_programs(1058,46469
report_intro(1104,48155
report_processor_info(1142,49588
report_system_diagnostics(1182,50962
add_diagnostics_xml_header(1370,60694
report_diagnostics_common(1386,61493
report_diagnostics(1463,65113
append_diagnostics(1502,66425
diagnost_exit(1516,66948

win32/diagnost.h,2530
#define _DIAGNOST_H_ 40,1807
#define DIAGNOSTICS_LOGDIR_KEY 43,1902
#define DIAGNOSTICS_FILE_XML_EXTENSION 44,1953
#define DIAGNOSTICS_XML_FILE_VERSION 45,1999
#define DIAGNOSTICS_NTDLL_DLL_LOCATION 46,2042
#define DIAGNOSTICS_HARDWARE_REG_KEY 47,2104
#define DIAGNOSTICS_CONTROL_REG_KEY 48,2197
#define DIAGNOSTICS_TEST_REG_KEY 49,2292
#define DIAGNOSTICS_OS_REG_KEY 50,2358
#define DIAGNOSTICS_OS_HOTFIX_REG_KEY 51,2461
#define DIAGNOSTICS_BIOS_REG_KEY 52,2581
#define DIAGNOSTICS_SYSTEMROOT_REG_KEY 53,2668
#define DIAGNOSTICS_DESCRIPTION_KEY 54,2721
#define DIAGNOSTICS_MANUFACTURER_KEY 55,2771
#define DIAGNOSTICS_FRIENDLYNAME_KEY 56,2815
#define DIAGNOSTICS_MAX_REG_KEYS 58,2869
#define DIAGNOSTICS_MAX_REG_VALUES 59,2959
#define DIAGNOSTICS_MAX_RECURSION_LEVEL 60,3049
#define DIAGNOSTICS_MAX_NAME_AND_DATA_SIZE 61,3143
#define DIAGNOSTICS_MAX_KEY_NAME_SIZE 62,3233
#define DIAGNOSTICS_MAX_LOG_BUFFER_SIZE 63,3319
#define DIAGNOSTICS_MAX_LOG_FILES 64,3364
#define DIAGNOSTICS_MINI_DUMP_SIZE 65,3438
#define DIAGNOSTICS_REG_NAME 67,3536
#define DIAGNOSTICS_REG_DATA 68,3610
#define DIAGNOSTICS_REG_HARDWARE 69,3684
#define DIAGNOSTICS_REG_ALLKEYS 70,3766
#define DIAGNOSTICS_REG_ALLSUBKEYS 71,3843
#define DIAGNOSTICS_INITIAL_PROCESS_TOTAL 72,3934
#define DIAGNOSTICS_BYTES_PER_LINE 74,3980
#define DECREMENT_FOR_DATA_OFFSET 80,4367
typedef struct _DIAGNOSTICS_INFORMATION 82,4461
    SYSTEM_BASIC_INFORMATION sbasic_info;83,4503
    SYSTEM_PROCESSOR_INFORMATION sproc_info;84,4545
    SYSTEM_PERFORMANCE_INFORMATION sperf_info;85,4590
    SYSTEM_TIME_OF_DAY_INFORMATION stime_info;86,4637
    SYSTEM_PROCESSOR_TIMES sptime_info;87,4684
    SYSTEM_GLOBAL_FLAG global_flag;88,4724
} DIAGNOSTICS_INFORMATION, *PDIAGNOSTICS_INFORMATION;PDIAGNOSTICS_INFORMATION89,4760
typedef struct _DIAGNOSTICS_KEY_VALUE_FULL_INFORMATION 100,5452
    ULONG   TitleIndex;101,5509
    ULONG   Type;102,5533
    ULONG   DataOffset;103,5551
    ULONG   DataLength;104,5575
    ULONG   NameLength;105,5599
    BYTE    NameAndData[NameAndData106,5660
} DIAGNOSTICS_KEY_VALUE_FULL_INFORMATION, *PDIAGNOSTICS_KEY_VALUE_FULL_INFORMATION;PDIAGNOSTICS_KEY_VALUE_FULL_INFORMATION107,5721
typedef struct _DIAGNOSTICS_KEY_NAME_INFORMATION 110,5861
    LARGE_INTEGER   LastWriteTime;111,5912
    ULONG   TitleIndex;112,5947
    ULONG   NameLength;113,5971
    WCHAR   Name[Name114,6032
} DIAGNOSTICS_KEY_NAME_INFORMATION, *PDIAGNOSTICS_KEY_NAME_INFORMATION;PDIAGNOSTICS_KEY_NAME_INFORMATION115,6088

win32/drmarker.c,757
# define WIN32_LEAN_AND_MEAN51,2191
# define READ_FUNC 60,2438
# define DR_MARKER_VERSION_CURRENT 61,2480
typedef unsigned char byte;68,2962
# define PAGE_START(70,2998
# define PAGE_SIZE 71,3060
# define READ_FUNC 72,3088
#define OP_jmp_byte 75,3133
is_wow64_process(80,3228
    typedef DWORD (WINAPI 83,3313
read_and_verify_dr_marker_common(109,4189
read_and_verify_dr_marker_64(173,6476
read_and_verify_dr_marker(180,6626
#define DR_MARKER_MAGIC1 190,7110
#define DR_MARKER_MAGIC2 191,7146
#define DR_MARKER_MAGIC3 192,7182
#define DR_MARKER_MAGIC4 193,7218
dr_marker_verify(196,7260
dr_marker_magic_init(208,7695
init_dr_marker(227,8352
get_drmarker_hotp_policy_status_table(259,9494
set_drmarker_hotp_policy_status_table(272,9790

win32/drmarker.h,1566
#define _DRMARKER_H_44,1979
#define L_DR_MARKER_HOOKED_DLL 52,2042
# define DR_MARKER_HOOKED_DLL 54,2101
# define DR_MARKER_HOOKED_DLL 56,2160
#define DR_MARKER_HOOKED_FUNCTION 59,2210
#define DR_MARKER_HOOKED_FUNCTION_ARGS 60,2269
#define DR_MARKER_HOOKED_FUNCTION_STRING 62,2408
    DR_MARKER_RELEASE_BUILD 65,2494
    DR_MARKER_RELEASE_BUILD  = 0x1,x165,2494
    DR_MARKER_DEBUG_BUILD 66,2530
    DR_MARKER_DEBUG_BUILD    = 0x2,x266,2530
    DR_MARKER_PROFILE_BUILD 67,2566
    DR_MARKER_PROFILE_BUILD  = 0x4,x467,2566
    DR_MARKER_BUILD_TYPES 68,2602
        DR_MARKER_RELEASE_BUILD|DR_MARKER_RELEASE_BUILD69,2634
        DR_MARKER_RELEASE_BUILD|DR_MARKER_DEBUG_BUILD|DR_MARKER_DEBUG_BUILD69,2634
        DR_MARKER_RELEASE_BUILD|DR_MARKER_DEBUG_BUILD|DR_MARKER_PROFILE_BUILDDR_MARKER_PROFILE_BUILD69,2634
#define DR_MARKER_VERSION_1 72,2716
#define DR_MARKER_VERSION_2 73,2746
#define WINDBG_CMD_MAX_LEN 75,2777
typedef struct _dr_marker_t 85,3268
    uint magic1;86,3298
    uint magic2;87,3315
    uint magic3;88,3332
    uint magic4;89,3349
    uint flags;90,3366
    uint build_num;91,3382
    uint dr_marker_version;92,3402
    void *dr_base_addr;dr_base_addr93,3466
    void *dr_generic_nudge_target;dr_generic_nudge_target94,3490
    void *dr_hotp_policy_status_table;dr_hotp_policy_status_table95,3525
    struct _dr_statistics_t *stats;stats96,3564
    char windbg_cmds[windbg_cmds100,3735
} dr_marker_t;104,3900
    DR_MARKER_FOUND 107,3923
    DR_MARKER_NOT_FOUND 108,3966
    DR_MARKER_ERROR 109,4009

win32/drwinapi/advapi32_redir.c,690
#define MAX_REG_KEY_NAME_LEN 45,1933
static strhash_table_t *advapi32_table;advapi32_table48,2067
static const redirect_import_t redirect_advapi32[redirect_advapi3250,2108
#define REDIRECT_ADVAPI32_NUM 57,2525
advapi32_redir_init(60,2618
advapi32_redir_exit(78,3330
advapi32_redir_onload(84,3425
advapi32_redir_lookup(90,3497
redirect_RegCloseKey(102,3754
redirect_RegOpenKeyExA(113,3901
open_key_common(136,4555
key_is_special(149,4961
special_to_handle(158,5237
key_close_special(201,7010
redirect_RegOpenKeyExW(209,7160
redirect_RegQueryValueExA(251,8527
redirect_RegQueryValueExW(298,10320
unit_test_drwinapi_advapi32(371,12754
#   define REG_KEY_DATA_SZ 377,12925

win32/drwinapi/advapi32_redir.h,102
#define _ADVAPI32_REDIR_H_ 39,1837
# define __out_data_source(61,2200
typedef LONG LSTATUS;66,2302

win32/drwinapi/drwinapi.c,293
drwinapi_init(47,2032
drwinapi_exit(56,2165
drwinapi_onload(65,2298
drwinapi_redirect_imports(76,2612
ntstatus_to_last_error(118,4574
redirect_ignore_arg0(168,7563
redirect_ignore_arg4(174,7624
redirect_ignore_arg8(180,7691
redirect_ignore_arg12(186,7770
unit_test_drwinapi(201,8186

win32/drwinapi/drwinapi.h,30
#define _DRWINAPI_H_ 39,1891

win32/drwinapi/drwinapi_private.h,170
#define _DRWINAPI_PRIVATE_H_ 36,1796
typedef struct _redirect_import_t 45,2162
    const char *name;name46,2198
    app_pc func;47,2220
} redirect_import_t;48,2237

win32/drwinapi/kernel32_file.c,2711
static HANDLE base_named_obj_dir;44,2059
static HANDLE base_named_pipe_dir;45,2093
get_base_named_obj_dir_name(49,2214
kernel32_redir_init_file(97,4239
kernel32_redir_exit_file(114,4852
kernel32_redir_onload_file(121,4983
init_object_attr_for_files(128,5187
largeint_to_filetime(145,5958
create_dir_common(158,6261
redirect_CreateDirectoryA(195,7409
redirect_CreateDirectoryW(212,7870
redirect_RemoveDirectoryA(237,8576
redirect_RemoveDirectoryW(249,8821
redirect_GetCurrentDirectoryA(261,9068
redirect_GetCurrentDirectoryW(287,9857
redirect_SetCurrentDirectoryA(321,11060
redirect_SetCurrentDirectoryW(335,11369
file_create_disp_winapi_to_nt(357,12003
file_options_to_nt(371,12415
file_access_to_nt(409,13769
create_file_common(425,14230
redirect_CreateFileA(520,17798
redirect_CreateFileW(543,18563
redirect_DeleteFileA(575,19601
redirect_DeleteFileW(597,20114
redirect_ReadFile(625,20843
redirect_WriteFile(684,22794
redirect_GetFileAttributesA(749,24958
redirect_GetFileAttributesW(770,25473
redirect_GetFileInformationByHandle(805,26439
redirect_GetFileSize(862,28572
redirect_GetFileType(881,29079
redirect_CreateFileMappingA(932,30385
redirect_CreateFileMappingW(958,31197
redirect_MapViewOfFile(1021,33527
redirect_MapViewOfFileEx(1036,33955
redirect_UnmapViewOfFile(1083,35619
redirect_FlushViewOfFile(1097,35914
redirect_CreatePipe(1126,36689
redirect_DeviceIoControl(1213,40170
redirect_GetDiskFreeSpaceA(1280,42514
open_dir_from_path(1309,43481
redirect_GetDiskFreeSpaceW(1362,45150
redirect_GetDriveTypeA(1400,46269
redirect_GetDriveTypeW(1421,46766
redirect_CloseHandle(1470,48043
redirect_DuplicateHandle(1479,48153
redirect_GetStdHandle(1500,48924
redirect_FileTimeToLocalFileTime(1519,49366
redirect_LocalFileTimeToFileTime(1546,50233
redirect_FileTimeToSystemTime(1569,50905
redirect_SystemTimeToFileTime(1581,51194
redirect_GetSystemTimeAsFileTime(1595,51512
redirect_GetFileTime(1606,51724
redirect_SetFileTime(1635,52507
#define FIND_FILE_INFO_SZ 1674,53829
redirect_FindClose(1679,53937
find_next_file_common(1691,54271
find_first_file_common(1745,56445
find_nt_to_win32A(1815,59345
find_nt_to_win32W(1851,61003
redirect_FindFirstFileA(1882,62354
redirect_FindFirstFileW(1907,63187
redirect_FindNextFileA(1938,64191
redirect_FindNextFileW(1952,64647
redirect_FlushFileBuffers(1967,65128
test_directories(1991,65582
test_files(2027,66793
test_file_mapping(2145,71306
test_pipe(2206,73660
test_DeviceIoControl(2238,74623
within_one(2283,76168
test_file_times(2290,76285
test_find_file(2360,79044
test_file_paths(2456,83343
test_drive(2511,85818
test_handles(2561,88309
unit_test_drwinapi_kernel32_file(2574,88601

win32/drwinapi/kernel32_lib.c,279
kernel32_redir_onload_lib(50,2367
redirect_GetModuleHandleA(69,3316
redirect_GetModuleHandleW(88,3848
redirect_GetProcAddress(111,4564
redirect_LoadLibraryA(135,5485
redirect_LoadLibraryW(156,6342
redirect_GetModuleFileNameA(174,6908
redirect_GetModuleFileNameW(200,7698

win32/drwinapi/kernel32_mem.c,1278
static ptr_uint_t magic_val;46,2107
kernel32_redir_init_mem(55,2381
kernel32_redir_exit_mem(61,2482
redirect_DecodePointer(68,2563
redirect_EncodePointer 77,2684
redirect_GetProcessHeap(86,2807
__bcount(98,3133
redirect_HeapCompact(112,3343
redirect_HeapCreate(127,3727
redirect_HeapDestroy(140,4084
redirect_HeapFree(149,4194
__bcount(158,4358
redirect_HeapSetInformation 173,4612
redirect_HeapSize(196,5332
redirect_HeapValidate(207,5508
redirect_HeapWalk(218,5704
typedef struct _local_header_t 247,6818
    ushort lock_count;248,6851
    ushort flags;249,6874
    struct _local_header_t *alloc;alloc250,6892
} local_header_t;251,6927
local_header_from_handle(254,6977
redirect_LocalAlloc(261,7079
redirect_LocalFree(299,8214
redirect_LocalReAlloc(318,8752
redirect_LocalLock(393,11755
redirect_LocalHandle(413,12162
redirect_LocalUnlock(428,12463
redirect_LocalSize(452,12974
redirect_LocalFlags(475,13572
redirect_IsBadReadPtr(500,14254
redirect_ReadProcessMemory(512,14461
__bcount(532,15093
redirect_VirtualFree(568,16268
redirect_VirtualProtect(593,16817
redirect_VirtualQuery(626,18003
redirect_VirtualQueryEx(637,18275
test_heap(658,18808
test_local(683,19560
test_syscalls(755,22107
unit_test_drwinapi_kernel32_mem(782,23034

win32/drwinapi/kernel32_misc.c,104
redirect_GetLastError(40,1859
redirect_SetLastError(49,1943
unit_test_drwinapi_kernel32_misc(67,2252

win32/drwinapi/kernel32_proc.c,570
typedef struct _fls_cb_t 45,2117
    PFLS_CALLBACK_FUNCTION cb;46,2144
    struct _fls_cb_t *next;next47,2175
} fls_cb_t;48,2203
static fls_cb_t *fls_cb_list;fls_cb_list50,2216
kernel32_redir_init_proc(55,2415
kernel32_redir_exit_proc(65,2688
kernel32_redir_onload_proc(78,3034
redirect_GetCurrentProcess(90,3321
redirect_GetCurrentProcessId(99,3413
redirect_ExitProcess(109,3530
redirect_GetCurrentThread(128,3950
redirect_GetCurrentThreadId(137,4040
kernel32_redir_fls_cb(149,4219
redirect_FlsAlloc(198,6159
unit_test_drwinapi_kernel32_proc(238,7601

win32/drwinapi/kernel32_redir.c,308
static strhash_table_t *kernel32_table;kernel32_table46,2052
static const redirect_import_t redirect_kernel32[redirect_kernel3248,2093
#define REDIRECT_KERNEL32_NUM 171,10228
kernel32_redir_init(174,10321
kernel32_redir_exit(196,11129
kernel32_redir_onload(206,11320
kernel32_redir_lookup(227,11912

win32/drwinapi/kernel32_redir.h,3425
#define _KERNEL32_REDIR_H_ 40,1922
#define _WIN32_WINNT 46,2035
#define WIN32_LEAN_AND_MEAN 47,2099
#undef _WIN32_WINNT49,2150
#undef WIN32_LEAN_AND_MEAN50,2170
# define __drv_interlocked 60,2391
    HeapEnableTerminationOnCorruption 65,2482
typedef struct _CONSOLE_READCONSOLE_CONTROL 69,2544
    ULONG nLength;70,2590
    ULONG nInitialChars;71,2609
    ULONG dwCtrlWakeupMask;72,2634
    ULONG dwControlKeyState;73,2662
} CONSOLE_READCONSOLE_CONTROL, *PCONSOLE_READCONSOLE_CONTROL;PCONSOLE_READCONSOLE_CONTROL74,2691
typedef enum _FILE_INFO_BY_HANDLE_CLASS 77,2770
    FileBasicInfo,78,2812
    FileStandardInfo,79,2831
    FileNameInfo,80,2853
    FileRenameInfo,81,2871
    FileDispositionInfo,82,2891
    FileAllocationInfo,83,2916
    FileEndOfFileInfo,84,2940
    FileStreamInfo,85,2963
    FileCompressionInfo,86,2983
    FileAttributeTagInfo,87,3008
    FileIdBothDirectoryInfo,88,3034
    FileIdBothDirectoryRestartInfo,89,3063
    FileIoPriorityHintInfo,90,3099
    FileRemoteProtocolInfo,91,3127
    MaximumFileInfoByHandleClass92,3155
} FILE_INFO_BY_HANDLE_CLASS, *PFILE_INFO_BY_HANDLE_CLASS;PFILE_INFO_BY_HANDLE_CLASS93,3188
#define UNWIND_HISTORY_TABLE_SIZE 97,3310
typedef struct _UNWIND_HISTORY_TABLE_ENTRY 99,3348
    DWORD64 ImageBase;100,3393
    PRUNTIME_FUNCTION FunctionEntry;101,3416
} UNWIND_HISTORY_TABLE_ENTRY, *PUNWIND_HISTORY_TABLE_ENTRY;PUNWIND_HISTORY_TABLE_ENTRY102,3453
typedef struct _UNWIND_HISTORY_TABLE 104,3514
    DWORD Count;105,3553
    BYTE  LocalHint;106,3570
    BYTE  GlobalHint;107,3591
    BYTE  Search;108,3613
    BYTE  Once;109,3631
    DWORD64 LowAddress;110,3647
    DWORD64 HighAddress;111,3671
    UNWIND_HISTORY_TABLE_ENTRY Entry[Entry112,3696
} UNWIND_HISTORY_TABLE, *PUNWIND_HISTORY_TABLE;PUNWIND_HISTORY_TABLE113,3761
typedef struct _KNONVOLATILE_CONTEXT_POINTERS 115,3810
        PM128A FloatingContext[FloatingContext117,3870
            PM128A Xmm0;119,3923
            PM128A Xmm1;120,3948
            PM128A Xmm2;121,3973
            PM128A Xmm3;122,3998
            PM128A Xmm4;123,4023
            PM128A Xmm5;124,4048
            PM128A Xmm6;125,4073
            PM128A Xmm7;126,4098
            PM128A Xmm8;127,4123
            PM128A Xmm9;128,4148
            PM128A Xmm10;129,4173
            PM128A Xmm11;130,4199
            PM128A Xmm12;131,4225
            PM128A Xmm13;132,4251
            PM128A Xmm14;133,4277
            PM128A Xmm15;134,4303
        } DUMMYSTRUCTNAME;135,4329
    } DUMMYUNIONNAME;136,4356
        PDWORD64 IntegerContext[IntegerContext139,4391
            PDWORD64 Rax;141,4445
            PDWORD64 Rcx;142,4471
            PDWORD64 Rdx;143,4497
            PDWORD64 Rbx;144,4523
            PDWORD64 Rsp;145,4549
            PDWORD64 Rbp;146,4575
            PDWORD64 Rsi;147,4601
            PDWORD64 Rdi;148,4627
            PDWORD64 R8;149,4653
            PDWORD64 R9;150,4678
            PDWORD64 R10;151,4703
            PDWORD64 R11;152,4729
            PDWORD64 R12;153,4755
            PDWORD64 R13;154,4781
            PDWORD64 R14;155,4807
            PDWORD64 R15;156,4833
        } DUMMYSTRUCTNAME;157,4859
    } DUMMYUNIONNAME2;158,4886
} KNONVOLATILE_CONTEXT_POINTERS, *PKNONVOLATILE_CONTEXT_POINTERS;PKNONVOLATILE_CONTEXT_POINTERS160,4910
# define RTL_CRITICAL_SECTION_FLAG_NO_DEBUG_INFO 164,5032
__bcount(560,11494

win32/drwinapi/kernel32_sync.c,512
redirect_InitializeCriticalSection(42,1914
redirect_InitializeCriticalSectionAndSpinCount(57,2362
redirect_InitializeCriticalSectionEx(73,2746
redirect_DeleteCriticalSection(90,3140
redirect_EnterCriticalSection(99,3302
redirect_LeaveCriticalSection(112,3654
redirect_InterlockedCompareExchange 125,4006
redirect_InterlockedDecrement(136,4247
redirect_InterlockedExchange(145,4395
redirect_InterlockedIncrement(155,4569
redirect_WaitForSingleObject(164,4718
unit_test_drwinapi_kernel32_sync(190,5504

win32/drwinapi/ntdll_redir.c,1977
static strhash_table_t *ntdll_table;ntdll_table46,2031
static strhash_table_t *ntdll_win7_table;ntdll_win7_table47,2068
static const redirect_import_t redirect_ntdll[redirect_ntdll60,2784
#define REDIRECT_NTDLL_NUM 149,8826
static const redirect_import_t redirect_ntdll_win7[redirect_ntdll_win7154,9005
#define REDIRECT_NTDLL_WIN7_NUM 158,9174
ntdll_redir_init(162,9279
ntdll_redir_exit(195,10724
ntdll_redir_lookup(204,10922
redirect_RtlCreateHeap(235,11919
redirect_heap_call(251,12624
redirect_RtlDestroyHeap(273,13381
wrapped_dr_alloc(291,13990
wrapped_dr_free(309,14516
wrapped_dr_size(316,14663
redirect_RtlAllocateHeap(322,14774
redirect_RtlReAllocateHeap(339,15326
redirect_RtlFreeHeap(388,17256
redirect_RtlSizeHeap(406,17902
redirect_RtlValidateHeap(420,18301
redirect_RtlLockHeap(432,18642
redirect_RtlUnlockHeap(446,18937
redirect_RtlSetHeapInformation(460,19227
redirect_RtlFreeUnicodeString(475,19757
redirect_RtlFreeAnsiString(488,20150
redirect_RtlFreeOemString(501,20532
# define RTL_CRITICAL_SECTION_FLAG_NO_DEBUG_INFO 517,21015
# define RTL_CRITICAL_SECTION_FLAG_STATIC_INIT 520,21127
redirect_RtlInitializeCriticalSection(524,21211
redirect_RtlInitializeCriticalSectionAndSpinCount(530,21362
redirect_RtlInitializeCriticalSectionEx(537,21616
redirect_RtlDeleteCriticalSection(582,23473
redirect_NtCreateFile(610,24504
redirect_NtCreateKey(636,25536
redirect_NtMapViewOfSection(650,26055
redirect_NtOpenFile(674,27096
redirect_NtOpenKey(690,27654
redirect_NtOpenKeyEx(701,27945
redirect_NtOpenProcess(713,28330
redirect_NtOpenProcessToken(725,28738
redirect_NtOpenProcessTokenEx(735,29068
redirect_NtOpenThread(747,29521
redirect_NtOpenThreadToken(759,29919
redirect_NtOpenThreadTokenEx(771,30338
redirect_NtQueryAttributesFile(785,30882
redirect_NtQueryFullAttributesFile(793,31159
redirect_NtSetInformationFile(801,31459
redirect_NtSetInformationThread(815,32035
redirect_NtUnmapViewOfSection(827,32552

win32/drwinapi/ntdll_redir.h,33
#define _NTDLL_REDIR_H_ 37,1843

win32/drwinapi/rpcrt4_redir.c,345
static strhash_table_t *rpcrt4_table;rpcrt4_table46,2004
static const redirect_import_t redirect_rpcrt4[redirect_rpcrt448,2043
#define REDIRECT_RPCRT4_NUM 51,2168
rpcrt4_redir_init(54,2255
rpcrt4_redir_exit(72,2947
rpcrt4_redir_onload(78,3038
rpcrt4_redir_lookup(84,3108
redirect_UuidCreate 96,3363
unit_test_drwinapi_rpcrt4(123,4254

win32/drwinapi/rpcrt4_redir.h,34
#define _RPCRT4_REDIR_H_ 40,1918

win32/early_inject_helper1.c,73
#define WIN32_LEAN_AND_MEAN41,2034
__declspec(44,2084
DllMain(53,2359

win32/early_inject_helper2.c,73
#define WIN32_LEAN_AND_MEAN41,2033
__declspec(44,2083
DllMain(51,2233

win32/eventlog.c,1736
#define NONCE_LENGTH 47,2029
#define MAX_MESSAGE_SIZE 49,2054
typedef struct eventlog_state_t 52,2164
    HANDLE eventlog_pipe;53,2198
    HANDLE eventlog_completion;54,2224
    uint message_seq;55,2287
    char nonce[nonce56,2339
    mutex_t eventlog_mutex;57,2417
    char outbuf[outbuf61,2736
    size_t outlen;62,2771
    char buf[buf63,2790
    int request_length;64,2822
} eventlog_state_t;65,2846
set_event_source_registry_values(91,3988
init_registry_source(147,5981
#define MAX_SYSLOG_ARGS 208,8382
void os_syslog(210,8493
#define FIELD(238,9527
#define VARFIELD(246,9888
#define PADDING(255,10282
append_string(272,11030
#define HEADER_SIZE 289,11465
#define HEADER_OFFSET 290,11488
prepend_header(294,11535
#define EVENTLOG 310,12011
#define RPC_VERSION_BOGUS 317,12312
#define RPC_VERSION_5 318,12375
static char hello_message[hello_message322,12597
#define REPORT 381,15162
#define REGISTER_UNKNOWN_HEADER 383,15189
#define REPORT_UNKNOWN_HEADER 384,15240
#define DEREGISTER_UNKNOWN_HEADER 385,15289
#define EVENTLOG_NAMED_PIPE 390,15507
#define PRINT(395,15597
print_buffer_as_bytes 397,15669
#undef PRINT420,16236
#define HELLO_RESPONSE_LENGTH 424,16340
#define REGISTER_RESPONSE_LENGTH 426,16431
#define REPORT_RESPONSE_LENGTH 427,16467
eventlog_register(432,16569
#define REPORT_IN_LOG 487,18985
get_computer_name(550,21780
eventlog_report(590,23537
eventlog_deregister(720,29340
static eventlog_state_t *shared_eventlog_connection;shared_eventlog_connection766,31192
static eventlog_state_t temp_shared_eventlog_connection;768,31316
eventlog_alloc(772,31453
eventlog_init(809,33083
eventlog_fast_exit(847,34448
eventlog_slow_exit(861,34952
os_eventlog(882,35854

win32/gbop.h,635
#define GBOP_H43,1837
#define GBOP_DEFINE_KERNEL32_BASE_HOOKS(74,3064
#define GBOP_DEFINE_KERNEL32_MORE_HOOKS(113,5695
#define GBOP_DEFINE_WININET_BASE_HOOKS(166,9513
#define GBOP_DEFINE_MSVCRT_BASE_HOOKS(178,10255
#define GBOP_DEFINE_MSVCRT_MORE_HOOKS(182,10444
#define GBOP_DEFINE_WS2_32_BASE_HOOKS(224,13456
#define GBOP_DEFINE_WS2_32_MORE_HOOKS(233,13994
#define GBOP_DEFINE_USER32_BASE_HOOKS(245,14593
#define GBOP_DEFINE_SHELL32_BASE_HOOKS(258,15413
#define GBOP_DEFINE_NTDLL_MORE_HOOKS(280,16886
#define GBOP_ALL_HOOKS 303,18062
    GBOP_SET_NTDLL_BASE 321,18991
    GBOP_SET_NTDLL_BASE         = 0x1,x1321,18991

win32/inject.c,4484
#define WIN32_LEAN_AND_MEAN46,2163
# define GET_PROC_ADDR 60,2505
# define GET_PROC_ADDR 62,2551
#define DYNAMORIO_ENTRY 66,2651
# define display_error(73,2870
static ptr_uint_t addr_getprocaddr;79,3089
static ptr_uint_t addr_loadlibrarya;80,3125
static ptr_uint_t addr_debugbreak;82,3192
static bool inject_initialized 84,3234
inject_init(86,3279
#define SIZE_OF_LOAD_DYNAMO 104,3898
inject_into_thread(111,4096
    PUSHF 368,14987
    PUSHF                 = 0x9c,x9c368,14987
    POPF 369,15021
    POPF                  = 0x9d,x9d369,15021
    PUSHA 370,15055
    PUSHA                 = 0x60,x60370,15055
    POPA 371,15089
    POPA                  = 0x61,x61371,15089
    PUSH_EAX 372,15123
    PUSH_EAX              = 0x50,x50372,15123
    POP_EAX 373,15157
    POP_EAX               = 0x58,x58373,15157
    PUSH_ECX 374,15191
    PUSH_ECX              = 0x51,x51374,15191
    POP_ECX 375,15225
    POP_ECX               = 0x59,x59375,15225
    PUSH_IMM32 376,15259
    PUSH_IMM32            = 0x68,x68376,15259
    PUSH_IMM8 377,15293
    PUSH_IMM8             = 0x6a,x6a377,15293
    JMP_REL8 379,15328
    JMP_REL8              = 0xeb,xeb379,15328
    JMP_REL32 380,15362
    JMP_REL32             = 0xe9,xe9380,15362
    CALL_REL32 381,15396
    CALL_REL32            = 0xe8,xe8381,15396
    CALL_RM32 382,15430
    CALL_RM32             = 0xff,xff382,15430
    CALL_EAX_RM 383,15464
    CALL_EAX_RM           = 0xd0,xd0383,15464
    MOV_RM32_2_REG32 385,15499
    MOV_RM32_2_REG32      = 0x8b,x8b385,15499
    MOV_ESP_2_EAX_RM 386,15533
    MOV_ESP_2_EAX_RM      = 0xc4,xc4386,15533
    MOV_EAX_2_ECX_RM 387,15567
    MOV_EAX_2_ECX_RM      = 0xc8,xc8387,15567
    MOV_EAX_2_EDX_RM 388,15601
    MOV_EAX_2_EDX_RM      = 0xd0,xd0388,15601
    MOV_EAX_2_EAX_RM 389,15635
    MOV_EAX_2_EAX_RM      = 0xc0,xc0389,15635
    MOV_derefEAX_2_EAX_RM 390,15669
    MOV_derefEAX_2_EAX_RM = 0x00,x00390,15669
    MOV_deref_disp8_EAX_2_EAX_RM 391,15703
    MOV_deref_disp8_EAX_2_EAX_RM = 0x40,x40391,15703
    MOV_IMM8_2_RM8 392,15744
    MOV_IMM8_2_RM8        = 0xc6,xc6392,15744
    MOV_IMM32_2_RM32 393,15778
    MOV_IMM32_2_RM32      = 0xc7,xc7393,15778
    MOV_IMM_RM_ABS 394,15812
    MOV_IMM_RM_ABS        = 0x05,x05394,15812
    MOV_IMM_XAX 395,15846
    MOV_IMM_XAX           = 0xb8,xb8395,15846
    ADD_EAX_IMM32 397,15881
    ADD_EAX_IMM32         = 0x05,x05397,15881
    CMP_EAX_IMM32 399,15916
    CMP_EAX_IMM32         = 0x3d,x3d399,15916
    JZ_REL8 400,15950
    JZ_REL8               = 0x74,x74400,15950
    JNZ_REL8 401,15984
    JNZ_REL8              = 0x75,x75401,15984
    REX_W 404,16030
    REX_W                 = 0x48,x48404,16030
    REX_B 405,16064
    REX_B                 = 0x41,x41405,16064
    REX_R 406,16098
    REX_R                 = 0x44,x44406,16098
#define DEBUG_LOOP 410,16143
#define ASSERT_ROOM(412,16165
allocate_remote_code_buffer(431,16990
free_remote_code_buffer(490,19451
inject_gencode_at_ldr(497,19615
#define GET_PROC_ADDR_BAD_ADDR 523,20913
#define INSERT_INT(600,24369
#define INSERT_ADDR(605,24536
# define INSERT_PUSH_ALL_REG(610,24687
# define INSERT_PUSH_ALL_REG(636,25596
# define INSERT_POP_ALL_REG(641,25679
# define INSERT_POP_ALL_REG(667,26611
#define PUSH_IMMEDIATE(671,26681
#define PUSH_SHORT_IMMEDIATE(675,26774
# define PUSH_PTRSZ_IMMEDIATE(680,26897
# define PUSH_PTRSZ_IMMEDIATE(692,27387
#define MOV_ESP_TO_EAX(696,27461
# define MOV_EAX_TO_PARAM_0(703,27658
# define MOV_EAX_TO_PARAM_1(708,27843
# define MOV_EAX_TO_PARAM_2(713,28027
# define MOV_EAX_TO_PARAM_3(718,28211
# define MOV_TOS_TO_PARAM_0(723,28398
# define MOV_TOS_TO_PARAM_1(729,28615
# define MOV_TOS_TO_PARAM_2(735,28831
# define MOV_TOS_TO_PARAM_3(741,29047
#define ADD_TO_EAX(749,29311
#define ADD_IMM8_TO_ESP(754,29458
#define CMP_TO_EAX(760,29663
#define INSERT_REL32_ADDRESS(765,29810
# define CALL(773,30181
# define CALL(780,30431
#define PROT_IN_ECX 788,30762
#define CHANGE_PROTECTION(789,30829
#undef INSERT_INT990,40796
#undef PUSH_IMMEDIATE991,40814
#undef PUSH_SHORT_IMMEDIATE992,40836
#undef MOV_ESP_TO_EAX993,40864
#undef ADD_TO_EAX994,40886
#undef INSERT_REL32_ADDRESS995,40904
#undef CALL996,40932
#undef PROT_IN_ECX997,40944
#undef CHANGE_PROTECTION998,40963
#define APP 1007,41076
#define GDC 1008,41106
inject_gencode_earliest(1014,41302
inject_into_new_process(1202,49525

win32/inject_shared.c,2448
# undef assert64,2403
#define assert 67,2466
#  define display_warning 72,2704
#   undef ASSERT74,2760
#   define ASSERT(77,2804
#   define ASSERT(79,2891
#  define display_warning 82,3029
# define ASSERT(85,3127
# define display_error(86,3165
# define display_warning(87,3193
#define MAX_RUNVALUE_LENGTH 90,3231
# define VERBOSE 92,3333
# define VERBOSE 94,3358
    REGISTRY_DEFAULT,98,3400
    REGISTRY_32,100,3493
    REGISTRY_64,101,3555
} reg_platform_t;102,3611
ignore_assert(107,3741
report_dynamorio_problem(113,3826
notcore_mutex_lock(131,4506
notcore_mutex_unlock(139,4643
display_verbose_message(145,4706
double_strrchr(199,6935
wchar_to_char(212,7177
set_registry_parameter(242,8404
get_registry_parameter(271,9280
get_remote_process_ldr_status(365,13442
get_process_imgname_cmdline(400,14487
get_rununder_value(487,17629
#define DIRSEP 502,18081
#define ALT_DIRSEP 503,18101
double_wcsrchr(510,18212
w_get_short_name(523,18478
get_commandline_qualifier(556,19731
    QUALIFIED_FULL_NAME,619,21679
    QUALIFIED_SHORT_NAME,620,21705
    UNQUALIFIED_FULL_NAME,621,21731
    UNQUALIFIED_SHORT_NAME,622,21758
} qualified_name_type_t;623,21786
#define NAME_TYPE_IS_UNQUALIFIED(625,21812
#define NAME_TYPE_IS_SHORT(627,21938
commandline_qualifier_needed(646,22657
get_process_qualified_name(683,24346
get_own_qualified_name(778,28732
get_own_unqualified_name(793,29244
get_own_short_qualified_name(809,29803
get_own_short_unqualified_name(824,30306
get_subkey_parameter(844,31027
get_process_parameter_internal(895,33114
get_process_parameter(930,34423
get_parameter(938,34703
get_parameter_ex(946,34994
get_parameter_32(954,35214
get_parameter_64(962,35501
get_unqualified_parameter(972,35876
set_process_parameter(994,37011
get_parameter_from_registry(1027,38525
get_process_parameter_ex(1037,38893
get_process_parameter(1068,40170
get_parameter_64(1076,40379
is_nt_or_custom_safe_mode(1087,40664
is_windows_version_nt(1134,42793
is_windows_version_vista_plus(1144,43050
is_safe_mode(1154,43310
        MINIMAL 1160,43490
        NETWORK 1161,43511
systemwide_inject_enabled(1197,44749
check_commandline_match(1222,45770
systemwide_should_inject_common(1276,47841
systemwide_should_preinject_64(1369,51331
systemwide_should_inject(1376,51502
systemwide_should_preinject(1382,51664
check_for_run_once(1399,52372
test(1441,53964
nametest(1451,54216
main(1478,55122

win32/inject_shared.h,242
#define INJECT_SHARED_H44,1965
    INJECT_FALSE 48,2084
    INJECT_TRUE 49,2109
    INJECT_EXCLUDED 50,2134
    INJECT_EXPLICIT 51,2159
} inject_setting_mask_t;52,2183
# define double_tcsrchr 180,6335
# define double_tcsrchr 182,6380

win32/injector.c,2489
#define WIN32_LEAN_AND_MEAN53,2342
#define VERBOSE 73,2758
# define DO_VERBOSE(75,2788
# undef printf76,2813
# define VERBOSE_PRINT 77,2828
# define DO_VERBOSE(79,2864
# define VERBOSE_PRINT(80,2888
#define FP 82,2923
#define HANDLE_CONTROL_C 89,3208
static int limit;92,3254
static BOOL showmem;93,3289
static BOOL showstats;94,3310
static BOOL inject;95,3333
static BOOL force_injection;96,3353
static BOOL use_environment 97,3382
static const char *ops_param;ops_param102,3709
static double wallclock;103,3739
# undef assert110,3935
#define assert 113,3998
#undef ASSERT115,4113
#   define ASSERT(119,4188
#   define ASSERT(121,4274
# define display_error(124,4381
# define ASSERT(125,4420
display_error_helper(133,4589
internal_error(153,5212
# define FILENAME_LENGTH 156,5291
# define FILENAME_LENGTH 159,5371
display_error(172,5720
BOOL WINAPI HandlerRoutine(186,6022
typedef struct _dr_inject_info_t 199,6391
    PROCESS_INFORMATION pi;200,6426
    bool using_debugger_injection;201,6454
    char image_name[image_name202,6489
} dr_inject_info_t;203,6524
dr_inject_get_image_name(207,6569
dr_inject_get_process_handle(217,6763
dr_inject_get_process_id(227,6984
dr_inject_using_debug_key(237,7177
dr_inject_print_stats(247,7385
static BOOL created_product_reg_key;309,9742
static BOOL created_image_reg_key;310,9779
static HKEY image_name_key;311,9814
static HKEY product_name_key;312,9842
#define DO_ENV_VARS(321,10184
#define TEMP_CMD(330,10587
set_registry_from_env(340,10985
#undef TEMP_CMD342,11058
#define TEMP_CMD(343,11074
#undef TEMP_CMD 354,11374
#define TEMP_CMD(355,11394
#undef TEMP_CMD420,14290
#define TEMP_CMD(421,14306
unset_registry_from_env(448,15904
#undef TEMP_CMD455,16063
#define TEMP_CMD(456,16079
#undef DO_ENV_VARS487,17563
#undef TEMP_CMD488,17582
static HKEY debugger_key;500,17994
static TCHAR debugger_key_full_name[debugger_key_full_name501,18020
static TCHAR debugger_key_value[debugger_key_value502,18067
static DWORD debugger_key_value_size 503,18112
using_debugger_key_injection(508,18255
void unset_debugger_key_injection(546,19688
void restore_debugger_key_injection(562,20191
enum { MAX_CMDLINE 585,21080
get_image_name(588,21136
exe_is_right_bitwidth(606,21756
append_app_arg_and_space(643,22981
dr_inject_process_create(726,27051
dr_inject_process_inject(796,29575
dr_inject_process_run(877,32822
dr_inject_wait_for_child(889,33099
dr_inject_process_exit(902,33508

win32/loader.c,2596
# define IMAGE_ORDINAL_FLAG 79,3254
# define IMAGE_ORDINAL_FLAG 81,3309
static char systemroot[systemroot91,3641
static bool windbg_cmds_initialized;93,3680
typedef BOOL (WINAPI *dllmain_t)dllmain_t96,3752
static PEB *private_peb;private_peb128,4681
static bool private_peb_initialized 129,4706
static void *pre_fls_data;pre_fls_data131,4833
static void *pre_nt_rpc;pre_nt_rpc133,4951
static void *pre_nls_cache;pre_nls_cache135,5059
static bool swapped_to_app_peb;137,5146
typedef ULONG_PTR (NTAPI *ntdll_NtTickCount_t)ntdll_NtTickCount_t146,5470
static ntdll_NtTickCount_t ntdll_NtTickCount;147,5524
os_loader_init_prologue(158,5845
os_loader_init_epilogue(292,12330
os_loader_exit(308,12785
os_loader_thread_init_prologue(338,13841
os_loader_thread_init_epilogue(386,16067
os_loader_thread_exit(401,16550
get_private_peb(409,16709
should_swap_peb_pointer(425,17327
get_teb_field(432,17479
set_teb_field(444,17760
is_using_app_peb(457,18092
swap_peb_pointer_ex(504,19947
swap_peb_pointer(602,25023
restore_peb_pointer_for_thread(611,25293
os_should_swap_state(635,26504
os_using_app_state(641,26612
os_swap_context(651,26821
privload_add_areas(662,27113
privload_remove_areas(669,27275
privload_unmap_file(675,27410
privload_unload_imports(681,27494
privload_map_and_relocate(718,28801
privload_lookup_locate_and_load(822,32888
privload_load_private_library(842,33586
privload_load_finalized(856,34002
privload_process_imports(863,34182
privload_get_import_descriptor(963,38309
privload_process_one_import(993,39526
privload_call_entry(1102,44406
map_api_set_dll(1163,47020
privload_map_name(1318,55291
privload_locate_and_load(1337,55994
privload_init_search_paths(1407,58947
privload_disable_console_init(1439,60379
privload_redirect_setup(1600,67123
privload_redirect_imports(1613,67554
private_lib_handle_cb(1620,67788
# define SECURITY_COOKIE_INITIAL 1630,68008
# define SECURITY_COOKIE_INITIAL 1632,68066
#define SECURITY_COOKIE_16BIT_INITIAL 1634,68117
get_tick_count(1637,68180
privload_set_security_cookie(1652,68674
privload_os_finalize(1733,71705
add_mod_to_drmarker(1750,72211
#define WINDBG_ADD_PATH 1767,72900
privload_add_windbg_cmds(1787,73846
privload_add_windbg_cmds_post_init(1819,74937
typedef NTSTATUS (NTAPI *nt_protect_t)nt_protect_t1843,75971
static nt_protect_t bootstrap_ProtectVirtualMemory;1845,76115
bootstrap_protect_virtual_memory(1849,76215
bootstrap_tolower(1861,76610
bootstrap_strcmp(1870,76739
privload_bootstrap_get_export(1900,77430
privload_bootstrap_dynamorio_imports(1954,79324

win32/module.c,8613
typedef struct _version_info_t 55,2290
    version_number_t file_version;56,2323
    version_number_t product_version;57,2358
    wchar_t *company_name;company_name58,2396
    wchar_t *product_name;product_name59,2423
    wchar_t *original_filename;original_filename60,2450
} version_info_t;61,2482
typedef struct _pe_module_import_iterator_t 76,2986
    dr_module_import_t module_import;77,3032
    byte *mod_base;mod_base79,3111
    size_t mod_size;80,3131
    IMAGE_IMPORT_DESCRIPTOR *cur_module;cur_module84,3273
    IMAGE_IMPORT_DESCRIPTOR safe_module;85,3314
    byte *imports_end;imports_end86,3393
    bool hasnext;87,3473
} pe_module_import_iterator_t;88,3552
typedef struct _pe_symbol_import_iterator_t 90,3584
    dr_symbol_import_t symbol_import;91,3630
    dr_symbol_import_t next_symbol;92,3713
    byte *mod_base;mod_base94,3783
    dr_module_import_iterator_t *mod_iter;mod_iter95,3803
    IMAGE_IMPORT_DESCRIPTOR *cur_module;cur_module96,3884
    IMAGE_THUNK_DATA *cur_thunk;cur_thunk98,4023
    bool hasnext;99,4056
} pe_symbol_import_iterator_t;100,4135
static generic_table_t *section2file_table;section2file_table107,4341
#define INIT_HTABLE_SIZE_SECTION 108,4385
typedef struct _section_to_file_t 110,4447
    HANDLE section_handle;111,4483
    const char *file_path;file_path112,4510
} section_to_file_t;113,4556
section_to_file_free(116,4590
section_to_file_lookup(124,4875
section_to_file_add_common(138,5326
section_to_file_add_wide(163,6278
section_to_file_add(170,6501
section_to_file_remove(177,6715
typedef struct export_entry_t 201,7494
    app_pc  entry_point;202,7526
    char *export_name;export_name203,7596
} export_entry_t;204,7619
typedef struct module_info_t 214,7992
    app_pc start;215,8023
    app_pc end;216,8041
    char * module_name;217,8097
    size_t exports_size;218,8121
    uint   exports_num;219,8187
    export_entry_t *exports_table;exports_table221,8251
} module_info_t;239,9136
typedef struct module_info_vector_t 253,9607
    struct module_info_t *buf;buf254,9645
    int   capacity;255,9676
    int   length;256,9696
    mutex_t lock;259,9829
} module_info_vector_t;260,9847
print_module_list(267,10099
module_info_compare(289,10697
lookup_module_info(308,11273
#define INITIAL_MODULE_NUMBER 337,12143
module_info_create(346,12434
remove_module_info_vector(400,14304
remove_module_info(445,15704
module_cleanup(466,16346
module_info_exit(492,17180
export_entry_compare(499,17275
find_predecessor(512,17721
remove_export_duplicates(538,18272
print_symbolic_address(563,18801
add_module_info(658,23238
print_ldr_data(804,30120
static LDR_MODULE *DR_module;DR_module875,33553
hide_from_module_lists(898,34725
print_modules(1001,39336
print_modules_ldrlist_and_ourlist(1008,39611
print_modules_safe(1126,44704
check_for_unsupported_modules(1173,46646
#define DOS_HEADER(1225,48825
#define NT_HEADER(1226,48880
#define VERIFY_DOS_HEADER(1229,49029
#define VERIFY_NT_HEADER(1234,49246
on_subset_of_pages(1246,49825
is_readable_pe_base(1253,50039
get_image_section_unpadded_size(1284,51381
get_image_section_size(1310,52925
get_image_section_map_size(1322,53497
get_image_section_file_offs(1342,54674
print_module_section_info(1351,55058
is_in_executable_file_section(1408,57643
module_pc_section_lookup(1536,64051
is_range_in_code_section(1550,64728
is_in_code_section(1563,65409
is_in_dot_data_section(1575,65940
is_in_xdata_section(1588,66572
is_in_any_section(1612,67697
get_executable_segment(1623,68154
is_mapped_as_image(1636,68728
module_get_nth_segment(1657,69412
module_get_header_size(1670,69856
get_named_section_bounds(1680,70126
get_IAT_section_bounds(1696,70664
is_IAT(1711,71256
is_in_IAT(1734,72043
get_module_entry(1746,72327
get_module_base(1767,73267
get_module_preferred_base(1783,73784
in_same_module(1801,74391
get_dll_short_name(1819,75170
get_all_module_short_names_uncached(1864,77240
get_module_short_name_uncached(2019,83911
get_module_short_name(2042,84879
get_module_preferred_base_delta(2056,85444
get_ldr_module_by_pc(2074,85997
get_module_name(2142,88539
get_module_base_reloc(2155,88916
get_module_characteristics(2225,91315
get_module_cor20_header(2245,92026
module_has_cor20_header(2309,94304
get_module_magic(2319,94566
module_is_32bit(2330,94816
module_is_64bit(2336,94939
is_module_patch_region(2353,95646
#define IMAGE_REL_BASED_TYPE(2475,101911
#define IMAGE_REL_BASED_OFFSET_MASK 2476,101960
#define IMAGE_REL_BASED_OFFSET(2477,102004
process_one_relocation(2494,102701
add_SEH_address(2597,107003
add_SEH_to_rct_table(2616,107759
rct_add_rip_rel_addr(2808,117521
rct_add_exports(2868,120300
find_relocation_references(2986,125669
find_address_references_by_region(3149,132766
add_rct_module(3196,134894
rct_analyze_module_at_load(3428,146802
rct_analyze_module_at_violation(3460,148130
rct_process_module_mmap(3519,150727
rct_is_exported_function(3688,158740
os_modules_init(3717,159619
os_modules_exit(3735,160261
free_module_names(3741,160356
os_module_area_reset(3757,160910
get_module_info_pe(3812,163160
os_module_area_init(3878,165944
get_module_preferred_base_safe(3983,170977
os_get_module_info(4015,172162
os_get_module_info_all_names(4063,174042
os_module_get_rct_htable(4133,176704
os_module_store_IAT_code(4145,176961
bool os_module_cmp_IAT_code(4164,177722
module_area_free_IAT(4201,179471
bool os_module_free_IAT_code(4220,180124
module_apply_relocations(4249,181114
typedef struct reloc_iterator_t 4397,187539
    app_pc relocs;4398,187573
    app_pc relocs_end;4399,187639
    app_pc relocs_block_end;4400,187702
    uint rva_page;4401,187768
    app_pc module_base;4402,187823
} reloc_iterator_t;4421,188786
module_reloc_iterator_next_block_internal(4424,188819
module_reloc_iterator_start(4455,190113
module_reloc_iterator_next(4524,192745
module_make_writable(4611,196186
module_restore_permissions(4642,197521
module_file_relocatable(4665,198274
module_rebase(4728,201069
module_dump_pe_file(4824,204635
ensure_section_readable(4937,209549
restore_unreadable_section(4979,211321
module_region_compare(5027,213198
module_pe_section_compare(5044,213936
aslr_compare_header(5137,218249
module_contents_compare(5248,222777
#define CHECK_SAFE_READ(5462,231916
#define GET_FOLLOWING_ADDRESS(5473,232542
get_resource_directory_entries(5476,232637
get_module_resource_directory(5482,232812
get_resource_directory_entry_by_id(5539,235343
get_module_resource_version_data(5583,237071
typedef struct ver_rsrc_header 5776,246007
    size_t length;5777,246040
    size_t value_length;5778,246094
    uint type;5779,246150
    wchar_t *key;key5780,246165
    size_t key_length;5781,246183
} ver_rsrc_header_t;5782,246249
typedef struct vs_version_info 5783,246270
    VS_FIXEDFILEINFO *info;info5784,246303
    void *string_or_var_info;string_or_var_info5785,246350
} vs_version_info_t;5789,246636
typedef struct string_file_info 5790,246657
    size_t size;5791,246691
    void *string_table;string_table5792,246751
} string_file_info_t;5793,246807
typedef struct string_table 5794,246829
    size_t size;5795,246859
    wchar_t *lang;lang5796,246913
    void *string;string5797,246958
} string_table_t;5798,247007
typedef struct rsrc_string 5799,247025
    size_t key_length;5800,247054
    size_t value_length;5801,247120
    wchar_t *key;key5802,247188
    wchar_t *value;value5803,247206
} rsrc_string_t;5804,247226
#define RSRC_TYPE_STRING 5807,247321
#define RSRC_TYPE_BINARY 5808,247348
#define RSRC_ALIGNMENT 5811,247426
read_version_struct_header(5821,247951
read_vs_version_info(5886,250535
read_string_or_var_info(5934,252473
read_string_table(6009,255605
read_rsrc_string(6058,257578
get_module_resource_version_info(6128,260768
get_module_company_name(6243,265998
get_module_original_filename(6260,266602
get_loader_lock_owner(6277,267180
get_shared_lib_name(6286,267373
os_module_has_dynamic_base(6292,267451
safe_read_cur_module(6306,267825
dr_module_import_iterator_start(6328,268643
dr_module_import_iterator_hasnext(6356,269627
dr_module_import_iterator_next(6363,269850
dr_module_import_iterator_stop(6385,270738
pe_symbol_import_iterator_read_thunk(6397,271113
pe_symbol_import_iterator_first_thunk(6424,272103
pe_symbol_import_iterator_next_module(6442,272700
dr_symbol_import_iterator_start(6462,273422
dr_symbol_import_iterator_hasnext(6496,274541
dr_symbol_import_iterator_next(6503,274764
dr_symbol_import_iterator_stop(6527,275647

win32/module.h,750
#define MODULE_H35,1769
#define OS_IMAGE_READ 42,1963
#define OS_IMAGE_WRITE 43,2007
#define OS_IMAGE_EXECUTE 44,2052
# define IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE 47,2146
typedef struct _os_module_data_t 50,2208
    app_pc preferred_base;51,2243
    uint checksum;52,2318
    uint timestamp;53,2379
    size_t module_internal_size;54,2442
    size_t code_size;56,2533
    version_number_t file_version;59,2632
    version_number_t product_version;60,2667
    char *company_name;company_name61,2705
    char *product_name;product_name62,2729
    HANDLE noclobber_section_handle;73,3198
    rct_module_table_t rct_table[rct_table87,3736
    byte *iat_code;iat_code94,3981
    size_t iat_len;95,4001
} os_module_data_t;96,4021

win32/module_shared.c,1520
# define ASSERT(47,2225
# define ASSERT_NOT_REACHED(48,2244
# define ASSERT_NOT_IMPLEMENTED(49,2274
# define DODEBUG(50,2309
# define DOCHECK(51,2329
# define DECLARE_NEVERPROT_VAR(52,2352
# define ALIGN_BACKWARD(53,2412
# define PAGE_SIZE 54,2488
# undef strcasecmp74,3120
# define strcasecmp 75,3139
# define wcscasecmp 76,3168
# undef TRY_EXCEPT_ALLOW_NO_DCONTEXT77,3197
# define TRY_EXCEPT_ALLOW_NO_DCONTEXT(78,3234
# undef ASSERT_OWN_NO_LOCKS79,3293
# define ASSERT_OWN_NO_LOCKS(80,3321
# undef ASSERT_CURIOSITY81,3384
# define ASSERT_CURIOSITY(82,3409
# define convert_data_to_function(88,3725
# undef LOG 89,3791
# define LOG(90,3832
is_readable_without_exception(108,4623
get_module_exports_directory_common(146,6281
get_module_exports_directory_check_common(224,9491
get_proc_address_common(279,12420
get_module_exports_directory(439,19409
get_module_exports_directory_check(446,19627
get_proc_address(455,19947
get_proc_address_ex(464,20238
get_proc_address_by_ordinal(471,20497
get_proc_address_resolve_forward(479,20763
get_ldr_module_by_name(538,23575
typedef struct ALIGN_VAR(591,25758
typedef struct ALIGN_VAR(601,26012
typedef struct ALIGN_VAR(614,26464
typedef void (*void_func_t)void_func_t633,27014
get_own_x64_peb(651,27531
get_ldr_data_64(667,27867
get_ldr_module_64(680,28244
get_module_handle_64(733,30627
get_proc_address_64(744,30906
load_library_64(755,31273
free_library_64(835,34599
thread_get_context_64(850,35051
thread_set_context_64(864,35519

win32/native_pe.c,114
native_module_init(41,1834
native_module_exit(47,1887
native_module_hook(53,1940
native_module_unhook(59,2043

win32/ntdll.c,11140
# define ASSERT(45,2039
# define ASSERT_CURIOSITY(46,2058
# define ASSERT_NOT_REACHED(47,2087
# define ASSERT_NOT_IMPLEMENTED(48,2117
# define DODEBUG(49,2152
# define DOCHECK(50,2172
# define DEBUG_DECLARE(51,2195
# define INVALID_FILE 54,2411
# define snprintf 55,2454
# undef ASSERT_OWN_NO_LOCKS68,2872
# define ASSERT_OWN_NO_LOCKS(69,2900
# define VERBOSE 88,3501
# define VERBOSE 90,3526
# define NTPRINT(96,3677
# define NTPRINT(98,3742
uint context_xstate 102,3796
bool avx_supported 103,3821
# define GET_SYSCALL(108,4070
# define GET_RAW_SYSCALL 109,4138
# define NT_SYSCALL(110,4175
# define NTLOG(111,4231
# define NTLOG 113,4257
    DR_SYSCALL_INT2E,136,5527
    DR_SYSCALL_SYSENTER,137,5549
    DR_SYSCALL_SYSCALL,138,5574
    DR_SYSCALL_WOW64,139,5598
} dr_which_syscall_t;140,5620
# define GET_RAW_SYSCALL(146,5830
# define GET_SYSCALL(151,6061
# define NT_RAW_SYSCALL(171,7072
# define NT_SYSCALL(188,8479
#  define SYSNUM_OFFS 195,8755
#  define SYSNUM_OFFS 197,8786
# define CHECK_SYSNUM_AT(199,8818
# define ALLOW_HOOKER(204,9118
# define TEB_TLS64_OFFSET 220,9674
# define TEB_TLS64_OFFSET 222,9713
#undef CreateFile315,13669
typedef struct _context_chunk_t 351,15072
    LONG offset;352,15106
    DWORD length;353,15123
} context_chunk_t;354,15141
typedef struct _context_ex_t 357,15215
    context_chunk_t all;358,15246
    context_chunk_t legacy;359,15271
    context_chunk_t xstate;360,15299
} context_ex_t;361,15327
typedef int (WINAPI *ntdll_RtlGetExtendedContextLength_t)ntdll_RtlGetExtendedContextLength_t367,15537
typedef int (WINAPI *ntdll_RtlInitializeExtendedContext_t)ntdll_RtlInitializeExtendedContext_t368,15610
typedef CONTEXT* (WINAPI *ntdll_RtlLocateLegacyContext_t)ntdll_RtlLocateLegacyContext_t370,15706
ntdll_RtlGetExtendedContextLength_t ntdll_RtlGetExtendedContextLength 371,15788
ntdll_RtlInitializeExtendedContext_t ntdll_RtlInitializeExtendedContext 372,15868
ntdll_RtlLocateLegacyContext_t ntdll_RtlLocateLegacyContext 373,15948
typedef NTSTATUS (WINAPI *NtGetNextThread_t)NtGetNextThread_t377,16158
NtGetNextThread_t NtGetNextThread;383,16592
uint sysenter_tls_offset 393,16919
static bool nt_wrappers_intercepted 397,17226
syscalls_init_options_read(400,17276
syscalls_init(416,17850
use_ki_syscall_routines(568,24980
nt_get_context_extended_functions(585,25782
nt_init_dynamic_syscall_wrappers(603,26558
ntdll_init(610,26739
ntdll_exit(628,27377
query_thread_info(638,27549
query_seg_descriptor(652,28050
query_win32_start_addr(669,28673
query_system_info(683,29096
get_thread_id(703,29745
get_process_id(709,29842
get_last_error(715,29933
set_last_error(721,30002
get_stderr_handle(728,30116
get_stdout_handle(737,30292
get_stdin_handle(746,30469
is_thread_exited(755,30657
thread_id_from_handle(801,32677
query_process_info(813,32971
process_id_from_handle(827,33416
process_id_from_thread_handle(839,33704
process_handle_from_id(850,33961
thread_handle_from_id(871,34555
get_peb(898,35307
get_own_peb(909,35513
get_teb(926,36017
static app_pc ntdll_base;936,36222
get_ntdll_base(939,36256
set_ntdll_base(954,36696
is_in_ntdll(962,36825
context_ymmh_saved_area(977,37212
context_to_mcontext(1021,39041
mcontext_to_context(1083,41436
# define HEX(1147,44107
# define RAW(1148,44131
get_own_context_integer_control(1188,45851
get_own_context(1210,46824
#define TLS_SPAREBYTES_SLOTS 1231,47627
static bool alt_tls_spare_taken[alt_tls_spare_taken1233,47736
# define TLS_POSTTEB_SLOTS 1235,47802
static bool alt_tls_post_taken[alt_tls_post_taken1236,47832
# define TLS_POSTTEB_BASE_OFFS 1238,47930
tls_exit(1242,48029
alt_tls_acquire_helper(1251,48142
alt_tls_acquire(1294,49714
alt_tls_release_helper(1324,50886
alt_tls_release(1339,51302
tls_segment_offs(1366,52224
tls_find_free_block_sequence(1379,52692
tls_mark_taken_block_sequence(1459,55712
tls_alloc_helper(1477,56432
tls_alloc(1704,66618
tls_calloc(1715,66978
tls_free_helper(1722,67185
tls_free(1795,70269
tls_cfree(1801,70362
get_process_mem_stats(1810,70586
get_process_mem_quota(1822,70939
get_process_handle_count(1834,71290
get_process_load(1844,71555
is_wow64_process(1869,72429
nt_get_drive_map(1903,73604
nt_remote_allocate_virtual_memory(1914,73940
nt_remote_free_virtual_memory(1939,74930
nt_allocate_virtual_memory(1952,75351
nt_commit_virtual_memory(1962,75703
nt_decommit_virtual_memory(1980,76361
nt_free_virtual_memory(1996,76944
protect_virtual_memory(2012,77560
nt_remote_protect_virtual_memory(2025,78001
nt_remote_query_virtual_memory(2042,78687
query_virtual_memory(2056,79265
get_mapped_file_name(2078,79970
nt_raw_read_virtual_memory(2102,80910
nt_read_virtual_memory(2117,81532
nt_raw_write_virtual_memory(2125,81834
nt_write_virtual_memory(2140,82398
nt_continue(2149,82748
nt_get_context(2158,82981
nt_set_context(2182,84061
nt_thread_suspend(2192,84385
nt_thread_resume(2207,84989
nt_thread_iterator_next(2218,85382
nt_terminate_thread(2228,85673
nt_terminate_process(2243,86277
nt_terminate_process_for_app(2258,86872
am_I_sole_thread(2267,87176
check_sole_thread(2277,87446
nt_create_and_set_timer(2287,87601
        NotificationTimer,2292,87714
        SynchronizationTimer2293,87741
nt_sleep(2319,88743
nt_yield(2331,89080
get_section_address(2338,89168
get_section_attributes(2354,89665
nt_raw_close(2381,90584
close_handle(2389,90716
duplicate_handle(2396,90825
nt_get_handle_access_rights(2421,91870
nt_get_object_name(2435,92327
wchar_to_unicode(2446,92699
char_to_unicode(2460,93112
char_to_ansi(2467,93283
query_full_attributes_file(2479,93633
nt_query_value_key(2498,94184
reg_create_key(2517,95025
reg_open_key(2541,95734
reg_close_key(2570,96575
reg_delete_key(2577,96644
reg_query_value(2598,97424
reg_set_key_value(2640,98775
reg_set_dword_key_value(2659,99368
reg_flush_key(2678,100007
reg_enum_key(2700,100754
reg_enum_value(2740,102186
env_get_value(2771,103214
get_current_user_token(2793,104026
get_primary_user_token(2820,104811
get_primary_owner_token(2845,105463
get_current_user_SID(2868,106078
get_process_primary_SID(2896,106906
get_sd_pointers(2919,107458
get_owner_sd(2964,109164
initialize_security_descriptor(2984,109665
set_owner_sd(2998,110171
length_sid(3027,111092
equal_sid(3035,111248
get_application_name(3069,112298
get_application_short_name(3081,112575
get_application_short_unqualified_name(3093,112900
get_application_pid(3106,113334
get_process_param_buf(3120,113631
get_application_cmdline(3147,114687
query_time_100ns(3155,114896
query_time_millis(3170,115422
query_time_seconds(3177,115559
convert_100ns_to_system_time(3190,116001
convert_system_time_to_100ns(3206,116554
query_system_time(3223,117060
set_primary_user_owner(3234,117330
nt_create_file(3269,118698
create_file(3321,120855
nt_open_file(3363,122802
nt_delete_file(3383,123360
nt_flush_file_buffers(3423,124896
read_file(3434,125155
write_file(3461,126183
close_file(3489,127333
create_iocompletion(3495,127402
typedef struct _FILE_PIPE_INFORMATION 3518,128196
    ULONG ReadModeMessage;3519,128260
    ULONG WaitModeBlocking;3520,128287
} FILE_PIPE_INFORMATION, *PFILE_PIPE_INFORMATION;PFILE_PIPE_INFORMATION3521,128315
typedef struct _FILE_COMPLETION_INFORMATION 3523,128366
    HANDLE IoCompletionHandle;3524,128436
    ULONG CompletionKey;3525,128467
} FILE_COMPLETION_INFORMATION, *PFILE_COMPLETION_INFORMATION;PFILE_COMPLETION_INFORMATION3526,128492
open_pipe(3530,128622
#define STATUS_SHOW_MESSAGEBOX_UNDOCUMENTED 3615,132844
nt_messagebox(3618,132916
nt_raise_exception(3661,134561
nt_create_event(3677,135012
nt_close_event(3703,135777
nt_wait_event_with_timeout(3709,135852
nt_set_event(3723,136228
nt_clear_event(3749,137148
nt_signal_and_wait(3763,137400
nt_query_performance_counter(3782,138043
#define CTL_CODE(3800,138638
#define METHOD_BUFFERED 3805,138883
#define METHOD_IN_DIRECT 3806,138925
#define METHOD_OUT_DIRECT 3807,138967
#define METHOD_NEITHER 3808,139009
#define FILE_READ_ACCESS 3811,139100
#define FILE_WRITE_ACCESS 3812,139163
#define FSCTL_PIPE_TRANSCEIVE 3814,139227
static bool do_once_nt_pipe_transceive 3819,139460
nt_pipe_transceive(3828,139692
typedef struct _THREAD_IMPERSONATION_INFORMATION 3934,144651
    HANDLE ThreadImpersonationToken;3935,144702
} THREAD_IMPERSONATION_INFORMATION, *PTHREAD_IMPERSONATION_INFORMATION;PTHREAD_IMPERSONATION_INFORMATION3936,144739
get_thread_impersonation_token(3942,144903
set_thread_impersonation_token(3960,145332
nt_create_profile(3983,145960
nt_set_profile_interval(4011,146925
nt_query_profile_interval(4025,147244
nt_start_profile(4042,147604
nt_stop_profile(4054,147804
typedef struct _PORT_MESSAGE 4070,148155
    USHORT DataSize;4071,148186
    USHORT MessageSize;4072,148207
    USHORT MessageType;4073,148231
    USHORT VirtualRangesOffset;4074,148255
    CLIENT_ID ClientId;4075,148287
    ULONG MessageId;4076,148311
    ULONG SectionSize;4077,148332
} PORT_MESSAGE, *PPORT_MESSAGE;PPORT_MESSAGE4079,148376
typedef struct _CSRSS_MESSAGE 4081,148409
    ULONG Unknown1;4082,148441
    ULONG Opcode;4083,148461
    ULONG Status;4084,148479
    ULONG Unknown2;4085,148497
} CSRSS_MESSAGE, *PCSRSS_MESSAGE;PCSRSS_MESSAGE4086,148517
inform_csrss(4092,148685
        PORT_MESSAGE PortMessage;4110,149724
        CSRSS_MESSAGE CsrssMessage;4112,149808
        PROCESS_INFORMATION ProcessInformation;4114,149896
        CLIENT_ID Debugger;4115,149944
        ULONG CreationFlags;4116,149972
        ULONG VdmInfo[VdmInfo4117,150001
        ULONG Unknown[Unknown4121,150205
copy_environment(4147,151146
create_process_parameters(4172,151866
create_process(4218,154101
create_thread_common(4342,159348
create_thread(4441,163606
create_thread_have_stack(4485,165654
load_library(4536,168591
free_library(4563,169542
get_module_handle(4586,170445
#define LDR_GET_DLL_HANDLE_ARG1 4595,170845
nt_create_object_directory(4618,171704
nt_initialize_shared_directory(4674,174022
nt_open_object_directory(4742,176651
nt_close_object_directory(4788,178559
nt_get_symlink_target(4799,178883
nt_create_section(4874,182096
nt_open_section(4926,184008
are_mapped_files_the_same(4957,185110
nt_create_module_file(5005,186839
nt_query_file_info(5030,187861
nt_set_file_info(5054,188604
nt_query_volume_info(5082,189440
nt_query_security_object(5122,191069
initialize_known_SID(5159,192686
nt_initialize_context(5180,193307
nt_raw_CreateFile(5276,197051
nt_raw_OpenFile(5311,198159
nt_raw_OpenKey(5336,198861
nt_raw_OpenKeyEx(5355,199326
nt_raw_OpenProcessTokenEx(5378,200021
nt_raw_OpenThread(5399,200638
nt_raw_OpenThreadTokenEx(5420,201196
nt_raw_QueryAttributesFile(5443,201893
nt_raw_SetInformationFile(5460,202354
nt_raw_SetInformationThread(5483,203054
nt_raw_UnmapViewOfSection(5504,203711
nt_raw_MapViewOfSection(5555,205450
nt_raw_OpenProcess(5588,206532
nt_raw_QueryFullAttributesFile(5609,207098
nt_raw_CreateKey(5626,207582
nt_raw_OpenThreadToken(5653,208342
nt_raw_OpenProcessToken(5674,208911

win32/ntdll.h,44699
#define _NTDLL_H_ 48,2221
#define WIN32_LEAN_AND_MEAN50,2242
#define GET_NTDLL(74,3151
#define NT_CURRENT_PROCESS 88,3772
#define NT_CURRENT_THREAD 89,3829
typedef struct ALIGN_VAR(92,3897
#define DIRECTORY_QUERY 103,4192
#define DIRECTORY_TRAVERSE 104,4241
#define DIRECTORY_CREATE_OBJECT 105,4290
#define DIRECTORY_CREATE_SUBDIRECTORY 106,4339
#define DIRECTORY_ALL_ACCESS 107,4388
typedef struct _PEB_LDR_DATA 110,4497
    ULONG Length;111,4530
    BOOLEAN Initialized;112,4548
    PVOID SsHandle;113,4573
    LIST_ENTRY InLoadOrderModuleList;114,4593
    LIST_ENTRY InMemoryOrderModuleList;115,4631
    LIST_ENTRY InInitializationOrderModuleList;116,4671
} PEB_LDR_DATA, *PPEB_LDR_DATA;PPEB_LDR_DATA117,4719
typedef struct _LDR_MODULE 122,4914
    LIST_ENTRY InLoadOrderModuleList;123,4943
    LIST_ENTRY InMemoryOrderModuleList;124,4981
    LIST_ENTRY InInitializationOrderModuleList;125,5021
    PVOID BaseAddress;126,5069
    PVOID EntryPoint;127,5092
    ULONG SizeOfImage;128,5114
    UNICODE_STRING FullDllName;129,5137
    UNICODE_STRING BaseDllName;130,5169
    ULONG Flags;131,5201
    SHORT LoadCount;132,5218
    SHORT TlsIndex;133,5239
    LIST_ENTRY HashTableEntry;134,5259
    ULONG TimeDateStamp;136,5448
} LDR_MODULE, *PLDR_MODULE;PLDR_MODULE137,5473
# define OPT_HDR(151,6141
# define OPT_HDR_P(152,6207
# define OPT_HDR_BASE(153,6284
# define OPT_HDR(158,6579
# define OPT_HDR_P(159,6648
enum {MAX_MODULE_LIST_INFINITE_LOOP_THRESHOLD MAX_MODULE_LIST_INFINITE_LOOP_THRESHOLD163,6784
#define LDR_IMAGE_IS_DLL 168,6960
#define LDR_LOAD_IN_PROGRESS 169,7011
#define LDR_UNLOAD_IN_PROGRESS 170,7062
#define LDR_NO_DLL_CALLS 171,7113
#define LDR_PROCESS_ATTACHED 172,7164
#define LDR_MODULE_REBASED 173,7215
typedef struct _PEBLOCKROUTINE *PPEBLOCKROUTINE;PPEBLOCKROUTINE175,7267
typedef struct _PEB_FREE_BLOCK *PPEB_FREE_BLOCK;PPEB_FREE_BLOCK176,7316
typedef PVOID *PPVOID;PPVOID177,7365
typedef struct _RTL_BITMAP 179,7389
    ULONG  SizeOfBitMap;180,7418
    LPBYTE BitMapBuffer;181,7478
} RTL_BITMAP, *PRTL_BITMAP;PRTL_BITMAP182,7556
typedef const RTL_BITMAP *PCRTL_BITMAP;PCRTL_BITMAP183,7584
typedef struct _PEB 189,7777
    BOOLEAN                      InheritedAddressSpace;190,7863
    BOOLEAN                      ReadImageFileExecOptions;191,7949
    BOOLEAN                      BeingDebugged;192,8035
    BOOLEAN                      ImageUsesLargePages:ImageUsesLargePages195,8213
    BOOLEAN                      SpareBits:SpareBits196,8299
    BOOLEAN                      ImageUsesLargePages;198,8391
    HANDLE                       Mutant;200,8484
    PVOID                        ImageBaseAddress;201,8570
    PPEB_LDR_DATA                LoaderData;202,8656
    PRTL_USER_PROCESS_PARAMETERS ProcessParameters;203,8742
    PVOID                        SubSystemData;204,8828
    PVOID                        ProcessHeap;205,8914
    PRTL_CRITICAL_SECTION        FastPebLock;206,9000
    PVOID                        AtlThunkSListPtr;209,9135
    PVOID                        SparePtr2;210,9221
    PPEBLOCKROUTINE              FastPebLockRoutine;213,9341
    PPEBLOCKROUTINE              FastPebUnlockRoutine;214,9427
    DWORD                        EnvironmentUpdateCount;216,9520
    PVOID                        KernelCallbackTable;217,9606
    DWORD                        SystemReserved[SystemReserved220,9741
    DWORD                        SpareUlong;221,9827
    DWORD                        EvengLogSection;224,9947
    DWORD                        EventLog;225,10033
    PPEB_FREE_BLOCK              FreeList;227,10126
    DWORD                        TlsExpansionCounter;228,10212
    PRTL_BITMAP                  TlsBitmap;229,10298
    DWORD                        TlsBitmapBits[TlsBitmapBits230,10384
    PVOID                        ReadOnlySharedMemoryBase;231,10470
    PVOID                        ReadOnlySharedMemoryHeap;232,10556
    PPVOID                       ReadOnlyStaticServerData;233,10642
    PVOID                        AnsiCodePageData;234,10728
    PVOID                        OemCodePageData;235,10814
    PVOID                        UnicodeCaseTableData;236,10900
    DWORD                        NumberOfProcessors;237,10986
    DWORD                        NtGlobalFlag;238,11072
    LARGE_INTEGER                CriticalSectionTimeout;239,11158
    ptr_uint_t                   HeapSegmentReserve;240,11244
    ptr_uint_t                   HeapSegmentCommit;241,11330
    ptr_uint_t                   HeapDeCommitTotalFreeThreshold;242,11416
    ptr_uint_t                   HeapDeCommitFreeBlockThreshold;243,11502
    DWORD                        NumberOfHeaps;244,11588
    DWORD                        MaximumNumberOfHeaps;245,11674
    PPVOID                       ProcessHeaps;246,11760
    PVOID                        GdiSharedHandleTable;247,11846
    PVOID                        ProcessStarterHelper;248,11932
    DWORD                        GdiDCAttributeList;249,12018
    PRTL_CRITICAL_SECTION        LoaderLock;250,12104
    DWORD                        OSMajorVersion;251,12190
    DWORD                        OSMinorVersion;252,12276
    WORD                         OSBuildNumber;253,12362
    WORD                         OSCSDVersion;254,12448
    DWORD                        OSPlatformId;255,12534
    DWORD                        ImageSubsystem;256,12620
    DWORD                        ImageSubsystemMajorVersion;257,12706
    DWORD                        ImageSubsystemMinorVersion;258,12792
    ptr_uint_t                   ImageProcessAffinityMask;259,12878
    DWORD                        GdiHandleBuffer[GdiHandleBuffer261,12975
    DWORD                        GdiHandleBuffer[GdiHandleBuffer263,13067
    PVOID                        PostProcessInitRoutine;265,13160
    PVOID                        TlsExpansionBitmap;266,13246
    DWORD                        TlsExpansionBitmapBits[TlsExpansionBitmapBits267,13332
    DWORD                        SessionId;268,13418
    ULARGE_INTEGER               AppCompatFlags;269,13504
    ULARGE_INTEGER               AppCompatFlagsUser;270,13590
    PVOID                        pShimData;271,13676
    PVOID                        AppCompatInfo;272,13762
    UNICODE_STRING               CSDVersion;273,13848
    PVOID                        ActivationContextData;274,13934
    PVOID                        ProcessAssemblyStorageMap;275,14020
    PVOID                        SystemDefaultActivationContextData;276,14106
    PVOID                        SystemAssemblyStorageMap;277,14194
    ptr_uint_t                   MinimumStackCommit;278,14280
    PPVOID                       FlsCallback;279,14366
    LIST_ENTRY                   FlsListHead;280,14452
    PVOID                        FlsBitmap;281,14538
    DWORD                        FlsBitmapBits[FlsBitmapBits282,14624
    DWORD                        FlsHighIndex;283,14710
    PVOID                        WerRegistrationData;284,14796
    PVOID                        WerShipAssertPtr;285,14882
    PVOID                        pUnused;286,14968
    PVOID                        pImageHeaderHash;287,15054
        ULONG                    TracingFlags;289,15152
            ULONG                HeapTracingEnabled:HeapTracingEnabled291,15255
            ULONG                CritSecTracingEnabled:CritSecTracingEnabled292,15341
            ULONG                LibLoaderTracingEnabled:LibLoaderTracingEnabled293,15427
            ULONG                SpareTracingBits:SpareTracingBits294,15513
    ULONG64                      CsrServerReadOnlySharedMemoryBase;297,15617
} PEB, *PPEB;PPEB298,15703
# define _W64301,15731
typedef _W64 long LONG_PTR,304,15764
typedef _W64 long LONG_PTR, *PLONG_PTR;PLONG_PTR304,15764
typedef _W64 unsigned long ULONG_PTR,305,15804
typedef _W64 unsigned long ULONG_PTR, *PULONG_PTR;PULONG_PTR305,15804
typedef ULONG KAFFINITY;306,15855
typedef LONG KPRIORITY;308,15887
typedef struct _KERNEL_USER_TIMES 310,15912
    LARGE_INTEGER CreateTime;311,15948
    LARGE_INTEGER ExitTime;312,15978
    LARGE_INTEGER KernelTime;313,16006
    LARGE_INTEGER UserTime;314,16036
} KERNEL_USER_TIMES;315,16064
typedef struct _PROCESS_BASIC_INFORMATION 319,16124
    NTSTATUS ExitStatus;320,16168
    PPEB PebBaseAddress;321,16193
    ULONG_PTR AffinityMask;322,16218
    KPRIORITY BasePriority;323,16246
    ULONG_PTR UniqueProcessId;324,16274
    ULONG_PTR InheritedFromUniqueProcessId;325,16305
} PROCESS_BASIC_INFORMATION;326,16349
typedef PROCESS_BASIC_INFORMATION *PPROCESS_BASIC_INFORMATION;PPROCESS_BASIC_INFORMATION327,16378
typedef struct _DESCRIPTOR_TABLE_ENTRY 329,16442
    ULONG Selector;330,16483
    LDT_ENTRY Descriptor;331,16503
} DESCRIPTOR_TABLE_ENTRY, *PDESCRIPTOR_TABLE_ENTRY;PDESCRIPTOR_TABLE_ENTRY332,16529
typedef struct _VM_COUNTERS 335,16657
    SIZE_T PeakVirtualSize;336,16687
    SIZE_T VirtualSize;337,16715
    ULONG PageFaultCount;338,16739
    SIZE_T PeakWorkingSetSize;339,16765
    SIZE_T WorkingSetSize;340,16796
    SIZE_T QuotaPeakPagedPoolUsage;341,16823
    SIZE_T QuotaPagedPoolUsage;342,16859
    SIZE_T QuotaPeakNonPagedPoolUsage;343,16891
    SIZE_T QuotaNonPagedPoolUsage;344,16930
    SIZE_T PagefileUsage;345,16965
    SIZE_T PeakPagefileUsage;346,16991
} VM_COUNTERS;347,17021
typedef struct _PROCESS_DEVICEMAP_INFORMATION 350,17111
            HANDLE DirectoryHandle;353,17188
        } Set;354,17224
            ULONG DriveMap;356,17256
            UCHAR DriveType[DriveType357,17284
        } Query;358,17317
    ULONG Flags;361,17352
} PROCESS_DEVICEMAP_INFORMATION, *PPROCESS_DEVICEMAP_INFORMATION;PPROCESS_DEVICEMAP_INFORMATION363,17376
typedef char bool;367,17489
typedef unsigned __int64 uint64;369,17527
typedef struct _PROCESS_WS_WATCH_INFORMATION 398,18650
    PVOID FaultingPc;399,18697
    PVOID FaultingVa;400,18719
} PROCESS_WS_WATCH_INFORMATION, *PPROCESS_WS_WATCH_INFORMATION;PPROCESS_WS_WATCH_INFORMATION401,18741
typedef struct _POOLED_USAGE_AND_LIMITS 404,18866
    SIZE_T PeakPagedPoolUsage;405,18908
    SIZE_T PagedPoolUsage;406,18939
    SIZE_T PagedPoolLimit;407,18966
    SIZE_T PeakNonPagedPoolUsage;408,18993
    SIZE_T NonPagedPoolUsage;409,19027
    SIZE_T NonPagedPoolLimit;410,19057
    SIZE_T PeakPagefileUsage;411,19087
    SIZE_T PagefileUsage;412,19117
    SIZE_T PagefileLimit;413,19143
} POOLED_USAGE_AND_LIMITS;414,19169
typedef POOLED_USAGE_AND_LIMITS *PPOOLED_USAGE_AND_LIMITS;PPOOLED_USAGE_AND_LIMITS415,19196
typedef struct _PROCESS_ACCESS_TOKEN 421,19397
    HANDLE Token;426,19567
    HANDLE Thread;435,19966
} PROCESS_ACCESS_TOKEN, *PPROCESS_ACCESS_TOKEN;PPROCESS_ACCESS_TOKEN436,19985
#define JOB_OBJECT_LIMIT_WORKINGSET 441,20155
#define JOB_OBJECT_LIMIT_PROCESS_TIME 442,20218
#define JOB_OBJECT_LIMIT_JOB_TIME 443,20281
#define JOB_OBJECT_LIMIT_ACTIVE_PROCESS 444,20344
#define JOB_OBJECT_LIMIT_AFFINITY 445,20407
#define JOB_OBJECT_LIMIT_PRIORITY_CLASS 446,20470
#define JOB_OBJECT_LIMIT_PRESERVE_JOB_TIME 447,20533
#define JOB_OBJECT_LIMIT_SCHEDULING_CLASS 448,20596
#define JOB_OBJECT_LIMIT_PROCESS_MEMORY 451,20742
#define JOB_OBJECT_LIMIT_JOB_MEMORY 452,20805
#define JOB_OBJECT_LIMIT_DIE_ON_UNHANDLED_EXCEPTION 453,20868
#define JOB_OBJECT_LIMIT_BREAKAWAY_OK 454,20931
#define JOB_OBJECT_LIMIT_SILENT_BREAKAWAY_OK 455,20994
#define JOB_OBJECT_LIMIT_KILL_ON_JOB_CLOSE 456,21057
typedef struct _EXCEPTION_REGISTRATION 463,21322
     struct _EXCEPTION_REGISTRATION* prev;464,21363
     PVOID                   handler;465,21406
} EXCEPTION_REGISTRATION, *PEXCEPTION_REGISTRATION;PEXCEPTION_REGISTRATION466,21444
typedef struct _GDI_TEB_BATCH468,21497
    ULONG  Offset;470,21529
    HANDLE HDC;471,21548
    ULONG  Buffer[Buffer472,21564
} GDI_TEB_BATCH;473,21590
typedef struct _TEB 478,21698
    PEXCEPTION_REGISTRATION   ExceptionList;480,21840
    PVOID                     StackBase;481,21920
    PVOID                     StackLimit;482,22000
    PVOID                     SubSystemTib;483,22080
        PVOID                 FiberData;485,22172
        DWORD                 Version;486,22252
    PVOID                     ArbitraryUserPointer;488,22339
    struct _TEB*              Self;489,22419
    PVOID                     EnvironmentPointer;490,22499
    CLIENT_ID                 ClientId;491,22579
    PVOID                     ActiveRpcHandle;492,22659
    PVOID                     ThreadLocalStoragePointer;493,22739
    PEB*                      ProcessEnvironmentBlock;494,22819
    DWORD                     LastErrorValue;495,22899
    DWORD                     CountOfOwnedCriticalSections;496,22979
    PVOID                     CsrClientThread;497,23059
    PVOID                     Win32ThreadInfo;498,23139
    DWORD                     User32Reserved[User32Reserved499,23219
    DWORD                     UserReserved[UserReserved500,23299
    PVOID                     WOW32Reserved;501,23379
    DWORD                     CurrentLocale;502,23459
    DWORD                     FpSoftwareStatusRegister;503,23539
    PVOID /* kernel32 data */ SystemReserved1[SystemReserved1504,23619
    LONG                      ExceptionCode;505,23699
    PVOID                     ActivationContextStackPointer;506,23779
    byte                      SpareBytes1[SpareBytes1509,23943
    byte                      SpareBytes1[SpareBytes1511,24029
    DWORD                     TxFsContext;513,24116
    GDI_TEB_BATCH             GdiTebBatch;514,24196
    CLIENT_ID                 RealClientId;515,24276
    PVOID                     GdiCachedProcessHandle;516,24356
    DWORD                     GdiClientPID;517,24436
    DWORD                     GdiClientTID;518,24516
    PVOID                     GdiThreadLocalInfo;519,24596
    ptr_uint_t                Win32ClientInfo[Win32ClientInfo520,24676
    PVOID                     glDispatchTable[glDispatchTable521,24756
    ptr_uint_t                glReserved1[glReserved1522,24836
    PVOID                     glReserved2;523,24917
    PVOID                     glSectionInfo;524,24998
    PVOID                     glSection;525,25079
    PVOID                     glTable;526,25160
    PVOID                     glCurrentRC;527,25241
    PVOID                     glContext;528,25322
    DWORD                     LastStatusValue;529,25403
    UNICODE_STRING            StaticUnicodeString;530,25484
    WORD                      StaticUnicodeBuffer[StaticUnicodeBuffer531,25565
    PVOID                     DeallocationStack;532,25646
    PVOID                     TlsSlots[TlsSlots533,25727
    LIST_ENTRY                TlsLinks;534,25808
    PVOID                     Vdm;535,25889
    PVOID                     ReservedForNtRpc;536,25970
    PVOID                     DbgSsReserved[DbgSsReserved537,26051
    DWORD                     HardErrorMode;538,26132
    PVOID                     Instrumentation[Instrumentation539,26213
    PVOID                     SubProcessTag;540,26294
    PVOID                     EtwTraceData;541,26375
    PVOID                     WinSockData;542,26456
    DWORD                     GdiBatchCount;543,26537
    byte                      InDbgPrint;544,26618
    byte                      FreeStackOnTermination;545,26699
    byte                      HasFiberData;546,26780
    byte                      IdealProcessor;547,26861
    DWORD                     GuaranteedStackBytes;548,26942
    PVOID                     ReservedForPerf;549,27023
    PVOID                     ReservedForOle;550,27104
    DWORD                     WaitingOnLoaderLock;551,27185
    ptr_uint_t                SparePointer1;552,27266
    ptr_uint_t                SoftPatchPtr1;553,27347
    ptr_uint_t                SoftPatchPtr2;554,27428
    PPVOID                    TlsExpansionSlots;555,27509
    PVOID                     DeallocationBStore;557,27601
    PVOID                     BStoreLimit;558,27682
    DWORD                     ImpersonationLocale;560,27770
    DWORD                     IsImpersonating;561,27851
    PVOID                     NlsCache;562,27932
    PVOID                     pShimData;563,28013
    DWORD                     HeapVirtualAffinity;564,28094
    PVOID                     CurrentTransactionHandle;565,28175
    PVOID                     ActiveFrame;566,28256
    PVOID                     FlsData;567,28337
    PVOID                     PreferredLanguages;569,28503
    PVOID                     UserPrefLanguages;570,28584
    PVOID                     MergedPrefLanguages;571,28665
    ULONG                     MuiImpersonation;572,28746
        USHORT                CrossTebFlags;574,28839
        USHORT                SpareCrossTebFlags:SpareCrossTebFlags575,28920
        USHORT                SameTebFlags;579,29024
            USHORT            SafeThunkCall:SafeThunkCall581,29122
            USHORT            InDebugPrint:InDebugPrint582,29203
            USHORT            HasFiberData2:HasFiberData2583,29284
            USHORT            SkipThreadAttach:SkipThreadAttach584,29365
            USHORT            WerInShipAssertCode:WerInShipAssertCode585,29446
            USHORT            RanProcessInit:RanProcessInit586,29527
            USHORT            ClonedThread:ClonedThread587,29608
            USHORT            SuppressDebugMsg:SuppressDebugMsg588,29689
            USHORT            DisableUserStackWalk:DisableUserStackWalk589,29770
            USHORT            RtlExceptionAttached:RtlExceptionAttached590,29851
            USHORT            InitialThread:InitialThread591,29932
            USHORT            SessionAware:SessionAware592,30013
            USHORT            SpareSameTebBits:SpareSameTebBits593,30094
    PVOID                     TxnScopeEntercallback;596,30193
    PVOID                     TxnScopeExitCAllback;597,30274
    PVOID                     TxnScopeContext;598,30355
    ULONG                     LockCount;599,30436
    ULONG                     SpareUlong0;600,30517
    PVOID                     ResourceRetValue;601,30598
    PVOID                     ReservedForWdf;602,30679
    byte                      SafeThunkCall;604,30783
    byte                      BooleanSpare[BooleanSpare605,30864
} TEB;607,30952
typedef struct _THREAD_BASIC_INFORMATION 609,30960
    NTSTATUS ExitStatus;610,31026
    PNT_TIB TebBaseAddress;611,31051
    CLIENT_ID ClientId;612,31079
    KAFFINITY AffinityMask;613,31103
    KPRIORITY Priority;614,31131
    KPRIORITY BasePriority;615,31155
} THREAD_BASIC_INFORMATION, *PTHREAD_BASIC_INFORMATION;PTHREAD_BASIC_INFORMATION616,31183
typedef struct _SYSTEM_BASIC_INFORMATION 618,31240
    ULONG   Unknown;619,31283
    ULONG   MaximumIncrement;620,31304
    ULONG   PhysicalPageSize;621,31334
    ULONG   NumberOfPhysicalPages;622,31364
    ULONG   LowestPhysicalPage;623,31399
    ULONG   HighestPhysicalPage;624,31431
    ULONG   AllocationGranularity;625,31464
    PVOID   LowestUserAddress;626,31499
    PVOID   HighestUserAddress;627,31530
    ULONG_PTR ActiveProcessors;628,31562
    UCHAR   NumberProcessors;629,31594
    ULONG   Unknown2;631,31635
} SYSTEM_BASIC_INFORMATION, *PSYSTEM_BASIC_INFORMATION;PSYSTEM_BASIC_INFORMATION633,31728
typedef struct _SYSTEM_PROCESSOR_INFORMATION 635,31785
    USHORT  ProcessorArchitecture;636,31832
    USHORT  ProcessorLevel;637,31867
    USHORT  ProcessorRevision;638,31895
    USHORT  Unknown;639,31926
    ULONG   FeatureBits;640,31947
} SYSTEM_PROCESSOR_INFORMATION, *PSYSTEM_PROCESSOR_INFORMATION;PSYSTEM_PROCESSOR_INFORMATION641,31972
typedef struct _SYSTEM_PERFORMANCE_INFORMATION 643,32037
    LARGE_INTEGER IdleTime;644,32086
    LARGE_INTEGER ReadTransferCount;645,32114
    LARGE_INTEGER WriteTransferCount;646,32151
    LARGE_INTEGER OtherTransferCount;647,32189
    ULONG   ReadOperationCount;648,32227
    ULONG   WriteOperationCount;649,32259
    ULONG   OtherOperationCount;650,32292
    ULONG   AvailablePages;651,32325
    ULONG   TotalCommittedPages;652,32353
    ULONG   TotalCommitLimit;653,32386
    ULONG   PeakCommitment;654,32416
    ULONG   PageFaults;655,32444
    ULONG   WriteCopyFaults;656,32468
    ULONG   TranstitionFaults;657,32497
    ULONG   Reserved1;658,32528
    ULONG   DemandZeroFaults;659,32551
    ULONG   PagesRead;660,32581
    ULONG   PageReadIos;661,32604
    ULONG   Reserved2[Reserved2662,32629
    ULONG   PageFilePagesWritten;663,32655
    ULONG   PageFilePagesWriteIos;664,32689
    ULONG   MappedFilePagesWritten;665,32724
    ULONG   PagedPoolUsage;666,32760
    ULONG   NonPagedPoolUsage;667,32788
    ULONG   PagedPoolAllocs;668,32819
    ULONG   PagedPoolFrees;669,32848
    ULONG   NonPagedPoolAllocs;670,32876
    ULONG   NonPagedPoolFrees;671,32908
    ULONG   TotalFreeSystemPtes;672,32939
    ULONG   SystemCodePage;673,32972
    ULONG   TotalSystemDriverPages;674,33000
    ULONG   TotalSystemCodePages;675,33036
    ULONG   SmallNonPagedLookasideListAllocateHits;676,33070
    ULONG   SmallPagedLookasieListAllocateHits;677,33122
    ULONG   Reserved3;678,33170
    ULONG   MmSystemCachePage;679,33193
    ULONG   PagedPoolPage;680,33224
    ULONG   SystemDriverPage;681,33251
    ULONG   FastReadNoWait;682,33281
    ULONG   FastReadWait;683,33309
    ULONG   FastReadResourceMiss;684,33335
    ULONG   FastReadNotPossible;685,33369
    ULONG   FastMdlReadNoWait;686,33402
    ULONG   FastMdlReadWait;687,33433
    ULONG   FastMdlReadResourceMiss;688,33462
    ULONG   FastMdlReadNotPossible;689,33499
    ULONG   MapDataNoWait;690,33535
    ULONG   MapDataWait;691,33562
    ULONG   MapDataNoWaitMiss;692,33587
    ULONG   MapDataWaitMiss;693,33618
    ULONG   PinMappedDataCount;694,33647
    ULONG   PinReadNoWait;695,33679
    ULONG   PinReadWait;696,33706
    ULONG   PinReadNoWaitMiss;697,33731
    ULONG   PinReadWaitMiss;698,33762
    ULONG   CopyReadNoWait;699,33791
    ULONG   CopyReadWait;700,33819
    ULONG   CopyReadNoWaitMiss;701,33845
    ULONG   CopyReadWaitMiss;702,33877
    ULONG   MdlReadNoWait;703,33907
    ULONG   MdlReadWait;704,33934
    ULONG   MdlReadNoWaitMiss;705,33959
    ULONG   MdlReadWaitMiss;706,33990
    ULONG   ReadAheadIos;707,34019
    ULONG   LazyWriteIos;708,34045
    ULONG   LazyWritePages;709,34071
    ULONG   DataFlushes;710,34099
    ULONG   DataPages;711,34124
    ULONG   ContextSwitches;712,34147
    ULONG   FirstLevelTbFills;713,34176
    ULONG   SecondLevelTbFills;714,34207
    ULONG   SystemCalls;715,34239
    ULONG   Unknown[Unknown717,34300
} SYSTEM_PERFORMANCE_INFORMATION, *PSYSTEM_PERFORMANCE_INFORMATION;PSYSTEM_PERFORMANCE_INFORMATION718,34324
typedef struct _SYSTEM_TIME_OF_DAY_INFORMATION 720,34393
    LARGE_INTEGER BootTime;721,34442
    LARGE_INTEGER CurrentTime;722,34470
    LARGE_INTEGER TimeZoneBias;723,34501
    ULONG   CurrentTimeZoneId;724,34533
} SYSTEM_TIME_OF_DAY_INFORMATION, *PSYSTEM_TIME_OF_DAY_INFORMATION;PSYSTEM_TIME_OF_DAY_INFORMATION725,34564
typedef struct _SYSTEM_PROCESSOR_TIMES 727,34633
    LARGE_INTEGER IdleTime;728,34674
    LARGE_INTEGER KernelTime;729,34702
    LARGE_INTEGER UserTime;730,34732
    LARGE_INTEGER DpcTime;731,34760
    LARGE_INTEGER InterruptTime;732,34787
    ULONG   InterruptCount;733,34820
} SYSTEM_PROCESSOR_TIMES, *PSYSTEM_PROCESSOR_TIMES;PSYSTEM_PROCESSOR_TIMES734,34848
typedef struct _IO_COUNTERSEX 736,34901
    LARGE_INTEGER ReadOperationCount;737,34933
    LARGE_INTEGER WriteOperationCount;738,34971
    LARGE_INTEGER OtherOperationCount;739,35010
    LARGE_INTEGER ReadTransferCount;740,35049
    LARGE_INTEGER WriteTransferCount;741,35086
    LARGE_INTEGER OtherTransferCount;742,35124
} IO_COUNTERSEX, *PIO_COUNTERSEX;PIO_COUNTERSEX743,35162
typedef enum _THREAD_STATE 745,35197
    StateInitialized,746,35226
    StateReady,747,35248
    StateRunning,748,35264
    StateStandby,749,35282
    StateTerminated,750,35300
    StateWait,751,35321
    StateTransition,752,35336
    StateUnknown753,35357
} THREAD_STATE;754,35374
typedef enum _KWAIT_REASON 756,35391
    Executive,757,35420
    FreePage,758,35435
    PageIn,759,35449
    PoolAllocation,760,35461
    DelayExecution,761,35481
    Suspended,762,35501
    UserRequest,763,35516
    WrExecutive,764,35533
    WrFreePage,765,35550
    WrPageIn,766,35566
    WrPoolAllocation,767,35580
    WrDelayExecution,768,35602
    WrSuspended,769,35624
    WrUserRequest,770,35641
    WrEventPair,771,35660
    WrQueue,772,35677
    WrLpcReceive,773,35690
    WrVirtualMemory,774,35708
    WrPageOut,775,35729
    WrRendevous,776,35744
    WrSpare2,777,35761
    WrSpare3,778,35775
    WrSpare4,779,35789
    WrSpare5,780,35803
    WrSpare6,781,35817
    WrKernel782,35831
} KWAIT_REASON;783,35844
typedef struct _SYSTEM_THREADS 785,35861
    LARGE_INTEGER CreateTime;786,35894
    LARGE_INTEGER UserTime;787,35924
    LARGE_INTEGER KernelTime;788,35952
    ULONG   WaitTime;789,35982
    PVOID   StartAddress;790,36004
    CLIENT_ID ClientId;791,36030
    KPRIORITY Priority;792,36054
    KPRIORITY BasePriority;793,36078
    ULONG   ContextSwitchCount;794,36106
    THREAD_STATE ThreadState;795,36138
    KWAIT_REASON WaitReason;796,36168
} SYSTEM_THREADS, *PSYSTEM_THREADS;PSYSTEM_THREADS797,36197
typedef struct _SYSTEM_PROCESSES 799,36234
    ULONG NextEntryDelta;800,36270
    ULONG ThreadCount;801,36296
    ULONG Reserved1[Reserved1802,36319
    LARGE_INTEGER CreateTime;803,36343
    LARGE_INTEGER UserTime;804,36373
    LARGE_INTEGER KernelTime;805,36401
    UNICODE_STRING ProcessName;806,36431
    KPRIORITY BasePriority;807,36463
    HANDLE ProcessId;808,36491
    HANDLE InheritedFromProcessId;809,36513
    ULONG HandleCount;810,36548
    ULONG SessionId;811,36571
    ULONG PageDirectoryFrame;812,36592
    VM_COUNTERS VmCounters;813,36622
    IO_COUNTERSEX IoCounters;814,36650
    SYSTEM_THREADS Threads[Threads815,36706
} SYSTEM_PROCESSES, *PSYSTEM_PROCESSES;PSYSTEM_PROCESSES816,36757
typedef struct _SYSTEM_GLOBAL_FLAG 819,36799
    ULONG   GlobalFlag;820,36836
} SYSTEM_GLOBAL_FLAG, *PSYSTEM_GLOBAL_FLAG;PSYSTEM_GLOBAL_FLAG821,36860
typedef struct _MEMORY_SECTION_NAME 823,36905
    UNICODE_STRING SectionFileName;824,36943
} MEMORY_SECTION_NAME, *PMEMORY_SECTION_NAME;PMEMORY_SECTION_NAME825,36979
#define SYMBOLIC_LINK_QUERY 827,37026
#define SYMBOLIC_LINK_ALL_ACCESS 828,37060
    THREAD_INFO_ELEMENT_BUFFER_IS_INOUT 838,37575
    THREAD_INFO_ELEMENT_BUFFER_IS_INOUT = 0x00000,x00000838,37575
    THREAD_INFO_ELEMENT_BUFFER_IS_OUT 839,37653
    THREAD_INFO_ELEMENT_BUFFER_IS_OUT   = 0x10000,x10000839,37653
    THREAD_INFO_ELEMENT_BUFFER_IS_IN 840,37727
    THREAD_INFO_ELEMENT_BUFFER_IS_IN    = 0x20000,x20000840,37727
} thread_info_elm_buf_access_t;841,37802
    THREAD_INFO_ELEMENT_CLIENT_ID 844,37885
    THREAD_INFO_ELEMENT_CLIENT_ID       = 0x3,x3844,37885
    THREAD_INFO_ELEMENT_TEB 845,37964
    THREAD_INFO_ELEMENT_TEB             = 0x4,x4845,37964
    THREAD_INFO_ELEMENT_NT_PATH_TO_EXE 846,38039
    THREAD_INFO_ELEMENT_NT_PATH_TO_EXE  = 0x5,x5846,38039
    THREAD_INFO_ELEMENT_EXE_STUFF 848,38204
    THREAD_INFO_ELEMENT_EXE_STUFF       = 0x6,x6848,38204
    THREAD_INFO_ELEMENT_UNKNOWN_1 850,38350
    THREAD_INFO_ELEMENT_UNKNOWN_1       = 0x9,x9850,38350
} thread_info_elm_buf_type_t;852,38500
typedef struct _thread_info_element_t 854,38531
    ptr_uint_t flags;855,38604
    size_t buffer_size;856,38692
    void *buffer;buffer857,38749
    ptr_uint_t unknown;858,38835
} thread_info_elm_t;859,38888
typedef struct _exe_stuff_t 861,38910
    OUT void *exe_entrypoint_addr;exe_entrypoint_addr862,38973
    ptr_uint_t unknown1[unknown1864,39137
    uint32 unknown2[unknown2865,39216
} exe_stuff_t;866,39299
typedef struct _create_proc_thread_info_t 868,39315
    size_t struct_size;869,39392
    thread_info_elm_t nt_path_to_exe;874,39694
    thread_info_elm_t client_id;879,39880
    thread_info_elm_t exe_stuff;884,40092
    thread_info_elm_t info[info891,40606
}  create_proc_thread_info_t;893,40643
typedef struct _create_thread_info_t 897,40776
    size_t struct_size;898,40848
    thread_info_elm_t client_id;906,41293
    thread_info_elm_t teb;911,41445
} create_thread_info_t;912,41472
typedef struct _BASE_STATIC_SERVER_DATA919,41753
    UNICODE_STRING WindowsDirectory;921,41795
    UNICODE_STRING WindowsSystemDirectory;922,41832
    UNICODE_STRING NamedObjectDirectory;923,41875
    USHORT WindowsMajorVersion;924,41916
    USHORT WindowsMinorVersion;925,41948
    USHORT BuildNumber;926,41980
} BASE_STATIC_SERVER_DATA, *PBASE_STATIC_SERVER_DATA;PBASE_STATIC_SERVER_DATA928,42039
typedef struct _BASE_STATIC_SERVER_DATA_64931,42106
    UNICODE_STRING_64 WindowsDirectory;933,42151
    UNICODE_STRING_64 WindowsSystemDirectory;934,42191
    UNICODE_STRING_64 NamedObjectDirectory;935,42237
    USHORT WindowsMajorVersion;936,42281
    USHORT WindowsMinorVersion;937,42313
    USHORT BuildNumber;938,42345
} BASE_STATIC_SERVER_DATA_64, *PBASE_STATIC_SERVER_DATA_64;PBASE_STATIC_SERVER_DATA_64940,42404
typedef struct _FILE_BOTH_DIR_INFORMATION 944,42525
    ULONG NextEntryOffset;945,42569
    ULONG FileIndex;946,42596
    LARGE_INTEGER CreationTime;947,42617
    LARGE_INTEGER LastAccessTime;948,42649
    LARGE_INTEGER LastWriteTime;949,42683
    LARGE_INTEGER ChangeTime;950,42716
    LARGE_INTEGER EndOfFile;951,42746
    LARGE_INTEGER AllocationSize;952,42775
    ULONG FileAttributes;953,42809
    ULONG FileNameLength;954,42835
    ULONG EaSize;955,42861
    CCHAR ShortNameLength;956,42879
    WCHAR ShortName[ShortName957,42906
    WCHAR FileName[FileName958,42931
} FILE_BOTH_DIR_INFORMATION, *PFILE_BOTH_DIR_INFORMATION;PFILE_BOTH_DIR_INFORMATION959,42954
typedef enum _NT_PRODUCT_TYPE 962,43032
    NtProductWinNt 963,43064
    NtProductLanManNt,964,43088
    NtProductServer965,43111
} NT_PRODUCT_TYPE, *PNT_PRODUCT_TYPE;PNT_PRODUCT_TYPE966,43131
typedef enum _ALTERNATIVE_ARCHITECTURE_TYPE 969,43189
    StandardDesign,970,43235
    NEC98x86,971,43303
    EndAlternatives 972,43367
} ALTERNATIVE_ARCHITECTURE_TYPE;973,43437
typedef struct _KSYSTEM_TIME 975,43471
    ULONG LowPart;976,43502
    LONG High1Time;977,43521
    LONG High2Time;978,43541
} KSYSTEM_TIME, *PKSYSTEM_TIME;PKSYSTEM_TIME979,43561
#define PROCESSOR_FEATURE_MAX 981,43594
typedef struct _KUSER_SHARED_DATA 983,43628
    ULONG TickCountLowDeprecated;991,43819
    ULONG TickCountMultiplier;992,43853
    volatile KSYSTEM_TIME InterruptTime;998,43953
    volatile KSYSTEM_TIME SystemTime;1004,44060
    volatile KSYSTEM_TIME TimeZoneBias;1010,44152
    USHORT ImageNumberLow;1018,44316
    USHORT ImageNumberHigh;1019,44343
    WCHAR NtSystemRoot[NtSystemRoot1025,44425
    ULONG MaxStackTraceDepth;1031,44525
    ULONG CryptoExponent;1037,44594
    ULONG TimeZoneId;1043,44654
    ULONG LargePageMinimum;1045,44677
    ULONG Reserved2[Reserved21046,44705
    NT_PRODUCT_TYPE NtProductType;1052,44767
    BOOLEAN ProductTypeIsValid;1053,44802
    ULONG NtMajorVersion;1061,45077
    ULONG NtMinorVersion;1062,45103
    BOOLEAN ProcessorFeatures[ProcessorFeatures1068,45175
    ULONG Reserved1;1073,45280
    ULONG Reserved3;1074,45301
    volatile ULONG TimeSlip;1080,45377
    ALTERNATIVE_ARCHITECTURE_TYPE AlternativeArchitecture;1086,45490
    LARGE_INTEGER SystemExpirationDate;1095,45830
    ULONG SuiteMask;1101,45907
    BOOLEAN KdDebuggerEnabled;1107,45998
    volatile ULONG ActiveConsoleId;1113,46110
    volatile ULONG DismountCount;1122,46373
    ULONG ComPlusPackage;1130,46645
    ULONG LastSystemRITEventTickCount;1139,46912
    ULONG NumberOfPhysicalPages;1147,47123
    BOOLEAN SafeBootMode;1153,47228
    ULONG TraceLogging;1162,47496
    ULONGLONG   Fill0;1174,47871
    ULONGLONG   SystemCall[SystemCall1175,47916
        volatile KSYSTEM_TIME TickCount;1182,48005
        volatile ULONG64 TickCountQuad;1183,48046
} KUSER_SHARED_DATA;1187,48139
#define KUSER_SHARED_DATA_ADDRESS 1190,48210
typedef enum {MEMORY_RESERVE_ONLY MEMORY_RESERVE_ONLY1195,48371
typedef enum {MEMORY_RESERVE_ONLY = MEM_RESERVE,1195,48371
              MEMORY_COMMIT 1196,48421
              MEMORY_COMMIT = MEM_RESERVE|MEM_RESERVE1196,48421
              MEMORY_COMMIT = MEM_RESERVE|MEM_COMMITMEM_COMMIT1196,48421
} memory_commit_status_t;1197,48474
#define DUPLICATE_SAME_ATTRIBUTES 1216,48755
typedef enum {THREAD_EXITED,THREAD_EXITED1225,49051
typedef enum {THREAD_EXITED, THREAD_NOT_EXITED,1225,49051
typedef enum {THREAD_EXITED, THREAD_NOT_EXITED, THREAD_EXIT_ERROR}THREAD_EXIT_ERROR1225,49051
typedef enum {THREAD_EXITED, THREAD_NOT_EXITED, THREAD_EXIT_ERROR} thread_exited_status_t;1225,49051
#define SEC_LARGE_PAGES 1414,53809
# define SEC_VLM 1417,53984
#define SEC_BASED_UNSUPPORTED 1420,54111
#define SEC_NO_CHANGE_UNSUPPORTED 1421,54156
typedef enum _reg_query_value_result 1448,54901
    REG_QUERY_FAILURE,1449,54940
    REG_QUERY_BUFFER_TOO_SMALL,1450,54963
    REG_QUERY_SUCCESS1451,54995
} reg_query_value_result_t;1452,55017
#define LengthRequiredSID(1478,55744
# define SECURITY_MAX_SID_SIZE 1484,56032
#define SECURITY_MAX_TOKEN_SIZE 1491,56233
#define FILE_ANY_ACCESS 1535,57646
#define FILE_SPECIAL_ACCESS 1536,57688
#define FILE_READ_ACCESS 1537,57737
#define FILE_WRITE_ACCESS 1538,57800
#define FILE_SHARE_VALID_FLAGS 1541,57917
#define FILE_ATTRIBUTE_VALID_FLAGS 1544,58026
#define FILE_ATTRIBUTE_VALID_SET_FLAGS 1545,58081
#define FILE_DIRECTORY_FILE 1549,58220
#define FILE_WRITE_THROUGH 1550,58279
#define FILE_SEQUENTIAL_ONLY 1551,58338
#define FILE_NO_INTERMEDIATE_BUFFERING 1552,58397
#define FILE_SYNCHRONOUS_IO_ALERT 1554,58457
#define FILE_SYNCHRONOUS_IO_NONALERT 1555,58516
#define FILE_NON_DIRECTORY_FILE 1556,58575
#define FILE_CREATE_TREE_CONNECTION 1557,58634
#define FILE_COMPLETE_IF_OPLOCKED 1559,58694
#define FILE_NO_EA_KNOWLEDGE 1560,58753
#define FILE_OPEN_FOR_RECOVERY 1561,58812
#define FILE_OPEN_REMOTE_INSTANCE 1562,58871
#define FILE_RANDOM_ACCESS 1563,58945
#define FILE_DELETE_ON_CLOSE 1565,59005
#define FILE_OPEN_BY_FILE_ID 1566,59064
#define FILE_OPEN_FOR_BACKUP_INTENT 1567,59123
#define FILE_NO_COMPRESSION 1568,59182
#define FILE_RESERVE_OPFILTER 1570,59242
#define FILE_OPEN_REPARSE_POINT 1571,59301
#define FILE_OPEN_NO_RECALL 1572,59360
#define FILE_OPEN_FOR_FREE_SPACE_QUERY 1573,59419
#define FILE_COPY_STRUCTURED_STORAGE 1575,59479
#define FILE_STRUCTURED_STORAGE 1576,59538
#define FILE_VALID_OPTION_FLAGS 1578,59598
#define FILE_VALID_PIPE_OPTION_FLAGS 1579,59657
#define FILE_VALID_MAILSLOT_OPTION_FLAGS 1580,59716
#define FILE_VALID_SET_FLAGS 1581,59775
#define FILE_SUPERSEDED 1584,59888
#define FILE_OPENED 1585,59927
#define FILE_CREATED 1586,59966
#define FILE_OVERWRITTEN 1587,60005
#define FILE_EXISTS 1588,60044
#define FILE_DOES_NOT_EXIST 1589,60083
#define FILE_SUPERSEDE 1592,60165
#define FILE_OPEN 1593,60216
#define FILE_CREATE 1594,60267
#define FILE_OPEN_IF 1595,60318
#define FILE_OVERWRITE 1596,60369
#define FILE_OVERWRITE_IF 1597,60420
#define FILE_MAXIMUM_DISPOSITION 1598,60471
#define FILE_DISPOSITION_SET_OWNER 1601,60593
#define FILE_WRITE_TO_END_OF_FILE 1604,60695
#define FILE_USE_FILE_POINTER_POSITION 1605,60746
# define STATUS_PENDING 1612,61104
#define FILE_DEVICE_FILE_SYSTEM 1616,61187
#define FILE_DEVICE_NAMED_PIPE 1617,61238
#define STATUS_NOT_IMPLEMENTED 1622,61408
#define STATUS_INFO_LENGTH_MISMATCH 1624,61474
#define STATUS_NOT_IMPLEMENTED 1627,61590
#define STATUS_NO_SUCH_FILE 1630,61687
#define STATUS_CONFLICTING_ADDRESSES 1633,61850
#define STATUS_END_OF_FILE 1638,62022
#define STATUS_INVALID_ADDRESS 1641,62151
#define STATUS_BUFFER_OVERFLOW 1644,62282
#define STATUS_NO_MORE_FILES 1647,62415
#define STATUS_INVALID_FILE_FOR_SECTION 1651,62587
#define STATUS_ACCESS_DENIED 1655,62770
#define STATUS_BUFFER_TOO_SMALL 1659,62940
#define STATUS_OBJECT_TYPE_MISMATCH 1664,63156
#define STATUS_OBJECT_NAME_INVALID 1667,63249
#define STATUS_OBJECT_NAME_NOT_FOUND 1670,63345
#define STATUS_OBJECT_NAME_COLLISION 1673,63451
#define STATUS_OBJECT_PATH_INVALID 1676,63573
#define STATUS_OBJECT_PATH_NOT_FOUND 1679,63670
#define STATUS_SECTION_TOO_BIG 1682,63792
#define STATUS_SHARING_VIOLATION 1685,63938
#define STATUS_INVALID_PAGE_PROTECTION 1688,64055
#define STATUS_FILE_LOCK_CONFLICT 1691,64200
#define STATUS_DELETE_PENDING 1694,64354
#define STATUS_FILE_INVALID 1699,64527
#define STATUS_FILE_IS_A_DIRECTORY 1704,64727
#define STATUS_OBJECT_NAME_EXISTS 1707,64885
#define STATUS_IMAGE_NOT_AT_BASE 1713,65120
#  define STATUS_NO_MEMORY 1718,65343
#define STATUS_PAGEFILE_QUOTA_EXCEEDED 1723,65556
#define STATUS_COMMITMENT_LIMIT 1730,65838
#define STATUS_COMMITMENT_MINIMUM 1740,66313
#define EXCEPTION_THROWN 1743,66447
#define STATUS_PROCESS_NOT_IN_JOB 1747,66590
#define STATUS_PROCESS_IN_JOB 1749,66702
#define STATUS_NO_SUCH_PRIVILEGE 1752,66812
#define STATUS_PRIVILEGE_NOT_HELD 1754,66932
#define STATUS_CALLBACK_POP_STACK 1757,67069
#define STATUS_INVALID_INFO_CLASS 1760,67162
#define STATUS_MAPPED_FILE_SIZE_ZERO 1765,67326
#define STATUS_PARTIAL_COPY 1767,67392
# define STATUS_INVALID_PARAMETER 1771,67555
#define STATUS_NOT_MAPPED_DATA 1775,67688
#define STATUS_INVALID_PARAMETER_1 1778,67840
#define STATUS_INVALID_PARAMETER_2 1781,67993
#define STATUS_INVALID_PARAMETER_3 1784,68145
#define STATUS_INVALID_PARAMETER_4 1787,68298
#define STATUS_INVALID_PARAMETER_5 1790,68450
#define STATUS_INVALID_PARAMETER_6 1793,68602
#define STATUS_INVALID_PARAMETER_7 1796,68756
#define STATUS_INVALID_PARAMETER_8 1799,68909
#define STATUS_INVALID_PARAMETER_9 1802,69061
#define STATUS_INVALID_PARAMETER_10 1805,69213
#define STATUS_INVALID_PARAMETER_11 1808,69368
#define STATUS_INVALID_PARAMETER_12 1811,69522
#define STATUS_THREAD_IS_TERMINATING 1814,69661
#define STATUS_PROCESS_IS_TERMINATING 1817,69783
#define STATUS_NOT_A_REPARSE_POINT 1820,69906
# define IMAGE_SIZEOF_BASE_RELOCATION 1824,70064
typedef struct _FILE_STANDARD_INFORMATION 1865,71387
    LARGE_INTEGER AllocationSize;1866,71448
    LARGE_INTEGER EndOfFile;1867,71509
    ULONG NumberOfLinks;1868,71570
    BOOLEAN DeletePending;1869,71631
    BOOLEAN Directory;1870,71692
} FILE_STANDARD_INFORMATION, *PFILE_STANDARD_INFORMATION;PFILE_STANDARD_INFORMATION1871,71753
typedef struct _FILE_INTERNAL_INFORMATION 1873,71815
    LARGE_INTEGER IndexNumber;1874,71859
} FILE_INTERNAL_INFORMATION, *PFILE_INTERNAL_INFORMATION;PFILE_INTERNAL_INFORMATION1875,71890
typedef struct _FILE_POSITION_INFORMATION 1877,71999
    LARGE_INTEGER CurrentByteOffset;1878,72060
} FILE_POSITION_INFORMATION, *PFILE_POSITION_INFORMATION;PFILE_POSITION_INFORMATION1879,72121
typedef struct _FILE_ALIGNMENT_INFORMATION 1881,72243
    ULONG AlignmentRequirement;1882,72304
} FILE_ALIGNMENT_INFORMATION, *PFILE_ALIGNMENT_INFORMATION;PFILE_ALIGNMENT_INFORMATION1883,72365
#define MAX_FILE_NAME_LENGTH 1885,72487
typedef struct _FILE_NAME_INFORMATION 1886,72525
    ULONG FileNameLength;1887,72586
    WCHAR FileName[FileName1888,72642
} FILE_NAME_INFORMATION, *PFILE_NAME_INFORMATION;PFILE_NAME_INFORMATION1891,72807
typedef struct _FILE_RENAME_INFORMATION 1893,72918
    BOOLEAN ReplaceIfExists;1894,72960
    HANDLE RootDirectory;1895,72989
    ULONG FileNameLength;1896,73015
    WCHAR FileName[FileName1897,73041
} FILE_RENAME_INFORMATION, *PFILE_RENAME_INFORMATION;PFILE_RENAME_INFORMATION1898,73083
typedef struct _FILE_ATTRIBUTE_TAG_INFORMATION 1900,73138
    ULONG FileAttributes;1901,73202
    ULONG ReparseTag;1902,73267
} FILE_ATTRIBUTE_TAG_INFORMATION, *PFILE_ATTRIBUTE_TAG_INFORMATION;PFILE_ATTRIBUTE_TAG_INFORMATION1903,73332
typedef struct _FILE_DISPOSITION_INFORMATION 1905,73467
    BOOLEAN DeleteFile;1906,73532
} FILE_DISPOSITION_INFORMATION, *PFILE_DISPOSITION_INFORMATION;PFILE_DISPOSITION_INFORMATION1907,73597
typedef struct _FILE_END_OF_FILE_INFORMATION 1909,73727
    LARGE_INTEGER EndOfFile;1910,73792
} FILE_END_OF_FILE_INFORMATION, *PFILE_END_OF_FILE_INFORMATION;PFILE_END_OF_FILE_INFORMATION1911,73857
typedef struct _FILE_VALID_DATA_LENGTH_INFORMATION 1913,73987
    LARGE_INTEGER ValidDataLength;1914,74076
} FILE_VALID_DATA_LENGTH_INFORMATION, *PFILE_VALID_DATA_LENGTH_INFORMATION;PFILE_VALID_DATA_LENGTH_INFORMATION1915,74165
typedef enum {WAIT_TIMEDOUT,WAIT_TIMEDOUT1924,74408
typedef enum {WAIT_TIMEDOUT, WAIT_SIGNALED,1924,74408
typedef enum {WAIT_TIMEDOUT, WAIT_SIGNALED, WAIT_ERROR}WAIT_ERROR1924,74408
typedef enum {WAIT_TIMEDOUT, WAIT_SIGNALED, WAIT_ERROR} wait_status_t;1924,74408
#define INFINITE_WAIT 1925,74479
#define TIMER_UNITS_PER_MILLISECOND 1946,75039
#define GET_OWN_CONTEXT(2022,77834
    X64_PEB_TIB_OFFSET 2049,79061
    X64_PEB_TIB_OFFSET        = 0x060,x0602049,79061
    X64_LDR_PEB_OFFSET 2050,79100
    X64_LDR_PEB_OFFSET        = 0x018,x0182050,79100
typedef struct _module_handle_t *module_handle_t;module_handle_t2096,80439
typedef void *module_base_t;module_base_t2097,80489
#define __IMAGE_COR20_HEADER_DEFINED__2112,80794
typedef enum replaces_cor_hdr_numeric_defines_t2114,80834
    COMIMAGE_FLAGS_ILONLY 2117,80918
    COMIMAGE_FLAGS_ILONLY               =0x00000001,x000000012117,80918
    COMIMAGE_FLAGS_32BITREQUIRED 2118,80971
    COMIMAGE_FLAGS_32BITREQUIRED        =0x00000002,x000000022118,80971
    COMIMAGE_FLAGS_IL_LIBRARY 2119,81024
    COMIMAGE_FLAGS_IL_LIBRARY           =0x00000004,x000000042119,81024
    COMIMAGE_FLAGS_STRONGNAMESIGNED 2120,81077
    COMIMAGE_FLAGS_STRONGNAMESIGNED     =0x00000008,x000000082120,81077
    COMIMAGE_FLAGS_TRACKDEBUGDATA 2121,81130
    COMIMAGE_FLAGS_TRACKDEBUGDATA       =0x00010000,x000100002121,81130
    COR_VERSION_MAJOR_V2 2124,81212
    COR_VERSION_MAJOR 2125,81256
    COR_VERSION_MAJOR                   =COR_VERSION_MAJOR_V2,2125,81256
    COR_VERSION_MINOR 2126,81319
    COR_DELETED_NAME_LENGTH 2127,81363
    COR_VTABLEGAP_NAME_LENGTH 2128,81407
    NATIVE_TYPE_MAX_CB 2131,81496
    COR_ILMETHOD_SECT_SMALL_MAX_DATASIZE=2132,81543
    COR_ILMETHOD_SECT_SMALL_MAX_DATASIZE=0xFF,xFF2132,81543
    IMAGE_COR_MIH_METHODRVA 2135,81621
    IMAGE_COR_MIH_METHODRVA             =0x01,x012135,81621
    IMAGE_COR_MIH_EHRVA 2136,81668
    IMAGE_COR_MIH_EHRVA                 =0x02,x022136,81668
    IMAGE_COR_MIH_BASICBLOCK 2137,81719
    IMAGE_COR_MIH_BASICBLOCK            =0x08,x082137,81719
    COR_VTABLE_32BIT 2140,81788
    COR_VTABLE_32BIT                    =0x01,x012140,81788
    COR_VTABLE_64BIT 2141,81885
    COR_VTABLE_64BIT                    =0x02,x022141,81885
    COR_VTABLE_FROM_UNMANAGED 2142,81982
    COR_VTABLE_FROM_UNMANAGED           =0x04,x042142,81982
    COR_VTABLE_CALL_MOST_DERIVED 2143,82076
    COR_VTABLE_CALL_MOST_DERIVED        =0x10,x102143,82076
    IMAGE_COR_EATJ_THUNK_SIZE 2146,82192
    MAX_CLASS_NAME 2150,82360
    MAX_PACKAGE_NAME 2151,82407
} replaces_cor_hdr_numeric_defines_t;2152,82454
typedef struct IMAGE_COR20_HEADER2155,82523
    DWORD                   cb;2158,82584
    WORD                    MajorRuntimeVersion;2159,82630
    WORD                    MinorRuntimeVersion;2160,82679
    IMAGE_DATA_DIRECTORY    MetaData;2163,82777
    DWORD                   Flags;2164,82823
    DWORD                   EntryPointToken;2165,82869
    IMAGE_DATA_DIRECTORY    Resources;2168,82946
    IMAGE_DATA_DIRECTORY    StrongNameSignature;2169,82985
    IMAGE_DATA_DIRECTORY    CodeManagerTable;2172,83080
    IMAGE_DATA_DIRECTORY    VTableFixups;2173,83126
    IMAGE_DATA_DIRECTORY    ExportAddressTableJumps;2174,83168
    IMAGE_DATA_DIRECTORY    ManagedNativeHeader;2177,83286
} IMAGE_COR20_HEADER, *PIMAGE_COR20_HEADER;PIMAGE_COR20_HEADER2179,83340
#define IMAGE_SCN_ALIGN_MASK 2185,83457
#define MAX_OBJECT_NAME_LENGTH 2205,84133
typedef struct _OBJECT_NAME_INFORMATION 2206,84173
    UNICODE_STRING ObjectName;2207,84215
    wchar_t object_name_buffer[object_name_buffer2210,84364
} OBJECT_NAME_INFORMATION, *POBJECT_NAME_INFORMATION;POBJECT_NAME_INFORMATION2211,84420
#define HEAP_CLASS_PRIVATE 2441,93429

win32/ntdll_imports.c,3611
#define WIN32_LEAN_AND_MEAN39,1940
#define NTEXPORT 47,2055
KiUserApcDispatcher(54,2203
KiUserCallbackDispatcher(63,2419
KiUserExceptionDispatcher(70,2569
KiRaiseUserExceptionDispatcher(76,2679
NtAllocateVirtualMemory(85,2833
NtQueryVirtualMemory(96,3177
NtFreeVirtualMemory(107,3563
NtProtectVirtualMemory(116,3795
NtCreateFile(126,4089
NtWriteVirtualMemory(143,4620
NtGetContextThread(154,4911
NtSetContextThread(161,5051
NtSuspendThread(168,5190
NtResumeThread(175,5344
NtTerminateThread(182,5496
NtClose(189,5645
NtDuplicateObject(195,5727
NtCreateSection(207,6100
NtOpenSection(219,6466
NtMapViewOfSection(227,6661
NtUnmapViewOfSection(242,7254
NtCallbackReturn(250,7417
NtTestAlert(258,7593
NtContinue(265,7668
NtQueryInformationThread(272,7789
NtQueryInformationProcess(283,8135
NtQueryInformationFile(294,8491
NtSetInformationFile(305,8829
NtQuerySection(316,9156
NtOpenFile(327,9466
NtOpenThreadToken(339,9763
NtOpenProcessToken(348,9997
NtQueryInformationToken(356,10189
NtYieldExecution(366,10524
NtQuerySystemInformation(373,10604
NtOpenProcess(382,10867
NtSetInformationThread(391,11100
NtReadVirtualMemory(400,11377
NtCreateTimer(410,11663
NtSetTimer(419,11907
NtDelayExecution(431,12227
NtQueryObject(438,12367
NtQueryFullAttributesFile(448,12666
NtCreateKey(455,12850
NtOpenKey(467,13196
NtSetValueKey(475,13375
NtDeleteKey(486,13645
NtQueryValueKey(493,13735
NtFlushKey(504,14068
NtEnumerateKey(511,14157
NtEnumerateValueKey(522,14447
NtQuerySystemTime(533,14773
NtDeleteFile(540,14878
NtFlushBuffersFile(547,14989
NtReadFile(554,15141
NtWriteFile(568,15548
NtCreateIoCompletion(582,15997
NtRaiseHardError(591,16275
NtRaiseException(603,16700
NtCreateEvent(611,16891
NtWaitForSingleObject(621,17162
NtSetEvent(629,17358
NtClearEvent(636,17493
NtSignalAndWaitForSingleObject(643,17586
NtQueryPerformanceCounter(652,17873
NtFsControlFile(659,18068
NtCancelIoFile(674,18708
NtCreateProfile(681,18852
NtSetIntervalProfile(695,19248
NtQueryIntervalProfile(702,19392
NtStartProfile(709,19542
NtStopProfile(716,19639
NtCreateProcess(723,19735
NtTerminateProcess(736,20177
NtCreateDirectoryObject(743,20329
NtOpenDirectoryObject(751,20556
NtOpenSymbolicLinkObject(759,20777
NtQuerySymbolicLinkObject(767,21007
ZwAreMappedFilesTheSame(775,21237
NtQueryVolumeInformationFile(782,21379
NtQuerySecurityObject(792,21724
NtQueueApcThread(803,22082
NtCreateThread(813,22367
NtOpenThread(826,22770
NtFlushInstructionCache(835,22998
NtQueryAttributesFile(843,23203
NtCreateNamedPipeFile(850,23383
NtDeviceIoControlFile(869,24140
NtQueryDirectoryFile(884,24715
NtFlushVirtualMemory(900,25355
RtlInitializeCriticalSection(913,25701
RtlDeleteCriticalSection(920,25819
RtlEnterCriticalSection(927,25929
RtlLeaveCriticalSection(934,26045
RtlTryEnterCriticalSection(941,26161
RtlInitUnicodeString(948,26280
RtlInitAnsiString(955,26444
RtlFreeUnicodeString(962,26594
RtlFreeAnsiString(967,26664
RtlFreeOemString(972,26728
RtlQueryEnvironmentVariable_U(977,26794
RtlConvertSidToUnicodeString(985,27004
RtlCreateProcessParameters(993,27230
RtlDestroyProcessParameters(1008,27942
RtlCreateHeap(1015,28076
RtlDestroyHeap(1022,28264
RtlAllocateHeap(1028,28346
RtlReAllocateHeap(1034,28445
RtlFreeHeap(1040,28555
RtlSizeHeap(1046,28649
RtlValidateHeap(1052,28737
RtlLockHeap(1059,28834
RtlUnlockHeap(1065,28902
RtlGetProcessHeaps(1071,28976
RtlWalkHeap(1078,29105
LdrLoadDll(1089,29306
LdrUnloadDll(1098,29524
LdrGetProcedureAddress(1105,29618
LdrGetDllHandle(1114,29888
CsrClientCallServer(1127,30215

win32/ntdll_types.h,14687
#define _NTDLL_TYPES_H_ 17,785
typedef unsigned int uint;28,1086
typedef LONG NTSTATUS;29,1113
#define NT_SUCCESS(31,1191
#define NT_ERROR(32,1244
#define STATUS_SUCCESS 33,1302
#define STATUS_UNSUCCESSFUL 34,1349
typedef struct _UNICODE_STRING 36,1402
    USHORT Length;38,1496
    USHORT MaximumLength;39,1515
    PWSTR  Buffer;40,1541
} UNICODE_STRING;41,1560
typedef UNICODE_STRING *PUNICODE_STRING;PUNICODE_STRING42,1578
typedef struct _STRING 44,1620
  USHORT  Length;45,1645
  USHORT  MaximumLength;46,1663
  PCHAR  Buffer;47,1688
} ANSI_STRING;48,1705
typedef ANSI_STRING *PANSI_STRING;PANSI_STRING49,1720
typedef ANSI_STRING OEM_STRING;50,1755
typedef struct _OBJECT_ATTRIBUTES 52,1788
    ULONG Length;53,1824
    HANDLE RootDirectory;54,1842
    PUNICODE_STRING ObjectName;55,1868
    ULONG Attributes;56,1900
    PSECURITY_DESCRIPTOR SecurityDescriptor;57,1922
    PVOID SecurityQualityOfService;58,1967
} OBJECT_ATTRIBUTES;59,2050
typedef OBJECT_ATTRIBUTES *POBJECT_ATTRIBUTES;POBJECT_ATTRIBUTES60,2071
#define InitializeObjectAttributes(62,2119
#define OBJ_INHERIT 72,2579
#define OBJ_PERMANENT 73,2623
#define OBJ_EXCLUSIVE 74,2667
#define OBJ_CASE_INSENSITIVE 75,2711
#define OBJ_OPENIF 76,2755
#define OBJ_OPENLINK 77,2799
#define OBJ_KERNEL_HANDLE 78,2843
#define OBJ_FORCE_ACCESS_CHECK 79,2936
typedef ULONG ACCESS_MASK;81,3017
typedef enum _SECTION_INHERIT 84,3064
    ViewShare 85,3096
    ViewUnmap 86,3115
} SECTION_INHERIT;87,3133
typedef struct _CLIENT_ID 89,3153
    HANDLE UniqueProcess;91,3213
    HANDLE UniqueThread;92,3239
} CLIENT_ID;93,3264
typedef CLIENT_ID *PCLIENT_ID;PCLIENT_ID94,3277
typedef enum _MEMORY_INFORMATION_CLASS 96,3309
    MemoryBasicInformation,97,3350
    MemoryWorkingSetList,98,3378
    MemorySectionName,99,3404
    MemoryBasicVlmInformation100,3427
} MEMORY_INFORMATION_CLASS;101,3457
typedef enum _PROCESSINFOCLASS 104,3539
    ProcessBasicInformation,105,3572
    ProcessQuotaLimits,106,3601
    ProcessIoCounters,107,3625
    ProcessVmCounters,108,3648
    ProcessTimes,109,3671
    ProcessBasePriority,110,3689
    ProcessRaisePriority,111,3714
    ProcessDebugPort,112,3740
    ProcessExceptionPort,113,3762
    ProcessAccessToken,114,3788
    ProcessLdtInformation,115,3812
    ProcessLdtSize,116,3839
    ProcessDefaultHardErrorMode,117,3859
    ProcessIoPortHandlers,118,3892
    ProcessPooledUsageAndLimits,119,3962
    ProcessWorkingSetWatch,120,3995
    ProcessUserModeIOPL,121,4023
    ProcessEnableAlignmentFaultFixup,122,4048
    ProcessPriorityClass,123,4086
    ProcessWx86Information,124,4112
    ProcessHandleCount,125,4140
    ProcessAffinityMask,126,4164
    ProcessPriorityBoost,127,4189
    ProcessDeviceMap,128,4215
    ProcessSessionInformation,129,4237
    ProcessForegroundInformation,130,4268
    ProcessWow64Information,131,4302
    ProcessImageFileName,133,4357
    ProcessLUIDDeviceMapsEnabled,134,4383
    ProcessBreakOnTermination,135,4417
    ProcessDebugObjectHandle,136,4448
    ProcessDebugFlags,137,4478
    ProcessHandleTracing,138,4501
    ProcessIoPriority,139,4527
    ProcessExecuteFlags,140,4550
    ProcessResourceManagement,141,4575
    ProcessCookie,142,4606
    ProcessImageInformation,143,4625
    MaxProcessInfoClass 144,4654
} PROCESSINFOCLASS;145,4744
typedef enum _THREADINFOCLASS 148,4798
    ThreadBasicInformation,149,4830
    ThreadTimes,150,4858
    ThreadPriority,151,4875
    ThreadBasePriority,152,4895
    ThreadAffinityMask,153,4919
    ThreadImpersonationToken,154,4943
    ThreadDescriptorTableEntry,155,4973
    ThreadEnableAlignmentFaultFixup,156,5005
    ThreadEventPair_Reusable,157,5042
    ThreadQuerySetWin32StartAddress,158,5072
    ThreadZeroTlsCell,159,5109
    ThreadPerformanceCount,160,5132
    ThreadAmILastThread,161,5160
    ThreadIdealProcessor,162,5185
    ThreadPriorityBoost,163,5211
    ThreadSetTlsArrayAddress,164,5236
    ThreadIsIoPending,165,5266
    ThreadHideFromDebugger,166,5289
    MaxThreadInfoClass167,5317
} THREADINFOCLASS;168,5340
typedef struct _USER_STACK 170,5360
    PVOID FixedStackBase;171,5389
    PVOID FixedStackLimit;172,5415
    PVOID ExpandableStackBase;173,5442
    PVOID ExpandableStackLimit;174,5473
    PVOID ExpandableStackBottom;175,5505
} USER_STACK, *PUSER_STACK;PUSER_STACK176,5538
typedef enum _SECTION_INFORMATION_CLASS 178,5567
    SectionBasicInformation,179,5609
    SectionImageInformation180,5638
} SECTION_INFORMATION_CLASS;181,5666
typedef struct _SECTION_BASIC_INFORMATION 183,5696
    PVOID BaseAddress;184,5763
    ULONG Attributes;185,5786
    LARGE_INTEGER Size;186,5808
} SECTION_BASIC_INFORMATION, *PSECTION_BASIC_INFORMATION;PSECTION_BASIC_INFORMATION187,5832
typedef struct _SECTION_IMAGE_INFORMATION 189,5891
    PVOID EntryPoint;190,5958
    ULONG Unknown1;191,5980
    ULONG StackReserve;192,6000
    ULONG StackCommit;193,6024
    ULONG Subsystem;194,6047
    USHORT MinorSubsystemVersion;195,6068
    USHORT MajorSubsystemVersion;196,6102
    ULONG Unknown2;197,6136
    ULONG Characteristics;198,6156
    USHORT ImageNumber;199,6183
    BOOLEAN Executable;200,6207
    UCHAR Unknown3;201,6231
    ULONG Unknown4[Unknown4202,6251
} SECTION_IMAGE_INFORMATION, *PSECTION_IMAGE_INFORMATION;PSECTION_IMAGE_INFORMATION203,6274
typedef struct _IO_STATUS_BLOCK 205,6333
        NTSTATUS Status;207,6379
        PVOID Pointer;208,6404
    ULONG_PTR Information;210,6434
} IO_STATUS_BLOCK, *PIO_STATUS_BLOCK;PIO_STATUS_BLOCK211,6461
typedef enum _KPROFILE_SOURCE 213,6500
    ProfileTime214,6532
} KPROFILE_SOURCE;215,6548
typedef enum _OBJECT_INFORMATION_CLASS 217,6568
    ObjectBasicInformation,218,6609
    ObjectNameInformation,219,6637
    ObjectTypeInformation,220,6664
    ObjectAllTypesInformation,221,6691
    ObjectHandleInformation 222,6722
} OBJECT_INFORMATION_CLASS;223,6779
typedef struct _OBJECT_BASIC_INFORMATION 225,6808
    ULONG Attributes;226,6851
    ACCESS_MASK GrantedAccess;227,6873
    ULONG HandleCount;228,6904
    ULONG PointerCount;229,6927
    ULONG PagePoolUsage;230,6951
    ULONG NonPagedPoolUsage;231,6976
    ULONG Reserved[Reserved232,7005
    ULONG NameInformationLength;233,7028
    ULONG TypeInformationLength;234,7061
    ULONG SecurityDescriptorLength;235,7094
    LARGE_INTEGER CreateTime;236,7130
} OBJECT_BASIC_INFORMATION, *POBJECT_BASIC_INFORMATION;POBJECT_BASIC_INFORMATION237,7160
typedef enum _FILE_INFORMATION_CLASS 242,7318
    FileDirectoryInformation 243,7357
    FileFullDirectoryInformation,244,7399
    FileBothDirectoryInformation,245,7440
    FileBasicInformation,246,7481
    FileStandardInformation,247,7527
    FileInternalInformation,248,7573
    FileEaInformation,249,7614
    FileAccessInformation,250,7655
    FileNameInformation,251,7696
    FileRenameInformation,252,7737
    FileLinkInformation,253,7779
    FileNamesInformation,254,7821
    FileDispositionInformation,255,7863
    FilePositionInformation,256,7905
    FileFullEaInformation,257,7951
    FileModeInformation,258,7993
    FileAlignmentInformation,259,8035
    FileAllInformation,260,8077
    FileAllocationInformation,261,8119
    FileEndOfFileInformation,262,8161
    FileAlternateNameInformation,263,8207
    FileStreamInformation,264,8249
    FilePipeInformation,265,8291
    FilePipeLocalInformation,266,8333
    FilePipeRemoteInformation,267,8375
    FileMailslotQueryInformation,268,8417
    FileMailslotSetInformation,269,8459
    FileCompressionInformation,270,8501
    FileObjectIdInformation,271,8543
    FileCompletionInformation,272,8585
    FileMoveClusterInformation,273,8627
    FileQuotaInformation,274,8669
    FileReparsePointInformation,275,8711
    FileNetworkOpenInformation,276,8753
    FileAttributeTagInformation,277,8795
    FileTrackingInformation,278,8837
    FileIdBothDirectoryInformation,279,8879
    FileIdFullDirectoryInformation,280,8921
    FileValidDataLengthInformation,282,9020
    FileShortNameInformation,283,9062
    FileMaximumInformation284,9104
} FILE_INFORMATION_CLASS, *PFILE_INFORMATION_CLASS;PFILE_INFORMATION_CLASS285,9131
typedef struct _FILE_BASIC_INFORMATION 290,9284
    LARGE_INTEGER CreationTime;291,9325
    LARGE_INTEGER LastAccessTime;292,9357
    LARGE_INTEGER LastWriteTime;293,9391
    LARGE_INTEGER ChangeTime;294,9424
    ULONG FileAttributes;295,9454
} FILE_BASIC_INFORMATION, *PFILE_BASIC_INFORMATION;PFILE_BASIC_INFORMATION296,9480
typedef enum _FS_INFORMATION_CLASS 302,9750
    FileFsVolumeInformation=303,9787
    FileFsLabelInformation,304,9818
    FileFsSizeInformation,305,9878
    FileFsDeviceInformation,306,9905
    FileFsAttributeInformation,307,9934
    FileFsControlInformation,308,9966
    FileFsFullSizeInformation,309,9996
    FileFsObjectIdInformation,310,10027
    FileFsDriverPathInformation,311,10058
    FileFsMaximumInformation312,10108
} FS_INFORMATION_CLASS, *PFS_INFORMATION_CLASS;PFS_INFORMATION_CLASS313,10137
typedef struct _FILE_FS_SIZE_INFORMATION 315,10186
    LARGE_INTEGER TotalAllocationUnits;316,10229
    LARGE_INTEGER AvailableAllocationUnits;317,10269
    ULONG SectorsPerAllocationUnit;318,10313
    ULONG BytesPerSector;319,10349
} FILE_FS_SIZE_INFORMATION, *PFILE_FS_SIZE_INFORMATION;PFILE_FS_SIZE_INFORMATION320,10375
typedef struct _FILE_FS_DEVICE_INFORMATION 322,10432
    ULONG /*DEVICE_TYPE*/ DeviceType;323,10477
    ULONG Characteristics;324,10515
} FILE_FS_DEVICE_INFORMATION, *PFILE_FS_DEVICE_INFORMATION;PFILE_FS_DEVICE_INFORMATION325,10542
typedef struct _FILE_FS_VOLUME_INFORMATION 327,10603
    LARGE_INTEGER VolumeCreationTime;328,10648
    ULONG VolumeSerialNumber;329,10686
    ULONG VolumeLabelLength;330,10716
    BOOLEAN SupportsObjects;331,10745
    WCHAR VolumeLabel[VolumeLabel332,10774
} FILE_FS_VOLUME_INFORMATION, *PFILE_FS_VOLUME_INFORMATION;PFILE_FS_VOLUME_INFORMATION333,10800
#define FILE_REMOVABLE_MEDIA 336,10910
#define FILE_READ_ONLY_DEVICE 337,10969
#define FILE_FLOPPY_DISKETTE 338,11028
#define FILE_WRITE_ONCE_MEDIA 339,11087
#define FILE_REMOTE_DEVICE 340,11146
typedef struct _FILE_FS_FULL_SIZE_INFORMATION 342,11206
    LARGE_INTEGER TotalAllocationUnits;343,11254
    LARGE_INTEGER CallerAvailableAllocationUnits;344,11294
    LARGE_INTEGER ActualAvailableAllocationUnits;345,11344
    ULONG SectorsPerAllocationUnit;346,11394
    ULONG BytesPerSector;347,11430
} FILE_FS_FULL_SIZE_INFORMATION, *PFILE_FS_FULL_SIZE_INFORMATION;PFILE_FS_FULL_SIZE_INFORMATION348,11456
typedef struct _FILE_NETWORK_OPEN_INFORMATION 350,11523
    LARGE_INTEGER CreationTime;351,11571
    LARGE_INTEGER LastAccessTime;352,11603
    LARGE_INTEGER LastWriteTime;353,11637
    LARGE_INTEGER ChangeTime;354,11670
    LARGE_INTEGER AllocationSize;355,11700
    LARGE_INTEGER EndOfFile;356,11734
    ULONG   FileAttributes;357,11763
} FILE_NETWORK_OPEN_INFORMATION, *PFILE_NETWORK_OPEN_INFORMATION;PFILE_NETWORK_OPEN_INFORMATION358,11791
typedef enum _KEY_VALUE_INFORMATION_CLASS 360,11858
    KeyValueBasicInformation,361,11902
    KeyValueFullInformation,362,11932
    KeyValuePartialInformation,363,11961
    KeyValueFullInformationAlign64,364,11993
    KeyValuePartialInformationAlign64365,12029
} KEY_VALUE_INFORMATION_CLASS;366,12067
typedef struct _KEY_VALUE_FULL_INFORMATION 368,12099
    ULONG   TitleIndex;369,12144
    ULONG   Type;370,12168
    ULONG   DataOffset;371,12186
    ULONG   DataLength;372,12210
    ULONG   NameLength;373,12234
    WCHAR   Name[Name374,12258
} KEY_VALUE_FULL_INFORMATION, *PKEY_VALUE_FULL_INFORMATION;PKEY_VALUE_FULL_INFORMATION376,12374
typedef struct _KEY_VALUE_PARTIAL_INFORMATION 378,12435
    ULONG   TitleIndex;379,12483
    ULONG   Type;380,12507
    ULONG   DataLength;381,12525
    UCHAR   Data[Data382,12549
} KEY_VALUE_PARTIAL_INFORMATION, *PKEY_VALUE_PARTIAL_INFORMATION;PKEY_VALUE_PARTIAL_INFORMATION383,12598
typedef enum _KEY_INFORMATION_CLASS 385,12665
    KeyBasicInformation,386,12703
    KeyNodeInformation,387,12728
    KeyFullInformation,388,12752
    KeyNameInformation389,12776
} KEY_INFORMATION_CLASS;390,12799
typedef struct _KEY_NAME_INFORMATION 392,12825
    ULONG   NameLength;393,12864
    WCHAR   Name[Name394,12888
} KEY_NAME_INFORMATION, *PKEY_NAME_INFORMATION;PKEY_NAME_INFORMATION395,12937
typedef enum _SYSTEM_INFORMATION_CLASS 397,12986
    SystemBasicInformation 398,13027
    SystemProcessorInformation 399,13059
    SystemPerformanceInformation 400,13095
    SystemTimeOfDayInformation 401,13133
    SystemProcessesAndThreadsInformation 402,13169
    SystemProcessorTimes 403,13215
    SystemGlobalFlag 404,13245
    SystemModuleInformation 405,13271
    SystemLockInformation 406,13305
    SystemHandleInformation 407,13337
    SystemObjectInformation 408,13371
} SYSTEM_INFORMATION_CLASS;410,13437
typedef enum _EVENT_TYPE 413,13498
    NotificationEvent,414,13525
    SynchronizationEvent 415,13627
} EVENT_TYPE, *PEVENT_TYPE;PEVENT_TYPE416,13735
(NTAPI *PIO_APC_ROUTINE)PIO_APC_ROUTINE421,13853
typedef VOID (NTAPI *  PKNORMAL_ROUTINE 427,14062
typedef struct _RTL_USER_PROCESS_PARAMETERS 432,14288
    ULONG MaximumLength;433,14334
    ULONG Length;434,14359
    ULONG Flags;435,14377
    ULONG DebugFlags;436,14394
    PVOID ConsoleHandle;437,14416
    ULONG ConsoleFlags;438,14441
    HANDLE StdInputHandle;439,14465
    HANDLE StdOutputHandle;440,14492
    HANDLE StdErrorHandle;441,14520
    UNICODE_STRING CurrentDirectoryPath;442,14547
    HANDLE CurrentDirectoryHandle;443,14588
    UNICODE_STRING DllPath;444,14623
    UNICODE_STRING ImagePathName;445,14651
    UNICODE_STRING CommandLine;446,14685
    PVOID Environment;447,14717
    ULONG StartingPositionLeft;448,14740
    ULONG StartingPositionTop;449,14772
    ULONG Width;450,14803
    ULONG Height;451,14820
    ULONG CharWidth;452,14838
    ULONG CharHeight;453,14859
    ULONG ConsoleTextAttributes;454,14881
    ULONG WindowFlags;455,14914
    ULONG ShowWindowFlags;456,14937
    UNICODE_STRING WindowTitle;457,14964
    UNICODE_STRING DesktopName;458,14996
    UNICODE_STRING ShellInfo;459,15028
    UNICODE_STRING RuntimeData;460,15058
} RTL_USER_PROCESS_PARAMETERS, *PRTL_USER_PROCESS_PARAMETERS;PRTL_USER_PROCESS_PARAMETERS462,15146
#define FILE_PIPE_BYTE_STREAM_TYPE 465,15264
#define FILE_PIPE_MESSAGE_TYPE 466,15319
#define FILE_PIPE_BYTE_STREAM_MODE 469,15434
#define FILE_PIPE_MESSAGE_MODE 470,15485
#define FILE_PIPE_QUEUE_OPERATION 473,15592
#define FILE_PIPE_COMPLETE_OPERATION 474,15643

win32/os.c,12038
# undef ASSERT66,2516
# undef ASSERT_NOT_IMPLEMENTED67,2531
# undef ASSERT_NOT_TESTED68,2562
# undef ASSERT_CURIOSITY_ONCE69,2588
# define ASSERT(70,2618
# define ASSERT_NOT_IMPLEMENTED(71,2651
# define ASSERT_NOT_TESTED(72,2700
# define ASSERT_CURIOSITY_ONCE(73,2744
# undef LOG74,2792
# define LOG(75,2804
#define WOW64_SYSCALL_SETUP_SIZE 96,3839
#define WOW64_SYSCALL_STACK_SIZE 98,3963
const byte *wow64_syscall_stack wow64_syscall_stack102,4205
bool intercept_asynch 106,4339
bool intercept_callbacks 107,4370
process_id_t win32_pid 109,4477
void *peb_ptr;peb_ptr111,4579
static int os_version;112,4594
static uint os_service_pack_major;113,4617
static uint os_service_pack_minor;114,4652
static const char *os_name;os_name115,4687
app_pc vsyscall_page_start 116,4715
app_pc vsyscall_after_syscall 118,4804
app_pc vsyscall_syscall_end_pc 120,4890
uint kilo_hertz;125,5123
#define HEAP_INITIAL_SIZE 128,5170
app_pc dynamo_dll_start 131,5251
app_pc dynamo_dll_end 132,5283
static app_pc dynamo_dll_preferred_base 135,5380
enum {TLS_UNINITIALIZED TLS_UNINITIALIZED138,5462
enum {TLS_UNINITIALIZED = (ushort)138,5462
enum {TLS_UNINITIALIZED = (ushort) 0U}U138,5462
static ushort tls_local_state_offs 139,5502
static ushort tls_dcontext_offs 141,5604
app_pc parent_early_inject_address 144,5686
static int early_inject_location 148,5932
static app_pc early_inject_address 149,5992
static app_pc ldrpLoadDll_address_not_NT 150,6035
static app_pc ldrpLoadDll_address_NT 151,6084
static app_pc ldrpLoadImportModule_address 152,6129
dcontext_t *early_inject_load_helper_dcontext early_inject_load_helper_dcontext153,6180
get_nth_stack_frames_call_target(185,7060
check_for_ldrpLoadImportModule(216,8120
#define STACK_DEPTH_LdrpLoadImportModule 252,9812
DllMainThreadAttach(271,10414
DllMain(295,11271
#define STACK_DEPTH_LdrpLoadDll_NT 333,13337
#define STACK_DEPTH_LdrpLoadDll 334,13374
static profile_t *global_profile global_profile363,14553
static profile_t *dynamo_dll_profile dynamo_dll_profile364,14594
static profile_t *ntdll_profile ntdll_profile365,14639
file_t profile_file 366,14679
get_dll_bounds(370,14813
init_global_profiles(396,15595
dump_dll_profile(466,18572
exit_global_profiles(485,19216
os_supports_avx(522,20316
get_context_xstate_flag(533,20615
windows_version_init(554,21553
print_mem_quota(738,30527
os_init(770,31773
print_mem_stats(978,40063
os_fast_exit(1003,41120
os_slow_exit(1096,44542
os_terminate_wow64_stack(1118,45216
os_terminate_wow64_write_args(1155,46687
#define KILL_PROC_EXIT_STATUS 1171,47338
#define KILL_THREAD_EXIT_STATUS 1172,47371
os_terminate_static_arguments(1176,47476
    typedef struct _terminate_args_t 1181,47642
            const byte *debug_code;debug_code1183,47697
            byte pad_bytes[pad_bytes1184,47733
        } padding;1185,47787
            IN HANDLE ProcessOrThreadHandle;1187,47823
            IN NTSTATUS ExitStatus;1188,47868
        } args;1189,47904
    } terminate_args_t;1190,47920
os_terminate_common(1279,51939
os_terminate_with_code(1406,58239
os_terminate(1413,58434
os_tls_init(1419,58574
os_tls_exit(1425,58687
os_tls_calloc(1434,58963
os_tls_cfree(1441,59152
os_thread_init(1448,59265
os_thread_exit(1475,60201
os_thread_stack_exit(1487,60574
os_thread_under_dynamo(1561,64343
os_thread_not_under_dynamo(1570,64641
typedef struct _takeover_data_t 1583,65102
    app_pc continuation_pc;1584,65136
    bool in_progress;1585,65164
    thread_id_t tid;1586,65186
    HANDLE thread_handle;1589,65282
    CONTEXT_64 *cxt64;cxt641590,65308
    byte *cxt64_alloc;cxt64_alloc1591,65331
    ptr_uint_t memval_stack;1593,65423
    ptr_uint_t memval_r14;1594,65452
} takeover_data_t;1596,65486
typedef struct _thread_list_t 1599,65528
    HANDLE handle;1600,65560
    thread_id_t tid;1601,65579
    void *user_data;user_data1602,65656
} thread_list_t;1603,65705
    TAKEOVER_NEW 1607,65770
    TAKEOVER_TRIED,1608,65822
    TAKEOVER_SUCCESS,1609,65842
static generic_table_t *takeover_table;takeover_table1623,66482
#define INIT_HTABLE_SIZE_TAKEOVER 1624,66522
#define INVALID_PAYLOAD 1625,66584
takeover_table_entry_free(1628,66681
os_take_over_init(1645,67158
os_take_over_exit(1656,67617
os_take_over_mark_thread(1666,67910
os_take_over_unmark_thread(1675,68214
os_list_threads(1688,68734
thread_attach_remove_from_table(1751,71477
thread_attach_restore_full_state(1761,71786
thread_attach_translate(1789,72802
thread_attach_context_revert(1807,73460
thread_attach_exit(1823,74047
os_take_over_wow64_extra(1859,75777
os_take_over_thread(2010,82719
os_thread_take_over_suspended_native(2113,87720
os_take_over_all_unknown_threads(2128,88294
thread_attach_setup(2228,92792
client_thread_target(2306,95812
dr_create_client_thread(2328,96635
get_os_version(2363,97977
get_os_version_ex(2369,98027
is_in_dynamo_dll(2381,98385
mem_state_string(2388,98556
mem_type_string(2400,98810
prot_string(2412,99055
prot_is_readable(2429,99597
prot_is_writable(2448,100083
prot_is_executable(2456,100306
prot_is_copyonwrite(2465,100576
prot_is_guard(2477,100967
memprot_to_osprot(2484,101105
osprot_to_memprot(2509,101841
osprot_add_writecopy(2524,102188
osprot_add_write(2537,102574
osprot_replace_memprot(2550,102967
dump_mbi(2564,103415
dump_mbi_addr(2592,104608
is_pid_me(2618,105535
is_phandle_me(2624,105612
static char dynamorio_library_path[dynamorio_library_path2640,106123
get_dynamorio_library_path(2644,106269
should_inject_into_process(2668,107222
inject_into_process(2739,109977
is_first_thread_in_new_process(2828,114073
maybe_inject_into_process(2891,117355
is_child_in_thin_client(2936,119606
get_dynamorio_dll_start(2965,120526
get_dynamorio_dll_preferred_base(2972,120709
static app_pc highest_user_address 2982,121045
get_system_basic_info(2988,121265
is_user_address(3022,122580
merge_writecopy_pages(3040,123279
find_dynamo_library_vm_areas(3108,126327
print_dynamo_regions(3160,128459
# define MEM_STATS_ADD(3190,129555
add_mem_stats(3201,130026
mem_stats_snapshot(3254,132085
process_image(3394,137969
process_image_post_vmarea(3714,152981
process_memory_region(3761,154533
find_executable_vm_areas(3802,156397
void all_memory_areas_lock(3876,159702
void all_memory_areas_unlock(3877,159754
void update_all_memory_areas(3878,159806
bool remove_from_all_memory_areas(3881,159908
process_mmap(3889,160290
get_application_base(3939,162173
get_application_end(3951,162462
get_image_entry(3965,162822
os_tls_offset(3979,163284
get_local_state(3986,163467
get_local_state_extended(3993,163624
get_thread_private_dcontext(4001,163843
set_thread_private_dcontext(4015,164398
create_profile(4024,164575
free_profile(4063,166504
start_profile(4091,167669
stop_profile(4099,167812
dump_profile_range(4107,167953
dump_profile(4128,168888
sum_profile_range(4135,169054
sum_profile(4153,169738
reset_profile(4160,169896
os_raw_mem_free(4168,170051
os_raw_mem_alloc(4186,170625
os_heap_free(4215,171739
os_heap_reserve(4231,172256
find_free_memory_in_region(4249,172908
os_heap_reserve_in_region(4278,174062
#   define MAX_REGION_ITERS 4283,174253
os_heap_commit(4324,175852
os_heap_decommit(4344,176558
os_heap_systemwide_overcommit(4355,176875
os_heap_get_commit_limit(4377,177706
os_find_free_code_space_in_libs(4414,179370
thread_yield(4432,179952
thread_sleep(4439,180044
os_timeout(4450,180327
thread_suspend(4463,180685
thread_resume(4469,180779
thread_terminate(4475,180871
thread_get_mcontext(4481,180966
thread_set_mcontext(4493,181257
thread_get_context(4506,181666
thread_set_context(4512,181794
thread_set_self_context(4519,181957
thread_set_self_mcontext(4528,182163
get_num_processors(4539,182485
static wchar_t debugbox_title_buf[debugbox_title_buf4562,183494
static void init_debugbox_title_buf(4563,183546
debugbox(4579,184114
#define ID_MSGBOX_STATIC_TEXT 4604,184776
    char *message;message4607,184838
    char *title;title4608,184857
    HANDLE timer;4609,184874
    int seconds_left;4610,184892
    bool done;4611,184914
} timeout_context_t;4612,184929
#define print_timeout_message(4614,184951
message_box_timeout_thread(4626,185555
os_countdown_messagebox(4656,186563
os_countdown_messagebox(4698,187799
load_shared_library(4709,188136
lookup_library_routine(4727,188707
unload_shared_library(4733,188839
shared_library_error(4743,189058
shared_library_bounds(4756,189564
get_allocation_base(4774,190250
enum { MAX_QUERY_VM_BLOCKS 4795,190944
get_allocation_size_ex(4807,191401
get_allocation_size(4880,194270
query_memory_ex(4890,194609
get_memory_info(4962,197763
dr_virtual_query(4993,198790
get_stack_bounds(5012,199552
query_is_readable_without_exception(5096,203220
is_readable_without_exception_query_os(5121,204069
safe_read_syscall(5135,204727
safe_read_ex(5143,204962
safe_read(5160,205665
safe_write_ex(5170,206059
safe_write(5181,206453
get_current_protection(5194,206923
not_readable(5215,207700
mark_page_as_guard(5234,208287
internal_change_protection(5265,209478
os_set_protection(5465,218144
set_protection(5475,218419
change_protection(5490,219076
make_hookable(5500,219505
make_unhookable(5512,219993
make_writable(5526,220557
make_copy_on_writable(5537,220936
make_unwritable(5546,221263
convert_NT_to_Dos_path(5555,221520
convert_to_NT_file_path_wide(5645,225514
convert_to_NT_file_path_wide_free(5726,228529
convert_to_NT_file_path(5736,228839
os_internal_create_file(5842,233750
os_internal_create_file_test(5854,234188
os_file_exists(5867,234581
os_get_file_size(5883,235324
os_get_file_size_by_handle(5907,236082
os_set_file_size(5926,236698
os_get_disk_free_space(5946,237412
os_copy_file(6033,240944
os_create_dir(6050,241625
os_open_directory(6067,242401
os_open(6090,243276
os_close(6133,245295
os_open_protected(6140,245384
os_close_protected(6146,245492
os_write(6156,245772
os_read(6180,246422
os_flush(6200,246891
os_seek(6207,247042
os_tell(6245,248090
os_delete_mapped_file(6267,248774
os_delete_file_w(6340,251734
os_delete_file(6386,253458
os_rename_file(6404,254124
os_rename_file_in_directory(6466,256919
os_map_file(6508,258650
#   define MAX_MAP_LOOP_ITERS 6519,258974
os_unmap_file(6588,261918
translate_context(6603,262501
set_mcontext_for_syscall(6628,263440
os_raise_exception(6674,264963
    struct _raise_exception_arguments_t 6682,265261
        PEXCEPTION_RECORD ExceptionRecord;6683,265303
        PCONTEXT Context;6684,265346
        DWORD SearchFrames;6685,265372
os_dump_core_segment_info(6714,266558
os_dump_core_dump_thread(6739,267510
os_dump_core_live_dump(6788,269622
os_dump_core_external_dump(7020,279600
os_dump_core(7072,281960
END_DATA_SECTION(7128,283792
detach_helper(7284,291831
detach_internal(7669,309497
detach_internal_synch(7684,310073
is_thread_currently_native(7696,310399
mutex_get_contended_event(7705,310619
os_wait_event(7735,311687
os_wait_handle(7817,315435
mutex_wait_contended_lock(7833,315803
mutex_notify_released_lock(7852,316532
rwlock_wait_contended_writer(7860,316722
rwlock_notify_writer(7871,317141
rwlock_wait_contended_reader(7883,317518
rwlock_notify_readers(7894,317947
create_event(7905,318322
destroy_event(7911,318397
signal_event(7917,318455
reset_event(7923,318510
wait_for_event(7930,318634
get_timer_frequency(7936,318754
os_random_seed(7965,319698
early_inject_init(7983,320184
earliest_inject_init(8240,333326
earliest_inject_cleanup(8281,335035
#define SECURITY_MAX_SID_STRING_SIZE 8297,335590
get_process_SID_string(8304,335880
get_Everyone_SID(8324,336534
get_process_owner_SID(8341,336989
os_validate_owner_equals(8368,337890
os_filesystem_supports_ownership(8462,341443
open_trusted_cache_root_directory(8501,342835
os_user_directory_supports_ownership(8550,344902
os_validate_user_owned(8589,346726
os_current_user_directory(8625,348143
os_check_option_compatibility(8720,352540

win32/os_exports.h,6168
#define _OS_EXPORTS_H_ 43,2007
typedef ushort cxt_seg_t;47,2126
# define CXT_XIP 48,2152
# define CXT_XAX 49,2173
# define CXT_XCX 50,2194
# define CXT_XDX 51,2215
# define CXT_XBX 52,2236
# define CXT_XSP 53,2257
# define CXT_XBP 54,2278
# define CXT_XSI 55,2299
# define CXT_XDI 56,2320
# define CXT_XMM(60,2497
# define CXT_XFLAGS 64,2748
typedef DWORD cxt_seg_t;66,2781
# define CXT_XIP 67,2806
# define CXT_XAX 68,2827
# define CXT_XCX 69,2848
# define CXT_XDX 70,2869
# define CXT_XBX 71,2890
# define CXT_XSP 72,2911
# define CXT_XBP 73,2932
# define CXT_XSI 74,2953
# define CXT_XDI 75,2974
# define CXT_XFLAGS 76,2995
# define FXSAVE_XMM0_OFFSET 81,3213
# define CXT_XMM(82,3245
#define WINDOWS_VERSION_8 94,3685
#define WINDOWS_VERSION_7 95,3719
#define WINDOWS_VERSION_VISTA 96,3753
#define WINDOWS_VERSION_2003 97,3787
#define WINDOWS_VERSION_XP 98,3821
#define WINDOWS_VERSION_2000 99,3855
#define WINDOWS_VERSION_NT 100,3889
    EXCEPTION_LIST_TIB_OFFSET 112,4328
    EXCEPTION_LIST_TIB_OFFSET = 0x000,x000112,4328
    TOP_STACK_TIB_OFFSET 113,4367
    TOP_STACK_TIB_OFFSET      = 0x008,x008113,4367
    BASE_STACK_TIB_OFFSET 114,4406
    BASE_STACK_TIB_OFFSET     = 0x010,x010114,4406
    FIBER_DATA_TIB_OFFSET 115,4445
    FIBER_DATA_TIB_OFFSET     = 0x020,x020115,4445
    SELF_TIB_OFFSET 116,4484
    SELF_TIB_OFFSET           = 0x030,x030116,4484
    PID_TIB_OFFSET 117,4523
    PID_TIB_OFFSET            = 0x040,x040117,4523
    TID_TIB_OFFSET 118,4562
    TID_TIB_OFFSET            = 0x048,x048118,4562
    ERRNO_TIB_OFFSET 119,4601
    ERRNO_TIB_OFFSET          = 0x068,x068119,4601
    WOW64_TIB_OFFSET 120,4640
    WOW64_TIB_OFFSET          = 0x100,x100120,4640
    PEB_TIB_OFFSET 121,4679
    PEB_TIB_OFFSET            = 0x060,x060121,4679
    FLS_DATA_TIB_OFFSET 122,4718
    FLS_DATA_TIB_OFFSET       = 0x17c8,x17c8122,4718
    NT_RPC_TIB_OFFSET 123,4758
    NT_RPC_TIB_OFFSET         = 0x1698,x1698123,4758
    NLS_CACHE_TIB_OFFSET 124,4798
    NLS_CACHE_TIB_OFFSET      = 0x17a0,x17a0124,4798
    EXCEPTION_LIST_TIB_OFFSET 126,4844
    EXCEPTION_LIST_TIB_OFFSET = 0x00,x00126,4844
    TOP_STACK_TIB_OFFSET 127,4882
    TOP_STACK_TIB_OFFSET      = 0x04,x04127,4882
    BASE_STACK_TIB_OFFSET 128,4920
    BASE_STACK_TIB_OFFSET     = 0x08,x08128,4920
    FIBER_DATA_TIB_OFFSET 129,4958
    FIBER_DATA_TIB_OFFSET     = 0x10,x10129,4958
    SELF_TIB_OFFSET 130,4996
    SELF_TIB_OFFSET           = 0x18,x18130,4996
    PID_TIB_OFFSET 131,5034
    PID_TIB_OFFSET            = 0x20,x20131,5034
    TID_TIB_OFFSET 132,5072
    TID_TIB_OFFSET            = 0x24,x24132,5072
    ERRNO_TIB_OFFSET 133,5110
    ERRNO_TIB_OFFSET          = 0x34,x34133,5110
    WOW64_TIB_OFFSET 134,5148
    WOW64_TIB_OFFSET          = 0xC0,xC0134,5148
    PEB_TIB_OFFSET 135,5186
    PEB_TIB_OFFSET            = 0x30,x30135,5186
    FLS_DATA_TIB_OFFSET 136,5224
    FLS_DATA_TIB_OFFSET       = 0xfb4,xfb4136,5224
    NT_RPC_TIB_OFFSET 137,5263
    NT_RPC_TIB_OFFSET         = 0xf1c,xf1c137,5263
    NLS_CACHE_TIB_OFFSET 138,5302
    NLS_CACHE_TIB_OFFSET      = 0xfa0,xfa0138,5302
# define SEG_TLS 143,5363
# define LIB_SEG_TLS 144,5387
# define SEG_TLS 146,5441
# define LIB_SEG_TLS 147,5485
#define get_tls(151,5630
set_tls(155,5755
#define get_own_teb(161,5965
#define OS_ALLOC_GRANULARITY 167,6189
#define MAP_FILE_VIEW_ALIGNMENT 168,6229
#define CONTEXT_HEAP_SIZE(184,6852
#define CONTEXT_HEAP_SIZE_OPAQUE 185,6937
# define ACTUAL_PRAGMA(216,8175
# define ACTUAL_PRAGMA(218,8222
#define START_DATA_SECTION(220,8270
#define VAR_IN_SECTION(221,8341
#define END_DATA_SECTION(222,8384
#define START_DO_NOT_OPTIMIZE 223,8439
#define END_DO_NOT_OPTIMIZE 224,8505
#define VSYSCALL_PAGE_START_BOOTSTRAP_VALUE 253,9396
#define VSYSCALL_BOOTSTRAP_ADDR 254,9474
#define VSYSCALL_AFTER_SYSCALL_BOOTSTRAP_VALUE 255,9540
file_t profile_file;274,10287
mutex_t profile_dump_lock;275,10308
typedef struct _profile_t 277,10336
    void *start;start278,10364
    void *end;end279,10381
    uint bucket_shift;280,10396
    uint *buffer;buffer281,10419
    size_t buffer_size;282,10437
    bool enabled;283,10476
    dcontext_t *dcontext;dcontext284,10494
    HANDLE handle;285,10520
} profile_t;286,10539
    HIDE_FROM_QUERY_TYPE_PROTECT 320,11285
    HIDE_FROM_QUERY_TYPE_PROTECT   = 0x1,x1320,11285
    HIDE_FROM_QUERY_BASE_SIZE 321,11355
    HIDE_FROM_QUERY_BASE_SIZE      = 0x2,x2321,11355
    HIDE_FROM_QUERY_RETURN_INVALID 323,11512
    HIDE_FROM_QUERY_RETURN_INVALID = 0x4,x4323,11512
enum tls_flags 328,11691
    TLS_FLAG_BITMAP_TOP_DOWN 329,11708
    TLS_FLAG_BITMAP_TOP_DOWN  = 0x1,x1329,11708
    TLS_FLAG_CACHE_LINE_START 332,11918
    TLS_FLAG_CACHE_LINE_START = 0x2,x2332,11918
    TLS_FLAG_BITMAP_FILL 336,12195
    TLS_FLAG_BITMAP_FILL      = 0x4,x4336,12195
    OS_ASLR_DISABLE_ASLR_ALL 347,12681
    OS_ASLR_DISABLE_ASLR_ALL      = 0x01,x01347,12681
    OS_ASLR_DISABLE_PCACHE_ALL 348,12757
    OS_ASLR_DISABLE_PCACHE_ALL    = 0x02,x02348,12757
    OS_ASLR_DISABLE_ASLR_DETECT 353,12956
    OS_ASLR_DISABLE_ASLR_DETECT   = 0x10,x10353,12956
    OS_ASLR_DISABLE_PCACHE_DETECT 354,13018
    OS_ASLR_DISABLE_PCACHE_DETECT = 0x20,x20354,13018
    DETACH_UNHANDLED_VIOLATION 361,13258
    DETACH_UNHANDLED_VIOLATION   = 0x01,x01361,13258
    DETACH_UNSUPPORTED_MODULE 364,13432
    DETACH_UNSUPPORTED_MODULE    = 0x02,x02364,13432
    DETACH_ON_TERMINATE 371,13850
    DETACH_ON_TERMINATE          = 0x010,x010371,13850
    DETACH_ON_TERMINATE_NO_CLEAN 373,13948
    DETACH_ON_TERMINATE_NO_CLEAN = 0x020,x020373,13948
    DETACH_ON_TERMINATE_NO_KILL 379,14233
    DETACH_ON_TERMINATE_NO_KILL  = 0x040,x040379,14233
    DETACH_ON_TERMINATE_NO_LOCKS 384,14525
    DETACH_ON_TERMINATE_NO_LOCKS = 0x080,x080384,14525
    DETACH_ON_TERMINATE_NO_HANG 387,14695
    DETACH_ON_TERMINATE_NO_HANG  = 0x100,x100387,14695
    DETACH_NORMAL_TYPE 396,14965
    DETACH_BAD_STATE 397,15003
    DETACH_BAD_STATE_NO_CLEANUP 398,15041
get_app_pc_from_intercept_pc_if_necessary(474,17798

win32/os_private.h,5666
#define _OS_PRIVATE_H_ 42,1937
#define GLOBAL_NT_PREFIX 47,2056
typedef struct _os_thread_data_t 53,2237
    byte *stack_base;stack_base60,2690
    byte *stack_top;stack_top61,2712
    bool teb_stack_no_longer_valid;62,2733
} os_thread_data_t;63,2769
    byte *dr_base;dr_base73,3016
    byte *ntdll_base;ntdll_base74,3035
    byte *tofree_base;tofree_base75,3057
    byte *hook_location;hook_location76,3080
    char dynamorio_lib_path[dynamorio_lib_path77,3105
} earliest_args_t;78,3144
#define EARLY_INJECT_HOOK_SIZE 85,3418
#define SYSCALL_NOT_PRESENT 155,5020
#define SYSCALL(193,6221
#undef SYSCALL198,6514
    SYS_MAX,199,6529
#define SYSCALL_PARAM_MAX_OFFSET 212,7188
# define SYSCALL_PARAM_OFFSET(215,7307
# define SYSCALL_PARAM_OFFSET(224,7680
sys_param_addr(233,8052
sys_param(251,8517
postsys_param(261,8831
#define INTERCEPTION_CODE_SIZE 304,10123
#define THREAD_START_ADDR 307,10243
#define THREAD_START_ARG 308,10299
#define UNDER_DYN_HACK 319,10444
#define IS_UNDER_DYN_HACK(320,10472
#define INTERCEPT_POINT(350,11437
#define INTERCEPT_ALL_POINTS 351,11475
    INTERCEPT_ALL_POINTS364,12101
} retakeover_point_t;365,12126
#undef INTERCEPT_POINT366,12148
# undef CONTEXT_XSTATE 397,13394
#define CONTEXT_XSTATE 409,13960
#define CONTEXT_XMM_FLAG 410,13998
#define CONTEXT_YMM_FLAG 411,14087
#define CONTEXT_PRESERVE_XMM 412,14127
#define CONTEXT_PRESERVE_YMM 413,14212
#define CONTEXT_DR_STATE_NO_YMM 414,14257
#define CONTEXT_DR_STATE 416,14411
#define CONTEXT_DR_STATE_ALLPROC 421,14699
#define XSTATE_HEADER_SIZE 424,14859
#define YMMH_AREA(425,14907
#define MAX_CONTEXT_64_SIZE 426,14967
# define MAX_CONTEXT_SIZE 428,15043
# define MAX_CONTEXT_SIZE 430,15101
      EXCEPTION_INFORMATION_READ_EXECUTE_FAULT 434,15181
      EXCEPTION_INFORMATION_WRITE_FAULT 437,15328
      EXCEPTION_INFORMATION_EXECUTE_FAULT 438,15380
typedef struct DECLSPEC_ALIGN(451,15906
typedef struct _XMM_SAVE_AREA32 456,16006
    WORD   ControlWord;457,16040
    WORD   StatusWord;458,16064
    BYTE  TagWord;459,16087
    BYTE  Reserved1;460,16106
    WORD   ErrorOpcode;461,16127
    DWORD ErrorOffset;462,16151
    WORD   ErrorSelector;463,16174
    WORD   Reserved2;464,16200
    DWORD DataOffset;465,16222
    WORD   DataSelector;466,16244
    WORD   Reserved3;467,16269
    DWORD MxCsr;468,16291
    DWORD MxCsr_Mask;469,16308
    M128A FloatRegisters[FloatRegisters470,16330
    M128A XmmRegisters[XmmRegisters471,16359
    BYTE  Reserved4[Reserved4472,16387
} XMM_SAVE_AREA32, *PXMM_SAVE_AREA32;PXMM_SAVE_AREA32473,16412
typedef XSAVE_FORMAT XMM_SAVE_AREA32,475,16457
typedef XSAVE_FORMAT XMM_SAVE_AREA32, *PXMM_SAVE_AREA32;PXMM_SAVE_AREA32475,16457
typedef struct DECLSPEC_ALIGN(478,16523
            M128A Header[Header558,17760
            M128A Legacy[Legacy559,17789
            M128A Xmm0;560,17818
            M128A Xmm1;561,17842
            M128A Xmm2;562,17866
            M128A Xmm3;563,17890
            M128A Xmm4;564,17914
            M128A Xmm5;565,17938
            M128A Xmm6;566,17962
            M128A Xmm7;567,17986
            M128A Xmm8;568,18010
            M128A Xmm9;569,18034
            M128A Xmm10;570,18058
            M128A Xmm11;571,18083
            M128A Xmm12;572,18108
            M128A Xmm13;573,18133
            M128A Xmm14;574,18158
            M128A Xmm15;575,18183
    } DUMMYUNIONNAME;577,18235
    M128A VectorRegister[VectorRegister583,18298
    DWORD64 VectorControl;584,18328
    DWORD64 DebugControl;590,18411
    DWORD64 LastBranchToRip;591,18437
    DWORD64 LastBranchFromRip;592,18466
    DWORD64 LastExceptionToRip;593,18497
    DWORD64 LastExceptionFromRip;594,18529
} CONTEXT_64,595,18563
} CONTEXT_64, *PCONTEXT_64;PCONTEXT_64595,18563
#define __IMAGE_UNWIND_INFO666,20486
typedef enum _unwind_opcode_t 681,21369
    UWOP_PUSH_NONVOL 682,21401
    UWOP_ALLOC_LARGE,683,21457
    UWOP_ALLOC_SMALL,684,21525
    UWOP_SET_FPREG,685,21592
    UWOP_SAVE_NONVOL,686,21671
    UWOP_SAVE_NONVOL_FAR,687,21748
    UWOP_SAVE_XMM128,688,21828
    UWOP_SAVE_XMM128_FAR,689,21904
    UWOP_PUSH_MACHFRAME 690,21983
} unwind_opcode_t;691,22055
typedef union _unwind_code_t 693,22075
        byte CodeOffset;695,22119
        byte UnwindOp 696,22144
        byte OpInfo 697,22170
    USHORT FrameOffset;699,22203
} unwind_code_t;700,22227
# define UNW_FLAG_EHANDLER 703,22271
# define UNW_FLAG_UHANDLER 704,22304
# define UNW_FLAG_CHAININFO 705,22337
typedef struct _unwind_info_t 708,22378
    byte Version 709,22410
    byte Flags 710,22436
    byte SizeOfProlog;711,22462
    byte CountOfCodes;712,22485
    byte FrameRegister:FrameRegister713,22508
    byte FrameOffset 714,22534
    unwind_code_t UnwindCode[UnwindCode715,22560
    unwind_code_t MoreUnwindCode[MoreUnwindCode719,22786
        OPTIONAL ULONG ExceptionHandler;721,22868
        OPTIONAL ULONG FunctionEntry;722,22909
    OPTIONAL ULONG ExceptionData[ExceptionData724,22954
} unwind_info_t;726,22997
#define UNWIND_INFO_PTR_ADDR(729,23072
#define UNWIND_INFO_PTR_RVA(733,23249
#define UNWIND_INFO_DATA_ADDR(736,23384
#define UNWIND_INFO_DATA_RVA(737,23460
typedef struct _scope_table_t 742,23667
    ULONG Count;743,23699
        ULONG BeginAddress;745,23729
        ULONG EndAddress;746,23757
        ULONG HandlerAddress;747,23783
        ULONG JumpTarget;748,23813
    } ScopeRecord[ScopeRecord749,23839
} scope_table_t;750,23861
#define RVA_TO_VA(756,23951
enum {SYMBOLS_LOGLEVEL SYMBOLS_LOGLEVEL795,24941
#define PAGE_PROTECTION_QUALIFIERS 872,27055
#define IPC_ALERT(880,27280

win32/pre_inject.c,763
#define WIN32_LEAN_AND_MEAN58,2532
# undef assert85,3307
#define assert 88,3370
#   define ASSERT(92,3503
#   define ASSERT(94,3589
# define ASSERT(97,3696
#define BUFFER_SIZE_BYTES(105,3901
#define BUFFER_SIZE_ELEMENTS(106,3949
#define BUFFER_LAST_ELEMENT(107,4027
#define NULL_TERMINATE_BUFFER(108,4098
#define VERBOSE 113,4380
# define VERBOSE_MESSAGE(118,4523
# define VERBOSE_MESSAGE(120,4596
display_error_helper(124,4646
internal_error(135,4976
# define FILENAME_LENGTH 138,5043
# define FILENAME_LENGTH 141,5123
display_error(154,5472
typedef int (*int_func_t)int_func_t163,5667
typedef void (*void_func_t)void_func_t164,5697
load_dynamorio_lib(171,5852
parameters_present(343,12842
process_attach(372,13705
__declspec(446,16469

win32/syscall.c,5254
int *syscalls syscalls49,2103
int *wow64_index wow64_index51,2210
app_pc int_syscall_address 59,2611
app_pc sysenter_ret_address 65,3029
#define SNAPSHOT_THRESHOLD 74,3487
const char * const syscall_names[syscall_names78,3589
#define SYSCALL(79,3628
#undef SYSCALL84,3920
const int windows_8_x64_syscalls[windows_8_x64_syscalls86,3938
#define SYSCALL(87,3977
#undef SYSCALL92,4265
const int windows_8_wow64_syscalls[windows_8_wow64_syscalls94,4283
#define SYSCALL(95,4324
#undef SYSCALL100,4612
const int windows_8_x86_syscalls[windows_8_x86_syscalls102,4630
#define SYSCALL(103,4669
#undef SYSCALL108,4957
const int windows_7_x64_syscalls[windows_7_x64_syscalls110,4975
#define SYSCALL(111,5014
#undef SYSCALL116,5302
const int windows_7_syscalls[windows_7_syscalls118,5320
#define SYSCALL(119,5355
#undef SYSCALL124,5643
const int windows_vista_sp1_x64_syscalls[windows_vista_sp1_x64_syscalls126,5661
#define SYSCALL(127,5708
#undef SYSCALL132,6001
const int windows_vista_sp1_syscalls[windows_vista_sp1_syscalls134,6019
#define SYSCALL(135,6062
#undef SYSCALL140,6351
const int windows_vista_sp0_x64_syscalls[windows_vista_sp0_x64_syscalls142,6369
#define SYSCALL(143,6416
#undef SYSCALL148,6709
const int windows_vista_sp0_syscalls[windows_vista_sp0_syscalls150,6727
#define SYSCALL(151,6770
#undef SYSCALL156,7059
const int windows_2003_syscalls[windows_2003_syscalls158,7077
#define SYSCALL(159,7115
#undef SYSCALL164,7402
const int windows_XP_x64_syscalls[windows_XP_x64_syscalls166,7420
#define SYSCALL(167,7460
#undef SYSCALL172,7747
const int windows_XP_wow64_index[windows_XP_wow64_index175,7810
#define SYSCALL(176,7849
#undef SYSCALL181,8137
const int windows_XP_syscalls[windows_XP_syscalls183,8155
#define SYSCALL(184,8191
#undef SYSCALL189,8476
const int windows_2000_syscalls[windows_2000_syscalls191,8494
#define SYSCALL(192,8532
#undef SYSCALL197,8818
const int windows_NT_sp4_syscalls[windows_NT_sp4_syscalls199,8836
#define SYSCALL(200,8876
#undef SYSCALL205,9164
const int windows_NT_sp3_syscalls[windows_NT_sp3_syscalls208,9244
#define SYSCALL(209,9284
#undef SYSCALL214,9572
const int windows_NT_sp0_syscalls[windows_NT_sp0_syscalls217,9652
#define SYSCALL(218,9692
#undef SYSCALL223,9980
const uint syscall_argsz[syscall_argsz227,10035
# define SYSCALL(229,10077
# define SYSCALL(234,10352
#undef SYSCALL240,10650
static const int syscall_requires_action[syscall_requires_action246,10828
#define SYSCALL(247,10875
#undef SYSCALL252,11161
static byte *syscall_trampoline_pc[syscall_trampoline_pc256,11226
static app_pc syscall_trampoline_skip_pc[syscall_trampoline_skip_pc257,11271
static app_pc syscall_trampoline_hook_pc[syscall_trampoline_hook_pc258,11322
static app_pc syscall_trampoline_copy_pc[syscall_trampoline_copy_pc259,11373
static byte syscall_trampoline_gbop_fpo_offset[syscall_trampoline_gbop_fpo_offset268,11746
#define MAX_NTOSKRNL_SYSCALL_NUM 320,14167
ignorable_system_call(323,14214
optimizable_system_call(345,15169
syscall_while_native(367,15788
intercept_syscall_for_thin_client(542,25256
intercept_native_syscall(558,25824
init_syscall_trampolines(594,27385
exit_syscall_trampolines(637,29676
check_syscall_array_sizes(655,30252
check_syscall_numbers(672,31124
align_page_boundary(705,32377
is_newly_created_process(721,33012
syscall_uses_wow64_index(799,36546
syscall_uses_edx_param_base(806,36692
#define SYSCALL_PC(820,37393
#define SET_RETURN_VAL(830,37827
pre_system_call_param_base(842,38193
presys_CreateProcess(859,38649
presys_CreateUserProcess(904,40639
presys_CreateThread(983,44492
presys_CreateThreadEx(1030,46824
presys_CreateWorkerFactory(1073,48629
static const char * const env_to_propagate[env_to_propagate1102,49594
static const wchar_t * const wenv_to_propagate[wenv_to_propagate1109,49786
#define NUM_ENV_TO_PROPAGATE 1116,49992
add_dr_env_vars(1120,50141
not_first_thread_in_new_process(1299,57446
presys_ResumeThread(1310,57801
presys_TerminateProcess(1382,61293
presys_TerminateThread(1469,65596
presys_SetContextThread(1546,69150
is_cb_return_syscall(1677,75644
presys_CallbackReturn(1690,76032
check_for_stack_free(1727,77960
presys_AllocateVirtualMemory(1759,79519
presys_FreeVirtualMemory(1851,84180
presys_ProtectVirtualMemory(1979,89681
presys_MapViewOfSection(2132,97047
presys_UnmapViewOfSection(2175,98950
presys_FlushInstructionCache(2250,102119
presys_CreateSection(2292,103675
presys_Close(2325,105101
presys_OpenFile(2339,105506
pre_system_call(2371,106860
postsys_CreateUserProcess(2599,116977
postsys_GetContextThread(2709,122479
postsys_SuspendThread(2856,129362
postsys_AllocateVirtualMemory(3002,136895
postsys_QueryVirtualMemory(3149,144072
postsys_create_or_open_section(3246,149216
postsys_CreateSection(3332,153515
postsys_OpenSection(3372,155328
postsys_MapViewOfSection(3457,159206
postsys_UnmapViewOfSection(3609,166174
postsys_DuplicateObject(3643,167617
void post_system_call(3671,169009
dr_syscall_get_param(3903,180494
dr_syscall_set_param(3919,181130
dr_syscall_get_result(3936,181768
dr_syscall_set_result(3946,182064
dr_syscall_set_sysnum(3957,182426
dr_syscall_invoke_another(3969,182824

win32/syscallx.h,2561
#define NONE 90,3911
#define ACTION_LOG 92,4028
SYSCALL(Continue,96,4518
SYSCALL(CallbackReturn,97,4691
SYSCALL(SetContextThread,98,4864
SYSCALL(GetContextThread,99,5037
SYSCALL(CreateProcess,100,5210
SYSCALL(CreateProcessEx,101,5383
SYSCALL(CreateUserProcess,102,5556
SYSCALL(TerminateProcess,103,5729
SYSCALL(CreateThread,104,5902
SYSCALL(CreateThreadEx,105,6075
SYSCALL(CreateWorkerFactory,106,6248
SYSCALL(TerminateThread,107,6421
SYSCALL(SuspendThread,108,6594
SYSCALL(ResumeThread,109,6767
SYSCALL(AllocateVirtualMemory,110,6940
SYSCALL(FreeVirtualMemory,reeVirtualMemory111,7113
SYSCALL(ProtectVirtualMemory,112,7286
SYSCALL(QueryVirtualMemory,113,7459
SYSCALL(WriteVirtualMemory,114,7632
SYSCALL(MapViewOfSection,115,7805
SYSCALL(UnmapViewOfSection,116,7978
SYSCALL(UnmapViewOfSectionEx,117,8151
SYSCALL(FlushInstructionCache,lushInstructionCache118,8324
SYSCALL(FreeUserPhysicalPages,reeUserPhysicalPages119,8497
SYSCALL(MapUserPhysicalPages,120,8670
SYSCALL(SetInformationVirtualMemory,121,8843
SYSCALL(Wow64AllocateVirtualMemory64,122,9016
SYSCALL(OpenSection,125,9279
SYSCALL(CreateSection,126,9452
SYSCALL(Close,127,9625
SYSCALL(DuplicateObject,128,9798
SYSCALL(AlertResumeThread,134,10123
SYSCALL(OpenFile,136,10303
SYSCALL(TestAlert,138,10523
SYSCALL(RaiseException,139,10696
SYSCALL(CreateFile,140,10869
SYSCALL(CreateKey,141,11042
SYSCALL(OpenKey,142,11215
SYSCALL(OpenKeyEx,143,11388
SYSCALL(OpenProcess,144,11561
SYSCALL(OpenProcessToken,145,11734
SYSCALL(OpenProcessTokenEx,146,11907
SYSCALL(OpenThread,147,12080
SYSCALL(OpenThreadToken,148,12253
SYSCALL(OpenThreadTokenEx,149,12426
SYSCALL(QueryAttributesFile,150,12599
SYSCALL(QueryFullAttributesFile,151,12772
SYSCALL(SetInformationFile,152,12945
SYSCALL(SetInformationThread,153,13118
SYSCALL(SetValueKey,154,13291
#undef NONE156,13465
#undef ACTION_LOG157,13477
SYSCALL(AlertThread,193,15569
SYSCALL(DelayExecution,194,15705
SYSCALL(ReplyWaitReceivePort,195,15841
SYSCALL(ReplyWaitReceivePortEx,196,15977
SYSCALL(ReplyWaitReplyPort,197,16113
SYSCALL(ReplyWaitSendChannel,198,16249
SYSCALL(RequestWaitReplyPort,199,16385
SYSCALL(SendWaitReplyChannel,200,16521
SYSCALL(SetHighWaitLowEventPair,201,16657
SYSCALL(SetLowWaitHighEventPair,202,16793
SYSCALL(SignalAndWaitForSingleObject,203,16929
SYSCALL(WaitForDebugEvent,204,17065
SYSCALL(WaitForKeyedEvent,205,17201
SYSCALL(WaitForMultipleObjects,206,17337
SYSCALL(WaitForSingleObject,207,17473
SYSCALL(WaitHighEventPair,208,17609
SYSCALL(WaitLowEventPair,209,17745

x86/arch.c,5816
generated_code_t *shared_code shared_code69,2638
generated_code_t *shared_code_x86 shared_code_x8675,2898
generated_code_t *shared_code_x86_to_x64 shared_code_x86_to_x6479,3069
static int syscall_method 82,3126
byte *app_sysenter_instr_addr app_sysenter_instr_addr83,3184
static bool sysenter_hook_failed 85,3234
reg_spill_tls_offs(102,3787
dump_emitted_routines(117,4223
dump_emitted_routines_to_file(207,7800
code_align_forward(226,8435
move_to_start_of_cache_line(236,8641
#define GENCODE_RESERVE_SIZE 246,9032
#define GENCODE_COMMIT_SIZE 248,9076
check_size_and_cache_line(252,9200
release_final_page(267,9773
shared_gencode_init(288,10695
far_ibl_set_targets(514,20147
arch_init(538,21152
arch_extract_profile(640,25569
arch_profile_exit(728,29574
arch_exit(739,29852
emit_ibl_routine_and_template(762,30615
emit_ibl_routines(802,32290
emit_syscall_routines(862,35353
arch_thread_init(966,40492
arch_thread_profile_exit(1165,48904
arch_thread_exit(1172,49035
arch_patch_syscall_common(1205,50133
arch_patch_syscall(1217,50744
update_generated_hashtable_access(1228,51128
protect_generated_code(1234,51239
get_source_fragment_type(1260,52196
is_shared_syscall_routine(1274,52675
is_indirect_branch_lookup_routine(1296,53674
get_trace_ibl_routine(1309,54115
get_private_ibl_routine(1334,54971
get_shared_ibl_routine(1352,55561
get_alternate_ibl_routine(1369,56105
get_unlinked_type(1392,57004
get_linked_type(1405,57288
get_linked_entry(1418,57553
get_trace_cmp_entry(1443,58569
get_unlinked_entry(1456,59050
in_generated_shared_routine(1474,59775
in_generated_routine(1491,60456
in_context_switch_code(1502,60787
in_indirect_branch_lookup_code(1512,61170
fcache_enter_routine(1533,61963
get_fcache_enter_private_routine(1541,62195
get_reset_exit_stub(1547,62307
get_do_syscall_entry(1554,62463
get_fcache_enter_indirect_routine(1562,62641
get_do_callback_return_entry(1568,62853
get_do_int_syscall_entry(1576,63104
get_do_clone_syscall_entry(1583,63264
get_do_vmkuw_syscall_entry(1590,63448
fcache_return_routine(1599,63627
fcache_return_routine_ex(1606,63783
fcache_return_coarse_routine(1613,63996
trace_head_return_coarse_routine(1624,64306
get_clean_call_save(1635,64624
get_clean_call_restore(1647,65003
get_client_ibl_xfer_entry(1660,65412
get_ibl_routine_type_ex(1678,65995
get_ibl_routine_type(1811,71299
get_ibl_routine_template_type(1821,71679
get_branch_type_name(1861,73031
get_ibl_branch_type(1869,73256
get_ibl_routine_name(1888,73723
get_ibl_routine_code_internal(1983,79127
get_ibl_routine_ex(2026,80776
get_ibl_routine(2066,82119
get_ibl_routine_template(2075,82468
table_flags_to_frag_flags(2093,83229
get_target_delete_entry_pc(2121,84545
get_ibl_routine_code_ex(2148,85726
get_ibl_routine_code(2162,86224
shared_syscall_routine_ex(2183,87188
shared_syscall_routine(2195,87569
unlinked_shared_syscall_routine_ex(2201,87707
unlinked_shared_syscall_routine(2213,88106
after_shared_syscall_code(2219,88262
after_shared_syscall_code_ex(2225,88407
after_shared_syscall_addr(2233,88687
after_do_syscall_code(2247,89134
after_do_syscall_code_ex(2253,89271
after_do_syscall_addr(2261,89533
after_do_shared_syscall_addr(2272,89879
is_after_main_do_syscall_addr(2284,90383
is_after_do_syscall_addr(2293,90710
is_after_syscall_address(2306,91261
is_after_syscall_that_rets(2326,91876
get_new_thread_start(2346,92685
trace_head_incr_routine(2361,93098
get_pextrw_entry(2370,93296
get_pinsrw_entry(2377,93440
get_fcache_enter_shared_routine(2386,93630
fcache_enter_shared_routine(2392,93759
fcache_return_shared_routine(2430,95415
trace_head_incr_shared_routine(2442,95729
get_fcache_target(2455,96083
set_fcache_target(2466,96403
typedef struct _translate_walk_t 2492,97549
    priv_mcontext_t *mc;mc2494,97624
    byte *start_cache;start_cache2496,97706
    byte *end_cache;end_cache2497,97729
    bool reg_spilled[reg_spilled2501,97876
    bool reg_tls[reg_tls2502,97913
    int xsp_adjust;2507,98149
    bool unsupported_mangle;2509,98241
    bool in_mangle_region;2511,98316
    app_pc translation;2513,98413
} translate_walk_t;2514,98437
translate_walk_init(2517,98470
instr_check_xsp_mangling(2527,98740
instr_is_trace_cmp(2599,102333
instr_is_inline_syscall_jmp(2627,103202
instr_is_seg_ref_load(2639,103599
translate_walk_track(2662,104455
translate_walk_good_state(2818,112038
translate_walk_restore(2827,112366
translate_restore_clean_call(2883,114600
recreate_app_state_from_info(2907,115598
recreate_app_state_from_ilist(3042,121462
recreate_selfmod_ilist(3262,132008
recreate_app_state_internal(3308,134222
recreate_app_pc(3610,148847
recreate_app_state(3687,152355
translation_info_alloc_size(3730,153694
translation_info_alloc(3737,153933
translation_info_free(3749,154284
set_translation(3756,154496
translation_info_print(3781,155511
record_translation_info(3808,156698
#   define NUM_INITIAL_TRANSLATIONS 3849,158380
stress_test_recreate_state(3995,164932
get_global_do_syscall_entry(4100,169482
get_cleanup_and_terminate_global_do_syscall_entry(4150,170900
#define VSYS_DISPLACED_LEN 4215,173814
hook_vsyscall(4218,173856
#define CHECK(4243,174643
#undef CHECK4315,177633
unhook_vsyscall(4319,177654
check_syscall_method(4347,178548
get_syscall_method(4499,186279
does_syscall_ret_to_callsite(4506,186415
set_syscall_method(4514,186634
should_syscall_method_be_sysenter(4526,187000
get_app_sysenter_addr(4535,187244
copy_mcontext(4543,187473
dr_mcontext_to_priv_mcontext(4550,187592
priv_mcontext_to_dr_mcontext(4579,188559
dr_mcontext_as_priv_mcontext(4608,189539
dr_mcontext_init(4619,189908
dump_mcontext(4627,190043
__inline__ uint64 get_time(4696,192777
uint64 get_time(4703,192912
is_ibl_routine_type(4713,193035

x86/arch.h,10377
#define X86_ARCH_H45,2079
#define CS32_SELECTOR 55,2406
#define CS64_SELECTOR 56,2433
mixed_mode_enabled(60,2491
#define PROT_OFFS 88,3457
#define MC_OFFS 89,3515
#define XAX_OFFSET 91,3586
#define XBX_OFFSET 92,3659
#define XCX_OFFSET 93,3732
#define XDX_OFFSET 94,3805
#define XSI_OFFSET 95,3878
#define XDI_OFFSET 96,3951
#define XBP_OFFSET 97,4024
#define XSP_OFFSET 98,4097
#define XFLAGS_OFFSET 99,4170
#define PC_OFFSET 100,4246
# define R8_OFFSET 102,4329
# define R9_OFFSET 103,4401
# define R10_OFFSET 104,4473
# define R11_OFFSET 105,4546
# define R12_OFFSET 106,4619
# define R13_OFFSET 107,4692
# define R14_OFFSET 108,4765
# define R15_OFFSET 109,4838
#define XMM_OFFSET 111,4918
#define ERRNO_OFFSET 113,4992
#define AT_SYSCALL_OFFSET 114,5059
#define EXIT_REASON_OFFSET 115,5131
#define NEXT_TAG_OFFSET 117,5206
#define LAST_EXIT_OFFSET 118,5282
#define DSTACK_OFFSET 119,5359
#define FRAGMENT_FIELD_OFFSET 121,5434
#define PRIVATE_CODE_OFFSET 122,5516
#  define APP_ERRNO_OFFSET 126,5637
#  define APP_FLS_OFFSET 127,5715
#  define PRIV_FLS_OFFSET 128,5796
#  define APP_RPC_OFFSET 129,5878
#  define PRIV_RPC_OFFSET 130,5957
#  define APP_NLS_CACHE_OFFSET 131,6037
#  define PRIV_NLS_CACHE_OFFSET 132,6119
#  define APP_STACK_LIMIT_OFFSET 133,6202
# define NONSWAPPED_SCRATCH_OFFSET 135,6295
# define TRACE_HEAD_PC_OFFSET 139,6424
# define SYSENTER_STORAGE_OFFSET 143,6528
# define IGNORE_ENTEREXIT_OFFSET 144,6614
# define CLIENT_DATA_OFFSET 148,6732
#define COARSE_IB_SRC_OFFSET 151,6819
#define COARSE_DIR_EXIT_OFFSET 152,6906
#define OPSZ_SAVED_XMM 157,7034
#define REG_SAVED_XMM0 158,7093
preserve_xmm_caller_saved(163,7305
    IBL_UNLINKED,177,7901
    IBL_DELETE,178,7919
    IBL_FAR,180,7975
    IBL_FAR_UNLINKED,181,7988
    IBL_TRACE_CMP,184,8099
    IBL_TRACE_CMP_UNLINKED,185,8118
    IBL_LINKED,187,8153
    IBL_TEMPLATE,189,8174
    IBL_LINK_STATE_END190,8241
} ibl_entry_point_type_t;191,8264
    IBL_BB_SHARED,197,8526
    IBL_SOURCE_TYPE_START 198,8546
    IBL_SOURCE_TYPE_START = IBL_BB_SHARED,198,8546
    IBL_TRACE_SHARED,199,8589
    IBL_BB_PRIVATE,200,8611
    IBL_TRACE_PRIVATE,201,8631
    IBL_COARSE_SHARED,202,8654
    IBL_SOURCE_TYPE_END203,8710
} ibl_source_fragment_type_t;204,8734
#define DEFAULT_IBL_BB(206,8765
#define DEFAULT_IBL_TRACE(208,8857
#define IS_IBL_BB(210,8961
#define IS_IBL_TRACE(212,9054
#define IS_IBL_LINKED(214,9156
#define IS_IBL_UNLINKED(217,9288
#define IBL_FRAG_FLAGS(221,9443
get_ibl_entry_type(225,9589
    ibl_entry_point_type_t link_state;240,9907
    ibl_source_fragment_type_t source_fragment_type;241,9946
    ibl_branch_type_t branch_type;242,9999
} ibl_type_t;243,10034
    GENCODE_X64 251,10311
    GENCODE_X86,252,10332
    GENCODE_X86_TO_X64,253,10349
    GENCODE_FROM_DCONTEXT,254,10373
} gencode_mode_t;255,10400
# define FRAGMENT_GENCODE_MODE(256,10418
# define SHARED_GENCODE(259,10595
# define SHARED_GENCODE_MATCH_THREAD(260,10683
# define THREAD_GENCODE(261,10770
# define GENCODE_IS_X64(262,10851
# define GENCODE_IS_X86(263,10921
# define GENCODE_IS_X86_TO_X64(264,10991
# define SHARED_GENCODE(266,11081
# define THREAD_GENCODE(267,11144
# define SHARED_GENCODE_MATCH_THREAD(268,11202
#define NUM_XMM_REGS 271,11274
#define NUM_GP_REGS 272,11310
typedef struct _clean_call_info_t 275,11457
    void *callee;callee276,11493
    uint num_args;277,11511
    bool save_fpstate;278,11530
    bool opt_inline;279,11553
    bool should_align;280,11574
    bool save_all_regs;281,11597
    bool skip_save_aflags;282,11621
    bool skip_clear_eflags;283,11648
    uint num_xmms_skip;284,11676
    bool xmm_skip[xmm_skip285,11700
    uint num_regs_skip;286,11733
    bool reg_skip[reg_skip287,11757
    bool preserve_mcontext;288,11789
    void *callee_info;callee_info289,11870
    instrlist_t *ilist;ilist290,11919
} clean_call_info_t;291,11990
#define GET_IBL_TARGET_TABLE(321,13777
    FCACHE_ENTER_TARGET_SLOT 434,18681
    FCACHE_ENTER_TARGET_SLOT    = TLS_XAX_SLOT,434,18681
    MANGLE_NEXT_TAG_SLOT 442,19008
    MANGLE_NEXT_TAG_SLOT        = TLS_XAX_SLOT,442,19008
    DIRECT_STUB_SPILL_SLOT 443,19056
    DIRECT_STUB_SPILL_SLOT      = TLS_XAX_SLOT,443,19056
    MANGLE_RIPREL_SPILL_SLOT 444,19104
    MANGLE_RIPREL_SPILL_SLOT    = TLS_XAX_SLOT,444,19104
    INDIRECT_STUB_SPILL_SLOT 446,19233
    INDIRECT_STUB_SPILL_SLOT    = TLS_XBX_SLOT,446,19233
    MANGLE_FAR_SPILL_SLOT 447,19281
    MANGLE_FAR_SPILL_SLOT       = TLS_XBX_SLOT,447,19281
    FLOAT_PC_STATE_SLOT 451,19484
    FLOAT_PC_STATE_SLOT         = TLS_XBX_SLOT,451,19484
    MANGLE_XCX_SPILL_SLOT 452,19532
    MANGLE_XCX_SPILL_SLOT       = TLS_XCX_SLOT,452,19532
    DCONTEXT_BASE_SPILL_SLOT 457,19756
    DCONTEXT_BASE_SPILL_SLOT    = TLS_XDX_SLOT,457,19756
    PREFIX_XAX_SPILL_SLOT 458,19804
    PREFIX_XAX_SPILL_SLOT       = TLS_XAX_SLOT,458,19804
    HTABLE_STATS_SPILL_SLOT 460,19880
    HTABLE_STATS_SPILL_SLOT     = TLS_HTABLE_STATS_SLOT,460,19880
typedef struct patch_entry_t 471,20248
        instr_t *instr;instr473,20291
        size_t   offset;474,20364
    } where;475,20429
    ptr_uint_t value_location_offset;476,20442
    ushort patch_flags;479,20656
    short  instr_offset;480,20738
} patch_entry_t;482,20878
    MAX_PATCH_ENTRIES 485,20903
    PATCH_TAKE_ADDRESS 492,21188
    PATCH_TAKE_ADDRESS      = 0x01,x01492,21188
    PATCH_PER_THREAD 493,21286
    PATCH_PER_THREAD        = 0x02,x02493,21286
    PATCH_UNPROT_STAT 494,21387
    PATCH_UNPROT_STAT       = 0x04,x04494,21387
    PATCH_MARKER 496,21574
    PATCH_MARKER            = 0x08,x08496,21574
    PATCH_ASSEMBLE_ABSOLUTE 497,21651
    PATCH_ASSEMBLE_ABSOLUTE = 0x10,x10497,21651
    PATCH_OFFSET_VALID 499,21821
    PATCH_OFFSET_VALID      = 0x20,x20499,21821
    PATCH_UINT_SIZED 501,21972
    PATCH_UINT_SIZED        = 0x40,x40501,21972
    PATCH_TYPE_ABSOLUTE 505,22080
    PATCH_TYPE_ABSOLUTE     = 0x0,x0505,22080
    PATCH_TYPE_INDIRECT_XDI 506,22169
    PATCH_TYPE_INDIRECT_XDI = 0x1,x1506,22169
    PATCH_TYPE_INDIRECT_FS 507,22258
    PATCH_TYPE_INDIRECT_FS  = 0x2,x2507,22258
} patch_list_type_t;508,22346
typedef struct patch_list_t 510,22368
    ushort num_relocations;511,22398
    ushort /* patch_list_type_t */ type;512,22426
    patch_entry_t entry[entry513,22467
} patch_list_t;514,22511
typedef struct _far_ref_t 529,22985
    uint pc;531,23084
    ushort selector;532,23097
} far_ref_t;533,23118
typedef struct ibl_code_t 537,23222
    bool initialized:initialized538,23250
    bool thread_shared_routine:thread_shared_routine539,23317
    bool ibl_head_is_inlined:ibl_head_is_inlined540,23351
    byte *indirect_branch_lookup_routine;indirect_branch_lookup_routine541,23383
    byte *far_ibl;far_ibl543,23456
    byte *far_ibl_unlinked;far_ibl_unlinked544,23475
    byte *trace_cmp_entry;trace_cmp_entry547,23577
    byte *trace_cmp_unlinked;trace_cmp_unlinked548,23604
    bool x86_mode;549,23634
    bool x86_to_x64_mode;550,23695
    far_ref_t far_jmp_opnd;552,23862
    far_ref_t far_jmp_unlinked_opnd;553,23890
    byte *unlinked_ibl_entry;unlinked_ibl_entry555,23934
    byte *target_delete_entry;target_delete_entry556,23964
    uint ibl_routine_length;557,23995
    patch_list_t ibl_patch;559,24059
    ibl_branch_type_t branch_type;560,24087
    ibl_source_fragment_type_t source_fragment_type;561,24122
    byte *inline_ibl_stub_template;inline_ibl_stub_template564,24245
    patch_list_t ibl_stub_patch;565,24281
    uint inline_stub_length;566,24314
    uint inline_linkstub_first_offs;569,24445
    uint inline_linkstub_second_offs;570,24482
    uint inline_unlink_offs;571,24520
    uint inline_linkedjmp_offs;572,24549
    uint inline_unlinkedjmp_offs;573,24581
    uint unprot_stats_offset;577,24716
    uint hashtable_stats_offset;578,24747
    uint entry_stats_to_lookup_table_offset;581,24975
} ibl_code_t;583,25074
typedef struct _generated_code_t 593,25434
    byte *fcache_enter;fcache_enter594,25469
    byte *fcache_return;fcache_return595,25493
    byte *fcache_enter_return_end;fcache_enter_return_end597,25543
    ibl_code_t trace_ibl[trace_ibl600,25586
    ibl_code_t bb_ibl[bb_ibl601,25633
    ibl_code_t coarse_ibl[coarse_ibl602,25677
    byte *ibl_routines_end;ibl_routines_end604,25750
    ibl_code_t shared_syscall_code;609,25842
    byte *shared_syscall;shared_syscall610,25878
    byte *unlinked_shared_syscall;unlinked_shared_syscall611,25904
    byte *end_shared_syscall;end_shared_syscall612,25939
    uint sys_syscall_offs;617,26169
    uint sys_unlink_offs;619,26258
    byte *do_syscall;do_syscall621,26291
    uint do_syscall_offs;622,26313
    byte *fcache_enter_indirect;fcache_enter_indirect624,26398
    byte *do_callback_return;do_callback_return625,26431
    byte *do_int_syscall;do_int_syscall631,26684
    uint do_int_syscall_offs;632,26710
    byte *do_clone_syscall;do_clone_syscall633,26784
    uint do_clone_syscall_offs;634,26812
    byte *do_vmkuw_syscall;do_vmkuw_syscall636,26909
    uint do_vmkuw_syscall_offs;637,26937
    byte *new_thread_dynamo_start;new_thread_dynamo_start642,27115
    byte *trace_head_incr;trace_head_incr645,27186
    byte *pextrw;pextrw648,27246
    byte *pinsrw;pinsrw649,27264
    profile_t *profile;profile652,27314
    byte *reset_exit_stub;reset_exit_stub658,27538
    byte *fcache_return_coarse;fcache_return_coarse665,27865
    byte *trace_head_return_coarse;trace_head_return_coarse666,27897
    byte *client_ibl_xfer;client_ibl_xfer669,28004
    uint client_ibl_unlink_offs;670,28031
    byte *clean_call_save;clean_call_save673,28126
    byte *clean_call_restore;clean_call_restore674,28153
    bool thread_shared;676,28184
    bool writable;677,28208
    gencode_mode_t gencode_mode;679,28238
    byte *gen_start_pc;gen_start_pc687,28589
    byte *gen_end_pc;gen_end_pc688,28643
    byte *commit_end_pc;commit_end_pc689,28693
} generated_code_t;691,28817
is_shared_gencode(728,30436
get_shared_gencode(741,30774
#define USE_SHARED_GENCODE_ALWAYS(769,31811
#define USE_SHARED_GENCODE(773,32009
#define USE_SHARED_BB_IBL(777,32237
#define USE_SHARED_TRACE_IBL(780,32331
get_emitted_routines_code(786,32580

x86/arch_exports.h,11998
#define _ARCH_EXPORTS_H_ 45,2094
#define XSP_SZ 48,2145
#define XMM_REG_SIZE 57,2517
#define YMM_REG_SIZE 58,2542
#define XMM_SAVED_REG_SIZE 59,2567
#define XMM_SLOTS_SIZE 60,2651
#define XMM_SAVED_SIZE 61,2710
#define YMM_ENABLED(63,2850
#define YMMH_REG_SIZE 64,2941
#define YMMH_SAVED_SIZE 65,2997
#define CLEANCALL_NUM_INLINE_SLOTS 68,3111
    IBL_NONE 71,3164
    IBL_RETURN 73,3266
    IBL_BRANCH_TYPE_START 74,3341
    IBL_BRANCH_TYPE_START = IBL_RETURN,74,3341
    IBL_INDCALL,75,3381
    IBL_INDJMP,76,3398
    IBL_GENERIC 77,3414
    IBL_GENERIC           = IBL_INDJMP,77,3414
    IBL_SHARED_SYSCALL 80,3599
    IBL_SHARED_SYSCALL    = IBL_GENERIC,80,3599
    IBL_BRANCH_TYPE_END81,3640
} ibl_branch_type_t;82,3664
#define IBL_HASH_FUNC_OFFSET_MAX 84,3686
typedef struct _lookup_table_access_t 100,4405
    ptr_uint_t hash_mask;101,4445
    struct _fragment_entry_t *lookuptable;lookuptable102,4471
} lookup_table_access_t;103,4514
typedef struct _table_stat_state_t 105,4540
    lookup_table_access_t table[table116,5091
    uint stats;121,5329
} table_stat_state_t;123,5352
typedef struct _spill_state_t 129,5551
    reg_t xax,131,5656
    reg_t xax, xbx,131,5656
    reg_t xax, xbx, xcx,131,5656
    reg_t xax, xbx, xcx, xdx;131,5656
    dcontext_t *dcontext;dcontext133,5791
} spill_state_t;134,5817
typedef struct _local_state_t 136,5835
    spill_state_t spill_space;137,5867
} local_state_t;138,5898
typedef struct _local_state_extended_t 140,5916
    spill_state_t spill_space;141,5957
    table_stat_state_t table_space;142,5988
} local_state_extended_t;143,6024
#define TLS_XAX_SLOT 149,6277
#define TLS_XBX_SLOT 150,6349
#define TLS_XCX_SLOT 151,6421
#define TLS_XDX_SLOT 152,6493
#define TLS_DCONTEXT_SLOT 153,6565
#define TABLE_OFFSET 155,6643
#define TLS_MASK_SLOT(156,6724
#define TLS_TABLE_SLOT(159,6969
# define TLS_HTABLE_STATS_SLOT 164,7247
#define TLS_NUM_SLOTS 169,7493
# define DETACH_CALLBACK_CODE_SIZE 175,7724
# define DETACH_CALLBACK_FINAL_JMP_SIZE 176,7763
typedef struct _detach_callback_stack_t 180,7981
    thread_id_t tid;181,8023
    ptr_uint_t count;182,8061
    app_pc *callback_addrs;callback_addrs183,8137
    reg_t xax_save;184,8217
    reg_t xbx_save;185,8276
    reg_t xcx_save;186,8335
    app_pc target;187,8394
    byte code_buf[code_buf189,8509
} detach_callback_stack_t;190,8560
#define PAD_JMPS_ALIGNMENT 231,10826
# define CHECK_JMP_TARGET_ALIGNMENT(235,10997
# define CHECK_JMP_TARGET_ALIGNMENT(242,11407
# define ATOMIC_4BYTE_WRITE(248,11663
#  define ATOMIC_8BYTE_WRITE(255,12039
# define ATOMIC_INC_int(271,12920
#  define ATOMIC_INC_int64(273,13050
# define ATOMIC_INC(275,13142
# define ATOMIC_DEC_int(276,13196
#  define ATOMIC_DEC_int64(278,13326
# define ATOMIC_DEC(280,13418
# define ATOMIC_ADD_int(282,13539
#  define ATOMIC_ADD_int64(285,13691
# define ATOMIC_COMPARE_EXCHANGE_int(288,13805
# define ATOMIC_COMPARE_EXCHANGE_int64(290,13944
# define ATOMIC_COMPARE_EXCHANGE 292,14090
# define ATOMIC_ADD(293,14151
#  define ATOMIC_ADD_PTR(295,14227
#  define ATOMIC_COMPARE_EXCHANGE_PTR 296,14295
#  define ATOMIC_ADD_PTR(298,14370
#  define ATOMIC_COMPARE_EXCHANGE_PTR 299,14436
# define SPINLOCK_PAUSE(301,14510
# define RDTSC_LL(302,14583
# define SERIALIZE_INSTRUCTIONS(303,14624
# define GET_FRAME_PTR(310,14893
# define GET_STACK_PTR(311,14945
static inline bool atomic_inc_and_test(314,15041
static inline bool atomic_dec_and_test(318,15191
static inline bool atomic_dec_becomes_zero(322,15340
static inline bool atomic_compare_exchange_int(326,15496
static inline bool atomic_compare_exchange_int64(330,15718
static inline int atomic_add_exchange_int(336,16051
static inline int64 atomic_add_exchange_int64(340,16236
# define atomic_add_exchange 344,16385
# define ATOMIC_4BYTE_WRITE(347,16456
#  define ATOMIC_8BYTE_WRITE(354,16853
# define ATOMIC_INC_suffix(363,17382
# define ATOMIC_INC_int(365,17500
# define ATOMIC_INC_int64(366,17557
# define ATOMIC_INC(367,17616
# define ATOMIC_DEC_suffix(368,17670
# define ATOMIC_DEC_int(370,17788
# define ATOMIC_DEC_int64(371,17845
# define ATOMIC_DEC(372,17904
# define ATOMIC_ADD_suffix(377,18099
# define ATOMIC_ADD_int(380,18293
# define ATOMIC_ADD_int64(381,18360
# define ATOMIC_ADD(382,18429
#  define ATOMIC_ADD_PTR(384,18505
#  define ATOMIC_ADD_PTR(386,18580
# define ATOMIC_ADD_EXCHANGE_suffix(389,18732
# define ATOMIC_ADD_EXCHANGE_int(392,18943
# define ATOMIC_ADD_EXCHANGE_int64(394,19044
# define ATOMIC_COMPARE_EXCHANGE_suffix(396,19147
# define ATOMIC_COMPARE_EXCHANGE_int(401,19456
# define ATOMIC_COMPARE_EXCHANGE_int64(403,19583
# define ATOMIC_COMPARE_EXCHANGE 405,19712
#  define ATOMIC_COMPARE_EXCHANGE_PTR 407,19785
#  define ATOMIC_COMPARE_EXCHANGE_PTR 409,19860
# define ATOMIC_EXCHANGE(411,19930
# define SPINLOCK_PAUSE(416,20136
# define RDTSC_LL(417,20194
# define SERIALIZE_INSTRUCTIONS(420,20323
# define GET_FRAME_PTR(423,20537
# define GET_STACK_PTR(424,20621
# define SET_FLAG(426,20706
# define SET_IF_NOT_ZERO(427,20786
# define SET_IF_NOT_LESS(428,20836
static inline bool atomic_inc_and_test(433,20999
static inline bool atomic_dec_and_test(448,21481
static inline bool atomic_dec_becomes_zero(463,21969
static inline bool atomic_compare_exchange_int(479,22457
atomic_exchange_int(494,23047
static inline bool atomic_compare_exchange_int64(505,23300
static inline int atomic_add_exchange_int(521,23956
static inline int64 atomic_add_exchange_int64(527,24120
# define atomic_add_exchange 533,24296
# undef ATOMIC_ADD_EXCHANGE_suffix534,24349
# undef ATOMIC_ADD_EXCHANGE_int535,24384
# undef ATOMIC_ADD_EXCHANGE_int64536,24416
#define atomic_compare_exchange 541,24471
# define atomic_compare_exchange_ptr(543,24542
# define ATOMIC_ADDR_WRITE 545,24672
# define atomic_compare_exchange_ptr(547,24724
# define ATOMIC_ADDR_WRITE 549,24846
#define ATOMIC_MAX_int(552,24900
# define ATOMIC_MAX_int64(567,25774
#define ATOMIC_MAX(582,26608
#define DEBUGGER_INTERRUPT_BYTE 584,26690
    TRANSLATE_IDENTICAL 633,28382
    TRANSLATE_IDENTICAL      = 0x0001,x0001633,28382
    TRANSLATE_OUR_MANGLING 634,28448
    TRANSLATE_OUR_MANGLING   = 0x0002,x0002634,28448
typedef struct _translation_entry_t 641,28775
    ushort cache_offs;643,28853
    ushort flags;645,28903
    app_pc app;646,28921
} translation_entry_t;647,28937
typedef struct _translation_info_t 657,29427
    uint num_entries;658,29464
    translation_entry_t translation[translation660,29529
} translation_info_t;661,29590
#define IS_SHARED_SYSCALL_THREAD_SHARED 664,29673
    RECREATE_FAILURE,670,29887
    RECREATE_SUCCESS_PC,671,29909
    RECREATE_SUCCESS_STATE,672,29934
} recreate_success_t;673,29962
typedef linkstub_t * (* fcache_enter_func_t)710,31754
    SYSCALL_METHOD_UNINITIALIZED,772,34638
    SYSCALL_METHOD_INT,773,34672
    SYSCALL_METHOD_SYSENTER,774,34696
    SYSCALL_METHOD_SYSCALL,775,34725
    SYSCALL_METHOD_WOW64,777,34768
enum { SYSCALL_METHOD_LONGEST_INSTR 781,34816
enum { BACK_FROM_NATIVE_RETSTUB_SIZE 848,37671
#define DYNAMO_START_XSP_ADJUST 869,38360
    CALLSTACK_USE_XML 893,39081
    CALLSTACK_USE_XML         = 0x00000001,x00000001893,39081
    CALLSTACK_ADD_HEADER 894,39125
    CALLSTACK_ADD_HEADER      = 0x00000002,x00000002894,39125
    CALLSTACK_MODULE_INFO 895,39169
    CALLSTACK_MODULE_INFO     = 0x00000004,x00000004895,39169
    CALLSTACK_MODULE_PATH 896,39213
    CALLSTACK_MODULE_PATH     = 0x00000008,x00000008896,39213
    CALLSTACK_FRAME_PTR 897,39257
    CALLSTACK_FRAME_PTR       = 0x00000010,x00000010897,39257
use_addr_prefix_on_short_disp(921,40057
#define SIZE64_MOV_XAX_TO_TLS 963,41794
#define SIZE64_MOV_XBX_TO_TLS 964,41834
#define SIZE64_MOV_PTR_IMM_TO_XAX 965,41874
#define SIZE64_MOV_PTR_IMM_TO_TLS 966,41914
#define SIZE64_MOV_R8_TO_XAX 967,41995
#define SIZE64_MOV_R9_TO_XCX 968,42035
#define SIZE32_MOV_XAX_TO_TLS 969,42075
#define SIZE32_MOV_XBX_TO_TLS 970,42115
#define SIZE32_MOV_XAX_TO_TLS_DISP32 971,42155
#define SIZE32_MOV_XBX_TO_TLS_DISP32 972,42195
#define SIZE32_MOV_XAX_TO_ABS 973,42235
#define SIZE32_MOV_XBX_TO_ABS 974,42275
#define SIZE32_MOV_PTR_IMM_TO_XAX 975,42315
#define SIZE32_MOV_PTR_IMM_TO_TLS 976,42355
# define FRAG_IS_32(979,42407
# define FRAG_IS_X86_TO_X64(980,42463
# define FRAG_IS_32(982,42537
# define FRAG_IS_X86_TO_X64(983,42569
#define SIZE_MOV_XAX_TO_TLS(986,42618
#define SIZE_MOV_XBX_TO_TLS(991,42855
#define SIZE_MOV_PTR_IMM_TO_XAX(996,43092
#define XCX_IN_TLS(1000,43247
#define FRAGMENT_BASE_PREFIX_SIZE(1001,43338
#define DIRECT_EXIT_STUB_SIZE32 1013,43866
#define DIRECT_EXIT_STUB_SIZE64 1015,43974
#define DIRECT_EXIT_STUB_SIZE(1017,44082
#define STUB_COARSE_DIRECT_SIZE32 1030,44723
#define STUB_COARSE_DIRECT_SIZE64 1031,44804
#define STUB_COARSE_DIRECT_SIZE(1032,44885
#define SET_TO_NOPS(1036,45048
#define SET_TO_DEBUG(1038,45153
#define IS_SET_TO_NOP(1040,45247
#define IS_SET_TO_DEBUG(1042,45362
#define CTI_PATCH_OFFSET 1045,45501
#define CTI_PATCH_SIZE 1047,45561
#define EXIT_STUB_PATCH_OFFSET 1050,45647
#define EXIT_STUB_PATCH_SIZE 1052,45714
#define MAX_PAD_SIZE 1055,45822
#define WITHIN_PAD_REGION(1058,45915
#define STATS_PAD_JMPS_ADD(1061,46002
    NOT_HOT_PATCHABLE=1133,48635
    NOT_HOT_PATCHABLE=false,1133,48635
    HOT_PATCHABLE=1134,48664
    HOT_PATCHABLE=true1134,48664
    MAX_INSTR_LENGTH 1213,51191
    CBR_LONG_LENGTH 1217,51309
    JMP_LONG_LENGTH 1218,51335
    JMP_SHORT_LENGTH 1219,51361
    CBR_SHORT_REWRITE_LENGTH 1220,51387
    RET_0_LENGTH 1221,51455
    PUSH_IMM32_LENGTH 1222,51481
    CTI_IND1_LENGTH 1225,51574
    CTI_IND2_LENGTH 1226,51656
    CTI_IND3_LENGTH 1227,51738
    CTI_DIRECT_LENGTH 1228,51820
    CTI_IAT_LENGTH 1229,51902
    CTI_FAR_ABS_LENGTH 1230,51984
    INT_LENGTH 1233,52149
    SYSCALL_LENGTH 1234,52169
    SYSENTER_LENGTH 1235,52193
#define REL32_REACHABLE_OFFS(1238,52222
#define REL32_REACHABLE(1240,52365
#define TRACE_CTI_MANGLE_SIZE_UPPER_BOUND 1293,54751
    app_pc region_start;1334,56462
    app_pc region_end;1335,56487
    app_pc start_pc;1336,56510
    app_pc min_pc;1337,56531
    app_pc max_pc;1338,56550
    app_pc bb_end;1339,56569
    bool contiguous;1340,56588
    bool overlap;1341,56609
} overlap_info_t;1342,56627
extract_branchtype(1539,64543
ibltype_to_linktype(1553,64940
convert_data_to_function(1577,65674
typedef struct dr_jmp_buf_t 1600,66493
    reg_t xbx;1601,66523
    reg_t xcx;1602,66538
    reg_t xdi;1603,66553
    reg_t xsi;1604,66568
    reg_t xbp;1605,66583
    reg_t xsp;1606,66598
    reg_t xip;1607,66613
    reg_t r8,1610,66727
    reg_t r8, r9,1610,66727
    reg_t r8, r9, r10,1610,66727
    reg_t r8, r9, r10, r11,1610,66727
    reg_t r8, r9, r10, r11, r12,1610,66727
    reg_t r8, r9, r10, r11, r12, r13,1610,66727
    reg_t r8, r9, r10, r11, r12, r13, r14,1610,66727
    reg_t r8, r9, r10, r11, r12, r13, r14, r15;1610,66727
    kernel_sigset_t sigmask;1617,67006
} dr_jmp_buf_t;1619,67042
#define DR_SETJMP(1643,67733
#define DR_LONGJMP(1645,67774
#  define APP_PARAM_0(1662,68368
#  define APP_PARAM_1(1663,68404
#  define APP_PARAM_2(1664,68440
#  define APP_PARAM_3(1665,68475
#  define APP_PARAM_4(1666,68510
#  define APP_PARAM_5(1667,68568
#  define APP_PARAM_6(1668,68626
#  define APP_PARAM_7(1669,68684
#  define APP_PARAM_8(1670,68742
#  define APP_PARAM_9(1671,68800
#  define APP_PARAM_10(1672,68859
#  define APP_PARAM_0(1674,68926
#  define APP_PARAM_1(1675,68962
#  define APP_PARAM_2(1676,68998
#  define APP_PARAM_3(1677,69034
#  define APP_PARAM_4(1678,69070
#  define APP_PARAM_5(1679,69105
#  define APP_PARAM_6(1680,69140
#  define APP_PARAM_7(1681,69198
#  define APP_PARAM_8(1682,69256
#  define APP_PARAM_9(1683,69314
#  define APP_PARAM_10(1684,69372
# define APP_PARAM(1687,69473
# define APP_PARAM(1690,69563

x86/decode.c,1586
# undef ASSERT_TRUNCATE73,3290
# undef ASSERT_BITFIELD_TRUNCATE74,3314
# undef ASSERT_NOT_REACHED75,3347
# define ASSERT_TRUNCATE 76,3374
# define ASSERT_BITFIELD_TRUNCATE 77,3443
# define ASSERT_NOT_REACHED 78,3521
#define xx 82,3629
static const instr_info_t escape_instr 83,3660
static const instr_info_t escape_38_instr 85,3764
static const instr_info_t escape_3a_instr 87,3880
#undef xx89,3996
static bool initexit_x86_mode 95,4138
set_x86_mode(105,4562
get_x86_mode(129,5398
is_variable_size(150,6229
resolve_var_reg_size(183,6919
resolve_variable_size(197,7344
resolve_variable_size_dc(262,10610
resolve_addr_size(271,10869
optype_is_indir_reg(280,11090
indir_var_reg_size(300,11592
indir_var_reg_offs_factor(336,12606
read_immed(354,13028
read_operand(390,14149
read_modrm(513,18797
read_vex(585,21262
read_instruction(689,24788
reg8_alternative(1081,41214
    DECODE_REG_REG,1095,41714
    DECODE_REG_BASE,1096,41734
    DECODE_REG_INDEX,1097,41755
    DECODE_REG_RM,1098,41777
} decode_reg_t;1099,41796
decode_reg(1105,41963
decode_modrm(1191,45104
get_immed(1354,52228
resolve_var_reg(1373,52868
ds_seg(1417,54379
decode_operand(1433,54873
decode_eflags_usage(1722,68813
decode_opcode(1748,69790
check_is_variable_size(1792,71587
decode_common(1814,72474
decode(1970,79030
decode_from_copy(1976,79148
get_next_instr_info(1982,79320
decode_first_opcode_byte(1988,79425
decode_opcode_name(1996,79592
unit_check_decode_ff_opcode(2011,80032
#define CHECK_ENCODE_OPCODE(2047,81255
unit_check_sse3(2058,81788
int main(2092,83629

x86/decode.h,7600
#define DECODE_H41,1961
#define PREFIX_LOCK 61,2645
#define PREFIX_JCC_NOT_TAKEN 62,2735
#define PREFIX_JCC_TAKEN 63,2819
#define PREFIX_DATA 72,3155
#define PREFIX_ADDR 73,3192
#define PREFIX_REX_W 74,3229
#define PREFIX_REX_R 75,3266
#define PREFIX_REX_X 76,3303
#define PREFIX_REX_B 77,3340
#define PREFIX_REX_GENERAL 78,3377
#define PREFIX_REX_ALL 79,3463
#define PREFIX_SIZE_SPECIFIERS 81,3599
#define PREFIX_REP 84,3749
#define PREFIX_REPNE 85,3786
#define PREFIX_SEG_FS 92,4050
#define PREFIX_SEG_GS 93,4087
#define PREFIX_VEX_2B 98,4245
#define PREFIX_VEX_3B 99,4282
#define PREFIX_VEX_L 100,4319
#define PREFIX_SIGNIFICANT 105,4511
#define SEG_JCC_NOT_TAKEN 108,4635
#define SEG_JCC_TAKEN 109,4672
    OPCODE_TWOBYTES 122,5194
    OPCODE_TWOBYTES = 0x00000010,x00000010122,5194
    OPCODE_REG 123,5228
    OPCODE_REG      = 0x00000020,x00000020123,5228
    OPCODE_MODRM 124,5262
    OPCODE_MODRM    = 0x00000040,x00000040124,5262
    OPCODE_SUFFIX 125,5296
    OPCODE_SUFFIX   = 0x00000080,x00000080125,5296
    OPCODE_THREEBYTES=126,5330
    OPCODE_THREEBYTES=0x00000008,x00000008126,5330
typedef struct instr_info_t 166,7046
    int type;167,7076
    uint opcode;192,8726
    const char *name;name193,8743
    byte dst1_type;197,8852
    byte dst1_type;  opnd_size_t dst1_size;197,8852
    byte dst2_type;198,8896
    byte dst2_type;  opnd_size_t dst2_size;198,8896
    byte src1_type;199,8940
    byte src1_type;  opnd_size_t src1_size;199,8940
    byte src2_type;200,8984
    byte src2_type;  opnd_size_t src2_size;200,8984
    byte src3_type;201,9028
    byte src3_type;  opnd_size_t src3_size;201,9028
    byte flags;202,9072
    uint eflags;203,9124
    ptr_int_t code;204,9194
} instr_info_t;209,9508
    INVALID 217,9684
    INVALID = OP_LAST 217,9684
    PREFIX,219,9733
    ESCAPE,221,9783
    FLOAT_EXT,223,9844
    EXTENSION,225,9909
    PREFIX_EXT,227,10003
    REP_EXT,229,10077
    REPNE_EXT,231,10150
    MOD_EXT,233,10226
    RM_EXT,235,10299
    SUFFIX_EXT,237,10384
    X64_EXT,239,10472
    ESCAPE_3BYTE_38,241,10547
    ESCAPE_3BYTE_3a,243,10620
    REX_B_EXT,245,10703
    REX_W_EXT,247,10780
    VEX_PREFIX_EXT,249,10866
    VEX_EXT,251,10948
    VEX_L_EXT,253,11033
    VEX_W_EXT,255,11096
#define HAS_MODRM 260,11212
#define HAS_EXTRA_OPERANDS 261,11270
#define EXTRAS_IN_CODE_FIELD 263,11369
#define X86_INVALID 267,11603
#define X64_INVALID 268,11638
#define REQUIRES_PREFIX 270,11747
#define REQUIRES_VEX 274,11905
#define REQUIRES_REX 279,12110
typedef struct decode_info_t 286,12360
    uint prefixes;293,12704
    byte seg_override;294,12723
    byte modrm;296,12807
    byte mod;297,12823
    byte reg;298,12837
    byte rm;299,12851
    bool has_sib;300,12864
    byte scale;301,12882
    byte index;302,12898
    byte base;303,12914
    bool has_disp;304,12929
    int disp;305,12948
    opnd_size_t size_immed;307,12983
    opnd_size_t size_immed2;308,13011
    bool immed_pc_relativize:immed_pc_relativize309,13040
    bool immed_subtract_length:immed_subtract_length310,13072
    bool immed_pc_rel_offs:immed_pc_rel_offs311,13106
    ushort immed_shift;312,13136
    ptr_int_t immed;313,13160
    ptr_int_t immed2;314,13181
    byte *start_pc;start_pc316,13338
    byte *final_pc;final_pc317,13358
    uint len;318,13378
    byte *disp_abs;disp_abs322,13526
    bool x86_mode;329,13830
    byte *orig_pc;orig_pc332,13919
    bool data_prefix;334,13987
    bool rep_prefix;335,14009
    bool repne_prefix;336,14030
    byte vex_vvvv;337,14053
    bool vex_encoded;338,14106
    ptr_int_t cur_note;340,14167
    bool has_instr_opnds;341,14191
} decode_info_t;342,14217
    TYPE_NONE,352,14421
    TYPE_A,353,14436
    TYPE_C,354,14489
    TYPE_D,355,14540
    TYPE_E,356,14589
    TYPE_G,358,14704
    TYPE_H,359,14752
    TYPE_I,360,14810
    TYPE_J,361,14838
    TYPE_L,362,14897
    TYPE_M,363,14965
    TYPE_O,364,15005
    TYPE_P,365,15055
    TYPE_Q,366,15098
    TYPE_R,367,15146
    TYPE_S,368,15187
    TYPE_V,369,15243
    TYPE_W,370,15286
    TYPE_X,371,15334
    TYPE_Y,372,15365
    TYPE_P_MODRM,373,15397
    TYPE_V_MODRM,374,15454
    TYPE_1,375,15511
    TYPE_FLOATCONST,376,15523
    TYPE_XLAT,377,15544
    TYPE_MASKMOVQ,378,15585
    TYPE_FLOATMEM,379,15623
    TYPE_REG,380,15642
    TYPE_VAR_REG,381,15685
    TYPE_VARZ_REG,384,15884
    TYPE_VAR_XREG,387,16066
    TYPE_VAR_ADDR_XREG,390,16273
    TYPE_REG_EX,397,16752
    TYPE_VAR_REG_EX,398,16839
    TYPE_VAR_XREG_EX,400,16984
    TYPE_VAR_REGX_EX,402,17113
    TYPE_INDIR_E,405,17301
    TYPE_INDIR_REG,406,17319
    TYPE_INDIR_VAR_XREG,407,17339
    TYPE_INDIR_VAR_REG,410,17560
    TYPE_INDIR_VAR_XIREG,413,17766
    TYPE_INDIR_VAR_XREG_OFFS_1,416,18009
    TYPE_INDIR_VAR_XREG_OFFS_8,418,18134
    TYPE_INDIR_VAR_XREG_OFFS_N,420,18287
    TYPE_INDIR_VAR_XIREG_OFFS_1,423,18508
    TYPE_INDIR_VAR_REG_OFFS_2,425,18636
    TYPE_INDIR_VAR_XREG_SIZEx8,431,19015
    TYPE_INDIR_VAR_REG_SIZEx2,433,19146
    TYPE_INDIR_VAR_REG_SIZEx3x5,435,19276
    OPSZ_NA 477,21573
    OPSZ_NA = DR_REG_INVALID+DR_REG_INVALID477,21573
    OPSZ_FIRST 478,21659
    OPSZ_FIRST = OPSZ_NA,478,21659
    OPSZ_0,479,21685
    OPSZ_1,481,21832
    OPSZ_2,482,21871
    OPSZ_4,483,21911
    OPSZ_6,484,21956
    OPSZ_8,485,22000
    OPSZ_10,486,22045
    OPSZ_16,488,22184
    OPSZ_14,489,22246
    OPSZ_28,490,22332
    OPSZ_94,491,22419
    OPSZ_108,492,22489
    OPSZ_512,493,22560
    OPSZ_2_short1,506,23412
    OPSZ_4_short2,509,23660
    OPSZ_4_rex8_short2,510,23708
    OPSZ_4_rex8,511,23763
    OPSZ_6_irex10_short4,512,23832
    OPSZ_8_short2,515,24094
    OPSZ_8_short4,516,24151
    OPSZ_28_short14,517,24214
    OPSZ_108_short94,518,24298
    OPSZ_4x8,520,24437
    OPSZ_6x10,522,24571
    OPSZ_4x8_short2,527,24797
    OPSZ_4x8_short2xi8,534,25234
    OPSZ_4_short2xi4,536,25380
    OPSZ_1_reg4,542,25631
    OPSZ_2_reg4,543,25706
    OPSZ_4_reg16,544,25781
    OPSZ_xsave,547,25943
    OPSZ_12,549,26087
    OPSZ_32,550,26133
    OPSZ_40,552,26248
    OPSZ_32_short16,553,26294
    OPSZ_8_rex16,554,26350
    OPSZ_8_rex16_short4,555,26405
    OPSZ_12_rex40_short6,556,26468
    OPSZ_16_vex32,557,26518
    OPSZ_LAST,559,26654
# define OPSZ_PTR 563,26684
# define OPSZ_STACK 564,26756
# define OPSZ_PTR 566,26848
# define OPSZ_STACK 567,26920
#define OPSZ_VARSTACK 569,27013
#define OPSZ_REXVARSTACK 571,27162
#define OPSZ_ret 574,27331
#define OPSZ_call 575,27409
#define OPSZ_lea 578,27539
#define OPSZ_invlpg 579,27623
#define OPSZ_xlat 580,27710
#define OPSZ_clflush 581,27795
#define OPSZ_prefetch 582,27883
#define OPSZ_lgdt 583,27973
#define OPSZ_sgdt 584,28058
#define OPSZ_lidt 585,28143
#define OPSZ_sidt 586,28228
#define OPSZ_bound 587,28313
#define OPSZ_maskmovq 588,28399
#define OPSZ_maskmovdqu 589,28488
#define OPSZ_fldenv 590,28579
#define OPSZ_fnstenv 591,28666
#define OPSZ_fnsave 592,28754
#define OPSZ_frstor 593,28841
#define OPSZ_fxsave 594,28928
#define OPSZ_fxrstor 595,29015
    OPSZ_4_of_8 602,29236
    OPSZ_4_of_8 = OPSZ_LAST,602,29236
    OPSZ_4_of_16,603,29313
    OPSZ_8_of_16,604,29378
    OPSZ_8_of_16_vex32,605,29443
    OPSZ_16_of_32,608,29609
    OPSZ_LAST_ENUM,609,29656
# define OPSZ_STATS 613,29724
# define OPSZ_STATS 615,29757
#define MODRM_BYTE(618,29792
#define DEFAULT_X86_MODE 647,31159
#define X64_MODE(649,31233
#define X64_MODE_DC(651,31311
#define X64_CACHE_MODE_DC(655,31528

x86/decode_fast.c,2814
# undef ASSERT_TRUNCATE51,2206
# undef ASSERT_BITFIELD_TRUNCATE52,2230
# undef ASSERT_NOT_REACHED53,2263
# define ASSERT_TRUNCATE 54,2290
# define ASSERT_BITFIELD_TRUNCATE 55,2359
# define ASSERT_NOT_REACHED 56,2437
static const byte fixed_length[fixed_length75,3291
static const signed char immed_adjustment[immed_adjustment105,4730
static const signed char immed_adjustment_intel64[immed_adjustment_intel64129,6102
static const signed char disp_adjustment[disp_adjustment157,7634
static const char x64_adjustment[x64_adjustment185,9196
    VARLEN_NONE,222,11223
    VARLEN_MODRM,223,11240
    VARLEN_FP_OP,224,11258
    VARLEN_ESCAPE,225,11276
    VARLEN_3BYTE_38_ESCAPE,226,11316
    VARLEN_3BYTE_3A_ESCAPE,227,11371
#define m 231,11489
#define f 232,11512
#define e 233,11535
static const byte variable_length[variable_length238,11717
#undef m261,12741
#undef f262,12750
#undef e263,12759
static const byte escape_fixed_length[escape_fixed_length272,13019
#define m 303,14375
#define e1 304,14398
#define e2 305,14432
static const byte escape_variable_length[escape_variable_length310,14632
#undef m336,15566
#undef e337,15575
static const byte threebyte_38_fixed_length[threebyte_38_fixed_length346,15928
static const byte threebyte_3a_fixed_length[threebyte_3a_fixed_length367,16926
static const byte threebyte_38_vex_extra[threebyte_38_vex_extra388,17823
decode_sizeof(415,19036
sizeof_3byte_38(607,26733
sizeof_3byte_3a(622,27249
sizeof_escape(638,27935
sizeof_modrm(678,29287
sizeof_fp_op(739,31149
static const byte interesting[interesting757,31830
#define x 787,33096
#define RC 788,33112
#define RP 789,33140
#define RZ 790,33168
#define RS 791,33196
#define RO 792,33224
#define R6 793,33252
#define RB 794,33279
#define RL 795,33324
#define RE 796,33369
#define R5O 797,33429
#define WC 798,33478
#define WZ 799,33507
#define W6 800,33536
#define W5 801,33564
#define W5O 802,33615
#define BC 803,33666
#define BA 804,33711
#define BD 805,33756
#define B6 806,33816
#define EFLAGS_6_ESCAPE 807,33860
#define EFLAGS_6_SPECIAL 808,33888
#define E 809,33916
#define S 810,33942
static const int eflags_6[eflags_6812,33970
static const int escape_eflags_6[escape_eflags_6836,35112
#undef x857,36184
#undef RC858,36193
#undef RP859,36203
#undef RZ860,36213
#undef RS861,36223
#undef RO862,36233
#undef R6863,36243
#undef RB864,36253
#undef RL865,36263
#undef RE866,36273
#undef R5O867,36283
#undef WC868,36294
#undef WZ869,36304
#undef W6870,36314
#undef W5871,36324
#undef W5O872,36334
#undef BC873,36345
#undef BA874,36355
#undef BD875,36365
#undef B6876,36375
#undef E877,36385
#undef S878,36394
convert_8bit_offset(887,36735
decode_cti(912,37895
decode_next_pc(1324,54426
decode_raw(1344,55162

x86/decode_fast.h,30
#define DECODE_FAST_H40,1904

x86/decode_table.c,8761
const instr_info_t * const op_instr[op_instr68,3181
#undef Jb1104,53953
#define xx 1106,53964
#define Ap 1109,54060
#define Cr 1110,54148
#define Dr 1111,54177
#define Eb 1112,54206
#define Ew 1113,54233
#define Ev 1114,54260
#define Esv 1115,54299
#define Ed 1116,54377
#define Ep 1117,54404
#define Ed_q 1118,54445
#define Rd_Mb 1119,54478
#define Rd_Mw 1120,54512
#define Gb 1121,54546
#define Gw 1122,54573
#define Gv 1123,54600
#define Gz 1124,54639
#define Gd 1125,54673
#define Gd_q 1126,54700
#define Gr 1127,54733
#define Ib 1128,54762
#define Iw 1129,54789
#define Iv 1130,54816
#define Iz 1131,54855
#define Jb 1132,54889
#define Jz 1133,54916
#define Ma 1134,54953
#define Mp 1135,54987
#define Ms 1136,55028
#define Ob 1137,55058
#define Ov 1138,55085
#define Pd 1139,55124
#define Pq 1140,55151
#define Pd_q 1141,55178
#define Ppi 1142,55211
#define Nq 1143,55238
#define Qd 1144,55271
#define Qq 1145,55298
#define Qpi 1146,55325
#define Rr 1147,55352
#define Sw 1148,55381
#define Vq 1149,55408
#define Vdq 1150,55435
#define Vd_dq 1151,55463
#define Vq_dq 1152,55498
#define Vps 1153,55533
#define Vpd 1154,55561
#define Vss 1155,55589
#define Vsd 1156,55622
#define Ups 1157,55655
#define Upd 1158,55689
#define Udq 1159,55723
#define Uq_dq 1160,55757
#define Wq 1161,55798
#define Wdq 1162,55825
#define Wq_dq 1163,55853
#define Wps 1164,55888
#define Wpd 1165,55916
#define Wss 1166,55944
#define Wsd 1167,55977
#define Udq_Md 1168,56010
#define Xb 1169,56046
#define Xv 1170,56073
#define Xz 1171,56112
#define Yb 1172,56146
#define Yv 1173,56173
#define Yz 1174,56212
#define Vvs 1177,56267
#define Vvd 1178,56301
#define Vvdq 1179,56335
#define Vqq 1180,56370
#define Vdq_qq 1181,56398
#define Wvs 1182,56435
#define Wvd 1183,56469
#define Wvdq 1184,56503
#define Uvs 1185,56538
#define Uvd 1186,56578
#define Uss 1187,56618
#define Usd 1188,56657
#define Hvs 1189,56696
#define Hvd 1190,56730
#define Hss 1191,56764
#define Hsd 1192,56797
#define Hq_dq 1193,56830
#define Hdq 1194,56865
#define Hvdq 1195,56893
#define Wvq_dq 1196,56928
#define Mvs 1197,56970
#define Mvd 1198,57004
#define Mvdq 1199,57038
#define Ldq 1200,57073
#define Lvdq 1201,57138
#define Mb 1207,57350
#define Md 1208,57377
#define Md_q 1209,57404
#define Mw 1210,57438
#define Mm 1211,57465
#define Me 1212,57494
#define Mxsave 1213,57523
#define Mps 1214,57557
#define Mpd 1215,57586
#define Mss 1216,57615
#define Msd 1217,57643
#define Mq 1218,57671
#define Mdq 1219,57698
#define Mq_dq 1220,57727
#define Mv 1221,57762
#define Zb 1222,57801
#define Bq 1223,57831
#define Bdq 1224,57865
#define Kw 1225,57901
#define Kd 1226,57935
#define Kq 1227,57969
#define Kx 1228,58003
#define Ky 1229,58038
#define Kz 1230,58102
#define i_dx 1231,58167
#define i_Ev 1232,58204
#define i_Exi 1233,58251
#define i_Ep 1234,58299
#define i_xSP 1235,58348
#define i_iSP 1236,58391
#define i_xBP 1237,58435
#define i_iSPo1 1239,58523
#define i_vSPo2 1240,58576
#define i_xSPo1 1241,58627
#define i_xSPo8 1242,58679
#define i_xSPs8 1243,58731
#define i_vSPs2 1244,58783
#define i_vSPs3 1245,58834
#define i_xSPoN 1247,58914
#define c1 1248,58966
#define cF 1249,58993
#define Av 1252,59050
#define eAX 1256,59144
#define eCX 1257,59178
#define eDX 1258,59212
#define eBX 1259,59246
#define eSP 1260,59280
#define eBP 1261,59314
#define eSI 1262,59348
#define eDI 1263,59382
#define zAX 1266,59479
#define zCX 1267,59514
#define zDX 1268,59549
#define zBX 1269,59584
#define zSP 1270,59619
#define zBP 1271,59654
#define zSI 1272,59689
#define zDI 1273,59724
#define xAX 1278,59898
#define xCX 1279,59933
#define xDX 1280,59968
#define xBX 1281,60003
#define xSP 1282,60038
#define xBP 1283,60073
#define xSI 1284,60108
#define xDI 1285,60143
#define axSP 1290,60318
#define axBP 1291,60359
#define axCX 1293,60433
#define axSI 1295,60502
#define axDI 1296,60543
#define axAX 1297,60584
#define al_x 1300,60704
#define cl_x 1301,60737
#define dl_x 1302,60770
#define bl_x 1303,60803
#define ah_x 1304,60836
#define ch_x 1305,60869
#define dh_x 1306,60902
#define bh_x 1307,60935
#define eAX_x 1310,61055
#define eCX_x 1311,61094
#define eDX_x 1312,61133
#define eBX_x 1313,61172
#define eSP_x 1314,61211
#define eBP_x 1315,61250
#define eSI_x 1316,61289
#define eDI_x 1317,61328
#define xAX_x 1320,61451
#define xCX_x 1321,61491
#define xDX_x 1322,61531
#define xBX_x 1323,61571
#define xSP_x 1324,61611
#define xBP_x 1325,61651
#define xSI_x 1326,61691
#define xDI_x 1327,61731
#define uAX_x 1330,61851
#define uCX_x 1331,61891
#define uDX_x 1332,61931
#define uBX_x 1333,61971
#define uSP_x 1334,62011
#define uBP_x 1335,62051
#define uSI_x 1336,62091
#define uDI_x 1337,62131
#define ax 1339,62172
#define cx 1340,62200
#define dx 1341,62228
#define bx 1342,62256
#define sp 1343,62284
#define bp 1344,62312
#define si 1345,62340
#define di 1346,62368
#define al 1348,62397
#define cl 1349,62425
#define dl 1350,62453
#define bl 1351,62481
#define ah 1352,62509
#define ch 1353,62537
#define dh 1354,62565
#define bh 1355,62593
#define eax 1357,62622
#define ecx 1358,62652
#define edx 1359,62682
#define ebx 1360,62712
#define esp 1361,62742
#define ebp 1362,62772
#define esi 1363,62802
#define edi 1364,62832
#define xsp 1366,62863
#define xcx 1367,62893
#define cs 1369,62924
#define ss 1370,62953
#define ds 1371,62982
#define es 1372,63011
#define fs 1373,63040
#define gs 1374,63069
#define st0 1376,63099
#define st1 1377,63129
#define st2 1378,63159
#define st3 1379,63189
#define st4 1380,63219
#define st5 1381,63249
#define st6 1382,63279
#define st7 1383,63309
#define xmm0 1385,63340
#define no 1388,63385
#define mrm 1389,63404
#define xop 1390,63431
#define mrm_xop 1391,63490
#define xop_next 1392,63559
#define i64 1393,63597
#define o64 1394,63626
#define reqp 1395,63655
#define vex 1396,63688
#define rex 1397,63718
#define x 1400,63762
#define fRC 1401,63778
#define fRP 1402,63807
#define fRA 1403,63836
#define fRZ 1404,63865
#define fRS 1405,63894
#define fRT 1406,63923
#define fRI 1407,63952
#define fRD 1408,63981
#define fRO 1409,64010
#define fRN 1410,64039
#define fRR 1411,64068
#define fRX 1412,64097
#define fR6 1413,64127
#define fWC 1414,64155
#define fWP 1415,64185
#define fWA 1416,64215
#define fWZ 1417,64245
#define fWS 1418,64275
#define fWT 1419,64305
#define fWI 1420,64335
#define fWD 1421,64365
#define fWO 1422,64395
#define fWN 1423,64425
#define fWR 1424,64455
#define fWX 1425,64485
#define fW6 1426,64516
#define fINT 1430,64619
#define NA 1433,64709
#define END_LIST 1434,64722
#define tfb 1435,64742
#define tsb 1436,64777
#define tex 1437,64813
#define t38 1438,64848
#define t3a 1439,64886
#define tpe 1440,64924
#define tvex 1441,64966
#define modx 1442,65006
#define tre 1443,65046
#define tne 1444,65085
#define tfl 1445,65126
#define tfh 1446,65166
#define exop 1447,65207
#define t64e 1448,65247
#define trexb 1449,65287
#define trexw 1450,65330
#define tvex 1451,65373
const instr_info_t invalid_instr 1456,65532
const instr_info_t first_byte[first_byte1463,65772
const instr_info_t second_byte[second_byte1766,86572
const instr_info_t extensions[extensions2082,107428
const instr_info_t prefix_extensions[prefix_extensions2412,127189
const instr_info_t vex_extensions[vex_extensions3991,223762
const instr_info_t mod_extensions[mod_extensions4240,240258
const instr_info_t rm_extensions[rm_extensions4293,242806
const instr_info_t x64_extensions[x64_extensions4349,246014
const instr_info_t vex_prefix_extensions[vex_prefix_extensions4408,249616
const instr_info_t vex_L_extensions[vex_L_extensions4422,250252
const instr_info_t rex_b_extensions[rex_b_extensions4452,251674
const instr_info_t rex_w_extensions[rex_w_extensions4471,252628
const byte third_byte_38_index[third_byte_38_index4514,254647
const instr_info_t third_byte_38[third_byte_384533,255788
const byte third_byte_3a_index[third_byte_3a_index4647,264166
const instr_info_t third_byte_3a[third_byte_3a4666,265307
const instr_info_t vex_W_extensions[vex_W_extensions4713,268359
const instr_info_t rep_extensions[rep_extensions4818,275293
const instr_info_t repne_extensions[repne_extensions4884,279209
const instr_info_t float_low_modrm[float_low_modrm4928,282190
const instr_info_t float_high_modrm[float_high_modrm5007,287562
const byte suffix_index[suffix_index5571,332824
const instr_info_t suffix_extensions[suffix_extensions5590,333958
const instr_info_t extra_operands[extra_operands5630,336879

x86/decodelib.c,664
options_t dynamo_options;48,2084
file_t our_stdout 52,2202
file_t our_stderr 53,2237
file_t our_stdin 54,2272
dr_get_stdout_file(59,2343
dr_get_stderr_file(65,2431
dr_get_stdin_file(71,2518
static uint vendor 77,2597
proc_get_vendor(80,2652
proc_set_vendor(87,2709
heap_alloc(99,2948
heap_free(105,3058
get_thread_private_dcontext(111,3172
external_error(117,3244
proc_save_fpstate(124,3391
proc_restore_fpstate(130,3444
dr_mcontext_as_priv_mcontext(136,3533
instrlist_meta_postinsert(144,3783
double_print(156,4173
print_to_buffer(178,4852
#undef vsnprintf181,4956
print_file(204,5641
#define MAX_PRINT_FILE_LEN 211,5886
os_write(233,6438

x86/disassemble.c,1741
# undef ASSERT_TRUNCATE76,3202
# undef ASSERT_BITFIELD_TRUNCATE77,3226
# undef ASSERT_NOT_REACHED78,3259
# define ASSERT_TRUNCATE 79,3286
# define ASSERT_BITFIELD_TRUNCATE 80,3355
# define ASSERT_NOT_REACHED 81,3433
disassemble_set_syntax(90,3636
#define BYTES_PER_LINE 103,4016
immed_prefix(110,4221
postop_suffix(116,4325
reg_disassemble(122,4446
opnd_mem_disassemble_prefix(131,4760
opnd_base_disp_disassemble(153,5560
internal_opnd_disassemble(218,8100
opnd_disassemble(489,21795
opnd_disassemble_to_buffer(500,22224
print_bytes_to_buffer(510,22489
print_extra_bytes_to_buffer(533,23169
print_bytes_to_file(547,23671
print_extra_bytes_to_file(559,24098
internal_disassemble(575,24758
internal_disassemble_to_file(630,26543
disassemble(654,27552
disassemble_with_bytes(668,28093
disassemble_with_info(688,28838
disassemble_from_copy(705,29535
disassemble_to_buffer(713,29833
instr_implicit_reg(726,30278
opnd_disassemble_noimplicit(743,30786
instr_disassemble_opnds_noimplicit(825,33305
instr_opcode_name(888,35978
instr_opcode_name_suffix(910,36620
internal_instr_disassemble(981,39130
instr_disassemble(1125,44868
instr_disassemble_to_buffer(1149,45912
exit_stub_type_desc(1159,46198
common_disassemble_fragment(1189,47247
disassemble_fragment(1363,54347
disassemble_fragment_header(1375,54686
disassemble_fragment_body(1381,54845
disassemble_app_bb(1387,55002
instrlist_disassemble(1399,55365
int instrlist_disassembled_instr_cnt(1508,59654
callstack_dump_module_info(1521,59916
internal_dump_callstack_to_buffer(1539,60585
internal_dump_callstack(1601,63120
dump_callstack(1615,63662
dump_callstack_to_buffer(1621,63814
dump_mcontext_callstack(1630,64074
dump_dr_callstack(1640,64381

x86/disassemble.h,469
#define DISASSEMBLE_H41,1966
#define MAX_OPND_DIS_SZ 46,2089
#define MAX_INSTR_DIS_SZ 50,2229
#define MAX_PC_DIS_SZ 54,2447
    DR_DISASM_DR 67,2779
    DR_DISASM_DR             =  0x0,x067,2779
    DR_DISASM_INTEL 73,3016
    DR_DISASM_INTEL          =  0x1,x173,3016
    DR_DISASM_ATT 79,3250
    DR_DISASM_ATT            =  0x2,x279,3250
    DR_DISASM_STRICT_INVALID 88,3709
    DR_DISASM_STRICT_INVALID =  0x4,x488,3709
} dr_disasm_flags_t;89,3746

x86/emit_utils.c,6991
#define FRAGMENT_TAG_OFFS 69,2611
#define FRAGMENT_START_PC_OFFS 71,2747
#define FRAGMENT_COUNTER_OFFS 72,2813
#define FRAGMENT_PREFIX_SIZE_OFFS 73,2882
#define HASHLOOKUP_TAG_OFFS 75,2953
#define HASHLOOKUP_START_PC_OFFS 76,3030
#  define HASHLOOKUP_STAT_OFFS(79,3146
#  define LINKSTUB_TARGET_FRAG_OFFS 84,3294
#  define LINKSTUB_COUNT_OFFS 88,3411
#define UNPROT_OFFS(94,3603
#define POST 110,4200
#define PRE 111,4239
#define APP 112,4277
#  define FRAG_DB_SHARED(122,4598
#  define FRAG_DB_SHARED(124,4641
#define STUB_DIRECT_SIZE(194,6919
#define STUB_INDIRECT_SIZE32 200,7123
#define STUB_INDIRECT_SIZE64 202,7228
#define STUB_INDIRECT_SIZE(204,7333
#define STUB_COARSE_INDIRECT_SIZE(208,7491
#  define LINKCOUNT_INCSIZE 211,7587
#  define LINKCOUNT_INCSIZE 213,7625
#define LINKCOUNT_EFLAGS_SAVE 215,7666
#define LINKCOUNT_EFLAGS_RESTORE 216,7702
#define LINKCOUNT_FLAGSIZE 217,7741
#define LINKCOUNT_DIRECT_EXTRA(219,7820
#define LINKCOUNT_UNLINKED_ENTRY(221,7931
#define LINKCOUNT_NEVER_LINKED_SENTINEL 229,8310
exit_stub_size(235,8461
insert_relative_target(316,11781
insert_relative_jump(328,12137
insert_spill_or_restore(347,12701
insert_jmp_to_ibl(424,15874
insert_linkcount_inc(494,18687
insert_linkcount_saveflags(523,19524
insert_linkcount_restoreflags(538,19940
is_patchable_exit_stub_helper(552,20347
is_patchable_exit_stub(581,21150
is_exit_cti_stub_patchable(588,21381
bytes_for_exitstub_alignment(607,22056
extend_trace_pad_bytes(632,23062
pad_for_exitstub_alignment(659,24668
remove_nops_from_ilist(684,25742
nop_pad_ilist(714,26941
insert_inlined_ibl(828,32989
get_direct_exit_target(882,35429
insert_save_xax(898,36023
insert_restore_xax(908,36420
insert_exit_stub_other_flags(924,37102
insert_exit_stub(1085,43997
exit_cti_disp_pc(1092,44198
patch_branch(1142,45995
change_linkcount_target(1150,46221
optimize_linkcount_stub(1170,47050
patchable_exit_cti_align_offs(1256,50919
is_exit_cti_patchable(1273,51855
link_direct_exit(1324,53472
unlink_direct_exit(1418,57479
link_indirect_exit(1487,60193
linkstub_unlink_entry_offset(1568,63155
indirect_linkstub_stub_pc(1586,63704
indirect_linkstub_target(1624,65191
linkstub_cbr_disambiguate(1659,66769
cbr_fallthrough_exit_cti(1679,67354
unlink_indirect_exit(1695,68002
entrance_stub_jmp(1794,71723
coarse_is_entrance_stub(1811,72287
coarse_is_trace_head(1835,73097
entrance_stub_jmp_target(1849,73525
entrance_stub_target_tag(1860,73760
coarse_is_indirect_stub(1901,75391
coarse_cti_is_intra_fragment(1911,75667
coarse_indirect_stub_jmp_target(1943,77017
coarse_indirect_stub_size(1967,77774
entrance_stub_linked(1977,78097
patch_coarse_branch(1993,78785
link_entrance_stub(2032,80387
unlink_entrance_stub(2047,81054
entrance_stub_from_cti(2065,81715
init_patch_list(2076,81994
add_patch_entry_internal(2087,82421
add_patch_entry(2120,83768
add_patch_marker(2133,84297
remove_assembled_patch_markers(2142,84700
relocate_patch_list(2170,85511
encode_with_patch_list(2229,88161
print_patch_list(2318,91836
disassemble_with_annotations(2337,92462
patch_emitted_code(2364,93307
#define GET_IB_FTABLE(2441,96810
update_indirect_exit_stub(2450,97147
#define IBL_EFLAGS_IN_TLS(2510,99414
#define RESTORE_XAX_PREFIX(2512,99484
#define PREFIX_BASE(2515,99666
enum {PREFIX_SIZE_RESTORE_OF PREFIX_SIZE_RESTORE_OF2518,99763
      PREFIX_SIZE_FIVE_EFLAGS 2519,99819
use_ibt_prefix(2524,99932
ibl_use_target_prefix(2546,101003
fragment_prefix_size(2565,101874
insert_restore_xcx(2610,103771
insert_restore_register(2623,104339
insert_fragment_prefix(2650,105377
static uint profile_call_length 2741,109276
static int profile_call_fragment_offset 2742,109313
static int profile_call_call_offset 2743,109358
static byte profile_call_buf[profile_call_buf2744,109399
static dcontext_t *buffer_dcontext;buffer_dcontext2745,109434
profile_call_size(2749,109521
finalize_profile_call(2761,109815
insert_profile_call(2819,112250
build_profile_call_buffer(2835,112796
#define RESTORE_FROM_DC_VIA_REG(2952,117253
#define SAVE_TO_DC_VIA_REG(2957,117646
preinsert_swap_peb(3004,119998
#define RESTORE_FROM_DC(3145,127085
#define SAVE_TO_DC(3148,127270
#define OPND_TLS_FIELD(3151,127365
#define OPND_TLS_FIELD_SZ(3153,127437
#define SAVE_TO_TLS(3156,127532
#define RESTORE_FROM_TLS(3158,127613
#define SAVE_TO_REG(3161,127705
#define RESTORE_FROM_REG(3163,127788
#define OPND_DC_FIELD(3166,127882
#  define OPND_ARG1 3174,128257
#  define OPND_ARG1 3176,128310
# define OPND_ARG1 3179,128370
emit_fcache_enter_common(3293,132367
emit_fcache_enter(3521,142664
insert_shared_get_dcontext(3547,143707
insert_shared_restore_dcontext_reg(3577,145091
append_fcache_return_common(3724,150158
emit_fcache_return(3960,161005
emit_fcache_enter_shared(3978,161686
emit_fcache_return_shared(3985,161910
emit_fcache_return_coarse(4002,162552
emit_trace_head_return_coarse(4020,163275
coarse_exit_prefix_size(4051,164888
emit_coarse_exit_prefix(4070,165635
patch_coarse_exit_prefix(4219,172461
insert_save_eflags(4234,172920
insert_restore_eflags(4282,175170
append_increment_counter(4317,176854
append_empty_loop(4400,180890
instrlist_convert_to_x86(4422,181635
append_ibl_found(4436,182070
append_linkcount_incr(4591,188711
append_ibl_head(4672,193103
#define HEAD_START_PC_OFFS 4941,206128
#undef HEAD_START_PC_OFFS4948,206516
emit_inline_ibl_stub(4991,208006
#  define INSTR_CREATE_jmp_smart 5158,216060
#  define INSTR_CREATE_jmp_smart 5160,216116
emit_indirect_branch_lookup(5186,217208
update_ibl_routine(5932,253487
update_indirect_branch_lookup(5968,255218
emit_far_ibl(6052,258580
create_int_syscall_instr(6187,264708
create_syscall_instr(6208,265459
emit_shared_syscall(6400,272979
emit_dispatch_template(6937,297828
emit_shared_syscall_dispatch(6968,298819
emit_unlinked_shared_syscall_dispatch(6975,299019
link_shared_syscall_common(6990,299653
link_shared_syscall(7006,300120
unlink_shared_syscall_common(7027,300903
unlink_shared_syscall(7043,301371
emit_detach_callback_code(7143,305221
emit_detach_callback_final_jmp(7241,309808
emit_patch_syscall(7268,310666
emit_do_syscall_common(7323,313272
emit_fcache_enter_indirect(7422,316855
emit_do_callback_return(7433,317282
emit_do_clone_syscall(7465,318415
emit_do_vmkuw_syscall(7474,318797
emit_do_syscall(7487,319309
update_syscall(7499,319779
update_syscalls(7549,321523
decode_syscall_num(7567,321974
is_jmp_rel32(7617,324021
is_jmp_rel8(7632,324455
emit_new_thread_dynamo_start(7656,325129
emit_trace_head_incr(7732,328181
emit_trace_head_incr_shared(7819,332710
client_xfer_ibl_tgt(7830,332952
client_ibl_xfer_is_thread_private(7850,333947
emit_client_ibl_xfer(7861,334186
relink_client_ibl_xfer(7945,337299
link_client_ibl_xfer(7972,338311
unlink_client_ibl_xfer(7978,338414
client_clean_call_is_thread_private(7988,338671
emit_clean_call_save(7998,338829
emit_clean_call_restore(8041,340596

x86/instr_create.h,40259
#define _INSTR_CREATE_H_ 38,1892
#define LOCK(71,2995
#define INSTR_XL8(76,3211
#define OPND_CREATE_MEM64(80,3392
#define OPND_CREATE_MEM32(83,3542
#define OPND_CREATE_MEM16(86,3692
#define OPND_CREATE_MEM8(89,3842
# define OPND_CREATE_MEMPTR 93,4009
# define OPND_CREATE_ABSMEM(98,4199
# define OPND_CREATE_MEMPTR 102,4331
# define OPND_CREATE_ABSMEM(104,4420
#define OPND_CREATE_INT64(110,4568
# define OPND_CREATE_INTPTR 112,4704
# define OPND_CREATE_INTPTR 115,4813
#define OPND_CREATE_INT32(118,4916
#define OPND_CREATE_INT16(120,5045
#define OPND_CREATE_INT8(122,5174
#define OPND_CREATE_INT_32OR8(127,5374
#define OPND_CREATE_INT_16OR8(133,5638
#define OPND_CREATE_MEM_lea(139,5926
#define OPND_CREATE_MEM_invlpg(142,6120
#define OPND_CREATE_MEM_clflush(145,6321
#define OPND_CREATE_MEM_prefetch(148,6526
#define OPND_CREATE_MEM_lgdt(151,6728
#define OPND_CREATE_MEM_sgdt(154,6922
#define OPND_CREATE_MEM_lidt(157,7116
#define OPND_CREATE_MEM_sidt(160,7310
#define OPND_CREATE_MEM_bound(163,7505
#define OPND_CREATE_MEM_fldenv(166,7703
#define OPND_CREATE_MEM_fnstenv(169,7904
#define OPND_CREATE_MEM_fnsave(172,8106
#define OPND_CREATE_MEM_frstor(175,8306
#define OPND_CREATE_MEM_fxsave(178,8520
#define OPND_CREATE_MEM_fxrstor(181,8735
#define OPND_CREATE_MEM_xsave(187,9016
#define INSTR_CREATE_fwait(213,10181
#define INSTR_CREATE_hlt(214,10254
#define INSTR_CREATE_cmc(215,10325
#define INSTR_CREATE_clc(216,10396
#define INSTR_CREATE_stc(217,10467
#define INSTR_CREATE_cli(218,10538
#define INSTR_CREATE_sti(219,10609
#define INSTR_CREATE_cld(220,10680
#define INSTR_CREATE_std(221,10751
#define INSTR_CREATE_clts(222,10822
#define INSTR_CREATE_invd(223,10894
#define INSTR_CREATE_wbinvd(224,10966
#define INSTR_CREATE_ud2a(225,11040
#define INSTR_CREATE_emms(226,11112
#define INSTR_CREATE_rsm(227,11184
#define INSTR_CREATE_ud2b(228,11255
#define INSTR_CREATE_lfence(229,11327
#define INSTR_CREATE_mfence(230,11401
#define INSTR_CREATE_sfence(231,11475
#define INSTR_CREATE_nop(232,11549
#define INSTR_CREATE_pause(233,11620
#define INSTR_CREATE_fnop(234,11693
#define INSTR_CREATE_fdecstp(235,11765
#define INSTR_CREATE_fincstp(236,11840
#define INSTR_CREATE_fnclex(237,11915
#define INSTR_CREATE_fninit(238,11989
#define INSTR_CREATE_sysret(239,12063
#define INSTR_CREATE_femms(240,12137
#define INSTR_CREATE_swapgs(241,12210
#define INSTR_CREATE_vmcall(242,12284
#define INSTR_CREATE_vmlaunch(243,12358
#define INSTR_CREATE_vmresume(244,12434
#define INSTR_CREATE_vmxoff(245,12510
#define INSTR_CREATE_vmmcall(246,12584
#define INSTR_CREATE_stgi(247,12659
#define INSTR_CREATE_clgi(248,12731
#define INSTR_CREATE_int3(249,12803
#define INSTR_CREATE_into(250,12871
#define INSTR_CREATE_int1(251,12939
#define INSTR_CREATE_vzeroupper(252,13007
#define INSTR_CREATE_vzeroall(253,13087
#define INSTR_CREATE_label(261,13469
#define INSTR_CREATE_jcc_short(276,14235
#define INSTR_CREATE_jcc(287,14759
#define INSTR_CREATE_jmp(298,15342
#define INSTR_CREATE_jmp_short(300,15420
#define INSTR_CREATE_jmp_ind(310,15912
#define INSTR_CREATE_jmp_far(319,16362
#define INSTR_CREATE_jmp_far_ind(328,16825
#define INSTR_CREATE_lldt(338,17341
#define INSTR_CREATE_ltr(340,17421
#define INSTR_CREATE_verr(342,17499
#define INSTR_CREATE_verw(344,17579
#define INSTR_CREATE_vmptrld(346,17659
#define INSTR_CREATE_vmxon(348,17745
#define INSTR_CREATE_lgdt(357,18218
#define INSTR_CREATE_lidt(366,18689
#define INSTR_CREATE_lmsw(368,18769
#define INSTR_CREATE_invlpg(377,19242
#define INSTR_CREATE_fxrstor32(386,19720
#define INSTR_CREATE_fxrstor64(395,20204
#define INSTR_CREATE_ldmxcsr(397,20294
#define INSTR_CREATE_vldmxcsr(399,20380
#define INSTR_CREATE_nop_modrm(401,20468
#define INSTR_CREATE_prefetchnta(413,21095
#define INSTR_CREATE_prefetcht0(415,21189
#define INSTR_CREATE_prefetcht1(417,21281
#define INSTR_CREATE_prefetcht2(419,21373
#define INSTR_CREATE_prefetch(421,21465
#define INSTR_CREATE_prefetchw(423,21553
#define INSTR_CREATE_clflush(433,22070
#define INSTR_CREATE_int(442,22530
#define INSTR_CREATE_jmpe(448,22656
#define INSTR_CREATE_jmpe_abs(450,22736
#define INSTR_CREATE_fldenv(462,23251
#define INSTR_CREATE_fldcw(471,23736
#define INSTR_CREATE_frstor(480,24216
#define INSTR_CREATE_fxam(491,24663
#define INSTR_CREATE_sahf(493,24764
#define INSTR_CREATE_vmrun(495,24864
#define INSTR_CREATE_vmload(497,24967
#define INSTR_CREATE_vmsave(499,25072
#define INSTR_CREATE_skinit(501,25177
#define INSTR_CREATE_cmp(515,25859
#define INSTR_CREATE_test(517,25949
#define INSTR_CREATE_ptest(519,26041
#define INSTR_CREATE_vucomiss(522,26145
#define INSTR_CREATE_vucomisd(524,26245
#define INSTR_CREATE_vcomiss(526,26345
#define INSTR_CREATE_vcomisd(528,26443
#define INSTR_CREATE_vptest(530,26541
#define INSTR_CREATE_vtestps(532,26637
#define INSTR_CREATE_vtestpd(534,26735
#define INSTR_CREATE_bound(544,27290
#define INSTR_CREATE_bt(554,27809
#define INSTR_CREATE_ucomiss(556,27895
#define INSTR_CREATE_ucomisd(558,27993
#define INSTR_CREATE_comiss(560,28091
#define INSTR_CREATE_comisd(562,28187
#define INSTR_CREATE_invept(564,28283
#define INSTR_CREATE_invvpid(566,28379
#define INSTR_CREATE_jecxz(578,28932
#define INSTR_CREATE_jcxz(587,29381
#define INSTR_CREATE_out_1(598,29863
#define INSTR_CREATE_out_4(601,29997
#define INSTR_CREATE_out_1_imm(614,30668
#define INSTR_CREATE_out_4_imm(616,30780
#define INSTR_CREATE_mwait(628,31305
#define INSTR_CREATE_invlpga(631,31445
#define INSTR_CREATE_wrmsr(635,31630
#define INSTR_CREATE_monitor(638,31797
#define INSTR_CREATE_xsetbv(641,31970
#define INSTR_CREATE_xrstor32(655,32671
#define INSTR_CREATE_xrstor64(665,33183
#define INSTR_CREATE_fcom(683,34074
#define INSTR_CREATE_fcomp(685,34183
#define INSTR_CREATE_fcomi(698,34887
#define INSTR_CREATE_fcomip(700,34998
#define INSTR_CREATE_fucomi(702,35111
#define INSTR_CREATE_fucomip(704,35224
#define INSTR_CREATE_fucom(706,35339
#define INSTR_CREATE_fucomp(708,35450
#define INSTR_CREATE_fucompp(718,35938
#define INSTR_CREATE_fcompp(721,36080
#define INSTR_CREATE_setcc(735,36643
#define INSTR_CREATE_sldt(745,37167
#define INSTR_CREATE_str(747,37247
#define INSTR_CREATE_vmptrst(749,37325
#define INSTR_CREATE_vmclear(751,37411
#define INSTR_CREATE_sgdt(760,37893
#define INSTR_CREATE_sidt(769,38369
#define INSTR_CREATE_smsw(771,38449
#define INSTR_CREATE_fxsave32(780,38927
#define INSTR_CREATE_fxsave64(789,39413
#define INSTR_CREATE_stmxcsr(791,39501
#define INSTR_CREATE_vstmxcsr(793,39587
#define INSTR_CREATE_fnstenv(814,40669
#define INSTR_CREATE_fnstcw(816,40755
#define INSTR_CREATE_fnsave(825,41237
#define INSTR_CREATE_fnstsw(827,41321
#define INSTR_CREATE_ffree(838,41810
#define INSTR_CREATE_ffreep(840,41892
#define INSTR_CREATE_lahf(851,42355
#define INSTR_CREATE_sysenter(853,42455
#define INSTR_CREATE_sysexit(855,42564
#define INSTR_CREATE_syscall(857,42671
#define INSTR_CREATE_salc(859,42778
#define INSTR_CREATE_arpl(873,43441
#define INSTR_CREATE_lea(883,43992
#define INSTR_CREATE_mov_ld(885,44078
#define INSTR_CREATE_mov_st(887,44170
#define INSTR_CREATE_mov_imm(889,44262
#define INSTR_CREATE_mov_seg(891,44356
#define INSTR_CREATE_mov_priv(893,44450
#define INSTR_CREATE_lar(895,44546
#define INSTR_CREATE_lsl(897,44632
#define INSTR_CREATE_movntps(899,44718
#define INSTR_CREATE_movntpd(901,44812
#define INSTR_CREATE_movd(903,44906
#define INSTR_CREATE_movq(905,44994
#define INSTR_CREATE_movdqu(907,45082
#define INSTR_CREATE_movdqa(909,45174
#define INSTR_CREATE_movzx(911,45266
#define INSTR_CREATE_movsx(913,45356
#define INSTR_CREATE_bsf(915,45446
#define INSTR_CREATE_bsr(917,45532
#define INSTR_CREATE_pmovmskb(919,45618
#define INSTR_CREATE_movups(921,45714
#define INSTR_CREATE_movss(923,45806
#define INSTR_CREATE_movupd(925,45896
#define INSTR_CREATE_movsd(927,45988
#define INSTR_CREATE_movlps(929,46078
#define INSTR_CREATE_movlpd(931,46170
#define INSTR_CREATE_movhps(933,46262
#define INSTR_CREATE_movhpd(935,46354
#define INSTR_CREATE_movaps(937,46446
#define INSTR_CREATE_movapd(939,46538
#define INSTR_CREATE_cvtpi2ps(941,46630
#define INSTR_CREATE_cvtsi2ss(943,46726
#define INSTR_CREATE_cvtpi2pd(945,46822
#define INSTR_CREATE_cvtsi2sd(947,46918
#define INSTR_CREATE_cvttps2pi(949,47014
#define INSTR_CREATE_cvttss2si(951,47112
#define INSTR_CREATE_cvttpd2pi(953,47210
#define INSTR_CREATE_cvttsd2si(955,47308
#define INSTR_CREATE_cvtps2pi(957,47406
#define INSTR_CREATE_cvtss2si(959,47502
#define INSTR_CREATE_cvtpd2pi(961,47598
#define INSTR_CREATE_cvtsd2si(963,47694
#define INSTR_CREATE_cvtps2pd(965,47790
#define INSTR_CREATE_cvtss2sd(967,47886
#define INSTR_CREATE_cvtpd2ps(969,47982
#define INSTR_CREATE_cvtsd2ss(971,48078
#define INSTR_CREATE_cvtdq2ps(973,48174
#define INSTR_CREATE_cvttps2dq(975,48270
#define INSTR_CREATE_cvtps2dq(977,48368
#define INSTR_CREATE_cvtdq2pd(979,48464
#define INSTR_CREATE_cvttpd2dq(981,48560
#define INSTR_CREATE_cvtpd2dq(983,48658
#define INSTR_CREATE_movmskps(985,48754
#define INSTR_CREATE_movmskpd(987,48850
#define INSTR_CREATE_sqrtps(989,48946
#define INSTR_CREATE_sqrtss(991,49038
#define INSTR_CREATE_sqrtpd(993,49130
#define INSTR_CREATE_sqrtsd(995,49222
#define INSTR_CREATE_rsqrtps(997,49314
#define INSTR_CREATE_rsqrtss(999,49408
#define INSTR_CREATE_rcpps(1001,49502
#define INSTR_CREATE_rcpss(1003,49592
#define INSTR_CREATE_lddqu(1005,49682
#define INSTR_CREATE_movsldup(1007,49772
#define INSTR_CREATE_movshdup(1009,49868
#define INSTR_CREATE_movddup(1011,49964
#define INSTR_CREATE_pshufb(1013,50058
#define INSTR_CREATE_popcnt(1015,50150
#define INSTR_CREATE_movntss(1017,50242
#define INSTR_CREATE_movntsd(1019,50336
#define INSTR_CREATE_movntq(1021,50430
#define INSTR_CREATE_movntdq(1023,50522
#define INSTR_CREATE_movnti(1025,50616
#define INSTR_CREATE_lzcnt(1027,50708
#define INSTR_CREATE_pmovsxbw(1029,50798
#define INSTR_CREATE_pmovsxbd(1031,50894
#define INSTR_CREATE_pmovsxbq(1033,50990
#define INSTR_CREATE_pmovsxdw(1035,51086
#define INSTR_CREATE_pmovsxwq(1037,51182
#define INSTR_CREATE_pmovsxdq(1039,51278
#define INSTR_CREATE_movntdqa(1041,51374
#define INSTR_CREATE_pmovzxbw(1043,51470
#define INSTR_CREATE_pmovzxbd(1045,51566
#define INSTR_CREATE_pmovzxbq(1047,51662
#define INSTR_CREATE_pmovzxdw(1049,51758
#define INSTR_CREATE_pmovzxwq(1051,51854
#define INSTR_CREATE_pmovzxdq(1053,51950
#define INSTR_CREATE_phminposuw(1055,52046
#define INSTR_CREATE_vmread(1057,52146
#define INSTR_CREATE_vmwrite(1059,52238
#define INSTR_CREATE_movsxd(1061,52332
#define INSTR_CREATE_movbe(1063,52424
#define INSTR_CREATE_aesimc(1065,52514
#define INSTR_CREATE_vmovups(1068,52616
#define INSTR_CREATE_vmovupd(1070,52710
#define INSTR_CREATE_vmovsldup(1072,52804
#define INSTR_CREATE_vmovddup(1074,52902
#define INSTR_CREATE_vmovlps(1076,52998
#define INSTR_CREATE_vmovlpd(1078,53092
#define INSTR_CREATE_vmovshdup(1080,53186
#define INSTR_CREATE_vmovhps(1082,53284
#define INSTR_CREATE_vmovhpd(1084,53378
#define INSTR_CREATE_vmovaps(1086,53472
#define INSTR_CREATE_vmovapd(1088,53566
#define INSTR_CREATE_vmovntps(1090,53660
#define INSTR_CREATE_vmovntpd(1092,53756
#define INSTR_CREATE_vcvttss2si(1094,53852
#define INSTR_CREATE_vcvttsd2si(1096,53952
#define INSTR_CREATE_vcvtss2si(1098,54052
#define INSTR_CREATE_vcvtsd2si(1100,54150
#define INSTR_CREATE_vmovmskps(1102,54248
#define INSTR_CREATE_vmovmskpd(1104,54346
#define INSTR_CREATE_vsqrtps(1106,54444
#define INSTR_CREATE_vsqrtpd(1108,54538
#define INSTR_CREATE_vrsqrtps(1110,54632
#define INSTR_CREATE_vrcpps(1112,54728
#define INSTR_CREATE_vcvtps2pd(1114,54820
#define INSTR_CREATE_vcvtpd2ps(1116,54918
#define INSTR_CREATE_vcvtdq2ps(1118,55016
#define INSTR_CREATE_vcvttps2dq(1120,55114
#define INSTR_CREATE_vcvtps2dq(1122,55214
#define INSTR_CREATE_vmovd(1124,55312
#define INSTR_CREATE_vmovq(1126,55402
#define INSTR_CREATE_vpmovmskb(1128,55492
#define INSTR_CREATE_vcvtdq2pd(1130,55590
#define INSTR_CREATE_vcvttpd2dq(1132,55688
#define INSTR_CREATE_vcvtpd2dq(1134,55788
#define INSTR_CREATE_vmovntdq(1136,55886
#define INSTR_CREATE_vmovdqu(1138,55982
#define INSTR_CREATE_vmovdqa(1140,56076
#define INSTR_CREATE_vlddqu(1142,56170
#define INSTR_CREATE_vpshufb(1144,56262
#define INSTR_CREATE_vpmovsxbw(1146,56356
#define INSTR_CREATE_vpmovsxbd(1148,56454
#define INSTR_CREATE_vpmovsxbq(1150,56552
#define INSTR_CREATE_vpmovsxdw(1152,56650
#define INSTR_CREATE_vpmovsxwq(1154,56748
#define INSTR_CREATE_vpmovsxdq(1156,56846
#define INSTR_CREATE_vmovntdqa(1158,56944
#define INSTR_CREATE_vpmovzxbw(1160,57042
#define INSTR_CREATE_vpmovzxbd(1162,57140
#define INSTR_CREATE_vpmovzxbq(1164,57238
#define INSTR_CREATE_vpmovzxdw(1166,57336
#define INSTR_CREATE_vpmovzxwq(1168,57434
#define INSTR_CREATE_vpmovzxdq(1170,57532
#define INSTR_CREATE_vphminposuw(1172,57630
#define INSTR_CREATE_vaesimc(1174,57732
#define INSTR_CREATE_vmovss(1176,57826
#define INSTR_CREATE_vmovsd(1178,57918
#define INSTR_CREATE_vcvtph2ps(1180,58010
#define INSTR_CREATE_vbroadcastss(1182,58108
#define INSTR_CREATE_vbroadcastsd(1184,58212
#define INSTR_CREATE_vbroadcastf128(1186,58316
#define INSTR_CREATE_movq2dq(1188,58424
#define INSTR_CREATE_movdq2q(1190,58518
#define INSTR_CREATE_inc(1203,59125
#define INSTR_CREATE_dec(1205,59208
#define INSTR_CREATE_bswap(1208,59334
#define INSTR_CREATE_not(1210,59421
#define INSTR_CREATE_neg(1212,59504
#define INSTR_CREATE_cdq(1224,60013
#define INSTR_CREATE_daa(1227,60147
#define INSTR_CREATE_das(1230,60279
#define INSTR_CREATE_aaa(1233,60411
#define INSTR_CREATE_aas(1236,60543
#define INSTR_CREATE_cwde(1239,60675
#define INSTR_CREATE_xlat(1242,60810
#define INSTR_CREATE_in_1(1254,61367
#define INSTR_CREATE_in_4(1257,61499
#define INSTR_CREATE_in_1_imm(1270,62151
#define INSTR_CREATE_in_4_imm(1272,62261
#define INSTR_CREATE_fcmovcc(1286,62878
#define INSTR_CREATE_fst(1299,63635
#define INSTR_CREATE_fstp(1301,63742
#define INSTR_CREATE_fld(1313,64361
#define INSTR_CREATE_fist(1324,65038
#define INSTR_CREATE_fistp(1326,65147
#define INSTR_CREATE_fisttp(1328,65258
#define INSTR_CREATE_fbstp(1330,65371
#define INSTR_CREATE_fild(1342,66055
#define INSTR_CREATE_fbld(1344,66164
#define INSTR_CREATE_fchs(1354,66664
#define INSTR_CREATE_fabs(1357,66800
#define INSTR_CREATE_ftst(1360,66936
#define INSTR_CREATE_fld1(1363,67074
#define INSTR_CREATE_fldl2t(1367,67299
#define INSTR_CREATE_fldl2e(1370,67461
#define INSTR_CREATE_fldpi(1373,67614
#define INSTR_CREATE_fldlg2(1376,67759
#define INSTR_CREATE_fldln2(1379,67921
#define INSTR_CREATE_fldz(1382,68069
#define INSTR_CREATE_f2xm1(1385,68207
#define INSTR_CREATE_fptan(1388,68345
#define INSTR_CREATE_fxtract(1391,68483
#define INSTR_CREATE_fsqrt(1394,68625
#define INSTR_CREATE_fsincos(1397,68763
#define INSTR_CREATE_frndint(1400,68905
#define INSTR_CREATE_fsin(1403,69047
#define INSTR_CREATE_fcos(1406,69183
#define INSTR_CREATE_fscale(1410,69320
#define INSTR_CREATE_fyl2x(1414,69495
#define INSTR_CREATE_fyl2xp1(1418,69697
#define INSTR_CREATE_fpatan(1422,69903
#define INSTR_CREATE_fprem(1426,70107
#define INSTR_CREATE_fprem1(1430,70309
#define INSTR_CREATE_pshufw(1448,71218
#define INSTR_CREATE_pshufd(1450,71318
#define INSTR_CREATE_pshufhw(1452,71418
#define INSTR_CREATE_pshuflw(1454,71520
#define INSTR_CREATE_pinsrw(1456,71622
#define INSTR_CREATE_pextrw(1458,71722
#define INSTR_CREATE_pextrb(1461,71833
#define INSTR_CREATE_pextrd(1463,71933
#define INSTR_CREATE_extractps(1465,72033
#define INSTR_CREATE_roundps(1467,72139
#define INSTR_CREATE_roundpd(1469,72241
#define INSTR_CREATE_roundss(1471,72343
#define INSTR_CREATE_roundsd(1473,72445
#define INSTR_CREATE_pinsrb(1475,72547
#define INSTR_CREATE_insertps(1477,72647
#define INSTR_CREATE_pinsrd(1479,72751
#define INSTR_CREATE_aeskeygenassist(1481,72851
#define INSTR_CREATE_vmovlps_NDS(1497,73709
#define INSTR_CREATE_vmovlpd_NDS(1499,73819
#define INSTR_CREATE_vunpcklps(1501,73929
#define INSTR_CREATE_vunpcklpd(1503,74039
#define INSTR_CREATE_vunpckhps(1505,74149
#define INSTR_CREATE_vunpckhpd(1507,74259
#define INSTR_CREATE_vmovhps_NDS(1509,74369
#define INSTR_CREATE_vmovhpd_NDS(1511,74479
#define INSTR_CREATE_vcvtsi2ss(1513,74589
#define INSTR_CREATE_vcvtsi2sd(1515,74699
#define INSTR_CREATE_vsqrtss(1517,74809
#define INSTR_CREATE_vsqrtsd(1519,74915
#define INSTR_CREATE_vrsqrtss(1521,75021
#define INSTR_CREATE_vrcpss(1523,75129
#define INSTR_CREATE_vandps(1525,75233
#define INSTR_CREATE_vandpd(1527,75337
#define INSTR_CREATE_vandnps(1529,75441
#define INSTR_CREATE_vandnpd(1531,75547
#define INSTR_CREATE_vorps(1533,75653
#define INSTR_CREATE_vorpd(1535,75755
#define INSTR_CREATE_vxorps(1537,75857
#define INSTR_CREATE_vxorpd(1539,75961
#define INSTR_CREATE_vaddps(1541,76065
#define INSTR_CREATE_vaddss(1543,76169
#define INSTR_CREATE_vaddpd(1545,76273
#define INSTR_CREATE_vaddsd(1547,76377
#define INSTR_CREATE_vmulps(1549,76481
#define INSTR_CREATE_vmulss(1551,76585
#define INSTR_CREATE_vmulpd(1553,76689
#define INSTR_CREATE_vmulsd(1555,76793
#define INSTR_CREATE_vcvtss2sd(1557,76897
#define INSTR_CREATE_vcvtsd2ss(1559,77007
#define INSTR_CREATE_vsubps(1561,77117
#define INSTR_CREATE_vsubss(1563,77221
#define INSTR_CREATE_vsubpd(1565,77325
#define INSTR_CREATE_vsubsd(1567,77429
#define INSTR_CREATE_vminps(1569,77533
#define INSTR_CREATE_vminss(1571,77637
#define INSTR_CREATE_vminpd(1573,77741
#define INSTR_CREATE_vminsd(1575,77845
#define INSTR_CREATE_vdivps(1577,77949
#define INSTR_CREATE_vdivss(1579,78053
#define INSTR_CREATE_vdivpd(1581,78157
#define INSTR_CREATE_vdivsd(1583,78261
#define INSTR_CREATE_vmaxps(1585,78365
#define INSTR_CREATE_vmaxss(1587,78469
#define INSTR_CREATE_vmaxpd(1589,78573
#define INSTR_CREATE_vmaxsd(1591,78677
#define INSTR_CREATE_vpunpcklbw(1593,78781
#define INSTR_CREATE_vpunpcklwd(1595,78893
#define INSTR_CREATE_vpunpckldq(1597,79005
#define INSTR_CREATE_vpacksswb(1599,79117
#define INSTR_CREATE_vpcmpgtb(1601,79227
#define INSTR_CREATE_vpcmpgtw(1603,79335
#define INSTR_CREATE_vpcmpgtd(1605,79443
#define INSTR_CREATE_vpackuswb(1607,79551
#define INSTR_CREATE_vpunpckhbw(1609,79661
#define INSTR_CREATE_vpunpckhwd(1611,79773
#define INSTR_CREATE_vpunpckhdq(1613,79885
#define INSTR_CREATE_vpackssdw(1615,79997
#define INSTR_CREATE_vpunpcklqdq(1617,80107
#define INSTR_CREATE_vpunpckhqdq(1619,80221
#define INSTR_CREATE_vpshufhw(1621,80335
#define INSTR_CREATE_vpshufd(1623,80443
#define INSTR_CREATE_vpshuflw(1625,80549
#define INSTR_CREATE_vpcmpeqb(1627,80657
#define INSTR_CREATE_vpcmpeqw(1629,80765
#define INSTR_CREATE_vpcmpeqd(1631,80873
#define INSTR_CREATE_vpextrw(1633,80981
#define INSTR_CREATE_vpsrlw(1635,81087
#define INSTR_CREATE_vpsrld(1637,81191
#define INSTR_CREATE_vpsrlq(1639,81295
#define INSTR_CREATE_vpaddq(1641,81399
#define INSTR_CREATE_vpmullw(1643,81503
#define INSTR_CREATE_vpsubusb(1645,81609
#define INSTR_CREATE_vpsubusw(1647,81717
#define INSTR_CREATE_vpminub(1649,81825
#define INSTR_CREATE_vpand(1651,81931
#define INSTR_CREATE_vpaddusb(1653,82033
#define INSTR_CREATE_vpaddusw(1655,82141
#define INSTR_CREATE_vpmaxub(1657,82249
#define INSTR_CREATE_vpandn(1659,82355
#define INSTR_CREATE_vpavgb(1661,82459
#define INSTR_CREATE_vpsraw(1663,82563
#define INSTR_CREATE_vpsrad(1665,82667
#define INSTR_CREATE_vpavgw(1667,82771
#define INSTR_CREATE_vpmulhuw(1669,82875
#define INSTR_CREATE_vpmulhw(1671,82983
#define INSTR_CREATE_vpsubsb(1673,83089
#define INSTR_CREATE_vpsubsw(1675,83195
#define INSTR_CREATE_vpminsw(1677,83301
#define INSTR_CREATE_vpor(1679,83407
#define INSTR_CREATE_vpaddsb(1681,83507
#define INSTR_CREATE_vpaddsw(1683,83613
#define INSTR_CREATE_vpmaxsw(1685,83719
#define INSTR_CREATE_vpxor(1687,83825
#define INSTR_CREATE_vpsllw(1689,83927
#define INSTR_CREATE_vpslld(1691,84031
#define INSTR_CREATE_vpsllq(1693,84135
#define INSTR_CREATE_vpmuludq(1695,84239
#define INSTR_CREATE_vpmaddwd(1697,84347
#define INSTR_CREATE_vpsadbw(1699,84455
#define INSTR_CREATE_vpsubb(1701,84561
#define INSTR_CREATE_vpsubw(1703,84665
#define INSTR_CREATE_vpsubd(1705,84769
#define INSTR_CREATE_vpsubq(1707,84873
#define INSTR_CREATE_vpaddb(1709,84977
#define INSTR_CREATE_vpaddw(1711,85081
#define INSTR_CREATE_vpaddd(1713,85185
#define INSTR_CREATE_vpsrldq(1715,85289
#define INSTR_CREATE_vpslldq(1717,85395
#define INSTR_CREATE_vhaddpd(1719,85501
#define INSTR_CREATE_vhaddps(1721,85607
#define INSTR_CREATE_vhsubpd(1723,85713
#define INSTR_CREATE_vhsubps(1725,85819
#define INSTR_CREATE_vaddsubpd(1727,85925
#define INSTR_CREATE_vaddsubps(1729,86035
#define INSTR_CREATE_vphaddw(1731,86145
#define INSTR_CREATE_vphaddd(1733,86251
#define INSTR_CREATE_vphaddsw(1735,86357
#define INSTR_CREATE_vpmaddubsw(1737,86465
#define INSTR_CREATE_vphsubw(1739,86577
#define INSTR_CREATE_vphsubd(1741,86683
#define INSTR_CREATE_vphsubsw(1743,86789
#define INSTR_CREATE_vpsignb(1745,86897
#define INSTR_CREATE_vpsignw(1747,87003
#define INSTR_CREATE_vpsignd(1749,87109
#define INSTR_CREATE_vpmulhrsw(1751,87215
#define INSTR_CREATE_vpabsb(1753,87325
#define INSTR_CREATE_vpabsw(1755,87429
#define INSTR_CREATE_vpabsd(1757,87533
#define INSTR_CREATE_vpmuldq(1759,87637
#define INSTR_CREATE_vpcmpeqq(1761,87743
#define INSTR_CREATE_vpackusdw(1763,87851
#define INSTR_CREATE_vpcmpgtq(1765,87961
#define INSTR_CREATE_vpminsb(1767,88069
#define INSTR_CREATE_vpminsd(1769,88175
#define INSTR_CREATE_vpminuw(1771,88281
#define INSTR_CREATE_vpminud(1773,88387
#define INSTR_CREATE_vpmaxsb(1775,88493
#define INSTR_CREATE_vpmaxsd(1777,88599
#define INSTR_CREATE_vpmaxuw(1779,88705
#define INSTR_CREATE_vpmaxud(1781,88811
#define INSTR_CREATE_vpmulld(1783,88917
#define INSTR_CREATE_vaesenc(1785,89023
#define INSTR_CREATE_vaesenclast(1787,89129
#define INSTR_CREATE_vaesdec(1789,89243
#define INSTR_CREATE_vaesdeclast(1791,89349
#define INSTR_CREATE_vpextrb(1793,89463
#define INSTR_CREATE_vpextrd(1795,89569
#define INSTR_CREATE_vextractps(1797,89675
#define INSTR_CREATE_vroundps(1799,89787
#define INSTR_CREATE_vroundpd(1801,89895
#define INSTR_CREATE_vaeskeygenassist(1803,90003
#define INSTR_CREATE_vmovss_NDS(1805,90127
#define INSTR_CREATE_vmovsd_NDS(1807,90235
#define INSTR_CREATE_vcvtps2ph(1809,90343
#define INSTR_CREATE_vmaskmovps(1811,90453
#define INSTR_CREATE_vmaskmovpd(1813,90565
#define INSTR_CREATE_vpermilps(1815,90677
#define INSTR_CREATE_vpermilpd(1817,90787
#define INSTR_CREATE_vextractf128(1819,90897
#define INSTR_CREATE_add(1833,91626
#define INSTR_CREATE_or(1835,91717
#define INSTR_CREATE_adc(1837,91807
#define INSTR_CREATE_sbb(1839,91898
#define INSTR_CREATE_and(1841,91989
#define INSTR_CREATE_sub(1843,92080
#define INSTR_CREATE_xor(1845,92171
#define INSTR_CREATE_punpcklbw(1847,92262
#define INSTR_CREATE_punpcklwd(1849,92365
#define INSTR_CREATE_punpckldq(1851,92468
#define INSTR_CREATE_packsswb(1853,92571
#define INSTR_CREATE_pcmpgtb(1855,92672
#define INSTR_CREATE_pcmpgtw(1857,92771
#define INSTR_CREATE_pcmpgtd(1859,92870
#define INSTR_CREATE_packuswb(1861,92969
#define INSTR_CREATE_punpckhbw(1863,93070
#define INSTR_CREATE_punpckhwd(1865,93173
#define INSTR_CREATE_punpckhdq(1867,93276
#define INSTR_CREATE_packssdw(1869,93379
#define INSTR_CREATE_punpcklqdq(1871,93480
#define INSTR_CREATE_punpckhqdq(1873,93585
#define INSTR_CREATE_pcmpeqb(1875,93690
#define INSTR_CREATE_pcmpeqw(1877,93789
#define INSTR_CREATE_pcmpeqd(1879,93888
#define INSTR_CREATE_psrlw(1881,93987
#define INSTR_CREATE_psrld(1883,94082
#define INSTR_CREATE_psrlq(1885,94177
#define INSTR_CREATE_paddq(1887,94272
#define INSTR_CREATE_pmullw(1889,94367
#define INSTR_CREATE_psubusb(1891,94464
#define INSTR_CREATE_psubusw(1893,94563
#define INSTR_CREATE_pminub(1895,94662
#define INSTR_CREATE_pand(1897,94759
#define INSTR_CREATE_paddusb(1899,94852
#define INSTR_CREATE_paddusw(1901,94951
#define INSTR_CREATE_pmaxub(1903,95050
#define INSTR_CREATE_pandn(1905,95147
#define INSTR_CREATE_pavgb(1907,95242
#define INSTR_CREATE_psraw(1909,95337
#define INSTR_CREATE_psrad(1911,95432
#define INSTR_CREATE_pavgw(1913,95527
#define INSTR_CREATE_pmulhuw(1915,95622
#define INSTR_CREATE_pmulhw(1917,95721
#define INSTR_CREATE_psubsb(1919,95818
#define INSTR_CREATE_psubsw(1921,95915
#define INSTR_CREATE_pminsw(1923,96012
#define INSTR_CREATE_por(1925,96109
#define INSTR_CREATE_paddsb(1927,96200
#define INSTR_CREATE_paddsw(1929,96297
#define INSTR_CREATE_pmaxsw(1931,96394
#define INSTR_CREATE_pxor(1933,96491
#define INSTR_CREATE_psllw(1935,96584
#define INSTR_CREATE_pslld(1937,96679
#define INSTR_CREATE_psllq(1939,96774
#define INSTR_CREATE_pmuludq(1941,96869
#define INSTR_CREATE_pmaddwd(1943,96968
#define INSTR_CREATE_psadbw(1945,97067
#define INSTR_CREATE_psubb(1947,97164
#define INSTR_CREATE_psubw(1949,97259
#define INSTR_CREATE_psubd(1951,97354
#define INSTR_CREATE_psubq(1953,97449
#define INSTR_CREATE_paddb(1955,97544
#define INSTR_CREATE_paddw(1957,97639
#define INSTR_CREATE_paddd(1959,97734
#define INSTR_CREATE_psrldq(1961,97829
#define INSTR_CREATE_pslldq(1963,97926
#define INSTR_CREATE_unpcklps(1965,98023
#define INSTR_CREATE_unpcklpd(1967,98124
#define INSTR_CREATE_unpckhps(1969,98225
#define INSTR_CREATE_unpckhpd(1971,98326
#define INSTR_CREATE_andps(1973,98427
#define INSTR_CREATE_andpd(1975,98522
#define INSTR_CREATE_andnps(1977,98617
#define INSTR_CREATE_andnpd(1979,98714
#define INSTR_CREATE_orps(1981,98811
#define INSTR_CREATE_orpd(1983,98904
#define INSTR_CREATE_xorps(1985,98997
#define INSTR_CREATE_xorpd(1987,99092
#define INSTR_CREATE_addps(1989,99187
#define INSTR_CREATE_addss(1991,99282
#define INSTR_CREATE_addpd(1993,99377
#define INSTR_CREATE_addsd(1995,99472
#define INSTR_CREATE_mulps(1997,99567
#define INSTR_CREATE_mulss(1999,99662
#define INSTR_CREATE_mulpd(2001,99757
#define INSTR_CREATE_mulsd(2003,99852
#define INSTR_CREATE_subps(2005,99947
#define INSTR_CREATE_subss(2007,100042
#define INSTR_CREATE_subpd(2009,100137
#define INSTR_CREATE_subsd(2011,100232
#define INSTR_CREATE_minps(2013,100327
#define INSTR_CREATE_minss(2015,100422
#define INSTR_CREATE_minpd(2017,100517
#define INSTR_CREATE_minsd(2019,100612
#define INSTR_CREATE_divps(2021,100707
#define INSTR_CREATE_divss(2023,100802
#define INSTR_CREATE_divpd(2025,100897
#define INSTR_CREATE_divsd(2027,100992
#define INSTR_CREATE_maxps(2029,101087
#define INSTR_CREATE_maxss(2031,101182
#define INSTR_CREATE_maxpd(2033,101277
#define INSTR_CREATE_maxsd(2035,101372
#define INSTR_CREATE_haddpd(2038,101478
#define INSTR_CREATE_haddps(2040,101575
#define INSTR_CREATE_hsubpd(2042,101672
#define INSTR_CREATE_hsubps(2044,101769
#define INSTR_CREATE_addsubpd(2046,101866
#define INSTR_CREATE_addsubps(2048,101967
#define INSTR_CREATE_pavgusb(2051,102081
#define INSTR_CREATE_pfadd(2053,102180
#define INSTR_CREATE_pfacc(2055,102275
#define INSTR_CREATE_pfcmpge(2057,102370
#define INSTR_CREATE_pfcmpgt(2059,102469
#define INSTR_CREATE_pfcmpeq(2061,102568
#define INSTR_CREATE_pfmin(2063,102667
#define INSTR_CREATE_pfmax(2065,102762
#define INSTR_CREATE_pfmul(2067,102857
#define INSTR_CREATE_pfrcp(2069,102952
#define INSTR_CREATE_pfrcpit1(2071,103047
#define INSTR_CREATE_pfrcpit2(2073,103148
#define INSTR_CREATE_pfrsqrt(2075,103249
#define INSTR_CREATE_pfrsqit1(2077,103348
#define INSTR_CREATE_pmulhrw(2079,103449
#define INSTR_CREATE_pfsub(2081,103548
#define INSTR_CREATE_pfsubr(2083,103643
#define INSTR_CREATE_pi2fd(2085,103740
#define INSTR_CREATE_pf2id(2087,103835
#define INSTR_CREATE_pi2fw(2089,103930
#define INSTR_CREATE_pf2iw(2091,104025
#define INSTR_CREATE_pfnacc(2093,104120
#define INSTR_CREATE_pfpnacc(2095,104217
#define INSTR_CREATE_pswapd(2097,104316
#define INSTR_CREATE_phaddw(2100,104425
#define INSTR_CREATE_phaddd(2102,104522
#define INSTR_CREATE_phaddsw(2104,104619
#define INSTR_CREATE_pmaddubsw(2106,104718
#define INSTR_CREATE_phsubw(2108,104821
#define INSTR_CREATE_phsubd(2110,104918
#define INSTR_CREATE_phsubsw(2112,105015
#define INSTR_CREATE_psignb(2114,105114
#define INSTR_CREATE_psignw(2116,105211
#define INSTR_CREATE_psignd(2118,105308
#define INSTR_CREATE_pmulhrsw(2120,105405
#define INSTR_CREATE_pabsb(2122,105506
#define INSTR_CREATE_pabsw(2124,105601
#define INSTR_CREATE_pabsd(2126,105696
#define INSTR_CREATE_crc32(2129,105802
#define INSTR_CREATE_packusdw(2131,105897
#define INSTR_CREATE_pcmpeqq(2133,105998
#define INSTR_CREATE_pcmpgtq(2135,106097
#define INSTR_CREATE_pminsb(2137,106196
#define INSTR_CREATE_pminsd(2139,106293
#define INSTR_CREATE_pminuw(2141,106390
#define INSTR_CREATE_pminud(2143,106487
#define INSTR_CREATE_pmaxsb(2145,106584
#define INSTR_CREATE_pmaxsd(2147,106681
#define INSTR_CREATE_pmaxuw(2149,106778
#define INSTR_CREATE_pmaxud(2151,106875
#define INSTR_CREATE_pmuldq(2153,106972
#define INSTR_CREATE_pmulld(2155,107069
#define INSTR_CREATE_aesenc(2157,107166
#define INSTR_CREATE_aesenclast(2159,107263
#define INSTR_CREATE_aesdec(2161,107368
#define INSTR_CREATE_aesdeclast(2163,107465
#define INSTR_CREATE_bts(2177,108233
#define INSTR_CREATE_btr(2179,108326
#define INSTR_CREATE_btc(2181,108419
#define INSTR_CREATE_cmovcc(2194,108983
#define INSTR_CREATE_imul_imm(2208,109720
#define INSTR_CREATE_imul(2217,110195
#define INSTR_CREATE_imul_1(2229,110900
#define INSTR_CREATE_imul_4(2232,111044
#define INSTR_CREATE_mul_1(2235,111219
#define INSTR_CREATE_mul_4(2238,111361
#define INSTR_CREATE_div_1(2241,111534
#define INSTR_CREATE_div_4(2244,111704
#define INSTR_CREATE_idiv_1(2248,111912
#define INSTR_CREATE_idiv_4(2251,112084
#define INSTR_CREATE_rol(2272,113252
#define INSTR_CREATE_ror(2274,113345
#define INSTR_CREATE_rcl(2276,113438
#define INSTR_CREATE_rcr(2278,113531
#define INSTR_CREATE_shl(2280,113624
#define INSTR_CREATE_shr(2282,113717
#define INSTR_CREATE_sar(2284,113810
#define INSTR_CREATE_maskmovq(2297,114447
#define INSTR_CREATE_maskmovdqu(2301,114642
#define INSTR_CREATE_vmaskmovdqu(2305,114844
#define INSTR_CREATE_fadd(2326,115979
#define INSTR_CREATE_fmul(2328,116072
#define INSTR_CREATE_fdiv(2330,116165
#define INSTR_CREATE_fdivr(2332,116258
#define INSTR_CREATE_fsub(2334,116353
#define INSTR_CREATE_fsubr(2336,116446
#define INSTR_CREATE_faddp(2349,117127
#define INSTR_CREATE_fmulp(2351,117243
#define INSTR_CREATE_fdivp(2353,117359
#define INSTR_CREATE_fdivrp(2355,117475
#define INSTR_CREATE_fsubp(2357,117593
#define INSTR_CREATE_fsubrp(2359,117709
#define INSTR_CREATE_fiadd(2371,118430
#define INSTR_CREATE_fimul(2374,118576
#define INSTR_CREATE_fidiv(2377,118722
#define INSTR_CREATE_fidivr(2380,118868
#define INSTR_CREATE_fisub(2383,119016
#define INSTR_CREATE_fisubr(2386,119162
#define INSTR_CREATE_ficom(2389,119310
#define INSTR_CREATE_ficomp(2392,119456
#define INSTR_CREATE_extrq(2405,120067
#define INSTR_CREATE_extrq_imm(2419,120868
#define INSTR_CREATE_insertq(2429,121403
#define INSTR_CREATE_insertq_imm(2445,122336
#define INSTR_CREATE_xsave32(2458,123026
#define INSTR_CREATE_xsave64(2461,123176
#define INSTR_CREATE_xsaveopt32(2464,123326
#define INSTR_CREATE_xsaveopt64(2467,123482
#define INSTR_CREATE_aam(2482,124261
#define INSTR_CREATE_aad(2485,124401
#define INSTR_CREATE_loopne(2498,125069
#define INSTR_CREATE_loope(2501,125217
#define INSTR_CREATE_loop(2504,125363
#define INSTR_CREATE_popf(2517,125935
#define INSTR_CREATE_ret(2521,126143
#define INSTR_CREATE_ret_far(2527,126443
#define INSTR_CREATE_iret(2533,126771
#define INSTR_CREATE_vpblendvb(2552,127743
#define INSTR_CREATE_vblendvps(2554,127863
#define INSTR_CREATE_vblendvpd(2556,127983
#define INSTR_CREATE_vcmpps(2573,128893
#define INSTR_CREATE_vcmpss(2575,129005
#define INSTR_CREATE_vcmppd(2577,129117
#define INSTR_CREATE_vcmpsd(2579,129229
#define INSTR_CREATE_vpinsrw(2581,129341
#define INSTR_CREATE_vshufps(2583,129455
#define INSTR_CREATE_vshufpd(2585,129569
#define INSTR_CREATE_vpalignr(2587,129683
#define INSTR_CREATE_vblendps(2589,129799
#define INSTR_CREATE_vblendpd(2591,129915
#define INSTR_CREATE_vpblendw(2593,130031
#define INSTR_CREATE_vpinsrb(2595,130147
#define INSTR_CREATE_vinsertps(2597,130261
#define INSTR_CREATE_vpinsrd(2599,130379
#define INSTR_CREATE_vdpps(2601,130493
#define INSTR_CREATE_vdppd(2603,130603
#define INSTR_CREATE_vmpsadbw(2605,130713
#define INSTR_CREATE_vpclmulqdq(2607,130829
#define INSTR_CREATE_vroundss(2609,130949
#define INSTR_CREATE_vroundsd(2611,131065
#define INSTR_CREATE_vperm2f128(2613,131181
#define INSTR_CREATE_vinsertf128(2615,131301
#define INSTR_CREATE_shld(2633,132244
#define INSTR_CREATE_shrd(2635,132347
#define INSTR_CREATE_pclmulqdq(2649,133144
#define INSTR_CREATE_blendps(2651,133255
#define INSTR_CREATE_blendpd(2653,133362
#define INSTR_CREATE_pblendw(2655,133469
#define INSTR_CREATE_shufps(2669,134286
#define INSTR_CREATE_shufpd(2671,134392
#define INSTR_CREATE_cmpps(2673,134497
#define INSTR_CREATE_cmpss(2675,134600
#define INSTR_CREATE_cmppd(2677,134703
#define INSTR_CREATE_cmpsd(2679,134806
#define INSTR_CREATE_palignr(2681,134909
#define INSTR_CREATE_dpps(2683,135016
#define INSTR_CREATE_dppd(2685,135117
#define INSTR_CREATE_mpsadbw(2687,135218
#define INSTR_CREATE_vfmadd132ps(2702,135995
#define INSTR_CREATE_vfmadd132pd(2704,136114
#define INSTR_CREATE_vfmadd213ps(2706,136233
#define INSTR_CREATE_vfmadd213pd(2708,136352
#define INSTR_CREATE_vfmadd231ps(2710,136471
#define INSTR_CREATE_vfmadd231pd(2712,136590
#define INSTR_CREATE_vfmadd132ss(2714,136709
#define INSTR_CREATE_vfmadd132sd(2716,136828
#define INSTR_CREATE_vfmadd213ss(2718,136947
#define INSTR_CREATE_vfmadd213sd(2720,137066
#define INSTR_CREATE_vfmadd231ss(2722,137185
#define INSTR_CREATE_vfmadd231sd(2724,137304
#define INSTR_CREATE_vfmaddsub132ps(2726,137423
#define INSTR_CREATE_vfmaddsub132pd(2728,137548
#define INSTR_CREATE_vfmaddsub213ps(2730,137673
#define INSTR_CREATE_vfmaddsub213pd(2732,137798
#define INSTR_CREATE_vfmaddsub231ps(2734,137923
#define INSTR_CREATE_vfmaddsub231pd(2736,138048
#define INSTR_CREATE_vfmsubadd132ps(2738,138173
#define INSTR_CREATE_vfmsubadd132pd(2740,138298
#define INSTR_CREATE_vfmsubadd213ps(2742,138423
#define INSTR_CREATE_vfmsubadd213pd(2744,138548
#define INSTR_CREATE_vfmsubadd231ps(2746,138673
#define INSTR_CREATE_vfmsubadd231pd(2748,138798
#define INSTR_CREATE_vfmsub132ps(2750,138923
#define INSTR_CREATE_vfmsub132pd(2752,139042
#define INSTR_CREATE_vfmsub213ps(2754,139161
#define INSTR_CREATE_vfmsub213pd(2756,139280
#define INSTR_CREATE_vfmsub231ps(2758,139399
#define INSTR_CREATE_vfmsub231pd(2760,139518
#define INSTR_CREATE_vfmsub132ss(2762,139637
#define INSTR_CREATE_vfmsub132sd(2764,139756
#define INSTR_CREATE_vfmsub213ss(2766,139875
#define INSTR_CREATE_vfmsub213sd(2768,139994
#define INSTR_CREATE_vfmsub231ss(2770,140113
#define INSTR_CREATE_vfmsub231sd(2772,140232
#define INSTR_CREATE_vfnmadd132ps(2774,140351
#define INSTR_CREATE_vfnmadd132pd(2776,140472
#define INSTR_CREATE_vfnmadd213ps(2778,140593
#define INSTR_CREATE_vfnmadd213pd(2780,140714
#define INSTR_CREATE_vfnmadd231ps(2782,140835
#define INSTR_CREATE_vfnmadd231pd(2784,140956
#define INSTR_CREATE_vfnmadd132ss(2786,141077
#define INSTR_CREATE_vfnmadd132sd(2788,141198
#define INSTR_CREATE_vfnmadd213ss(2790,141319
#define INSTR_CREATE_vfnmadd213sd(2792,141440
#define INSTR_CREATE_vfnmadd231ss(2794,141561
#define INSTR_CREATE_vfnmadd231sd(2796,141682
#define INSTR_CREATE_vfnmsub132ps(2798,141803
#define INSTR_CREATE_vfnmsub132pd(2800,141924
#define INSTR_CREATE_vfnmsub213ps(2802,142045
#define INSTR_CREATE_vfnmsub213pd(2804,142166
#define INSTR_CREATE_vfnmsub231ps(2806,142287
#define INSTR_CREATE_vfnmsub231pd(2808,142408
#define INSTR_CREATE_vfnmsub132ss(2810,142529
#define INSTR_CREATE_vfnmsub132sd(2812,142650
#define INSTR_CREATE_vfnmsub213ss(2814,142771
#define INSTR_CREATE_vfnmsub213sd(2816,142892
#define INSTR_CREATE_vfnmsub231ss(2818,143013
#define INSTR_CREATE_vfnmsub231sd(2820,143134
#define INSTR_CREATE_pblendvb(2834,143822
#define INSTR_CREATE_blendvps(2836,143953
#define INSTR_CREATE_blendvpd(2838,144084
#define INSTR_CREATE_pcmpistrm(2854,144947
#define INSTR_CREATE_pcmpistri(2856,145087
#define INSTR_CREATE_vpcmpistrm(2858,145226
#define INSTR_CREATE_vpcmpistri(2861,145374
#define INSTR_CREATE_ret_imm(2878,146253
#define INSTR_CREATE_ret_far_imm(2884,146565
#define INSTR_CREATE_pcmpestrm(2902,147564
#define INSTR_CREATE_pcmpestri(2905,147768
#define INSTR_CREATE_vpcmpestrm(2909,147981
#define INSTR_CREATE_vpcmpestri(2912,148187
#define INSTR_CREATE_rdtsc(2923,148670
#define INSTR_CREATE_lds(2937,149364
#define INSTR_CREATE_lss(2939,149478
#define INSTR_CREATE_les(2941,149592
#define INSTR_CREATE_lfs(2943,149706
#define INSTR_CREATE_lgs(2945,149820
#define INSTR_CREATE_pushf(2957,150362
#define INSTR_CREATE_rdmsr(2961,150589
#define INSTR_CREATE_rdpmc(2964,150756
#define INSTR_CREATE_xgetbv(2967,150923
#define INSTR_CREATE_pop(2979,151477
#define INSTR_CREATE_xchg(2994,152276
#define INSTR_CREATE_xadd(2996,152374
#define INSTR_CREATE_ins_1(3010,153001
#define INSTR_CREATE_ins_4(3014,153248
#define INSTR_CREATE_stos_1(3019,153515
#define INSTR_CREATE_stos_4(3023,153764
#define INSTR_CREATE_lods_1(3028,154034
#define INSTR_CREATE_lods_4(3033,154289
#define INSTR_CREATE_movs_1(3039,154566
#define INSTR_CREATE_movs_4(3045,154934
#define INSTR_CREATE_rep_ins_1(3053,155342
#define INSTR_CREATE_rep_ins_4(3058,155661
#define INSTR_CREATE_rep_stos_1(3064,156000
#define INSTR_CREATE_rep_stos_4(3069,156321
#define INSTR_CREATE_rep_lods_1(3075,156663
#define INSTR_CREATE_rep_lods_4(3081,156990
#define INSTR_CREATE_rep_movs_1(3088,157338
#define INSTR_CREATE_rep_movs_4(3095,157778
#define INSTR_CREATE_outs_1(3104,158258
#define INSTR_CREATE_outs_4(3108,158507
#define INSTR_CREATE_cmps_1(3113,158776
#define INSTR_CREATE_cmps_4(3119,159144
#define INSTR_CREATE_scas_1(3127,159552
#define INSTR_CREATE_scas_4(3131,159801
#define INSTR_CREATE_rep_outs_1(3136,160071
#define INSTR_CREATE_rep_outs_4(3141,160392
#define INSTR_CREATE_rep_cmps_1(3147,160733
#define INSTR_CREATE_rep_cmps_4(3154,161173
#define INSTR_CREATE_repne_cmps_1(3163,161653
#define INSTR_CREATE_repne_cmps_4(3170,162097
#define INSTR_CREATE_rep_scas_1(3179,162581
#define INSTR_CREATE_rep_scas_4(3184,162902
#define INSTR_CREATE_repne_scas_1(3190,163244
#define INSTR_CREATE_repne_scas_4(3195,163569
#define INSTR_CREATE_fxch(3211,164344
#define INSTR_CREATE_call(3223,164915
#define INSTR_CREATE_call_ind(3234,165517
#define INSTR_CREATE_call_far(3246,166207
#define INSTR_CREATE_call_far_ind(3258,166890
#define INSTR_CREATE_push(3268,167421
#define INSTR_CREATE_push_imm(3279,168031
#define INSTR_CREATE_cmpxchg_1(3296,169006
#define INSTR_CREATE_cmpxchg_4(3299,169169
#define INSTR_CREATE_leave(3305,169418
#define INSTR_CREATE_pusha(3319,170083
#define INSTR_CREATE_rdtscp(3322,170183
#define INSTR_CREATE_cpuid(3327,170393
#define INSTR_CREATE_cmpxchg8b(3340,171018
#define INSTR_CREATE_enter(3357,171947
#define INSTR_CREATE_popa(3369,172513
#define INSTR_CREATE_nop1byte(3384,173235
#define INSTR_CREATE_nop2byte(3385,173290
#define INSTR_CREATE_nop3byte(3386,173366
INSTR_CREATE_nop2byte_reg(3401,174162
INSTR_CREATE_nop3byte_reg(3433,175419
#define INSTR_CREATE_nopNbyte(3462,176500
#define INSTR_CREATE_RAW_pushf(3465,176634
#define INSTR_CREATE_RAW_popf(3466,176702
#define INSTR_CREATE_RAW_pusha(3467,176770
#define INSTR_CREATE_RAW_popa(3468,176838
#define INSTR_CREATE_RAW_nop(3469,176906
#define INSTR_CREATE_RAW_nop1byte(3470,176974
# define INSTR_CREATE_RAW_nop2byte(3472,177048
# define INSTR_CREATE_RAW_nop3byte(3473,177127
# define INSTR_CREATE_RAW_nop2byte(3475,177218
# define INSTR_CREATE_RAW_nop3byte(3476,177297
#define INSTR_CREATE_RAW_nopNbyte(3478,177389

x86/instr_inline.h,2309
#define _INSTR_INLINE_H_ 34,1706
# define MAKE_OPNDS_VALID(42,1845
#define CLIENT_ASSERT_(48,2089
#define MAKE_OPNDS_VALID(56,2428
#define CLIENT_ASSERT(60,2608
#define IF_DEBUG(61,2641
#define IF_DEBUG_(62,2664
#define OPND_IS_NULL(73,2982
#define OPND_IS_IMMED_INT(74,3039
#define OPND_IS_IMMED_FLOAT(75,3105
#define OPND_IS_NEAR_PC(76,3169
#define OPND_IS_NEAR_INSTR(77,3224
#define OPND_IS_REG(78,3282
#define OPND_IS_BASE_DISP(79,3338
#define OPND_IS_FAR_PC(80,3400
#define OPND_IS_FAR_INSTR(81,3459
#define OPND_IS_MEM_INSTR(82,3521
#define OPND_IS_VALID(83,3583
#define opnd_is_null 85,3640
#define opnd_is_immed_int 86,3685
#define opnd_is_immed_float 87,3735
#define opnd_is_near_pc 88,3787
#define opnd_is_near_instr 89,3835
#define opnd_is_reg 90,3886
#define opnd_is_base_disp 91,3930
#define opnd_is_far_pc 92,3980
#define opnd_is_far_instr 93,4027
#define opnd_is_mem_instr 94,4077
#define opnd_is_valid 95,4127
opnd_is_immed(100,4218
opnd_is_pc(107,4339
opnd_is_instr(113,4441
opnd_is_near_base_disp(120,4552
opnd_is_far_base_disp(127,4680
# define OPND_IS_REL_ADDR(134,4801
# define opnd_is_rel_addr 135,4862
opnd_is_near_rel_addr(139,4930
opnd_is_far_rel_addr(146,5062
opnd_create_null(160,5439
opnd_create_reg(169,5548
opnd_create_pc(181,5864
#define OPND_GET_REG(191,6002
#define opnd_get_reg 194,6134
#define GET_BASE_DISP(196,6169
#define OPND_GET_BASE(201,6343
#define OPND_GET_DISP(202,6403
#define OPND_GET_INDEX(203,6459
#define OPND_GET_SCALE(204,6520
#define opnd_get_base 206,6578
#define opnd_get_disp 207,6614
#define opnd_get_index 208,6650
#define opnd_get_scale 209,6688
#define OPND_GET_SEGMENT(211,6727
#define opnd_get_segment 217,7013
instr_ok_to_mangle(223,7099
instr_operands_valid(233,7374
instr_raw_bits_valid(240,7487
instr_has_allocated_bits(247,7600
instr_needs_encoding(254,7721
instr_ok_to_emit(261,7835
instr_num_srcs(270,8018
instr_num_dsts(278,8128
#define INSTR_GET_SRC(286,8293
#define INSTR_GET_DST(292,8636
#define INSTR_GET_TARGET(301,9033
#define instr_get_src 309,9498
#define instr_get_dst 310,9534
#define instr_get_target 311,9570
instr_set_note(315,9631
instr_get_note(322,9725
instr_get_next(329,9807
instr_get_prev(336,9889
instr_set_next(343,9967
instr_set_prev(350,10060

x86/instrument.c,14978
# undef ASSERT_TRUNCATE73,2957
# undef ASSERT_BITFIELD_TRUNCATE74,2981
# undef ASSERT_NOT_REACHED75,3014
# define ASSERT_TRUNCATE 76,3041
# define ASSERT_BITFIELD_TRUNCATE 77,3110
# define ASSERT_NOT_REACHED 78,3188
#define INSTRUMENT_INIT_NAME 85,3434
#define USES_DR_VERSION_NAME 92,3618
#define NEWEST_COMPATIBLE_VERSION 103,4136
DR_API const char *unique_build_number unique_build_number110,4447
typedef void (*callback_t)callback_t120,4904
typedef struct _callback_list_t 121,4938
    callback_t *callbacks;callbacks122,4972
    size_t num;123,5038
    size_t size;124,5107
} callback_list_t;125,5186
#define FAST_COPY_SIZE 145,6105
#define call_all_ret(146,6130
#define call_all(183,8834
static callback_list_t exit_callbacks 195,9411
static callback_list_t thread_init_callbacks 196,9457
static callback_list_t thread_exit_callbacks 197,9510
static callback_list_t fork_init_callbacks 199,9575
static callback_list_t bb_callbacks 201,9633
static callback_list_t trace_callbacks 202,9677
static callback_list_t end_trace_callbacks 204,9745
static callback_list_t fragdel_callbacks 206,9803
static callback_list_t restore_state_callbacks 207,9852
static callback_list_t restore_state_ex_callbacks 208,9907
static callback_list_t module_load_callbacks 209,9965
static callback_list_t module_unload_callbacks 210,10018
static callback_list_t filter_syscall_callbacks 211,10073
static callback_list_t pre_syscall_callbacks 212,10129
static callback_list_t post_syscall_callbacks 213,10182
static callback_list_t exception_callbacks 215,10251
static callback_list_t signal_callbacks 217,10308
static callback_list_t security_violation_callbacks 220,10390
static callback_list_t persist_ro_size_callbacks 222,10457
static callback_list_t persist_ro_callbacks 223,10514
static callback_list_t resurrect_ro_callbacks 224,10566
static callback_list_t persist_rx_size_callbacks 225,10620
static callback_list_t persist_rx_callbacks 226,10677
static callback_list_t resurrect_rx_callbacks 227,10729
static callback_list_t persist_rw_size_callbacks 228,10783
static callback_list_t persist_rw_callbacks 229,10840
static callback_list_t resurrect_rw_callbacks 230,10892
static callback_list_t persist_patch_callbacks 231,10946
typedef struct _client_lib_t 237,11163
    client_id_t id;238,11194
    char path[path239,11214
    shlib_handle_t lib;241,11306
    app_pc start;242,11330
    app_pc end;243,11348
    char options[options244,11364
    callback_list_t nudge_callbacks;249,11573
} client_lib_t;250,11610
static client_lib_t client_libs[client_libs255,11770
static size_t num_client_libs 256,11829
static void *persist_user_data[persist_user_data258,11865
static bool print_to_console;262,11983
static shlib_handle_t priv_kernel32;263,12013
typedef BOOL (WINAPI *kernel32_WriteFile_t)kernel32_WriteFile_t264,12050
static kernel32_WriteFile_t kernel32_WriteFile;266,12147
static bool block_client_nudge_threads 271,12247
static bool client_requested_exit;272,12295
static vm_area_vector_t *client_aux_libs;client_aux_libs285,12793
add_callback(296,13097
remove_callback(349,14767
add_client_lib(394,15930
instrument_load_client_libs(493,19693
init_client_aux_libs(536,20860
instrument_init(545,21065
free_callback_list(609,23700
void free_all_callback_lists(620,23984
instrument_exit(663,25494
is_in_client_lib(698,26577
get_client_bounds(718,27129
get_client_path_from_addr(731,27477
is_valid_client_id(745,27749
dr_register_exit_event(757,27946
dr_unregister_exit_event(763,28062
dr_register_bb_event(769,28190
dr_unregister_bb_event(782,28570
dr_register_trace_event(790,28826
dr_unregister_trace_event(803,29208
dr_register_end_trace_event(812,29484
dr_unregister_end_trace_event(824,29844
dr_register_delete_event(832,30077
dr_unregister_delete_event(843,30364
dr_register_restore_state_event(849,30519
dr_unregister_restore_state_event(862,30964
dr_register_restore_state_ex_event(870,31274
dr_unregister_restore_state_ex_event(882,31678
dr_register_thread_init_event(889,31946
dr_unregister_thread_init_event(895,32087
dr_register_thread_exit_event(901,32240
dr_unregister_thread_exit_event(907,32381
dr_register_fork_init_event(914,32546
dr_unregister_fork_init_event(920,32683
dr_register_module_load_event(927,32843
dr_unregister_module_load_event(934,33067
dr_register_module_unload_event(941,33305
dr_unregister_module_unload_event(948,33522
dr_register_exception_event(956,33768
dr_unregister_exception_event(962,33928
dr_register_signal_event(968,34105
dr_unregister_signal_event(975,34299
dr_register_filter_syscall_event(983,34528
dr_unregister_filter_syscall_event(989,34687
dr_register_pre_syscall_event(995,34858
dr_unregister_pre_syscall_event(1001,35011
dr_register_post_syscall_event(1007,35176
dr_unregister_post_syscall_event(1013,35331
dr_register_security_event(1020,35525
dr_unregister_security_event(1030,36000
dr_register_nudge_event(1041,36502
dr_unregister_nudge_event(1059,37121
dr_nudge_client_ex(1077,37806
dr_nudge_client(1103,38685
dr_is_nudge_thread(1111,38860
instrument_client_thread_init(1120,39090
instrument_thread_init(1146,40084
instrument_fork_init(1189,41576
instrument_thread_exit_event(1199,41817
instrument_thread_exit(1219,42526
dr_bb_hook_exists(1260,43766
dr_trace_hook_exists(1266,43835
dr_fragment_deleted_hook_exists(1272,43910
dr_end_trace_hook_exists(1278,43998
dr_thread_exit_hook_exists(1284,44081
dr_exit_hook_exists(1290,44168
dr_xl8_hook_exists(1296,44241
hide_tag_from_client(1303,44372
check_ilist_translations(1345,46345
instrument_basic_block(1388,48389
instrument_trace(1450,50619
instrument_fragment_deleted(1518,52978
instrument_restore_state(1543,53672
instrument_end_trace(1578,55196
create_and_initialize_module_data(1597,55712
copy_module_area_to_module_data(1650,57849
dr_copy_module_data(1680,59186
dr_free_module_data(1703,60079
instrument_module_load_trigger(1729,60969
instrument_module_load(1754,61850
instrument_module_unload(1777,62652
instrument_filter_syscall(1796,63155
instrument_pre_syscall(1810,63633
instrument_post_syscall(1831,64437
instrument_invoke_another_syscall(1842,64764
instrument_exception(1850,64973
instrument_signal(1865,65556
dr_signal_hook_exists(1880,66182
instrument_security_violation(1889,66363
instrument_nudge(2012,71059
get_num_client_threads(2088,74038
wait_for_outstanding_nudges(2100,74276
dr_standalone_init(2146,75883
dr_abort(2155,76038
dr_exit_process(2164,76210
dr_using_all_private_caches(2197,77465
dr_request_synchronized_exit(2204,77556
dr_set_process_exit_behavior(2212,77763
dr_get_options(2235,78630
dr_get_client_path(2251,78993
dr_get_client_base(2266,79284
dr_get_application_name(2280,79581
dr_get_process_id(2290,79755
dr_get_parent_id(2298,79861
dr_convert_handle_to_pid(2307,79959
dr_get_os_version(2319,80228
dr_is_wow64(2348,81497
dr_get_app_PEB(2355,81583
dr_get_time(2364,81687
dr_get_milliseconds(2371,81790
dr_get_random_value(2378,81865
dr_set_random_seed(2385,81954
dr_get_random_seed(2392,82028
dr_thread_alloc(2411,82541
dr_thread_free(2422,82842
dr_global_alloc(2435,83272
dr_global_free(2445,83484
dr_nonheap_alloc(2453,83657
dr_nonheap_free(2460,83784
raw_mem_alloc(2466,83899
raw_mem_free(2527,86289
dr_raw_mem_alloc(2563,87550
dr_raw_mem_free(2570,87681
custom_memory_shared(2576,87795
dr_custom_alloc(2672,92387
dr_custom_free(2680,92594
__wrap_malloc(2695,93077
__wrap_realloc(2707,93427
__wrap_calloc(2719,93793
__wrap_free(2730,94099
dr_memory_protect(2738,94170
dr_memory_is_readable(2775,95809
dr_query_memory(2783,96015
dr_query_memory_ex(2813,97054
dr_safe_read(2834,97728
dr_safe_write(2842,97971
dr_try_setup(2849,98131
dr_try_stop(2878,99327
dr_memory_is_dr_internal(2891,99840
dr_memory_is_in_client(2898,99940
instrument_client_lib_loaded(2904,100030
instrument_client_lib_unloaded(2919,100639
dr_load_aux_library(2932,100940
dr_lookup_aux_library_routine(2961,102010
dr_unload_aux_library(2970,102187
dr_load_aux_x64_library(3011,103553
dr_lookup_aux_x64_library_routine(3037,104490
dr_unload_aux_x64_library(3045,104717
dr_mutex_create(3063,105108
dr_mutex_destroy(3075,105390
dr_mutex_lock(3086,105658
dr_mutex_unlock(3107,106345
dr_mutex_trylock(3125,106919
dr_mutex_self_owns(3149,107726
dr_mutex_mark_as_app(3156,107836
dr_rwlock_create(3165,107974
dr_rwlock_destroy(3175,108270
dr_rwlock_read_lock(3184,108509
dr_rwlock_read_unlock(3191,108604
dr_rwlock_write_lock(3198,108703
dr_rwlock_write_unlock(3205,108800
dr_rwlock_write_trylock(3212,108901
dr_rwlock_self_owns_write_lock(3219,109011
dr_rwlock_mark_as_app(3226,109135
dr_recurlock_create(3235,109303
dr_recurlock_destroy(3245,109604
dr_recurlock_lock(3254,109846
dr_recurlock_unlock(3261,109953
dr_recurlock_trylock(3268,110062
dr_recurlock_self_owns(3275,110175
dr_recurlock_mark_as_app(3282,110296
dr_mark_safe_to_suspend(3291,110465
dr_atomic_add32_return_sum(3307,110910
dr_lookup_module(3320,111270
dr_get_main_module(3333,111560
dr_lookup_module_by_name(3342,111824
typedef struct _client_mod_iterator_list_t 3363,112679
    module_data_t *info;info3364,112724
    struct _client_mod_iterator_list_t *next;next3365,112749
} client_mod_iterator_list_t;3366,112795
    client_mod_iterator_list_t *current;current3369,112843
    client_mod_iterator_list_t *full_list;full_list3370,112884
} client_mod_iterator_t;3371,112927
dr_module_iterator_start(3376,113030
dr_module_iterator_hasnext(3409,114332
dr_module_iterator_next(3418,114628
dr_module_iterator_stop(3435,115166
dr_module_preferred_name(3459,115996
dr_lookup_module_section(3474,116363
dr_module_set_should_instrument(3489,116993
dr_module_should_instrument(3517,117999
dr_get_proc_address(3541,118766
dr_get_proc_address_ex(3552,118966
dr_create_dir(3572,119598
dr_directory_exists(3580,119744
dr_file_exists(3588,119882
dr_open_file(3598,120074
dr_close_file(3631,121075
dr_rename_file(3640,121226
dr_delete_file(3648,121374
dr_flush_file(3660,121609
dr_write_file(3670,121750
dr_read_file(3680,121945
dr_file_seek(3689,122165
dr_file_tell(3699,122495
dr_dup_file_handle(3706,122560
dr_file_size(3724,122967
dr_map_file(3731,123077
dr_unmap_file(3744,123578
dr_log(3766,124236
dr_get_logfile(3791,124856
dr_is_notify_on(3809,125252
dr_get_stdout_file(3816,125355
dr_get_stderr_file(3822,125431
dr_get_stdin_file(3828,125507
dr_write_forensics_report(3837,125614
dr_messagebox(3894,127521
dr_write_to_console(3915,128258
dr_using_console(3944,129267
dr_enable_console_printing(3957,129653
dr_printf(3998,131274
dr_fprintf(4012,131530
dr_snprintf(4026,131819
dr_vsnprintf(4042,132282
dr_snwprintf(4048,132408
dr_vsnwprintf(4059,132621
dr_sscanf(4065,132759
dr_get_token(4076,132954
dr_print_instr(4091,133449
dr_print_opnd(4103,133941
dr_get_current_drcontext(4121,134542
dr_get_thread_id(4129,134765
dr_get_dr_thread_handle(4141,135144
dr_get_tls_field(4152,135501
dr_set_tls_field(4162,135845
dr_get_dr_segment_base(4172,136204
dr_raw_tls_calloc(4179,136295
dr_raw_tls_cfree(4194,136777
dr_thread_yield(4202,136932
dr_sleep(4216,137392
dr_client_thread_set_suspendable(4230,137828
dr_suspend_all_other_threads_ex(4244,138219
dr_suspend_all_other_threads(4342,143218
dr_resume_all_other_threads(4351,143525
dr_is_thread_native(4381,144704
dr_retakeover_suspended_native_thread(4390,144930
dr_set_itimer(4407,145442
dr_get_itimer(4419,145887
instrlist_meta_preinsert(4432,146247
instrlist_meta_postinsert(4441,146503
instrlist_meta_append(4450,146758
instrlist_meta_fault_preinsert(4458,146909
instrlist_meta_fault_postinsert(4466,147095
instrlist_meta_fault_append(4474,147283
convert_va_list_to_opnd(4481,147440
dr_insert_call(4495,147917
dr_insert_call_ex(4519,148843
prepare_for_call_ex(4550,150077
cleanup_after_call_ex(4571,150769
dr_insert_clean_call_ex_varg(4610,152335
dr_insert_clean_call_ex(4751,158456
dr_insert_clean_call(4764,158851
dr_prepare_for_call(4783,159685
dr_cleanup_after_call(4792,160051
dr_swap_to_clean_stack(4804,160535
dr_restore_app_stack(4838,162207
#define SPILL_SLOT_TLS_MAX 4856,163002
#define NUM_TLS_SPILL_SLOTS 4857,163031
#define NUM_SPILL_SLOTS 4858,163084
static const ushort SPILL_SLOT_TLS_OFFS[SPILL_SLOT_TLS_OFFS4863,163472
static const reg_id_t SPILL_SLOT_MC_REG[SPILL_SLOT_MC_REG4867,163715
dr_save_reg(4874,163965
dr_restore_reg(4919,165842
dr_max_opnd_accessible_spill_slot(4957,167469
reg_spill_slot_opnd(4968,167726
dr_reg_spill_slot_opnd(4983,168242
dr_read_saved_reg(4998,168907
dr_write_saved_reg(5026,170189
dr_insert_read_tls_field(5058,171633
dr_insert_write_tls_field(5091,173041
dr_save_arith_flags(5123,174538
dr_restore_arith_flags(5138,175117
dr_save_arith_flags_to_xax(5153,175719
dr_restore_arith_flags_from_xax(5171,176325
dr_insert_call_instrumentation(5199,177379
dr_insert_mbr_instrumentation(5247,179741
dr_insert_cbr_instrumentation(5347,184396
dr_insert_ubr_instrumentation(5543,193750
dr_clobber_retaddr_after_read(5556,194167
dr_mcontext_xmm_fields_valid(5582,195178
dr_get_mcontext_priv(5592,195413
dr_get_mcontext(5697,199753
dr_set_mcontext(5705,199953
dr_redirect_execution(5747,201555
dr_redirect_native_target(5777,202679
dr_delete_fragment(5817,204143
dr_replace_fragment(5879,206778
void dr_flush_fragments(5938,209289
dr_flush_region(5986,211067
dr_unlink_flush_region(6026,213097
dr_delay_flush_region(6073,215675
dr_fragment_exists_at(6107,216797
dr_bb_exists_at(6123,217161
dr_fragment_size(6140,217600
dr_fragment_app_pc(6168,218510
dr_app_pc_for_decoding(6192,219299
dr_app_pc_from_cache_pc(6204,219485
dr_using_app_state(6225,220196
dr_switch_to_app_state(6233,220343
dr_switch_to_app_state_ex(6240,220456
dr_switch_to_dr_state(6248,220647
dr_switch_to_dr_state_ex(6255,220758
dr_mark_trace_head(6293,222373
dr_trace_head_at(6374,225557
dr_trace_exists_at(6402,226320
dr_add_prefixes_to_basic_blocks(6432,227250
dr_insert_get_seg_base(6454,228006
instrument_persist_ro_size(6514,230527
instrument_persist_ro(6559,232410
instrument_resurrect_ro(6586,233262
instrument_persist_rx_size(6619,234187
instrument_persist_rx(6637,234839
instrument_resurrect_rx(6651,235299
instrument_persist_rw_size(6665,235701
instrument_persist_rw(6683,236353
instrument_resurrect_rw(6697,236813
instrument_persist_patch(6710,237180
dr_register_persist_ro(6725,237647
dr_unregister_persist_ro(6742,238468
dr_register_persist_rx(6770,239527
dr_unregister_persist_rx(6787,240348
dr_register_persist_rw(6815,241407
dr_unregister_persist_rw(6832,242228
dr_register_persist_patch(6860,243287
dr_unregister_persist_patch(6872,243666
instrlist_insert_mov_immed_ptrsz(6885,244180
instrlist_insert_push_immed_ptrsz(6900,244799
instrlist_insert_mov_instr_addr(6910,245145
instrlist_insert_push_instr_addr(6928,245888

x86/instrument.h,9239
#define _INSTRUMENT_H_ 43,1995
#define CURRENT_API_VERSION 56,2373
    DR_EMIT_DEFAULT 109,3923
    DR_EMIT_STORE_TRANSLATIONS 121,4462
    DR_EMIT_STORE_TRANSLATIONS   = 0x01,x01121,4462
    DR_EMIT_PERSISTABLE 131,4937
    DR_EMIT_PERSISTABLE          = 0x02,x02131,4937
    DR_EMIT_MUST_END_TRACE 141,5479
    DR_EMIT_MUST_END_TRACE       = 0x04,x04141,5479
    DR_EMIT_GO_NATIVE 153,6138
    DR_EMIT_GO_NATIVE           = 0x08,x08153,6138
} dr_emit_flags_t;154,6178
    CUSTOM_TRACE_DR_DECIDES,498,24030
    CUSTOM_TRACE_END_NOW,499,24059
    CUSTOM_TRACE_CONTINUE500,24085
} dr_custom_trace_action_t;501,24111
typedef struct _dr_fault_fragment_info_t 635,30057
    void *tag;tag641,30289
    byte *cache_start_pc;cache_start_pc649,30647
    bool is_trace;651,30743
    bool app_code_consistent;659,31128
} dr_fault_fragment_info_t;660,31162
typedef struct _dr_restore_state_info_t 668,31403
    dr_mcontext_t *mcontext;mcontext675,31710
    bool raw_mcontext_valid;677,31781
    dr_mcontext_t *raw_mcontext;raw_mcontext685,32144
    dr_fault_fragment_info_t fragment_info;690,32304
} dr_restore_state_info_t;691,32348
    DR_EXIT_MULTI_THREAD 807,37156
    DR_EXIT_MULTI_THREAD           = 0x01,x01807,37156
    DR_EXIT_SKIP_THREAD_EXIT 816,37634
    DR_EXIT_SKIP_THREAD_EXIT        = 0x02,x02816,37634
} dr_exit_flags_t;817,37678
typedef struct _dr_exception_t 914,41140
    dr_mcontext_t *mcontext;mcontext919,41316
    EXCEPTION_RECORD *record;record920,41345
    dr_mcontext_t *raw_mcontext;raw_mcontext929,41770
    dr_fault_fragment_info_t fault_fragment_info;934,41929
} dr_exception_t;935,41979
typedef struct _dr_siginfo_t 1124,49935
    int sig;1126,49996
    void *drcontext;drcontext1128,50068
    dr_mcontext_t *mcontext;mcontext1134,50266
    dr_mcontext_t *raw_mcontext;raw_mcontext1143,50680
    bool raw_mcontext_valid;1145,50755
    byte *access_address;access_address1150,50917
    bool blocked;1157,51224
    dr_fault_fragment_info_t fault_fragment_info;1162,51371
} dr_siginfo_t;1163,51421
    DR_SIGNAL_DELIVER,1171,51618
    DR_SIGNAL_SUPPRESS,1173,51697
    DR_SIGNAL_BYPASS,1178,51858
    DR_SIGNAL_REDIRECT,1183,52025
} dr_signal_action_t;1184,52049
    DR_RCO_STACK_VIOLATION,1304,57713
    DR_RCO_HEAP_VIOLATION,1305,57741
    DR_RCT_RETURN_VIOLATION,1306,57768
    DR_RCT_INDIRECT_CALL_VIOLATION,1307,57797
    DR_RCT_INDIRECT_JUMP_VIOLATION,1308,57833
    DR_UNKNOWN_VIOLATION,1309,57869
} dr_security_violation_type_t;1310,57895
    DR_VIOLATION_ACTION_CONTINUE,1341,59903
    DR_VIOLATION_ACTION_CONTINUE_CHANGED_CONTEXT,1342,59937
    DR_VIOLATION_ACTION_KILL_PROCESS,1343,59987
    DR_VIOLATION_ACTION_KILL_THREAD,1344,60025
    DR_VIOLATION_ACTION_THROW_EXCEPTION,1345,60062
} dr_security_violation_action_t;1346,60103
#define GLOBAL_DCONTEXT 1575,69691
# define DR_ASSERT_MSG(1587,69968
# define DR_ASSERT_MSG(1592,70149
#define DR_ASSERT(1603,70466
    DR_WINDOWS_VERSION_8 1693,73044
    DR_WINDOWS_VERSION_7 1694,73079
    DR_WINDOWS_VERSION_VISTA 1695,73114
    DR_WINDOWS_VERSION_2003 1696,73149
    DR_WINDOWS_VERSION_XP 1697,73226
    DR_WINDOWS_VERSION_2000 1698,73261
    DR_WINDOWS_VERSION_NT 1699,73296
} dr_os_version_t;1700,73331
typedef struct _dr_os_version_info_t 1703,73403
    size_t size;1705,73524
    dr_os_version_t version;1707,73581
    uint service_pack_major;1709,73651
    uint service_pack_minor;1711,73721
} dr_os_version_info_t;1712,73750
    DR_ALLOC_NON_HEAP 1830,76881
    DR_ALLOC_NON_HEAP             = 0x0001,x00011830,76881
    DR_ALLOC_THREAD_PRIVATE 1839,77301
    DR_ALLOC_THREAD_PRIVATE       = 0x0002,x00021839,77301
    DR_ALLOC_CACHE_REACHABLE 1851,77912
    DR_ALLOC_CACHE_REACHABLE      = 0x0004,x00041851,77912
    DR_ALLOC_FIXED_LOCATION 1860,78341
    DR_ALLOC_FIXED_LOCATION       = 0x0008,x00081860,78341
    DR_ALLOC_LOW_2GB 1869,78769
    DR_ALLOC_LOW_2GB              = 0x0010,x00101869,78769
    DR_ALLOC_NON_DR 1879,79267
    DR_ALLOC_NON_DR               = 0x0020,x00201879,79267
    DR_ALLOC_RESERVE_ONLY 1888,79677
    DR_ALLOC_RESERVE_ONLY         = 0x0040,x00401888,79677
    DR_ALLOC_COMMIT_ONLY 1901,80412
    DR_ALLOC_COMMIT_ONLY          = 0x0080,x00801901,80412
} dr_alloc_flags_t;1903,80463
#define DR_TRY_EXCEPT(2229,91378
typedef void * dr_module_iterator_t;2606,102920
typedef struct _module_segment_data_t 2617,103379
    app_pc start;2618,103419
    app_pc end;2619,103498
    uint prot;2620,103574
} module_segment_data_t;2621,103637
struct _module_data_t 2633,104222
        app_pc start;2635,104258
        module_handle_t handle;2636,104320
    app_pc end;2643,104726
    app_pc entry_point;2645,104743
    uint flags;2647,104832
    module_names_t names;2649,104876
    char *full_path;full_path2653,105085
    version_number_t file_version;2656,105172
    version_number_t product_version;2657,105254
    uint checksum;2658,105342
    uint timestamp;2659,105405
    size_t module_internal_size;2660,105470
    bool contiguous;2662,105568
    uint num_segments;2663,105642
    module_segment_data_t *segments;segments2668,105829
typedef struct _dr_module_import_iterator_t dr_module_import_iterator_t;2782,109483
typedef struct _dr_module_import_desc_t dr_module_import_desc_t;2788,109673
typedef struct _dr_module_import_t 2800,110159
    const char *modname;modname2804,110269
    dr_module_import_desc_t *module_import_desc;module_import_desc2810,110441
} dr_module_import_t;2811,110490
typedef struct _dr_symbol_import_iterator_t dr_symbol_import_iterator_t;2860,111868
typedef struct _dr_symbol_import_t 2869,112223
    const char *name;name2870,112260
    const char *modname;modname2871,112335
    bool delay_load;2872,112412
    bool by_ordinal;2873,112492
    ptr_uint_t ordinal;2874,112575
} dr_symbol_import_t;2880,112830
typedef struct _dr_export_info_t 2991,116515
    generic_func_t address;2997,116744
    bool is_indirect_code;3006,117148
} dr_export_info_t;3007,117175
#define DR_FILE_READ 3138,121315
#define DR_FILE_WRITE_REQUIRE_NEW 3140,121429
#define DR_FILE_WRITE_APPEND 3145,121581
#define DR_FILE_WRITE_OVERWRITE 3150,121721
#define DR_FILE_ALLOW_LARGE 3155,121918
#define DR_FILE_CLOSE_ON_FORK 3157,122026
#define DR_SEEK_SET 3241,124702
#define DR_SEEK_CUR 3242,124747
#define DR_SEEK_END 3243,124800
    DR_MAP_PRIVATE 3292,126040
    DR_MAP_PRIVATE             = 0x0001,x00013292,126040
    DR_MAP_FIXED 3300,126388
    DR_MAP_FIXED               = 0x0002,x00023300,126388
    DR_MAP_IMAGE 3307,126601
    DR_MAP_IMAGE               = 0x0004,x00043307,126601
    DR_MAP_CACHE_REACHABLE 3314,126897
    DR_MAP_CACHE_REACHABLE     = 0x0008,x00083314,126897
#define LOG_NONE 3385,129260
#define LOG_STATS 3386,129350
#define LOG_TOP 3387,129440
#define LOG_THREADS 3388,129530
#define LOG_SYSCALLS 3389,129620
#define LOG_ASYNCH 3390,129710
#define LOG_INTERP 3391,129800
#define LOG_EMIT 3392,129890
#define LOG_LINKS 3393,129980
#define LOG_CACHE 3394,130070
#define LOG_FRAGMENT 3395,130160
#define LOG_DISPATCH 3396,130250
#define LOG_MONITOR 3397,130340
#define LOG_HEAP 3398,130430
#define LOG_VMAREAS 3399,130521
#define LOG_SYNCH 3400,130611
#define LOG_MEMSTATS 3401,130701
#define LOG_OPTS 3402,130791
#define LOG_SIDELINE 3403,130881
#define LOG_SYMBOLS 3404,130967
#define LOG_RCT 3405,131048
#define LOG_NT 3406,131136
#define LOG_HOT_PATCHING 3407,131224
#define LOG_HTABLE 3408,131306
#define LOG_MODULEDB 3409,131387
#define LOG_ALL 3410,131476
    DR_SUSPEND_NATIVE 3916,150911
    DR_SUSPEND_NATIVE = 0x0001,x00013916,150911
} dr_suspend_flags_t;3917,150943
    SPILL_SLOT_1 4101,158761
    SPILL_SLOT_2 4102,158839
    SPILL_SLOT_3 4103,158917
    SPILL_SLOT_4 4104,158995
    SPILL_SLOT_5 4105,159073
    SPILL_SLOT_6 4106,159151
    SPILL_SLOT_7 4107,159229
    SPILL_SLOT_8 4108,159307
    SPILL_SLOT_9 4109,159385
    SPILL_SLOT_10 4111,159474
    SPILL_SLOT_11 4113,159595
    SPILL_SLOT_12 4115,159716
    SPILL_SLOT_13 4117,159837
    SPILL_SLOT_14 4119,159958
    SPILL_SLOT_15 4121,160079
    SPILL_SLOT_16 4123,160200
    SPILL_SLOT_17 4125,160321
    SPILL_SLOT_MAX 4127,160442
    SPILL_SLOT_MAX = SPILL_SLOT_17 4127,160442
    SPILL_SLOT_MAX 4130,160586
    SPILL_SLOT_MAX = SPILL_SLOT_9 4130,160586
} dr_spill_slot_t;4133,160729
#define MINSERT 4296,166905
    DR_CLEANCALL_SAVE_FLOAT 4426,172124
    DR_CLEANCALL_SAVE_FLOAT             = 0x0001,x00014426,172124
    DR_CLEANCALL_NOSAVE_FLAGS 4433,172453
    DR_CLEANCALL_NOSAVE_FLAGS           = 0x0002,x00024433,172453
    DR_CLEANCALL_NOSAVE_XMM 4435,172552
    DR_CLEANCALL_NOSAVE_XMM             = 0x0004,x00044435,172552
    DR_CLEANCALL_NOSAVE_XMM_NONPARAM 4437,172685
    DR_CLEANCALL_NOSAVE_XMM_NONPARAM    = 0x0008,x00084437,172685
    DR_CLEANCALL_NOSAVE_XMM_NONRET 4439,172821
    DR_CLEANCALL_NOSAVE_XMM_NONRET      = 0x0010,x00104439,172821
    DR_CLEANCALL_INDIRECT 4444,173038
    DR_CLEANCALL_INDIRECT               = 0x0020,x00204444,173038
} dr_cleancall_save_t;4445,173088
#define SPILL_SLOT_REDIRECT_NATIVE_TGT 4823,189116

x86/loadtoconst.c,1756
fragment_t *frags_waiting_LTC[frags_waiting_LTC60,2286
int num_frags_waiting_LTC;61,2345
int safe_taken,66,2480
int safe_taken,opt_taken,66,2480
int safe_taken,opt_taken,addrs_analyzed,66,2480
int safe_taken,opt_taken,addrs_analyzed,addrs_made_const,66,2480
int safe_taken,opt_taken,addrs_analyzed,addrs_made_const,traces_analyzed,66,2480
int safe_taken,opt_taken,addrs_analyzed,addrs_made_const,traces_analyzed,addrs_seen;66,2480
#define NUM_TMP_OPNDS 69,2573
static opnd_t tmpOpnds[tmpOpnds70,2599
analyze_memrefs(73,2644
check_mem_refs(273,10114
LTC_online_optimize_and_replace(388,14390
get_mem_address(442,16545
get_mem_val(479,17448
LTC_examine_traces(508,18282
LTC_fragment_delete(548,19558
remove_mem_ref_check(573,20258
pop_instr_off_list(625,22386
ltc_trace(634,22625
do_single_LTC(779,28192
*fix_cmp_containing_constant(fix_cmp_containing_constant842,30925
safe_to_transpose_cmp(947,35112
safe_to_delete_cmp(952,35245
instr_flag_write_necessary(959,35418
safe_to_modify_cmp(994,36592
pc_reads_flags_before_writes(1092,40668
becomes_ubr_from_cmp(1116,41353
change_cbr_due_to_reversed_cmp(1140,41997
should_replace_load(1168,42778
value_to_replace(1189,43387
should_replace_load(1198,43651
value_to_replace(1239,45111
save_eflags_list(1273,46102
restore_eflags_list(1302,47156
constant_propagate(1332,48139
instr_replace_reg_with_const_in_src(1478,54895
instr_replace_reg_with_const_in_dst(1536,57277
opnd_replace_reg_with_val(1562,58127
replace_self_loop_with_opnd(1639,60424
instr_arithmatic_simplify(1680,61794
instr_replace_inplace(1871,69364
instrlist_remove_nops(1887,69749
instrlist_depends_on_reg(1920,70701
instr_add_to_exitexec_list(1943,71181
instrlist_setup_pseudo_exitstubs(1955,71547

x86/loadtoconst.h,547
#define __LOADTOCONST_H_38,1851
#define NUM_VALUES_FOR_SPECULATION 40,1877
#define SAMPLE_PERCENT 41,1915
#define MAX_TRACES_WAITING_FOR_LTC 44,1947
struct ltc_mem_ref_data{ltc_mem_ref_data47,2005
    opnd_t opnd;48,2030
    int vals[vals49,2047
    int addresses[addresses50,2089
struct ltc_data{ltc_data52,2139
    struct ltc_mem_ref_data *mem_refs;mem_refs53,2156
    int num_mem_addresses;54,2195
    int num_mem_samples;55,2222
    bool ltc_already_optimized;56,2247
#define TRANSPOSE 95,4140
#define NO_TRANSPOSE 96,4163

x86/mangle.c,5714
#define POST 72,2768
#define PRE 73,2807
    SLOT_NONE 82,3054
    SLOT_REG,83,3073
    SLOT_LOCAL,84,3087
    SLOT_FLAGS,85,3103
typedef byte slot_kind_t;87,3122
typedef struct _slot_t 94,3312
    slot_kind_t kind;95,3337
    byte value;96,3359
} slot_t;97,3375
typedef struct _callee_info_t 100,3441
    bool bailout;101,3473
    uint num_args;102,3545
    int num_instrs;103,3616
    app_pc start;104,3695
    app_pc bwd_tgt;105,3758
    app_pc fwd_tgt;106,3826
    int num_xmms_used;107,3889
    bool xmm_used[xmm_used108,3955
    bool reg_used[reg_used109,4019
    int num_callee_save_regs;110,4091
    bool callee_save_regs[callee_save_regs111,4155
    bool has_locals;112,4223
    bool xbp_is_fp;113,4288
    bool opt_inline;114,4356
    bool write_aflags;115,4414
    bool read_aflags;116,4481
    bool tls_used;117,4558
    reg_id_t spill_reg;118,4633
    uint slots_used;119,4699
    slot_t scratch_slots[scratch_slots120,4771
    instrlist_t *ilist;ilist121,4856
} callee_info_t;122,4933
static callee_info_t     default_callee_info;123,4950
static clean_call_info_t default_clean_call_info;124,4996
static generic_table_t  *callee_info_table;callee_info_table128,5120
static bool callee_info_table_exit 130,5241
#define INIT_HTABLE_SIZE_CALLEE 131,5285
callee_info_init(134,5358
callee_info_free(158,6112
callee_info_create(170,6446
callee_info_reserve_slot(183,6756
callee_info_slot_opnd(200,7385
callee_info_table_init(220,8168
callee_info_table_destroy(232,8598
callee_info_table_lookup(239,8755
callee_info_table_add(254,9244
clean_call_info_init(279,10139
convert_to_near_rel_common(301,10931
convert_to_near_rel_meta(440,16943
convert_to_near_rel(446,17099
remangle_short_rewrite(464,17854
get_clean_call_switch_stack_size(497,19116
get_clean_call_temp_stack_size(506,19287
insert_out_of_line_context_switch(512,19401
insert_clear_eflags(539,20508
insert_push_all_registers(571,21788
insert_pop_all_registers(684,27160
insert_get_mcontext_base(797,32157
clean_call_beyond_mcontext(814,32807
#define NUM_EXTRA_SLOTS 849,34275
prepare_for_clean_call(851,34323
cleanup_after_clean_call(960,38927
parameters_stack_padded(1026,41385
shrink_reg_for_param(1032,41501
insert_parameter_preparation(1075,43338
insert_meta_call_vargs(1392,59775
insert_clean_call_with_arg_jmp_if_ret_true(1431,61378
insert_reachable_cti(1479,63458
insert_mov_immed_common(1552,66479
insert_mov_immed_ptrsz(1621,69440
insert_mov_instr_addr(1630,69757
insert_push_immed_common(1646,70338
insert_push_immed_ptrsz(1695,72256
insert_push_instr_addr(1704,72561
stack_entry_size(1714,72965
insert_push_retaddr(1752,73953
insert_mov_ptr_uint_beyond_TOS(1789,75589
insert_push_cs(1833,77420
get_call_return_address(1859,78308
#define SAVE_TO_DC_OR_TLS(1916,80831
#define SAVE_TO_DC_OR_TLS_OR_REG(1922,81228
mangle_far_direct_helper(1928,81546
mangle_direct_call(1977,83917
mangle_seg_ref_opnd(2068,87621
mangle_far_indirect_helper(2123,89654
mangle_indirect_call(2198,92965
mangle_far_return_save_selector(2307,97488
mangle_return(2329,98413
mangle_indirect_jump(2530,107832
mangle_far_direct_jump(2595,110591
cti_is_normal_elision(2611,111106
find_syscall_num(2638,111893
mangle_insert_clone_code(2712,114878
mangle_syscall(2787,117902
mangle_clone_code(3012,128260
mangle_syscall_code(3069,130269
mangle_interrupt(3151,133353
#define FNSAVE_PC_OFFS 3177,134183
#define FXSAVE_PC_OFFS 3178,134210
#define FXSAVE_SIZE 3179,134237
float_pc_update(3182,134270
mangle_float_pc(3230,136279
#define CPUID_0_EAX 3374,142820
#define CPUID_0_EBX 3375,142852
#define CPUID_0_ECX 3376,142883
#define CPUID_0_EDX 3377,142914
#define CPUID_1_EAX 3380,143085
#define CPUID_1_EBX 3381,143116
#define CPUID_1_ECX 3382,143147
#define CPUID_1_EDX 3383,143178
mangle_cpuid(3386,143222
mangle_exit_cti_prefixes(3467,146038
mangle_rel_addr(3503,147414
instr_get_seg_ref_dst_idx(3645,154213
instr_get_seg_ref_src_idx(3663,154655
static ushort tls_slots[tls_slots3680,155086
mangle_mov_seg(3687,155296
mangle_seg_ref(3786,158882
mangle(3894,162938
#undef SAVE_TO_DC_OR_TLS4117,171868
# define SAVE_TO_DC_OR_TLS(4120,171985
# define RESTORE_FROM_DC_OR_TLS(4122,172096
# define SAVE_TO_DC_OR_TLS(4125,172223
# define RESTORE_FROM_DC_OR_TLS(4127,172338
sandbox_rep_instr(4132,172483
sandbox_write(4306,180021
sandbox_top_of_bb_check_s2ro(4506,188959
sandbox_top_of_bb(4516,189366
insert_selfmod_sandbox(4799,201040
static bool selfmod_s2ro[selfmod_s2ro4918,206728
static uint selfmod_eflags[selfmod_eflags4919,206774
#define SELFMOD_NUM_S2RO 4920,206857
#define SELFMOD_NUM_EFLAGS 4921,206931
static app_pc selfmod_gt4G[selfmod_gt4G4923,207065
# define SELFMOD_NUM_GT4G 4924,207151
set_selfmod_sandbox_offsets(4932,207435
finalize_selfmod_sandbox(4993,210005
#define MAX_NUM_FUNC_INSTRS 5017,211013
#define MAX_NUM_INLINE_INSTRS 5019,211115
mangle_init(5022,211154
mangle_exit(5037,211571
decode_callee_instr(5048,211772
check_callee_instr(5082,212844
check_callee_ilist(5214,218273
decode_callee_ilist(5259,219858
analyze_callee_regs_usage(5277,220355
analyze_callee_save_reg(5394,224879
analyze_callee_tls(5531,230789
analyze_callee_pick_spill_reg(5570,232196
analyze_callee_inline(5598,233208
analyze_callee_ilist(5830,242923
analyze_clean_call_aflags(5849,243562
analyze_clean_call_regs(5883,245030
analyze_clean_call_args(5955,248056
analyze_clean_call_inline(5981,248965
analyze_clean_call(6058,251642
insert_inline_reg_save(6105,253366
insert_inline_reg_restore(6153,255271
insert_inline_arg_setup(6192,256649
insert_inline_clean_call(6286,260340
analyze_clean_call(6340,262363

x86/optimize.c,5563
optimize_trace(131,5733
    uint loads_removed_from_loads;219,8105
    uint loads_removed_from_stores;220,8140
    uint ctis_in_load_removal;221,8176
    int reg_overwritten;222,8207
    int val_saved_in_dead_reg;223,8232
    uint loads_examined;224,8263
    int incs_examined;226,8307
    int incs_replaced;227,8330
    int loops_unrolled;229,8373
    int vals_spilled_to_xmm;231,8414
    int loads_replaced_by_xmm;232,8443
    int xmm_saves_to_mem;233,8474
    int stores_replaced_by_xmm;234,8500
    int xmm_restored_from_memory;235,8532
    int xmm_mov_to_dead_reg;236,8566
    int loadstore_combos_replaced_by_xmm;237,8595
    int xmm_traces;238,8637
    int mmx_traces;239,8657
    int num_instrs_simplified;241,8708
    int num_fail_simplified;242,8739
    int num_opnds_simplified;243,8768
    int num_const_add_const_mem;244,8798
    int num_jmps_simplified;245,8831
    int num_jecxz_instrs_removed;246,8860
    int dead_loads_removed;248,8922
    int xors_removed;250,8990
    int num_stack_adjust_removed;252,9049
    int pre_num_instrs_seen;254,9106
    int pre_num_jmps_seen;255,9135
    int post_num_instrs_seen;256,9162
    int post_num_jmps_seen;257,9192
    int num_returns_removed;259,9251
    int num_return_instrs_removed;260,9280
    bool i64_test;262,9335
    int ia64_num_entries;263,9354
} opt_stats_t;265,9387
print_optimization_stats(271,9562
generate_antialias_check(363,14121
#define MAX_INDUCTION_VARS 388,15186
#define MAX_LCDS 389,15215
#define MAX_INVARIANTS 390,15235
identify_for_loop(393,15274
unroll_loops(824,32491
static bool have_done 1074,41765
static bool checked 1075,41796
static int test1;1076,41825
static int test2;1077,41843
static int test3;1078,41861
test_i64(1081,41893
instr_counts(1219,47613
#define PS_VALID_VAL 1248,48565
#define PS_LVALID_VAL 1249,48597
#define PS_HVALID_VAL 1250,48674
#define PS_KEEP 1251,48706
#define NUM_CONSTANT_ADDRESS 1253,48739
#define NUM_STACK_SLOTS 1254,48772
static int cp_global_aggr;1257,48803
static int cp_local_aggr;1258,48830
typedef struct _prop_state_t 1261,48906
    dcontext_t *dcontext;dcontext1262,48937
    instrlist_t *trace;trace1263,48963
    instr_t *hint;hint1264,48987
    byte reg_state[reg_state1265,49006
    int reg_vals[reg_vals1266,49029
    int addresses[addresses1268,49077
    int address_vals[address_vals1269,49118
    byte address_state[address_state1270,49162
    int cur_scope;1273,49225
    int stack_offsets_ebp[stack_offsets_ebp1275,49245
    int stack_vals[stack_vals1276,49289
    int stack_scope[stack_scope1278,49327
    byte stack_address_state[stack_address_state1279,49365
    bool lost_scope_count;1281,49454
} prop_state_t;1282,49481
set_stack_val(1286,49513
update_stack_val(1316,50511
check_stack_val(1340,51253
clear_stack_val(1359,51767
set_address_val(1378,52377
update_address_val(1407,53367
clear_address_val(1430,54052
get_immutable_value(1450,54608
opnd_is_stack_address(1497,56011
const_address_const_mem(1507,56314
propagate_address(1542,57530
propagate_opnd(1606,59400
check_flag_val(1723,63806
compare_flag_vals(1737,64271
removable_jmp(1754,64814
do_forward_check_eflags(1835,67852
forward_check_eflags(1967,74233
make_imm_store(1973,74433
make_to_imm_store(1980,74677
make_to_nop(2018,76438
calculate_zf_pf_sf(2037,77065
prop_simplify(2060,77720
get_trace_constant(2470,96102
update_prop_state(2483,96824
typedef struct _two_entry_list_element_t 2628,104273
    int disp;2629,104316
    int scope;2630,104330
    struct _two_entry_list_element_t * next;2631,104345
} two_entry_list_element_t;2632,104390
typedef struct _start_list_element_t 2634,104419
    int endscope;2635,104458
    two_entry_list_element_t * next;2636,104476
} start_list_element_t;2637,104513
handle_stack(2645,104754
constant_propagation(2715,107856
remove_unnecessary_zeroing(2864,112981
#define NUM_ADD_CACHE 2922,115125
#define ADD_KEEP 2923,115151
#define ADD_DEAD 2924,115173
static int dc_global_aggr;2926,115196
static int dc_local_aggr;2927,115223
add_address(2930,115262
address_is_dead(2951,115851
address_set_dead(2961,116100
add_init(2980,116565
add_stack_address(2993,117295
stack_address_is_dead(3017,117984
stack_address_set_dead(3029,118306
remove_dead_code(3044,118715
is_stack_adjustment(3285,129770
get_stack_adjustment(3304,130545
set_stack_adjustment(3318,130931
stack_adjust_combiner(3337,131446
check_eflags_cr(3478,138342
remove_return_no_save_eflags(3497,138902
remove_return(3585,141842
is_return(3704,146183
check_return(3751,147774
#define CALL_RETURN_STACK_SIZE 3778,148686
call_return_matching(3783,148838
peephole_optimize(3848,151450
replace_inc_with_add(3894,153309
#define MAX_DIST 3981,156793
remove_redundant_loads(3983,156820
find_dead_register_across_instrs(4235,167924
find_dead_register_across_instrs_H(4255,168386
#define MIN_PREFETCH_DISTANCE 4302,169553
prefetch_optimize_trace(4305,169598
is_store_to_ecxoff(4404,173318
is_load_from_ecxoff(4413,173667
opnd_is_constant_address(4423,174080
is_zeroing_instr(4430,174285
is_dead_register(4440,174557
find_dead_register(4462,175160
is_dead_reg(4477,175565
replace_inst(4500,176204
remove_inst(4509,176440
instruction_affects_mem_access(4517,176669
safe_write(4533,177126
instr_get_src_mem_access(4550,177532
find_next_self_loop(4567,177861
replace_self_loop_with_instr(4586,178249
get_decision_instr(4618,179458
propagate_down(4637,179883
check_down(4654,180311
is_nop(4667,180865

x86/proc.c,1673
# undef ASSERT_TRUNCATE52,2373
# undef ASSERT_BITFIELD_TRUNCATE53,2397
# undef ASSERT_NOT_REACHED54,2430
# define ASSERT_TRUNCATE 55,2457
# define ASSERT_BITFIELD_TRUNCATE 56,2526
# define ASSERT_NOT_REACHED 57,2604
#define INTEL_EBX 61,2740
#define INTEL_EDX 62,2780
#define INTEL_ECX 63,2820
#define AMD_EBX 66,2915
#define AMD_EDX 67,2953
#define AMD_ECX 68,2991
size_t cache_line_size 75,3221
static ptr_uint_t mask;76,3250
static uint L1_icache_size 78,3328
static uint L1_dcache_size 79,3377
static uint L2_cache_size 80,3426
static uint vendor 82,3476
static uint family 83,3515
static uint type 84,3541
static uint model 85,3567
static uint stepping 86,3593
static features_t features 92,3755
static uint brand_string[brand_string98,3990
set_cache_size(101,4060
get_cache_sizes_amd(119,4743
get_cache_sizes_intel(144,5447
get_processor_specific_info(218,8509
proc_init(375,13724
proc_get_vendor(429,16117
proc_set_vendor(436,16174
proc_get_family(452,16571
uint proc_get_type(457,16617
uint proc_get_model(463,16710
uint proc_get_stepping(468,16759
proc_has_feature(474,16819
proc_get_all_feature_bits(497,17423
proc_get_brand_string(503,17489
proc_get_L1_icache_size(509,17568
proc_get_L1_dcache_size(515,17643
proc_get_L2_cache_size(521,17718
proc_get_cache_size_str(527,17791
proc_get_cache_line_size(546,18175
proc_is_cache_aligned(553,18288
proc_bump_to_end_of_cache_line(561,18498
proc_get_containing_page(571,18768
machine_cache_sync(579,18995
proc_fpstate_save_size(589,19192
proc_save_fpstate(615,20243
proc_restore_fpstate(649,21212
dr_insert_save_fpstate(679,22029
dr_insert_restore_fpstate(705,23285

x86/proc.h,3786
#define _PROC_H_ 43,2003
#define PAGE_SIZE 56,2371
#define PAGE_START(59,2502
    VENDOR_INTEL,63,2619
    VENDOR_AMD,64,2697
    VENDOR_UNKNOWN,65,2773
#define FAMILY_IA64 90,3952
#define FAMILY_LLANO 94,4086
#define FAMILY_ITANIUM_2_DC 95,4171
#define FAMILY_K8_MOBILE 96,4259
#define FAMILY_ITANIUM_2 97,4348
#define FAMILY_K8L 98,4433
#define FAMILY_K8 99,4516
#define FAMILY_PENTIUM_4 100,4598
#define FAMILY_P4 101,4683
#define FAMILY_ITANIUM 102,4768
#define FAMILY_P6 104,4928
#define FAMILY_IVYBRIDGE 105,5013
#define FAMILY_SANDYBRIDGE 106,5098
#define FAMILY_NEHALEM 107,5185
#define FAMILY_CORE_I7 108,5268
#define FAMILY_CORE_2 109,5351
#define FAMILY_CORE 110,5433
#define FAMILY_PENTIUM_M 111,5513
#define FAMILY_PENTIUM_3 112,5598
#define FAMILY_PENTIUM_2 113,5683
#define FAMILY_PENTIUM_PRO 114,5768
#define FAMILY_ATHLON 115,5855
#define FAMILY_K7 116,5937
#define FAMILY_P5 118,6039
#define FAMILY_PENTIUM 119,6124
#define FAMILY_K6 120,6207
#define FAMILY_K5 121,6285
#define FAMILY_486 123,6373
#define MODEL_IVYBRIDGE 128,6573
#define MODEL_I7_WESTMERE_EX 129,6642
#define MODEL_SANDYBRIDGE_E 130,6721
#define MODEL_I7_WESTMERE 131,6804
#define MODEL_SANDYBRIDGE 132,6872
#define MODEL_I7_CLARKDALE 133,6943
#define MODEL_I7_HAVENDALE 134,7031
#define MODEL_I7_CLARKSFIELD 135,7119
#define MODEL_ATOM_CEDARVIEW 136,7208
#define MODEL_ATOM_LINCROFT 137,7282
#define MODEL_ATOM 138,7355
#define MODEL_I7_GAINESTOWN 139,7419
#define MODEL_CORE_PENRYN 140,7497
#define MODEL_CORE_2 141,7570
#define MODEL_CORE 142,7649
#define MODEL_PENTIUM_M 143,7719
#define MODEL_PENTIUM_M_1MB 144,7795
    uint flags_edx;151,8002
    uint flags_ecx;152,8070
    uint ext_flags_edx;153,8138
    uint ext_flags_ecx;154,8215
} features_t;155,8292
    FEATURE_FPU 163,8514
    FEATURE_VME 164,8590
    FEATURE_DE 165,8661
    FEATURE_PSE 166,8729
    FEATURE_TSC 167,8797
    FEATURE_MSR 168,8864
    FEATURE_PAE 169,8937
    FEATURE_MCE 170,9012
    FEATURE_CX8 171,9084
    FEATURE_APIC 172,9163
    FEATURE_SEP 173,9243
    FEATURE_MTRR 174,9308
    FEATURE_PGE 175,9384
    FEATURE_MCA 176,9451
    FEATURE_CMOV 177,9526
    FEATURE_PAT 178,9603
    FEATURE_PSE_36 179,9672
    FEATURE_PSN 180,9747
    FEATURE_CLFSH 181,9832
    FEATURE_DS 182,9910
    FEATURE_ACPI 183,9970
    FEATURE_MMX 184,10050
    FEATURE_FXSR 185,10123
    FEATURE_SSE 186,10196
    FEATURE_SSE2 187,10269
    FEATURE_SS 188,10343
    FEATURE_HTT 189,10402
    FEATURE_TM 190,10477
    FEATURE_IA64 191,10551
    FEATURE_PBE 192,10617
    FEATURE_SSE3 194,10721
    FEATURE_PCLMULQDQ 195,10795
    FEATURE_MONITOR 196,10866
    FEATURE_DS_CPL 197,10951
    FEATURE_VMX 198,11025
    FEATURE_EST 199,11100
    FEATURE_TM2 200,11178
    FEATURE_SSSE3 201,11244
    FEATURE_CID 202,11319
    FEATURE_FMA 203,11379
    FEATURE_CX16 204,11454
    FEATURE_xPTR 205,11535
    FEATURE_SSE41 206,11611
    FEATURE_SSE42 207,11687
    FEATURE_MOVBE 208,11763
    FEATURE_POPCNT 209,11830
    FEATURE_AES 210,11898
    FEATURE_XSAVE 211,11973
    FEATURE_OSXSAVE 212,12041
    FEATURE_AVX 213,12122
    FEATURE_SYSCALL 215,12241
    FEATURE_XD_Bit 216,12327
    FEATURE_EM64T 217,12397
    FEATURE_LAHF 219,12519
} feature_bit_t;220,12602
    CACHE_SIZE_8_KB,231,12903
    CACHE_SIZE_16_KB,232,12964
    CACHE_SIZE_32_KB,233,13026
    CACHE_SIZE_64_KB,234,13088
    CACHE_SIZE_128_KB,235,13150
    CACHE_SIZE_256_KB,236,13213
    CACHE_SIZE_512_KB,237,13276
    CACHE_SIZE_1_MB,238,13339
    CACHE_SIZE_2_MB,239,13400
    CACHE_SIZE_UNKNOWN 240,13461
} cache_size_t;241,13522
#define CACHE_LINE_SIZE(248,13632
#define XCR0_AVX 251,13713
#define XCR0_SSE 252,13732
#define XCR0_FP 253,13751

x86/retcheck.c,2601
#define SSE2_USE_STACK_POINTER 80,3119
#define USE_LOCAL_MPROT_STACK 83,3206
#define POST 91,3419
#define PRE 92,3453
emit_pextrw(107,3852
check_return_handle_call(148,5295
check_return_handle_return(226,8692
finalize_return_check(326,13238
typedef struct _call_stack_32 392,15822
    byte retaddr[retaddr393,15854
    struct _call_stack_32 *next;next394,15879
} call_stack_32_t;395,15912
check_return_too_deep(402,16065
check_return_too_shallow(496,19013
check_return_ra_mangled(569,21616
check_return_handle_call(609,23020
check_debug_regs(699,27143
check_debug(713,27727
check_return_handle_return(754,29197
finalize_return_check(894,35337
typedef struct _call_stack_32 898,35401
    byte retaddr[retaddr899,35433
    struct _call_stack_32 *next;next900,35458
} call_stack_32_t;901,35491
check_return_too_deep(908,35644
check_return_too_shallow(1004,38670
check_return_ra_mangled(1082,41342
add_call_site(1151,43727
find_call_site(1159,43951
is_observed_call_site(1169,44199
start_enforcing(1175,44340
add_return_target(1213,45634
unsigned first_ret_from[first_ret_from1251,47402
    RETURN_FROM_EXPECTED_CALLEE 1254,47484
    RETURN_FOR_FIRST_TIME 1255,47536
    RETURN_UNKNOWN_CALLEE 1260,47850
reverse_check_ret_source(1265,47912
at_iret_exception(1284,48627
at_pushregret_exception(1316,49925
at_vbjmp_exception(1349,51248
at_vbpop_exception(1384,52720
at_mso_rct_exception(1424,54624
    enum {MSO_PATTERN_SIZE MSO_PATTERN_SIZE1499,57993
          MSO_PATTERN_ADD_ESP 1500,58040
          MSO_PATTERN_ADD_ESP            = 0xc483,xc4831500,58040
          MSO_PATTERN_LEA_EBX_OFFSET 1501,58091
          MSO_PATTERN_LEA_EBX 1502,58137
          MSO_PATTERN_LEA_EBX            = 0x1d8d,x1d8d1502,58137
          MSO_PATTERN_LEA_EBX_DISP_OFFSET=1503,58188
          MSO_PATTERN_LEA_EBX_DISP_OFFSET= 2 + MSO_PATTERN_LEA_EBX_OFFSET,1503,58188
          MSO_PATTERN_POPAD_POPFD_OFFSET 1504,58263
          MSO_PATTERN_POPAD_POPFD 1505,58310
          MSO_PATTERN_POPAD_POPFD        = 0x9d61,x9d611505,58310
          MSO_PATTERN_MAX_AC_OFFSET 1506,58361
licdll_pattern_match(1609,62225
    enum {LICDLL_PATTERN_SIZE LICDLL_PATTERN_SIZE1611,62289
          LICDLL_PATTERN_MOV_EDX_ESP_24 1612,62339
          LICDLL_PATTERN_MOV_EDX_ESP_24     = 0x2424548b,x2424548b1612,62339
          LICDLL_PATTERN_24_POPFD_OFFSET 1613,62397
          LICDLL_PATTERN_24_POPFD_POPAD_RET 1614,62447
          LICDLL_PATTERN_24_POPFD_POPAD_RET = 0xc3619d24xc3619d241614,62447
at_licdll_rct_exception(1642,63195
ret_after_call_check(1685,65048

x86/sideline.c,2677
#    define RUN_SIG 52,2211
#    define RUN_SIG60,2519
     typedef pid_t thread_t;61,2539
#    define THREAD_STACK_SIZE 62,2568
#define OPTVERB_3 81,2995
#define VERB_3 83,3034
#define VERB_2 84,3051
#define SAMPLE_COUNT_THRESHOLD 87,3129
#define SAMPLE_TO_OPTIMIZE_RATIO 89,3236
volatile fragment_t * sideline_trace;95,3425
int num_processors;98,3508
thread_id_t pause_for_sideline;101,3593
event_t paused_for_sideline_event;102,3625
event_t resume_from_sideline_event;103,3660
file_t logfile;108,3802
typedef struct _sample_entry_t 123,4412
    ptr_uint_t    tag;124,4445
    int     counter;125,4468
    struct  _sample_entry_t * next;126,4489
} sample_entry_t;127,4555
typedef struct _sample_table_t 129,4574
    uint  hash_bits;130,4607
    uint  hash_mask;131,4628
    hash_function_t  hash_func;132,4649
    uint           hash_mask_offset;133,4681
    uint  capacity;134,4757
    uint  entries;135,4777
    mutex_t         lock;136,4796
    sample_entry_t **table;table137,4868
} sample_table_t;138,4938
#define INITIAL_HASH_BITS 140,4957
static sample_table_t table;142,4987
static fragment_t * fragment_now_optimizing;144,5103
typedef struct _remember_entry_t 151,5322
    fragment_t  *f;f152,5357
    fragment_t  *replacement;replacement154,5405
    struct _remember_entry_t * next;156,5442
} remember_entry_t;157,5479
typedef struct _remember_list_t 159,5500
    dcontext_t *dcontext;dcontext160,5534
    remember_entry_t *list;list161,5560
    struct _remember_list_t * next;162,5588
} remember_list_t;163,5624
static remember_list_t *remember;remember165,5644
static int num_samples;168,5763
static int num_optimized;171,5801
static int num_opt_with_no_synch;172,5827
static thread_id_t child_tid;178,5978
static HANDLE child_handle;180,6023
static thread_t child;182,6068
static void *stack;stack183,6091
static event_t wake_event;186,6119
static event_t asleep_event;187,6146
static event_t exited_event;188,6175
static volatile bool child_sleep;191,6265
static volatile bool child_exit;192,6299
sideline_init(218,7156
sideline_exit(298,9652
add_sideline_prefix(386,12151
finalize_sideline_prefix(396,12531
remove_sideline_profiling(409,12930
sideline_start(422,13374
sideline_stop(432,13573
sideline_run(446,13952
optimize_trace_wrapper(484,15022
sideline_sample(490,15171
sideline_examine_traces(525,16418
sideline_optimize(579,18326
sideline_cleanup_replacement(771,25649
find_hottest_entry(834,27785
update_sample_entry(854,28220
sideline_fragment_delete(887,28998
remove_sample_entry(904,29569
add_remember_entry(925,30136
create_thread(973,31715
delete_thread(1002,32589

x86/sideline.h,30
#define _SIDELINE_H_ 41,1873

x86/steal_reg.c,155
restore_state(92,3542
expand_pusha(135,4957
expand_popa(168,6063
use_edi(213,8030
use_different_reg(270,10462
use_ebx(409,16122
steal_reg(444,17269

x86/steal_reg.h,136
#define X86_STEAL_REG_H40,1913
#define EDI_VAL_IN_MEM 58,2888
#define EDI_VAL_IN_EBX 59,2913
#define EDI_VAL_IN_EBX_AND_MEM 60,2938

x86/x86_code.c,264
get_xmm_vals(52,2281
thread_starting(67,2690
dynamo_start(79,3011
auto_setup(121,4579
native_get_retstack_idx(209,7532
new_thread_setup(229,8271
nt_continue_setup(286,10219
safe_read_fast(335,11944
is_safe_read_pc(347,12246
safe_read_resume_pc(355,12426

x86/x86_to_x64.c,582
static const reg_id_t pushad_registers[pushad_registers49,2182
pre(54,2418
replace(62,2672
opnd_change_base_reg_to_64(71,2929
instr_is_string_operation(111,4436
instr_change_base_reg_to_64(130,5016
translate_indirect_jump(158,6090
translate_indirect_call(178,6817
translate_push(201,7742
translate_push_imm(275,11101
translate_pop(322,12855
translate_pusha(384,15525
translate_popa(425,17326
translate_into(466,19252
translate_load_far_pointer(480,19732
translate_leave(512,21113
translate_pushf(534,22008
translate_popf(562,23239
translate_x86_to_x64(582,24041

x86/instr.h,66717
#define _INSTR_H_ 41,2011
#define DR_REG_ENUM_COMPATIBILITY 53,2344
#define DR_FAST_IR 56,2444
# undef DR_FAST_IR63,2697
#  define INSTR_INLINE 107,4142
#  define INSTR_INLINE109,4179
    DR_REG_NULL,132,5107
    DR_REG_RAX,134,5223
    DR_REG_RAX,  DR_REG_RCX,134,5223
    DR_REG_RAX,  DR_REG_RCX,  DR_REG_RDX,134,5223
    DR_REG_RAX,  DR_REG_RCX,  DR_REG_RDX,  DR_REG_RBX,134,5223
    DR_REG_RSP,135,5278
    DR_REG_RSP,  DR_REG_RBP,135,5278
    DR_REG_RSP,  DR_REG_RBP,  DR_REG_RSI,135,5278
    DR_REG_RSP,  DR_REG_RBP,  DR_REG_RSI,  DR_REG_RDI,135,5278
    DR_REG_R8,136,5333
    DR_REG_R8,   DR_REG_R9,136,5333
    DR_REG_R8,   DR_REG_R9,   DR_REG_R10,136,5333
    DR_REG_R8,   DR_REG_R9,   DR_REG_R10,  DR_REG_R11,136,5333
    DR_REG_R12,137,5388
    DR_REG_R12,  DR_REG_R13,137,5388
    DR_REG_R12,  DR_REG_R13,  DR_REG_R14,137,5388
    DR_REG_R12,  DR_REG_R13,  DR_REG_R14,  DR_REG_R15,137,5388
    DR_REG_EAX,139,5476
    DR_REG_EAX,  DR_REG_ECX,139,5476
    DR_REG_EAX,  DR_REG_ECX,  DR_REG_EDX,139,5476
    DR_REG_EAX,  DR_REG_ECX,  DR_REG_EDX,  DR_REG_EBX,139,5476
    DR_REG_ESP,140,5531
    DR_REG_ESP,  DR_REG_EBP,140,5531
    DR_REG_ESP,  DR_REG_EBP,  DR_REG_ESI,140,5531
    DR_REG_ESP,  DR_REG_EBP,  DR_REG_ESI,  DR_REG_EDI,140,5531
    DR_REG_R8D,141,5586
    DR_REG_R8D,  DR_REG_R9D,141,5586
    DR_REG_R8D,  DR_REG_R9D,  DR_REG_R10D,141,5586
    DR_REG_R8D,  DR_REG_R9D,  DR_REG_R10D, DR_REG_R11D,141,5586
    DR_REG_R12D,142,5642
    DR_REG_R12D, DR_REG_R13D,142,5642
    DR_REG_R12D, DR_REG_R13D, DR_REG_R14D,142,5642
    DR_REG_R12D, DR_REG_R13D, DR_REG_R14D, DR_REG_R15D,142,5642
    DR_REG_AX,144,5731
    DR_REG_AX,   DR_REG_CX,144,5731
    DR_REG_AX,   DR_REG_CX,   DR_REG_DX,144,5731
    DR_REG_AX,   DR_REG_CX,   DR_REG_DX,   DR_REG_BX,144,5731
    DR_REG_SP,145,5785
    DR_REG_SP,   DR_REG_BP,145,5785
    DR_REG_SP,   DR_REG_BP,   DR_REG_SI,145,5785
    DR_REG_SP,   DR_REG_BP,   DR_REG_SI,   DR_REG_DI,145,5785
    DR_REG_R8W,146,5839
    DR_REG_R8W,  DR_REG_R9W,146,5839
    DR_REG_R8W,  DR_REG_R9W,  DR_REG_R10W,146,5839
    DR_REG_R8W,  DR_REG_R9W,  DR_REG_R10W, DR_REG_R11W,146,5839
    DR_REG_R12W,147,5895
    DR_REG_R12W, DR_REG_R13W,147,5895
    DR_REG_R12W, DR_REG_R13W, DR_REG_R14W,147,5895
    DR_REG_R12W, DR_REG_R13W, DR_REG_R14W, DR_REG_R15W,147,5895
    DR_REG_AL,149,5983
    DR_REG_AL,   DR_REG_CL,149,5983
    DR_REG_AL,   DR_REG_CL,   DR_REG_DL,149,5983
    DR_REG_AL,   DR_REG_CL,   DR_REG_DL,   DR_REG_BL,149,5983
    DR_REG_AH,150,6037
    DR_REG_AH,   DR_REG_CH,150,6037
    DR_REG_AH,   DR_REG_CH,   DR_REG_DH,150,6037
    DR_REG_AH,   DR_REG_CH,   DR_REG_DH,   DR_REG_BH,150,6037
    DR_REG_R8L,151,6091
    DR_REG_R8L,  DR_REG_R9L,151,6091
    DR_REG_R8L,  DR_REG_R9L,  DR_REG_R10L,151,6091
    DR_REG_R8L,  DR_REG_R9L,  DR_REG_R10L, DR_REG_R11L,151,6091
    DR_REG_R12L,152,6147
    DR_REG_R12L, DR_REG_R13L,152,6147
    DR_REG_R12L, DR_REG_R13L, DR_REG_R14L,152,6147
    DR_REG_R12L, DR_REG_R13L, DR_REG_R14L, DR_REG_R15L,152,6147
    DR_REG_SPL,153,6203
    DR_REG_SPL,  DR_REG_BPL,153,6203
    DR_REG_SPL,  DR_REG_BPL,  DR_REG_SIL,153,6203
    DR_REG_SPL,  DR_REG_BPL,  DR_REG_SIL,  DR_REG_DIL,153,6203
    DR_REG_MM0,155,6279
    DR_REG_MM0,  DR_REG_MM1,155,6279
    DR_REG_MM0,  DR_REG_MM1,  DR_REG_MM2,155,6279
    DR_REG_MM0,  DR_REG_MM1,  DR_REG_MM2,  DR_REG_MM3,155,6279
    DR_REG_MM4,156,6334
    DR_REG_MM4,  DR_REG_MM5,156,6334
    DR_REG_MM4,  DR_REG_MM5,  DR_REG_MM6,156,6334
    DR_REG_MM4,  DR_REG_MM5,  DR_REG_MM6,  DR_REG_MM7,156,6334
    DR_REG_XMM0,158,6411
    DR_REG_XMM0, DR_REG_XMM1,158,6411
    DR_REG_XMM0, DR_REG_XMM1, DR_REG_XMM2,158,6411
    DR_REG_XMM0, DR_REG_XMM1, DR_REG_XMM2, DR_REG_XMM3,158,6411
    DR_REG_XMM4,159,6467
    DR_REG_XMM4, DR_REG_XMM5,159,6467
    DR_REG_XMM4, DR_REG_XMM5, DR_REG_XMM6,159,6467
    DR_REG_XMM4, DR_REG_XMM5, DR_REG_XMM6, DR_REG_XMM7,159,6467
    DR_REG_XMM8,160,6523
    DR_REG_XMM8, DR_REG_XMM9,160,6523
    DR_REG_XMM8, DR_REG_XMM9, DR_REG_XMM10,160,6523
    DR_REG_XMM8, DR_REG_XMM9, DR_REG_XMM10,DR_REG_XMM11,160,6523
    DR_REG_XMM12,161,6580
    DR_REG_XMM12,DR_REG_XMM13,161,6580
    DR_REG_XMM12,DR_REG_XMM13,DR_REG_XMM14,161,6580
    DR_REG_XMM12,DR_REG_XMM13,DR_REG_XMM14,DR_REG_XMM15,161,6580
    DR_REG_ST0,163,6672
    DR_REG_ST0,  DR_REG_ST1,163,6672
    DR_REG_ST0,  DR_REG_ST1,  DR_REG_ST2,163,6672
    DR_REG_ST0,  DR_REG_ST1,  DR_REG_ST2,  DR_REG_ST3,163,6672
    DR_REG_ST4,164,6727
    DR_REG_ST4,  DR_REG_ST5,164,6727
    DR_REG_ST4,  DR_REG_ST5,  DR_REG_ST6,164,6727
    DR_REG_ST4,  DR_REG_ST5,  DR_REG_ST6,  DR_REG_ST7,164,6727
    DR_SEG_ES,166,6849
    DR_SEG_ES,   DR_SEG_CS,166,6849
    DR_SEG_ES,   DR_SEG_CS,   DR_SEG_SS,166,6849
    DR_SEG_ES,   DR_SEG_CS,   DR_SEG_SS,   DR_SEG_DS,166,6849
    DR_SEG_ES,   DR_SEG_CS,   DR_SEG_SS,   DR_SEG_DS,   DR_SEG_FS,166,6849
    DR_SEG_ES,   DR_SEG_CS,   DR_SEG_SS,   DR_SEG_DS,   DR_SEG_FS,   DR_SEG_GS,166,6849
    DR_REG_DR0,168,7018
    DR_REG_DR0,  DR_REG_DR1,168,7018
    DR_REG_DR0,  DR_REG_DR1,  DR_REG_DR2,168,7018
    DR_REG_DR0,  DR_REG_DR1,  DR_REG_DR2,  DR_REG_DR3,168,7018
    DR_REG_DR4,169,7073
    DR_REG_DR4,  DR_REG_DR5,169,7073
    DR_REG_DR4,  DR_REG_DR5,  DR_REG_DR6,169,7073
    DR_REG_DR4,  DR_REG_DR5,  DR_REG_DR6,  DR_REG_DR7,169,7073
    DR_REG_DR8,170,7128
    DR_REG_DR8,  DR_REG_DR9,170,7128
    DR_REG_DR8,  DR_REG_DR9,  DR_REG_DR10,170,7128
    DR_REG_DR8,  DR_REG_DR9,  DR_REG_DR10, DR_REG_DR11,170,7128
    DR_REG_DR12,171,7184
    DR_REG_DR12, DR_REG_DR13,171,7184
    DR_REG_DR12, DR_REG_DR13, DR_REG_DR14,171,7184
    DR_REG_DR12, DR_REG_DR13, DR_REG_DR14, DR_REG_DR15,171,7184
    DR_REG_CR0,173,7301
    DR_REG_CR0,  DR_REG_CR1,173,7301
    DR_REG_CR0,  DR_REG_CR1,  DR_REG_CR2,173,7301
    DR_REG_CR0,  DR_REG_CR1,  DR_REG_CR2,  DR_REG_CR3,173,7301
    DR_REG_CR4,174,7356
    DR_REG_CR4,  DR_REG_CR5,174,7356
    DR_REG_CR4,  DR_REG_CR5,  DR_REG_CR6,174,7356
    DR_REG_CR4,  DR_REG_CR5,  DR_REG_CR6,  DR_REG_CR7,174,7356
    DR_REG_CR8,175,7412
    DR_REG_CR8,  DR_REG_CR9,175,7412
    DR_REG_CR8,  DR_REG_CR9,  DR_REG_CR10,175,7412
    DR_REG_CR8,  DR_REG_CR9,  DR_REG_CR10, DR_REG_CR11,175,7412
    DR_REG_CR12,176,7468
    DR_REG_CR12, DR_REG_CR13,176,7468
    DR_REG_CR12, DR_REG_CR13, DR_REG_CR14,176,7468
    DR_REG_CR12, DR_REG_CR13, DR_REG_CR14, DR_REG_CR15,176,7468
    DR_REG_INVALID,177,7524
    DR_REG_YMM0,186,7842
    DR_REG_YMM0, DR_REG_YMM1,186,7842
    DR_REG_YMM0, DR_REG_YMM1, DR_REG_YMM2,186,7842
    DR_REG_YMM0, DR_REG_YMM1, DR_REG_YMM2, DR_REG_YMM3,186,7842
    DR_REG_YMM4,187,7898
    DR_REG_YMM4, DR_REG_YMM5,187,7898
    DR_REG_YMM4, DR_REG_YMM5, DR_REG_YMM6,187,7898
    DR_REG_YMM4, DR_REG_YMM5, DR_REG_YMM6, DR_REG_YMM7,187,7898
    DR_REG_YMM8,188,7954
    DR_REG_YMM8, DR_REG_YMM9,188,7954
    DR_REG_YMM8, DR_REG_YMM9, DR_REG_YMM10,188,7954
    DR_REG_YMM8, DR_REG_YMM9, DR_REG_YMM10,DR_REG_YMM11,188,7954
    DR_REG_YMM12,189,8011
    DR_REG_YMM12,DR_REG_YMM13,189,8011
    DR_REG_YMM12,DR_REG_YMM13,DR_REG_YMM14,189,8011
    DR_REG_YMM12,DR_REG_YMM13,DR_REG_YMM14,DR_REG_YMM15,189,8011
typedef byte reg_id_t;193,8150
typedef byte opnd_size_t;194,8209
# define DR_REG_XAX 198,8344
# define DR_REG_XCX 199,8430
# define DR_REG_XDX 200,8516
# define DR_REG_XBX 201,8602
# define DR_REG_XSP 202,8688
# define DR_REG_XBP 203,8774
# define DR_REG_XSI 204,8860
# define DR_REG_XDI 205,8946
# define DR_REG_XAX 207,9038
# define DR_REG_XCX 208,9124
# define DR_REG_XDX 209,9210
# define DR_REG_XBX 210,9296
# define DR_REG_XSP 211,9382
# define DR_REG_XBP 212,9468
# define DR_REG_XSI 213,9554
# define DR_REG_XDI 214,9640
#define DR_REG_START_GPR 223,9884
# define DR_REG_STOP_GPR 225,9977
# define DR_REG_STOP_GPR 227,10063
#define DR_NUM_GPR_REGS 230,10186
#define DR_REG_START_64 231,10247
#define DR_REG_STOP_64 232,10339
#define DR_REG_START_32 233,10431
#define DR_REG_STOP_32 234,10523
#define DR_REG_START_16 235,10615
#define DR_REG_STOP_16 236,10707
#define DR_REG_START_8 237,10799
#define DR_REG_STOP_8 238,10890
#define DR_REG_START_8HL 239,10981
#define DR_REG_STOP_8HL 240,11073
#define DR_REG_START_x86_8 241,11165
#define DR_REG_STOP_x86_8 242,11257
#define DR_REG_START_x64_8 243,11348
#define DR_REG_STOP_x64_8 244,11440
#define DR_REG_START_MMX 245,11531
#define DR_REG_STOP_MMX 246,11612
#define DR_REG_START_XMM 247,11693
#define DR_REG_STOP_XMM 248,11774
#define DR_REG_START_YMM 249,11855
#define DR_REG_STOP_YMM 250,11936
#define DR_REG_START_FLOAT 251,12017
#define DR_REG_STOP_FLOAT 252,12109
#define DR_REG_START_SEGMENT 253,12201
#define DR_REG_STOP_SEGMENT 254,12286
#define DR_REG_START_DR 255,12371
#define DR_REG_STOP_DR 256,12454
#define DR_REG_START_CR 257,12537
#define DR_REG_STOP_CR 258,12622
#define DR_REG_LAST_VALID_ENUM 263,12808
#define DR_REG_LAST_ENUM 264,12852
#define REG_START_SPILL 266,12953
#define REG_STOP_SPILL 267,12990
#define REG_SPILL_NUM 268,13027
# define REG_NULL 277,13409
# define REG_RAX 278,13450
# define REG_RCX 279,13490
# define REG_RDX 280,13530
# define REG_RBX 281,13570
# define REG_RSP 282,13610
# define REG_RBP 283,13650
# define REG_RSI 284,13690
# define REG_RDI 285,13730
# define REG_R8 286,13770
# define REG_R9 287,13809
# define REG_R10 288,13848
# define REG_R11 289,13888
# define REG_R12 290,13928
# define REG_R13 291,13968
# define REG_R14 292,14008
# define REG_R15 293,14048
# define REG_EAX 294,14088
# define REG_ECX 295,14128
# define REG_EDX 296,14168
# define REG_EBX 297,14208
# define REG_ESP 298,14248
# define REG_EBP 299,14288
# define REG_ESI 300,14328
# define REG_EDI 301,14368
# define REG_R8D 302,14408
# define REG_R9D 303,14448
# define REG_R10D 304,14488
# define REG_R11D 305,14529
# define REG_R12D 306,14570
# define REG_R13D 307,14611
# define REG_R14D 308,14652
# define REG_R15D 309,14693
# define REG_AX 310,14734
# define REG_CX 311,14773
# define REG_DX 312,14812
# define REG_BX 313,14851
# define REG_SP 314,14890
# define REG_BP 315,14929
# define REG_SI 316,14968
# define REG_DI 317,15007
# define REG_R8W 318,15046
# define REG_R9W 319,15086
# define REG_R10W 320,15126
# define REG_R11W 321,15167
# define REG_R12W 322,15208
# define REG_R13W 323,15249
# define REG_R14W 324,15290
# define REG_R15W 325,15331
# define REG_AL 326,15372
# define REG_CL 327,15411
# define REG_DL 328,15450
# define REG_BL 329,15489
# define REG_AH 330,15528
# define REG_CH 331,15567
# define REG_DH 332,15606
# define REG_BH 333,15645
# define REG_R8L 334,15684
# define REG_R9L 335,15724
# define REG_R10L 336,15764
# define REG_R11L 337,15805
# define REG_R12L 338,15846
# define REG_R13L 339,15887
# define REG_R14L 340,15928
# define REG_R15L 341,15969
# define REG_SPL 342,16010
# define REG_BPL 343,16050
# define REG_SIL 344,16090
# define REG_DIL 345,16130
# define REG_MM0 346,16170
# define REG_MM1 347,16210
# define REG_MM2 348,16250
# define REG_MM3 349,16290
# define REG_MM4 350,16330
# define REG_MM5 351,16370
# define REG_MM6 352,16410
# define REG_MM7 353,16450
# define REG_XMM0 354,16490
# define REG_XMM1 355,16531
# define REG_XMM2 356,16572
# define REG_XMM3 357,16613
# define REG_XMM4 358,16654
# define REG_XMM5 359,16695
# define REG_XMM6 360,16736
# define REG_XMM7 361,16777
# define REG_XMM8 362,16818
# define REG_XMM9 363,16859
# define REG_XMM10 364,16900
# define REG_XMM11 365,16942
# define REG_XMM12 366,16984
# define REG_XMM13 367,17026
# define REG_XMM14 368,17068
# define REG_XMM15 369,17110
# define REG_ST0 370,17152
# define REG_ST1 371,17192
# define REG_ST2 372,17232
# define REG_ST3 373,17272
# define REG_ST4 374,17312
# define REG_ST5 375,17352
# define REG_ST6 376,17392
# define REG_ST7 377,17432
# define SEG_ES 378,17472
# define SEG_CS 379,17511
# define SEG_SS 380,17550
# define SEG_DS 381,17589
# define SEG_FS 382,17628
# define SEG_GS 383,17667
# define REG_DR0 384,17706
# define REG_DR1 385,17746
# define REG_DR2 386,17786
# define REG_DR3 387,17826
# define REG_DR4 388,17866
# define REG_DR5 389,17906
# define REG_DR6 390,17946
# define REG_DR7 391,17986
# define REG_DR8 392,18026
# define REG_DR9 393,18066
# define REG_DR10 394,18106
# define REG_DR11 395,18147
# define REG_DR12 396,18188
# define REG_DR13 397,18229
# define REG_DR14 398,18270
# define REG_DR15 399,18311
# define REG_CR0 400,18352
# define REG_CR1 401,18392
# define REG_CR2 402,18432
# define REG_CR3 403,18472
# define REG_CR4 404,18512
# define REG_CR5 405,18552
# define REG_CR6 406,18592
# define REG_CR7 407,18632
# define REG_CR8 408,18672
# define REG_CR9 409,18712
# define REG_CR10 410,18752
# define REG_CR11 411,18793
# define REG_CR12 412,18834
# define REG_CR13 413,18875
# define REG_CR14 414,18916
# define REG_CR15 415,18957
# define REG_INVALID 416,18998
# define REG_XAX 417,19042
# define REG_XCX 418,19082
# define REG_XDX 419,19122
# define REG_XBX 420,19162
# define REG_XSP 421,19202
# define REG_XBP 422,19242
# define REG_XSI 423,19282
# define REG_XDI 424,19322
# define REG_START_64 425,19362
# define REG_STOP_64 426,19407
# define REG_START_32 427,19451
# define REG_STOP_32 428,19496
# define REG_START_16 429,19540
# define REG_STOP_16 430,19585
# define REG_START_8 431,19629
# define REG_STOP_8 432,19673
# define REG_START_8HL 433,19716
# define REG_STOP_8HL 434,19762
# define REG_START_x86_8 435,19807
# define REG_STOP_x86_8 436,19855
# define REG_START_x64_8 437,19902
# define REG_STOP_x64_8 438,19950
# define REG_START_MMX 439,19997
# define REG_STOP_MMX 440,20043
# define REG_START_YMM 441,20088
# define REG_STOP_YMM 442,20134
# define REG_START_XMM 443,20179
# define REG_STOP_XMM 444,20225
# define REG_START_FLOAT 445,20270
# define REG_STOP_FLOAT 446,20318
# define REG_START_SEGMENT 447,20365
# define REG_STOP_SEGMENT 448,20415
# define REG_START_DR 449,20464
# define REG_STOP_DR 450,20509
# define REG_START_CR 451,20553
# define REG_STOP_CR 452,20598
# define REG_LAST_VALID_ENUM 453,20642
# define REG_LAST_ENUM 454,20694
# define REG_YMM0 455,20740
# define REG_YMM1 456,20781
# define REG_YMM2 457,20822
# define REG_YMM3 458,20863
# define REG_YMM4 459,20904
# define REG_YMM5 460,20945
# define REG_YMM6 461,20986
# define REG_YMM7 462,21027
# define REG_YMM8 463,21068
# define REG_YMM9 464,21109
# define REG_YMM10 465,21150
# define REG_YMM11 466,21192
# define REG_YMM12 467,21234
# define REG_YMM13 468,21276
# define REG_YMM14 469,21318
# define REG_YMM15 470,21360
# define INT8_MIN 475,21483
# define INT8_MAX 476,21513
# define INT16_MIN 477,21543
# define INT16_MAX 478,21572
# define INT32_MIN 479,21601
# define INT32_MAX 480,21629
# define REG_SPECIFIER_BITS 491,21841
# define SCALE_SPECIFIER_BITS 492,21871
struct _opnd_t 502,22345
    byte kind;503,22362
    opnd_size_t size;510,22665
        ushort far_pc_seg_selector;515,22852
        reg_id_t segment : REG_SPECIFIER_BITS;517,23004
        ushort disp;519,23156
        ushort shift;520,23208
    } seg;521,23256
        ptr_int_t immed_int;525,23354
        float immed_float;526,23410
        app_pc pc;531,23674
        instr_t *instr;instr536,23942
        reg_id_t reg;537,24027
            int disp;539,24091
            reg_id_t base_reg : REG_SPECIFIER_BITS;540,24113
            reg_id_t index_reg : REG_SPECIFIER_BITS;541,24165
            byte scale : SCALE_SPECIFIER_BITS;545,24431
            byte/*bool*/ encode_zero_disp 546,24478
            byte/*bool*/ force_full_disp 547,24525
            byte/*bool*/ disp_short_addr 548,24613
        } base_disp;549,24701
        void *addr;addr550,24754
    } value;551,24824
struct _opnd_t 556,24907
    uint black_box_uint;558,24936
    uint64 black_box_uint64;559,24961
    uint black_box_uint[black_box_uint561,24997
#define EXPECTED_SIZEOF_OPND 574,25521
    NULL_kind,581,25757
    IMMED_INTEGER_kind,582,25772
    IMMED_FLOAT_kind,583,25796
    PC_kind,584,25818
    INSTR_kind,585,25831
    REG_kind,586,25847
    BASE_DISP_kind,587,25861
    FAR_PC_kind,588,25945
    FAR_INSTR_kind,589,26014
    REL_ADDR_kind,591,26094
    ABS_ADDR_kind,592,26150
    MEM_INSTR_kind,594,26217
    LAST_kind,595,26237
    INSTR_DIRECT_EXIT 1692,58003
    INSTR_DIRECT_EXIT           = LINK_DIRECT,1692,58003
    INSTR_INDIRECT_EXIT 1693,58050
    INSTR_INDIRECT_EXIT         = LINK_INDIRECT,1693,58050
    INSTR_RETURN_EXIT 1694,58099
    INSTR_RETURN_EXIT           = LINK_RETURN,1694,58099
    INSTR_CALL_EXIT 1698,58297
    INSTR_CALL_EXIT             = LINK_CALL,1698,58297
    INSTR_JMP_EXIT 1699,58342
    INSTR_JMP_EXIT              = LINK_JMP,1699,58342
    INSTR_IND_JMP_PLT_EXIT 1700,58386
    INSTR_IND_JMP_PLT_EXIT      = (INSTR_JMP_EXIT 1700,58386
    INSTR_IND_JMP_PLT_EXIT      = (INSTR_JMP_EXIT | INSTR_CALL_EXIT)1700,58386
    INSTR_FAR_EXIT 1701,58456
    INSTR_FAR_EXIT              = LINK_FAR,1701,58456
    INSTR_BRANCH_SPECIAL_EXIT 1702,58500
    INSTR_BRANCH_SPECIAL_EXIT   = LINK_SPECIAL_EXIT,1702,58500
    INSTR_BRANCH_TARGETS_PREFIX 1704,58576
    INSTR_BRANCH_TARGETS_PREFIX = LINK_TARGET_PREFIX,1704,58576
    INSTR_TRACE_CMP_EXIT 1710,58815
    INSTR_TRACE_CMP_EXIT        = LINK_TRACE_CMP,1710,58815
    INSTR_CALLBACK_RETURN 1713,58887
    INSTR_CALLBACK_RETURN       = LINK_CALLBACK_RETURN,1713,58887
    INSTR_NI_SYSCALL_INT 1715,58949
    INSTR_NI_SYSCALL_INT        = LINK_NI_SYSCALL_INT,1715,58949
    INSTR_NI_SYSCALL 1717,59011
    INSTR_NI_SYSCALL            = LINK_NI_SYSCALL,1717,59011
    INSTR_NI_SYSCALL_ALL 1718,59062
    INSTR_NI_SYSCALL_ALL        = LINK_NI_SYSCALL_ALL,1718,59062
    EXIT_CTI_TYPES 1720,59137
    EXIT_CTI_TYPES              = (INSTR_DIRECT_EXIT 1720,59137
    EXIT_CTI_TYPES              = (INSTR_DIRECT_EXIT | INSTR_INDIRECT_EXIT 1720,59137
                                   INSTR_RETURN_EXIT 1721,59214
                                   INSTR_RETURN_EXIT | INSTR_CALL_EXIT 1721,59214
                                   INSTR_JMP_EXIT 1722,59292
                                   INSTR_FAR_EXIT 1723,59344
                                   INSTR_BRANCH_SPECIAL_EXIT 1724,59396
                                   INSTR_BRANCH_TARGETS_PREFIX 1726,59482
                                   INSTR_TRACE_CMP_EXIT 1729,59565
                                   INSTR_CALLBACK_RETURN 1732,59645
                                   INSTR_NI_SYSCALL_INT 1734,59710
                                   INSTR_NI_SYSCALL)1736,59775
    INSTR_OPERANDS_VALID 1739,59887
    INSTR_OPERANDS_VALID        = 0x00010000,x000100001739,59887
    INSTR_FIRST_NON_LINK_SHARED_FLAG 1741,59953
    INSTR_FIRST_NON_LINK_SHARED_FLAG = INSTR_OPERANDS_VALID,1741,59953
    INSTR_EFLAGS_VALID 1742,60014
    INSTR_EFLAGS_VALID          = 0x00020000,x000200001742,60014
    INSTR_EFLAGS_6_VALID 1743,60060
    INSTR_EFLAGS_6_VALID        = 0x00040000,x000400001743,60060
    INSTR_RAW_BITS_VALID 1744,60106
    INSTR_RAW_BITS_VALID        = 0x00080000,x000800001744,60106
    INSTR_RAW_BITS_ALLOCATED 1745,60152
    INSTR_RAW_BITS_ALLOCATED    = 0x00100000,x001000001745,60152
    INSTR_DO_NOT_MANGLE 1747,60224
    INSTR_DO_NOT_MANGLE         = 0x00200000,x002000001747,60224
    INSTR_HAS_CUSTOM_STUB 1749,60294
    INSTR_HAS_CUSTOM_STUB       = 0x00400000,x004000001749,60294
    INSTR_IND_CALL_DIRECT 1751,60421
    INSTR_IND_CALL_DIRECT       = 0x00800000,x008000001751,60421
    INSTR_SHARED_SYSCALL 1754,60562
    INSTR_SHARED_SYSCALL        = 0x01000000,x010000001754,60562
    INSTR_CLOBBER_RETADDR 1758,60640
    INSTR_CLOBBER_RETADDR       = 0x02000000,x020000001758,60640
    INSTR_HOT_PATCHABLE 1765,60980
    INSTR_HOT_PATCHABLE         = 0x04000000,x040000001765,60980
    INSTR_IGNORE_INVALID 1768,61112
    INSTR_IGNORE_INVALID        = 0x08000000,x080000001768,61112
    INSTR_DO_NOT_EMIT 1773,61369
    INSTR_DO_NOT_EMIT           = 0x10000000,x100000001773,61369
    INSTR_RIP_REL_VALID 1775,61492
    INSTR_RIP_REL_VALID         = 0x20000000,x200000001775,61492
    INSTR_X86_MODE 1778,61609
    INSTR_X86_MODE              = 0x40000000,x400000001778,61609
    INSTR_OUR_MANGLING 1781,61737
    INSTR_OUR_MANGLING          = 0x80000000,x800000001781,61737
typedef struct _dr_instr_label_data_t 1791,62002
    ptr_uint_t data[data1792,62042
} dr_instr_label_data_t;1793,62122
struct _instr_t 1810,62813
    uint    flags;1812,62884
    byte    *bytes;bytes1815,62974
    uint    length;1816,62994
    app_pc  translation;1819,63059
    uint    opcode;1821,63085
    byte    rip_rel_pos;1825,63204
    byte    num_dsts;1832,63444
    byte    num_srcs;1833,63466
            opnd_t    src0;1841,63772
            opnd_t    *srcs;srcs1842,63800
            opnd_t    *dsts;dsts1843,63869
        dr_instr_label_data_t label_data;1845,63909
    uint    prefixes;1848,63959
    uint    eflags;1849,64029
    void *note;note1856,64349
    instr_t   *prev;prev1859,64432
    instr_t   *next;next1860,64453
    DR_FP_STATE,3234,104513
    DR_FP_MOVE,3235,104596
    DR_FP_CONVERT,3236,104681
    DR_FP_MATH,3237,104751
} dr_fp_type_t;3238,104825
#define EFLAGS_READ_CF 3733,121888
#define EFLAGS_READ_PF 3734,121968
#define EFLAGS_READ_AF 3735,122048
#define EFLAGS_READ_ZF 3736,122128
#define EFLAGS_READ_SF 3737,122208
#define EFLAGS_READ_TF 3738,122288
#define EFLAGS_READ_IF 3739,122368
#define EFLAGS_READ_DF 3740,122448
#define EFLAGS_READ_OF 3741,122528
#define EFLAGS_READ_NT 3742,122608
#define EFLAGS_READ_RF 3743,122688
#define EFLAGS_WRITE_CF 3744,122768
#define EFLAGS_WRITE_PF 3745,122849
#define EFLAGS_WRITE_AF 3746,122930
#define EFLAGS_WRITE_ZF 3747,123011
#define EFLAGS_WRITE_SF 3748,123092
#define EFLAGS_WRITE_TF 3749,123173
#define EFLAGS_WRITE_IF 3750,123254
#define EFLAGS_WRITE_DF 3751,123335
#define EFLAGS_WRITE_OF 3752,123416
#define EFLAGS_WRITE_NT 3753,123497
#define EFLAGS_WRITE_RF 3754,123578
#define EFLAGS_READ_ALL 3756,123660
#define EFLAGS_WRITE_ALL 3757,123725
#define EFLAGS_READ_6 3760,123924
#define EFLAGS_WRITE_6 3762,124024
#define EFLAGS_WRITE_TO_READ(3765,124143
#define EFLAGS_READ_TO_WRITE(3767,124269
    EFLAGS_CF 3775,124488
    EFLAGS_CF = 0x00000001,x000000013775,124488
    EFLAGS_PF 3776,124575
    EFLAGS_PF = 0x00000004,x000000043776,124575
    EFLAGS_AF 3777,124663
    EFLAGS_AF = 0x00000010,x000000103777,124663
    EFLAGS_ZF 3778,124754
    EFLAGS_ZF = 0x00000040,x000000403778,124754
    EFLAGS_SF 3779,124840
    EFLAGS_SF = 0x00000080,x000000803779,124840
    EFLAGS_DF 3780,124926
    EFLAGS_DF = 0x00000400,x000004003780,124926
    EFLAGS_OF 3781,125017
    EFLAGS_OF = 0x00000800,x000008003781,125017
#define PC_RELATIVE_TARGET(3787,125224
    RAW_OPCODE_nop 3790,125299
    RAW_OPCODE_nop             = 0x90,x903790,125299
    RAW_OPCODE_jmp_short 3791,125338
    RAW_OPCODE_jmp_short       = 0xeb,xeb3791,125338
    RAW_OPCODE_call 3792,125377
    RAW_OPCODE_call            = 0xe8,xe83792,125377
    RAW_OPCODE_ret 3793,125416
    RAW_OPCODE_ret             = 0xc3,xc33793,125416
    RAW_OPCODE_jmp 3794,125455
    RAW_OPCODE_jmp             = 0xe9,xe93794,125455
    RAW_OPCODE_push_imm32 3795,125494
    RAW_OPCODE_push_imm32      = 0x68,x683795,125494
    RAW_OPCODE_jcc_short_start 3796,125533
    RAW_OPCODE_jcc_short_start = 0x70,x703796,125533
    RAW_OPCODE_jcc_short_end 3797,125572
    RAW_OPCODE_jcc_short_end   = 0x7f,x7f3797,125572
    RAW_OPCODE_jcc_byte1 3798,125611
    RAW_OPCODE_jcc_byte1       = 0x0f,x0f3798,125611
    RAW_OPCODE_jcc_byte2_start 3799,125650
    RAW_OPCODE_jcc_byte2_start = 0x80,x803799,125650
    RAW_OPCODE_jcc_byte2_end 3800,125689
    RAW_OPCODE_jcc_byte2_end   = 0x8f,x8f3800,125689
    RAW_OPCODE_loop_start 3801,125728
    RAW_OPCODE_loop_start      = 0xe0,xe03801,125728
    RAW_OPCODE_loop_end 3802,125767
    RAW_OPCODE_loop_end        = 0xe3,xe33802,125767
    RAW_OPCODE_lea 3803,125806
    RAW_OPCODE_lea             = 0x8d,x8d3803,125806
    RAW_PREFIX_jcc_not_taken 3804,125845
    RAW_PREFIX_jcc_not_taken   = 0x2e,x2e3804,125845
    RAW_PREFIX_jcc_taken 3805,125884
    RAW_PREFIX_jcc_taken       = 0x3e,x3e3805,125884
    RAW_PREFIX_lock 3806,125923
    RAW_PREFIX_lock            = 0xf0,xf03806,125923
    FS_SEG_OPCODE 3810,126007
    FS_SEG_OPCODE        = 0x64,x643810,126007
    GS_SEG_OPCODE 3811,126040
    GS_SEG_OPCODE        = 0x65,x653811,126040
    TLS_SEG_OPCODE 3819,126360
    TLS_SEG_OPCODE       = GS_SEG_OPCODE,3819,126360
    TLS_SEG_OPCODE 3821,126408
    TLS_SEG_OPCODE       = FS_SEG_OPCODE,3821,126408
    DATA_PREFIX_OPCODE 3824,126458
    DATA_PREFIX_OPCODE   = 0x66,x663824,126458
    ADDR_PREFIX_OPCODE 3825,126491
    ADDR_PREFIX_OPCODE   = 0x67,x673825,126491
    REPNE_PREFIX_OPCODE 3826,126524
    REPNE_PREFIX_OPCODE  = 0xf2,xf23826,126524
    REP_PREFIX_OPCODE 3827,126557
    REP_PREFIX_OPCODE    = 0xf3,xf33827,126557
    REX_PREFIX_BASE_OPCODE 3828,126590
    REX_PREFIX_BASE_OPCODE = 0x40,x403828,126590
    REX_PREFIX_W_OPFLAG 3829,126625
    REX_PREFIX_W_OPFLAG    = 0x8,x83829,126625
    REX_PREFIX_R_OPFLAG 3830,126659
    REX_PREFIX_R_OPFLAG    = 0x4,x43830,126659
    REX_PREFIX_X_OPFLAG 3831,126693
    REX_PREFIX_X_OPFLAG    = 0x2,x23831,126693
    REX_PREFIX_B_OPFLAG 3832,126727
    REX_PREFIX_B_OPFLAG    = 0x1,x13832,126727
    REX_PREFIX_ALL_OPFLAGS 3833,126761
    REX_PREFIX_ALL_OPFLAGS = 0xf,xf3833,126761
    MOV_REG2MEM_OPCODE 3834,126795
    MOV_REG2MEM_OPCODE   = 0x89,x893834,126795
    MOV_MEM2REG_OPCODE 3835,126828
    MOV_MEM2REG_OPCODE   = 0x8b,x8b3835,126828
    MOV_XAX2MEM_OPCODE 3836,126861
    MOV_XAX2MEM_OPCODE   = 0xa3,xa33836,126861
    MOV_MEM2XAX_OPCODE 3837,126909
    MOV_MEM2XAX_OPCODE   = 0xa1,xa13837,126909
    MOV_IMM2XAX_OPCODE 3838,126957
    MOV_IMM2XAX_OPCODE   = 0xb8,xb83838,126957
    MOV_IMM2XBX_OPCODE 3839,127005
    MOV_IMM2XBX_OPCODE   = 0xbb,xbb3839,127005
    MOV_IMM2MEM_OPCODE 3840,127053
    MOV_IMM2MEM_OPCODE   = 0xc7,xc73840,127053
    JECXZ_OPCODE 3841,127102
    JECXZ_OPCODE         = 0xe3,xe33841,127102
    JMP_SHORT_OPCODE 3842,127135
    JMP_SHORT_OPCODE     = 0xeb,xeb3842,127135
    JMP_OPCODE 3843,127168
    JMP_OPCODE           = 0xe9,xe93843,127168
    JNE_OPCODE_1 3844,127201
    JNE_OPCODE_1         = 0x0f,x0f3844,127201
    SAHF_OPCODE 3845,127234
    SAHF_OPCODE          = 0x9e,x9e3845,127234
    LAHF_OPCODE 3846,127267
    LAHF_OPCODE          = 0x9f,x9f3846,127267
    SETO_OPCODE_1 3847,127300
    SETO_OPCODE_1        = 0x0f,x0f3847,127300
    SETO_OPCODE_2 3848,127333
    SETO_OPCODE_2        = 0x90,x903848,127333
    ADD_AL_OPCODE 3849,127366
    ADD_AL_OPCODE        = 0x04,x043849,127366
    INC_MEM32_OPCODE_1 3850,127399
    INC_MEM32_OPCODE_1   = 0xff,xff3850,127399
    MODRM16_DISP16 3851,127453
    MODRM16_DISP16       = 0x06,x063851,127453
    SIB_DISP32 3852,127523
    SIB_DISP32           = 0x25,x253852,127523
#define CTI_SHORT_REWRITE_LENGTH 3856,127677
    NUM_REGPARM 3863,127846
    REGPARM_0 3864,127876
    REGPARM_0            = REG_RDI,3864,127876
    REGPARM_1 3865,127912
    REGPARM_1            = REG_RSI,3865,127912
    REGPARM_2 3866,127948
    REGPARM_2            = REG_RDX,3866,127948
    REGPARM_3 3867,127984
    REGPARM_3            = REG_RCX,3867,127984
    REGPARM_4 3868,128020
    REGPARM_4            = REG_R8,3868,128020
    REGPARM_5 3869,128055
    REGPARM_5            = REG_R9,3869,128055
    REGPARM_MINSTACK 3870,128090
    REDZONE_SIZE 3871,128120
    NUM_REGPARM 3874,128204
    REGPARM_0 3875,128234
    REGPARM_0            = REG_RCX,3875,128234
    REGPARM_1 3876,128270
    REGPARM_1            = REG_RDX,3876,128270
    REGPARM_2 3877,128306
    REGPARM_2            = REG_R8,3877,128306
    REGPARM_3 3878,128341
    REGPARM_3            = REG_R9,3878,128341
    REGPARM_MINSTACK 3879,128376
    REGPARM_MINSTACK     = 4*sizeof(sizeof3879,128376
    REGPARM_MINSTACK     = 4*sizeof(XSP_SZ)3879,128376
    REDZONE_SIZE 3880,128421
    REGPARM_END_ALIGN 3887,128727
    NUM_REGPARM 3889,128764
    REGPARM_MINSTACK 3890,128794
    REDZONE_SIZE 3891,128824
    REGPARM_END_ALIGN 3892,128854
    REGPARM_END_ALIGN    = sizeof(3892,128854
    REGPARM_END_ALIGN    = sizeof(XSP_SZ)3892,128854
/*   0 */     OP_INVALID,3925,129903
/*   1 */     OP_UNDECODED,3926,129965
/*   2 */     OP_CONTD,3927,130031
/*   3 */     OP_LABEL,3928,130091
/*   4 */     OP_add,3930,130152
/*   5 */     OP_or,3931,130223
/*   6 */     OP_adc,3932,130293
/*   7 */     OP_sbb,3933,130364
/*   8 */     OP_and,3934,130435
/*   9 */     OP_daa,3935,130506
/*  10 */     OP_sub,3936,130577
/*  11 */     OP_das,3937,130648
/*  12 */     OP_xor,3938,130719
/*  13 */     OP_aaa,3939,130790
/*  14 */     OP_cmp,3940,130861
/*  15 */     OP_aas,3941,130932
/*  16 */     OP_inc,3942,131003
/*  17 */     OP_dec,3943,131078
/*  18 */     OP_push,3944,131153
/*  19 */     OP_push_imm,3945,131225
/*  20 */     OP_pop,3946,131301
/*  21 */     OP_pusha,3947,131372
/*  22 */     OP_popa,3948,131445
/*  23 */     OP_bound,3949,131517
/*  24 */     OP_arpl,3950,131590
/*  25 */     OP_imul,3951,131667
/*  26 */     OP_jo_short,3953,131741
/*  27 */     OP_jno_short,3954,131821
/*  28 */     OP_jb_short,3955,131902
/*  29 */     OP_jnb_short,3956,131982
/*  30 */     OP_jz_short,3957,132063
/*  31 */     OP_jnz_short,3958,132143
/*  32 */     OP_jbe_short,3959,132224
/*  33 */     OP_jnbe_short,3960,132305
/*  34 */     OP_js_short,3961,132387
/*  35 */     OP_jns_short,3962,132467
/*  36 */     OP_jp_short,3963,132548
/*  37 */     OP_jnp_short,3964,132628
/*  38 */     OP_jl_short,3965,132709
/*  39 */     OP_jnl_short,3966,132789
/*  40 */     OP_jle_short,3967,132870
/*  41 */     OP_jnle_short,3968,132951
/*  42 */     OP_call,3970,133034
/*  43 */     OP_call_ind,3971,133112
/*  44 */     OP_call_far,3972,133195
/*  45 */     OP_call_far_ind,3973,133277
/*  46 */     OP_jmp,3974,133364
/*  47 */     OP_jmp_short,3975,133441
/*  48 */     OP_jmp_ind,3976,133524
/*  49 */     OP_jmp_far,3977,133606
/*  50 */     OP_jmp_far_ind,3978,133687
/*  51 */     OP_loopne,3980,133774
/*  52 */     OP_loope,3981,133848
/*  53 */     OP_loop,3982,133921
/*  54 */     OP_jecxz,3983,133993
/*  55 */     OP_mov_ld,3987,134205
/*  56 */     OP_mov_st,3988,134282
/*  57 */     OP_mov_imm,3991,134518
/*  58 */     OP_mov_seg,3992,134596
/*  59 */     OP_mov_priv,3993,134674
/*  60 */     OP_test,3995,134755
/*  61 */     OP_lea,3996,134827
/*  62 */     OP_xchg,3997,134898
/*  63 */     OP_cwde,3998,134970
/*  64 */     OP_cdq,3999,135042
/*  65 */     OP_fwait,4000,135113
/*  66 */     OP_pushf,4001,135186
/*  67 */     OP_popf,4002,135259
/*  68 */     OP_sahf,4003,135331
/*  69 */     OP_lahf,4004,135403
/*  70 */     OP_ret,4006,135476
/*  71 */     OP_ret_far,4007,135548
/*  72 */     OP_les,4009,135625
/*  73 */     OP_lds,4010,135707
/*  74 */     OP_enter,4011,135789
/*  75 */     OP_leave,4012,135862
/*  76 */     OP_int3,4013,135935
/*  77 */     OP_int,4014,136007
/*  78 */     OP_into,4015,136078
/*  79 */     OP_iret,4016,136150
/*  80 */     OP_aam,4017,136222
/*  81 */     OP_aad,4018,136293
/*  82 */     OP_xlat,4019,136364
/*  83 */     OP_in,4020,136436
/*  84 */     OP_out,4021,136506
/*  85 */     OP_hlt,4022,136577
/*  86 */     OP_cmc,4023,136648
/*  87 */     OP_clc,4024,136719
/*  88 */     OP_stc,4025,136790
/*  89 */     OP_cli,4026,136861
/*  90 */     OP_sti,4027,136932
/*  91 */     OP_cld,4028,137003
/*  92 */     OP_std,4029,137074
/*  93 */     OP_lar,4032,137147
/*  94 */     OP_lsl,4033,137223
/*  95 */     OP_syscall,4034,137299
/*  96 */     OP_clts,4035,137379
/*  97 */     OP_sysret,4036,137456
/*  98 */     OP_invd,4037,137535
/*  99 */     OP_wbinvd,4038,137612
/* 100 */     OP_ud2a,4039,137691
/* 101 */     OP_nop_modrm,4040,137768
/* 102 */     OP_movntps,4041,137850
/* 103 */     OP_movntpd,4042,137937
/* 104 */     OP_wrmsr,4043,138024
/* 105 */     OP_rdtsc,4044,138102
/* 106 */     OP_rdmsr,4045,138180
/* 107 */     OP_rdpmc,4046,138258
/* 108 */     OP_sysenter,4047,138336
/* 109 */     OP_sysexit,4048,138417
/* 110 */     OP_cmovo,4050,138498
/* 111 */     OP_cmovno,4051,138576
/* 112 */     OP_cmovb,4052,138655
/* 113 */     OP_cmovnb,4053,138733
/* 114 */     OP_cmovz,4054,138812
/* 115 */     OP_cmovnz,4055,138890
/* 116 */     OP_cmovbe,4056,138969
/* 117 */     OP_cmovnbe,4057,139048
/* 118 */     OP_cmovs,4058,139128
/* 119 */     OP_cmovns,4059,139206
/* 120 */     OP_cmovp,4060,139285
/* 121 */     OP_cmovnp,4061,139363
/* 122 */     OP_cmovl,4062,139442
/* 123 */     OP_cmovnl,4063,139520
/* 124 */     OP_cmovle,4064,139599
/* 125 */     OP_cmovnle,4065,139678
/* 126 */     OP_punpcklbw,4067,139759
/* 127 */     OP_punpcklwd,4068,139848
/* 128 */     OP_punpckldq,4069,139937
/* 129 */     OP_packsswb,4070,140026
/* 130 */     OP_pcmpgtb,4071,140114
/* 131 */     OP_pcmpgtw,4072,140201
/* 132 */     OP_pcmpgtd,4073,140288
/* 133 */     OP_packuswb,4074,140375
/* 134 */     OP_punpckhbw,4075,140463
/* 135 */     OP_punpckhwd,4076,140552
/* 136 */     OP_punpckhdq,4077,140641
/* 137 */     OP_packssdw,4078,140730
/* 138 */     OP_punpcklqdq,4079,140818
/* 139 */     OP_punpckhqdq,4080,140908
/* 140 */     OP_movd,4081,140998
/* 141 */     OP_movq,4082,141082
/* 142 */     OP_movdqu,4083,141167
/* 143 */     OP_movdqa,4084,141255
/* 144 */     OP_pshufw,4085,141342
/* 145 */     OP_pshufd,4086,141428
/* 146 */     OP_pshufhw,4087,141514
/* 147 */     OP_pshuflw,4088,141601
/* 148 */     OP_pcmpeqb,4089,141688
/* 149 */     OP_pcmpeqw,4090,141775
/* 150 */     OP_pcmpeqd,4091,141862
/* 151 */     OP_emms,4092,141949
/* 152 */     OP_jo,4094,142032
/* 153 */     OP_jno,4095,142103
/* 154 */     OP_jb,4096,142175
/* 155 */     OP_jnb,4097,142246
/* 156 */     OP_jz,4098,142318
/* 157 */     OP_jnz,4099,142389
/* 158 */     OP_jbe,4100,142461
/* 159 */     OP_jnbe,4101,142533
/* 160 */     OP_js,4102,142606
/* 161 */     OP_jns,4103,142677
/* 162 */     OP_jp,4104,142749
/* 163 */     OP_jnp,4105,142820
/* 164 */     OP_jl,4106,142892
/* 165 */     OP_jnl,4107,142963
/* 166 */     OP_jle,4108,143035
/* 167 */     OP_jnle,4109,143107
/* 168 */     OP_seto,4111,143181
/* 169 */     OP_setno,4112,143258
/* 170 */     OP_setb,4113,143336
/* 171 */     OP_setnb,4114,143413
/* 172 */     OP_setz,4115,143491
/* 173 */     OP_setnz,4116,143568
/* 174 */     OP_setbe,4117,143646
/* 175 */     OP_setnbe,4118,143724
/* 176 */     OP_sets,4119,143805
/* 177 */     OP_setns,4120,143882
/* 178 */     OP_setp,4121,143960
/* 179 */     OP_setnp,4122,144037
/* 180 */     OP_setl,4123,144115
/* 181 */     OP_setnl,4124,144192
/* 182 */     OP_setle,4125,144270
/* 183 */     OP_setnle,4126,144348
/* 184 */     OP_cpuid,4128,144430
/* 185 */     OP_bt,4129,144508
/* 186 */     OP_shld,4130,144583
/* 187 */     OP_rsm,4131,144660
/* 188 */     OP_bts,4132,144736
/* 189 */     OP_shrd,4133,144812
/* 190 */     OP_cmpxchg,4134,144889
/* 191 */     OP_lss,4135,144969
/* 192 */     OP_btr,4136,145045
/* 193 */     OP_lfs,4137,145121
/* 194 */     OP_lgs,4138,145197
/* 195 */     OP_movzx,4139,145273
/* 196 */     OP_ud2b,4140,145351
/* 197 */     OP_btc,4141,145428
/* 198 */     OP_bsf,4142,145504
/* 199 */     OP_bsr,4143,145580
/* 200 */     OP_movsx,4144,145664
/* 201 */     OP_xadd,4145,145742
/* 202 */     OP_movnti,4146,145819
/* 203 */     OP_pinsrw,4147,145898
/* 204 */     OP_pextrw,4148,145984
/* 205 */     OP_bswap,4149,146070
/* 206 */     OP_psrlw,4150,146148
/* 207 */     OP_psrld,4151,146233
/* 208 */     OP_psrlq,4152,146318
/* 209 */     OP_paddq,4153,146403
/* 210 */     OP_pmullw,4154,146488
/* 211 */     OP_pmovmskb,4155,146574
/* 212 */     OP_psubusb,4156,146662
/* 213 */     OP_psubusw,4157,146749
/* 214 */     OP_pminub,4158,146836
/* 215 */     OP_pand,4159,146922
/* 216 */     OP_paddusb,4160,147006
/* 217 */     OP_paddusw,4161,147093
/* 218 */     OP_pmaxub,4162,147180
/* 219 */     OP_pandn,4163,147266
/* 220 */     OP_pavgb,4164,147351
/* 221 */     OP_psraw,4165,147436
/* 222 */     OP_psrad,4166,147521
/* 223 */     OP_pavgw,4167,147606
/* 224 */     OP_pmulhuw,4168,147691
/* 225 */     OP_pmulhw,4169,147778
/* 226 */     OP_movntq,4170,147864
/* 227 */     OP_movntdq,4171,147950
/* 228 */     OP_psubsb,4172,148037
/* 229 */     OP_psubsw,4173,148123
/* 230 */     OP_pminsw,4174,148209
/* 231 */     OP_por,4175,148295
/* 232 */     OP_paddsb,4176,148378
/* 233 */     OP_paddsw,4177,148464
/* 234 */     OP_pmaxsw,4178,148550
/* 235 */     OP_pxor,4179,148636
/* 236 */     OP_psllw,4180,148720
/* 237 */     OP_pslld,4181,148805
/* 238 */     OP_psllq,4182,148890
/* 239 */     OP_pmuludq,4183,148975
/* 240 */     OP_pmaddwd,4184,149062
/* 241 */     OP_psadbw,4185,149149
/* 242 */     OP_maskmovq,4186,149235
/* 243 */     OP_maskmovdqu,4187,149323
/* 244 */     OP_psubb,4188,149413
/* 245 */     OP_psubw,4189,149498
/* 246 */     OP_psubd,4190,149583
/* 247 */     OP_psubq,4191,149668
/* 248 */     OP_paddb,4192,149753
/* 249 */     OP_paddw,4193,149838
/* 250 */     OP_paddd,4194,149923
/* 251 */     OP_psrldq,4195,150009
/* 252 */     OP_pslldq,4196,150096
/* 253 */     OP_rol,4199,150185
/* 254 */     OP_ror,4200,150262
/* 255 */     OP_rcl,4201,150339
/* 256 */     OP_rcr,4202,150416
/* 257 */     OP_shl,4203,150493
/* 258 */     OP_shr,4204,150570
/* 259 */     OP_sar,4205,150647
/* 260 */     OP_not,4206,150724
/* 261 */     OP_neg,4207,150801
/* 262 */     OP_mul,4208,150878
/* 263 */     OP_div,4209,150955
/* 264 */     OP_idiv,4210,151032
/* 265 */     OP_sldt,4211,151110
/* 266 */     OP_str,4212,151188
/* 267 */     OP_lldt,4213,151265
/* 268 */     OP_ltr,4214,151343
/* 269 */     OP_verr,4215,151420
/* 270 */     OP_verw,4216,151498
/* 271 */     OP_sgdt,4217,151576
/* 272 */     OP_sidt,4218,151657
/* 273 */     OP_lgdt,4219,151738
/* 274 */     OP_lidt,4220,151819
/* 275 */     OP_smsw,4221,151900
/* 276 */     OP_lmsw,4222,151978
/* 277 */     OP_invlpg,4223,152056
/* 278 */     OP_cmpxchg8b,4224,152139
/* 279 */     OP_fxsave32,4225,152222
/* 280 */     OP_fxrstor32,4226,152307
/* 281 */     OP_ldmxcsr,4227,152393
/* 282 */     OP_stmxcsr,4228,152478
/* 283 */     OP_lfence,4229,152563
/* 284 */     OP_mfence,4230,152646
/* 285 */     OP_clflush,4231,152729
/* 286 */     OP_sfence,4232,152813
/* 287 */     OP_prefetchnta,4233,152896
/* 288 */     OP_prefetcht0,4234,152981
/* 289 */     OP_prefetcht1,4235,153065
/* 290 */     OP_prefetcht2,4236,153149
/* 291 */     OP_prefetch,4237,153233
/* 292 */     OP_prefetchw,4238,153315
/* 293 */     OP_movups,4241,153400
/* 294 */     OP_movss,4242,153485
/* 295 */     OP_movupd,4243,153569
/* 296 */     OP_movsd,4244,153654
/* 297 */     OP_movlps,4245,153738
/* 298 */     OP_movlpd,4246,153823
/* 299 */     OP_unpcklps,4247,153908
/* 300 */     OP_unpcklpd,4248,153995
/* 301 */     OP_unpckhps,4249,154082
/* 302 */     OP_unpckhpd,4250,154169
/* 303 */     OP_movhps,4251,154256
/* 304 */     OP_movhpd,4252,154341
/* 305 */     OP_movaps,4253,154426
/* 306 */     OP_movapd,4254,154511
/* 307 */     OP_cvtpi2ps,4255,154596
/* 308 */     OP_cvtsi2ss,4256,154683
/* 309 */     OP_cvtpi2pd,4257,154770
/* 310 */     OP_cvtsi2sd,4258,154857
/* 311 */     OP_cvttps2pi,4259,154944
/* 312 */     OP_cvttss2si,4260,155032
/* 313 */     OP_cvttpd2pi,4261,155120
/* 314 */     OP_cvttsd2si,4262,155208
/* 315 */     OP_cvtps2pi,4263,155296
/* 316 */     OP_cvtss2si,4264,155383
/* 317 */     OP_cvtpd2pi,4265,155470
/* 318 */     OP_cvtsd2si,4266,155557
/* 319 */     OP_ucomiss,4267,155644
/* 320 */     OP_ucomisd,4268,155730
/* 321 */     OP_comiss,4269,155816
/* 322 */     OP_comisd,4270,155901
/* 323 */     OP_movmskps,4271,155986
/* 324 */     OP_movmskpd,4272,156073
/* 325 */     OP_sqrtps,4273,156160
/* 326 */     OP_sqrtss,4274,156245
/* 327 */     OP_sqrtpd,4275,156330
/* 328 */     OP_sqrtsd,4276,156415
/* 329 */     OP_rsqrtps,4277,156500
/* 330 */     OP_rsqrtss,4278,156586
/* 331 */     OP_rcpps,4279,156672
/* 332 */     OP_rcpss,4280,156756
/* 333 */     OP_andps,4281,156840
/* 334 */     OP_andpd,4282,156924
/* 335 */     OP_andnps,4283,157008
/* 336 */     OP_andnpd,4284,157093
/* 337 */     OP_orps,4285,157178
/* 338 */     OP_orpd,4286,157261
/* 339 */     OP_xorps,4287,157344
/* 340 */     OP_xorpd,4288,157428
/* 341 */     OP_addps,4289,157512
/* 342 */     OP_addss,4290,157596
/* 343 */     OP_addpd,4291,157680
/* 344 */     OP_addsd,4292,157764
/* 345 */     OP_mulps,4293,157848
/* 346 */     OP_mulss,4294,157932
/* 347 */     OP_mulpd,4295,158016
/* 348 */     OP_mulsd,4296,158100
/* 349 */     OP_cvtps2pd,4297,158184
/* 350 */     OP_cvtss2sd,4298,158271
/* 351 */     OP_cvtpd2ps,4299,158358
/* 352 */     OP_cvtsd2ss,4300,158445
/* 353 */     OP_cvtdq2ps,4301,158532
/* 354 */     OP_cvttps2dq,4302,158619
/* 355 */     OP_cvtps2dq,4303,158707
/* 356 */     OP_subps,4304,158794
/* 357 */     OP_subss,4305,158878
/* 358 */     OP_subpd,4306,158962
/* 359 */     OP_subsd,4307,159046
/* 360 */     OP_minps,4308,159130
/* 361 */     OP_minss,4309,159214
/* 362 */     OP_minpd,4310,159298
/* 363 */     OP_minsd,4311,159382
/* 364 */     OP_divps,4312,159466
/* 365 */     OP_divss,4313,159550
/* 366 */     OP_divpd,4314,159634
/* 367 */     OP_divsd,4315,159718
/* 368 */     OP_maxps,4316,159802
/* 369 */     OP_maxss,4317,159886
/* 370 */     OP_maxpd,4318,159970
/* 371 */     OP_maxsd,4319,160054
/* 372 */     OP_cmpps,4320,160138
/* 373 */     OP_cmpss,4321,160222
/* 374 */     OP_cmppd,4322,160306
/* 375 */     OP_cmpsd,4323,160390
/* 376 */     OP_shufps,4324,160474
/* 377 */     OP_shufpd,4325,160559
/* 378 */     OP_cvtdq2pd,4326,160644
/* 379 */     OP_cvttpd2dq,4327,160731
/* 380 */     OP_cvtpd2dq,4328,160819
/* 381 */     OP_nop,4329,160906
/* 382 */     OP_pause,4330,160986
/* 383 */     OP_ins,4332,161072
/* 384 */     OP_rep_ins,4333,161151
/* 385 */     OP_outs,4334,161234
/* 386 */     OP_rep_outs,4335,161314
/* 387 */     OP_movs,4336,161398
/* 388 */     OP_rep_movs,4337,161478
/* 389 */     OP_stos,4338,161562
/* 390 */     OP_rep_stos,4339,161642
/* 391 */     OP_lods,4340,161726
/* 392 */     OP_rep_lods,4341,161806
/* 393 */     OP_cmps,4342,161890
/* 394 */     OP_rep_cmps,4343,161972
/* 395 */     OP_repne_cmps,4344,162058
/* 396 */     OP_scas,4345,162146
/* 397 */     OP_rep_scas,4346,162228
/* 398 */     OP_repne_scas,4347,162314
/* 399 */     OP_fadd,4350,162404
/* 400 */     OP_fmul,4351,162482
/* 401 */     OP_fcom,4352,162560
/* 402 */     OP_fcomp,4353,162638
/* 403 */     OP_fsub,4354,162717
/* 404 */     OP_fsubr,4355,162795
/* 405 */     OP_fdiv,4356,162874
/* 406 */     OP_fdivr,4357,162952
/* 407 */     OP_fld,4358,163031
/* 408 */     OP_fst,4359,163108
/* 409 */     OP_fstp,4360,163185
/* 410 */     OP_fldenv,4361,163263
/* 411 */     OP_fldcw,4362,163343
/* 412 */     OP_fnstenv,4363,163422
/* 413 */     OP_fnstcw,4364,163503
/* 414 */     OP_fiadd,4365,163583
/* 415 */     OP_fimul,4366,163662
/* 416 */     OP_ficom,4367,163741
/* 417 */     OP_ficomp,4368,163820
/* 418 */     OP_fisub,4369,163900
/* 419 */     OP_fisubr,4370,163979
/* 420 */     OP_fidiv,4371,164059
/* 421 */     OP_fidivr,4372,164138
/* 422 */     OP_fild,4373,164218
/* 423 */     OP_fist,4374,164296
/* 424 */     OP_fistp,4375,164374
/* 425 */     OP_frstor,4376,164453
/* 426 */     OP_fnsave,4377,164533
/* 427 */     OP_fnstsw,4378,164613
/* 428 */     OP_fbld,4380,164694
/* 429 */     OP_fbstp,4381,164772
/* 430 */     OP_fxch,4384,164853
/* 431 */     OP_fnop,4385,164936
/* 432 */     OP_fchs,4386,165019
/* 433 */     OP_fabs,4387,165102
/* 434 */     OP_ftst,4388,165185
/* 435 */     OP_fxam,4389,165268
/* 436 */     OP_fld1,4390,165351
/* 437 */     OP_fldl2t,4391,165434
/* 438 */     OP_fldl2e,4392,165519
/* 439 */     OP_fldpi,4393,165604
/* 440 */     OP_fldlg2,4394,165688
/* 441 */     OP_fldln2,4395,165773
/* 442 */     OP_fldz,4396,165858
/* 443 */     OP_f2xm1,4397,165941
/* 444 */     OP_fyl2x,4398,166025
/* 445 */     OP_fptan,4399,166109
/* 446 */     OP_fpatan,4400,166193
/* 447 */     OP_fxtract,4401,166278
/* 448 */     OP_fprem1,4402,166364
/* 449 */     OP_fdecstp,4403,166449
/* 450 */     OP_fincstp,4404,166535
/* 451 */     OP_fprem,4405,166621
/* 452 */     OP_fyl2xp1,4406,166705
/* 453 */     OP_fsqrt,4407,166791
/* 454 */     OP_fsincos,4408,166875
/* 455 */     OP_frndint,4409,166961
/* 456 */     OP_fscale,4410,167047
/* 457 */     OP_fsin,4411,167132
/* 458 */     OP_fcos,4412,167215
/* 459 */     OP_fcmovb,4413,167298
/* 460 */     OP_fcmove,4414,167383
/* 461 */     OP_fcmovbe,4415,167468
/* 462 */     OP_fcmovu,4416,167554
/* 463 */     OP_fucompp,4417,167639
/* 464 */     OP_fcmovnb,4418,167725
/* 465 */     OP_fcmovne,4419,167811
/* 466 */     OP_fcmovnbe,4420,167897
/* 467 */     OP_fcmovnu,4421,167984
/* 468 */     OP_fnclex,4422,168070
/* 469 */     OP_fninit,4423,168155
/* 470 */     OP_fucomi,4424,168240
/* 471 */     OP_fcomi,4425,168325
/* 472 */     OP_ffree,4426,168409
/* 473 */     OP_fucom,4427,168493
/* 474 */     OP_fucomp,4428,168577
/* 475 */     OP_faddp,4429,168662
/* 476 */     OP_fmulp,4430,168746
/* 477 */     OP_fcompp,4431,168830
/* 478 */     OP_fsubrp,4432,168915
/* 479 */     OP_fsubp,4433,169000
/* 480 */     OP_fdivrp,4434,169084
/* 481 */     OP_fdivp,4435,169169
/* 482 */     OP_fucomip,4436,169253
/* 483 */     OP_fcomip,4437,169339
/* 484 */     OP_fisttp,4440,169453
/* 485 */     OP_haddpd,4441,169536
/* 486 */     OP_haddps,4442,169623
/* 487 */     OP_hsubpd,4443,169710
/* 488 */     OP_hsubps,4444,169797
/* 489 */     OP_addsubpd,4445,169884
/* 490 */     OP_addsubps,4446,169973
/* 491 */     OP_lddqu,4447,170062
/* 492 */     OP_monitor,4448,170148
/* 493 */     OP_mwait,4449,170230
/* 494 */     OP_movsldup,4450,170310
/* 495 */     OP_movshdup,4451,170398
/* 496 */     OP_movddup,4452,170486
/* 497 */     OP_femms,4455,170605
/* 498 */     OP_unknown_3dnow,4456,170685
/* 499 */     OP_pavgusb,4457,170776
/* 500 */     OP_pfadd,4458,170861
/* 501 */     OP_pfacc,4459,170944
/* 502 */     OP_pfcmpge,4460,171027
/* 503 */     OP_pfcmpgt,4461,171112
/* 504 */     OP_pfcmpeq,4462,171197
/* 505 */     OP_pfmin,4463,171282
/* 506 */     OP_pfmax,4464,171365
/* 507 */     OP_pfmul,4465,171448
/* 508 */     OP_pfrcp,4466,171531
/* 509 */     OP_pfrcpit1,4467,171615
/* 510 */     OP_pfrcpit2,4468,171702
/* 511 */     OP_pfrsqrt,4469,171789
/* 512 */     OP_pfrsqit1,4470,171875
/* 513 */     OP_pmulhrw,4471,171962
/* 514 */     OP_pfsub,4472,172048
/* 515 */     OP_pfsubr,4473,172132
/* 516 */     OP_pi2fd,4474,172217
/* 517 */     OP_pf2id,4475,172301
/* 518 */     OP_pi2fw,4476,172385
/* 519 */     OP_pf2iw,4477,172469
/* 520 */     OP_pfnacc,4478,172553
/* 521 */     OP_pfpnacc,4479,172638
/* 522 */     OP_pswapd,4480,172724
/* 523 */     OP_pshufb,4483,172826
/* 524 */     OP_phaddw,4484,172915
/* 525 */     OP_phaddd,4485,173004
/* 526 */     OP_phaddsw,4486,173093
/* 527 */     OP_pmaddubsw,4487,173183
/* 528 */     OP_phsubw,4488,173275
/* 529 */     OP_phsubd,4489,173364
/* 530 */     OP_phsubsw,4490,173453
/* 531 */     OP_psignb,4491,173543
/* 532 */     OP_psignw,4492,173632
/* 533 */     OP_psignd,4493,173721
/* 534 */     OP_pmulhrsw,4494,173810
/* 535 */     OP_pabsb,4495,173901
/* 536 */     OP_pabsw,4496,173989
/* 537 */     OP_pabsd,4497,174077
/* 538 */     OP_palignr,4498,174165
/* 539 */     OP_popcnt,4501,174336
/* 540 */     OP_movntss,4502,174425
/* 541 */     OP_movntsd,4503,174514
/* 542 */     OP_extrq,4504,174603
/* 543 */     OP_insertq,4505,174691
/* 544 */     OP_lzcnt,4506,174781
/* 545 */     OP_pblendvb,4507,174869
/* 546 */     OP_blendvps,4508,174952
/* 547 */     OP_blendvpd,4509,175035
/* 548 */     OP_ptest,4510,175118
/* 549 */     OP_pmovsxbw,4511,175201
/* 550 */     OP_pmovsxbd,4512,175287
/* 551 */     OP_pmovsxbq,4513,175373
/* 552 */     OP_pmovsxdw,4514,175459
/* 553 */     OP_pmovsxwq,4515,175545
/* 554 */     OP_pmovsxdq,4516,175631
/* 555 */     OP_pmuldq,4517,175717
/* 556 */     OP_pcmpeqq,4518,175802
/* 557 */     OP_movntdqa,4519,175888
/* 558 */     OP_packusdw,4520,175975
/* 559 */     OP_pmovzxbw,4521,176062
/* 560 */     OP_pmovzxbd,4522,176149
/* 561 */     OP_pmovzxbq,4523,176236
/* 562 */     OP_pmovzxdw,4524,176323
/* 563 */     OP_pmovzxwq,4525,176410
/* 564 */     OP_pmovzxdq,4526,176497
/* 565 */     OP_pcmpgtq,4527,176584
/* 566 */     OP_pminsb,4528,176670
/* 567 */     OP_pminsd,4529,176755
/* 568 */     OP_pminuw,4530,176840
/* 569 */     OP_pminud,4531,176925
/* 570 */     OP_pmaxsb,4532,177010
/* 571 */     OP_pmaxsd,4533,177095
/* 572 */     OP_pmaxuw,4534,177180
/* 573 */     OP_pmaxud,4535,177265
/* 574 */     OP_pmulld,4536,177350
/* 575 */     OP_phminposuw,4537,177435
/* 576 */     OP_crc32,4538,177524
/* 577 */     OP_pextrb,4539,177612
/* 578 */     OP_pextrd,4540,177697
/* 579 */     OP_extractps,4541,177782
/* 580 */     OP_roundps,4542,177870
/* 581 */     OP_roundpd,4543,177956
/* 582 */     OP_roundss,4544,178042
/* 583 */     OP_roundsd,4545,178128
/* 584 */     OP_blendps,4546,178214
/* 585 */     OP_blendpd,4547,178300
/* 586 */     OP_pblendw,4548,178386
/* 587 */     OP_pinsrb,4549,178472
/* 588 */     OP_insertps,4550,178557
/* 589 */     OP_pinsrd,4551,178644
/* 590 */     OP_dpps,4552,178729
/* 591 */     OP_dppd,4553,178812
/* 592 */     OP_mpsadbw,4554,178895
/* 593 */     OP_pcmpestrm,4555,178981
/* 594 */     OP_pcmpestri,4556,179069
/* 595 */     OP_pcmpistrm,4557,179157
/* 596 */     OP_pcmpistri,4558,179245
/* 597 */     OP_movsxd,4561,179348
/* 598 */     OP_swapgs,4562,179433
/* 599 */     OP_vmcall,4565,179531
/* 600 */     OP_vmlaunch,4566,179614
/* 601 */     OP_vmresume,4567,179699
/* 602 */     OP_vmxoff,4568,179784
/* 603 */     OP_vmptrst,4569,179867
/* 604 */     OP_vmptrld,4570,179949
/* 605 */     OP_vmxon,4571,180039
/* 606 */     OP_vmclear,4572,180127
/* 607 */     OP_vmread,4573,180217
/* 608 */     OP_vmwrite,4574,180306
/* 609 */     OP_int1,4577,180420
/* 610 */     OP_salc,4578,180498
/* 611 */     OP_ffreep,4579,180576
/* 612 */     OP_vmrun,4582,180684
/* 613 */     OP_vmmcall,4583,180766
/* 614 */     OP_vmload,4584,180850
/* 615 */     OP_vmsave,4585,180933
/* 616 */     OP_stgi,4586,181016
/* 617 */     OP_clgi,4587,181097
/* 618 */     OP_skinit,4588,181178
/* 619 */     OP_invlpga,4589,181261
/* 620 */     OP_rdtscp,4591,181382
/* 621 */     OP_invept,4594,181496
/* 622 */     OP_invvpid,4595,181577
/* 623 */     OP_pclmulqdq,4598,181694
/* 624 */     OP_aesimc,4599,181782
/* 625 */     OP_aesenc,4600,181867
/* 626 */     OP_aesenclast,4601,181952
/* 627 */     OP_aesdec,4602,182041
/* 628 */     OP_aesdeclast,4603,182126
/* 629 */     OP_aeskeygenassist,4604,182215
/* 630 */     OP_movbe,4607,182341
/* 631 */     OP_xgetbv,4610,182468
/* 632 */     OP_xsetbv,4611,182551
/* 633 */     OP_xsave32,4612,182634
/* 634 */     OP_xrstor32,4613,182719
/* 635 */     OP_xsaveopt32,4614,182805
/* 636 */     OP_vmovss,4617,182908
/* 637 */     OP_vmovsd,4618,182993
/* 638 */     OP_vmovups,4619,183078
/* 639 */     OP_vmovupd,4620,183167
/* 640 */     OP_vmovlps,4621,183256
/* 641 */     OP_vmovsldup,4622,183345
/* 642 */     OP_vmovlpd,4623,183436
/* 643 */     OP_vmovddup,4624,183525
/* 644 */     OP_vunpcklps,4625,183615
/* 645 */     OP_vunpcklpd,4626,183706
/* 646 */     OP_vunpckhps,4627,183797
/* 647 */     OP_vunpckhpd,4628,183888
/* 648 */     OP_vmovhps,4629,183979
/* 649 */     OP_vmovshdup,4630,184068
/* 650 */     OP_vmovhpd,4631,184159
/* 651 */     OP_vmovaps,4632,184248
/* 652 */     OP_vmovapd,4633,184337
/* 653 */     OP_vcvtsi2ss,4634,184426
/* 654 */     OP_vcvtsi2sd,4635,184517
/* 655 */     OP_vmovntps,4636,184608
/* 656 */     OP_vmovntpd,4637,184698
/* 657 */     OP_vcvttss2si,4638,184788
/* 658 */     OP_vcvttsd2si,4639,184880
/* 659 */     OP_vcvtss2si,4640,184972
/* 660 */     OP_vcvtsd2si,4641,185063
/* 661 */     OP_vucomiss,4642,185154
/* 662 */     OP_vucomisd,4643,185244
/* 663 */     OP_vcomiss,4644,185334
/* 664 */     OP_vcomisd,4645,185423
/* 665 */     OP_vmovmskps,4646,185512
/* 666 */     OP_vmovmskpd,4647,185603
/* 667 */     OP_vsqrtps,4648,185694
/* 668 */     OP_vsqrtss,4649,185783
/* 669 */     OP_vsqrtpd,4650,185872
/* 670 */     OP_vsqrtsd,4651,185961
/* 671 */     OP_vrsqrtps,4652,186050
/* 672 */     OP_vrsqrtss,4653,186140
/* 673 */     OP_vrcpps,4654,186230
/* 674 */     OP_vrcpss,4655,186318
/* 675 */     OP_vandps,4656,186406
/* 676 */     OP_vandpd,4657,186494
/* 677 */     OP_vandnps,4658,186582
/* 678 */     OP_vandnpd,4659,186671
/* 679 */     OP_vorps,4660,186760
/* 680 */     OP_vorpd,4661,186847
/* 681 */     OP_vxorps,4662,186934
/* 682 */     OP_vxorpd,4663,187022
/* 683 */     OP_vaddps,4664,187110
/* 684 */     OP_vaddss,4665,187198
/* 685 */     OP_vaddpd,4666,187286
/* 686 */     OP_vaddsd,4667,187374
/* 687 */     OP_vmulps,4668,187462
/* 688 */     OP_vmulss,4669,187550
/* 689 */     OP_vmulpd,4670,187638
/* 690 */     OP_vmulsd,4671,187726
/* 691 */     OP_vcvtps2pd,4672,187814
/* 692 */     OP_vcvtss2sd,4673,187905
/* 693 */     OP_vcvtpd2ps,4674,187996
/* 694 */     OP_vcvtsd2ss,4675,188087
/* 695 */     OP_vcvtdq2ps,4676,188178
/* 696 */     OP_vcvttps2dq,4677,188269
/* 697 */     OP_vcvtps2dq,4678,188361
/* 698 */     OP_vsubps,4679,188452
/* 699 */     OP_vsubss,4680,188540
/* 700 */     OP_vsubpd,4681,188628
/* 701 */     OP_vsubsd,4682,188716
/* 702 */     OP_vminps,4683,188804
/* 703 */     OP_vminss,4684,188892
/* 704 */     OP_vminpd,4685,188980
/* 705 */     OP_vminsd,4686,189068
/* 706 */     OP_vdivps,4687,189156
/* 707 */     OP_vdivss,4688,189244
/* 708 */     OP_vdivpd,4689,189332
/* 709 */     OP_vdivsd,4690,189420
/* 710 */     OP_vmaxps,4691,189508
/* 711 */     OP_vmaxss,4692,189596
/* 712 */     OP_vmaxpd,4693,189684
/* 713 */     OP_vmaxsd,4694,189772
/* 714 */     OP_vpunpcklbw,4695,189860
/* 715 */     OP_vpunpcklwd,4696,189952
/* 716 */     OP_vpunpckldq,4697,190044
/* 717 */     OP_vpacksswb,4698,190136
/* 718 */     OP_vpcmpgtb,4699,190227
/* 719 */     OP_vpcmpgtw,4700,190317
/* 720 */     OP_vpcmpgtd,4701,190407
/* 721 */     OP_vpackuswb,4702,190497
/* 722 */     OP_vpunpckhbw,4703,190588
/* 723 */     OP_vpunpckhwd,4704,190680
/* 724 */     OP_vpunpckhdq,4705,190772
/* 725 */     OP_vpackssdw,4706,190864
/* 726 */     OP_vpunpcklqdq,4707,190955
/* 727 */     OP_vpunpckhqdq,4708,191048
/* 728 */     OP_vmovd,4709,191141
/* 729 */     OP_vpshufhw,4710,191228
/* 730 */     OP_vpshufd,4711,191318
/* 731 */     OP_vpshuflw,4712,191407
/* 732 */     OP_vpcmpeqb,4713,191497
/* 733 */     OP_vpcmpeqw,4714,191587
/* 734 */     OP_vpcmpeqd,4715,191677
/* 735 */     OP_vmovq,4716,191767
/* 736 */     OP_vcmpps,4717,191854
/* 737 */     OP_vcmpss,4718,191942
/* 738 */     OP_vcmppd,4719,192030
/* 739 */     OP_vcmpsd,4720,192118
/* 740 */     OP_vpinsrw,4721,192206
/* 741 */     OP_vpextrw,4722,192295
/* 742 */     OP_vshufps,4723,192384
/* 743 */     OP_vshufpd,4724,192473
/* 744 */     OP_vpsrlw,4725,192562
/* 745 */     OP_vpsrld,4726,192650
/* 746 */     OP_vpsrlq,4727,192738
/* 747 */     OP_vpaddq,4728,192826
/* 748 */     OP_vpmullw,4729,192914
/* 749 */     OP_vpmovmskb,4730,193003
/* 750 */     OP_vpsubusb,4731,193094
/* 751 */     OP_vpsubusw,4732,193184
/* 752 */     OP_vpminub,4733,193274
/* 753 */     OP_vpand,4734,193363
/* 754 */     OP_vpaddusb,4735,193450
/* 755 */     OP_vpaddusw,4736,193540
/* 756 */     OP_vpmaxub,4737,193630
/* 757 */     OP_vpandn,4738,193719
/* 758 */     OP_vpavgb,4739,193807
/* 759 */     OP_vpsraw,4740,193895
/* 760 */     OP_vpsrad,4741,193983
/* 761 */     OP_vpavgw,4742,194071
/* 762 */     OP_vpmulhuw,4743,194159
/* 763 */     OP_vpmulhw,4744,194249
/* 764 */     OP_vcvtdq2pd,4745,194338
/* 765 */     OP_vcvttpd2dq,4746,194429
/* 766 */     OP_vcvtpd2dq,4747,194521
/* 767 */     OP_vmovntdq,4748,194612
/* 768 */     OP_vpsubsb,4749,194702
/* 769 */     OP_vpsubsw,4750,194791
/* 770 */     OP_vpminsw,4751,194880
/* 771 */     OP_vpor,4752,194969
/* 772 */     OP_vpaddsb,4753,195055
/* 773 */     OP_vpaddsw,4754,195144
/* 774 */     OP_vpmaxsw,4755,195233
/* 775 */     OP_vpxor,4756,195322
/* 776 */     OP_vpsllw,4757,195409
/* 777 */     OP_vpslld,4758,195497
/* 778 */     OP_vpsllq,4759,195585
/* 779 */     OP_vpmuludq,4760,195673
/* 780 */     OP_vpmaddwd,4761,195763
/* 781 */     OP_vpsadbw,4762,195853
/* 782 */     OP_vmaskmovdqu,4763,195942
/* 783 */     OP_vpsubb,4764,196035
/* 784 */     OP_vpsubw,4765,196123
/* 785 */     OP_vpsubd,4766,196211
/* 786 */     OP_vpsubq,4767,196299
/* 787 */     OP_vpaddb,4768,196387
/* 788 */     OP_vpaddw,4769,196475
/* 789 */     OP_vpaddd,4770,196563
/* 790 */     OP_vpsrldq,4771,196652
/* 791 */     OP_vpslldq,4772,196742
/* 792 */     OP_vmovdqu,4773,196832
/* 793 */     OP_vmovdqa,4774,196922
/* 794 */     OP_vhaddpd,4775,197012
/* 795 */     OP_vhaddps,4776,197102
/* 796 */     OP_vhsubpd,4777,197192
/* 797 */     OP_vhsubps,4778,197282
/* 798 */     OP_vaddsubpd,4779,197372
/* 799 */     OP_vaddsubps,4780,197464
/* 800 */     OP_vlddqu,4781,197556
/* 801 */     OP_vpshufb,4782,197645
/* 802 */     OP_vphaddw,4783,197735
/* 803 */     OP_vphaddd,4784,197825
/* 804 */     OP_vphaddsw,4785,197915
/* 805 */     OP_vpmaddubsw,4786,198006
/* 806 */     OP_vphsubw,4787,198099
/* 807 */     OP_vphsubd,4788,198189
/* 808 */     OP_vphsubsw,4789,198279
/* 809 */     OP_vpsignb,4790,198370
/* 810 */     OP_vpsignw,4791,198460
/* 811 */     OP_vpsignd,4792,198550
/* 812 */     OP_vpmulhrsw,4793,198640
/* 813 */     OP_vpabsb,4794,198732
/* 814 */     OP_vpabsw,4795,198821
/* 815 */     OP_vpabsd,4796,198910
/* 816 */     OP_vpalignr,4797,198999
/* 817 */     OP_vpblendvb,4798,199090
/* 818 */     OP_vblendvps,4799,199178
/* 819 */     OP_vblendvpd,4800,199266
/* 820 */     OP_vptest,4801,199354
/* 821 */     OP_vpmovsxbw,4802,199439
/* 822 */     OP_vpmovsxbd,4803,199527
/* 823 */     OP_vpmovsxbq,4804,199615
/* 824 */     OP_vpmovsxdw,4805,199703
/* 825 */     OP_vpmovsxwq,4806,199791
/* 826 */     OP_vpmovsxdq,4807,199879
/* 827 */     OP_vpmuldq,4808,199967
/* 828 */     OP_vpcmpeqq,4809,200053
/* 829 */     OP_vmovntdqa,4810,200140
/* 830 */     OP_vpackusdw,4811,200228
/* 831 */     OP_vpmovzxbw,4812,200316
/* 832 */     OP_vpmovzxbd,4813,200404
/* 833 */     OP_vpmovzxbq,4814,200492
/* 834 */     OP_vpmovzxdw,4815,200580
/* 835 */     OP_vpmovzxwq,4816,200668
/* 836 */     OP_vpmovzxdq,4817,200756
/* 837 */     OP_vpcmpgtq,4818,200844
/* 838 */     OP_vpminsb,4819,200931
/* 839 */     OP_vpminsd,4820,201017
/* 840 */     OP_vpminuw,4821,201103
/* 841 */     OP_vpminud,4822,201189
/* 842 */     OP_vpmaxsb,4823,201275
/* 843 */     OP_vpmaxsd,4824,201361
/* 844 */     OP_vpmaxuw,4825,201447
/* 845 */     OP_vpmaxud,4826,201533
/* 846 */     OP_vpmulld,4827,201619
/* 847 */     OP_vphminposuw,4828,201705
/* 848 */     OP_vaesimc,4829,201795
/* 849 */     OP_vaesenc,4830,201881
/* 850 */     OP_vaesenclast,4831,201967
/* 851 */     OP_vaesdec,4832,202057
/* 852 */     OP_vaesdeclast,4833,202143
/* 853 */     OP_vpextrb,4834,202233
/* 854 */     OP_vpextrd,4835,202319
/* 855 */     OP_vextractps,4836,202405
/* 856 */     OP_vroundps,4837,202494
/* 857 */     OP_vroundpd,4838,202581
/* 858 */     OP_vroundss,4839,202668
/* 859 */     OP_vroundsd,4840,202755
/* 860 */     OP_vblendps,4841,202842
/* 861 */     OP_vblendpd,4842,202929
/* 862 */     OP_vpblendw,4843,203016
/* 863 */     OP_vpinsrb,4844,203103
/* 864 */     OP_vinsertps,4845,203189
/* 865 */     OP_vpinsrd,4846,203277
/* 866 */     OP_vdpps,4847,203363
/* 867 */     OP_vdppd,4848,203447
/* 868 */     OP_vmpsadbw,4849,203531
/* 869 */     OP_vpcmpestrm,4850,203618
/* 870 */     OP_vpcmpestri,4851,203707
/* 871 */     OP_vpcmpistrm,4852,203796
/* 872 */     OP_vpcmpistri,4853,203885
/* 873 */     OP_vpclmulqdq,4854,203974
/* 874 */     OP_vaeskeygenassist,4855,204063
/* 875 */     OP_vtestps,4856,204160
/* 876 */     OP_vtestpd,4857,204246
/* 877 */     OP_vzeroupper,4858,204332
/* 878 */     OP_vzeroall,4859,204422
/* 879 */     OP_vldmxcsr,4860,204510
/* 880 */     OP_vstmxcsr,4861,204597
/* 881 */     OP_vbroadcastss,4862,204684
/* 882 */     OP_vbroadcastsd,4863,204775
/* 883 */     OP_vbroadcastf128,4864,204867
/* 884 */     OP_vmaskmovps,4865,204961
/* 885 */     OP_vmaskmovpd,4866,205050
/* 886 */     OP_vpermilps,4867,205139
/* 887 */     OP_vpermilpd,4868,205227
/* 888 */     OP_vperm2f128,4869,205315
/* 889 */     OP_vinsertf128,4870,205404
/* 890 */     OP_vextractf128,4871,205494
/* 891 */     OP_vcvtph2ps,4872,205586
/* 892 */     OP_vcvtps2ph,4873,205674
/* 893 */     OP_vfmadd132ps,4876,205777
/* 894 */     OP_vfmadd132pd,4877,205869
/* 895 */     OP_vfmadd213ps,4878,205961
/* 896 */     OP_vfmadd213pd,4879,206053
/* 897 */     OP_vfmadd231ps,4880,206145
/* 898 */     OP_vfmadd231pd,4881,206237
/* 899 */     OP_vfmadd132ss,4882,206329
/* 900 */     OP_vfmadd132sd,4883,206421
/* 901 */     OP_vfmadd213ss,4884,206513
/* 902 */     OP_vfmadd213sd,4885,206605
/* 903 */     OP_vfmadd231ss,4886,206697
/* 904 */     OP_vfmadd231sd,4887,206789
/* 905 */     OP_vfmaddsub132ps,4888,206881
/* 906 */     OP_vfmaddsub132pd,4889,206976
/* 907 */     OP_vfmaddsub213ps,4890,207071
/* 908 */     OP_vfmaddsub213pd,4891,207166
/* 909 */     OP_vfmaddsub231ps,4892,207261
/* 910 */     OP_vfmaddsub231pd,4893,207356
/* 911 */     OP_vfmsubadd132ps,4894,207451
/* 912 */     OP_vfmsubadd132pd,4895,207546
/* 913 */     OP_vfmsubadd213ps,4896,207641
/* 914 */     OP_vfmsubadd213pd,4897,207736
/* 915 */     OP_vfmsubadd231ps,4898,207831
/* 916 */     OP_vfmsubadd231pd,4899,207926
/* 917 */     OP_vfmsub132ps,4900,208021
/* 918 */     OP_vfmsub132pd,4901,208113
/* 919 */     OP_vfmsub213ps,4902,208205
/* 920 */     OP_vfmsub213pd,4903,208297
/* 921 */     OP_vfmsub231ps,4904,208389
/* 922 */     OP_vfmsub231pd,4905,208481
/* 923 */     OP_vfmsub132ss,4906,208573
/* 924 */     OP_vfmsub132sd,4907,208665
/* 925 */     OP_vfmsub213ss,4908,208757
/* 926 */     OP_vfmsub213sd,4909,208849
/* 927 */     OP_vfmsub231ss,4910,208941
/* 928 */     OP_vfmsub231sd,4911,209033
/* 929 */     OP_vfnmadd132ps,4912,209125
/* 930 */     OP_vfnmadd132pd,4913,209218
/* 931 */     OP_vfnmadd213ps,4914,209311
/* 932 */     OP_vfnmadd213pd,4915,209404
/* 933 */     OP_vfnmadd231ps,4916,209497
/* 934 */     OP_vfnmadd231pd,4917,209590
/* 935 */     OP_vfnmadd132ss,4918,209683
/* 936 */     OP_vfnmadd132sd,4919,209776
/* 937 */     OP_vfnmadd213ss,4920,209869
/* 938 */     OP_vfnmadd213sd,4921,209962
/* 939 */     OP_vfnmadd231ss,4922,210055
/* 940 */     OP_vfnmadd231sd,4923,210148
/* 941 */     OP_vfnmsub132ps,4924,210241
/* 942 */     OP_vfnmsub132pd,4925,210334
/* 943 */     OP_vfnmsub213ps,4926,210427
/* 944 */     OP_vfnmsub213pd,4927,210520
/* 945 */     OP_vfnmsub231ps,4928,210613
/* 946 */     OP_vfnmsub231pd,4929,210706
/* 947 */     OP_vfnmsub132ss,4930,210799
/* 948 */     OP_vfnmsub132sd,4931,210892
/* 949 */     OP_vfnmsub213ss,4932,210985
/* 950 */     OP_vfnmsub213sd,4933,211078
/* 951 */     OP_vfnmsub231ss,4934,211171
/* 952 */     OP_vfnmsub231sd,4935,211264
/* 953 */     OP_movq2dq,4937,211358
/* 954 */     OP_movdq2q,4938,211447
/* 955 */     OP_fxsave64,4940,211537
/* 956 */     OP_fxrstor64,4941,211625
/* 957 */     OP_xsave64,4942,211714
/* 958 */     OP_xrstor64,4943,211801
/* 959 */     OP_xsaveopt64,4944,211889
/* 960 */     OP_jmpe,4948,212081
/* 961 */     OP_jmpe_abs,4949,212156
    OP_AFTER_LAST,4952,212243
    OP_FIRST 4953,212262
    OP_FIRST = OP_add,4953,212262
    OP_LAST 4954,212323
    OP_LAST  = OP_AFTER_LAST 4954,212323
#define OP_LAST 4959,212472
#define OP_cbw 4968,212735
#define OP_cwd 4969,212817
#define OP_jcxz 4970,212898
#define OP_jrcxz 4972,213029
#define OP_cmpxchg16b 4973,213116
#define OP_pextrq 4974,213203
#define OP_pinsrq 4975,213290
#define OP_movhlps 4977,213418
#define OP_movlhps 4978,213503
#define OP_jae_short 4980,213610
#define OP_jnae_short 4981,213679
#define OP_ja_short 4982,213748
#define OP_jna_short 4983,213817
#define OP_je_short 4984,213886
#define OP_jne_short 4985,213955
#define OP_jge_short 4986,214024
#define OP_jg_short 4987,214093
#define OP_jae 4988,214162
#define OP_jnae 4989,214225
#define OP_ja 4990,214288
#define OP_jna 4991,214351
#define OP_je 4992,214414
#define OP_jne 4993,214477
#define OP_jge 4994,214540
#define OP_jg 4995,214603
#define OP_setae 4996,214666
#define OP_setnae 4997,214729
#define OP_seta 4998,214792
#define OP_setna 4999,214855
#define OP_sete 5000,214918
#define OP_setne 5001,214981
#define OP_setge 5002,215044
#define OP_setg 5003,215107
#define OP_cmovae 5004,215170
#define OP_cmovnae 5005,215233
#define OP_cmova 5006,215296
#define OP_cmovna 5007,215359
#define OP_cmove 5008,215422
#define OP_cmovne 5009,215485
#define OP_cmovge 5010,215548
#define OP_cmovg 5011,215611
# define OP_fxsave 5013,215686
# define OP_fxrstor 5014,215754
# define OP_xsave 5015,215822
# define OP_xrstor 5016,215890
# define OP_xsaveopt 5017,215958
#define OP_icebp 5020,216060
#define OP_setalc 5021,216085

x86/instr.c,12840
#define INSTR_INLINE 53,2567
# undef ASSERT_TRUNCATE76,3107
# undef ASSERT_BITFIELD_TRUNCATE77,3131
# undef ASSERT_NOT_REACHED78,3164
# define ASSERT_TRUNCATE 79,3191
# define ASSERT_BITFIELD_TRUNCATE 80,3260
# define ASSERT_NOT_REACHED 81,3338
#undef opnd_is_null96,3598
#undef opnd_is_immed_int97,3618
#undef opnd_is_immed_float98,3643
#undef opnd_is_near_pc99,3670
#undef opnd_is_near_instr100,3693
#undef opnd_is_reg101,3719
#undef opnd_is_base_disp102,3738
#undef opnd_is_far_pc103,3763
#undef opnd_is_far_instr104,3785
#undef opnd_is_mem_instr105,3810
#undef opnd_is_valid106,3835
bool opnd_is_null 107,3856
bool opnd_is_immed_int 108,3921
bool opnd_is_immed_float(109,3991
bool opnd_is_near_pc 110,4063
bool opnd_is_near_instr 111,4131
bool opnd_is_reg 112,4202
bool opnd_is_base_disp 113,4266
bool opnd_is_far_pc 114,4336
bool opnd_is_far_instr 115,4403
bool opnd_is_mem_instr 116,4473
bool opnd_is_valid 117,4543
#define opnd_is_null 118,4609
#define opnd_is_immed_int 119,4654
#define opnd_is_immed_float 120,4704
#define opnd_is_near_pc 121,4756
#define opnd_is_near_instr 122,4804
#define opnd_is_reg 123,4855
#define opnd_is_base_disp 124,4899
#define opnd_is_far_pc 125,4949
#define opnd_is_far_instr 126,4996
#define opnd_is_mem_instr 127,5046
#define opnd_is_valid 128,5096
# undef opnd_is_rel_addr131,5154
bool opnd_is_rel_addr(132,5179
# define opnd_is_rel_addr 133,5245
opnd_is_abs_base_disp(138,5392
bool opnd_is_abs_addr(142,5552
bool opnd_is_near_abs_addr(145,5669
bool opnd_is_far_abs_addr(148,5781
opnd_is_reg_32bit(153,5898
reg_is_32bit(161,6033
opnd_is_reg_64bit(167,6126
reg_is_64bit(175,6261
opnd_is_reg_pointer_sized(181,6354
reg_is_pointer_sized(189,6505
#undef opnd_get_reg198,6681
opnd_get_reg(200,6710
#define opnd_get_reg 204,6771
opnd_get_size(207,6818
opnd_set_size(236,7449
opnd_create_immed_int(257,7860
opnd_create_immed_float(282,8780
opnd_create_immed_float_zero(297,9211
opnd_get_immed_int(309,9539
opnd_get_immed_float(317,9775
opnd_create_far_pc(332,10196
opnd_create_instr_ex(342,10395
opnd_create_instr(353,10618
opnd_create_far_instr(359,10717
opnd_create_mem_instr(370,10940
opnd_get_pc(381,11174
opnd_get_segment_selector(393,11428
opnd_get_instr(404,11756
opnd_get_shift(413,11955
opnd_get_mem_instr_disp(420,12110
opnd_create_base_disp_ex(430,12345
opnd_create_base_disp(440,12800
opnd_create_far_base_disp_ex(448,13086
opnd_create_far_base_disp(479,14642
#undef opnd_get_base486,14938
#undef opnd_get_disp487,14959
#undef opnd_get_index488,14980
#undef opnd_get_scale489,15002
#undef opnd_get_segment490,15024
reg_id_t opnd_get_base 491,15048
int      opnd_get_disp 492,15119
reg_id_t opnd_get_index 493,15190
int      opnd_get_scale 494,15262
reg_id_t opnd_get_segment(495,15334
#define opnd_get_base 496,15408
#define opnd_get_disp 497,15445
#define opnd_get_index 498,15482
#define opnd_get_scale 499,15520
#define opnd_get_segment 500,15558
opnd_is_disp_encode_zero(503,15606
opnd_is_disp_force_full(512,15841
opnd_is_disp_short_addr(521,16073
opnd_set_disp(530,16305
opnd_set_disp_ex(539,16514
opnd_create_abs_addr(552,17039
opnd_create_far_abs_addr(558,17172
opnd_create_rel_addr(596,18687
opnd_create_far_rel_addr(608,19129
opnd_get_addr(624,19630
opnd_is_memory_reference(638,20030
opnd_is_far_memory_reference(646,20227
opnd_is_near_memory_reference(653,20401
opnd_num_regs_used(661,20617
opnd_get_reg_used(694,21399
const reg_id_t regparms[regparms757,23316
const reg_id_t dr_reg_fixer[dr_reg_fixer768,23535
reg_check_reg_fixer(795,25243
opnd_uses_reg(811,25810
opnd_replace_reg(847,26746
bool opnd_same_address(917,29159
opnd_same_sizes_ok(952,30234
bool opnd_same(970,30926
bool opnd_share_reg(1037,33746
range_overlap(1067,34556
bool opnd_defines_use(1087,35064
opnd_size_in_bytes(1148,37163
opnd_size_from_bytes(1232,39424
opnd_shrink_to_16_bits(1256,40026
opnd_shrink_to_32_bits(1276,40674
reg_get_value_helper(1294,41146
reg_get_value_priv(1308,41544
reg_get_value(1346,42858
reg_set_value_priv(1355,43188
reg_set_value(1368,43509
opnd_compute_address_priv(1381,44031
opnd_compute_address(1427,45570
get_register_name(1438,45958
reg_to_pointer_sized(1444,46031
reg_32_to_16(1450,46110
reg_32_to_8(1458,46318
reg_32_to_64(1476,46726
reg_64_to_32(1484,46934
reg_is_extended(1492,47138
reg_32_to_opsz(1508,47825
reg_resize_to_opsz(1528,48344
reg_parameter_num(1536,48585
opnd_get_reg_dcontext_offs(1547,48752
opnd_get_reg_mcontext_offs(1574,49534
reg_overlap(1580,49639
enum {REG_INVALID_BITS REG_INVALID_BITS1597,50171
enum {REG_INVALID_BITS = 0x0}x01597,50171
reg_get_bits(1599,50251
reg_get_size(1633,51705
instr_create(1674,53037
instr_destroy(1686,53478
instr_clone(1696,53786
instr_init(1746,56017
instr_free(1756,56360
instr_mem_usage(1789,57633
instr_reset(1822,58648
instr_reuse(1837,59174
instr_build(1884,60605
instr_build_bits(1893,60880
private_instr_encode(1907,61375
#define inlined_instr_get_opcode(1982,64715
instr_get_opcode(1988,64983
#define instr_get_opcode 1993,65137
instr_being_modified(1996,65207
instr_set_opcode(2007,65563
instr_valid(2028,66510
instr_get_app_pc(2036,66670
instr_opcode_valid(2047,67010
instr_get_instr_info(2054,67148
get_instr_info(2060,67258
#undef instr_get_src2065,67319
instr_get_src(2067,67347
#define instr_get_src 2071,67429
uint instr_get_src_kind(2076,67526
#undef instr_get_dst2082,67646
instr_get_dst(2084,67674
#define instr_get_dst 2088,67756
uint instr_get_dst_kind(2093,67853
instr_set_num_opnds(2103,68118
instr_set_src(2134,69575
instr_set_dst(2150,70139
#undef instr_get_target2160,70531
instr_get_target(2162,70562
#define instr_get_target 2166,70635
instr_set_target(2172,70774
instr_set_prefix_flag(2185,71212
instr_get_prefix_flag(2193,71382
instr_set_prefixes(2199,71489
instr_get_prefixes(2206,71641
instr_set_x86_mode(2217,71875
instr_get_x86_mode(2230,72187
instr_branch_targets_prefix(2249,72834
instr_branch_set_prefix_target(2268,73608
instr_branch_special_exit(2279,73900
instr_branch_set_special_exit(2288,74117
instr_exit_branch_type(2299,74374
instr_exit_branch_set_type(2307,74505
instr_set_ok_to_mangle(2316,74694
instr_is_meta_may_fault(2325,74866
instr_set_meta_may_fault(2332,75044
instr_set_meta_no_translation(2342,75343
instr_set_ok_to_emit(2349,75481
instr_set_exit_stub_code(2369,76231
instr_exit_stub_code(2397,77361
instr_get_eflags(2410,77674
instr_get_opcode_eflags(2448,79176
instr_get_arith_flags(2456,79377
instr_eflags_valid(2466,79596
instr_set_eflags_valid(2472,79696
instr_arith_flags_valid(2487,80119
instr_set_arith_flags_valid(2495,80336
instr_set_operands_valid(2506,80572
instr_set_raw_bits(2516,80812
instr_shift_raw_bits(2541,81733
instr_set_raw_bits_valid(2554,82064
instr_free_raw_bits(2572,82578
instr_allocate_raw_bits(2586,83022
instr_set_translation(2617,84255
instr_get_translation(2627,84487
instr_make_persistent(2640,84979
instr_get_raw_bits(2649,85234
instr_get_raw_byte(2656,85340
instr_get_raw_word(2665,85626
instr_set_raw_byte(2678,86072
instr_set_raw_bytes(2695,86688
instr_set_raw_word(2712,87319
instr_length(2725,87792
instr_expand(2781,90074
instr_is_level_0(2884,94380
instr_get_next_expanded(2915,95683
instr_get_prev_expanded(2926,96097
instrlist_first_expanded(2937,96513
instrlist_last_expanded(2949,96915
instr_decode_cti(2968,97736
instr_decode_opcode(2998,99084
instr_decode(3030,100424
instr_decode_with_current_dcontext(3065,101847
instrlist_decode_cti(3084,102617
loginst(3163,105884
logopnd(3173,106154
logtrace(3184,106422
instr_shrink_to_16_bits(3203,107038
instr_shrink_to_32_bits(3237,108188
instr_uses_reg(3258,108868
bool instr_reg_in_dst(3263,108989
instr_reg_in_src(3273,109206
instr_reads_from_reg(3286,109543
bool instr_writes_to_reg(3303,109915
bool instr_writes_to_exact_reg(3317,110306
bool instr_replace_src_opnd(3330,110592
bool instr_same(3347,110988
bool instr_reads_memory(3384,112007
bool instr_writes_memory(3406,112554
instr_rip_rel_valid(3433,113635
instr_set_rip_rel_valid(3439,113764
instr_get_rip_rel_pos(3448,113941
instr_set_rip_rel_pos(3454,114020
instr_get_rel_addr_target(3463,114289
instr_has_rel_addr_reference(3500,115374
instr_get_rel_addr_dst_idx(3506,115479
instr_get_rel_addr_src_idx(3522,115813
instr_is_our_mangling(3539,116165
instr_set_our_mangling(3545,116264
instr_compute_address_ex_priv(3557,116561
instr_compute_address_ex(3602,117906
instr_compute_address_ex_pos(3613,118327
instr_compute_address_priv(3628,119012
instr_compute_address(3638,119223
instr_memory_reference_size(3648,119559
decode_memory_reference_size(3673,120312
instr_get_label_data_area(3689,120798
instr_branch_type(3700,121045
instr_get_branch_target_pc(3749,123046
instr_set_branch_target_pc(3759,123340
instr_is_exit_cti(3773,123834
instr_is_mov(3789,124310
opcode_is_call(3800,124558
instr_is_call(3809,124728
instr_is_call_direct(3816,124840
instr_is_near_call_direct(3823,124978
instr_is_call_indirect(3830,125099
instr_is_return(3837,125246
opcode_is_cbr(3846,125465
instr_is_cbr(3854,125658
opcode_is_mbr(3861,125804
instr_is_mbr(3873,126070
instr_is_far_cti(3880,126207
instr_is_far_abs_cti(3892,126539
opcode_is_ubr(3899,126686
instr_is_ubr(3907,126815
instr_is_near_ubr(3914,126956
instr_is_cti(3922,127135
instr_is_cti_short(3934,127571
instr_is_cti_loop(3958,128529
instr_is_cti_short_rewrite(3975,129266
instr_is_interrupt(4024,131268
instr_get_interrupt_number(4031,131415
instr_is_syscall(4052,132199
instr_is_wow64_syscall(4082,132942
instr_is_mov_constant(4111,133906
bool instr_is_prefetch(4131,134469
instr_is_floating_ex(4147,134805
instr_is_floating(4388,144564
instr_saves_float_pc(4394,144654
opcode_is_mmx(4403,144941
opcode_is_sse_or_sse2(4419,145647
type_is_sse(4444,146930
instr_is_mmx(4450,147034
instr_is_sse_or_sse2(4469,147644
instr_is_mov_imm_to_tos(4481,147854
instr_is_label(4495,148394
instr_is_undefined(4502,148578
instr_invert_cbr(4514,148895
instr_convert_short_meta_jmp_to_long(4606,153187
instr_cbr_taken(4622,153888
opc_jcc_taken(4648,154833
instr_jcc_taken(4693,156544
instr_cmovcc_to_jcc(4706,156931
instr_cmovcc_triggered(4735,157933
instr_uses_fp_reg(4743,158122
reg_is_gpr(4774,159032
reg_is_segment(4780,159114
reg_is_ymm(4786,159198
reg_is_xmm(4792,159287
reg_is_mmx(4799,159403
reg_is_fp(4805,159492
instr_create_0dst_0src(4831,160364
instr_create_0dst_1src(4838,160507
instr_create_0dst_2src(4846,160693
instr_create_0dst_3src(4856,160949
instr_create_1dst_0src(4867,161250
instr_create_1dst_1src(4875,161436
instr_create_1dst_2src(4885,161688
instr_create_1dst_3src(4896,161987
instr_create_1dst_5src(4908,162331
instr_create_2dst_0src(4923,162788
instr_create_2dst_1src(4933,163044
instr_create_2dst_2src(4944,163343
instr_create_2dst_3src(4956,163689
instr_create_2dst_4src(4969,164080
instr_create_3dst_0src(4984,164539
instr_create_3dst_3src(4995,164840
instr_create_3dst_4src(5010,165299
instr_create_3dst_5src(5026,165803
instr_create_4dst_1src(5044,166375
instr_create_4dst_4src(5058,166787
instr_create_popa(5075,167335
instr_create_pusha(5092,168020
instr_create_raw_1byte(5115,168922
instr_create_raw_2bytes(5123,169110
instr_create_raw_3bytes(5133,169373
instr_create_raw_4bytes(5144,169686
instr_create_raw_5bytes(5157,170073
instr_create_raw_6bytes(5171,170510
instr_create_raw_7bytes(5187,171021
instr_create_raw_8bytes(5204,171582
instr_create_nbyte_nop(5223,172217
instr_is_nop(5259,173655
dcontext_opnd_common(5294,175349
opnd_create_dcontext_field_sz(5321,176604
opnd_create_dcontext_field(5327,176763
opnd_create_dcontext_field_via_reg_sz(5334,176980
opnd_create_dcontext_field_via_reg(5342,177274
opnd_create_dcontext_field_byte(5348,177446
instr_create_restore_from_dcontext(5354,177598
instr_create_save_to_dcontext(5365,177995
instr_create_restore_from_dc_via_reg(5381,178647
instr_create_save_to_dc_via_reg(5399,179412
instr_create_save_immed_to_dcontext(5414,180024
instr_create_jump_via_dcontext(5423,180376
instr_create_restore_dynamo_stack(5434,180739
update_dcontext_address(5440,180888
opnd_create_tls_slot(5471,182184
opnd_create_sized_tls_slot(5477,182282
instr_raw_is_tls_spill(5488,182684
instr_check_tls_spill_restore(5523,184236
instr_is_tls_spill(5563,185623
instr_is_tls_restore(5576,186070
instr_is_tls_xcx_spill(5590,186553
instr_check_mcontext_spill_restore(5602,186952
instr_is_reg_spill_or_restore(5646,188375
instr_create_save_to_tls(5679,189558
instr_create_restore_from_tls(5686,189786
instr_create_save_to_reg(5694,190095
instr_create_restore_from_reg(5700,190275
instr_raw_is_rip_rel_lea(5711,190617
move_mm_reg_opcode(5731,191306

x86/encode.c,1555
# undef ASSERT_TRUNCATE53,2317
# undef ASSERT_BITFIELD_TRUNCATE54,2341
# undef ASSERT_NOT_REACHED55,2374
# define ASSERT_TRUNCATE 56,2401
# define ASSERT_BITFIELD_TRUNCATE 57,2470
# define ASSERT_NOT_REACHED 58,2548
#define ENC_LEVEL 62,2701
const char * const type_names[type_names64,2722
const char * const reg_names[reg_names117,4611
const char * const size_names[size_names143,6057
template_optype_is_reg(265,11129
type_instr_uses_reg_bits(300,12035
type_uses_modrm_bits(316,12274
size_ok_varsz(339,12852
resolve_var_x64_size(481,19227
size_ok(512,20763
immed_size_ok(747,30188
reg_set_ext_prefixes(773,30922
reg_size_ok(788,31439
reg_rm_selectable(832,33282
mem_size_ok(840,33530
opnd_type_ok(862,34512
instr_info_extra_opnds(1177,51366
#define TEST_OPND(1189,51743
encoding_possible_pass(1214,53174
encoding_possible(1264,55560
instr_is_encoding_possible(1305,57337
get_encoding_info(1315,57607
instr_info_opnd_type(1333,58106
encode_immed(1377,59416
encode_reg_ext_prefixes(1504,63922
encode_rel_addr(1513,64087
encode_base_disp(1544,65390
set_immed(1715,72697
get_mem_instr_addr(1729,73073
encode_operand(1737,73332
encode_vex_final_prefix_byte(2048,87103
encode_vex_prefixes(2073,87905
encode_cti(2140,90476
copy_and_re_relativize_raw_instr(2227,93723
instr_encode_common(2316,97844
instr_encode_ignore_reachability(2710,114040
instr_encode_check_reachability(2717,114293
instr_encode_to_copy(2725,114584
instr_encode(2732,114813
instrlist_encode_to_copy(2742,115134
instrlist_encode(2769,116131

x86/interp.c,5045
int app_jump=89,3042
instr_t *instr,instr91,3129
instr_t *instr,*stn_last_instr,stn_last_instr91,3129
instr_t *instr,*stn_last_instr,*stn_instr,stn_instr91,3129
instr_t *instr,*stn_last_instr,*stn_instr,*stn_ilast_instr;stn_ilast_instr91,3129
int sn_bb_skip_list[sn_bb_skip_list92,3207
int sn_list_length=93,3386
unsigned long long int sn_call_instr_pc,94,3409
unsigned long long int sn_call_instr_pc,sn_call_instr_bytes=94,3409
enum { DIRECT_XFER_LENGTH 120,4127
#define BRANCH_LIMIT 140,5160
volatile bool bb_lock_start;159,6071
file_t bbdump_file 162,6117
void surya_foo(168,6188
interp_init(179,6268
static int num_rets_removed;192,6537
interp_exit(198,6601
    app_pc start_pc;228,7408
    bool app_interp;229,7429
    bool for_cache;231,7597
    bool record_vmlist;232,7661
    bool mangle_ilist;233,7723
    bool record_translation;234,7786
    bool has_bb_building_lock;235,7862
    file_t outf;236,7950
    bool pass_to_client;239,8127
    bool post_client;243,8392
    bool for_trace;244,8468
    overlap_info_t *overlap_info;overlap_info248,8578
    instrlist_t *ilist;ilist252,8768
    uint flags;253,8792
    void *vmlist;vmlist254,8808
    app_pc end_pc;255,8826
    bool native_exec;256,8845
    bool native_call;257,8925
    instrlist_t **unmangled_ilist;unmangled_ilist259,9006
    bool full_decode;263,9121
    bool follow_direct;264,9206
    bool check_vm_area;265,9271
    uint num_elide_jmp;266,9345
    uint num_elide_call;267,9369
    app_pc last_page;268,9394
    app_pc cur_pc;269,9416
    app_pc instr_start;270,9435
    app_pc checked_end;271,9459
    cache_pc exit_target;272,9525
    uint exit_type;273,9596
    bool invalid_instr_hack;275,9666
    instr_t *instr;instr277,9702
    int eflags;278,9758
    app_pc pretend_pc;279,9774
} build_bb_t;281,9887
build_bb_t t_bb;283,9902
init_build_bb(290,10172
reset_overlap_info(311,10893
update_overlap_info(321,11184
# define BBPRINT(343,12092
#  define BBPRINT(350,12368
#  define BBPRINT(355,12574
static bool reached_image_entry 387,13298
check_for_image_entry(390,13366
set_reached_image_entry(401,13644
reached_image_entry_yet(409,13808
must_not_be_inlined(424,14184
must_not_be_elided(457,15358
must_escape_from(485,16357
bb_add_native_direct_xfer(537,18439
check_for_stopping_point(598,21314
eflags_analysis(644,23331
check_new_page_start(717,26542
check_new_page_contig(741,27608
check_new_page_jmp(775,29114
bb_process_invalid_instr(828,31570
follow_direct_jump(907,35455
bb_process_ubr(935,36579
follow_direct_call(1025,40888
bb_stop_prior_to_instr(1055,42013
bb_process_call_direct(1066,42362
instr_is_call_sysenter_pattern(1129,44918
bb_verify_sysenter_pattern(1181,47049
bb_process_SEH_push(1216,48472
        typedef struct _borland_seh_frame_t 1305,53706
            EXCEPTION_REGISTRATION reg;1306,53752
            reg_t xbp;1307,53792
        } borland_seh_frame_t;1308,53836
bb_process_fs_ref_opnd(1456,62156
bb_process_fs_ref(1500,64343
bb_process_mov_seg(1608,69150
bb_process_ignorable_syscall(1665,71377
bb_process_shared_syscall(1738,74411
bb_process_non_ignorable_syscall(1775,75834
bb_process_syscall(1801,76869
bb_process_indcall_syscall(1876,79608
bb_process_interrupt(1892,80095
bb_process_convertible_indcall(1932,81711
read_from_IAT(2151,91056
is_targeting_convertible_IAT(2164,91437
bb_process_IAT_convertible_indjmp(2252,94887
bb_process_IAT_convertible_indcall(2391,100509
bb_process_float_pc(2491,104462
instr_will_be_exit_cti(2506,105079
client_check_syscall(2520,105587
client_process_bb(2565,107590
build_bb_ilist(2911,124176
bb_build_abort(4486,198532
expand_should_set_translation(4524,200206
mangle_bb_ilist(4541,200790
build_app_bb_ilist(4610,203875
decode_as_bb(4628,204615
decode_trace(4662,206009
find_app_bb_end(4696,207174
app_bb_overlaps(4708,207584
report_native_module(4728,208262
build_native_exec_bb(4749,209088
at_native_exec_gateway(4878,214657
init_interp_build_bb(5057,223304
exit_interp_build_bb(5124,226580
build_basic_block_fragment(5139,227123
recreate_bb_ilist(5310,233576
recreate_fragment_ilist(5396,237444
process_nops_for_trace(5624,247425
regenerate_custom_exit_stub(5648,248561
tracelist_add(5722,251641
tracelist_add_after(5741,252265
insert_increment_stat_counter(5761,252880
insert_restore_spilled_xcx(5795,254572
insert_transparent_comparison(5829,255986
mangle_x64_ib_in_trace(5873,257709
mangle_indirect_branch_in_trace(5955,261513
fixup_last_cti(6177,270637
append_trace_speculate_last_ibl(6392,279218
append_ib_trace_last_ibl_exit_stat(6548,285919
extend_trace(6632,289799
create_exit_jmp(6735,294150
mangle_trace(6767,295250
instr_eflags_to_fragment_eflags(7041,307650
forward_eflags_analysis(7065,308503
#define DF_LOGLEVEL(7108,310573
decode_fragment(7112,310685
#undef DF_LOGLEVEL7798,345566
decode_fragment_exact(7804,345695
copy_fragment(7825,346489
shift_ctis_in_fragment(7937,351027
add_profile_call(8054,356431
emulate(8081,357334

utils.h,24472
#define _UTILS_H_ 43,1984
# undef assert46,2019
#define assert 49,2082
#define CHKLVL_ASSERTS 52,2187
#define CHKLVL_DEFAULT 53,2212
# define DEBUG_CHECKS(59,2445
# define DEBUG_CHECKS(61,2519
#   define ASSERT(71,2905
#   define ASSERT_MESSAGE(77,3208
#   define REPORT_CURIOSITY(79,3362
#   define ASSERT_CURIOSITY(86,3910
#   define ASSERT_CURIOSITY_ONCE(91,4279
#   define ASSERT(98,4723
#   define ASSERT_MESSAGE(101,4864
#   define ASSERT_CURIOSITY(104,5016
#   define ASSERT_CURIOSITY_ONCE(105,5058
# define ASSERT_NOT_TESTED(107,5128
# define ASSERT(110,5293
# define ASSERT_MESSAGE(111,5331
# define ASSERT_NOT_TESTED(112,5380
# define ASSERT_CURIOSITY(113,5422
# define ASSERT_CURIOSITY_ONCE(114,5464
#define ASSERT_NOT_REACHED(117,5531
#define ASSERT_BUG_NUM(118,5574
#define ASSERT_NOT_IMPLEMENTED(119,5652
#define EXEMPT_TEST(120,5739
#define apicheck(128,6080
#  define CLIENT_ASSERT(135,6323
#  define CLIENT_ASSERT(137,6379
# define CLIENT_ASSERT(140,6468
# define APP_EXPORT_ASSERT(144,6568
# define APP_EXPORT_ASSERT(146,6626
#define CHECK_TRUNCATE_TYPE_byte(158,7316
#define CHECK_TRUNCATE_TYPE_sbyte(159,7389
#define CHECK_TRUNCATE_TYPE_ushort(160,7480
#define CHECK_TRUNCATE_TYPE_short(161,7555
#define CHECK_TRUNCATE_TYPE_uint(162,7644
# define CHECK_TRUNCATE_TYPE_int(170,8199
# define CHECK_TRUNCATE_TYPE_int(172,8262
# define CHECK_TRUNCATE_TYPE_size_t(175,8366
# define CHECK_TRUNCATE_TYPE_stats_int_t(177,8491
# define CHECK_TRUNCATE_TYPE_size_t 179,8550
# define CHECK_TRUNCATE_TYPE_stats_int_t 180,8611
#define ASSERT_TRUNCATE(187,8941
#define CURIOSITY_TRUNCATE(190,9182
#define CLIENT_ASSERT_TRUNCATE(194,9442
#define ASSERT_BITFIELD_TRUNCATE(198,9627
#define CLIENT_ASSERT_BITFIELD_TRUNCATE(200,9747
#define LOCK_FREE_STATE 204,9935
#define LOCK_SET_STATE 205,10011
#define LOCK_CONTENDED_STATE 207,10187
#define SPINLOCK_FREE_STATE 209,10238
#define CONTENTION_EVENT_NOT_CREATED 211,10329
typedef HANDLE contention_event_t;214,10406
typedef void * contention_event_t;216,10447
typedef struct _mutex_t 219,10490
    volatile int lock_requests;220,10516
    contention_event_t contended_event;222,10682
    const char *name;name225,10875
    uint      rank;229,11115
    thread_id_t owner;230,11199
    dcontext_t *owning_dcontext;owning_dcontext235,11442
    struct _mutex_t *prev_owned_lock;prev_owned_lock236,11534
    uint count_times_acquired;237,11612
    uint count_times_contended;238,11691
    uint count_times_spin_pause;239,11776
    uint max_contended_requests;240,11878
    uint count_times_spin_only;241,11971
    struct _mutex_t *prev_process_lock;prev_process_lock244,12270
    struct _mutex_t *next_process_lock;next_process_lock245,12310
#  define MAX_MUTEX_CALLSTACK 251,12593
    byte *callstack[callstack252,12625
    bool app_lock;256,12812
#  define MAX_MUTEX_CALLSTACK 259,12845
    bool deleted;261,12923
} mutex_t;264,13092
typedef struct _spin_mutex_t 269,13328
    mutex_t lock;270,13359
} spin_mutex_t;271,13377
typedef struct _recursive_lock_t 274,13449
    mutex_t lock;275,13484
    thread_id_t owner;281,13770
    uint count;282,13793
} recursive_lock_t;283,13809
typedef struct _read_write_lock_t 285,13830
    mutex_t lock;286,13866
    volatile int num_readers;291,14107
    thread_id_t writer;293,14198
    volatile int num_pending_readers;294,14222
    contention_event_t writer_waiting_readers;295,14314
    contention_event_t readers_waiting_writer;296,14402
} read_write_lock_t;298,14578
#  define LOCK_RANK(301,14626
    LOCK_RANK(307,14862
    LOCK_RANK(outermost_lock)307,14862
    LOCK_RANK(308,14948
    LOCK_RANK(thread_in_DR_exclusion)308,14948
    LOCK_RANK(309,15004
    LOCK_RANK(all_threads_synch_lock)309,15004
    LOCK_RANK(311,15074
    LOCK_RANK(trace_building_lock)311,15074
    LOCK_RANK(317,15338
    LOCK_RANK(thread_initexit_lock)317,15338
    LOCK_RANK(319,15418
    LOCK_RANK(bb_building_lock)319,15418
    LOCK_RANK(322,15554
    LOCK_RANK(exception_stack_lock)322,15554
    LOCK_RANK(326,15736
    LOCK_RANK(all_threads_lock)326,15736
    LOCK_RANK(328,15797
    LOCK_RANK(linking_lock)328,15797
    LOCK_RANK(331,15890
    LOCK_RANK(shared_blocks_lock)331,15890
    LOCK_RANK(332,15951
    LOCK_RANK(shared_traces_lock)332,15951
    LOCK_RANK(335,16020
    LOCK_RANK(synch_lock)335,16020
    LOCK_RANK(337,16081
    LOCK_RANK(protect_info)337,16081
    LOCK_RANK(340,16208
    LOCK_RANK(sideline_mutex)340,16208
    LOCK_RANK(343,16248
    LOCK_RANK(shared_cache_flush_lock)343,16248
    LOCK_RANK(346,16451
    LOCK_RANK(shared_delete_lock)346,16451
    LOCK_RANK(347,16532
    LOCK_RANK(lazy_delete_lock)347,16532
    LOCK_RANK(349,16614
    LOCK_RANK(shared_cache_lock)349,16614
    LOCK_RANK(354,16929
    LOCK_RANK(change_linking_lock)354,16929
    LOCK_RANK(356,17008
    LOCK_RANK(shared_vm_areas)356,17008
    LOCK_RANK(357,17089
    LOCK_RANK(shared_cache_count_lock)357,17089
    LOCK_RANK(360,17188
    LOCK_RANK(fragment_delete_mutex)360,17188
    LOCK_RANK(363,17258
    LOCK_RANK(tracedump_mutex)363,17258
    LOCK_RANK(365,17341
    LOCK_RANK(emulate_write_lock)365,17341
    LOCK_RANK(367,17422
    LOCK_RANK(unit_flush_lock)367,17422
    LOCK_RANK(370,17495
    LOCK_RANK(maps_iter_buf_lock)370,17495
    LOCK_RANK(380,17918
    LOCK_RANK(hotp_vul_table_lock)380,17918
    LOCK_RANK(383,18061
    LOCK_RANK(coarse_info_lock)383,18061
    LOCK_RANK(386,18201
    LOCK_RANK(executable_areas)386,18201
    LOCK_RANK(390,18410
    LOCK_RANK(rct_module_lock)390,18410
    LOCK_RANK(394,18593
    LOCK_RANK(after_call_lock)394,18593
    LOCK_RANK(398,18803
    LOCK_RANK(module_data_lock)398,18803
    LOCK_RANK(400,18943
    LOCK_RANK(special_units_list_lock)400,18943
    LOCK_RANK(401,19009
    LOCK_RANK(special_heap_lock)401,19009
    LOCK_RANK(403,19161
    LOCK_RANK(coarse_info_incoming_lock)403,19161
    LOCK_RANK(410,19545
    LOCK_RANK(coarse_table_rwlock)410,19545
    LOCK_RANK(412,19719
    LOCK_RANK(coarse_pclookup_table_rwlock)412,19719
    LOCK_RANK(415,19952
    LOCK_RANK(coarse_th_table_rwlock)415,19952
    LOCK_RANK(417,20018
    LOCK_RANK(process_module_vector_lock)417,20018
    LOCK_RANK(420,20257
    LOCK_RANK(snapshot_lock)420,20257
    LOCK_RANK(421,20310
    LOCK_RANK(written_areas)421,20310
    LOCK_RANK(424,20460
    LOCK_RANK(futureexec_areas)424,20460
    LOCK_RANK(427,20605
    LOCK_RANK(app_flushed_areas)427,20605
    LOCK_RANK(430,20695
    LOCK_RANK(pretend_writable_areas)430,20695
    LOCK_RANK(431,20775
    LOCK_RANK(patch_proof_areas)431,20775
    LOCK_RANK(432,20850
    LOCK_RANK(emulate_write_areas)432,20850
    LOCK_RANK(433,20927
    LOCK_RANK(IAT_areas)433,20927
    LOCK_RANK(436,21084
    LOCK_RANK(dr_client_mutex)436,21084
    LOCK_RANK(437,21141
    LOCK_RANK(client_thread_count_lock)437,21141
    LOCK_RANK(438,21206
    LOCK_RANK(client_flush_request_lock)438,21206
    LOCK_RANK(439,21272
    LOCK_RANK(callback_registration_lock)439,21272
    LOCK_RANK(440,21339
    LOCK_RANK(client_tls_lock)440,21339
    LOCK_RANK(442,21402
    LOCK_RANK(intercept_hook_lock)442,21402
    LOCK_RANK(443,21459
    LOCK_RANK(privload_lock)443,21459
    LOCK_RANK(445,21540
    LOCK_RANK(sigfdtable_lock)445,21540
    LOCK_RANK(447,21600
    LOCK_RANK(table_rwlock)447,21600
    LOCK_RANK(448,21653
    LOCK_RANK(loaded_module_areas)448,21653
    LOCK_RANK(449,21731
    LOCK_RANK(aslr_areas)449,21731
    LOCK_RANK(450,21799
    LOCK_RANK(aslr_pad_areas)450,21799
    LOCK_RANK(451,21871
    LOCK_RANK(native_exec_areas)451,21871
    LOCK_RANK(452,21946
    LOCK_RANK(thread_vm_areas)452,21946
    LOCK_RANK(454,22006
    LOCK_RANK(app_pc_table_rwlock)454,22006
    LOCK_RANK(457,22145
    LOCK_RANK(dead_tables_lock)457,22145
    LOCK_RANK(458,22201
    LOCK_RANK(aslr_lock)458,22201
    LOCK_RANK(461,22258
    LOCK_RANK(hotp_only_tramp_areas_lock)461,22258
    LOCK_RANK(463,22398
    LOCK_RANK(hotp_patch_point_areas_lock)463,22398
    LOCK_RANK(467,22565
    LOCK_RANK(profile_callers_lock)467,22565
    LOCK_RANK(469,22635
    LOCK_RANK(coarse_stub_areas)469,22635
    LOCK_RANK(470,22695
    LOCK_RANK(moduledb_lock)470,22695
    LOCK_RANK(471,22756
    LOCK_RANK(pcache_dir_check_lock)471,22756
    LOCK_RANK(473,22806
    LOCK_RANK(suspend_lock)473,22806
    LOCK_RANK(474,22835
    LOCK_RANK(shared_lock)474,22835
    LOCK_RANK(476,22870
    LOCK_RANK(modlist_areas)476,22870
    LOCK_RANK(478,22956
    LOCK_RANK(privload_fls_lock)478,22956
    LOCK_RANK(479,23031
    LOCK_RANK(drwinapi_localheap_lock)479,23031
    LOCK_RANK(482,23132
    LOCK_RANK(client_aux_libs)482,23132
    LOCK_RANK(484,23180
    LOCK_RANK(client_aux_lib64_lock)484,23180
    LOCK_RANK(488,23248
    LOCK_RANK(alt_tls_lock)488,23248
    LOCK_RANK(497,23641
    LOCK_RANK(allunits_lock)497,23641
    LOCK_RANK(498,23698
    LOCK_RANK(fcache_unit_areas)498,23698
    IF_LINUX_(500,23829
    IF_LINUX_(LOCK_RANK(500,23829
    IF_LINUX_(LOCK_RANK(all_memory_areas)500,23829
    IF_UNIX_(501,23896
    IF_UNIX_(LOCK_RANK(501,23896
    IF_UNIX_(LOCK_RANK(set_thread_area_lock)501,23896
    LOCK_RANK(502,23963
    LOCK_RANK(landing_pad_areas_lock)502,23963
    LOCK_RANK(503,24045
    LOCK_RANK(dynamo_areas)503,24045
    LOCK_RANK(504,24103
    LOCK_RANK(map_intercept_pc_lock)504,24103
    LOCK_RANK(505,24167
    LOCK_RANK(global_alloc_lock)505,24167
    LOCK_RANK(506,24223
    LOCK_RANK(heap_unit_lock)506,24223
    LOCK_RANK(507,24272
    LOCK_RANK(vmh_lock)507,24272
    LOCK_RANK(508,24323
    LOCK_RANK(last_deallocated_lock)508,24323
    LOCK_RANK(512,24450
    LOCK_RANK(tls_lock)512,24450
    LOCK_RANK(515,24613
    LOCK_RANK(reset_pending_lock)515,24613
    LOCK_RANK(517,24672
    LOCK_RANK(initstack_mutex)517,24672
    LOCK_RANK(519,24730
    LOCK_RANK(event_lock)519,24730
    LOCK_RANK(520,24782
    LOCK_RANK(do_threshold_mutex)520,24782
    LOCK_RANK(521,24842
    LOCK_RANK(threads_killed_lock)521,24842
    LOCK_RANK(522,24903
    LOCK_RANK(child_lock)522,24903
    LOCK_RANK(525,24976
    LOCK_RANK(sideline_lock)525,24976
    LOCK_RANK(526,25030
    LOCK_RANK(do_not_delete_lock)526,25030
    LOCK_RANK(527,25088
    LOCK_RANK(remember_lock)527,25088
    LOCK_RANK(528,25141
    LOCK_RANK(sideline_table_lock)528,25141
    LOCK_RANK(531,25230
    LOCK_RANK(simulate_lock)531,25230
    LOCK_RANK(534,25281
    LOCK_RANK(process_kstats_lock)534,25281
    LOCK_RANK(537,25335
    LOCK_RANK(request_region_be_heap_reachable_lock)537,25335
    LOCK_RANK(540,25517
    LOCK_RANK(report_buf_lock)540,25517
    LOCK_RANK(547,25827
    LOCK_RANK(memory_info_buf_lock)547,25827
    LOCK_RANK(550,25886
    LOCK_RANK(dump_core_lock)550,25886
    LOCK_RANK(553,25925
    LOCK_RANK(logdir_mutex)553,25925
    LOCK_RANK(554,25974
    LOCK_RANK(diagnost_reg_mutex)554,25974
    LOCK_RANK(556,26034
    LOCK_RANK(profile_dump_lock)556,26034
    LOCK_RANK(559,26076
    LOCK_RANK(prng_lock)559,26076
    LOCK_RANK(563,26277
    LOCK_RANK(options_lock)563,26277
    LOCK_RANK(565,26321
    LOCK_RANK(debugbox_lock)565,26321
    LOCK_RANK(567,26358
    LOCK_RANK(eventlog_mutex)567,26358
    LOCK_RANK(568,26442
    LOCK_RANK(datasec_selfprot_lock)568,26442
    LOCK_RANK(569,26480
    LOCK_RANK(thread_stats_lock)569,26480
    LOCK_RANK(574,26663
    LOCK_RANK(shared_itimer_lock)574,26663
    LOCK_RANK(576,26706
    LOCK_RANK(innermost_lock)576,26706
typedef struct _thread_locks_t thread_locks_t;580,26819
#  define INIT_LOCK_NO_TYPE(594,27517
#  define INIT_LOCK_NO_TYPE(600,27833
#  define STRUCTURE_TYPE(612,28398
#  define STRUCTURE_TYPE(618,28636
#define INIT_LOCK_FREE(621,28672
#define ASSIGN_INIT_LOCK_FREE(625,28843
#define ASSIGN_INIT_SPINMUTEX_FREE(632,29233
#define INIT_RECURSIVE_LOCK(635,29336
#define INIT_READWRITE_LOCK(642,29715
#define ASSIGN_INIT_READWRITE_LOCK_FREE(651,30243
#define ASSIGN_INIT_RECURSIVE_LOCK_FREE(663,31007
#define INIT_SPINLOCK_FREE(672,31547
#define DELETE_LOCK(675,31699
#define DELETE_SPINMUTEX(676,31745
#define DELETE_RECURSIVE_LOCK(677,31810
#define DELETE_READWRITE_LOCK(678,31881
mutex_testlock(711,33200
typedef struct _broadcast_event_t broadcast_event_t;733,33998
#define WAIT_FOR_BROADCAST_EVENT(755,35091
#define WRITE_LOCK_HELD(773,36270
#define READ_LOCK_HELD(774,36356
# define OWN_MUTEX(782,36635
# define ASSERT_OWN_MUTEX(783,36689
# define ASSERT_DO_NOT_OWN_MUTEX(785,36762
# define OWN_NO_LOCKS(787,36843
# define ASSERT_OWN_NO_LOCKS(788,36894
# define OWN_MUTEX(794,37136
# define ASSERT_OWN_MUTEX(795,37178
# define ASSERT_DO_NOT_OWN_MUTEX(797,37251
# define OWN_NO_LOCKS(799,37341
# define ASSERT_OWN_NO_LOCKS(800,37393
#define ASSERT_OWN_WRITE_LOCK(802,37452
#define ASSERT_DO_NOT_OWN_WRITE_LOCK(804,37542
#define ASSERT_OWN_READ_LOCK(807,37708
#define READWRITE_LOCK_HELD(809,37791
#define ASSERT_OWN_READWRITE_LOCK(810,37872
#define ASSERT_OWN_RECURSIVE_LOCK(812,37965
#define SHARED_MUTEX(818,38152
#define SHARED_RECURSIVE_LOCK(822,38404
#define USE_BB_BUILDING_LOCK_STEADY_STATE(827,38680
#define USE_BB_BUILDING_LOCK(830,38914
#define SHARED_BB_LOCK(832,39052
#define SHARED_BB_UNLOCK(847,39893
#define NEED_SHARED_LOCK(852,40220
#define SHARED_FLAGS_MUTEX(855,40415
#define SHARED_FLAGS_RECURSIVE_LOCK(859,40604
#define PHI_2_32 895,42185
#define PHI_2_64 896,42244
# define HASH_PHI 898,42324
# define HASH_TAG_BITS 899,42351
# define HASH_PHI 901,42383
# define HASH_TAG_BITS 902,42410
#define HASH_MASK(906,42500
#define HASH_FUNC(911,42768
# define HASH_FUNC_BITS(919,43104
# define HASH_FUNC_BITS(926,43437
#define HASH_VALUE_FOR_TABLE(935,43949
#define HASHTABLE_SIZE(947,44740
    HASH_FUNCTION_NONE 951,44846
    HASH_FUNCTION_MULTIPLY_PHI 952,44874
    HASH_FUNCTION_LOWER_BSWAP 954,44926
    HASH_FUNCTION_BSWAP_XOR 955,44961
    HASH_FUNCTION_SWAP_12TO15 956,44994
    HASH_FUNCTION_SWAP_12TO15_AND_NONE 957,45029
    HASH_FUNCTION_SHIFT_XOR 958,45073
    HASH_FUNCTION_STRING 960,45113
    HASH_FUNCTION_STRING_NOCASE 961,45143
    HASH_FUNCTION_ENUM_MAX,962,45180
} hash_function_t;963,45208
# define REACHABLE_32BIT_START(979,45972
# define REACHABLE_32BIT_END(986,46513
#define MAX_LOW_2GB 990,46735
#define ALIGNED(993,46839
#define ALIGN_FORWARD(994,46912
#define ALIGN_FORWARD_UINT(996,47025
#define ALIGN_BACKWARD(998,47125
#define PAD(999,47213
#define ALIGN_MOD(1000,47294
#define CROSSES_ALIGNMENT(1002,47391
#define ALIGN_SHIFT_SIZE(1005,47577
#define IS_POWER_OF_2(1009,47741
#define POINTER_OVERFLOW_ON_ADD(1014,47900
#define POINTER_UNDERFLOW_ON_SUB(1016,48000
typedef uint bitmap_element_t;1022,48193
typedef bitmap_element_t bitmap_t[bitmap_t1023,48224
#define BITMAP_DENSITY 1031,48505
#define BITMAP_MASK(1032,48533
#define BITMAP_INDEX(1033,48588
#define BITMAP_NOT_FOUND 1034,48636
bitmap_test(1045,48972
bitmap_set(1051,49085
bitmap_clear(1057,49182
#define LOGDIR_MAX_NUM 1075,49883
#define LOGDIR_FORMAT_STRING 1076,49920
#define LOGDIR_FORMAT_ARGS(1077,49962
# define MAX_LOG_LENGTH 1085,50335
# define MAX_LOG_LENGTH_MINUS_ONE 1086,50382
# define MAX_LOG_LENGTH 1092,50643
# define MAX_LOG_LENGTH_MINUS_ONE 1093,50703
# define LOG(1097,50832
# define DOELOG(1104,51178
# define DOCHECK(1111,51495
#  define DOLOG 1116,51652
#  define LOG_DECLARE(1117,51675
#  define DOLOG(1120,51802
#  define LOG_DECLARE(1121,51842
# define THREAD 1123,51900
# define THREAD_GET 1125,52040
# define GLOBAL 1126,52089
# define LOG(1130,52292
# define DOLOG(1131,52329
# define DOELOG 1132,52368
# define LOG_DECLARE(1133,52390
# define DOCHECK(1134,52424
# define wcsnlen 1153,53184
    BASE_DIR,1177,54120
    PROCESS_DIR 1178,54182
} log_dir_t;1179,54262
#define DO_ONCE(1200,55336
# define DECLARE_THRESHOLD_LOCK(1226,56734
# define DECLARE_THRESHOLD_LOCK(1228,56795
#define DO_THRESHOLD_SAFE(1236,57126
#define TRY_EXCEPT_ALLOW_NO_DCONTEXT(1275,59169
#define TRY_EXCEPT(1292,60484
#define TRY_FINALLY(1298,60810
#define TRY(1305,61163
#define EXCEPT(1355,63964
#define FINALLY(1371,64763
#define POP_TRY_BLOCK(1398,66568
enum {LONGJMP_EXCEPTION LONGJMP_EXCEPTION1404,66904
#define PROBE_READ_PC(1408,67076
#define PROBE_WRITE_PC(1409,67129
#define UNUSED_VARIABLE(1427,68015
#define GLOBAL_STAT(1433,68287
#define GLOBAL_STAT_ADDR(1435,68414
#define DO_GLOBAL_STATS(1436,68473
# define XSTATS_ATOMIC_INC(1443,68686
# define XSTATS_ATOMIC_DEC(1444,68741
# define XSTATS_ATOMIC_ADD(1445,68796
# define XSTATS_ATOMIC_MAX(1446,68861
# define XSTATS_ATOMIC_ADD_EXCHANGE(1447,68926
# define XSTATS_ATOMIC_INC(1449,69014
# define XSTATS_ATOMIC_DEC(1450,69067
# define XSTATS_ATOMIC_ADD(1451,69120
# define XSTATS_ATOMIC_MAX(1452,69183
# define XSTATS_ATOMIC_ADD_EXCHANGE(1453,69246
#define XSTATS_INC_DC(1459,69460
#define XSTATS_INC(1463,69698
#define XSTATS_DEC_DC(1467,69914
#define XSTATS_DEC(1471,70152
#define XSTATS_ADD_DC(1475,70368
#define XSTATS_ADD(1481,70834
#define XSTATS_SUB(1484,71063
#define XSTATS_ADD_ASSIGN_DC(1485,71135
#define XSTATS_INC_ASSIGN_DC(1494,71775
#define XSTATS_ADD_ASSIGN(1496,71905
#define XSTATS_INC_ASSIGN(1499,72143
#define XSTATS_MAX_HELPER(1502,72214
#define XSTATS_MAX_DC(1513,72980
#define XSTATS_PEAK_DC(1516,73190
#define XSTATS_MAX(1518,73314
#define XSTATS_TRACK_MAX(1521,73544
#define XSTATS_PEAK(1530,74160
#define XSTATS_ADD_MAX_DC(1535,74380
#define XSTATS_ADD_MAX(1541,74797
#define XSTATS_ADD_PEAK_DC(1545,75094
#define XSTATS_ADD_PEAK(1547,75233
#define XSTATS_RESET_DC(1552,75476
#define XSTATS_RESET(1556,75714
#define RSTATS_INC 1561,75979
#define RSTATS_DEC 1562,76009
#define RSTATS_ADD 1563,76039
#define RSTATS_SUB 1564,76069
#define RSTATS_ADD_PEAK 1565,76099
#   define DODEBUGINT 1568,76180
#   define DOCHECKINT 1569,76210
#   define DODEBUGINT(1571,76246
#   define DOCHECKINT(1572,76293
#   define DEBUG_EXT_DECLARE(1579,76567
#   define DEBUG_EXT_DECLARE(1581,76627
#   define DODEBUG(1585,76728
#   define DEBUG_DECLARE(1586,76785
#   define DOSTATS(1587,76835
#   define GLOBAL_STATS_ON(1602,77696
#   define THREAD_STAT(1603,77774
#   define THREAD_STATS_ON(1605,77869
#   define DO_THREAD_STATS(1608,78089
#   define XSTATS_WITH_DC(1613,78401
#   define STATS_INC 1620,78785
#   define STATS_INC_DC 1622,78862
#   define STATS_DEC 1623,78900
#   define STATS_ADD 1624,78932
#   define STATS_SUB 1625,78964
#   define STATS_INC_ASSIGN 1626,78996
#   define STATS_ADD_ASSIGN 1627,79042
#   define STATS_MAX 1628,79088
#   define STATS_TRACK_MAX 1629,79120
#   define STATS_PEAK 1630,79164
#   define STATS_ADD_MAX 1631,79198
#   define STATS_ADD_PEAK 1632,79238
#   define STATS_RESET 1633,79280
#   define DODEBUG(1636,79323
#   define DEBUG_DECLARE(1637,79353
#   define DOSTATS(1638,79391
#   define THREAD_STATS_ON(1639,79421
#   define XSTATS_WITH_DC(1640,79464
#   define DO_THREAD_STATS(1641,79516
#   define GLOBAL_STATS_ON(1642,79578
#   define STATS_INC(1647,79809
#   define STATS_INC_DC(1648,79850
#   define STATS_DEC(1649,79904
#   define STATS_ADD(1650,79945
#   define STATS_SUB(1651,79993
#   define STATS_INC_ASSIGN(1652,80041
#   define STATS_ADD_ASSIGN(1653,80094
#   define STATS_MAX(1654,80154
#   define STATS_TRACK_MAX(1655,80209
#   define STATS_PEAK(1656,80272
#   define STATS_ADD_MAX(1657,80314
#   define STATS_ADD_PEAK(1658,80380
#   define STATS_RESET(1659,80433
# define DOKSTATS(1663,80510
# define KSTART(1670,80785
# define KSTOP(1673,80895
# define KSWITCH(1676,81039
# define KSTOP_NOT_MATCHING(1679,81165
# define KSTOP_REWIND(1686,81551
# define KSTOP_REWIND_UNTIL(1687,81629
# define KSWITCH_STOP(1690,81767
# define KSWITCH_STOP_NOT_PROPAGATED(1696,82023
# define KSTOP_NOT_MATCHING_NOT_PROPAGATED(1703,82339
# define KSTOP_NOT_PROPAGATED(1710,82693
# define KSTART_DC(1725,83422
# define KSTOP_DC(1727,83550
# define KSTOP_NOT_MATCHING_DC(1729,83686
# define KSTOP_REWIND_DC(1733,83913
# define DOKSTATS(1735,84029
# define KSTART(1736,84075
# define KSWITCH(1737,84121
# define KSWITCH_STOP(1738,84167
# define KSWITCH_STOP_NOT_PROPAGATED(1739,84213
# define KSTOP_NOT_MATCHING_NOT_PROPAGATED(1740,84270
# define KSTOP_NOT_PROPAGATED(1741,84333
# define KSTOP_NOT_MATCHING(1742,84383
# define KSTOP(1743,84433
# define KSTOP_REWIND(1744,84479
# define KSTOP_REWIND_UNTIL(1745,84525
# define KSTART_DC(1747,84574
# define KSTOP_DC(1748,84620
# define KSTOP_NOT_MATCHING_DC(1749,84666
# define KSTOP_REWIND_DC(1750,84721
#  define DODEBUG_ONCE(1754,84807
#  define DOLOG_ONCE(1755,84869
#  define DODEBUG_ONCE(1757,84959
#  define DOLOG_ONCE(1758,85007
#define MAX_FP_STATE_SIZE 1761,85089
#define PRESERVE_FLOATING_POINT_STATE_START(1772,85593
#define PRESERVE_FLOATING_POINT_STATE_END(1778,85911
#define PRESERVE_FLOATING_POINT_STATE(1783,86116
#define ARGUMENT_COUNTER(1790,86467
#define _ARGUMENT_COUNT1(1791,86533
#define _ARGUMENT_COUNT2(1792,86606
#define SYSLOG_COMMON(1821,87750
#define SYSLOG_INTERNAL_COMMON(1824,87899
#define SYSLOG_CUSTOM_NOTIFY(1836,88592
#define SYSLOG(1839,88715
#define SYSLOG_NO_OPTION_SYNCH(1841,88804
# define SYSLOG_INTERNAL(1845,88966
# define SYSLOG_INTERNAL_NO_OPTION_SYNCH(1847,89058
# define SYSLOG_INTERNAL(1850,89173
# define SYSLOG_INTERNAL_NO_OPTION_SYNCH(1851,89203
#define SYSLOG_INTERNAL_INFO(1855,89294
#define SYSLOG_INTERNAL_WARNING(1857,89383
#define SYSLOG_INTERNAL_ERROR(1859,89471
#define SYSLOG_INTERNAL_CRITICAL(1861,89555
#define SYSLOG_INTERNAL_INFO_ONCE(1864,89646
#define SYSLOG_INTERNAL_WARNING_ONCE(1866,89739
#define SYSLOG_INTERNAL_ERROR_ONCE(1868,89838
#define SYSLOG_INTERNAL_CRITICAL_ONCE(1870,89933
#define USAGE_ERROR(1878,90386
#define FATAL_USAGE_ERROR(1883,90718
#define OPTION_PARSE_ERROR(1892,91377
# define TRACELOG(1900,91810
# define TRACELOG(1902,91899
#define LOG_NONE 1910,92181
#define LOG_STATS 1911,92219
#define LOG_TOP 1912,92257
#define LOG_THREADS 1913,92295
#define LOG_SYSCALLS 1914,92333
#define LOG_ASYNCH 1915,92371
#define LOG_INTERP 1916,92409
#define LOG_EMIT 1917,92447
#define LOG_LINKS 1918,92485
#define LOG_CACHE 1919,92523
#define LOG_FRAGMENT 1920,92561
#define LOG_DISPATCH 1921,92599
#define LOG_MONITOR 1922,92637
#define LOG_HEAP 1923,92675
#define LOG_VMAREAS 1924,92713
#define LOG_SYNCH 1925,92751
#define LOG_MEMSTATS 1926,92789
#define LOG_OPTS 1927,92827
#define LOG_SIDELINE 1928,92865
#define LOG_SYMBOLS 1929,92903
#define LOG_RCT 1930,92941
#define LOG_NT 1931,92979
#define LOG_HOT_PATCHING 1932,93017
#define LOG_HTABLE 1933,93055
#define LOG_MODULEDB 1934,93093
#define LOG_LOADER 1935,93131
#define LOG_CLEANCALL 1936,93169
#define LOG_ALL_RELEASE 1938,93208
#define LOG_ALL 1939,93246
# define LOG_PROFILE 1942,93310
#define MAXIMUM_SYMBOL_LENGTH 1948,93521
    DUMP_NO_QUOTING 1972,94201
    DUMP_NO_QUOTING   = 0x01000,x010001972,94201
    DUMP_OCTAL 1973,94268
    DUMP_OCTAL        = 0x02000,x020001973,94268
    DUMP_NO_CHARS 1974,94318
    DUMP_NO_CHARS     = 0x04000,x040001974,94318
    DUMP_RAW 1975,94379
    DUMP_RAW          = 0x08000,x080001975,94379
    DUMP_DWORD 1976,94439
    DUMP_DWORD        = 0x10000,x100001976,94439
    DUMP_ADDRESS 1977,94497
    DUMP_ADDRESS      = 0x20000,x200001977,94497
    DUMP_APPEND_ASCII 1978,94576
    DUMP_APPEND_ASCII = 0x40000,x400001978,94576
    DUMP_PER_LINE 1979,94651
    DUMP_PER_LINE     = 0x000ff x000ff1979,94651
#define DUMP_PER_LINE_DEFAULT 1981,94719
#define MD5_BLOCK_LENGTH 2024,96353
#define MD5_RAW_BYTES 2025,96381
#define MD5_STRING_LENGTH 2026,96406
struct MD5Context 2033,96712
    uint32 state[state2034,96732
    uint64 count;2035,96789
    unsigned char buffer[buffer2036,96865
#   undef isprint2080,98039
#   undef isdigit2085,98105
#define isprint_fast(2091,98169
#define isdigit_fast(2092,98225
#  undef isprint2100,98473
#  undef isdigit2103,98514
# define isprint 2105,98539
# define isdigit 2106,98605
#define MAX_CALL_PROFILE_DEPTH 2143,100244
#define EXPECT(2151,100425
#define EXPECT_RELATION(2156,100636
#define EXPECT_RELATION_INTERNAL(2161,100847
#define TESTRUN(2174,101674
#define UNIT_TEST_MAIN 2189,102301

link.c,6387
#define FRAG_INCOMING_ADDR(55,2328
void *stub_heap;stub_heap113,4566
void *stub32_heap;stub32_heap115,4594
# define SEPARATE_STUB_HEAP(119,4632
# define SEPARATE_STUB_HEAP(121,4719
#define SEPARATE_STUB_ALLOC_SIZE(128,4948
#define COARSE_STUB_ALLOC_SIZE(135,5232
static const fragment_t linkstub_empty_fragment 147,5880
static const fragment_t linkstub_empty_fragment_x86 149,5963
static const linkstub_t linkstub_starting 151,6060
static const linkstub_t linkstub_reset 152,6125
static const linkstub_t linkstub_syscall 153,6190
static const linkstub_t linkstub_selfmod 154,6255
static const linkstub_t linkstub_ibl_deleted 155,6320
static const linkstub_t linkstub_sigreturn 157,6397
static const linkstub_t linkstub_asynch 159,6482
static const linkstub_t linkstub_native_exec 161,6554
static const linkstub_t linkstub_native_exec_syscall 163,6705
static const fragment_t linkstub_shared_syscall_trace_fragment 168,6851
static const fragment_t linkstub_shared_syscall_bb_fragment 170,6977
static const linkstub_t linkstub_shared_syscall_trace 185,7735
static const linkstub_t linkstub_shared_syscall_bb 187,7839
static const linkstub_t linkstub_shared_syscall_unlinked 191,8050
static const fragment_t coarse_fragment 196,8207
static const linkstub_t linkstub_coarse_exit 202,8520
static const linkstub_t linkstub_coarse_trace_head_exit 203,8585
static const linkstub_t linkstub_hot_patch 207,8749
static const linkstub_t linkstub_client 212,8913
static const fragment_t linkstub_ibl_trace_fragment 219,9152
static const fragment_t linkstub_ibl_bb_fragment 221,9248
static const linkstub_t linkstub_ibl_trace_ret 244,10397
static const linkstub_t linkstub_ibl_trace_jmp 246,10498
static const linkstub_t linkstub_ibl_trace_call 248,10596
static const linkstub_t linkstub_ibl_bb_ret 250,10696
static const linkstub_t linkstub_ibl_bb_jmp 252,10794
static const linkstub_t linkstub_ibl_bb_call 254,10889
static const linkstub_t linkstub_ibl_trace_ret_client 257,11012
static const linkstub_t linkstub_ibl_bb_ret_client 259,11120
is_empty_fragment(265,11262
empty_fragment_mark_x86(273,11453
typedef struct thread_link_data_t 281,11684
    linkstub_t linkstub_deleted;282,11720
    fragment_t linkstub_deleted_fragment;283,11753
    int linkstub_deleted_ordinal;289,11998
} thread_link_data_t;290,12032
link_reset_init(294,12133
link_reset_free(313,12858
link_init(325,13089
link_exit(332,13159
link_thread_init(340,13277
link_thread_exit(355,13824
linkstubs_init(363,14091
linkstub_size(384,14958
linkstub_propagatable_flags(397,15503
linkstub_frag_offs_at_end(406,15723
use_cbr_fallthrough_short(433,17040
linkstubs_heap_size(461,18263
linkstub_fragment(481,19026
linkstub_owned_by_fragment(551,22137
set_last_exit(582,23282
last_exit_deleted(603,24238
set_coarse_ibl_exit(681,27593
get_last_linkstub_ordinal(720,28949
get_deleted_linkstub(729,29188
get_starting_linkstub(738,29421
get_reset_linkstub(744,29500
get_syscall_linkstub(750,29573
get_selfmod_linkstub(756,29650
get_ibl_deleted_linkstub(762,29727
get_sigreturn_linkstub(769,29824
get_asynch_linkstub(775,29924
get_native_exec_linkstub(782,30006
get_native_exec_syscall_linkstub(788,30091
get_shared_syscalls_unlinked_linkstub(795,30207
get_shared_syscalls_trace_linkstub(801,30317
get_shared_syscalls_bb_linkstub(807,30421
get_hot_patch_linkstub(815,30570
get_client_linkstub(823,30682
is_ibl_sourceless_linkstub(830,30750
get_ibl_sourceless_linkstub(847,31233
is_client_ibl_linkstub(870,31927
get_client_ibl_linkstub(877,32093
get_coarse_exit_linkstub(889,32436
get_coarse_trace_head_exit_linkstub(896,32562
should_separate_stub(902,32655
local_exit_stub_size(908,32817
is_cbr_of_cbr_fallthrough(943,34391
separate_stub_create(952,34614
separate_stub_free(1007,37186
linkstub_shares_next_stub(1058,39428
linkstub_free_exitstubs(1075,39971
linkstubs_shift(1095,40699
is_linkable(1117,41621
link_branch(1172,43825
unlink_branch(1220,45839
incoming_direct_linkstubs_match(1265,47655
incoming_find_link(1281,48402
incoming_link_exists(1321,50046
incoming_remove_link_nosearch(1334,50517
incoming_remove_link_search(1397,53617
incoming_remove_link(1430,55062
add_to_incoming_list(1461,56339
add_private_check_shared(1494,57855
add_future_incoming(1534,59422
add_incoming(1572,61098
incoming_remove_fragment(1592,61883
debug_after_link_change(1735,68651
link_fragment_incoming(1747,68949
link_fragment_outgoing(1800,71296
unlink_fragment_incoming(1880,74634
unlink_fragment_outgoing(1919,76186
link_new_fragment(1953,77399
shift_links_to_new_fragment(2035,81064
static vm_area_vector_t *coarse_stub_areas;coarse_stub_areas2392,98873
coarse_stubs_init(2395,98930
coarse_stubs_free(2403,99137
num_coarse_stubs_for_prefix(2413,99482
coarse_stub_alignment(2422,99812
coarse_stubs_create(2431,100040
    special_heap_iterator_t shi;2481,102440
    cache_pc start,2482,102473
    cache_pc start, end,2482,102473
    cache_pc start, end, pc;2482,102473
    coarse_info_t *info;info2483,102502
} coarse_stubs_iterator_t;2484,102527
coarse_stubs_iterator_start(2487,102567
coarse_stubs_iterator_hasnext(2506,103271
coarse_stubs_iterator_next(2512,103436
coarse_stubs_iterator_stop(2534,104118
coarse_stubs_delete(2540,104228
entrance_stub_create(2582,105736
set_fake_direct_linkstub(2613,107109
print_coarse_incoming(2626,107582
prepend_new_coarse_incoming(2646,108287
fragment_coarse_link_wrapper(2692,110110
fragment_link_lookup_same_sharing(2706,110570
coarse_link_to_fine(2719,111151
coarse_link_direct(2771,113819
link_new_coarse_grain_fragment(2910,120458
coarse_remove_incoming(3146,132064
coarse_remove_outgoing(3187,133808
coarse_mark_trace_head(3250,136769
coarse_unit_unlink(3279,137930
coarse_unit_unlink_outgoing(3360,141358
coarse_unit_outgoing_linked(3389,142394
coarse_stub_lookup_by_target(3417,143211
coarse_lazy_link(3436,144000
fcache_return_coarse_prefix(3563,150408
trace_head_return_coarse_prefix(3580,150913
get_coarse_ibl_prefix(3597,151449
in_coarse_stubs(3616,152047
in_coarse_stub_prefixes(3622,152147
coarse_deref_ibl_prefix(3638,152660
get_stub_coarse_info(3652,153054
coarse_frozen_stub_size(3659,153255
coarse_update_outgoing(3721,155826
coarse_unit_shift_links(3800,159622
coarse_stubs_set_info(3852,161981
coarse_stubs_set_end_pc(3858,162087

etrans.c,396
struct jaddr_etrans_list* get_jaddr_stack_top(17,1261
app_pc get_jaddr_stack_top_addr(51,2673
void push_bb_etrans_jaddr_on_top(67,3200
void push_bb_etrans_jaddr_at_bottom(105,5305
struct jaddr_etrans_list* pop_bb_etrans_jaddr_from_top(147,6953
int get_list_entry_count(174,7962
void initialize_etrans_list(215,9565
void decrement_stack_entry_cnt(222,9766
void clear_jaddr_stack(226,9877

utils.c,7182
try_except_t global_try_except;79,2681
soft_terminate(89,2919
ignore_assert(114,3500
internal_error(139,4282
external_error(193,6388
struct _thread_locks_t 215,7207
    mutex_t *last_lock;last_lock216,7232
#define DUMP_NONZERO(232,8021
#define DUMP_LOCK_INFO_ARGS(235,8178
dump_mutex_callstack(251,9101
dump_owned_locks(271,9688
thread_owns_no_locks(289,10555
thread_owns_one_lock(298,10842
thread_owns_two_locks(310,11307
thread_owns_first_or_both_locks_only(325,11890
dump_process_locks(341,12584
locks_not_closed(376,14126
locks_thread_init(422,16068
locks_thread_exit(435,16575
add_process_lock(453,17520
remove_process_lock(485,18920
mutex_collect_callstack(511,20041
enum {LOCK_NOT_OWNABLE,LOCK_NOT_OWNABLE544,21072
enum {LOCK_NOT_OWNABLE, LOCK_OWNABLE}LOCK_OWNABLE544,21072
deadlock_avoidance_lock(551,21280
deadlock_avoidance_unlock(683,28519
#define DEADLOCK_AVOIDANCE_LOCK(752,31663
#define DEADLOCK_AVOIDANCE_UNLOCK(753,31770
#  define DEADLOCK_AVOIDANCE_LOCK(755,31866
#  define DEADLOCK_AVOIDANCE_UNLOCK(756,31942
mutex_fork_reset(761,32060
static uint spinlock_count 778,32710
utils_init(783,32939
spinmutex_trylock(813,34117
spinmutex_lock(824,34483
spinmutex_lock_no_yield(845,35191
spinmutex_unlock(863,35755
spinmutex_delete(877,36251
mutex_ownable(885,36449
mutex_lock(900,36753
mutex_trylock(1207,51042
mutex_unlock(1231,51754
mutex_delete(1399,59863
mutex_mark_as_app(1421,60505
own_recursive_lock(1431,60632
acquire_recursive_lock(1442,60930
try_recursive_lock(1458,61290
release_recursive_lock(1472,61597
self_owns_recursive_lock(1484,61856
void read_lock(1537,64183
void write_lock(1654,69419
bool write_trylock(1684,70411
void read_unlock(1711,71326
void write_unlock(1750,72929
self_owns_write_lock(1777,73828
struct _broadcast_event_t 1790,74160
    event_t event;1791,74188
    volatile int num_waiting;1792,74207
create_broadcast_event(1796,74261
destroy_broadcast_event(1806,74493
signal_broadcast_event(1817,74854
intend_wait_broadcast_event_helper(1828,75167
unintend_wait_broadcast_event_helper(1833,75274
wait_broadcast_event_helper(1838,75382
hash_value(1854,75764
hashtable_num_bits(1951,78538
bitmap_find_first_set_bit(1975,79163
bitmap_find_set_block(2007,79666
bitmap_find_set_block_sequence(2026,80198
bitmap_initialize_free(2053,81063
bitmap_allocate_blocks(2059,81201
bitmap_free_blocks(2078,81646
bitmap_are_reserved_blocks(2090,81949
bitmap_count_set_bits(2103,82262
bitmap_check_consistency(2117,82441
get_thread_private_logfile(2137,83019
do_file_write(2155,83364
divide_uint64_print(2205,85505
double_print(2245,87440
display_error(2267,88098
print_symbolic_address(2279,88338
print_file(2286,88471
vprint_to_buffer(2300,88881
print_to_buffer(2323,89844
sn_print_line(2334,90077
print_log(2350,90465
do_syslog(2377,91064
notify(2394,91636
# define REPORT_MSG_MAX 2499,95832
# define REPORT_MSG_MAX 2501,95912
#define REPORT_LEN_VERSION 2503,95956
#define REPORT_LEN_OPTIONS 2512,96368
#define REPORT_NUM_STACK 2518,96735
# define REPORT_LEN_STACK_EACH 2520,96809
# define REPORT_LEN_STACK_EACH 2522,96855
#define REPORT_LEN_STACK 2525,96977
# define REPORT_LEN_PRIVLIBS 2528,97146
#define ASSERT_ROOM(2540,97786
under_internal_exception(2549,98098
# define EXCEPTION_PREFIX 2565,98589
# define EXCEPTION_PREFIX 2567,98670
#  define CLIENT_EXCEPTION_PREFIX 2571,98780
#  define CLIENT_EXCEPTION_PREFIX 2573,98867
#define REPORT_EXCEPTION_SKIP_PREFIX 2576,98954
#define REPORT_CLIENT_EXCEPTION_SKIP_PREFIX 2577,99053
report_dynamorio_problem(2586,99419
report_app_problem(2763,106681
is_readable_without_exception_try(2802,108046
is_string_readable_without_exception(2846,109613
memprot_string(2892,111022
is_region_memset_to_char(2909,111713
double_strchr(2927,112376
double_strrchr(2942,112710
our_wcsnlen(2966,113548
strcasecmp_with_wildcards(2981,113746
str_case_prefix(3006,114349
check_filter_common(3022,114662
check_filter(3055,115759
check_filter_with_wildcards(3061,115902
static char logdir[logdir3067,116058
static bool logdir_initialized 3068,116092
static char basedir[basedir3069,116132
static bool basedir_initialized 3070,116167
static char old_basedir[old_basedir3074,116382
enable_new_log_dir(3085,116993
create_log_dir(3091,117056
get_log_dir(3230,123079
open_log_file(3267,124416
close_log_file(3321,126426
get_unique_logfile(3335,126947
get_app_name_for_path(3383,128761
get_short_name(3389,128853
print_statistics(3407,129277
stats_thread_init(3456,130765
stats_thread_exit(3474,131549
dump_thread_stats(3490,132110
#define STATS_DEF(3523,133758
#undef STATS_DEF3533,134401
dump_global_stats(3545,134698
#define STATS_DEF(3557,135136
#undef STATS_DEF3566,135795
print_timestamp(3593,136479
dump_buffer_as_ascii(3614,137052
dump_buffer_as_bytes 3624,137275
is_valid_xml_char(3720,140662
is_valid_xml_string(3734,141209
is_valid_xml_cdata_string(3748,141582
is_valid_xml_body_string(3758,141865
is_valid_xml_attribute_string(3767,142159
print_xml_cdata(3783,142836
print_version_and_app_info(3805,143515
utils_exit(3822,144162
get_random_offset(3842,144730
        LCM_A 3849,144953
        LCM_Q 3850,144980
        LCM_R 3851,145000
set_random_seed(3883,146158
get_random_seed(3889,146219
static const uint days_per_month_normal[days_per_month_normal3895,146305
static const uint days_per_month_leap[days_per_month_leap3897,146406
year_is_leap_year(3901,146518
convert_millis_to_date(3910,146727
#define BASE_YEAR 3935,147686
#define DAYS_IN_400_YEARS 3937,147766
#define DAYS_IN_100_YEARS 3938,147807
#define DAYS_IN_4_YEARS 3939,147848
convert_date_to_millis(3972,148887
const uint crctab[crctab4005,149790
crc32(4074,153223
#define PUT_64BIT_LE(4108,154517
#define PUT_32BIT_LE(4118,155128
static unsigned char PADDING[PADDING4124,155459
MD5Init(4135,155833
MD5Update(4149,156113
MD5Pad(4187,157167
MD5Final(4208,157717
#define F1(4224,158109
#define F2(4225,158149
#define F3(4226,158181
#define F4(4227,158213
#define MD5STEP(4230,158302
MD5Transform(4239,158656
#undef F14333,162741
#undef F24334,162751
#undef F34335,162761
#undef F44336,162771
#undef MD5STEP4337,162781
module_digests_equal(4341,162883
read_entire_file(4362,163690
check_low_disk_threshold(4410,165229
#define MD5_FILE_READ_BUF_SIZE 4474,168325
get_md5_for_file(4483,168647
get_application_md5(4532,170491
get_md5_for_region(4592,172999
md5_digests_equal(4607,173400
region_intersection(4621,173917
typedef struct _profile_callers_t 4643,174831
    app_pc caller[caller4644,174867
    uint count;4645,174910
    struct _profile_callers_t *next;next4646,174926
} profile_callers_t;4647,174963
profile_callers(4661,175496
profile_callers_exit(4716,177344
#  undef printf4745,178189
# define printf(4747,178213
unit_test_utils(4752,178335
# define DO_TEST(4759,178414
# undef DO_TEST4776,179317
# define DO_TEST(4777,179333
# undef DO_TEST4795,180314
# undef printf4806,180596
dr_strdup(4812,180655
dr_wstrdup(4830,181149
dr_strfree(4877,182974
array_merge(4895,183680
void sn_print_thread_owned_locks(4959,185689

etrans.h,398
#define JADDR_STACK_DEBUG 15,1171
struct jaddr_etrans_list{jaddr_etrans_list18,1268
  app_pc jaddr;19,1294
  struct jaddr_etrans_list *next;next20,1336
struct jaddr_list_attr{jaddr_list_attr25,1457
  struct jaddr_etrans_list *stk_top;stk_top26,1481
  struct jaddr_etrans_list *stk_bottom;stk_bottom27,1518
  int stk_cnt;28,1558
struct jaddr_list_attr *etrans_list;etrans_list43,2157

dispatch.c,2544
# define CPU_SETSIZE 58,2282
# define CPU_SET(59,2317
# define CPU_CLR(60,2396
# define CPU_ISSET(61,2475
# define CPU_ZERO(63,2565
# define CPU_COUNT(64,2636
# define DISPLAY_STRING(76,3063
# define DISPLAY_STRING(78,3117
#define NULL_TERMINATE(81,3178
static struct timeval itr1_start_time,84,3283
static struct timeval itr1_start_time,itr1_end_time,84,3283
static struct timeval itr1_start_time,itr1_end_time,total_itr1_time;84,3283
#undef sched_yield89,3368
static struct timeval itr1_start_time,91,3388
static struct timeval itr1_start_time,itr1_end_time,91,3388
static struct timeval itr1_start_time,itr1_end_time,total_itr1_time;91,3388
static unsigned long long sn_tr_cnt=94,3707
static unsigned int bBlock_call_count=102,3923
struct thread_buffer104,3992
  dcontext_t *tdcontext;tdcontext106,4015
  app_pc tdcon_ntag;107,4040
  fragment_t *tfrag;tfrag108,4061
typedef struct thread_buffer tbuff;111,4086
tbuff tbf;113,4123
long total_sec_sn=142,4509
long total_usec_sn=143,4548
static int sn_fragment_instr_cnt1[sn_fragment_instr_cnt1144,4589
found_client_sysenter(192,5897
void pk_dummy_func(201,6195
void __attribute__ ((noinline)) pk_phase_change_dummy(212,6327
void __attribute__ ((noinline)) pk_set_affinity(221,6505
void *compiler_etrans3(compiler_etrans3272,8242
dispatch(765,29159
is_stopping_point(1124,42627
dispatch_enter_fcache_stats(1152,43491
dispatch_enter_fcache(1232,47205
enter_fcache(1378,54013
handle_special_tag(1421,55370
dispatch_at_stopping_point(1472,56941
dispatch_enter_native(1510,58286
dispatch_enter_dynamorio(1563,60794
dispatch_exit_fcache(1802,72414
dispatch_exit_fcache_stats(2030,82931
adjust_syscall_continuation(2545,104770
handle_system_call(2579,106295
handle_post_system_call(2835,117978
handle_callback_return(2893,119949
issue_last_system_call_from_app(2943,122139
transfer_to_dispatch(2965,122950
long get_total_comp_time(2995,124128
int get_dispatch_call_cnt(2999,124185
int* get_frag_instr_cnt_arr(3003,124248
void __attribute__ ((noinline)) sn_fcache_exit_syscalls_subcat1(3008,124377
void __attribute__ ((noinline)) sn_fcache_exit_ind_br_subcat2(3014,124647
void __attribute__ ((noinline)) sn_fcache_exit_dir_br_subcat3(3020,124966
void __attribute__ ((noinline)) sn_fcache_exit_no_dir_link_subcat4(3026,125305
void __attribute__ ((noinline)) sn_fcache_exit_dir_syscall_subcat5(3032,125593
void sn_print_curr_lock_list(3037,125811
void sn_add_lock_and_inc_counter(3055,126476
void sn_remove_lock_and_dec_counter(3080,127235

hashtablex.h,2001
#define EXPANDKEY(151,6018
#define HTNAME(152,6067
#define KEY_STRING 153,6124
#define ENTRY_IS_REAL(155,6164
# define _IFLOOKUP(159,6299
# define IFLOOKUP_ELSE(160,6325
# define _IFLOOKUP(162,6363
# define IFLOOKUP_ELSE(163,6399
# define TAGS_ARE_EQUAL(167,6462
typedef struct HTNAME(_,NAME_KEY,_table_t)176,6717
HTNAME(309,12182
HTNAME(326,12750
HTNAME(336,13064
HTNAME(531,21906
HTNAME(564,23283
HTNAME(576,23711
HTNAME(598,24549
HTNAME(643,26374
HTNAME(709,29484
HTNAME(771,31745
HTNAME(787,32271
HTNAME(942,39643
HTNAME(1233,52695
HTNAME(1257,53667
HTNAME(1279,54684
HTNAME(1367,58761
HTNAME(1391,59732
HTNAME(1412,60429
HTNAME(1448,61714
HTNAME(1497,63381
HTNAME(1555,65787
HTNAME(1639,69082
HTNAME(1688,70950
HTNAME(1722,72168
HTNAME(1874,77936
HTNAME(1969,81751
HTNAME(1984,82247
HTNAME(2044,84671
HTNAME(2062,85467
HTNAME(2082,86064
HTNAME(2123,87589
HTNAME(2152,88712
HTNAME(2186,90549
HTNAME(2217,91958
#undef NAME_KEY2256,93604
#undef ENTRY_TYPE2257,93620
#undef AUX_ENTRY_TYPE2258,93638
#undef CUSTOM_FIELDS2259,93660
#undef ENTRY_TAG2261,93682
#undef ENTRY_IS_EMPTY2262,93699
#undef ENTRY_IS_SENTINEL2263,93721
#undef ENTRY_IS_INVALID2264,93746
#undef ENTRIES_ARE_EQUAL2265,93770
#undef ENTRY_EMPTY2266,93795
#undef ENTRY_SENTINEL2267,93814
#undef TAGS_ARE_EQUAL2268,93836
#undef AUX_ENTRY_TAG2270,93859
#undef AUX_ENTRY_IS_EMPTY2271,93880
#undef AUX_ENTRY_IS_SENTINEL2272,93906
#undef AUX_ENTRY_IS_INVALID2273,93935
#undef AUX_PAYLOAD_IS_INVALID2274,93963
#undef AUX_ENTRY_SET_TO_SENTINEL2275,93993
#undef AUX_ENTRY_IS_SET_TO_ENTRY2276,94026
#undef AUX_ENTRY_SET_TO_ENTRY2277,94059
#undef AUX_ENTRY_FORMAT_STR2278,94089
#undef AUX_ENTRY_FORMAT_ARGS2279,94117
#undef HASHTABLE_WHICH_HEAP2281,94147
#undef HASHTABLE_USE_LOOKUPTABLE2282,94175
#undef HASHTABLE_ENTRY_STATS2283,94208
#undef HASHTABLE_SUPPORT_PERSISTENCE2284,94237
#undef HTLOCK_RANK2285,94274
#undef _IFLOOKUP2287,94294
#undef IFLOOKUP_ELSE2288,94311

globals.h,26691
#define _GLOBALS_H_ 43,2015
#define SN_INJ_BLKS 45,2038
#define SURYA_CODE_INJECT 46,2063
#define CAPTURE_CACHE_INFO 47,2109
#define SN_PRIORITIZE_PREQ 48,2319
#define SN_FINE_GRAIN_LOCK_WAIT 49,2530
#define SN_1A_1UR_BASE_CASE 51,2814
#define SN_PRTZ_APP_REQ 53,3434
#define SN_EXEC_WITH_ETRANS 54,3578
#define SN_CHECK_CURR_TRANS_ADDR 56,3720
#define SN_DEBUG_CURR_TRANS_ADDR 57,4188
#define CAPTURE_TOTAL_COMP_TIME 58,4392
#define SURYA_THREAD_SUSPEND_PRINT 60,4737
#define SURYA_THREAD_SIGNAL_PRINT 61,4932
#define SURYA_NOTIFY_MSG_PRINT 62,5099
#define SURYA_PROC_STATS 63,5257
#define SURYA_DEBUG 64,5364
#define SURYA_DCONTEXT2 65,5451
#define SURYA_INTERFACE2_APP_WAIT 66,5565
#define SURYA_INTERFACE3_APP_PARALLEL 67,5689
#define SURYA_CLR_STK_AT_PREQ 68,5870
#define SN_DEADLOCK_DEBUG 69,5992
#define SN_THREAD_SYNC_DEBUG 70,6159
#define SN_NUM_ETRANS_THREADS 71,6447
#define SN_MAX_KEA_PASS_CNT 72,6533
#define SN_CAPTURE_BB_TIMES 73,6688
#define SN_STK_MOD_DEBUG 74,6792
#define SN_NO_ETRANS_THREADS 75,7024
#define SN_CHECK_ETRANS_ADDR_STALL_APP 76,7276
#define SN_PRINT_MAPS_DISPATCH 77,7458
#define SN_DEBUG_KNOWN_ADDRS 78,7757
int sn_ethread_wait_cnt;83,7988
char *sn_thread_index[sn_thread_index84,8056
const char *sn_preq_lock_list[sn_preq_lock_list85,8146
const char *sn_preq_lock_list[150],*sn_comp1_lock_list[sn_comp1_lock_list85,8146
const char *sn_preq_lock_list[150],*sn_comp1_lock_list[150],*sn_comp2_lock_list[sn_comp2_lock_list85,8146
int sn_urgent_request;86,8336
int sn_bb_building_cnt,87,8441
int sn_bb_building_cnt,sn_bb_building_cnt1,87,8441
int sn_bb_building_cnt,sn_bb_building_cnt1,sn_bb_building_cnt2;87,8441
int sn_bb_lock_cnt,88,8576
int sn_bb_lock_cnt,sn_bb_lock_cnt1,88,8576
int sn_bb_lock_cnt,sn_bb_lock_cnt1,sn_bb_lock_cnt2;88,8576
int no_etrans_now;89,8736
int sn_subcat4_cnt;90,8898
int sn_build_fragment;91,9044
int sn_get_ibl_type;92,9230
unsigned int sn_ibl_routine_length;93,9331
int sn_new_fragment;95,9456
int sn_frag_cnt1;96,9561
int pk_is_affinity;97,9671
int sn_bb_cnt;98,9727
int sn_disassembly_bb_cnt;99,9760
int sn_start_trace,100,9805
int sn_start_trace,sn_end_trace,100,9805
int sn_start_trace,sn_end_trace,sn_extend_trace;100,9805
int sn_instr_cnt;101,9872
int sn_trace_cnt;102,9908
int sn_trace_blk_cnt,103,9944
int sn_trace_blk_cnt,sn_trace_instr_cnt;103,9944
int sn_total_instr_exec_cnt;104,10003
int sn_total_branch_instr_exec_cnt;105,10123
int sn_total_direct_branch_instr_exec_cnt;106,10274
int wait_on_trans_addr_arr_comp1,110,10510
int wait_on_trans_addr_arr_comp1,wait_on_trans_addr_arr_comp2,110,10510
int wait_on_trans_addr_arr_comp1,wait_on_trans_addr_arr_comp2,wait_on_trans_addr_arr_comp3;110,10510
unsigned long long preq_cnt,111,10704
unsigned long long preq_cnt,total_bb_cnt,111,10704
unsigned long long preq_cnt,total_bb_cnt,preq_cnt_post_dir_addrs_proc;111,10704
unsigned long long etrans_cnt;113,11003
int etrans_instance_jaddr_cnt;114,11127
int etrans_instance_jaddr_cnt1;115,11321
long long sn_fcache_entry_cnt;116,11516
long long total_comp_time;117,11547
long total_thread_elap_time[total_thread_elap_time118,11712
int sn_dispatch_call_cnt;120,11824
int collect_code_cache_stats;122,11971
int collect_context_switch_stats;123,12060
int collect_compilation_time_stats;124,12157
int print_basic_block_info;125,12258
const char *sn_cache_name;sn_cache_name141,12955
const char *sn_cache_region;sn_cache_region142,13054
const char *sn_bb_cache_name;sn_bb_cache_name143,13162
long sn_total_shared_trace_cache_size_inc;144,13263
int sn_trace_fragment;145,13371
int sn_bb_fragment;146,13487
int free_list_slot_cnt;150,13739
int fifo_entry_cnt;151,13815
int sn_private_cache;152,13872
int sn_shared_cache;153,13959
int sn_shared_coarse_cache;154,14044
int sn_bb_private_cache;156,14138
int sn_bb_shared_cache;157,14225
int sn_bb_shared_coarse_cache;158,14310
int shared_coarse_cache_resize;160,14404
int shared_cache_resize;161,14509
int private_cache_resize;162,14600
int thread_flag;164,14695
int trans_flag;165,14783
int trans_flag_new;166,14878
int sn_signal_flag;167,15029
pthread_mutex_t trans_lock;168,15141
pthread_mutex_t trans_lock1;169,15433
pthread_cond_t trans_flag_cv;170,15626
pthread_cond_t trans_flag_cv1;171,15656
pthread_mutex_t compiler_create_lock,172,15687
pthread_mutex_t compiler_create_lock,compiler_create_lock1,172,15687
pthread_mutex_t compiler_create_lock,compiler_create_lock1,compiler_create_lock2,172,15687
pthread_mutex_t compiler_create_lock,compiler_create_lock1,compiler_create_lock2,etrans_lock,172,15687
pthread_mutex_t compiler_create_lock,compiler_create_lock1,compiler_create_lock2,etrans_lock,etrans_lock1,172,15687
pthread_mutex_t compiler_create_lock,compiler_create_lock1,compiler_create_lock2,etrans_lock,etrans_lock1,preq_lock,172,15687
pthread_mutex_t compiler_create_lock,compiler_create_lock1,compiler_create_lock2,etrans_lock,etrans_lock1,preq_lock,jaddr_list_lock,172,15687
pthread_mutex_t compiler_create_lock,compiler_create_lock1,compiler_create_lock2,etrans_lock,etrans_lock1,preq_lock,jaddr_list_lock,jaddr_list_lock1,172,15687
pthread_mutex_t compiler_create_lock,compiler_create_lock1,compiler_create_lock2,etrans_lock,etrans_lock1,preq_lock,jaddr_list_lock,jaddr_list_lock1,comp1_stop_locking,172,15687
pthread_mutex_t compiler_create_lock,compiler_create_lock1,compiler_create_lock2,etrans_lock,etrans_lock1,preq_lock,jaddr_list_lock,jaddr_list_lock1,comp1_stop_locking,comp2_stop_locking,172,15687
pthread_mutex_t compiler_create_lock,compiler_create_lock1,compiler_create_lock2,etrans_lock,etrans_lock1,preq_lock,jaddr_list_lock,jaddr_list_lock1,comp1_stop_locking,comp2_stop_locking,fine_grain_wait_lock;172,15687
pthread_mutex_t curr_trans_addr_lock;173,15896
pthread_cond_t curr_trans_addr_cv;174,16037
pthread_cond_t compiler_create_cond,175,16167
pthread_cond_t compiler_create_cond,comp1_stop_lck_cv,175,16167
pthread_cond_t compiler_create_cond,comp1_stop_lck_cv,comp2_stop_lck_cv,175,16167
pthread_cond_t compiler_create_cond,comp1_stop_lck_cv,comp2_stop_lck_cv,fine_grain_wait_cv;175,16167
pthread_cond_t compiler_create_cond1,176,16259
pthread_cond_t compiler_create_cond1,compiler_create_cond2;176,16259
pthread_cond_t trans_flag_cv_ct1_ct2,177,16319
pthread_cond_t trans_flag_cv_ct1_ct2,trans_flag_cv_ct1_ct3;177,16319
pthread_cond_t trans_flag_cv_ct3_ct1,178,16379
pthread_cond_t trans_flag_cv_ct3_ct1,jaddr_lock_cv,178,16379
pthread_cond_t trans_flag_cv_ct3_ct1,jaddr_lock_cv,jaddr_lock_cv1,178,16379
pthread_cond_t trans_flag_cv_ct3_ct1,jaddr_lock_cv,jaddr_lock_cv1,preq_wait;178,16379
int done_proc_dir_addrs;179,16456
pthread_t tid,180,16481
pthread_t tid,tid1,180,16481
pthread_t tid,tid1,tid2;180,16481
pthread_attr_t attr,181,16579
pthread_attr_t attr,attr1,181,16579
pthread_attr_t attr,attr1,attr2;181,16579
int app_thread_state,182,16681
int app_thread_state,compiler1_thread_state,182,16681
int app_thread_state,compiler1_thread_state,compiler2_thread_state,182,16681
int app_thread_state,compiler1_thread_state,compiler2_thread_state,compiler3_thread_state,182,16681
int app_thread_state,compiler1_thread_state,compiler2_thread_state,compiler3_thread_state,etrans_flag,182,16681
int app_thread_state,compiler1_thread_state,compiler2_thread_state,compiler3_thread_state,etrans_flag,etrans_flag1,182,16681
int app_thread_state,compiler1_thread_state,compiler2_thread_state,compiler3_thread_state,etrans_flag,etrans_flag1,have_jaddr_lock,182,16681
int app_thread_state,compiler1_thread_state,compiler2_thread_state,compiler3_thread_state,etrans_flag,etrans_flag1,have_jaddr_lock,have_jaddr_lock1,182,16681
int app_thread_state,compiler1_thread_state,compiler2_thread_state,compiler3_thread_state,etrans_flag,etrans_flag1,have_jaddr_lock,have_jaddr_lock1,waiting_on_jaddr_lock,182,16681
int app_thread_state,compiler1_thread_state,compiler2_thread_state,compiler3_thread_state,etrans_flag,etrans_flag1,have_jaddr_lock,have_jaddr_lock1,waiting_on_jaddr_lock,waiting_on_jaddr_lock1,182,16681
int app_thread_state,compiler1_thread_state,compiler2_thread_state,compiler3_thread_state,etrans_flag,etrans_flag1,have_jaddr_lock,have_jaddr_lock1,waiting_on_jaddr_lock,waiting_on_jaddr_lock1,fine_grain_wait 182,16681
pthread_cond_t jaddr_list_cv;184,17387
pthread_t sn_tid[sn_tid186,17533
pthread_attr_t sn_attr[sn_attr187,17628
int sn_empty_stack;189,17730
int sn_dynamo_exited;191,17841
char *sn_curr_lock_list_preq[sn_curr_lock_list_preq192,17888
char *sn_curr_lock_list_preq[10],*sn_curr_lock_list_et_comp1[sn_curr_lock_list_et_comp1192,17888
char *sn_curr_lock_list_preq[10],*sn_curr_lock_list_et_comp1[10],*sn_curr_lock_list_et_comp2[sn_curr_lock_list_et_comp2192,17888
char *sn_curr_lock_list_preq[10],*sn_curr_lock_list_et_comp1[10],*sn_curr_lock_list_et_comp2[10],*sn_curr_lock_list_app[sn_curr_lock_list_app192,17888
int sn_curr_lck_cnt_preq,193,18013
int sn_curr_lck_cnt_preq,sn_curr_lck_cnt_et_comp1,193,18013
int sn_curr_lck_cnt_preq,sn_curr_lck_cnt_et_comp1,sn_curr_lck_cnt_et_comp2,193,18013
int sn_curr_lck_cnt_preq,sn_curr_lck_cnt_et_comp1,sn_curr_lck_cnt_et_comp2,sn_curr_lck_cnt_app;193,18013
int new_eaddr;195,18110
#define _WIN32_WINNT 210,18729
#  define WIN32_LEAN_AND_MEAN212,18815
struct kea_entry{kea_entry248,20661
  app_pc known_addr;249,20679
  int loaded_in_mem;250,20700
typedef struct kea_entry kea_entry;253,20725
kea_entry known_etrans_addrs[known_etrans_addrs255,20762
unsigned long int max_kea_cnt;256,20896
int kea_pass_cnt;257,21117
unsigned long int curr_kea_arr_ind;258,21259
app_pc curr_trans_addr[curr_trans_addr259,21399
app_pc prev_trace_end_pc;260,21521
app_pc curr_trace_end_pc;261,21613
app_pc curr_trace_start_pc;262,21716
#define DYNAMORIO_STATS_EXPORTS 277,22370
#    define DYNAMORIO_EXPORT 293,22975
#    define DYNAMORIO_EXPORT 300,23336
#    define DYNAMORIO_EXPORT 303,23493
#  define DR_API 307,23561
#  define DR_API 309,23601
#  define DR_UNS_API 312,23649
#  define DR_UNS_API 314,23683
# define NOINLINE 318,23741
# define NOINLINE 320,23786
#define INLINE_ONCE 323,23838
void *stackarr[stackarr330,23947
size_t stack_sz;331,23988
size_t stk_str_itr;332,24036
char **stk_fr_strs;stk_fr_strs333,24132
typedef unsigned long ulong;341,24322
typedef unsigned short ushort;342,24351
typedef HANDLE file_t;351,24749
#define INVALID_FILE 352,24772
#define STDOUT 353,24814
#define STDERR 354,24857
#define STDIN 355,24900
#define DIRSEP 356,24942
#define ALT_DIRSEP 357,24962
typedef unsigned long ulong;362,25062
#define DIRSEP 367,25299
#define ALT_DIRSEP 368,25318
pid_t tid_for_dcontext,372,25378
pid_t tid_for_dcontext,tid_for_dcontext1,372,25378
pid_t tid_for_dcontext,tid_for_dcontext1,tid_for_dcontext2;372,25378
pid_t app_thread_pid,374,25703
pid_t app_thread_pid,compiler_etrans3_pid;374,25703
file_t app_fp,375,25746
file_t app_fp,comp1_fp,375,25746
file_t app_fp,comp1_fp,comp2_fp;375,25746
DIR *dip,dip377,25862
DIR *dip,*dip_etrans;dip_etrans377,25862
struct dirent *dit,dit378,25917
struct dirent *dit,*dit_etrans;dit_etrans378,25917
char *s_sn,s_sn379,25980
char *s_sn,tmp_str[tmp_str379,25980
char *s_sn,tmp_str[5000],tmp_str_etrans[tmp_str_etrans379,25980
char *s_sn,tmp_str[5000],tmp_str_etrans[5000],proc_fname_sn[proc_fname_sn379,25980
char *s_sn,tmp_str[5000],tmp_str_etrans[5000],proc_fname_sn[1000],proc_fname_sn_etrans[proc_fname_sn_etrans379,25980
file_t proc_file_ptr,381,26159
file_t proc_file_ptr,proc_file_ptr_etrans;381,26159
int count_sscanf;383,26307
int idummy;384,26375
long ldummy,385,26452
long ldummy,btime_u_mode,385,26452
long ldummy,btime_u_mode, btime_s_mode,385,26452
long ldummy,btime_u_mode, btime_s_mode,wtime_u_mode,385,26452
long ldummy,btime_u_mode, btime_s_mode,wtime_u_mode,wtime_s_mode;385,26452
clock_t app_start_time,387,26584
clock_t app_start_time,app_end_time,387,26584
clock_t app_start_time,app_end_time,comp_start_time[comp_start_time387,26584
clock_t app_start_time,app_end_time,comp_start_time[SN_NUM_ETRANS_THREADS],total_clk_tks[total_clk_tks387,26584
clock_t app_start_time,app_end_time,comp_start_time[SN_NUM_ETRANS_THREADS],total_clk_tks[SN_NUM_ETRANS_THREADS+1],app_bb_exec_start_clock,387,26584
clock_t app_start_time,app_end_time,comp_start_time[SN_NUM_ETRANS_THREADS],total_clk_tks[SN_NUM_ETRANS_THREADS+1],app_bb_exec_start_clock,app_bb_exec_end_clock,387,26584
clock_t app_start_time,app_end_time,comp_start_time[SN_NUM_ETRANS_THREADS],total_clk_tks[SN_NUM_ETRANS_THREADS+1],app_bb_exec_start_clock,app_bb_exec_end_clock,total_bb_exec_ticks,387,26584
clock_t app_start_time,app_end_time,comp_start_time[SN_NUM_ETRANS_THREADS],total_clk_tks[SN_NUM_ETRANS_THREADS+1],app_bb_exec_start_clock,app_bb_exec_end_clock,total_bb_exec_ticks,app_bb_trans_start_clock,387,26584
clock_t app_start_time,app_end_time,comp_start_time[SN_NUM_ETRANS_THREADS],total_clk_tks[SN_NUM_ETRANS_THREADS+1],app_bb_exec_start_clock,app_bb_exec_end_clock,total_bb_exec_ticks,app_bb_trans_start_clock,app_bb_trans_end_clock,387,26584
clock_t app_start_time,app_end_time,comp_start_time[SN_NUM_ETRANS_THREADS],total_clk_tks[SN_NUM_ETRANS_THREADS+1],app_bb_exec_start_clock,app_bb_exec_end_clock,total_bb_exec_ticks,app_bb_trans_start_clock,app_bb_trans_end_clock,total_bb_trans_ticks;387,26584
clock_t total_thread_local_trans_ticks[total_thread_local_trans_ticks389,26873
long long int thread_local_bb_cnts[thread_local_bb_cnts390,26936
#define INVALID_THREAD_ID 400,27379
typedef unsigned char uchar;402,27409
typedef byte * cache_pc;403,27438
static cache_pc sn_shared_coarse_cache_start_pc;408,27517
static cache_pc sn_shared_coarse_cache_end_pc;409,27617
static cache_pc sn_shared_coarse_cache_cur_pc;410,27713
static cache_pc sn_shared_coarse_cache_prev_end_pc;411,27813
static cache_pc sn_shared_coarse_cache_initial_start_pc;412,27923
static cache_pc sn_shared_coarse_cache_initial_end_pc;413,28039
static cache_pc sn_shared_coarse_cache_initial_cur_pc;414,28151
static cache_pc sn_shared_cache_start_pc;416,28268
static cache_pc sn_shared_cache_end_pc;417,28353
static cache_pc sn_shared_cache_cur_pc;418,28434
static cache_pc sn_shared_cache_prev_end_pc;419,28519
static cache_pc sn_shared_cache_initial_start_pc;420,28615
static cache_pc sn_shared_cache_initial_end_pc;421,28721
static cache_pc sn_shared_cache_initial_cur_pc;422,28823
static cache_pc sn_private_cache_start_pc;424,28930
static cache_pc sn_private_cache_end_pc;425,29024
static cache_pc sn_private_cache_cur_pc;426,29114
static cache_pc sn_private_cache_prev_end_pc;427,29208
static cache_pc sn_private_cache_initial_start_pc;428,29312
static cache_pc sn_private_cache_initial_end_pc;429,29427
static cache_pc sn_private_cache_initial_cur_pc;430,29541
static cache_pc sn_cache_start_pc;433,29661
static cache_pc sn_cache_end_pc;434,29758
static cache_pc sn_cache_cur_pc;435,29851
static cache_pc sn_bb_shared_coarse_cache_initial_start_pc;438,29950
static cache_pc sn_bb_shared_coarse_cache_initial_end_pc;439,30066
static cache_pc sn_bb_shared_coarse_cache_initial_cur_pc;440,30178
static cache_pc sn_bb_shared_cache_initial_start_pc;441,30290
static cache_pc sn_bb_shared_cache_initial_end_pc;442,30399
static cache_pc sn_bb_shared_cache_initial_cur_pc;443,30506
static cache_pc sn_bb_private_cache_initial_start_pc;444,30613
static cache_pc sn_bb_private_cache_initial_end_pc;445,30723
static cache_pc sn_bb_private_cache_initial_cur_pc;446,30831
static cache_pc sn_bb_cache_start_pc;447,30939
static cache_pc sn_bb_cache_end_pc;448,31033
static cache_pc sn_bb_cache_cur_pc;449,31125
#define SUCCESS 454,31244
#define FAILURE 455,31262
# define _IF_DGCDIAG(459,31363
# define IF_DGCDIAG_ELSE(460,31391
# define _IF_DGCDIAG(462,31430
# define IF_DGCDIAG_ELSE(463,31454
typedef struct _opnd_t opnd_t;505,32428
typedef struct _instr_t instr_t;507,32476
typedef struct _fragment_t fragment_t;510,32551
typedef struct _future_fragment_t future_fragment_t;512,32617
typedef struct _trace_t trace_t;514,32687
typedef struct _linkstub_t linkstub_t;516,32740
typedef struct _dcontext_t dcontext_t;518,32799
typedef struct vm_area_vector_t vm_area_vector_t;520,32863
typedef struct _coarse_info_t coarse_info_t;522,32936
typedef struct _coarse_freeze_info_t coarse_freeze_info_t;524,33011
dcontext_t *dcon_etrans[dcon_etrans528,33116
dcontext_t *dcon_etrans1,dcon_etrans1529,33230
dcontext_t *dcon_etrans1,*dcon_etrans2;dcon_etrans2529,33230
dcontext_t *dcon_app;dcon_app530,33338
dcontext_t *dcon_global;dcon_global531,33419
typedef struct _instr_list_t instrlist_t;537,33641
typedef struct _module_data_t module_data_t;538,33683
    uint year;547,33873
    uint month;548,33904
    uint day_of_week;549,33935
    uint day;550,33966
    uint hour;551,33997
    uint minute;552,34028
    uint second;553,34059
    uint milliseconds;554,34090
} dr_time_t;555,34121
typedef struct _rct_module_table_t rct_module_table_t;560,34245
    RCT_RAC 563,34317
    RCT_RCT,564,34334
    RCT_NUM_TYPES,565,34347
} rct_type_t;566,34366
typedef struct _thread_record_t 569,34388
    thread_id_t id;570,34422
    HANDLE handle;572,34475
    bool retakeover;573,34523
    process_id_t pid;575,34550
    bool execve;576,34594
    uint num;578,34669
    bool under_dynamo_control;579,34714
    dcontext_t *dcontext;dcontext580,34797
    struct _thread_record_t * next;581,34879
} thread_record_t;582,34915
# undef DYNAMORIO_EXPORT591,35256
# define DYNAMORIO_EXPORT 592,35281
typedef uint linkcount_type_t;597,35377
typedef uint64 linkcount_type_t;599,35414
typedef struct _client_to_do_list_t 616,35685
    instrlist_t *ilist;ilist619,35859
    app_pc tag;620,35883
    struct _client_to_do_list_t *next;next621,35899
} client_todo_list_t;622,35938
typedef struct _client_flush_req_t 625,36039
    app_pc start;626,36076
    size_t size;627,36094
    uint   flush_id;628,36111
    void (*flush_callback)flush_callback629,36180
    struct _client_flush_req_t *next;next630,36213
} client_flush_req_t;631,36251
#define IS_CLIENT_THREAD(635,36447
typedef struct _client_data_t 641,36686
    void *         user_field;643,36767
    client_todo_list_t * to_do;644,36798
    client_flush_req_t *flush_list;flush_list645,36830
    mutex_t            sideline_mutex;647,36890
    module_data_t      *no_delete_mod_data;no_delete_mod_data650,37023
    bool           is_client_thread;667,38155
    bool           client_thread_safe_for_synch;668,38228
    bool           suspendable;669,38277
    bool           left_unsuspended;670,38346
    uint           mutex_count;671,38426
    void           *client_grab_mutex;client_grab_mutex672,38493
    bool           is_translating;674,38546
    bool           in_pre_syscall;678,38671
    bool           in_post_syscall;679,38706
    bool           invoke_another_syscall;681,38789
    bool           mcontext_in_dcontext;683,38886
    bool           suspended;684,38927
    priv_mcontext_t *cur_mc;cur_mc685,38957
} client_data_t;686,38986
# define IS_CLIENT_THREAD(688,39009
typedef struct _pending_nudge_t 693,39160
    nudge_arg_t arg;694,39194
    struct _pending_nudge_t *next;next695,39215
} pending_nudge_t;696,39250
#define DYNAMORIO_STACK_SIZE 700,39324
# define standalone_library 720,40341
#define ALL_THREADS_HASH_BITS 779,42139
    WHERE_APP=856,45252
    WHERE_INTERP,857,45270
    WHERE_DISPATCH,858,45288
    WHERE_MONITOR,859,45308
    WHERE_SYSCALL_HANDLER,860,45327
    WHERE_SIGNAL_HANDLER,861,45354
    WHERE_TRAMPOLINE,862,45380
    WHERE_CONTEXT_SWITCH,863,45402
    WHERE_IBL,864,45428
    WHERE_FCACHE,865,45443
    WHERE_UNKNOWN,866,45461
    WHERE_HOTPATCH,868,45510
    WHERE_LAST870,45537
} where_am_i_t;871,45552
    READONLY=877,45688
    READONLY=false,877,45688
    WRITABLE=878,45709
    WRITABLE=true878,45709
    EXIT_REASON_SELFMOD 884,45874
    EXIT_REASON_FLOAT_PC_FNSAVE,886,45961
    EXIT_REASON_FLOAT_PC_FXSAVE,887,45994
    EXIT_REASON_FLOAT_PC_FXSAVE64,888,46027
    EXIT_REASON_FLOAT_PC_XSAVE,889,46062
    EXIT_REASON_FLOAT_PC_XSAVE64,890,46094
enum { MAX_NATIVE_RETSTACK 899,46461
typedef struct _retaddr_and_retloc_t 901,46497
    app_pc retaddr;902,46536
    app_pc retloc;903,46556
} retaddr_and_retloc_t;904,46575
typedef struct try_except_context_t 907,46642
    dr_jmp_buf_t context;913,46969
    struct try_except_context_t *prev_context;prev_context915,46996
} try_except_context_t;916,47043
typedef struct _try_except_t 922,47244
    try_except_context_t *try_except_state;try_except_state923,47275
    bool unwinding_exception;924,47348
} try_except_t;926,47492
    priv_mcontext_t mcontext;934,47701
    int            errno;936,47797
    bool at_syscall;938,47889
    ushort exit_reason;942,48174
    reg_t inline_spill_slots[inline_spill_slots947,48403
} unprotected_context_t;949,48468
struct _dcontext_t 961,48902
        unprotected_context_t *separate_upcontext;separate_upcontext981,49754
        unprotected_context_t upcontext;982,49805
    } upcontext;983,49846
    unprotected_context_t *upcontext_ptr;upcontext_ptr987,50026
    app_pc         next_tag;994,50320
    linkstub_t *     last_exit;996,50350
    byte *         dstack;997,50415
    bool           is_exiting;999,50486
    int            app_errno;1003,50629
    void *         app_fls_data;1004,50659
    void *         priv_fls_data;1005,50692
    void *         app_nt_rpc;1006,50726
    void *         priv_nt_rpc;1007,50757
    void *         app_nls_cache;1008,50789
    void *         priv_nls_cache;1009,50823
    void *         app_stack_limit;1011,50871
    byte *         teb_base;1014,50983
    app_pc         sysenter_storage;1020,51278
    bool           ignore_enterexit;1023,51398
        app_pc src_tag;1033,51753
        coarse_info_t *dir_exit;dir_exit1034,51777
    } coarse_exit;1035,51810
    bool           initialized;1042,52057
    thread_id_t      owning_thread;1043,52131
    process_id_t     owning_process;1045,52179
    thread_record_t   *thread_record;thread_record1047,52272
    where_am_i_t       whereami;1048,52353
    void *         allocated_start;1049,52430
    fragment_t *     last_fragment;1050,52497
    int            sys_num;1052,52587
    reg_t *        sys_param_base;1054,52670
    reg_t          sys_param0;1057,52779
    reg_t          sys_param1;1058,52847
    reg_t          sys_param2;1059,52915
    reg_t          sys_param3;1060,52983
    reg_t          sys_param4;1063,53070
    bool           sys_was_int;1064,53144
    bool           sys_xbp;1065,53231
    bool           mprot_multi_areas;1067,53313
    bool           x86_mode;1077,53684
    void *         link_field;1081,53776
    void *         monitor_field;1082,53807
    void *         fcache_field;1083,53841
    void *         fragment_field;1084,53874
    void *         heap_field;1085,53909
    void *         vm_areas_field;1086,53940
    void *         os_field;1087,53975
    void *         synch_field;1088,54004
    void *         signal_field;1090,54048
    void *         pcprofile_field;1091,54081
    bool           signals_pending;1092,54117
    void *         private_code;1094,54160
    cache_pc       trace_head_pc;1097,54270
    dcontext_t *next_saved;next_saved1103,54462
    dcontext_t *prev_unused;prev_unused1105,54498
    bool           valid;1107,54605
    reg_t          nonswapped_scratch;1113,54940
    app_pc         asynch_target;1120,55187
    app_pc         native_exec_postsyscall;1125,55345
    retaddr_and_retloc_t native_retstack[native_retstack1130,55513
    uint native_retstack_cur;1131,55576
    bool           alloc_no_reserve;1134,55634
    int num_calls;1138,55758
    int num_rets;1139,55777
    int call_depth;1140,55795
    int            call_depth;1144,55849
    void *         call_stack;1145,55880
    file_t                        logfile;1149,55932
    thread_local_statistics_t *     thread_stats;1150,55975
    bool                        expect_last_syscall_to_fail;1151,56025
    bool                        in_opnd_disassemble;1155,56221
    thread_locks_t *               thread_owned_locks;1158,56319
    thread_kstats_t *              thread_kstats;1161,56395
    uint64         cache_enter_time;1165,56474
    uint64         start_time;1166,56511
    fragment_t *     prev_fragment;1167,56585
    uint64         cache_frag_count;1169,56660
    uint64         cache_time[cache_time1170,56741
    uint64         cache_count[cache_count1171,56813
    client_data_t *client_data;client_data1176,56955
    bool           trace_sysenter_exit;1187,57516
    app_pc         forged_exception_addr;1191,57707
    bool           nudge_thread;1194,57808
    dr_jmp_buf_t   hotp_excpt_state;1195,57887
    try_except_t   try_except;1197,57972
    aslr_syscall_context_t aslr_context;1205,58324
    void           *nudge_target;nudge_target1216,58999
    bool           free_app_stack;1220,59160
    bool           nudge_terminate_process;1223,59250
    uint           nudge_exit_code;1224,59294
    local_state_t *local_state;local_state1230,59471
    app_pc win32_start_addr;1239,59877
    void *bb_build_info;bb_build_info1243,59998
    pending_nudge_t *nudge_pending;nudge_pending1249,60128
    fragment_t *interrupted_for_nudge;interrupted_for_nudge1251,60218
    int libc_errno;1254,60335
    bool post_syscall;1258,60383
#define GLOBAL_DCONTEXT 1266,60525
get_mcontext(1270,60697
    DUMP_XML=1282,61162
    DUMP_XML=true,1282,61162
    DUMP_NOT_XML=1283,61181
    DUMP_NOT_XML=false1283,61181
#undef snprintf 1293,61618
#define snprintf 1294,61657
#undef _snprintf1295,61687
#define _snprintf 1296,61704
#undef vsnprintf1297,61735
#define vsnprintf 1298,61752
#define snwprintf 1299,61784
#define _snwprintf 1300,61821
#define sscanf 1307,62198
#  define strcasecmp 1314,62305
#  define strncasecmp 1315,62335
#  define wcscasecmp 1316,62367
#  define printf 1320,62477
#  undef sprintf 1321,62522
#  define sprintf 1322,62562
#  define swprintf 1323,62608
#  undef vsprintf 1324,62655
#  define vsprintf 1325,62696
#  define __try 1326,62743
#  define mprotect 1329,62833
#  define mmap 1330,62884
#  define munmap 1331,62931
#  define getppid 1332,62980
#  define sched_yield 1333,63030
#  define dup 1334,63084
#  define sigaltstack 1335,63130
#  define setitimer 1336,63184
#  define _exit 1337,63236
#  define modify_ldt 1340,63526

dynamo.c,3846
bool    dynamo_initialized 91,3027
bool    dynamo_heap_initialized 92,3063
bool    automatic_startup 93,3104
bool    control_all_threads 94,3139
bool    dr_early_injected 96,3191
int     dr_early_injected_location 97,3226
bool    dr_earliest_injected 98,3288
static void * dr_earliest_inject_args;99,3326
bool    dr_injected_primary_thread 107,3668
bool    dr_injected_secondary_thread 108,3712
bool    dr_late_injected_primary_thread 111,3837
bool    dr_api_entry 115,4005
bool    dr_api_exit 116,4035
bool    dr_preinjected 119,4097
static bool dynamo_exiting 122,4172
bool    dynamo_exited 124,4215
bool    dynamo_exited_and_cleaned 125,4246
bool    dynamo_exited_log_and_stats 127,4302
bool    dynamo_resetting 133,4572
bool    standalone_library 135,4669
bool    post_execve 138,4724
byte *  initstack;141,4810
#define EXCEPTION_STACK_SIZE 145,4960
END_DATA_SECTION(175,6226
const char * const DATASEC_NAMES[DATASEC_NAMES197,6890
typedef struct _protect_info_t 205,7121
    mutex_t lock;209,7251
    int num_threads_unprot;210,7269
    int num_threads_suspended;211,7324
} protect_info_t;212,7355
static protect_info_t *protect_info;protect_info213,7373
static uint starttime;232,7809
file_t main_logfile 234,7833
dr_statistics_t *stats stats238,7917
thread_record_t ** all_threads;249,8342
main_logfile_name(271,9380
thread_logfile_name(277,9465
statistics_pre_init(286,9625
statistics_init(304,10350
# define STATS_DEF(317,10696
# define RSTATS_DEF(319,10736
#undef STATS_DEF322,10799
#undef RSTATS_DEF323,10816
# define STATS_DEF(331,11130
# define RSTATS_DEF(336,11344
#undef STATS_DEF342,11581
#undef RSTATS_DEF343,11598
statistics_exit(347,11631
get_dr_stats(353,11694
dynamorio_app_init(363,11945
dynamorio_fork_init(1066,40781
standalone_init(1180,44918
standalone_exit(1250,47172
dynamo_process_exit_with_thread_info(1263,47479
dynamo_shared_exit(1270,47642
dynamorio_app_exit(1453,53544
synch_with_threads_at_exit(1478,54179
dynamo_process_exit_cleanup(1548,57500
dynamo_nullcalls_exit(1630,60918
dynamo_process_exit(1653,61412
create_new_dynamo_context(2096,78623
delete_dynamo_context(2169,81825
initialize_dynamo_context(2201,83170
create_callback_dcontext(2298,86360
is_thread_initialized(2394,90550
is_thread_known(2409,90954
mark_thread_execve(2419,91196
get_num_threads(2439,91722
is_last_app_thread(2445,91814
get_list_of_threads_common(2461,92471
get_list_of_threads(2510,94384
get_list_of_threads_ex(2517,94520
thread_lookup(2527,94780
get_thread_num(2559,95558
add_thread(2569,95772
remove_thread(2630,98398
dynamo_thread_init(2674,99798
dynamo_thread_exit_pre_client(2910,108950
dynamo_thread_exit_common(2933,109738
dynamo_thread_exit(3156,117655
dynamo_other_thread_exit(3164,117909
dynamo_thread_stack_free_and_exit(3179,118529
dr_app_setup(3193,118868
dr_app_cleanup(3206,119289
dr_app_start_helper(3232,120387
dr_app_stop(3251,120984
dr_app_setup_and_start(3257,121072
dynamo_thread_under_dynamo(3269,121281
dynamo_thread_not_under_dynamo(3291,121958
#define MAX_TAKE_OVER_ATTEMPTS 3310,122512
dynamorio_take_over_threads(3315,122606
dynamorio_app_take_over_helper(3340,123438
dynamorio_app_init_and_early_takeover(3392,125465
dynamorio_earliest_init_takeover_C(3425,127064
dynamorio_protect(3472,128843
dynamorio_unprotect(3541,131591
get_data_section_name(3598,134028
check_should_be_protected(3609,134238
data_sections_enclose_region(3653,135818
get_data_section_bounds(3679,136822
DECLARE_DATA_SECTION(3714,138488
data_section_exit(3752,139660
#define DATASEC_WRITABLE_MOD(3769,140286
protect_data_section(3779,140737
entering_dynamorio(3835,143265
exiting_dynamorio(3850,143762
is_on_initstack(3867,144368
is_on_dstack(3874,144525
is_currently_on_dstack(3881,144681
pre_second_thread(3889,144827

fragment.c,13866
#define INIT_HTABLE_SIZE_SHARED_BB 59,2351
#define INIT_HTABLE_SIZE_SHARED_TRACE 60,2428
#define INIT_HTABLE_SIZE_BB 62,2528
#define INIT_HTABLE_SIZE_SHARED_FUTURE 64,2641
#  define INIT_HTABLE_SIZE_AFTER_CALL 67,2789
#define INIT_HTABLE_SIZE_FUTURE 70,2903
#define INIT_HTABLE_SIZE_COARSE 74,3038
#define INIT_HTABLE_SIZE_COARSE_TH 75,3072
#  define INIT_HTABLE_SIZE_RCT_IBT 80,3196
#define INIT_HTABLE_SIZE_TRACE 90,3484
static fragment_table_t *shared_bb;shared_bb106,4228
static fragment_table_t *shared_trace;shared_trace107,4264
static fragment_table_t *sn_thread_shared_private[sn_thread_shared_private108,4303
static fragment_table_t *sn_thread_shared_future_private[sn_thread_shared_future_private109,4395
static fragment_table_t *shared_future;shared_future112,4568
static per_thread_t *shared_pt;shared_pt118,4784
#define USE_SHARED_PT(120,4817
typedef struct _dead_fragment_table_t 127,5163
    fragment_entry_t *table_unaligned;table_unaligned128,5203
    uint table_flags;129,5242
    uint capacity;130,5264
    uint ref_count;131,5283
    struct _dead_fragment_table_t *next;next132,5303
} dead_fragment_table_t;133,5344
typedef struct _dead_table_lists_t 136,5442
    dead_fragment_table_t *dead_tables;dead_tables137,5479
    dead_fragment_table_t *dead_tables_tail;dead_tables_tail138,5519
} dead_table_lists_t;139,5564
static dead_table_lists_t *dead_lists;dead_lists141,5587
static rct_module_table_t rac_non_module_table;152,6072
rct_module_table_t rct_global_table;177,7047
#define NULL_TAG 180,7092
#define FAKE_TAG 182,7195
byte * hashlookup_null_target;191,7544
#define HASHLOOKUP_NULL_START_PC 192,7575
static const fragment_t null_fragment 193,7644
static const fragment_t sentinel_fragment 196,7857
static const fragment_t unlinked_fragment 206,8362
#define REAL_FRAGMENT(211,8613
#define GET_PT(216,8804
#define TABLE_PROTECTED(219,8934
#define GET_FTABLE_HELPER(223,9098
#define GET_FTABLE(231,9549
#define GET_IBT_TABLE(234,9703
#define SHOULD_OUTPUT_FRAGMENT(270,11400
#define FRAGMENT_COARSE_WRAPPER_FLAGS 275,11548
                     } coarse_emit_fragment,294,12358
typedef struct _thread_list_t 303,12713
    uint thread_num;304,12745
    uint count;305,12766
    struct _thread_list_t *next;next306,12782
} thread_list_t;307,12815
typedef struct _shared_entry_t 309,12833
    app_pc tag;310,12866
    uint num_threads;311,12882
    thread_list_t *threads;threads312,12904
    uint heap_size;313,12932
    uint cache_size;314,12952
    struct _shared_entry_t *next;next315,12973
} shared_entry_t;316,13007
# define SHARED_HASH_BITS 317,13025
static shared_entry_t ** shared_blocks;318,13054
static shared_entry_t ** shared_traces;321,13210
shared_block_lookup(327,13433
reset_shared_block_table(343,13791
add_shared_block(367,14564
print_shared_table_stats(432,16817
print_shared_stats(469,18218
static int bb_sizes[bb_sizes480,18608
static int trace_sizes[trace_sizes481,18637
static int num_bb 482,18668
static int num_traces 483,18691
record_fragment_size(486,18724
print_size_results(500,19001
#define FRAGTABLE_WHICH_HEAP(509,19308
# define UNPROT_STAT(514,19539
# define ALLOC_UNPROT_STATS(518,19679
# define DEALLOC_UNPROT_STATS(525,20161
# define CHECK_UNPROT_STATS(528,20394
check_stay_on_trace_stats_overflow(531,20477
update_lookuptable_tls(549,21306
static const char *ibl_bb_table_type_names[ibl_bb_table_type_names578,22471
static const char *ibl_trace_table_type_names[ibl_trace_table_type_names580,22581
dump_lookuptable_tls(586,22743
#define FRAGENTRY_FROM_FRAGMENT(615,23778
#define NAME_KEY 618,23918
#define ENTRY_TYPE 619,23939
static const fragment_entry_t fe_empty 622,24075
static const fragment_entry_t fe_sentinel 623,24156
#define ENTRY_TAG(624,24244
#define ENTRY_EMPTY 625,24306
#define ENTRY_SENTINEL 626,24347
#define IBL_ENTRY_IS_EMPTY(627,24391
#define IBL_ENTRY_IS_INVALID(630,24536
#define IBL_ENTRY_IS_SENTINEL(631,24601
#define ENTRY_IS_EMPTY(634,24755
#define ENTRY_IS_SENTINEL(635,24808
#define ENTRY_IS_INVALID(636,24864
#define IBL_ENTRIES_ARE_EQUAL(637,24919
#define ENTRIES_ARE_EQUAL(638,25002
#define HASHTABLE_WHICH_HEAP(639,25075
#define HTLOCK_RANK 640,25139
#define HASHTABLE_ENTRY_STATS 641,25186
hashtable_ibl_free_entry(649,25396
#define NAME_KEY 660,25756
#define ENTRY_TYPE 661,25782
#define ENTRY_TAG(664,25860
#define ENTRY_EMPTY 666,25971
#define ENTRY_SENTINEL 667,26036
#define ENTRY_IS_EMPTY(668,26105
#define ENTRY_IS_SENTINEL(669,26177
#define ENTRY_IS_INVALID(670,26253
#define ENTRIES_ARE_EQUAL(671,26329
#define HASHTABLE_WHICH_HEAP(672,26376
#define HTLOCK_RANK 673,26440
hashtable_fragment_resized_custom(679,26579
hashtable_fragment_init_internal_custom(688,26916
hashtable_fragment_study_custom(695,27051
hashtable_ibl_init_internal_custom(704,27342
hashtable_ibl_myinit(756,29443
hashtable_ibl_myfree(798,31378
hashtable_fragment_free_entry(810,31729
fragment_add_to_hashtable(824,32173
update_indirect_exit_stubs_from_table(863,34064
safely_nullify_tables(887,34864
add_to_dead_table_list(930,36905
hashtable_ibl_resized_custom(977,38905
hashtable_ibl_study_custom(1064,43178
hashtable_fragment_reset(1112,45632
#define APP_PC_EMPTY 1216,50336
#define APP_PC_SENTINEL 1218,50421
#define APP_PC_ENTRY_IS_EMPTY(1219,50479
#define APP_PC_ENTRY_IS_SENTINEL(1220,50539
#define APP_PC_ENTRY_IS_REAL(1221,50602
#define NAME_KEY 1224,50811
#define ENTRY_TYPE 1225,50835
#define ENTRY_TAG(1227,50906
#define ENTRY_EMPTY 1228,50958
#define ENTRY_SENTINEL 1229,51005
#define ENTRY_IS_EMPTY(1230,51055
#define ENTRY_IS_SENTINEL(1231,51114
#define ENTRY_IS_INVALID(1232,51176
#define ENTRIES_ARE_EQUAL(1233,51243
#define HASHTABLE_WHICH_HEAP(1234,51290
#define HTLOCK_RANK 1235,51344
#define HASHTABLE_SUPPORT_PERSISTENCE 1236,51398
hashtable_app_pc_init_internal_custom(1244,51616
hashtable_app_pc_resized_custom(1249,51731
hashtable_app_pc_study_custom(1258,52060
hashtable_app_pc_free_entry(1265,52262
fragment_initialized(1276,52581
fragment_reset_init(1283,52785
fragment_init(1426,59418
fragment_reset_free(1490,61888
fragment_exit(1616,67360
dec_table_ref_count(1758,72908
dec_all_table_ref_counts(1846,77001
fragment_thread_reset_init(1869,77931
fragment_thread_init(2046,87071
fragment_thread_reset_free(2100,88950
fragment_thread_exit(2225,94159
fragment_fork_init(2267,95406
fragment_heap_size(2293,96216
fragment_create_heap(2308,96782
fragment_init_heap(2326,97547
fragment_create(2381,99431
fragment_recreate_with_linkstubs(2537,105873
fragment_free(2591,108183
fragment_stubs_end_pc(2637,109729
fragment_body_end_pc(2647,110002
get_total_linkcount(2661,110399
fragment_get_fragment_delete_mutex(2678,110873
fragment_release_fragment_delete_mutex(2686,111097
    LOOKUP_TRACE 2698,111479
    LOOKUP_TRACE   = 0x001,x0012698,111479
    LOOKUP_BB 2699,111507
    LOOKUP_BB      = 0x002,x0022699,111507
    LOOKUP_PRIVATE 2700,111535
    LOOKUP_PRIVATE = 0x004,x0042700,111535
    LOOKUP_SHARED 2701,111563
    LOOKUP_SHARED  = 0x008,x0082701,111563
fragment_lookup_type(2706,111683
fragment_lookup(2824,117115
fragment_lookup_trace(2834,117458
fragment_lookup_bb(2843,117762
fragment_lookup_shared_bb(2852,118066
fragment_lookup_same_sharing(2862,118396
hashtable_pclookup(2871,118746
fragment_pclookup_by_htable(2892,119381
fragment_pclookup(2961,122035
fragment_pclookup_with_linkstubs(2989,123311
fragment_add(3006,123802
fragment_delete(3082,126849
fragment_record_translation_info(3206,131593
fragment_remove_shared_no_flush(3251,133508
fragment_unlink_for_deletion(3346,137386
update_private_ibt_table_ptrs(3430,141017
update_private_ptr_to_shared_ibt_table(3489,143423
update_all_private_ibt_table_ptrs(3580,147267
fragment_prepare_for_removal_from_table(3617,148766
fragment_prepare_for_removal(3694,152289
fragment_ibl_stat_account(3762,155041
fragment_remove_from_ibt_tables(3789,156086
fragment_remove_ibl_entries_in_region(3840,158506
fragment_remove_all_ibl_in_region(3883,160558
fragment_remove(3904,161454
fragment_replace(3944,163036
fragment_shift_fcache_pointers(3979,164591
fragment_copy_data_fields(4054,167553
dump_lookup_table(4082,168550
is_fragment_index_wraparound(4118,169915
fragment_add_ibl_target_helper(4134,170567
fragment_add_ibl_target(4220,174240
fragment_create_future(4456,186113
fragment_free_future(4477,186931
fragment_create_and_add_future(4487,187337
fragment_delete_future(4501,187910
fragment_delete_future_filter(4518,188544
fragment_delete_futures_in_region(4526,188746
fragment_lookup_future(4543,189558
fragment_lookup_private_future(4561,190230
#define STATS_RCT_ADD(4577,190827
rct_is_global_table(4585,191108
rct_get_table(4592,191306
rct_table_lookup_internal(4604,191616
rct_table_lookup(4627,192420
rct_table_add(4643,192888
rct_table_flush_entry(4733,197604
rct_table_invalidate_range(4766,199000
rct_table_free_internal(4813,200958
rct_table_free(4821,201222
rct_table_copy(4837,201755
rct_table_merge(4846,201950
rct_table_persist_size(4860,202400
rct_table_persist(4873,202750
rct_table_resurrect(4884,203073
rct_module_table_free(4892,203390
rct_module_table_persisted_invalidate(4911,204125
rct_module_table_copy(4967,206962
rct_module_table_set(5023,209381
rct_module_persisted_table_exists(5069,211553
rct_module_live_entries(5082,211933
coarse_persisted_fill_ibl_helper(5095,212309
coarse_persisted_fill_ibl(5154,214893
fragment_after_call_lookup(5209,217377
fragment_add_after_call(5215,217501
fragment_flush_after_call(5227,217841
invalidate_after_call_target_range(5238,218167
rct_ind_branch_target_lookup(5271,219223
rct_add_valid_ind_branch_target(5281,219504
rct_flush_ind_branch_target_entry(5303,220234
invalidate_ind_branch_target_range(5313,220570
fragment_self_write(5336,221283
fragment_overlaps(5388,223692
study_all_hashtables(5422,224810
get_flushtime_last_update(5510,228676
set_flushtime_last_update(5517,228838
set_at_syscall(5524,229009
get_at_syscall(5531,229154
check_flush_queue(5543,229529
is_self_flushing(5621,232949
is_self_allsynch_flushing(5630,233174
is_self_couldbelinking(5641,233534
is_couldbelinking(5652,233913
wait_for_flusher_nolinking(5667,234536
wait_for_flusher_linking(5689,235433
check_safe_for_flush_synch(5713,236387
process_client_flush_requests(5750,237894
enter_nolinking(5785,239476
enter_couldbelinking(5894,243905
enter_threadexit(5935,245616
increment_global_flushtime(5957,246359
flush_fragments_free_futures(6043,250217
flush_fragments_synchall_start(6074,251574
flush_fragments_synchall_end(6233,259868
flush_fragments_synch_unlink_priv(6271,261400
flush_fragments_unlink_shared(6603,277052
flush_invalidate_ibl_shared_target(6711,282068
flush_fragments_end_synch(6752,283630
flush_fragments_in_region_start(6871,288869
flush_fragments_in_region_finish(6912,290455
flush_fragments_and_remove_region(6923,290802
flush_fragments_from_region(6944,291900
invalidate_code_cache(6966,292872
flush_vmvector_regions(6984,293665
fragment_output(7018,295246
init_trace_file(7032,295774
exit_trace_file(7052,296424
#define TRACEBUF_SIZE 7080,297611
#define TRACEBUF_MAKE_ROOM(7082,297639
output_trace_binary(7090,297946
output_trace(7208,302491
profile_fragment_enter(7461,312450
profile_fragment_dispatch(7507,313920
#define NAME_KEY 7549,315780
#define ENTRY_TYPE 7550,315804
static app_to_cache_t a2c_empty 7551,315838
static app_to_cache_t a2c_sentinel 7552,315888
#define ENTRY_TAG(7558,316207
#define ENTRY_EMPTY 7559,316263
#define ENTRY_SENTINEL 7560,316309
#define ENTRY_IS_EMPTY(7561,316358
#define ENTRY_IS_SENTINEL(7562,316419
#define ENTRY_IS_INVALID(7563,316483
#define ENTRIES_ARE_EQUAL(7564,316550
#define HASHTABLE_WHICH_HEAP(7565,316605
#define COARSE_HTLOCK_RANK 7567,316735
#define HTLOCK_RANK 7568,316822
#define HASHTABLE_SUPPORT_PERSISTENCE 7569,316875
#define A2C_ENTRY_IS_EMPTY(7576,317147
#define A2C_ENTRY_IS_SENTINEL(7577,317199
#define A2C_ENTRY_IS_REAL(7578,317266
hashtable_coarse_init_internal_custom(7583,317454
hashtable_coarse_resized_custom(7588,317569
hashtable_coarse_study_custom(7597,317914
hashtable_coarse_free_entry(7604,318116
coarse_lookup_internal(7636,319721
fragment_coarse_htable_create(7655,320389
fragment_coarse_htable_merge_helper(7717,323434
fragment_coarse_htable_merge(7758,325243
study_and_free_coarse_htable(7829,328651
fragment_coarse_free_entry_pclookup_table(7882,330728
fragment_coarse_htable_free(7893,331132
fragment_coarse_num_entries(7916,332012
fragment_coarse_add(7930,332328
fragment_coarse_th_lookup(7988,334850
fragment_coarse_th_unlink_and_add(8022,336225
fragment_coarse_th_add(8054,337618
IF_DEBUG_ELSE(8076,338589
fragment_coarse_lookup_in_unit(8151,342101
fragment_coarse_lookup(8195,344048
fragment_coarse_wrapper(8213,344683
fragment_coarse_lookup_wrapper(8236,345561
fragment_lookup_fine_and_coarse(8254,346121
fragment_lookup_fine_and_coarse_sharing(8289,347572
get_fragment_coarse_info(8311,348458
coarse_is_trace_head_in_own_unit(8328,349057
fragment_coarse_replace(8360,350164
#define PCLOOKUP_LAST_HTABLE_INIT_SIZE 8380,350851
#define PCLOOKUP_LAST_HTABLE_MAX_ENTRIES 8389,351344
typedef struct _pclookup_last_t 8391,351391
    app_pc tag;8392,351425
    cache_pc entry;8393,351441
} pclookup_last_t;8394,351461
pclookup_last_free(8397,351493
fragment_coarse_pclookup(8407,351847
fragment_coarse_create_entry_pclookup_table(8530,357220
fragment_coarse_entry_pclookup(8609,361372
fragment_coarse_entry_freeze(8653,362970
fragment_coarse_unit_freeze(8764,368536
fragment_coarse_htable_persist_size(8873,373436
fragment_coarse_htable_persist(8883,373788
fragment_coarse_htable_resurrect(8893,374128

fragment.h,8351
#define _FRAGMENT_H_ 43,1990
#define FRAG_IS_FUTURE 49,2089
#define FRAG_TRACE_LINKS_SHIFTED 50,2134
#define FRAG_IS_TRACE 51,2179
#define FRAG_IS_TRACE_HEAD 52,2224
#define FRAG_LINKED_OUTGOING 53,2269
#define FRAG_LINKED_INCOMING 54,2314
#define FRAG_CANNOT_DELETE 55,2359
#define FRAG_CANNOT_BE_TRACE 56,2404
#define FRAG_FAKE 63,2731
#define FRAG_WRITES_EFLAGS_6 66,2848
#define FRAG_WRITES_EFLAGS_OF 68,2956
#define FRAG_FCACHE_FREE_LIST 76,3297
#define FRAG_HAS_SYSCALL 78,3343
#define FRAG_TRACE_BUILDING 80,3464
#define FRAG_WAS_DELETED 86,3699
#define FRAG_SELFMOD_SANDBOXED 88,3820
#define FRAG_HAS_DIRECT_CTI 90,3924
#define FRAG_IS_EMPTY_SLOT 92,4047
#define FRAG_IS_EXTRA_VMAREA 94,4170
#define FRAG_IS_EXTRA_VMAREA_INIT 95,4215
# define FRAG_DYNGEN 99,4360
#  define FRAG_DYNGEN_RESTRICTED 102,4497
# define FRAG_HAS_MOV_SEG 110,4691
# define FRAG_32_BIT 115,4796
#define FRAG_MUST_END_TRACE 118,4849
#define FRAG_SHARED 120,4895
#define FRAG_TEMP_PRIVATE 124,5025
#define FRAG_TRACE_OUTPUT 126,5071
#define FRAG_CBR_FALLTHROUGH_SHORT 128,5117
#define FRAG_COARSE_GRAIN 133,5263
#define FRAG_HAS_TRANSLATION_INFO 140,5606
# define FRAG_X86_TO_X64 144,5736
# define FRAG_DO_NOT_SIDELINE 149,5872
#define FRAG_FOLLOWS_FREE_ENTRY 153,5992
#define FUTURE_FLAGS_TRANSFER 164,6557
#define FUTURE_FLAGS_ALLOWED 166,6638
enum { MAX_FRAGMENT_SIZE 170,6864
enum { MAX_FRAGMENT_SIZE = USHRT_MAX 170,6864
struct _fragment_t 176,7058
    app_pc    tag;182,7336
    uint      flags;187,7548
    ushort       size;197,7974
    byte      prefix_size;204,8245
    byte      fcache_extra;205,8333
    cache_pc  start_pc;207,8428
        linkstub_t  *incoming_stubs;incoming_stubs215,8825
        translation_info_t *translation_info;translation_info219,8987
    } in_xlate;220,9033
    fragment_t  *next_vmarea;next_vmarea222,9050
    fragment_t  *prev_vmarea;prev_vmarea223,9128
        fragment_t  *also_vmarea;also_vmarea225,9218
        uint      flushtime;229,9459
    } also;230,9488
    int       id;233,9514
    int num_calls;237,9634
    int num_rets;238,9653
typedef struct _private_fragment_t 248,10000
    fragment_t  f;249,10037
    fragment_t  *next_fcache;next_fcache250,10056
    fragment_t  *prev_fcache;prev_fcache251,10134
} private_fragment_t;252,10212
struct _future_fragment_t 260,10506
    app_pc    tag;261,10534
    uint      flags;262,10611
    linkstub_t  *incoming_stubs;incoming_stubs263,10670
typedef struct _trace_bb_info_t 267,10806
    app_pc tag;268,10840
    uint num_exits;276,11208
} trace_bb_info_t;278,11235
typedef struct _trace_only_t 283,11397
    uint64    count;285,11449
    uint64    total_time;286,11525
    linkcount_type_t count_old_pre;290,11638
    linkcount_type_t count_old_post;291,11674
    trace_bb_info_t *bbs;bbs295,11794
    uint    num_bbs;296,11820
} trace_only_t;297,11841
struct _trace_t 300,11894
    fragment_t     f;301,11912
    trace_only_t t;302,11954
typedef struct _private_trace_t 306,12025
    private_fragment_t  f;307,12059
    trace_only_t        t;308,12086
} private_trace_t;309,12113
#define TRACE_FIELDS(312,12206
#define IS_IBL_TARGET(333,13298
#define HASHTABLE_IBL_OFFSET(339,13607
typedef struct _unprot_ht_statistics_t 345,13877
    hashtable_statistics_t trace_ibl_stats[trace_ibl_stats351,14288
    hashtable_statistics_t bb_ibl_stats[bb_ibl_stats352,14353
    hashtable_statistics_t shared_syscall_hit_stats;356,14501
} unprot_ht_statistics_t;358,14604
typedef struct _fragment_entry_t 364,14768
    app_pc    tag_fragment;365,14803
    cache_pc  start_pc_fragment;366,14880
} fragment_entry_t;367,14962
#define HASHLOOKUP_SENTINEL_START_PC 369,14983
#define FRAG_TABLE_INCLUSIVE_HIERARCHY 380,15457
#define FRAG_TABLE_IBL_TARGETED 382,15612
#define FRAG_TABLE_TARGET_SHARED 384,15760
#define FRAG_TABLE_SHARED 386,15865
#define FRAG_TABLE_PERSISTENT 388,15975
#define FRAG_TABLE_TRACE 390,16083
#define NAME_KEY 394,16270
#define ENTRY_TYPE 395,16296
#define HASHTABLEX_HEADER 397,16373
#define CUSTOM_FIELDS 398,16401
#undef HASHTABLEX_HEADER400,16458
#define NAME_KEY 405,16629
#define ENTRY_TYPE 406,16650
# define HASHTABLE_ENTRY_STATS 409,16759
# define CUSTOM_FIELDS 410,16792
# define CUSTOM_FIELDS 419,17206
#define HASHTABLEX_HEADER 422,17300
#undef HASHTABLEX_HEADER424,17352
#define NAME_KEY 429,17516
#define ENTRY_TYPE 430,17540
#define CUSTOM_FIELDS 432,17611
#define HASHTABLEX_HEADER 433,17644
#undef HASHTABLEX_HEADER435,17696
typedef struct _per_thread_t 457,18801
    ibl_table_t trace_ibt[trace_ibt458,18832
    ibl_table_t bb_ibt[bb_ibt459,18903
    fragment_table_t bb;460,18968
    fragment_table_t trace;461,18993
    fragment_table_t future;462,19021
    mutex_t fragment_delete_mutex;464,19108
    file_t tracefile;466,19150
    bool           could_be_linking;469,19237
    bool           wait_for_unlink;470,19313
    bool           about_to_exit;471,19400
    bool           flush_queue_nonempty;472,19498
    event_t        waiting_for_unlink;473,19587
    event_t        finished_with_unlink;474,19664
    event_t        finished_all_unlink;475,19717
    mutex_t          linking_lock;479,19928
    bool           soon_to_be_linking;480,19963
    uint           flushtime_last_update;482,20091
    bool           at_syscall_at_flush;487,20324
    uint tracedump_num_below_threshold;490,20390
    linkcount_type_t tracedump_count_below_threshold;491,20430
} per_thread_t;493,20491
#define FCACHE_ENTRY_PC(496,20509
#define FCACHE_PREFIX_ENTRY_PC(497,20567
#define FCACHE_IBT_ENTRY_PC(499,20676
#define FRAGMENT_STRUCT_SIZE(504,20874
#define FRAGMENT_EXIT_STUBS(510,21206
#define FRAGMENT_SELFMOD_COPY_SIZE(516,21495
#define FRAGMENT_SELFMOD_COPY_PC(519,21665
#define FRAGMENT_TRANSLATION_INFO_ADDR(523,21840
#define HAS_STORED_TRANSLATION_INFO(530,22215
#define FRAGMENT_TRANSLATION_INFO(534,22393
    FRAGDEL_ALL 615,24563
    FRAGDEL_ALL               = 0x000,x000615,24563
    FRAGDEL_NO_OUTPUT 616,24602
    FRAGDEL_NO_OUTPUT         = 0x001,x001616,24602
    FRAGDEL_NO_UNLINK 617,24641
    FRAGDEL_NO_UNLINK         = 0x002,x002617,24641
    FRAGDEL_NO_HTABLE 618,24680
    FRAGDEL_NO_HTABLE         = 0x004,x004618,24680
    FRAGDEL_NO_FCACHE 619,24719
    FRAGDEL_NO_FCACHE         = 0x008,x008619,24719
    FRAGDEL_NO_HEAP 620,24758
    FRAGDEL_NO_HEAP           = 0x010,x010620,24758
    FRAGDEL_NO_MONITOR 621,24797
    FRAGDEL_NO_MONITOR        = 0x020,x020621,24797
    FRAGDEL_NO_VMAREA 622,24836
    FRAGDEL_NO_VMAREA         = 0x040,x040622,24836
    FRAGDEL_NEED_CHLINK_LOCK 624,24876
    FRAGDEL_NEED_CHLINK_LOCK  = 0x080,x080624,24876
struct _rct_module_table_t 726,28020
    app_pc_table_t *persisted_table;persisted_table727,28049
    app_pc_table_t *live_table;live_table728,28086
    app_pc live_min;733,28333
    app_pc live_max;734,28354
typedef struct _app_to_cache_t 798,30148
    app_pc app;799,30181
    cache_pc cache;804,30422
} app_to_cache_t;805,30442
#define NAME_KEY 808,30539
#define ENTRY_TYPE 809,30563
#define CUSTOM_FIELDS 811,30642
#define HASHTABLEX_HEADER 813,30689
#undef HASHTABLEX_HEADER815,30741
#define PROTECT_FRAGMENT_ENABLED(1102,40618
get_ibl_per_type_statistics(1119,41158
typedef struct _tracedump_file_header_t 1163,42458
    int version;1164,42500
    bool x64;1165,42580
    int linkcount_size;1166,42668
} tracedump_file_header_t;1167,42754
typedef struct _tracedump_trace_header_t 1170,42849
    int frag_id;1171,42892
    app_pc tag;1172,42953
    app_pc cache_start_pc;1173,43028
    int entry_offs;1174,43101
    int num_exits;1175,43171
    int code_size;1176,43238
    uint num_bbs;1177,43312
    bool x64;1178,43403
} tracedump_trace_header_t;1179,43478
#define BB_ORIGIN_HEADER_SIZE 1182,43561
#define SEPARATE_STUB_MAX_SIZE 1185,43689
typedef struct _tracedump_stub_data 1188,43791
    int cti_offs;1189,43829
    app_pc stub_pc;1191,43971
    app_pc target;1192,44031
    bool linked;1193,44079
    int stub_size;1194,44149
        uint count32;1197,44295
        uint64 count64;1198,44354
    } count;1199,44415
    byte stub_code[stub_code1206,44775
} tracedump_stub_data_t;1207,44816
#define STUB_DATA_FIXED_SIZE 1210,44918
